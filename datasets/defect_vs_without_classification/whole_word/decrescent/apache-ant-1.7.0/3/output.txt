/* BuildListener stuff */	WITHOUT_CLASSIFICATION	0.9999490982365659	WITHOUT_CLASSIFICATION	5.090176343423259E-5	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9968522374692185	WITHOUT_CLASSIFICATION	0.003147762530781462	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999521958148259	WITHOUT_CLASSIFICATION	4.7804185174089765E-5	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999521958148259	WITHOUT_CLASSIFICATION	4.7804185174089765E-5	DEFECT
// tell the build it is finished	WITHOUT_CLASSIFICATION	0.9998575110789778	WITHOUT_CLASSIFICATION	1.424889210221475E-4	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9998433823447134	WITHOUT_CLASSIFICATION	1.5661765528668763E-4	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9991820132843175	WITHOUT_CLASSIFICATION	8.179867156824592E-4	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.999965543610981	WITHOUT_CLASSIFICATION	3.445638901890927E-5	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9998599312418243	WITHOUT_CLASSIFICATION	1.400687581758408E-4	DEFECT
// add conditions and more commands as soon as the need arises	WITHOUT_CLASSIFICATION	0.999992688793398	WITHOUT_CLASSIFICATION	7.3112066020850984E-6	DEFECT
// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.	WITHOUT_CLASSIFICATION	0.9966961198469891	WITHOUT_CLASSIFICATION	0.0033038801530108864	DEFECT
// followLinks should be true by default, but if this ever // changes we will need this line.	WITHOUT_CLASSIFICATION	0.9999404959947178	WITHOUT_CLASSIFICATION	5.950400528213099E-5	DEFECT
//testing drive letter search from root:	WITHOUT_CLASSIFICATION	0.9994205909419939	WITHOUT_CLASSIFICATION	5.794090580062256E-4	DEFECT
//if this is our context we assume there must be something here:	WITHOUT_CLASSIFICATION	0.9977727851459406	WITHOUT_CLASSIFICATION	0.002227214854059443	DEFECT
// This path should contain the class files for these testcases:	WITHOUT_CLASSIFICATION	0.9992127721098727	WITHOUT_CLASSIFICATION	7.872278901271795E-4	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9981658772609344	WITHOUT_CLASSIFICATION	0.0018341227390656094	DEFECT
// A special parent loader which is not the system class loader:	WITHOUT_CLASSIFICATION	0.9981658772609344	WITHOUT_CLASSIFICATION	0.0018341227390656094	DEFECT
// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:	WITHOUT_CLASSIFICATION	0.99986716168372	WITHOUT_CLASSIFICATION	1.3283831627992259E-4	DEFECT
// The intended result URLs:	WITHOUT_CLASSIFICATION	0.9999310056632534	WITHOUT_CLASSIFICATION	6.899433674661564E-5	DEFECT
// JDK 1.4: return Collections.list(e);	WITHOUT_CLASSIFICATION	0.999969156563518	WITHOUT_CLASSIFICATION	3.084343648192525E-5	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9996272727422445	WITHOUT_CLASSIFICATION	3.727272577554562E-4	DEFECT
// ensure <tstamp>'s new prefix attribute is working	WITHOUT_CLASSIFICATION	0.9997020911689707	WITHOUT_CLASSIFICATION	2.979088310292918E-4	DEFECT
// ensure <tstamp> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999597560559671	WITHOUT_CLASSIFICATION	4.0243944032849404E-5	DEFECT
// ensure <condition> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999597560559671	WITHOUT_CLASSIFICATION	4.0243944032849404E-5	DEFECT
// ensure <checksum> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999597560559671	WITHOUT_CLASSIFICATION	4.0243944032849404E-5	DEFECT
// ensure <exec> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999597560559671	WITHOUT_CLASSIFICATION	4.0243944032849404E-5	DEFECT
// ensure <pathconvert> follows the immutability rule	WITHOUT_CLASSIFICATION	0.9999597560559671	WITHOUT_CLASSIFICATION	4.0243944032849404E-5	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9991912406620704	WITHOUT_CLASSIFICATION	8.087593379295219E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999215547647078	WITHOUT_CLASSIFICATION	7.844523529216115E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999258136986386	WITHOUT_CLASSIFICATION	7.418630136134412E-5	DEFECT
/*             * drive letters are not used, just to be considered as normal             * part of a name             */	WITHOUT_CLASSIFICATION	0.9999739256883788	WITHOUT_CLASSIFICATION	2.6074311621198875E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.99998088771188	WITHOUT_CLASSIFICATION	1.911228812002175E-5	DEFECT
// fail, because buildfile contains two targets with the same name	WITHOUT_CLASSIFICATION	0.9999801426647432	WITHOUT_CLASSIFICATION	1.9857335256774138E-5	DEFECT
// overriding target from imported buildfile is allowed	WITHOUT_CLASSIFICATION	0.999513384380267	WITHOUT_CLASSIFICATION	4.866156197329254E-4	DEFECT
// the buildfile to use	WITHOUT_CLASSIFICATION	0.9997441933173399	WITHOUT_CLASSIFICATION	2.558066826601161E-4	DEFECT
// call a target	WITHOUT_CLASSIFICATION	0.9999007213622855	WITHOUT_CLASSIFICATION	9.927863771443753E-5	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// override allowed on <available>	WITHOUT_CLASSIFICATION	0.9996272727422445	WITHOUT_CLASSIFICATION	3.727272577554562E-4	DEFECT
// ignore event	WITHOUT_CLASSIFICATION	0.9999198049672969	WITHOUT_CLASSIFICATION	8.019503270309278E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.99994966124042	WITHOUT_CLASSIFICATION	5.033875958002702E-5	DEFECT
// Check it's a read-only map.	WITHOUT_CLASSIFICATION	0.99994966124042	WITHOUT_CLASSIFICATION	5.033875958002702E-5	DEFECT
/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */	WITHOUT_CLASSIFICATION	0.9999317850639121	WITHOUT_CLASSIFICATION	6.821493608789834E-5	DEFECT
// addConfigured(Hashtable) should come before addConfigured(Map)	WITHOUT_CLASSIFICATION	0.9993520272511504	WITHOUT_CLASSIFICATION	6.47972748849553E-4	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999220207952543	WITHOUT_CLASSIFICATION	7.797920474573583E-5	DEFECT
// INVALID extension point	WITHOUT_CLASSIFICATION	0.9999220207952543	WITHOUT_CLASSIFICATION	7.797920474573583E-5	DEFECT
// Valid extension point	WITHOUT_CLASSIFICATION	0.9999220207952543	WITHOUT_CLASSIFICATION	7.797920474573583E-5	DEFECT
// Valid extension point, more derived than Map above, but *after* it!	WITHOUT_CLASSIFICATION	0.9992461402871796	WITHOUT_CLASSIFICATION	7.538597128202859E-4	DEFECT
// IntrospectionHelperTest	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// make sure we do not get a NPE	WITHOUT_CLASSIFICATION	0.9994288057584516	WITHOUT_CLASSIFICATION	5.711942415484806E-4	DEFECT
// use an anonymous subclass since ProjectComponent is abstract	WITHOUT_CLASSIFICATION	0.9997776611103906	WITHOUT_CLASSIFICATION	2.223388896094946E-4	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999857030710824	WITHOUT_CLASSIFICATION	1.4296928917602403E-4	DEFECT
/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/	WITHOUT_CLASSIFICATION	0.9997903428995876	WITHOUT_CLASSIFICATION	2.0965710041246472E-4	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999496007084522	WITHOUT_CLASSIFICATION	5.0399291547889404E-5	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999496007084522	WITHOUT_CLASSIFICATION	5.0399291547889404E-5	DEFECT
// check build.compiler provides defaults	WITHOUT_CLASSIFICATION	0.9998842040879826	WITHOUT_CLASSIFICATION	1.1579591201738971E-4	DEFECT
// setUserProperty to override system properties	WITHOUT_CLASSIFICATION	0.9995732485681397	WITHOUT_CLASSIFICATION	4.26751431860411E-4	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9998736346725917	WITHOUT_CLASSIFICATION	1.2636532740824868E-4	DEFECT
// check attribute overrides build.compiler	WITHOUT_CLASSIFICATION	0.9998736346725917	WITHOUT_CLASSIFICATION	1.2636532740824868E-4	DEFECT
// some database keys, see #getProperties(int)	WITHOUT_CLASSIFICATION	0.9999552493763562	WITHOUT_CLASSIFICATION	4.475062364383738E-5	DEFECT
// keys used in properties.	WITHOUT_CLASSIFICATION	0.9999703272799727	WITHOUT_CLASSIFICATION	2.9672720027248317E-5	DEFECT
//neither	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
// simple test to ensure that the caching does work...	WITHOUT_CLASSIFICATION	0.9998355508572998	WITHOUT_CLASSIFICATION	1.644491427002467E-4	DEFECT
// 2nd run..	WITHOUT_CLASSIFICATION	0.9999849746814756	WITHOUT_CLASSIFICATION	1.5025318524355127E-5	DEFECT
// the driver must still be cached.	WITHOUT_CLASSIFICATION	0.9998962685428249	WITHOUT_CLASSIFICATION	1.0373145717510691E-4	DEFECT
// look for the driver path...	WITHOUT_CLASSIFICATION	0.9999608479405026	WITHOUT_CLASSIFICATION	3.915205949743595E-5	DEFECT
//file time checks for java1.2+	WITHOUT_CLASSIFICATION	0.9997003863260172	WITHOUT_CLASSIFICATION	2.996136739827733E-4	DEFECT
//only test on java1.5+	WITHOUT_CLASSIFICATION	0.9997969477700415	WITHOUT_CLASSIFICATION	2.0305222995858126E-4	DEFECT
// AntLikeTasksAtTopLevelTest	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//file length checks rely on touch generating a zero byte file	WITHOUT_CLASSIFICATION	0.9996298002329426	WITHOUT_CLASSIFICATION	3.701997670575017E-4	DEFECT
// no-op: not a real business error	WITHOUT_CLASSIFICATION	0.9983772675729624	WITHOUT_CLASSIFICATION	0.0016227324270375353	DEFECT
//dont look for much text here as it is vendor and version dependent	WITHOUT_CLASSIFICATION	0.9992825781362613	WITHOUT_CLASSIFICATION	7.174218637386944E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999452969322838	WITHOUT_CLASSIFICATION	5.470306771617231E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999452969322838	WITHOUT_CLASSIFICATION	5.470306771617231E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 11100     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 16213     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 38973     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 21996     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 10504     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*     * PR 20969     */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.	WITHOUT_CLASSIFICATION	0.9999212975616242	WITHOUT_CLASSIFICATION	7.870243837578852E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999394210996951	WITHOUT_CLASSIFICATION	6.05789003049505E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999394210996951	WITHOUT_CLASSIFICATION	6.05789003049505E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999394210996951	WITHOUT_CLASSIFICATION	6.05789003049505E-5	DEFECT
// should get no output at all	WITHOUT_CLASSIFICATION	0.9999394210996951	WITHOUT_CLASSIFICATION	6.05789003049505E-5	DEFECT
//this call should succeed as unless overrides if	WITHOUT_CLASSIFICATION	0.9993807977340795	WITHOUT_CLASSIFICATION	6.192022659205128E-4	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999836319522	WITHOUT_CLASSIFICATION	1.6368047799972144E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999836319522	WITHOUT_CLASSIFICATION	1.6368047799972144E-5	DEFECT
// and a little shorter	WITHOUT_CLASSIFICATION	0.9999488871643533	WITHOUT_CLASSIFICATION	5.1112835646745514E-5	DEFECT
// test that the watchdog ends the process	WITHOUT_CLASSIFICATION	0.9999836319522	WITHOUT_CLASSIFICATION	1.6368047799972144E-5	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999723067602371	WITHOUT_CLASSIFICATION	2.7693239762903966E-5	DEFECT
// Should fail since a recursion will occur...	WITHOUT_CLASSIFICATION	0.9998823279715547	WITHOUT_CLASSIFICATION	1.1767202844538994E-4	DEFECT
// a rather convoluted equals() test	WITHOUT_CLASSIFICATION	0.9998150590336689	WITHOUT_CLASSIFICATION	1.8494096633113322E-4	DEFECT
// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());	WITHOUT_CLASSIFICATION	0.9998924327718424	WITHOUT_CLASSIFICATION	1.0756722815757806E-4	DEFECT
// allow this as imported in targets are only tested when a target is run	WITHOUT_CLASSIFICATION	0.9995483002321343	WITHOUT_CLASSIFICATION	4.5169976786579115E-4	DEFECT
// deactivate this test as imports within targets are not allowed	WITHOUT_CLASSIFICATION	0.9996012764793197	WITHOUT_CLASSIFICATION	3.9872352068027073E-4	DEFECT
// Running on Windows or something, so skip it.	WITHOUT_CLASSIFICATION	0.9999529791400599	WITHOUT_CLASSIFICATION	4.702085994014235E-5	DEFECT
// remove log file from testSpawn	WITHOUT_CLASSIFICATION	0.9999002488624527	WITHOUT_CLASSIFICATION	9.975113754733023E-5	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9992081886974146	WITHOUT_CLASSIFICATION	7.918113025852998E-4	DEFECT
// let's be nice with the next generation of developers	WITHOUT_CLASSIFICATION	0.9963471496578322	WITHOUT_CLASSIFICATION	0.0036528503421678783	DEFECT
//executeTarget("setup"); //commented out for performance while target is empty	WITHOUT_CLASSIFICATION	0.9994286809213163	WITHOUT_CLASSIFICATION	5.713190786837149E-4	DEFECT
// target // file // exptected string	WITHOUT_CLASSIFICATION	0.9999302149120028	WITHOUT_CLASSIFICATION	6.978508799716016E-5	DEFECT
// END class ManifestClassPathTest	WITHOUT_CLASSIFICATION	0.9998414503117008	WITHOUT_CLASSIFICATION	1.585496882992252E-4	DEFECT
//      assertTrue("return code is invalid: " + retCode, retCode!=0);	WITHOUT_CLASSIFICATION	0.9995574379748466	WITHOUT_CLASSIFICATION	4.425620251533259E-4	DEFECT
// test a process that runs and failed	WITHOUT_CLASSIFICATION	0.9999840793673619	WITHOUT_CLASSIFICATION	1.5920632638063284E-5	DEFECT
// process should abort	WITHOUT_CLASSIFICATION	0.9999303863951362	WITHOUT_CLASSIFICATION	6.961360486383582E-5	DEFECT
// I assume that starting this takes less than TIME_OUT/2 ms...	WITHOUT_CLASSIFICATION	0.9986320562968	WITHOUT_CLASSIFICATION	0.0013679437032000777	DEFECT
// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout	WITHOUT_CLASSIFICATION	0.9982555307775254	WITHOUT_CLASSIFICATION	0.0017444692224747411	DEFECT
// now stop the watchdog.	WITHOUT_CLASSIFICATION	0.999964750525139	WITHOUT_CLASSIFICATION	3.524947486093718E-5	DEFECT
// wait for the thread to die, should be the end of the process	WITHOUT_CLASSIFICATION	0.999737632553007	WITHOUT_CLASSIFICATION	2.62367446993109E-4	DEFECT
// process should be dead and well finished	WITHOUT_CLASSIFICATION	0.9999030948841504	WITHOUT_CLASSIFICATION	9.690511584955557E-5	DEFECT
// We have to compare the decompressed content instead:	WITHOUT_CLASSIFICATION	0.9992322544448945	WITHOUT_CLASSIFICATION	7.677455551053587E-4	DEFECT
//no point in setting a message	WITHOUT_CLASSIFICATION	0.9997964040669838	WITHOUT_CLASSIFICATION	2.0359593301633438E-4	DEFECT
// this is guaranteed by FileUtils#createTempFile	WITHOUT_CLASSIFICATION	0.9992081886974146	WITHOUT_CLASSIFICATION	7.918113025852998E-4	DEFECT
// make the spawned process run 4 seconds	WITHOUT_CLASSIFICATION	0.9998987795109556	WITHOUT_CLASSIFICATION	1.0122048904443285E-4	DEFECT
// this loop runs parallel to the build	WITHOUT_CLASSIFICATION	0.9997922821125309	WITHOUT_CLASSIFICATION	2.07717887469129E-4	DEFECT
// security	WITHOUT_CLASSIFICATION	0.999935419832973	WITHOUT_CLASSIFICATION	6.45801670270378E-5	DEFECT
// time of the build in milli seconds	WITHOUT_CLASSIFICATION	0.9998982752598967	WITHOUT_CLASSIFICATION	1.0172474010330432E-4	DEFECT
// Nothing specified -> Fail	WITHOUT_CLASSIFICATION	0.999970382883797	WITHOUT_CLASSIFICATION	2.9617116202968673E-5	DEFECT
// Only property specified -> Fail	WITHOUT_CLASSIFICATION	0.9997381308369551	WITHOUT_CLASSIFICATION	2.618691630449216E-4	DEFECT
// Only file specified -> Fail	WITHOUT_CLASSIFICATION	0.999963443942423	WITHOUT_CLASSIFICATION	3.655605757703157E-5	DEFECT
// file does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9996753789146599	WITHOUT_CLASSIFICATION	3.2462108534016325E-4	DEFECT
// resource doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9996624274750944	WITHOUT_CLASSIFICATION	3.375725249056054E-4	DEFECT
// resource does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9996076848047339	WITHOUT_CLASSIFICATION	3.9231519526616474E-4	DEFECT
// class doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.9996683572413189	WITHOUT_CLASSIFICATION	3.316427586812045E-4	DEFECT
// class does exist -> property 'test' == 'true'	WITHOUT_CLASSIFICATION	0.9996145758046443	WITHOUT_CLASSIFICATION	3.85424195355598E-4	DEFECT
// All three specified but class missing -> null	WITHOUT_CLASSIFICATION	0.9999191334035797	WITHOUT_CLASSIFICATION	8.086659642028022E-5	DEFECT
// Specified property-name is "" -> true	WITHOUT_CLASSIFICATION	0.9998827980706909	WITHOUT_CLASSIFICATION	1.172019293091946E-4	DEFECT
// Specified file is "" -> invalid files do not exist	WITHOUT_CLASSIFICATION	0.999351810610667	WITHOUT_CLASSIFICATION	6.481893893329566E-4	DEFECT
// Specified file is "" actually a directory, so it should pass	WITHOUT_CLASSIFICATION	0.9972618675964243	WITHOUT_CLASSIFICATION	0.002738132403575638	DEFECT
// Specified resource is "" -> can such a thing exist?	WITHOUT_CLASSIFICATION	0.9998374090613847	WITHOUT_CLASSIFICATION	1.6259093861534232E-4	DEFECT
/*     * returns non null IBM JDK 1.3 Linux     */	WITHOUT_CLASSIFICATION	0.9998660026136119	WITHOUT_CLASSIFICATION	1.3399738638803483E-4	DEFECT
// Specified dir is "" -> this is the current directory and should // always exist	WITHOUT_CLASSIFICATION	0.9998966469975398	WITHOUT_CLASSIFICATION	1.0335300246027414E-4	DEFECT
// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...	WITHOUT_CLASSIFICATION	0.9992230695517097	WITHOUT_CLASSIFICATION	7.769304482902745E-4	DEFECT
// Specified dir is "../this_dir_should_never_exist" -> null	WITHOUT_CLASSIFICATION	0.9997549445179493	WITHOUT_CLASSIFICATION	2.450554820507245E-4	DEFECT
// Invalid type specified	WITHOUT_CLASSIFICATION	0.9999751709920479	WITHOUT_CLASSIFICATION	2.4829007952042378E-5	DEFECT
// Core class that exists in system classpath is ignored	WITHOUT_CLASSIFICATION	0.9996284684532737	WITHOUT_CLASSIFICATION	3.7153154672634543E-4	DEFECT
// Core class that exists in system classpath is not ignored with ignoresystemclass="false"	WITHOUT_CLASSIFICATION	0.9962278808379447	WITHOUT_CLASSIFICATION	0.0037721191620553275	DEFECT
// Core class that exists in system classpath is not ignored with default ignoresystemclasses value	WITHOUT_CLASSIFICATION	0.998879561295849	WITHOUT_CLASSIFICATION	0.0011204387041510197	DEFECT
// Class is found in specified classpath	WITHOUT_CLASSIFICATION	0.9996259570033127	WITHOUT_CLASSIFICATION	3.740429966874108E-4	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9977337976229369	WITHOUT_CLASSIFICATION	0.0022662023770631525	DEFECT
// test when file begins with basedir twice	WITHOUT_CLASSIFICATION	0.9998691215460241	WITHOUT_CLASSIFICATION	1.3087845397586739E-4	DEFECT
// test for searching parents	WITHOUT_CLASSIFICATION	0.9997795873482307	WITHOUT_CLASSIFICATION	2.204126517692759E-4	DEFECT
// test for not searching parents	WITHOUT_CLASSIFICATION	0.9967337999952867	WITHOUT_CLASSIFICATION	0.0032662000047134435	DEFECT
// Output the default excludes	WITHOUT_CLASSIFICATION	0.9999893998786135	WITHOUT_CLASSIFICATION	1.0600121386660416E-5	DEFECT
// adding something to the excludes'	WITHOUT_CLASSIFICATION	0.9998366046978642	WITHOUT_CLASSIFICATION	1.633953021358342E-4	DEFECT
// removing something from the defaults	WITHOUT_CLASSIFICATION	0.9998851609794	WITHOUT_CLASSIFICATION	1.1483902060004016E-4	DEFECT
//CVS missing	WITHOUT_CLASSIFICATION	0.9997070099442363	WITHOUT_CLASSIFICATION	2.929900557636375E-4	DEFECT
// target must be specified	WITHOUT_CLASSIFICATION	0.9999723067602371	WITHOUT_CLASSIFICATION	2.7693239762903966E-5	DEFECT
// We try to delete the directory created in CopydirTest	WITHOUT_CLASSIFICATION	0.9999912272953467	WITHOUT_CLASSIFICATION	8.772704653356447E-6	DEFECT
// check that both arrays have the same size	WITHOUT_CLASSIFICATION	0.9999313792572169	WITHOUT_CLASSIFICATION	6.862074278306204E-5	DEFECT
//instance variable to allow cleanup	WITHOUT_CLASSIFICATION	0.9993242828409467	WITHOUT_CLASSIFICATION	6.757171590533361E-4	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..	WITHOUT_CLASSIFICATION	0.9978435192086397	WITHOUT_CLASSIFICATION	0.00215648079136025	DEFECT
// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.	WITHOUT_CLASSIFICATION	0.9992419365819409	WITHOUT_CLASSIFICATION	7.580634180590395E-4	DEFECT
//printProperties(p.getProperties());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Every key identified by the Properties must have been loaded.	WITHOUT_CLASSIFICATION	0.9999304538081277	WITHOUT_CLASSIFICATION	6.954619187232737E-5	DEFECT
// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.	WITHOUT_CLASSIFICATION	0.9997782746016063	WITHOUT_CLASSIFICATION	2.2172539839359688E-4	DEFECT
// Substitute .xml with .properties	WITHOUT_CLASSIFICATION	0.9997752259169892	WITHOUT_CLASSIFICATION	2.247740830107243E-4	DEFECT
// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory	WITHOUT_CLASSIFICATION	0.9977770485955878	WITHOUT_CLASSIFICATION	0.002222951404412095	DEFECT
// Output an empty String	WITHOUT_CLASSIFICATION	0.999983350806849	WITHOUT_CLASSIFICATION	1.6649193150995394E-5	DEFECT
// Output 'OUTPUT OF ECHO'	WITHOUT_CLASSIFICATION	0.9999182270144379	WITHOUT_CLASSIFICATION	8.177298556202128E-5	DEFECT
/*          * @param message         */	WITHOUT_CLASSIFICATION	0.9999544267178188	WITHOUT_CLASSIFICATION	4.557328218130295E-5	DEFECT
// make sure that the parsing does not break	WITHOUT_CLASSIFICATION	0.9919423902631964	WITHOUT_CLASSIFICATION	0.008057609736803605	DEFECT
// where the name contains <>	WITHOUT_CLASSIFICATION	0.9999794562665392	WITHOUT_CLASSIFICATION	2.0543733460744613E-5	DEFECT
// where only an address is supplied	WITHOUT_CLASSIFICATION	0.9993139347271884	WITHOUT_CLASSIFICATION	6.860652728116049E-4	DEFECT
// Tests property element, using XML schema properties as an example.	WITHOUT_CLASSIFICATION	0.9998552748883437	WITHOUT_CLASSIFICATION	1.4472511165638234E-4	DEFECT
// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g	WITHOUT_CLASSIFICATION	0.9997285771248703	WITHOUT_CLASSIFICATION	2.714228751297513E-4	DEFECT
// execute	WITHOUT_CLASSIFICATION	0.9997662727596625	WITHOUT_CLASSIFICATION	2.3372724033752672E-4	DEFECT
// override some of the code so we can test the handling of the // return code only.	WITHOUT_CLASSIFICATION	0.9999988503997926	WITHOUT_CLASSIFICATION	1.149600207397854E-6	DEFECT
// ask ant to update the properties...	WITHOUT_CLASSIFICATION	0.9999339603327156	WITHOUT_CLASSIFICATION	6.603966728435865E-5	DEFECT
// to override	WITHOUT_CLASSIFICATION	0.9999155725924078	WITHOUT_CLASSIFICATION	8.442740759217313E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999831632839449	WITHOUT_CLASSIFICATION	1.6836716055035256E-5	DEFECT
// just to be sure	WITHOUT_CLASSIFICATION	0.9999831632839449	WITHOUT_CLASSIFICATION	1.6836716055035256E-5	DEFECT
// read in the file	WITHOUT_CLASSIFICATION	0.9999682590113349	WITHOUT_CLASSIFICATION	3.1740988664996236E-5	DEFECT
// found the property we set - it's good.	WITHOUT_CLASSIFICATION	0.9999263038209341	WITHOUT_CLASSIFICATION	7.369617906590919E-5	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9997783257132283	WITHOUT_CLASSIFICATION	2.2167428677163304E-4	DEFECT
// else	WITHOUT_CLASSIFICATION	0.9997783257132283	WITHOUT_CLASSIFICATION	2.2167428677163304E-4	DEFECT
// ReplaceRegExpTest	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// test for 10 consecutives transform	WITHOUT_CLASSIFICATION	0.9998627890914612	WITHOUT_CLASSIFICATION	1.3721090853874627E-4	DEFECT
//java keywords are not special	WITHOUT_CLASSIFICATION	0.9983239984823521	WITHOUT_CLASSIFICATION	0.001676001517647997	DEFECT
//underscores go in front of invalid start chars	WITHOUT_CLASSIFICATION	0.9995787730344362	WITHOUT_CLASSIFICATION	4.21226965563819E-4	DEFECT
//underscores at the front get an underscore too	WITHOUT_CLASSIFICATION	0.999819889033881	WITHOUT_CLASSIFICATION	1.801109661190585E-4	DEFECT
//non java char at start => underscore then the the _hex value	WITHOUT_CLASSIFICATION	0.9995048433114121	WITHOUT_CLASSIFICATION	4.951566885879427E-4	DEFECT
//and paths are stripped	WITHOUT_CLASSIFICATION	0.9997987034519024	WITHOUT_CLASSIFICATION	2.0129654809763483E-4	DEFECT
/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */	WITHOUT_CLASSIFICATION	0.9984542167468277	WITHOUT_CLASSIFICATION	0.0015457832531723384	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9998923451048726	WITHOUT_CLASSIFICATION	1.0765489512746073E-4	DEFECT
// avoid endless loop	WITHOUT_CLASSIFICATION	0.9999739390017972	WITHOUT_CLASSIFICATION	2.606099820277389E-5	DEFECT
// those would fail because of the way BuildFileTest captures output	WITHOUT_CLASSIFICATION	0.997498249381306	WITHOUT_CLASSIFICATION	0.002501750618693923	DEFECT
//To change body of implemented methods use File | Settings | File Templates.	WITHOUT_CLASSIFICATION	0.9995556603375884	WITHOUT_CLASSIFICATION	4.443396624116822E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// father and child pattern test	WITHOUT_CLASSIFICATION	0.999965543610981	WITHOUT_CLASSIFICATION	3.445638901890927E-5	DEFECT
// redo the test, but the 2 include patterns are inverted	WITHOUT_CLASSIFICATION	0.9998599312418243	WITHOUT_CLASSIFICATION	1.400687581758408E-4	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999452969322838	WITHOUT_CLASSIFICATION	5.470306771617231E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9990011231358513	WITHOUT_CLASSIFICATION	9.988768641486523E-4	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// mandatory constructor	WITHOUT_CLASSIFICATION	0.9999014921699956	WITHOUT_CLASSIFICATION	9.850783000445695E-5	DEFECT
// check that a suite generates no errors	WITHOUT_CLASSIFICATION	0.9999875341779929	WITHOUT_CLASSIFICATION	1.2465822007074789E-5	DEFECT
// check that having no suite generates no errors	WITHOUT_CLASSIFICATION	0.999990873788681	WITHOUT_CLASSIFICATION	9.126211318912175E-6	DEFECT
// check that something which is not a testcase generates no errors // at first even though this is incorrect.	WITHOUT_CLASSIFICATION	0.9998221058385963	WITHOUT_CLASSIFICATION	1.778941614036962E-4	DEFECT
// check that an invalid suite generates an error.	WITHOUT_CLASSIFICATION	0.9999678586021045	WITHOUT_CLASSIFICATION	3.2141397895488065E-5	DEFECT
// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());	WITHOUT_CLASSIFICATION	0.9998879738206099	WITHOUT_CLASSIFICATION	1.1202617939007834E-4	DEFECT
// On junit3 this is a FAILURE, on junit4 this is an ERROR	WITHOUT_CLASSIFICATION	0.9990011231358513	WITHOUT_CLASSIFICATION	9.988768641486523E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9996858480024577	WITHOUT_CLASSIFICATION	3.141519975422588E-4	DEFECT
// check that an exception in the constructor is noticed	WITHOUT_CLASSIFICATION	0.9998698316722947	WITHOUT_CLASSIFICATION	1.3016832770524557E-4	DEFECT
// the test runner that wrap the dummy formatter that interests us	WITHOUT_CLASSIFICATION	0.9999169238803332	WITHOUT_CLASSIFICATION	8.307611966691005E-5	DEFECT
// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.	WITHOUT_CLASSIFICATION	0.9989292603989518	WITHOUT_CLASSIFICATION	0.0010707396010482507	DEFECT
// dummy formatter just to catch the error	WITHOUT_CLASSIFICATION	0.9999579251438059	WITHOUT_CLASSIFICATION	4.2074856194132476E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999452969322838	WITHOUT_CLASSIFICATION	5.470306771617231E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999452969322838	WITHOUT_CLASSIFICATION	5.470306771617231E-5	DEFECT
// byte - byte compare	WITHOUT_CLASSIFICATION	0.9998923451048726	WITHOUT_CLASSIFICATION	1.0765489512746073E-4	DEFECT
/*          * @param event the build event that is being logged.         */	WITHOUT_CLASSIFICATION	0.9996858480024577	WITHOUT_CLASSIFICATION	3.141519975422588E-4	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999321823951929	WITHOUT_CLASSIFICATION	6.781760480704736E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999321823951929	WITHOUT_CLASSIFICATION	6.781760480704736E-5	DEFECT
// get the fileset and its basedir	WITHOUT_CLASSIFICATION	0.9999321823951929	WITHOUT_CLASSIFICATION	6.781760480704736E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a SOSGet task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a SOSCheckin task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a SOSCheckout task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a sosCheckout task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9998951594609884	WITHOUT_CLASSIFICATION	1.0484053901161694E-4	DEFECT
// give it some time to display	WITHOUT_CLASSIFICATION	0.9999060364711525	WITHOUT_CLASSIFICATION	9.396352884755804E-5	DEFECT
// Set up a VSSGet task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSLabel task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a Timestamp	WITHOUT_CLASSIFICATION	0.999957639932943	WITHOUT_CLASSIFICATION	4.236006705695667E-5	DEFECT
// Get today's date	WITHOUT_CLASSIFICATION	0.9999595899934581	WITHOUT_CLASSIFICATION	4.041000654179837E-5	DEFECT
// Set up a VSSCheckIn task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSCheckOut task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSAdd task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSCp task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Set up a VSSCreate task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// Count the number of empty strings	WITHOUT_CLASSIFICATION	0.9998357595803313	WITHOUT_CLASSIFICATION	1.642404196686271E-4	DEFECT
// ran Ant tests with -ea and this would fail spuriously	WITHOUT_CLASSIFICATION	0.9423360503590457	WITHOUT_CLASSIFICATION	0.057663949640954386	DEFECT
// now to the expected failures	WITHOUT_CLASSIFICATION	0.9998595953739379	WITHOUT_CLASSIFICATION	1.404046260620686E-4	DEFECT
// catalog <--> catalog	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// catalog1 --> catalog2 --> catalog3 --> catalog1	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
// catalog2 --> catalog1 --> catalog	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998867487039257	WITHOUT_CLASSIFICATION	1.1325129607420712E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9998854199545977	WITHOUT_CLASSIFICATION	1.1458004540236144E-4	DEFECT
// check that reference zipfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9997889747959803	WITHOUT_CLASSIFICATION	2.1102520401961746E-4	DEFECT
// check that a reference zipfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999635078201546	WITHOUT_CLASSIFICATION	3.64921798453796E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998867487039257	WITHOUT_CLASSIFICATION	1.1325129607420712E-4	DEFECT
// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //	WITHOUT_CLASSIFICATION	0.9999316776925946	WITHOUT_CLASSIFICATION	6.832230740541581E-5	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998867487039257	WITHOUT_CLASSIFICATION	1.1325129607420712E-4	DEFECT
//check that fullpath and prefix are incompatible	WITHOUT_CLASSIFICATION	0.9998854199545977	WITHOUT_CLASSIFICATION	1.1458004540236144E-4	DEFECT
// try a netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999757431403835	WITHOUT_CLASSIFICATION	2.4256859616505486E-5	DEFECT
// actually tests constructor as well as setPath	WITHOUT_CLASSIFICATION	0.9998062236317566	WITHOUT_CLASSIFICATION	1.9377636824337996E-4	DEFECT
// check that reference tarfilesets cannot have specific attributes	WITHOUT_CLASSIFICATION	0.9997889747959803	WITHOUT_CLASSIFICATION	2.1102520401961746E-4	DEFECT
// try a multi-part netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.999983579318086	WITHOUT_CLASSIFICATION	1.6420681913877587E-5	DEFECT
// try a multi-part netware-volume length path, see how it is handled	WITHOUT_CLASSIFICATION	0.9999757431403835	WITHOUT_CLASSIFICATION	2.4256859616505486E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
// try a netware-volume length path w/forward slash, see how it is handled	WITHOUT_CLASSIFICATION	0.999983579318086	WITHOUT_CLASSIFICATION	1.6420681913877587E-5	DEFECT
// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)	WITHOUT_CLASSIFICATION	0.9999026547082742	WITHOUT_CLASSIFICATION	9.73452917257958E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 --> dummy1	WITHOUT_CLASSIFICATION	0.9998452166560226	WITHOUT_CLASSIFICATION	1.547833439774489E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 (with Path "/a")	WITHOUT_CLASSIFICATION	0.9998453763833758	WITHOUT_CLASSIFICATION	1.5462361662417961E-4	DEFECT
// This class acts as a custom Ant task also // and uses these variables/methods in that mode	WITHOUT_CLASSIFICATION	0.9996683952039004	WITHOUT_CLASSIFICATION	3.316047960995888E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999202089033502	WITHOUT_CLASSIFICATION	7.979109664976832E-5	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).	WITHOUT_CLASSIFICATION	0.9999202089033502	WITHOUT_CLASSIFICATION	7.979109664976832E-5	DEFECT
// Grant extra permissions to read and write the user.* properties and read to the // java.home property	WITHOUT_CLASSIFICATION	0.9998682793855697	WITHOUT_CLASSIFICATION	1.3172061443024878E-4	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")	WITHOUT_CLASSIFICATION	0.9998969258324021	WITHOUT_CLASSIFICATION	1.0307416759792102E-4	DEFECT
// check that a reference tarfileset gets the same attributes as the original	WITHOUT_CLASSIFICATION	0.9999635078201546	WITHOUT_CLASSIFICATION	3.64921798453796E-5	DEFECT
// was expected	WITHOUT_CLASSIFICATION	0.9999398945311102	WITHOUT_CLASSIFICATION	6.0105468889809475E-5	DEFECT
// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.	WITHOUT_CLASSIFICATION	0.9999942663591618	WITHOUT_CLASSIFICATION	5.73364083818258E-6	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999484069208293	WITHOUT_CLASSIFICATION	5.1593079170654305E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999484069208293	WITHOUT_CLASSIFICATION	5.1593079170654305E-5	DEFECT
// Was expected, test passes	WITHOUT_CLASSIFICATION	0.9999484069208293	WITHOUT_CLASSIFICATION	5.1593079170654305E-5	DEFECT
/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */	WITHOUT_CLASSIFICATION	0.9947424127054676	WITHOUT_CLASSIFICATION	0.005257587294532336	DEFECT
//        assertEquals("with classpath", "java", s[0]);	WITHOUT_CLASSIFICATION	0.9996653371628017	WITHOUT_CLASSIFICATION	3.346628371982909E-4	DEFECT
// only the second iteration would pass because of PR 27218	WITHOUT_CLASSIFICATION	0.9737351929333996	WITHOUT_CLASSIFICATION	0.026264807066600383	DEFECT
//mix element types	WITHOUT_CLASSIFICATION	0.9999238192484068	WITHOUT_CLASSIFICATION	7.618075159323483E-5	DEFECT
//implicit composite	WITHOUT_CLASSIFICATION	0.999894667045614	WITHOUT_CLASSIFICATION	1.0533295438590083E-4	DEFECT
// a --> b --> c --- def //               \-- ghi	WITHOUT_CLASSIFICATION	0.9998220321766524	WITHOUT_CLASSIFICATION	1.779678233474451E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //	WITHOUT_CLASSIFICATION	0.9998959166184297	WITHOUT_CLASSIFICATION	1.0408338157034722E-4	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //	WITHOUT_CLASSIFICATION	0.9999713200271311	WITHOUT_CLASSIFICATION	2.867997286885203E-5	DEFECT
// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid	WITHOUT_CLASSIFICATION	0.9991889779186467	WITHOUT_CLASSIFICATION	8.11022081353353E-4	DEFECT
// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //	WITHOUT_CLASSIFICATION	0.9998508473294271	WITHOUT_CLASSIFICATION	1.4915267057295418E-4	DEFECT
// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //	WITHOUT_CLASSIFICATION	0.9998748685866188	WITHOUT_CLASSIFICATION	1.2513141338117082E-4	DEFECT
// The following will be used as types and tasks	WITHOUT_CLASSIFICATION	0.999978788587047	WITHOUT_CLASSIFICATION	2.121141295290055E-5	DEFECT
// share the setup for testing the depend task	WITHOUT_CLASSIFICATION	0.9998821447381905	WITHOUT_CLASSIFICATION	1.1785526180950165E-4	DEFECT
// Test for path relative to project base directory	WITHOUT_CLASSIFICATION	0.9998804759982577	WITHOUT_CLASSIFICATION	1.1952400174241698E-4	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//  =====================  attributes  =====================	WITHOUT_CLASSIFICATION	0.9998193961688108	WITHOUT_CLASSIFICATION	1.806038311892009E-4	DEFECT
//class-MockCache	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//  =====================  constructors, factories  =====================	WITHOUT_CLASSIFICATION	0.9996661388328612	WITHOUT_CLASSIFICATION	3.338611671388867E-4	DEFECT
//  =====================  JUnit stuff  =====================	WITHOUT_CLASSIFICATION	0.9998551611563797	WITHOUT_CLASSIFICATION	1.4483884362028417E-4	DEFECT
// project reference is set in super.setUp()	WITHOUT_CLASSIFICATION	0.9997636362236848	WITHOUT_CLASSIFICATION	2.3636377631510176E-4	DEFECT
// init the testclasses path object	WITHOUT_CLASSIFICATION	0.9999501299067869	WITHOUT_CLASSIFICATION	4.987009321310945E-5	DEFECT
/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */	WITHOUT_CLASSIFICATION	0.9999152661764761	WITHOUT_CLASSIFICATION	8.473382352386625E-5	DEFECT
// =======  testcases for the attributes and nested elements of the selector  =====	WITHOUT_CLASSIFICATION	0.9998312698210401	WITHOUT_CLASSIFICATION	1.687301789598221E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999790342828888	WITHOUT_CLASSIFICATION	2.0965717111122254E-5	DEFECT
// do the checks - the buildfile stores the fileset as property	WITHOUT_CLASSIFICATION	0.9999106432221901	WITHOUT_CLASSIFICATION	8.935677780985005E-5	DEFECT
// must be empty according to the Mock* implementations	WITHOUT_CLASSIFICATION	0.9999055468568081	WITHOUT_CLASSIFICATION	9.445314319179228E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9997394417601648	WITHOUT_CLASSIFICATION	2.6055823983521867E-4	DEFECT
// no check for 1<=kind<=3 - only internal use therefore check it // while development	WITHOUT_CLASSIFICATION	0.9995572818501133	WITHOUT_CLASSIFICATION	4.4271814988667326E-4	DEFECT
// readable form of parameter kind	WITHOUT_CLASSIFICATION	0.9998497694521197	WITHOUT_CLASSIFICATION	1.5023054788034553E-4	DEFECT
// setup the "Ant project"	WITHOUT_CLASSIFICATION	0.999947568130613	WITHOUT_CLASSIFICATION	5.243186938706469E-5	DEFECT
// setup the selector	WITHOUT_CLASSIFICATION	0.999947568130613	WITHOUT_CLASSIFICATION	5.243186938706469E-5	DEFECT
// get the cache, so we can check our things	WITHOUT_CLASSIFICATION	0.9999712551868533	WITHOUT_CLASSIFICATION	2.8744813146746983E-5	DEFECT
// the test	WITHOUT_CLASSIFICATION	0.9999703397986219	WITHOUT_CLASSIFICATION	2.9660201378153188E-5	DEFECT
// MockCache doesnt create a file - therefore no cleanup needed	WITHOUT_CLASSIFICATION	0.9999153657972994	WITHOUT_CLASSIFICATION	8.463420270055429E-5	DEFECT
// add the test classes to its classpath	WITHOUT_CLASSIFICATION	0.9999777916406233	WITHOUT_CLASSIFICATION	2.2208359376672055E-5	DEFECT
// let the selector do its checks	WITHOUT_CLASSIFICATION	0.9999657079884707	WITHOUT_CLASSIFICATION	3.4292011529304587E-5	DEFECT
// extract the algorithm name (and config) from the selectors output	WITHOUT_CLASSIFICATION	0.999384620554616	WITHOUT_CLASSIFICATION	6.153794453840201E-4	DEFECT
// '<' and '>' are only used if the algorithm has properties	WITHOUT_CLASSIFICATION	0.9998487899216632	WITHOUT_CLASSIFICATION	1.512100783367815E-4	DEFECT
// return the clean value	WITHOUT_CLASSIFICATION	0.9999715620140467	WITHOUT_CLASSIFICATION	2.8437985953330232E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.999910120029425	WITHOUT_CLASSIFICATION	8.987997057499366E-5	DEFECT
// initialize test environment (called "bed")	WITHOUT_CLASSIFICATION	0.999910120029425	WITHOUT_CLASSIFICATION	8.987997057499366E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999460886664249	WITHOUT_CLASSIFICATION	5.391133357504238E-5	DEFECT
// Configure the selector	WITHOUT_CLASSIFICATION	0.9999460886664249	WITHOUT_CLASSIFICATION	5.391133357504238E-5	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9998821469907826	WITHOUT_CLASSIFICATION	1.1785300921742588E-4	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999078234364768	WITHOUT_CLASSIFICATION	9.217656352323431E-5	DEFECT
// evaluate correctness	WITHOUT_CLASSIFICATION	0.9999078234364768	WITHOUT_CLASSIFICATION	9.217656352323431E-5	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999966615021215	WITHOUT_CLASSIFICATION	3.3384978784932176E-6	DEFECT
// same logic as on algorithm, no testcases created	WITHOUT_CLASSIFICATION	0.9999966615021215	WITHOUT_CLASSIFICATION	3.3384978784932176E-6	DEFECT
// given cache must be empty	WITHOUT_CLASSIFICATION	0.9999890846096161	WITHOUT_CLASSIFICATION	1.0915390383971033E-5	DEFECT
// cache must return a stored value	WITHOUT_CLASSIFICATION	0.9999711145225874	WITHOUT_CLASSIFICATION	2.8885477412645843E-5	DEFECT
// test the iterator	WITHOUT_CLASSIFICATION	0.9999707370774914	WITHOUT_CLASSIFICATION	2.9262922508622618E-5	DEFECT
// clear the cache	WITHOUT_CLASSIFICATION	0.999984969189017	WITHOUT_CLASSIFICATION	1.5030810982863602E-5	DEFECT
// must not be a directory	WITHOUT_CLASSIFICATION	0.9997244740207062	WITHOUT_CLASSIFICATION	2.7552597929379264E-4	DEFECT
// get the Hashvalues	WITHOUT_CLASSIFICATION	0.9999481447201141	WITHOUT_CLASSIFICATION	5.185527988604361E-5	DEFECT
// Assert !=null and equality	WITHOUT_CLASSIFICATION	0.9999423040041394	WITHOUT_CLASSIFICATION	5.769599586045065E-5	DEFECT
//if-isFile //for	WITHOUT_CLASSIFICATION	0.999549032951751	WITHOUT_CLASSIFICATION	4.509670482490526E-4	DEFECT
// ==============  testcases for the comparator implementations  ==============	WITHOUT_CLASSIFICATION	0.9996322308468858	WITHOUT_CLASSIFICATION	3.6776915311421076E-4	DEFECT
//not yet supported see note in selector	WITHOUT_CLASSIFICATION	0.9983594117550272	WITHOUT_CLASSIFICATION	0.0016405882449728316	DEFECT
//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();	WITHOUT_CLASSIFICATION	0.9995966186458508	WITHOUT_CLASSIFICATION	4.033813541492059E-4	DEFECT
// really "2"	WITHOUT_CLASSIFICATION	0.9997238356752473	WITHOUT_CLASSIFICATION	2.761643247527513E-4	DEFECT
// Configure the selector - only defaults are used	WITHOUT_CLASSIFICATION	0.9999222895177641	WITHOUT_CLASSIFICATION	7.771048223584085E-5	DEFECT
//                     + "  <emptyElement></emptyElement>"	WITHOUT_CLASSIFICATION	0.9997753787232229	WITHOUT_CLASSIFICATION	2.2462127677710743E-4	DEFECT
/* ============ ResourceFactory interface ====================== */	WITHOUT_CLASSIFICATION	0.9998458990546574	WITHOUT_CLASSIFICATION	1.5410094534271435E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
//class-BFT	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// do the actions	WITHOUT_CLASSIFICATION	0.9999790342828888	WITHOUT_CLASSIFICATION	2.0965717111122254E-5	DEFECT
// don't catch the JUnit exceptions	WITHOUT_CLASSIFICATION	0.9997394417601648	WITHOUT_CLASSIFICATION	2.6055823983521867E-4	DEFECT
// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //	WITHOUT_CLASSIFICATION	0.9985390879303309	WITHOUT_CLASSIFICATION	0.0014609120696691643	DEFECT
// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //	WITHOUT_CLASSIFICATION	0.9985796335022843	WITHOUT_CLASSIFICATION	0.001420366497715813	DEFECT
// // *****  make some files dirty  ***** //	WITHOUT_CLASSIFICATION	0.9997982666816192	WITHOUT_CLASSIFICATION	2.0173331838073012E-4	DEFECT
// these files are made dirty --> 3+4 with different content	WITHOUT_CLASSIFICATION	0.9999695277842929	WITHOUT_CLASSIFICATION	3.0472215707100625E-5	DEFECT
// AccessObject to the test-Ant-environment	WITHOUT_CLASSIFICATION	0.9998101479674286	WITHOUT_CLASSIFICATION	1.8985203257127793E-4	DEFECT
// give some values (via property file) to that environment	WITHOUT_CLASSIFICATION	0.9998594375711376	WITHOUT_CLASSIFICATION	1.405624288624259E-4	DEFECT
// call the target for making the files dirty	WITHOUT_CLASSIFICATION	0.9998832506057476	WITHOUT_CLASSIFICATION	1.1674939425238152E-4	DEFECT
// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)	WITHOUT_CLASSIFICATION	0.9970898354506148	WITHOUT_CLASSIFICATION	0.0029101645493852775	DEFECT
// // *****  Check the result  ***** //	WITHOUT_CLASSIFICATION	0.9999460869860258	WITHOUT_CLASSIFICATION	5.3913013974157244E-5	DEFECT
// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.	WITHOUT_CLASSIFICATION	0.999999486145514	WITHOUT_CLASSIFICATION	5.138544859789003E-7	DEFECT
// f2name shouldn't be selected: only timestamp has changed!	WITHOUT_CLASSIFICATION	0.9983015793736599	WITHOUT_CLASSIFICATION	0.001698420626340136	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999755804726638	WITHOUT_CLASSIFICATION	2.4419527336203294E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999504298800861	WITHOUT_CLASSIFICATION	4.9570119913968364E-5	DEFECT
// cleanup the environment	WITHOUT_CLASSIFICATION	0.9999504298800861	WITHOUT_CLASSIFICATION	4.9570119913968364E-5	DEFECT
// RuleBasedCollator not yet supported - see Selector:375 note	WITHOUT_CLASSIFICATION	0.9950230622611442	WITHOUT_CLASSIFICATION	0.004976937738855842	DEFECT
//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid	WITHOUT_CLASSIFICATION	0.9986828085092437	WITHOUT_CLASSIFICATION	0.001317191490756204	DEFECT
// first and second run	WITHOUT_CLASSIFICATION	0.9998774529582852	WITHOUT_CLASSIFICATION	1.2254704171477086E-4	DEFECT
// make dirty	WITHOUT_CLASSIFICATION	0.9998737575729137	WITHOUT_CLASSIFICATION	1.26242427086195E-4	DEFECT
// third run	WITHOUT_CLASSIFICATION	0.9999039758042274	WITHOUT_CLASSIFICATION	9.60241957724973E-5	DEFECT
// the directories to check	WITHOUT_CLASSIFICATION	0.9999421789986991	WITHOUT_CLASSIFICATION	5.782100130088926E-5	DEFECT
// do the checks	WITHOUT_CLASSIFICATION	0.9999766567970444	WITHOUT_CLASSIFICATION	2.3343202955649625E-5	DEFECT
//class-MockProject	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//class-ModifiedSelectorTest	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// First read in zero bytes	WITHOUT_CLASSIFICATION	0.9999092159539568	WITHOUT_CLASSIFICATION	9.078404604315017E-5	DEFECT
// Now read in the string	WITHOUT_CLASSIFICATION	0.99992655751774	WITHOUT_CLASSIFICATION	7.344248226006959E-5	DEFECT
// Make sure that the counts are the same	WITHOUT_CLASSIFICATION	0.9999704610733468	WITHOUT_CLASSIFICATION	2.953892665322712E-5	DEFECT
// LineOrientedOutputStreamTest	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// make sure that elapsed time in set via date works	WITHOUT_CLASSIFICATION	0.9999434169448697	WITHOUT_CLASSIFICATION	5.658305513029757E-5	DEFECT
// make sure that elapsed time in ms works	WITHOUT_CLASSIFICATION	0.9997657850829373	WITHOUT_CLASSIFICATION	2.34214917062727E-4	DEFECT
// should be new moon	WITHOUT_CLASSIFICATION	0.9998749361395176	WITHOUT_CLASSIFICATION	1.2506386048239247E-4	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999688176421916	WITHOUT_CLASSIFICATION	3.1182357808337816E-5	DEFECT
// and a little longer	WITHOUT_CLASSIFICATION	0.9998846572761736	WITHOUT_CLASSIFICATION	1.1534272382638469E-4	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9991912406620704	WITHOUT_CLASSIFICATION	8.087593379295219E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999215547647078	WITHOUT_CLASSIFICATION	7.844523529216115E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999258136986386	WITHOUT_CLASSIFICATION	7.418630136134412E-5	DEFECT
/*             * Start with simple absolute file names.             */	WITHOUT_CLASSIFICATION	0.9999258136986386	WITHOUT_CLASSIFICATION	7.418630136134412E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.99998088771188	WITHOUT_CLASSIFICATION	1.911228812002175E-5	DEFECT
/*         * Now test some relative file name magic.         */	WITHOUT_CLASSIFICATION	0.99998088771188	WITHOUT_CLASSIFICATION	1.911228812002175E-5	DEFECT
// implies lastModified == 0	WITHOUT_CLASSIFICATION	0.9999652878488005	WITHOUT_CLASSIFICATION	3.4712151199647084E-5	DEFECT
/* ============ FileNameMapper interface ======================= */	WITHOUT_CLASSIFICATION	0.9998458990546574	WITHOUT_CLASSIFICATION	1.5410094534271435E-4	DEFECT
// Windows adds the drive letter in uppercase, unless you run Cygwin	WITHOUT_CLASSIFICATION	0.9996272648884542	WITHOUT_CLASSIFICATION	3.727351115457525E-4	DEFECT
/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */	WITHOUT_CLASSIFICATION	0.9993663549930574	WITHOUT_CLASSIFICATION	6.336450069426183E-4	DEFECT
// number of milliseconds in a day	WITHOUT_CLASSIFICATION	0.9993788106623166	WITHOUT_CLASSIFICATION	6.211893376834321E-4	DEFECT
// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000	WITHOUT_CLASSIFICATION	0.9992505173140575	WITHOUT_CLASSIFICATION	7.494826859426202E-4	DEFECT
/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */	WITHOUT_CLASSIFICATION	0.9951533152093374	WITHOUT_CLASSIFICATION	0.004846684790662664	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.999511246805296	WITHOUT_CLASSIFICATION	4.887531947040425E-4	DEFECT
/*             * throw in NetWare volume names             */	WITHOUT_CLASSIFICATION	0.999511246805296	WITHOUT_CLASSIFICATION	4.887531947040425E-4	DEFECT
/*             * drive letters must be considered just normal filenames.             */	WITHOUT_CLASSIFICATION	0.9999724981965367	WITHOUT_CLASSIFICATION	2.750180346334661E-5	DEFECT
// Passed test 	WITHOUT_CLASSIFICATION	0.999955484484449	WITHOUT_CLASSIFICATION	4.45155155508981E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999183371931484	WITHOUT_CLASSIFICATION	8.166280685155928E-5	DEFECT
// Expected exception caught	WITHOUT_CLASSIFICATION	0.9999183371931484	WITHOUT_CLASSIFICATION	8.166280685155928E-5	DEFECT
// null parent dir	WITHOUT_CLASSIFICATION	0.9998934548070901	WITHOUT_CLASSIFICATION	1.0654519290977732E-4	DEFECT
//preserve case on Cygwin when using 1.4 toURI:	WITHOUT_CLASSIFICATION	0.9999389229391991	WITHOUT_CLASSIFICATION	6.107706080092766E-5	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999861948715173	WITHOUT_CLASSIFICATION	1.3805128482614387E-5	DEFECT
//get a time	WITHOUT_CLASSIFICATION	0.9999100697182992	WITHOUT_CLASSIFICATION	8.993028170081361E-5	DEFECT
//add some time. We assume no OS has a granularity this bad	WITHOUT_CLASSIFICATION	0.9987020148210348	WITHOUT_CLASSIFICATION	0.0012979851789651975	DEFECT
/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */	WITHOUT_CLASSIFICATION	0.9982190119355975	WITHOUT_CLASSIFICATION	0.0017809880644024903	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9989997884259888	WITHOUT_CLASSIFICATION	0.0010002115740112636	DEFECT
//check that older is up to date with a newer dest	WITHOUT_CLASSIFICATION	0.9989997884259888	WITHOUT_CLASSIFICATION	0.0010002115740112636	DEFECT
// This just tests that the function does not blow up	WITHOUT_CLASSIFICATION	0.9979702623576887	WITHOUT_CLASSIFICATION	0.002029737642311191	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9997977151558461	WITHOUT_CLASSIFICATION	2.0228484415382624E-4	DEFECT
// could still be OS/2	WITHOUT_CLASSIFICATION	0.9997900664375303	WITHOUT_CLASSIFICATION	2.099335624696621E-4	DEFECT
// 27224 = magic (a random port which is unlikely to be in use)	WITHOUT_CLASSIFICATION	0.9996026737733136	WITHOUT_CLASSIFICATION	3.9732622668640005E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9994750091109098	WITHOUT_CLASSIFICATION	5.249908890902434E-4	DEFECT
// state engine: false=envelope, true=message	WITHOUT_CLASSIFICATION	0.9998992939000295	WITHOUT_CLASSIFICATION	1.0070609997045845E-4	DEFECT
// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)	WITHOUT_CLASSIFICATION	0.9995363036948925	WITHOUT_CLASSIFICATION	4.6369630510751124E-4	DEFECT
// sb.append( response + "\r\n" );	WITHOUT_CLASSIFICATION	0.9998769404884076	WITHOUT_CLASSIFICATION	1.2305951159232145E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// wait for connection	WITHOUT_CLASSIFICATION	0.9998785185053133	WITHOUT_CLASSIFICATION	1.2148149468672379E-4	DEFECT
//throw new IllegalStateException("Command unrecognized: " //    + response);	WITHOUT_CLASSIFICATION	0.9999162481086242	WITHOUT_CLASSIFICATION	8.375189137579562E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9996286496545272	WITHOUT_CLASSIFICATION	3.7135034547275636E-4	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999183172111398	WITHOUT_CLASSIFICATION	8.168278886029146E-5	DEFECT
// CRC manually calculated, sorry // CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999183172111398	WITHOUT_CLASSIFICATION	8.168278886029146E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999004223642634	WITHOUT_CLASSIFICATION	9.957763573659268E-5	DEFECT
// CRC // mode // link length // uid, gid	WITHOUT_CLASSIFICATION	0.9999004223642634	WITHOUT_CLASSIFICATION	9.957763573659268E-5	DEFECT
// CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9998925199937088	WITHOUT_CLASSIFICATION	1.0748000629124948E-4	DEFECT
// bad CRC // mode // link // uid, gid	WITHOUT_CLASSIFICATION	0.9997939813158835	WITHOUT_CLASSIFICATION	2.0601868411659462E-4	DEFECT
//if we got here, all was well	WITHOUT_CLASSIFICATION	0.9997780090208793	WITHOUT_CLASSIFICATION	2.219909791207353E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Filter out messages based on priority	WITHOUT_CLASSIFICATION	0.9997911777289379	WITHOUT_CLASSIFICATION	2.0882227106205415E-4	DEFECT
// Print out the name of the task if we're in one	WITHOUT_CLASSIFICATION	0.999971587059985	WITHOUT_CLASSIFICATION	2.8412940014915928E-5	DEFECT
// shouldn't be possible	WITHOUT_CLASSIFICATION	0.9998773393477556	WITHOUT_CLASSIFICATION	1.226606522444017E-4	DEFECT
// Set up PRIMITIVE_TYPE_MAP	WITHOUT_CLASSIFICATION	0.9999564943735937	WITHOUT_CLASSIFICATION	4.3505626406248565E-5	DEFECT
// check of add[Configured](Class) pattern	WITHOUT_CLASSIFICATION	0.999882626985786	WITHOUT_CLASSIFICATION	1.1737301421402437E-4	DEFECT
// not really user settable properties on tasks/project components	WITHOUT_CLASSIFICATION	0.871990115270603	WITHOUT_CLASSIFICATION	0.128009884729397	DEFECT
// hide addTask for TaskContainers	WITHOUT_CLASSIFICATION	0.9997487710118141	WITHOUT_CLASSIFICATION	2.5122898818578026E-4	DEFECT
// use wrappers for primitive classes, e.g. int and // Integer are treated identically	WITHOUT_CLASSIFICATION	0.9997553781156313	WITHOUT_CLASSIFICATION	2.4462188436874375E-4	DEFECT
// Check if a create of this property is already present // add takes preference over create for CB purposes	WITHOUT_CLASSIFICATION	0.9996460510952507	WITHOUT_CLASSIFICATION	3.5394890474930914E-4	DEFECT
/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */	WITHOUT_CLASSIFICATION	0.999933442851762	WITHOUT_CLASSIFICATION	6.655714823805098E-5	DEFECT
// If a helper cannot be found, or if the helper is for another // classloader, create a new IH	WITHOUT_CLASSIFICATION	0.9999178644329438	WITHOUT_CLASSIFICATION	8.213556705619292E-5	DEFECT
// Ignore attribute from unknown uri's	WITHOUT_CLASSIFICATION	0.9998659764962057	WITHOUT_CLASSIFICATION	1.3402350379440082E-4	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999721366390454	WITHOUT_CLASSIFICATION	2.7863360954609647E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999721366390454	WITHOUT_CLASSIFICATION	2.7863360954609647E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999721366390454	WITHOUT_CLASSIFICATION	2.7863360954609647E-5	DEFECT
// Element doesn't handle text content	WITHOUT_CLASSIFICATION	0.9999783716417907	WITHOUT_CLASSIFICATION	2.1628358209192235E-5	DEFECT
// Not whitespace - fail	WITHOUT_CLASSIFICATION	0.9975367566567136	WITHOUT_CLASSIFICATION	0.002463243343286518	DEFECT
// Only whitespace - ignore	WITHOUT_CLASSIFICATION	0.9999273059118635	WITHOUT_CLASSIFICATION	7.269408813647223E-5	DEFECT
// Class doesn't have a String constructor but a decent factory method	WITHOUT_CLASSIFICATION	0.9998759179689533	WITHOUT_CLASSIFICATION	1.2408203104669597E-4	DEFECT
// char and Character get special treatment - take the first character	WITHOUT_CLASSIFICATION	0.9999466478649758	WITHOUT_CLASSIFICATION	5.3352135024221466E-5	DEFECT
// simplest case - setAttribute expects String	WITHOUT_CLASSIFICATION	0.9999182452595091	WITHOUT_CLASSIFICATION	8.175474049084683E-5	DEFECT
// First try with Project.	WITHOUT_CLASSIFICATION	0.999965768686985	WITHOUT_CLASSIFICATION	3.4231313015117926E-5	DEFECT
// EnumeratedAttributes have their own helper class	WITHOUT_CLASSIFICATION	0.9997678105479254	WITHOUT_CLASSIFICATION	2.3218945207466627E-4	DEFECT
// resolve relative paths through Project	WITHOUT_CLASSIFICATION	0.9999433909243937	WITHOUT_CLASSIFICATION	5.66090756064195E-5	DEFECT
/** Version to use for addXXX and addConfiguredXXX */	WITHOUT_CLASSIFICATION	0.9997858397371419	WITHOUT_CLASSIFICATION	2.141602628580141E-4	DEFECT
// Well, no matching constructor.	WITHOUT_CLASSIFICATION	0.9998906546559433	WITHOUT_CLASSIFICATION	1.0934534405662861E-4	DEFECT
// OK, try without.	WITHOUT_CLASSIFICATION	0.999980699861391	WITHOUT_CLASSIFICATION	1.930013860897418E-5	DEFECT
// the method called to add/create the nested element	WITHOUT_CLASSIFICATION	0.9999570896122272	WITHOUT_CLASSIFICATION	4.2910387772897845E-5	DEFECT
// DO NOTHING	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ADD or ADD_CONFIGURED	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// the method called to set the attribute	WITHOUT_CLASSIFICATION	0.9999899853002663	WITHOUT_CLASSIFICATION	1.0014699733625356E-5	DEFECT
// add configured replaces the add method	WITHOUT_CLASSIFICATION	0.9999741870242957	WITHOUT_CLASSIFICATION	2.581297570422502E-5	DEFECT
// maintain a sorted list of targets	WITHOUT_CLASSIFICATION	0.9999393019257664	WITHOUT_CLASSIFICATION	6.069807423356467E-5	DEFECT
// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean	WITHOUT_CLASSIFICATION	0.9999924764623531	WITHOUT_CLASSIFICATION	7.523537646767873E-6	DEFECT
// Already present	WITHOUT_CLASSIFICATION	0.9999392967651887	WITHOUT_CLASSIFICATION	6.0703234811385516E-5	DEFECT
// higher derived	WITHOUT_CLASSIFICATION	0.9999355285053239	WITHOUT_CLASSIFICATION	6.44714946761445E-5	DEFECT
// print the stacktrace in the build file it is always useful... // better have too much info than not enough.	WITHOUT_CLASSIFICATION	0.9964143129545363	WITHOUT_CLASSIFICATION	0.00358568704546384	DEFECT
// specify output in UTF8 otherwise accented characters will blow // up everything	WITHOUT_CLASSIFICATION	0.9999412221395644	WITHOUT_CLASSIFICATION	5.877786043558097E-5	DEFECT
/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */	WITHOUT_CLASSIFICATION	0.9997388169748549	WITHOUT_CLASSIFICATION	2.6118302514510844E-4	DEFECT
// -------------------------------------------------- BuildLogger interface	WITHOUT_CLASSIFICATION	0.9998829582123823	WITHOUT_CLASSIFICATION	1.1704178761774557E-4	DEFECT
// Shouldn't happen	WITHOUT_CLASSIFICATION	0.999405966232384	WITHOUT_CLASSIFICATION	5.94033767616072E-4	DEFECT
// LF is always end of line (i.e. CRLF or single LF)	WITHOUT_CLASSIFICATION	0.9997493107888908	WITHOUT_CLASSIFICATION	2.506892111091653E-4	DEFECT
// CR without LF - send buffer then add char	WITHOUT_CLASSIFICATION	0.9999141569523969	WITHOUT_CLASSIFICATION	8.584304760308278E-5	DEFECT
// add into buffer	WITHOUT_CLASSIFICATION	0.9999040985832489	WITHOUT_CLASSIFICATION	9.590141675110777E-5	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9998578154158099	WITHOUT_CLASSIFICATION	1.421845841901069E-4	DEFECT
// check adapter	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
//can throw the same exception, if there is no this(Project) ctor.	WITHOUT_CLASSIFICATION	0.999769272265653	WITHOUT_CLASSIFICATION	2.307277343468452E-4	DEFECT
//now we instantiate	WITHOUT_CLASSIFICATION	0.9998872581718846	WITHOUT_CLASSIFICATION	1.1274182811538307E-4	DEFECT
//set up project references.	WITHOUT_CLASSIFICATION	0.9998199398213945	WITHOUT_CLASSIFICATION	1.8006017860537846E-4	DEFECT
/** Our current message output status. Follows Project.MSG_XXX. */	WITHOUT_CLASSIFICATION	0.9999928655876781	WITHOUT_CLASSIFICATION	7.134412321865825E-6	DEFECT
/* null */	WITHOUT_CLASSIFICATION	0.9996698324409355	WITHOUT_CLASSIFICATION	3.301675590644977E-4	DEFECT
// expect the worst	WITHOUT_CLASSIFICATION	0.9999642208769493	WITHOUT_CLASSIFICATION	3.5779123050749045E-5	DEFECT
//this is the list of lu	WITHOUT_CLASSIFICATION	0.9998264107395219	WITHOUT_CLASSIFICATION	1.7358926047803962E-4	DEFECT
// cycle through given args	WITHOUT_CLASSIFICATION	0.9999346823665654	WITHOUT_CLASSIFICATION	6.531763343463063E-5	DEFECT
// set the flag to display the targets and quit	WITHOUT_CLASSIFICATION	0.9999778980322563	WITHOUT_CLASSIFICATION	2.2101967743648215E-5	DEFECT
// eat up next arg if present, default to build.xml	WITHOUT_CLASSIFICATION	0.999950638495079	WITHOUT_CLASSIFICATION	4.936150492105686E-5	DEFECT
// we don't have any more args to recognize!	WITHOUT_CLASSIFICATION	0.992364987171954	WITHOUT_CLASSIFICATION	0.007635012828045967	DEFECT
// if it's no other arg, it may be the target	WITHOUT_CLASSIFICATION	0.9999870080700242	WITHOUT_CLASSIFICATION	1.299192997575536E-5	DEFECT
// if buildFile was not specified on the command line,	WITHOUT_CLASSIFICATION	0.9992763959764919	WITHOUT_CLASSIFICATION	7.236040235081918E-4	DEFECT
// but -find then search for it	WITHOUT_CLASSIFICATION	0.9998779857432393	WITHOUT_CLASSIFICATION	1.2201425676081426E-4	DEFECT
// make sure buildfile exists	WITHOUT_CLASSIFICATION	0.9999408307721164	WITHOUT_CLASSIFICATION	5.91692278836222E-5	DEFECT
// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category	WITHOUT_CLASSIFICATION	0.9992075279271498	WITHOUT_CLASSIFICATION	7.924720728501748E-4	DEFECT
// Load the property files specified by -propertyfile	WITHOUT_CLASSIFICATION	0.9998763404529619	WITHOUT_CLASSIFICATION	1.236595470380266E-4	DEFECT
// ensure that -D properties take precedence	WITHOUT_CLASSIFICATION	0.9997982177424698	WITHOUT_CLASSIFICATION	2.0178225753019713E-4	DEFECT
// check if the target file exists in the current directory	WITHOUT_CLASSIFICATION	0.9999983627352093	WITHOUT_CLASSIFICATION	1.6372647907358753E-6	DEFECT
// change to parent directory	WITHOUT_CLASSIFICATION	0.9999730425290377	WITHOUT_CLASSIFICATION	2.6957470962260475E-5	DEFECT
// refresh our file handle	WITHOUT_CLASSIFICATION	0.9998714362309833	WITHOUT_CLASSIFICATION	1.2856376901671882E-4	DEFECT
// use a system manager that prevents from System.exit()	WITHOUT_CLASSIFICATION	0.9989605314440213	WITHOUT_CLASSIFICATION	0.0010394685559786758	DEFECT
//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());	WITHOUT_CLASSIFICATION	0.9970607704916918	WITHOUT_CLASSIFICATION	0.002939229508308148	DEFECT
// set the thread priorities	WITHOUT_CLASSIFICATION	0.999982369351262	WITHOUT_CLASSIFICATION	1.7630648738037125E-5	DEFECT
//we cannot set the priority here.	WITHOUT_CLASSIFICATION	0.9993909959749467	WITHOUT_CLASSIFICATION	6.090040250532715E-4	DEFECT
// set user-define properties	WITHOUT_CLASSIFICATION	0.9999737359036837	WITHOUT_CLASSIFICATION	2.626409631631805E-5	DEFECT
//proxy setup if enabled	WITHOUT_CLASSIFICATION	0.9998575722742858	WITHOUT_CLASSIFICATION	1.4242772571414347E-4	DEFECT
// make sure that we have a target to execute	WITHOUT_CLASSIFICATION	0.9998533024301384	WITHOUT_CLASSIFICATION	1.466975698616311E-4	DEFECT
// Add the default listener	WITHOUT_CLASSIFICATION	0.9999974874219135	WITHOUT_CLASSIFICATION	2.512578086416232E-6	DEFECT
// find the target with the longest name	WITHOUT_CLASSIFICATION	0.9999644797354579	WITHOUT_CLASSIFICATION	3.552026454211351E-5	DEFECT
// split the targets in top-level and sub-targets depending // on the presence of a description	WITHOUT_CLASSIFICATION	0.9994049521965123	WITHOUT_CLASSIFICATION	5.950478034877581E-4	DEFECT
// shouldn't need to check but...	WITHOUT_CLASSIFICATION	0.9996442704014861	WITHOUT_CLASSIFICATION	3.5572959851385083E-4	DEFECT
// now, start printing the targets and their descriptions	WITHOUT_CLASSIFICATION	0.9999431504631557	WITHOUT_CLASSIFICATION	5.684953684417996E-5	DEFECT
// got a bit annoyed that I couldn't find a pad function	WITHOUT_CLASSIFICATION	0.9998573140137453	WITHOUT_CLASSIFICATION	1.4268598625463016E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//At least one constructor is guaranteed to be there, but check anyway.	WITHOUT_CLASSIFICATION	0.9990229149698898	WITHOUT_CLASSIFICATION	9.7708503011021E-4	DEFECT
// is the zip file in the cache	WITHOUT_CLASSIFICATION	0.9997926771989031	WITHOUT_CLASSIFICATION	2.0732280109691284E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999370086594933	WITHOUT_CLASSIFICATION	6.299134050672172E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// add the types of the parent project	WITHOUT_CLASSIFICATION	0.9998810750777632	WITHOUT_CLASSIFICATION	1.1892492223681621E-4	DEFECT
// ignore path elements which are not valid relative to the // project	WITHOUT_CLASSIFICATION	0.9999029856979142	WITHOUT_CLASSIFICATION	9.701430208568034E-5	DEFECT
// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments	WITHOUT_CLASSIFICATION	0.8856937958574276	WITHOUT_CLASSIFICATION	0.11430620414257248	DEFECT
// we need to search the components of the path to see if we can // find the class we want.	WITHOUT_CLASSIFICATION	0.9999388291038541	WITHOUT_CLASSIFICATION	6.117089614588672E-5	DEFECT
// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)	WITHOUT_CLASSIFICATION	0.9999980290322464	WITHOUT_CLASSIFICATION	1.9709677535762218E-6	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999388291038541	WITHOUT_CLASSIFICATION	6.117089614588672E-5	DEFECT
// try and load from this loader if the parent either didn't find // it or wasn't consulted.	WITHOUT_CLASSIFICATION	0.9999229987711524	WITHOUT_CLASSIFICATION	7.700122884766378E-5	DEFECT
// this loader was first but it didn't find it - try the parent	WITHOUT_CLASSIFICATION	0.9999124711361284	WITHOUT_CLASSIFICATION	8.752886387155736E-5	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// Delegate to the parent:	WITHOUT_CLASSIFICATION	0.999906082428548	WITHOUT_CLASSIFICATION	9.391757145211552E-5	DEFECT
// Note: could cause overlaps in case ClassLoader.this.parent has matches.	WITHOUT_CLASSIFICATION	0.9993464831207167	WITHOUT_CLASSIFICATION	6.535168792832102E-4	DEFECT
// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:	WITHOUT_CLASSIFICATION	0.9997709692771936	WITHOUT_CLASSIFICATION	2.2903072280640075E-4	DEFECT
// Normal case.	WITHOUT_CLASSIFICATION	0.9999483961836957	WITHOUT_CLASSIFICATION	5.1603816304370305E-5	DEFECT
// Inverted.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// already defined	WITHOUT_CLASSIFICATION	0.9999811666075968	WITHOUT_CLASSIFICATION	1.883339240315412E-5	DEFECT
// define the package now	WITHOUT_CLASSIFICATION	0.9999937024183593	WITHOUT_CLASSIFICATION	6.2975816407013195E-6	DEFECT
// ioe.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// {tasks, types}	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// add the parsed namespaces of the parent project	WITHOUT_CLASSIFICATION	0.9998848851333438	WITHOUT_CLASSIFICATION	1.1511486665624161E-4	DEFECT
// we need to search the components of the path to see if // we can find the class we want.	WITHOUT_CLASSIFICATION	0.9999388291038541	WITHOUT_CLASSIFICATION	6.117089614588672E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9993347330576543	WITHOUT_CLASSIFICATION	6.652669423457631E-4	DEFECT
// set default value, can be changed by the user	WITHOUT_CLASSIFICATION	0.999994438933946	WITHOUT_CLASSIFICATION	5.561066054007971E-6	DEFECT
//too bad	WITHOUT_CLASSIFICATION	0.9987935659984357	WITHOUT_CLASSIFICATION	0.001206434001564239	DEFECT
//must have same validity; then if they are valid they must also be the same:	WITHOUT_CLASSIFICATION	0.999967632410038	WITHOUT_CLASSIFICATION	3.236758996186783E-5	DEFECT
// namespace that does not contain antlib	WITHOUT_CLASSIFICATION	0.9991617943608504	WITHOUT_CLASSIFICATION	8.38205639149698E-4	DEFECT
// Already processed	WITHOUT_CLASSIFICATION	0.9999457465645256	WITHOUT_CLASSIFICATION	5.425343547431101E-5	DEFECT
//there to stop error messages being "null"	WITHOUT_CLASSIFICATION	0.9963848356295999	WITHOUT_CLASSIFICATION	0.003615164370400215	DEFECT
//if this is left out, bad things happen. like all build files break //on the first element encountered.	WITHOUT_CLASSIFICATION	0.9992178115053085	WITHOUT_CLASSIFICATION	7.821884946914981E-4	DEFECT
// a fishing expedition :- ignore errors if antlib not present	WITHOUT_CLASSIFICATION	0.9996916956952819	WITHOUT_CLASSIFICATION	3.0830430471807496E-4	DEFECT
//class of problem	WITHOUT_CLASSIFICATION	0.9997257089323603	WITHOUT_CLASSIFICATION	2.742910676397042E-4	DEFECT
//running under an IDE that doesn't set ANT_HOME	WITHOUT_CLASSIFICATION	0.9998843740479392	WITHOUT_CLASSIFICATION	1.1562595206084268E-4	DEFECT
//look up the name	WITHOUT_CLASSIFICATION	0.9999708763123785	WITHOUT_CLASSIFICATION	2.912368762162339E-5	DEFECT
//we are defined, so it is an instantiation problem	WITHOUT_CLASSIFICATION	0.9999090219277662	WITHOUT_CLASSIFICATION	9.097807223389115E-5	DEFECT
//start with instantiating the class.	WITHOUT_CLASSIFICATION	0.9997573496427454	WITHOUT_CLASSIFICATION	2.4265035725448616E-4	DEFECT
//here we successfully loaded the class or failed.	WITHOUT_CLASSIFICATION	0.9999169073919976	WITHOUT_CLASSIFICATION	8.309260800233818E-5	DEFECT
//success: proceed with more steps	WITHOUT_CLASSIFICATION	0.9997299104126878	WITHOUT_CLASSIFICATION	2.7008958731224E-4	DEFECT
//hey, there is nothing wrong with us	WITHOUT_CLASSIFICATION	0.9543569420127301	WITHOUT_CLASSIFICATION	0.04564305798726983	DEFECT
/*<Thread,Task>*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*<ThreadGroup,Task>*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// If the listeners already has this listener, do nothing	WITHOUT_CLASSIFICATION	0.9998523868814589	WITHOUT_CLASSIFICATION	1.4761311854102218E-4	DEFECT
// we need to build the hashtable dynamically	WITHOUT_CLASSIFICATION	0.9999126086046431	WITHOUT_CLASSIFICATION	8.73913953568864E-5	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
//try the current classloader	WITHOUT_CLASSIFICATION	0.9999471501173165	WITHOUT_CLASSIFICATION	5.284988268348451E-5	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9996856863517789	WITHOUT_CLASSIFICATION	3.143136482210524E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9994260202889593	WITHOUT_CLASSIFICATION	5.739797110406576E-4	DEFECT
// Make sure we exist	WITHOUT_CLASSIFICATION	0.9999543494403013	WITHOUT_CLASSIFICATION	4.565055969873572E-5	DEFECT
// Currently visiting this node, so have a cycle	WITHOUT_CLASSIFICATION	0.9997394176205011	WITHOUT_CLASSIFICATION	2.6058237949891215E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999694177893018	WITHOUT_CLASSIFICATION	3.058221069816936E-5	DEFECT
// sanity check ourselves, if we've been asked to build nothing // then we should complain	WITHOUT_CLASSIFICATION	0.9999803576779939	WITHOUT_CLASSIFICATION	1.9642322006083763E-5	DEFECT
// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.	WITHOUT_CLASSIFICATION	0.9998245569515422	WITHOUT_CLASSIFICATION	1.754430484578373E-4	DEFECT
// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.	WITHOUT_CLASSIFICATION	0.9999860523436592	WITHOUT_CLASSIFICATION	1.394765634072951E-5	DEFECT
// no warning, this is not changing anything	WITHOUT_CLASSIFICATION	0.9965986000913729	WITHOUT_CLASSIFICATION	0.0034013999086270298	DEFECT
// Check for old id behaviour	WITHOUT_CLASSIFICATION	0.9999335702814137	WITHOUT_CLASSIFICATION	6.642971858632724E-5	DEFECT
// Inform IH to clear the cache	WITHOUT_CLASSIFICATION	0.9999342188339135	WITHOUT_CLASSIFICATION	6.578116608636677E-5	DEFECT
// register this as the current task on the current thread.	WITHOUT_CLASSIFICATION	0.9999559848470841	WITHOUT_CLASSIFICATION	4.4015152915719256E-5	DEFECT
// Make sure that	WITHOUT_CLASSIFICATION	0.9999683727101506	WITHOUT_CLASSIFICATION	3.1627289849403106E-5	DEFECT
// ignore this if the object does not have // a set project method or the method // is private/protected.	WITHOUT_CLASSIFICATION	0.9977576463891531	WITHOUT_CLASSIFICATION	0.0022423536108468517	DEFECT
//override facility for subclasses to put custom hashtables in	WITHOUT_CLASSIFICATION	0.994887648290516	WITHOUT_CLASSIFICATION	0.0051123517094840525	DEFECT
// --------------------  Hook management  --------------------	WITHOUT_CLASSIFICATION	0.999711580606182	WITHOUT_CLASSIFICATION	2.8841939381805547E-4	DEFECT
// --------------------  Methods to override  --------------------	WITHOUT_CLASSIFICATION	0.9995892494040487	WITHOUT_CLASSIFICATION	4.107505959513283E-4	DEFECT
// If next has handled the property	WITHOUT_CLASSIFICATION	0.9987884570271494	WITHOUT_CLASSIFICATION	0.0012115429728506203	DEFECT
// try to get it from the project or keys // Backward compatibility	WITHOUT_CLASSIFICATION	0.9999369401862395	WITHOUT_CLASSIFICATION	6.305981376064239E-5	DEFECT
// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.	WITHOUT_CLASSIFICATION	0.9999376228681857	WITHOUT_CLASSIFICATION	6.237713181430463E-5	DEFECT
// user (CLI) properties take precedence	WITHOUT_CLASSIFICATION	0.998556946972001	WITHOUT_CLASSIFICATION	0.001443053027998912	DEFECT
// -------------------- Getting properties  --------------------	WITHOUT_CLASSIFICATION	0.9995910971149866	WITHOUT_CLASSIFICATION	4.0890288501331605E-4	DEFECT
// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).	WITHOUT_CLASSIFICATION	0.9983982198397413	WITHOUT_CLASSIFICATION	0.001601780160258733	DEFECT
//search for the next instance of $ from the 'prev' position	WITHOUT_CLASSIFICATION	0.9984872185280467	WITHOUT_CLASSIFICATION	0.0015127814719532943	DEFECT
//if we are at the end of the string, we tack on a $ //then move past it	WITHOUT_CLASSIFICATION	0.9999742786955002	WITHOUT_CLASSIFICATION	2.572130449989331E-5	DEFECT
//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal	WITHOUT_CLASSIFICATION	0.9885314819332313	WITHOUT_CLASSIFICATION	0.011468518066768725	DEFECT
//backwards compatibility two $ map to one mode	WITHOUT_CLASSIFICATION	0.9998012992848517	WITHOUT_CLASSIFICATION	1.987007151482204E-4	DEFECT
//new behaviour: $X maps to $X for all values of X!='$'	WITHOUT_CLASSIFICATION	0.9992052003970538	WITHOUT_CLASSIFICATION	7.947996029461331E-4	DEFECT
//property found, extract its name or bail on a typo	WITHOUT_CLASSIFICATION	0.9996141243022706	WITHOUT_CLASSIFICATION	3.858756977294736E-4	DEFECT
//no more $ signs found //if there is any tail to the file, append it	WITHOUT_CLASSIFICATION	0.9998044837237898	WITHOUT_CLASSIFICATION	1.9551627621009176E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// The children are added to after this cloning	WITHOUT_CLASSIFICATION	0.9996425258389544	WITHOUT_CLASSIFICATION	3.574741610456006E-4	DEFECT
// Make sure the dependency is not empty string	WITHOUT_CLASSIFICATION	0.9992097792262923	WITHOUT_CLASSIFICATION	7.902207737077717E-4	DEFECT
// Make sure that depends attribute does not // end in a ,	WITHOUT_CLASSIFICATION	0.9963300696979474	WITHOUT_CLASSIFICATION	0.0036699303020525905	DEFECT
// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();	WITHOUT_CLASSIFICATION	0.9994930426348004	WITHOUT_CLASSIFICATION	5.069573651995374E-4	DEFECT
//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }	WITHOUT_CLASSIFICATION	0.9999646957943528	WITHOUT_CLASSIFICATION	3.5304205647319865E-5	DEFECT
// --------------------  Parse method  --------------------	WITHOUT_CLASSIFICATION	0.9998436647760922	WITHOUT_CLASSIFICATION	1.5633522390786397E-4	DEFECT
// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app	WITHOUT_CLASSIFICATION	0.999914693366764	WITHOUT_CLASSIFICATION	8.530663323603585E-5	DEFECT
// First, try the system property	WITHOUT_CLASSIFICATION	0.9995952727678509	WITHOUT_CLASSIFICATION	4.0472723214914096E-4	DEFECT
// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.	WITHOUT_CLASSIFICATION	0.9999596532145254	WITHOUT_CLASSIFICATION	4.0346785474567444E-5	DEFECT
// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces	WITHOUT_CLASSIFICATION	0.9710688859045442	WITHOUT_CLASSIFICATION	0.028931114095455828	DEFECT
// try next method	WITHOUT_CLASSIFICATION	0.9999223602938483	WITHOUT_CLASSIFICATION	7.763970615174567E-5	DEFECT
// -------------------- Static utils, used by most helpers ----------------	WITHOUT_CLASSIFICATION	0.999973866877064	WITHOUT_CLASSIFICATION	2.6133122935971236E-5	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999380593798559	WITHOUT_CLASSIFICATION	6.194062014404794E-5	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999130360195052	WITHOUT_CLASSIFICATION	8.696398049479643E-5	DEFECT
// needed since project properties are not accessible	WITHOUT_CLASSIFICATION	0.9995542007895823	WITHOUT_CLASSIFICATION	4.4579921041756394E-4	DEFECT
/*<UnknownElement>*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
/*<String,String>*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// reflect these into the target	WITHOUT_CLASSIFICATION	0.9999380593798559	WITHOUT_CLASSIFICATION	6.194062014404794E-5	DEFECT
// id attribute must be set externally	WITHOUT_CLASSIFICATION	0.9999130360195052	WITHOUT_CLASSIFICATION	8.696398049479643E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task	WITHOUT_CLASSIFICATION	0.9997428938000801	WITHOUT_CLASSIFICATION	2.5710619991994215E-4	DEFECT
// plain impossible to get here, maybeConfigure should // have thrown an exception.	WITHOUT_CLASSIFICATION	0.9967881083992036	WITHOUT_CLASSIFICATION	0.0032118916007964063	DEFECT
// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made	WITHOUT_CLASSIFICATION	0.9999770222742712	WITHOUT_CLASSIFICATION	2.2977725728805054E-5	DEFECT
// Do the runtime	WITHOUT_CLASSIFICATION	0.999978753981834	WITHOUT_CLASSIFICATION	2.1246018165987655E-5	DEFECT
// UnknownElement always has an associated target	WITHOUT_CLASSIFICATION	0.9997965436476338	WITHOUT_CLASSIFICATION	2.0345635236622723E-4	DEFECT
//return elementName;	WITHOUT_CLASSIFICATION	0.9998386507157376	WITHOUT_CLASSIFICATION	1.6134928426237132E-4	DEFECT
// Are the names the same ?	WITHOUT_CLASSIFICATION	0.9999548666408816	WITHOUT_CLASSIFICATION	4.5133359118387774E-5	DEFECT
// Are attributes the same ?	WITHOUT_CLASSIFICATION	0.9999568567733629	WITHOUT_CLASSIFICATION	4.3143226637070205E-5	DEFECT
// Are the sub elements the same ?	WITHOUT_CLASSIFICATION	0.9999128309538309	WITHOUT_CLASSIFICATION	8.716904616911754E-5	DEFECT
// hidden constructor	WITHOUT_CLASSIFICATION	0.9999632519237867	WITHOUT_CLASSIFICATION	3.674807621340441E-5	DEFECT
//create the file	WITHOUT_CLASSIFICATION	0.9999106147701898	WITHOUT_CLASSIFICATION	8.938522981016033E-5	DEFECT
//do some writing to it	WITHOUT_CLASSIFICATION	0.999916867817736	WITHOUT_CLASSIFICATION	8.313218226404304E-5	DEFECT
//calendar stuff.	WITHOUT_CLASSIFICATION	0.9998417811813026	WITHOUT_CLASSIFICATION	1.5821881869734037E-4	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.999940510373373	WITHOUT_CLASSIFICATION	5.948962662706392E-5	DEFECT
// not included, to nothing	WITHOUT_CLASSIFICATION	0.999452343014279	WITHOUT_CLASSIFICATION	5.476569857209936E-4	DEFECT
/*<RuntimeConfigurable>*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*<String>*/	WITHOUT_CLASSIFICATION	0.9998356393139793	WITHOUT_CLASSIFICATION	1.6436068602065427E-4	DEFECT
// Configure the object	WITHOUT_CLASSIFICATION	0.9999538740366379	WITHOUT_CLASSIFICATION	4.612596336202679E-5	DEFECT
// Most likely an UnknownElement	WITHOUT_CLASSIFICATION	0.9998182499525918	WITHOUT_CLASSIFICATION	1.8175004740822969E-4	DEFECT
// Children (this is a shadow of UnknownElement#children)	WITHOUT_CLASSIFICATION	0.9991637884170763	WITHOUT_CLASSIFICATION	8.362115829236207E-4	DEFECT
// poly type	WITHOUT_CLASSIFICATION	0.9999784750855659	WITHOUT_CLASSIFICATION	2.152491443403784E-5	DEFECT
// Text	WITHOUT_CLASSIFICATION	0.9997530735319923	WITHOUT_CLASSIFICATION	2.469264680076702E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// store the token just read for next time	WITHOUT_CLASSIFICATION	0.9999370086594933	WITHOUT_CLASSIFICATION	6.299134050672172E-5	DEFECT
// a task container - anything could happen - just add the // child to the container	WITHOUT_CLASSIFICATION	0.9999625891364865	WITHOUT_CLASSIFICATION	3.741086351342909E-5	DEFECT
// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.	WITHOUT_CLASSIFICATION	0.9882901492800744	WITHOUT_CLASSIFICATION	0.011709850719925613	DEFECT
// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing	WITHOUT_CLASSIFICATION	0.9994322577427054	WITHOUT_CLASSIFICATION	5.67742257294691E-4	DEFECT
// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.	WITHOUT_CLASSIFICATION	0.9967395649387388	WITHOUT_CLASSIFICATION	0.003260435061261056	DEFECT
// we are on a dos style system so this path could be a drive // spec. We look at the next token	WITHOUT_CLASSIFICATION	0.9995159521351983	WITHOUT_CLASSIFICATION	4.840478648018357E-4	DEFECT
// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec	WITHOUT_CLASSIFICATION	0.9995485318461877	WITHOUT_CLASSIFICATION	4.5146815381233706E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// ignore ";" and get the next token	WITHOUT_CLASSIFICATION	0.9996540468628945	WITHOUT_CLASSIFICATION	3.4595313710551864E-4	DEFECT
// this path could be a drive spec, so look at the next token	WITHOUT_CLASSIFICATION	0.9995050266487684	WITHOUT_CLASSIFICATION	4.949733512316593E-4	DEFECT
// it indeed is a drive spec, get the next bit	WITHOUT_CLASSIFICATION	0.9989276400658704	WITHOUT_CLASSIFICATION	0.0010723599341295634	DEFECT
// implicit else: ignore the ':' since we have either a // UNIX or a relative path	WITHOUT_CLASSIFICATION	0.999971924141857	WITHOUT_CLASSIFICATION	2.8075858143063758E-5	DEFECT
// Miscellaneous typical temporary files	WITHOUT_CLASSIFICATION	0.9999241649192704	WITHOUT_CLASSIFICATION	7.583508072957069E-5	DEFECT
// CVS	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// SCCS	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Visual SourceSafe	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Subversion	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999605676127459	WITHOUT_CLASSIFICATION	3.943238725411803E-5	DEFECT
// if no basedir and no includes, nothing to do:	WITHOUT_CLASSIFICATION	0.999986424210521	WITHOUT_CLASSIFICATION	1.3575789479068185E-5	DEFECT
//skip abs. paths not under basedir, if set:	WITHOUT_CLASSIFICATION	0.998818994901098	WITHOUT_CLASSIFICATION	0.0011810050989020098	DEFECT
//skip non-abs. paths if basedir == null:	WITHOUT_CLASSIFICATION	0.9999179543959006	WITHOUT_CLASSIFICATION	8.204560409932058E-5	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9997741493505665	WITHOUT_CLASSIFICATION	2.2585064943361492E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9996171798287371	WITHOUT_CLASSIFICATION	3.828201712629826E-4	DEFECT
// will be caught and redirected to Ant's logging system	WITHOUT_CLASSIFICATION	0.9996171798287371	WITHOUT_CLASSIFICATION	3.828201712629826E-4	DEFECT
//removing base from path yields no change; path not child of base	WITHOUT_CLASSIFICATION	0.9996992536573126	WITHOUT_CLASSIFICATION	3.0074634268737247E-4	DEFECT
/* package-private */	WITHOUT_CLASSIFICATION	0.9998930361559925	WITHOUT_CLASSIFICATION	1.0696384400753191E-4	DEFECT
// do the "singleton" initialization	WITHOUT_CLASSIFICATION	0.9999428923340342	WITHOUT_CLASSIFICATION	5.710766596568449E-5	DEFECT
// Add the explicit resource collections to the archive.	WITHOUT_CLASSIFICATION	0.9999593392773751	WITHOUT_CLASSIFICATION	4.0660722624797715E-5	DEFECT
// EOL was "\r\n"	WITHOUT_CLASSIFICATION	0.9999389175516792	WITHOUT_CLASSIFICATION	6.108244832077816E-5	DEFECT
// don't have to check for interface, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9705989096235002	WITHOUT_CLASSIFICATION	0.02940109037649975	DEFECT
// ignore this if the class being used as a task does not have // a set location method.	WITHOUT_CLASSIFICATION	0.9994796405475085	WITHOUT_CLASSIFICATION	5.203594524915597E-4	DEFECT
// ignore this if the class being used as a task does not have // a set project method.	WITHOUT_CLASSIFICATION	0.9995069209262534	WITHOUT_CLASSIFICATION	4.93079073746531E-4	DEFECT
// put in the newroots map the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.99989467765076	WITHOUT_CLASSIFICATION	1.0532234923996965E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999428448694936	WITHOUT_CLASSIFICATION	5.715513050644422E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999865810085656	WITHOUT_CLASSIFICATION	1.3418991434329253E-5	DEFECT
// adapt currentelement to the case we've // actually found	WITHOUT_CLASSIFICATION	0.9998359985521665	WITHOUT_CLASSIFICATION	1.6400144783347553E-4	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.999753795377592	WITHOUT_CLASSIFICATION	2.462046224079395E-4	DEFECT
// I am the only one so I have to close the reader	WITHOUT_CLASSIFICATION	0.999753795377592	WITHOUT_CLASSIFICATION	2.462046224079395E-4	DEFECT
// get parameters	WITHOUT_CLASSIFICATION	0.9999436468879942	WITHOUT_CLASSIFICATION	5.635311200571498E-5	DEFECT
// Calculate the EOL string per the current config	WITHOUT_CLASSIFICATION	0.9999426940865405	WITHOUT_CLASSIFICATION	5.730591345946501E-5	DEFECT
// assume (eol == CrLf.LF || eol == CrLf.UNIX)	WITHOUT_CLASSIFICATION	0.9998769269891603	WITHOUT_CLASSIFICATION	1.2307301083978192E-4	DEFECT
// Add/Remove tabs	WITHOUT_CLASSIFICATION	0.999950013560644	WITHOUT_CLASSIFICATION	4.9986439356030275E-5	DEFECT
// Add missing EOF character	WITHOUT_CLASSIFICATION	0.9999659291873209	WITHOUT_CLASSIFICATION	3.407081267923878E-5	DEFECT
// Mask, block from being edited, all characters in constants.	WITHOUT_CLASSIFICATION	0.9990690454312614	WITHOUT_CLASSIFICATION	9.309545687385396E-4	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999298638532665	WITHOUT_CLASSIFICATION	7.013614673339366E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// EOL	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// EOL was "\n"	WITHOUT_CLASSIFICATION	0.9999389175516792	WITHOUT_CLASSIFICATION	6.108244832077816E-5	DEFECT
// EOL was "\r\r\n"	WITHOUT_CLASSIFICATION	0.9999389175516792	WITHOUT_CLASSIFICATION	6.108244832077816E-5	DEFECT
// EOL was "\r"	WITHOUT_CLASSIFICATION	0.9999389175516792	WITHOUT_CLASSIFICATION	6.108244832077816E-5	DEFECT
// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)	WITHOUT_CLASSIFICATION	0.9999743876309547	WITHOUT_CLASSIFICATION	2.561236904539139E-5	DEFECT
// if source is EOF but last character was NOT ctrl-z, return ctrl-z	WITHOUT_CLASSIFICATION	0.9999915997693973	WITHOUT_CLASSIFICATION	8.400230602613742E-6	DEFECT
// Return current look-ahead	WITHOUT_CLASSIFICATION	0.9999669514493558	WITHOUT_CLASSIFICATION	3.304855064423191E-5	DEFECT
// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"	WITHOUT_CLASSIFICATION	0.9999908344717885	WITHOUT_CLASSIFICATION	9.165528211527899E-6	DEFECT
// Instance initializer: Executes just after the super() call in this // class's constructor.	WITHOUT_CLASSIFICATION	0.9995660614723526	WITHOUT_CLASSIFICATION	4.339385276474608E-4	DEFECT
// Return copy so that the call must call setEof() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999510945245377	WITHOUT_CLASSIFICATION	4.890547546242565E-5	DEFECT
// Return copy so that the call must call setEol() to change the state // of fixCRLF	WITHOUT_CLASSIFICATION	0.9999510945245377	WITHOUT_CLASSIFICATION	4.890547546242565E-5	DEFECT
// Return copy so that the caller must call setTab() to change the state // of fixCRLF.	WITHOUT_CLASSIFICATION	0.9999524720960911	WITHOUT_CLASSIFICATION	4.752790390897201E-5	DEFECT
// If I'm removing an EOF character, do so first so that the other // filters don't see that character.	WITHOUT_CLASSIFICATION	0.9999818789562799	WITHOUT_CLASSIFICATION	1.8121043720142413E-5	DEFECT
// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.	WITHOUT_CLASSIFICATION	0.9999259512509856	WITHOUT_CLASSIFICATION	7.40487490144457E-5	DEFECT
// If filtering Java source, prevent changes to whitespace in // character and string literals.	WITHOUT_CLASSIFICATION	0.9999563158052823	WITHOUT_CLASSIFICATION	4.3684194717616316E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999693364831457	WITHOUT_CLASSIFICATION	3.0663516854219296E-5	DEFECT
// getConstants is a static method, no need to // pass in the object	WITHOUT_CLASSIFICATION	0.9995540032948984	WITHOUT_CLASSIFICATION	4.4599670510160903E-4	DEFECT
//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read	WITHOUT_CLASSIFICATION	0.9993234784446039	WITHOUT_CLASSIFICATION	6.7652155539599E-4	DEFECT
//replace the last 0s by the chars contained in s	WITHOUT_CLASSIFICATION	0.9997258517231232	WITHOUT_CLASSIFICATION	2.741482768767908E-4	DEFECT
// line started with comment	WITHOUT_CLASSIFICATION	0.9998831911937027	WITHOUT_CLASSIFICATION	1.1680880629721393E-4	DEFECT
// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9996653371628017	WITHOUT_CLASSIFICATION	3.346628371982909E-4	DEFECT
// write everything up to the from	WITHOUT_CLASSIFICATION	0.9999024191809587	WITHOUT_CLASSIFICATION	9.758081904129038E-5	DEFECT
// write the replacement to	WITHOUT_CLASSIFICATION	0.9999313900943154	WITHOUT_CLASSIFICATION	6.860990568464659E-5	DEFECT
// search again	WITHOUT_CLASSIFICATION	0.9999680871649523	WITHOUT_CLASSIFICATION	3.1912835047670567E-5	DEFECT
// write the remaining characters	WITHOUT_CLASSIFICATION	0.9999224691291344	WITHOUT_CLASSIFICATION	7.753087086562402E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9994347568921781	WITHOUT_CLASSIFICATION	5.652431078218462E-4	DEFECT
// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997747057190488	WITHOUT_CLASSIFICATION	2.2529428095120432E-4	DEFECT
//Remove start and end quotes if field is a String	WITHOUT_CLASSIFICATION	0.9998310738975383	WITHOUT_CLASSIFICATION	1.6892610246167151E-4	DEFECT
// default buffer size	WITHOUT_CLASSIFICATION	0.9999869199750279	WITHOUT_CLASSIFICATION	1.3080024972158734E-5	DEFECT
/* Stateless */	WITHOUT_CLASSIFICATION	0.9999142678929643	WITHOUT_CLASSIFICATION	8.573210703561125E-5	DEFECT
// singletons - since all state is in the context	WITHOUT_CLASSIFICATION	0.9997138872542357	WITHOUT_CLASSIFICATION	2.861127457643415E-4	DEFECT
// we are in an imported file.	WITHOUT_CLASSIFICATION	0.9999607316205372	WITHOUT_CLASSIFICATION	3.9268379462761625E-5	DEFECT
// top level file	WITHOUT_CLASSIFICATION	0.9999761614385139	WITHOUT_CLASSIFICATION	2.3838561486077506E-5	DEFECT
// ?? OK ??	WITHOUT_CLASSIFICATION	0.9999368742065762	WITHOUT_CLASSIFICATION	6.312579342383945E-5	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999062919046582	WITHOUT_CLASSIFICATION	9.370809534177442E-5	DEFECT
// Set the location of the implicit target associated with the project tag	WITHOUT_CLASSIFICATION	0.9990627252168368	WITHOUT_CLASSIFICATION	9.372747831632008E-4	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999452805564031	WITHOUT_CLASSIFICATION	5.4719443596940114E-5	DEFECT
// Ignore attributes from unknown uris	WITHOUT_CLASSIFICATION	0.9999452805564031	WITHOUT_CLASSIFICATION	5.4719443596940114E-5	DEFECT
// What's the difference between id and name ?	WITHOUT_CLASSIFICATION	0.999929697121359	WITHOUT_CLASSIFICATION	7.030287864104839E-5	DEFECT
// no further processing	WITHOUT_CLASSIFICATION	0.9999732787189376	WITHOUT_CLASSIFICATION	2.672128106245402E-5	DEFECT
// set explicitly before starting ?	WITHOUT_CLASSIFICATION	0.9999554349733428	WITHOUT_CLASSIFICATION	4.456502665718024E-5	DEFECT
// Default for baseDir is the location of the build file.	WITHOUT_CLASSIFICATION	0.9995080337995164	WITHOUT_CLASSIFICATION	4.919662004835599E-4	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9997086005443052	WITHOUT_CLASSIFICATION	2.913994556948179E-4	DEFECT
// Check if this target is in the current build file	WITHOUT_CLASSIFICATION	0.9999770742127173	WITHOUT_CLASSIFICATION	2.2925787282601485E-5	DEFECT
// If the name has not already been defined define it	WITHOUT_CLASSIFICATION	0.9999718381455849	WITHOUT_CLASSIFICATION	2.816185441516327E-5	DEFECT
// In an impored file (and not completely // ignoring the project tag)	WITHOUT_CLASSIFICATION	0.9906833203738675	WITHOUT_CLASSIFICATION	0.009316679626132567	DEFECT
/* UnknownElement is used for tasks and data types - with               delayed eval */	WITHOUT_CLASSIFICATION	0.9983412536970941	WITHOUT_CLASSIFICATION	0.0016587463029059193	DEFECT
// Nested element	WITHOUT_CLASSIFICATION	0.999954196190275	WITHOUT_CLASSIFICATION	4.580380972494818E-5	DEFECT
// Task included in a target ( including the default one ).	WITHOUT_CLASSIFICATION	0.9999973489742933	WITHOUT_CLASSIFICATION	2.6510257067880413E-6	DEFECT
// container.addTask(task); // This is a nop in UE: task.init();	WITHOUT_CLASSIFICATION	0.9953814535589902	WITHOUT_CLASSIFICATION	0.004618546441009745	DEFECT
// **   simple name specified   == path in list + name	WITHOUT_CLASSIFICATION	0.9999520498516352	WITHOUT_CLASSIFICATION	4.795014836479223E-5	DEFECT
// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)	WITHOUT_CLASSIFICATION	0.9832563782535728	WITHOUT_CLASSIFICATION	0.016743621746427212	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// use default if not file or file not found	WITHOUT_CLASSIFICATION	0.9999062919046582	WITHOUT_CLASSIFICATION	9.370809534177442E-5	DEFECT
// check whether the user has specified an absolute path	WITHOUT_CLASSIFICATION	0.9997086005443052	WITHOUT_CLASSIFICATION	2.913994556948179E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Start handling SAX events	WITHOUT_CLASSIFICATION	0.9998252828988647	WITHOUT_CLASSIFICATION	1.747171011352474E-4	DEFECT
// Let parent resume handling SAX events	WITHOUT_CLASSIFICATION	0.9994006732913179	WITHOUT_CLASSIFICATION	5.993267086821154E-4	DEFECT
// implicit target must be first on dependency list	WITHOUT_CLASSIFICATION	0.9999691325702296	WITHOUT_CLASSIFICATION	3.086742977045746E-5	DEFECT
// take care of dependencies	WITHOUT_CLASSIFICATION	0.9997756181067576	WITHOUT_CLASSIFICATION	2.2438189324239987E-4	DEFECT
// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.	WITHOUT_CLASSIFICATION	0.9997956627589184	WITHOUT_CLASSIFICATION	2.0433724108152182E-4	DEFECT
//XXX task.setTaskType(tag);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// task can contain other tasks - no other nested elements possible	WITHOUT_CLASSIFICATION	0.99993460908703	WITHOUT_CLASSIFICATION	6.539091296992463E-5	DEFECT
// taskcontainer nested element can contain other tasks - no other // nested elements possible	WITHOUT_CLASSIFICATION	0.9999436347817435	WITHOUT_CLASSIFICATION	5.636521825650101E-5	DEFECT
// Should not happen	WITHOUT_CLASSIFICATION	0.999791534789372	WITHOUT_CLASSIFICATION	2.0846521062804597E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999458688851847	WITHOUT_CLASSIFICATION	5.413111481529386E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9996645873566685	WITHOUT_CLASSIFICATION	3.354126433313969E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999934449845837	WITHOUT_CLASSIFICATION	6.55501541630799E-5	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999957792453414	WITHOUT_CLASSIFICATION	4.220754658603788E-6	DEFECT
// Fine, Java 1.3 or earlier, do it by hand.	WITHOUT_CLASSIFICATION	0.9999828725158183	WITHOUT_CLASSIFICATION	1.7127484181626173E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Bad URI, pass this on.	WITHOUT_CLASSIFICATION	0.9990244502883483	WITHOUT_CLASSIFICATION	9.755497116517711E-4	DEFECT
// Unexpected target exception? Should not happen.	WITHOUT_CLASSIFICATION	0.9999472750656199	WITHOUT_CLASSIFICATION	5.272493438019111E-5	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9996137887456495	WITHOUT_CLASSIFICATION	3.862112543503547E-4	DEFECT
// Fallback method for Java 1.3 or earlier.	WITHOUT_CLASSIFICATION	0.9999666802764338	WITHOUT_CLASSIFICATION	3.331972356614599E-5	DEFECT
// Ignore malformed exception	WITHOUT_CLASSIFICATION	0.9999355647002607	WITHOUT_CLASSIFICATION	6.443529973931222E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9949621689353464	WITHOUT_CLASSIFICATION	0.005037831064653534	DEFECT
// record the fact that it's escaped	WITHOUT_CLASSIFICATION	0.999900537431561	WITHOUT_CLASSIFICATION	9.946256843897595E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999625934844849	WITHOUT_CLASSIFICATION	3.7406515515046545E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998632362521173	WITHOUT_CLASSIFICATION	1.3676374788270095E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999511046018306	WITHOUT_CLASSIFICATION	4.889539816933341E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997703102551202	WITHOUT_CLASSIFICATION	2.296897448797989E-4	DEFECT
// firstly check if the tools jar is already in the classpath	WITHOUT_CLASSIFICATION	0.9999241002549266	WITHOUT_CLASSIFICATION	7.589974507339285E-5	DEFECT
// just check whether this throws an exception	WITHOUT_CLASSIFICATION	0.9998966546094177	WITHOUT_CLASSIFICATION	1.0334539058234623E-4	DEFECT
// couldn't find compiler - try to find tools.jar // based on java.home setting	WITHOUT_CLASSIFICATION	0.99987565347376	WITHOUT_CLASSIFICATION	1.243465262400463E-4	DEFECT
// Found in java.home as given	WITHOUT_CLASSIFICATION	0.999977519332245	WITHOUT_CLASSIFICATION	2.2480667755046294E-5	DEFECT
// add any jars in the directory	WITHOUT_CLASSIFICATION	0.9999658536146396	WITHOUT_CLASSIFICATION	3.414638536039752E-5	DEFECT
// now update the class.path property	WITHOUT_CLASSIFICATION	0.9999040808855764	WITHOUT_CLASSIFICATION	9.59191144236257E-5	DEFECT
// overlay specified properties file (if any), which overrides project // settings	WITHOUT_CLASSIFICATION	0.9999052300829095	WITHOUT_CLASSIFICATION	9.476991709047328E-5	DEFECT
// ignore because properties file is not required	WITHOUT_CLASSIFICATION	0.998485072745414	WITHOUT_CLASSIFICATION	0.0015149272545860505	DEFECT
// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;	WITHOUT_CLASSIFICATION	0.9999412815937304	WITHOUT_CLASSIFICATION	5.871840626972614E-5	DEFECT
// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;	WITHOUT_CLASSIFICATION	0.9999380113935588	WITHOUT_CLASSIFICATION	6.198860644131306E-5	DEFECT
// private static final int FG_BLACK = 30;	WITHOUT_CLASSIFICATION	0.9999371571075151	WITHOUT_CLASSIFICATION	6.28428924849325E-5	DEFECT
// private static final int FG_YELLOW = 33;	WITHOUT_CLASSIFICATION	0.9999371571075151	WITHOUT_CLASSIFICATION	6.28428924849325E-5	DEFECT
// private static final int FG_WHITE = 37;	WITHOUT_CLASSIFICATION	0.9999371571075151	WITHOUT_CLASSIFICATION	6.28428924849325E-5	DEFECT
//Ignore - we will use the defaults.	WITHOUT_CLASSIFICATION	0.9988483781466388	WITHOUT_CLASSIFICATION	0.001151621853361163	DEFECT
//Ignore - We do not want this to stop the build.	WITHOUT_CLASSIFICATION	0.9970929589021996	WITHOUT_CLASSIFICATION	0.0029070410978004188	DEFECT
// Fall through	WITHOUT_CLASSIFICATION	0.9999475013827737	WITHOUT_CLASSIFICATION	5.2498617226467695E-5	DEFECT
// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist	WITHOUT_CLASSIFICATION	0.9963977072101664	WITHOUT_CLASSIFICATION	0.0036022927898335896	DEFECT
// Use the logger config	WITHOUT_CLASSIFICATION	0.9999770361454396	WITHOUT_CLASSIFICATION	2.296385456038133E-5	DEFECT
// Since task log category includes target, we don't really // need this message	WITHOUT_CLASSIFICATION	0.9977454913143284	WITHOUT_CLASSIFICATION	0.002254508685671571	DEFECT
// Driver doesn't understand the URL	WITHOUT_CLASSIFICATION	0.9997944591941118	WITHOUT_CLASSIFICATION	2.0554080588826578E-4	DEFECT
// It's a task - append the target	WITHOUT_CLASSIFICATION	0.9999665382843238	WITHOUT_CLASSIFICATION	3.3461715676232365E-5	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999134604333736	WITHOUT_CLASSIFICATION	8.653956662642263E-5	DEFECT
// Doesn't make sense for c-l. Use the logger config	WITHOUT_CLASSIFICATION	0.999854098974922	WITHOUT_CLASSIFICATION	1.4590102507798812E-4	DEFECT
// Could not get the required information	WITHOUT_CLASSIFICATION	0.9957122364523675	WITHOUT_CLASSIFICATION	0.0042877635476325044	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9989905978002861	WITHOUT_CLASSIFICATION	0.00100940219971389	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9998895755360439	WITHOUT_CLASSIFICATION	1.1042446395621643E-4	DEFECT
// If no webxml file is specified, it's an error.	WITHOUT_CLASSIFICATION	0.9999365015108692	WITHOUT_CLASSIFICATION	6.349848913074023E-5	DEFECT
// One cannot RMIC an interface for "classic" RMI (JRMP)	WITHOUT_CLASSIFICATION	0.9997675768871286	WITHOUT_CLASSIFICATION	2.3242311287149995E-4	DEFECT
// otherwise perform a timestamp comparison - at least	WITHOUT_CLASSIFICATION	0.9996327738756211	WITHOUT_CLASSIFICATION	3.672261243788541E-4	DEFECT
// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.	WITHOUT_CLASSIFICATION	0.9972902756584066	WITHOUT_CLASSIFICATION	0.002709724341593498	DEFECT
/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */	WITHOUT_CLASSIFICATION	0.9999974819532116	WITHOUT_CLASSIFICATION	2.5180467884535084E-6	DEFECT
// no source file generated, nothing to move	WITHOUT_CLASSIFICATION	0.9999932781928017	WITHOUT_CLASSIFICATION	6.721807198306087E-6	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9998821914287858	WITHOUT_CLASSIFICATION	1.178085712142535E-4	DEFECT
// **   full-pathname specified == path in list // **   simple name specified   == path in list	WITHOUT_CLASSIFICATION	0.9999461181380448	WITHOUT_CLASSIFICATION	5.38818619552358E-5	DEFECT
// we only get here if an exception has been thrown	WITHOUT_CLASSIFICATION	0.9993180751246666	WITHOUT_CLASSIFICATION	6.819248753332745E-4	DEFECT
// **   full-pathname specified == parent dir of path in list	WITHOUT_CLASSIFICATION	0.9998486914128075	WITHOUT_CLASSIFICATION	1.5130858719242067E-4	DEFECT
// not the requested type	WITHOUT_CLASSIFICATION	0.9998821914287858	WITHOUT_CLASSIFICATION	1.178085712142535E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//the rest of the method treats single jar like //a nested path with one file	WITHOUT_CLASSIFICATION	0.9999803565464439	WITHOUT_CLASSIFICATION	1.9643453556011963E-5	DEFECT
// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines	WITHOUT_CLASSIFICATION	0.9999160332540474	WITHOUT_CLASSIFICATION	8.396674595255395E-5	DEFECT
// scan base dirs to build up compile lists only if a // specific classname is not given	WITHOUT_CLASSIFICATION	0.9993040721660902	WITHOUT_CLASSIFICATION	6.959278339098436E-4	DEFECT
// **   simple name specified   == parent dir + name	WITHOUT_CLASSIFICATION	0.9998518738748057	WITHOUT_CLASSIFICATION	1.4812612519425622E-4	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999636011766954	WITHOUT_CLASSIFICATION	3.639882330457422E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999954263078487	WITHOUT_CLASSIFICATION	4.573692151326679E-6	DEFECT
// must be "add"	WITHOUT_CLASSIFICATION	0.9999237454930424	WITHOUT_CLASSIFICATION	7.625450695751489E-5	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.999931142989281	WITHOUT_CLASSIFICATION	6.885701071899397E-5	DEFECT
// log options used	WITHOUT_CLASSIFICATION	0.9999952141083612	WITHOUT_CLASSIFICATION	4.785891638785524E-6	DEFECT
//patch file into the fileset	WITHOUT_CLASSIFICATION	0.9997731897801081	WITHOUT_CLASSIFICATION	2.2681021989197302E-4	DEFECT
//set our parent dir	WITHOUT_CLASSIFICATION	0.9997080035170853	WITHOUT_CLASSIFICATION	2.91996482914637E-4	DEFECT
// Compare the destination with the temp file	WITHOUT_CLASSIFICATION	0.9999453899926702	WITHOUT_CLASSIFICATION	5.461000732965824E-5	DEFECT
// Eof has been reached	WITHOUT_CLASSIFICATION	0.9999199054470934	WITHOUT_CLASSIFICATION	8.009455290660992E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// don't reposition when we've reached the end // of the stream	WITHOUT_CLASSIFICATION	0.999469214198289	WITHOUT_CLASSIFICATION	5.307858017110256E-4	DEFECT
// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr	WITHOUT_CLASSIFICATION	0.9999904693132765	WITHOUT_CLASSIFICATION	9.530686723482138E-6	DEFECT
// keep searching for the first ^Z	WITHOUT_CLASSIFICATION	0.9999627721776221	WITHOUT_CLASSIFICATION	3.72278223779193E-5	DEFECT
// Trailing characters are ^Zs // Construct new line and eofStr	WITHOUT_CLASSIFICATION	0.9999519437549413	WITHOUT_CLASSIFICATION	4.80562450586001E-5	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9998290844822108	WITHOUT_CLASSIFICATION	1.7091551778927784E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999438295231814	WITHOUT_CLASSIFICATION	5.61704768185916E-4	DEFECT
// shadow of the above if the value is altered in execute	WITHOUT_CLASSIFICATION	0.9995344108339186	WITHOUT_CLASSIFICATION	4.6558916608139324E-4	DEFECT
// For directories:	WITHOUT_CLASSIFICATION	0.9999486250851878	WITHOUT_CLASSIFICATION	5.137491481229498E-5	DEFECT
// Renamed version of original file, if it exists	WITHOUT_CLASSIFICATION	0.9997756647687819	WITHOUT_CLASSIFICATION	2.2433523121821454E-4	DEFECT
// Add the files found in groupfileset to fileset	WITHOUT_CLASSIFICATION	0.9999613225525621	WITHOUT_CLASSIFICATION	3.8677447437919556E-5	DEFECT
// can also handle empty archives	WITHOUT_CLASSIFICATION	0.9999892730131794	WITHOUT_CLASSIFICATION	1.0726986820601639E-5	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999688983275469	WITHOUT_CLASSIFICATION	3.110167245304736E-5	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999601360541754	WITHOUT_CLASSIFICATION	3.986394582457799E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999548617988285	WITHOUT_CLASSIFICATION	4.513820117158233E-5	DEFECT
// delete a bogus ZIP file (but only if it's not the original one)	WITHOUT_CLASSIFICATION	0.9985360825516629	WITHOUT_CLASSIFICATION	0.0014639174483370696	DEFECT
// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.	WITHOUT_CLASSIFICATION	0.934671932774447	WITHOUT_CLASSIFICATION	0.06532806722555305	DEFECT
// Cf. PKZIP specification.	WITHOUT_CLASSIFICATION	0.999922169073719	WITHOUT_CLASSIFICATION	7.78309262810474E-5	DEFECT
// P // K	WITHOUT_CLASSIFICATION	0.9997516194953933	WITHOUT_CLASSIFICATION	2.483805046067562E-4	DEFECT
// remainder zeros	WITHOUT_CLASSIFICATION	0.9999293874316089	WITHOUT_CLASSIFICATION	7.061256839113003E-5	DEFECT
// Create.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999548617988285	WITHOUT_CLASSIFICATION	4.513820117158233E-5	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.998794280147308	WITHOUT_CLASSIFICATION	0.001205719852691958	DEFECT
// initialResources is not empty	WITHOUT_CLASSIFICATION	0.998794280147308	WITHOUT_CLASSIFICATION	0.001205719852691958	DEFECT
// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination	WITHOUT_CLASSIFICATION	0.9988054142537336	WITHOUT_CLASSIFICATION	0.0011945857462663698	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999548617988285	WITHOUT_CLASSIFICATION	4.513820117158233E-5	DEFECT
// we are recreating the archive, need all resources	WITHOUT_CLASSIFICATION	0.9999548617988285	WITHOUT_CLASSIFICATION	4.513820117158233E-5	DEFECT
// no emptyBehavior handling since the FileSet version // will take care of it.	WITHOUT_CLASSIFICATION	0.9998128330654059	WITHOUT_CLASSIFICATION	1.8716693459396039E-4	DEFECT
/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */	WITHOUT_CLASSIFICATION	0.9998635048501204	WITHOUT_CLASSIFICATION	1.3649514987953854E-4	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999735606223343	WITHOUT_CLASSIFICATION	2.64393776656293E-5	DEFECT
// we will return initialResources anyway, no reason // to scan further.	WITHOUT_CLASSIFICATION	0.9999735606223343	WITHOUT_CLASSIFICATION	2.64393776656293E-5	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.999649402662498	WITHOUT_CLASSIFICATION	3.5059733750198704E-4	DEFECT
// don't add directories we've already added. // no warning if we try, it is harmless in and of itself	WITHOUT_CLASSIFICATION	0.9999808174634693	WITHOUT_CLASSIFICATION	1.918253653070398E-5	DEFECT
// A "refid" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9997905438657411	WITHOUT_CLASSIFICATION	2.0945613425900383E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999438295231814	WITHOUT_CLASSIFICATION	5.61704768185916E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999438295231814	WITHOUT_CLASSIFICATION	5.61704768185916E-4	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.999649402662498	WITHOUT_CLASSIFICATION	3.5059733750198704E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// duplicate equal to add, so we continue	WITHOUT_CLASSIFICATION	0.9999230765582783	WITHOUT_CLASSIFICATION	7.692344172172153E-5	DEFECT
// Store data into a byte[]	WITHOUT_CLASSIFICATION	0.9996154674433306	WITHOUT_CLASSIFICATION	3.8453255666940327E-4	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9996097288354813	WITHOUT_CLASSIFICATION	3.902711645186699E-4	DEFECT
// set user-defined properties	WITHOUT_CLASSIFICATION	0.9999740088754987	WITHOUT_CLASSIFICATION	2.5991124501225263E-5	DEFECT
// set Java built-in properties separately, // b/c we won't inherit them.	WITHOUT_CLASSIFICATION	0.999989853789653	WITHOUT_CLASSIFICATION	1.0146210347004674E-5	DEFECT
// set all properties from calling project	WITHOUT_CLASSIFICATION	0.9998635884838624	WITHOUT_CLASSIFICATION	1.3641151613757877E-4	DEFECT
// has been set explicitly	WITHOUT_CLASSIFICATION	0.9999806352457677	WITHOUT_CLASSIFICATION	1.9364754232298913E-5	DEFECT
// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?	WITHOUT_CLASSIFICATION	0.9999764209501635	WITHOUT_CLASSIFICATION	2.3579049836576383E-5	DEFECT
// help the gc	WITHOUT_CLASSIFICATION	0.9999604391612201	WITHOUT_CLASSIFICATION	3.956083877994803E-5	DEFECT
// remove duplicate properties - last property wins // Needed for backward compatibility	WITHOUT_CLASSIFICATION	0.9996229578609446	WITHOUT_CLASSIFICATION	3.7704213905537384E-4	DEFECT
// Now add all references that are not defined in the // subproject, if inheritRefs is true	WITHOUT_CLASSIFICATION	0.9999386141968923	WITHOUT_CLASSIFICATION	6.138580310772133E-5	DEFECT
// not Clonable	WITHOUT_CLASSIFICATION	0.9995166588158447	WITHOUT_CLASSIFICATION	4.8334118415523916E-4	DEFECT
// ignore this if the class being referenced does not have // a set project method.	WITHOUT_CLASSIFICATION	0.982807848515954	WITHOUT_CLASSIFICATION	0.01719215148404602	DEFECT
// basedir and ant.file get special treatment in execute()	WITHOUT_CLASSIFICATION	0.9998108997279699	WITHOUT_CLASSIFICATION	1.8910027203002575E-4	DEFECT
// don't re-set user properties, avoid the warning message	WITHOUT_CLASSIFICATION	0.999608589503572	WITHOUT_CLASSIFICATION	3.914104964280424E-4	DEFECT
// no user property	WITHOUT_CLASSIFICATION	0.9998096037891899	WITHOUT_CLASSIFICATION	1.9039621080997558E-4	DEFECT
// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.	WITHOUT_CLASSIFICATION	0.9989886684359452	WITHOUT_CLASSIFICATION	0.0010113315640547687	DEFECT
/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9999588166853817	WITHOUT_CLASSIFICATION	4.118331461821187E-5	DEFECT
// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this	WITHOUT_CLASSIFICATION	0.9999491496468002	WITHOUT_CLASSIFICATION	5.08503531998197E-5	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999196935818272	WITHOUT_CLASSIFICATION	8.030641817278096E-5	DEFECT
//this isnt strictly needed, but by being fussy now, //we can change implementation details later	WITHOUT_CLASSIFICATION	0.999913774766927	WITHOUT_CLASSIFICATION	8.622523307302425E-5	DEFECT
//special case single jar handling with signedjar attribute set	WITHOUT_CLASSIFICATION	0.9999226184469612	WITHOUT_CLASSIFICATION	7.738155303883396E-5	DEFECT
// single jar processing	WITHOUT_CLASSIFICATION	0.999895181962094	WITHOUT_CLASSIFICATION	1.0481803790595761E-4	DEFECT
//return here.	WITHOUT_CLASSIFICATION	0.9994089604432163	WITHOUT_CLASSIFICATION	5.910395567837754E-4	DEFECT
//set up our mapping policy	WITHOUT_CLASSIFICATION	0.9995270219928033	WITHOUT_CLASSIFICATION	4.7297800719669353E-4	DEFECT
//no mapper? use the identity policy	WITHOUT_CLASSIFICATION	0.9991999967590048	WITHOUT_CLASSIFICATION	8.000032409951633E-4	DEFECT
//determine the destination filename via the mapper	WITHOUT_CLASSIFICATION	0.9998846440079032	WITHOUT_CLASSIFICATION	1.1535599209681159E-4	DEFECT
//we only like simple mappers.	WITHOUT_CLASSIFICATION	0.9998288296310308	WITHOUT_CLASSIFICATION	1.7117036896917696E-4	DEFECT
//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports	WITHOUT_CLASSIFICATION	0.9999008177022889	WITHOUT_CLASSIFICATION	9.918229771115475E-5	DEFECT
//add -tsa operations if declared	WITHOUT_CLASSIFICATION	0.9997072647998111	WITHOUT_CLASSIFICATION	2.927352001888917E-4	DEFECT
//JAR source is required	WITHOUT_CLASSIFICATION	0.9997734299041858	WITHOUT_CLASSIFICATION	2.2657009581431142E-4	DEFECT
//alias is required for signing	WITHOUT_CLASSIFICATION	0.9984898456898601	WITHOUT_CLASSIFICATION	0.0015101543101398716	DEFECT
// restore the lastModified attribute	WITHOUT_CLASSIFICATION	0.9995254830031445	WITHOUT_CLASSIFICATION	4.7451699685554214E-4	DEFECT
//we normally compare destination with source	WITHOUT_CLASSIFICATION	0.999888464687204	WITHOUT_CLASSIFICATION	1.1153531279600932E-4	DEFECT
//but if no dest is specified, compare source to source	WITHOUT_CLASSIFICATION	0.9998848483282653	WITHOUT_CLASSIFICATION	1.1515167173470427E-4	DEFECT
//if, by any means, the destfile and source match,	WITHOUT_CLASSIFICATION	0.9999451996696003	WITHOUT_CLASSIFICATION	5.480033039968305E-5	DEFECT
//we check the presence of signatures on lazy signing	WITHOUT_CLASSIFICATION	0.9998091783362353	WITHOUT_CLASSIFICATION	1.9082166376472277E-4	DEFECT
//unsigned or non-lazy self signings are always false	WITHOUT_CLASSIFICATION	0.9999386690069906	WITHOUT_CLASSIFICATION	6.133099300947193E-5	DEFECT
//if they are different, the timestamps are used	WITHOUT_CLASSIFICATION	0.9999932026659034	WITHOUT_CLASSIFICATION	6.797334096656912E-6	DEFECT
//just log this	WITHOUT_CLASSIFICATION	0.9996205103745761	WITHOUT_CLASSIFICATION	3.794896254239655E-4	DEFECT
// fileutils	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// --- Fields --	WITHOUT_CLASSIFICATION	0.9999498585756256	WITHOUT_CLASSIFICATION	5.014142437445067E-5	DEFECT
// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.	WITHOUT_CLASSIFICATION	0.9976774756982844	WITHOUT_CLASSIFICATION	0.00232252430171553	DEFECT
// Error generated during parsing	WITHOUT_CLASSIFICATION	0.9996528469531795	WITHOUT_CLASSIFICATION	3.471530468205319E-4	DEFECT
// Parser with specified options can't be built	WITHOUT_CLASSIFICATION	0.999387219835541	WITHOUT_CLASSIFICATION	6.127801644589711E-4	DEFECT
// I/O error	WITHOUT_CLASSIFICATION	0.9998635604929013	WITHOUT_CLASSIFICATION	1.3643950709865503E-4	DEFECT
// Set the prefix for this node to include its tag name.	WITHOUT_CLASSIFICATION	0.9999195958904111	WITHOUT_CLASSIFICATION	8.04041095887777E-5	DEFECT
// Pass the container to the processing of this node,	WITHOUT_CLASSIFICATION	0.9993465886178952	WITHOUT_CLASSIFICATION	6.534113821048468E-4	DEFECT
// now, iterate through children.	WITHOUT_CLASSIFICATION	0.9998708334971083	WITHOUT_CLASSIFICATION	1.2916650289171265E-4	DEFECT
// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.	WITHOUT_CLASSIFICATION	0.9989290623416622	WITHOUT_CLASSIFICATION	0.0010709376583377546	DEFECT
// The value of an id attribute of this node.	WITHOUT_CLASSIFICATION	0.9986170728205949	WITHOUT_CLASSIFICATION	0.0013829271794052016	DEFECT
// Is there an id attribute?	WITHOUT_CLASSIFICATION	0.9998385453018221	WITHOUT_CLASSIFICATION	1.6145469817785218E-4	DEFECT
// Now, iterate through the attributes adding them.	WITHOUT_CLASSIFICATION	0.9999661244320402	WITHOUT_CLASSIFICATION	3.387556795970523E-5	DEFECT
/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */	WITHOUT_CLASSIFICATION	0.9999792713788419	WITHOUT_CLASSIFICATION	2.0728621158098155E-5	DEFECT
// ID has already been found above.	WITHOUT_CLASSIFICATION	0.9999620157090923	WITHOUT_CLASSIFICATION	3.798429090769422E-5	DEFECT
// A "path" attribute for a node within a Path object.	WITHOUT_CLASSIFICATION	0.9997905438657411	WITHOUT_CLASSIFICATION	2.0945613425900383E-4	DEFECT
// A node identifying a new path	WITHOUT_CLASSIFICATION	0.9999688514994117	WITHOUT_CLASSIFICATION	3.1148500588323046E-5	DEFECT
// For the text node, add a property.	WITHOUT_CLASSIFICATION	0.9999771512047133	WITHOUT_CLASSIFICATION	2.284879528666547E-5	DEFECT
// If the containing object was a String, then use it as the ID.	WITHOUT_CLASSIFICATION	0.9999787556224502	WITHOUT_CLASSIFICATION	2.124437754975377E-5	DEFECT
// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.	WITHOUT_CLASSIFICATION	0.9998559156311252	WITHOUT_CLASSIFICATION	1.440843688747775E-4	DEFECT
// Never include the "refid" attribute as part of the // attribute name.	WITHOUT_CLASSIFICATION	0.9999979805803958	WITHOUT_CLASSIFICATION	2.0194196042069272E-6	DEFECT
// Otherwise, return it appended unless property to hide it is set.	WITHOUT_CLASSIFICATION	0.9997640078979767	WITHOUT_CLASSIFICATION	2.359921020232375E-4	DEFECT
/* Expose members for extensibility */	WITHOUT_CLASSIFICATION	0.9996691584033629	WITHOUT_CLASSIFICATION	3.308415966370505E-4	DEFECT
// delegate this way around to support subclasses that // overwrite getFile	WITHOUT_CLASSIFICATION	0.9996408976411668	WITHOUT_CLASSIFICATION	3.59102358833163E-4	DEFECT
//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.	WITHOUT_CLASSIFICATION	0.9998759648764168	WITHOUT_CLASSIFICATION	1.2403512358327517E-4	DEFECT
//convert the URI to a resource	WITHOUT_CLASSIFICATION	0.9995391233527788	WITHOUT_CLASSIFICATION	4.608766472212702E-4	DEFECT
//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.	WITHOUT_CLASSIFICATION	0.9999830551667684	WITHOUT_CLASSIFICATION	1.6944833231471144E-5	DEFECT
//if we haven't already named an XML file, it gets antlib.xml	WITHOUT_CLASSIFICATION	0.9996640362213204	WITHOUT_CLASSIFICATION	3.359637786796542E-4	DEFECT
//convert from a package to a path	WITHOUT_CLASSIFICATION	0.9995986589816422	WITHOUT_CLASSIFICATION	4.0134101835779114E-4	DEFECT
// Here if there is an error	WITHOUT_CLASSIFICATION	0.9999288947372881	WITHOUT_CLASSIFICATION	7.1105262711972E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// log at a lower level	WITHOUT_CLASSIFICATION	0.9999501098193603	WITHOUT_CLASSIFICATION	4.989018063973051E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999966945812138	WITHOUT_CLASSIFICATION	3.305418786206391E-5	DEFECT
//trick to evoke "basedir not set" if null:	WITHOUT_CLASSIFICATION	0.9975551944883404	WITHOUT_CLASSIFICATION	0.002444805511659713	DEFECT
//no sources = nothing to compare; no targets = nothing to delete:	WITHOUT_CLASSIFICATION	0.9999394247502509	WITHOUT_CLASSIFICATION	6.057524974898973E-5	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Members	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// If we are a reference, create a Path from the reference	WITHOUT_CLASSIFICATION	0.9999733535531702	WITHOUT_CLASSIFICATION	2.664644682976701E-5	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.	WITHOUT_CLASSIFICATION	0.9997585976161717	WITHOUT_CLASSIFICATION	2.4140238382841083E-4	DEFECT
// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.	WITHOUT_CLASSIFICATION	0.9998122466066466	WITHOUT_CLASSIFICATION	1.877533933533358E-4	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows	WITHOUT_CLASSIFICATION	0.9988522148766933	WITHOUT_CLASSIFICATION	0.0011477851233067673	DEFECT
// may be altered in validateSetup // may be altered in validateSetup	WITHOUT_CLASSIFICATION	0.9996706549662947	WITHOUT_CLASSIFICATION	3.2934503370530253E-4	DEFECT
// validate our setup	WITHOUT_CLASSIFICATION	0.9997954119463012	WITHOUT_CLASSIFICATION	2.0458805369889295E-4	DEFECT
// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)	WITHOUT_CLASSIFICATION	0.9978366874973758	WITHOUT_CLASSIFICATION	0.002163312502624196	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Get the list of path components in canonical form	WITHOUT_CLASSIFICATION	0.9998433728159725	WITHOUT_CLASSIFICATION	1.566271840275987E-4	DEFECT
// Apply the path prefix map	WITHOUT_CLASSIFICATION	0.999948956793316	WITHOUT_CLASSIFICATION	5.104320668409036E-5	DEFECT
// Now convert the path and file separator characters from the // current os to the target os.	WITHOUT_CLASSIFICATION	0.9999927676848701	WITHOUT_CLASSIFICATION	7.232315129881241E-6	DEFECT
// Place the result into the specified property, // unless setonempty == false	WITHOUT_CLASSIFICATION	0.999960417364562	WITHOUT_CLASSIFICATION	3.9582635438051564E-5	DEFECT
// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.	WITHOUT_CLASSIFICATION	0.999933919939199	WITHOUT_CLASSIFICATION	6.608006080097427E-5	DEFECT
// Note I'm using "!=" to see if we got a new object back from // the apply method.	WITHOUT_CLASSIFICATION	0.9999647246923874	WITHOUT_CLASSIFICATION	3.527530761252613E-5	DEFECT
// We applied one, so we're done	WITHOUT_CLASSIFICATION	0.9999891103916729	WITHOUT_CLASSIFICATION	1.0889608326999563E-5	DEFECT
// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.	WITHOUT_CLASSIFICATION	0.9999394073191604	WITHOUT_CLASSIFICATION	6.0592680839696977E-5	DEFECT
// override with pathsep=	WITHOUT_CLASSIFICATION	0.9999162556087311	WITHOUT_CLASSIFICATION	8.374439126887615E-5	DEFECT
// override with dirsep=	WITHOUT_CLASSIFICATION	0.9999162556087311	WITHOUT_CLASSIFICATION	8.374439126887615E-5	DEFECT
// Check if used by attributes	WITHOUT_CLASSIFICATION	0.999998693038097	WITHOUT_CLASSIFICATION	1.3069619031064595E-6	DEFECT
// ? is there an xml api for this ?	WITHOUT_CLASSIFICATION	0.9984858463447467	WITHOUT_CLASSIFICATION	0.0015141536552533833	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9998366121040937	WITHOUT_CLASSIFICATION	1.633878959062732E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9998401010813562	WITHOUT_CLASSIFICATION	1.5989891864377895E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998452872881972	WITHOUT_CLASSIFICATION	1.5471271180284867E-4	DEFECT
//Validate mandatory attributes	WITHOUT_CLASSIFICATION	0.9994148487615148	WITHOUT_CLASSIFICATION	5.851512384851459E-4	DEFECT
//the property attribute must have access to a property file	WITHOUT_CLASSIFICATION	0.9968458229607651	WITHOUT_CLASSIFICATION	0.003154177039234934	DEFECT
//Make sure property exists in property file	WITHOUT_CLASSIFICATION	0.9994877272401285	WITHOUT_CLASSIFICATION	5.122727598715313E-4	DEFECT
//Default is empty string	WITHOUT_CLASSIFICATION	0.999660699028546	WITHOUT_CLASSIFICATION	3.393009714539548E-4	DEFECT
// Avoid runtime problem on pre 1.4 when compiling post 1.4	WITHOUT_CLASSIFICATION	0.9998721691553821	WITHOUT_CLASSIFICATION	1.2783084461781354E-4	DEFECT
// end of finally	WITHOUT_CLASSIFICATION	0.9999470644432854	WITHOUT_CLASSIFICATION	5.293555671468685E-5	DEFECT
//look for and print warnings	WITHOUT_CLASSIFICATION	0.9998463359520696	WITHOUT_CLASSIFICATION	1.5366404793043935E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9998366121040937	WITHOUT_CLASSIFICATION	1.633878959062732E-4	DEFECT
////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS	WITHOUT_CLASSIFICATION	0.9998452872881972	WITHOUT_CLASSIFICATION	1.5471271180284867E-4	DEFECT
// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed	WITHOUT_CLASSIFICATION	0.9999714664296623	WITHOUT_CLASSIFICATION	2.853357033774856E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999807264803833	WITHOUT_CLASSIFICATION	1.9273519616721778E-5	DEFECT
// no errors so far	WITHOUT_CLASSIFICATION	0.9999974101504638	WITHOUT_CLASSIFICATION	2.5898495362732514E-6	DEFECT
// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.	WITHOUT_CLASSIFICATION	0.999849646448634	WITHOUT_CLASSIFICATION	1.5035355136592353E-4	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999313105023125	WITHOUT_CLASSIFICATION	6.86894976874416E-5	DEFECT
// We must check if the process was not stopped // before being here	WITHOUT_CLASSIFICATION	0.9993112526539908	WITHOUT_CLASSIFICATION	6.88747346009155E-4	DEFECT
// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.	WITHOUT_CLASSIFICATION	0.9980136736569989	WITHOUT_CLASSIFICATION	0.0019863263430010916	DEFECT
////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY	WITHOUT_CLASSIFICATION	0.9998404794252423	WITHOUT_CLASSIFICATION	1.5952057475752593E-4	DEFECT
// get the recorder entry	WITHOUT_CLASSIFICATION	0.9999430904237039	WITHOUT_CLASSIFICATION	5.690957629596536E-5	DEFECT
// set the values on the recorder	WITHOUT_CLASSIFICATION	0.9999780062894524	WITHOUT_CLASSIFICATION	2.199371054752777E-5	DEFECT
////////////////////////////////////////////////////////////////////// // INNER CLASSES	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// create a recorder entry	WITHOUT_CLASSIFICATION	0.9999341939702912	WITHOUT_CLASSIFICATION	6.580602970879384E-5	DEFECT
// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.	WITHOUT_CLASSIFICATION	0.9998492510216337	WITHOUT_CLASSIFICATION	1.5074897836631751E-4	DEFECT
// Read the checksum from disk.	WITHOUT_CLASSIFICATION	0.9998297172187122	WITHOUT_CLASSIFICATION	1.7028278128791209E-4	DEFECT
// A separate directory was explicitly declared	WITHOUT_CLASSIFICATION	0.9999716440666234	WITHOUT_CLASSIFICATION	2.835593337647918E-5	DEFECT
// Empty statement	WITHOUT_CLASSIFICATION	0.9999178902081295	WITHOUT_CLASSIFICATION	8.210979187053239E-5	DEFECT
//can either be a property name string or a file	WITHOUT_CLASSIFICATION	0.9990067799254377	WITHOUT_CLASSIFICATION	9.932200745623382E-4	DEFECT
// file is on wrong format, swallow	WITHOUT_CLASSIFICATION	0.9808959819772921	WITHOUT_CLASSIFICATION	0.019104018022707864	DEFECT
// try to be smart, not to be fooled by a weird directory name	WITHOUT_CLASSIFICATION	0.9997695485746878	WITHOUT_CLASSIFICATION	2.3045142531211263E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// Close the output stream.	WITHOUT_CLASSIFICATION	0.9999601360541754	WITHOUT_CLASSIFICATION	3.986394582457799E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// File is Comparable, so sorting is trivial	WITHOUT_CLASSIFICATION	0.9998795650872181	WITHOUT_CLASSIFICATION	1.2043491278198353E-4	DEFECT
// Loop over the checksums and generate a total hash.	WITHOUT_CLASSIFICATION	0.9999562190184905	WITHOUT_CLASSIFICATION	4.3780981509397715E-5	DEFECT
// Add the digest for the file content	WITHOUT_CLASSIFICATION	0.9999455624085769	WITHOUT_CLASSIFICATION	5.44375914232024E-5	DEFECT
// Add the file path	WITHOUT_CLASSIFICATION	0.9999924727716791	WITHOUT_CLASSIFICATION	7.52722832085263E-6	DEFECT
// two characters form the hex value.	WITHOUT_CLASSIFICATION	0.999970547204661	WITHOUT_CLASSIFICATION	2.945279533896209E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999279765053728	WITHOUT_CLASSIFICATION	7.20234946271749E-5	DEFECT
// Check if the service is configured correctly	WITHOUT_CLASSIFICATION	0.9999154513551676	WITHOUT_CLASSIFICATION	8.454864483234334E-5	DEFECT
// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge	WITHOUT_CLASSIFICATION	0.9998679901159887	WITHOUT_CLASSIFICATION	1.32009884011296E-4	DEFECT
// time to write the manifest	WITHOUT_CLASSIFICATION	0.9999579297163055	WITHOUT_CLASSIFICATION	4.20702836945158E-5	DEFECT
// encoding must be UTF8 as specified in the specs.	WITHOUT_CLASSIFICATION	0.9998983020215285	WITHOUT_CLASSIFICATION	1.0169797847149446E-4	DEFECT
// version-info blankline	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// header newline	WITHOUT_CLASSIFICATION	0.9999387617737432	WITHOUT_CLASSIFICATION	6.12382262568407E-5	DEFECT
// If this is the same name specified in 'manifest', this // is the manifest to use	WITHOUT_CLASSIFICATION	0.996101567685961	WITHOUT_CLASSIFICATION	0.00389843231403901	DEFECT
// we add this to our group of fileset manifests	WITHOUT_CLASSIFICATION	0.9996509767547775	WITHOUT_CLASSIFICATION	3.490232452224184E-4	DEFECT
// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute	WITHOUT_CLASSIFICATION	0.9995839095948773	WITHOUT_CLASSIFICATION	4.160904051227262E-4	DEFECT
// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden	WITHOUT_CLASSIFICATION	0.9999996851430482	WITHOUT_CLASSIFICATION	3.1485695182682317E-7	DEFECT
// need to handle manifest as a special check	WITHOUT_CLASSIFICATION	0.9999812811869067	WITHOUT_CLASSIFICATION	1.8718813093307936E-5	DEFECT
// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.	WITHOUT_CLASSIFICATION	0.999439585514908	WITHOUT_CLASSIFICATION	5.604144850920036E-4	DEFECT
// no existing archive	WITHOUT_CLASSIFICATION	0.9999813814879583	WITHOUT_CLASSIFICATION	1.861851204169324E-5	DEFECT
// Ignore close exception	WITHOUT_CLASSIFICATION	0.9999858949852354	WITHOUT_CLASSIFICATION	1.4105014764637278E-5	DEFECT
// we want to save this info if we are going to make another pass	WITHOUT_CLASSIFICATION	0.9990676808982271	WITHOUT_CLASSIFICATION	9.323191017728751E-4	DEFECT
// couldn't find it - must be on path	WITHOUT_CLASSIFICATION	0.9998518046691633	WITHOUT_CLASSIFICATION	1.4819533083665907E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex	WITHOUT_CLASSIFICATION	0.999773665144414	WITHOUT_CLASSIFICATION	2.2633485558599885E-4	DEFECT
// name newline	WITHOUT_CLASSIFICATION	0.9999448958389375	WITHOUT_CLASSIFICATION	5.510416106240518E-5	DEFECT
// longest match comes first	WITHOUT_CLASSIFICATION	0.9999756834444162	WITHOUT_CLASSIFICATION	2.4316555583783595E-5	DEFECT
// META-INF would be skipped anyway, avoid index for // manifest-only jars.	WITHOUT_CLASSIFICATION	0.9962232771415811	WITHOUT_CLASSIFICATION	0.003776722858419055	DEFECT
// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.	WITHOUT_CLASSIFICATION	0.9999266996101398	WITHOUT_CLASSIFICATION	7.330038986022056E-5	DEFECT
/*protected*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// if the target file is not there, then it can't be up-to-date	WITHOUT_CLASSIFICATION	0.998993472975615	WITHOUT_CLASSIFICATION	0.0010065270243849787	DEFECT
// if the source file isn't there, throw an exception	WITHOUT_CLASSIFICATION	0.9998495222376154	WITHOUT_CLASSIFICATION	1.5047776238466074E-4	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999671315397536	WITHOUT_CLASSIFICATION	3.286846024635692E-5	DEFECT
// need to keep the package private version for backwards compatibility	WITHOUT_CLASSIFICATION	0.9998474779193638	WITHOUT_CLASSIFICATION	1.5252208063610092E-4	DEFECT
// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing	WITHOUT_CLASSIFICATION	0.9999892923753599	WITHOUT_CLASSIFICATION	1.0707624640098302E-5	DEFECT
// add the main fileset to the list of filesets to process.	WITHOUT_CLASSIFICATION	0.9999526354944498	WITHOUT_CLASSIFICATION	4.736450555009572E-5	DEFECT
// check if tar is out of date with respect to each // fileset	WITHOUT_CLASSIFICATION	0.9995525470569654	WITHOUT_CLASSIFICATION	4.4745294303452003E-4	DEFECT
// warn or GNU	WITHOUT_CLASSIFICATION	0.999823415447258	WITHOUT_CLASSIFICATION	1.7658455274211735E-4	DEFECT
// don't add "" to the archive	WITHOUT_CLASSIFICATION	0.9997025096434534	WITHOUT_CLASSIFICATION	2.97490356546621E-4	DEFECT
// '/' is appended for compatibility with the zip task.	WITHOUT_CLASSIFICATION	0.9996813892018093	WITHOUT_CLASSIFICATION	3.186107981907713E-4	DEFECT
// we would end up adding "" to the archive	WITHOUT_CLASSIFICATION	0.9994741675333774	WITHOUT_CLASSIFICATION	5.258324666225978E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// permissible values for compression attribute	WITHOUT_CLASSIFICATION	0.9998290844822108	WITHOUT_CLASSIFICATION	1.7091551778927784E-4	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999867834156326	WITHOUT_CLASSIFICATION	1.3216584367336106E-5	DEFECT
// only override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.999959844584697	WITHOUT_CLASSIFICATION	4.015541530302413E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.999920335291586	WITHOUT_CLASSIFICATION	7.96647084140119E-5	DEFECT
// non-file resources	WITHOUT_CLASSIFICATION	0.999920335291586	WITHOUT_CLASSIFICATION	7.96647084140119E-5	DEFECT
//extend Comparison; retain for BC only	WITHOUT_CLASSIFICATION	0.9981058030934578	WITHOUT_CLASSIFICATION	0.0018941969065422739	DEFECT
//when writing to the log, we'll see what's happening:	WITHOUT_CLASSIFICATION	0.9998725029462593	WITHOUT_CLASSIFICATION	1.27497053740735E-4	DEFECT
/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */	WITHOUT_CLASSIFICATION	0.9997744537506643	WITHOUT_CLASSIFICATION	2.2554624933573275E-4	DEFECT
//only set if successful to this point:	WITHOUT_CLASSIFICATION	0.999748353626391	WITHOUT_CLASSIFICATION	2.516463736089144E-4	DEFECT
// deal with the resource collections	WITHOUT_CLASSIFICATION	0.9999068143056198	WITHOUT_CLASSIFICATION	9.318569438021013E-5	DEFECT
// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.	WITHOUT_CLASSIFICATION	0.9999989689667832	WITHOUT_CLASSIFICATION	1.0310332167799305E-6	DEFECT
// use this to create file and deal with non-writable files	WITHOUT_CLASSIFICATION	0.9991645190258295	WITHOUT_CLASSIFICATION	8.354809741705653E-4	DEFECT
// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.	WITHOUT_CLASSIFICATION	0.9404695851677397	WITHOUT_CLASSIFICATION	0.059530414832260146	DEFECT
// start any daemon threads	WITHOUT_CLASSIFICATION	0.9997048618485818	WITHOUT_CLASSIFICATION	2.9513815141825285E-4	DEFECT
// now run main threads in limited numbers... // start initial batch of threads	WITHOUT_CLASSIFICATION	0.9994109401677264	WITHOUT_CLASSIFICATION	5.890598322736104E-4	DEFECT
// start the timeout thread	WITHOUT_CLASSIFICATION	0.9999208657240656	WITHOUT_CLASSIFICATION	7.913427593445449E-5	DEFECT
// now find available running slots for the remaining threads	WITHOUT_CLASSIFICATION	0.9999365560106649	WITHOUT_CLASSIFICATION	6.344398933505871E-5	DEFECT
// continue on outer while loop to get another // available slot	WITHOUT_CLASSIFICATION	0.9991483201763333	WITHOUT_CLASSIFICATION	8.516798236666658E-4	DEFECT
// if we got here all slots in use, so sleep until // something happens	WITHOUT_CLASSIFICATION	0.9997670168916928	WITHOUT_CLASSIFICATION	2.3298310830734972E-4	DEFECT
// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!	WITHOUT_CLASSIFICATION	0.9999063907276456	WITHOUT_CLASSIFICATION	9.360927235435743E-5	DEFECT
// are all threads finished	WITHOUT_CLASSIFICATION	0.9999184338924731	WITHOUT_CLASSIFICATION	8.156610752682104E-5	DEFECT
// who would interrupt me at a time like this?	WITHOUT_CLASSIFICATION	0.999573462541698	WITHOUT_CLASSIFICATION	4.265374583020657E-4	DEFECT
// now did any of the threads throw an exception	WITHOUT_CLASSIFICATION	0.9988771009395415	WITHOUT_CLASSIFICATION	0.0011228990604583906	DEFECT
// return a bogus number	WITHOUT_CLASSIFICATION	0.999962597161606	WITHOUT_CLASSIFICATION	3.740283839395688E-5	DEFECT
// Should be safe to parse	WITHOUT_CLASSIFICATION	0.9998180717957359	WITHOUT_CLASSIFICATION	1.819282042640566E-4	DEFECT
// Check name is "antlib"	WITHOUT_CLASSIFICATION	0.9999330842288073	WITHOUT_CLASSIFICATION	6.691577119264588E-5	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9994994890324882	WITHOUT_CLASSIFICATION	5.00510967511736E-4	DEFECT
// try to find the executable	WITHOUT_CLASSIFICATION	0.9999738982779207	WITHOUT_CLASSIFICATION	2.6101722079340893E-5	DEFECT
// now try to resolve against the dir if given	WITHOUT_CLASSIFICATION	0.9999957001410316	WITHOUT_CLASSIFICATION	4.299858968339074E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// throw further	WITHOUT_CLASSIFICATION	0.9996856863517789	WITHOUT_CLASSIFICATION	3.143136482210524E-4	DEFECT
// only the first build exception is reported	WITHOUT_CLASSIFICATION	0.9994260202889593	WITHOUT_CLASSIFICATION	5.739797110406576E-4	DEFECT
//include locally for screening purposes	WITHOUT_CLASSIFICATION	0.9994994890324882	WITHOUT_CLASSIFICATION	5.00510967511736E-4	DEFECT
// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.	WITHOUT_CLASSIFICATION	0.999600942696131	WITHOUT_CLASSIFICATION	3.9905730386901895E-4	DEFECT
// Quick fail if this is not a valid OS for the command	WITHOUT_CLASSIFICATION	0.9638697758969079	WITHOUT_CLASSIFICATION	0.036130224103092044	DEFECT
// possibly altered in prepareExec	WITHOUT_CLASSIFICATION	0.999474674028558	WITHOUT_CLASSIFICATION	5.253259714418381E-4	DEFECT
//hand osfamily off to Os class, if set	WITHOUT_CLASSIFICATION	0.9999574749325701	WITHOUT_CLASSIFICATION	4.252506742994264E-5	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9929118710629783	WITHOUT_CLASSIFICATION	0.007088128937021692	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999885307851474	WITHOUT_CLASSIFICATION	1.14692148526839E-5	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999319316963876	WITHOUT_CLASSIFICATION	6.806830361238114E-5	DEFECT
//test for and handle a forced process death	WITHOUT_CLASSIFICATION	0.9999549319605389	WITHOUT_CLASSIFICATION	4.5068039461176286E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999668997835593	WITHOUT_CLASSIFICATION	3.3100216440680155E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999937048754123	WITHOUT_CLASSIFICATION	6.295124587731654E-6	DEFECT
// Same as regular <copy> task... see at end-of-file!	WITHOUT_CLASSIFICATION	0.9999611909946572	WITHOUT_CLASSIFICATION	3.880900534290543E-5	DEFECT
// Override Task#init	WITHOUT_CLASSIFICATION	0.9999277107403841	WITHOUT_CLASSIFICATION	7.228925961582947E-5	DEFECT
// Instantiate it	WITHOUT_CLASSIFICATION	0.9999495927312229	WITHOUT_CLASSIFICATION	5.040726877715547E-5	DEFECT
// Default config of <mycopy> for our purposes.	WITHOUT_CLASSIFICATION	0.9997263776004998	WITHOUT_CLASSIFICATION	2.7362239950025276E-4	DEFECT
// Override Task#execute	WITHOUT_CLASSIFICATION	0.9999277107403841	WITHOUT_CLASSIFICATION	7.228925961582947E-5	DEFECT
// The destination of the files to copy	WITHOUT_CLASSIFICATION	0.9998552005915802	WITHOUT_CLASSIFICATION	1.4479940841972703E-4	DEFECT
// The complete list of files to copy	WITHOUT_CLASSIFICATION	0.9995746030831609	WITHOUT_CLASSIFICATION	4.253969168391187E-4	DEFECT
// Copy all the necessary out-of-date files	WITHOUT_CLASSIFICATION	0.9999304125567935	WITHOUT_CLASSIFICATION	6.958744320652649E-5	DEFECT
// Do we need to perform further processing?	WITHOUT_CLASSIFICATION	0.999959215833841	WITHOUT_CLASSIFICATION	4.0784166159146597E-5	DEFECT
// nope ;-)	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Get rid of all files not listed in the source filesets.	WITHOUT_CLASSIFICATION	0.9996212247823693	WITHOUT_CLASSIFICATION	3.78775217630793E-4	DEFECT
// Get rid of empty directories on the destination side	WITHOUT_CLASSIFICATION	0.9999738427727692	WITHOUT_CLASSIFICATION	2.6157227230666148E-5	DEFECT
// want to keep toDir itself	WITHOUT_CLASSIFICATION	0.999988811716036	WITHOUT_CLASSIFICATION	1.1188283963905311E-5	DEFECT
// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.	WITHOUT_CLASSIFICATION	0.9999929475081444	WITHOUT_CLASSIFICATION	7.052491855565994E-6	DEFECT
// Test here again to avoid method call for non-directories!	WITHOUT_CLASSIFICATION	0.9990160698977125	WITHOUT_CLASSIFICATION	9.839301022875437E-4	DEFECT
// must match the default value of Ant#inheritAll	WITHOUT_CLASSIFICATION	0.9999753145452766	WITHOUT_CLASSIFICATION	2.468545472354257E-5	DEFECT
// must match the default value of Ant#inheritRefs	WITHOUT_CLASSIFICATION	0.9999753145452766	WITHOUT_CLASSIFICATION	2.468545472354257E-5	DEFECT
/*<TargetElement>*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// check if one of the builds failed in keep going mode	WITHOUT_CLASSIFICATION	0.9999656717061058	WITHOUT_CLASSIFICATION	3.432829389416633E-5	DEFECT
//     REVISIT: Defaults to the target name that contains this task if not specified.	WITHOUT_CLASSIFICATION	0.9993573542209898	WITHOUT_CLASSIFICATION	6.426457790101467E-4	DEFECT
// END class SubAnt	WITHOUT_CLASSIFICATION	0.9999369958070398	WITHOUT_CLASSIFICATION	6.30041929602457E-5	DEFECT
// Child elements.	WITHOUT_CLASSIFICATION	0.999948376870493	WITHOUT_CLASSIFICATION	5.1623129507141146E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// this command will be executed only on the specified OS	WITHOUT_CLASSIFICATION	0.9929118710629783	WITHOUT_CLASSIFICATION	0.007088128937021692	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999885307851474	WITHOUT_CLASSIFICATION	1.14692148526839E-5	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999319316963876	WITHOUT_CLASSIFICATION	6.806830361238114E-5	DEFECT
// show the command	WITHOUT_CLASSIFICATION	0.9999668997835593	WITHOUT_CLASSIFICATION	3.3100216440680155E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999937048754123	WITHOUT_CLASSIFICATION	6.295124587731654E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// This directory may have become empty... // We need to re-query its children list!	WITHOUT_CLASSIFICATION	0.9982381042507635	WITHOUT_CLASSIFICATION	0.001761895749236446	DEFECT
// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //	WITHOUT_CLASSIFICATION	0.9996457561459398	WITHOUT_CLASSIFICATION	3.5424385406019547E-4	DEFECT
// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.	WITHOUT_CLASSIFICATION	0.9996932308275395	WITHOUT_CLASSIFICATION	3.067691724605107E-4	DEFECT
// cf. NB #47191	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Should work whether or not redirector.inputStream == null:	WITHOUT_CLASSIFICATION	0.9961850640439294	WITHOUT_CLASSIFICATION	0.003814935956070518	DEFECT
// #24918: send standard input to the process by default.	WITHOUT_CLASSIFICATION	0.999922318156046	WITHOUT_CLASSIFICATION	7.768184395404791E-5	DEFECT
// test if os match	WITHOUT_CLASSIFICATION	0.999984027910478	WITHOUT_CLASSIFICATION	1.5972089521894562E-5	DEFECT
// exec command on system runtime	WITHOUT_CLASSIFICATION	0.998792982469223	WITHOUT_CLASSIFICATION	0.0012070175307770043	DEFECT
// copy input and error to the output stream	WITHOUT_CLASSIFICATION	0.9996559629730206	WITHOUT_CLASSIFICATION	3.440370269793524E-4	DEFECT
// starts pumping away the generated output/error	WITHOUT_CLASSIFICATION	0.9997766585226057	WITHOUT_CLASSIFICATION	2.2334147739438412E-4	DEFECT
// Wait for everything to finish	WITHOUT_CLASSIFICATION	0.9996630734135848	WITHOUT_CLASSIFICATION	3.3692658641515334E-4	DEFECT
// check its exit value	WITHOUT_CLASSIFICATION	0.9999333992989317	WITHOUT_CLASSIFICATION	6.660070106827951E-5	DEFECT
// Inner class for continually pumping the input stream during // Process's runtime.	WITHOUT_CLASSIFICATION	0.9997835804566869	WITHOUT_CLASSIFICATION	2.164195433130836E-4	DEFECT
// The size of buffers to be used	WITHOUT_CLASSIFICATION	0.9999233722926749	WITHOUT_CLASSIFICATION	7.662770732512093E-5	DEFECT
// Attributes.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Attribute setters.	WITHOUT_CLASSIFICATION	0.999920458298652	WITHOUT_CLASSIFICATION	7.954170134796773E-5	DEFECT
// Nested element creators.	WITHOUT_CLASSIFICATION	0.9999424074813034	WITHOUT_CLASSIFICATION	5.759251869655604E-5	DEFECT
// treat empty nested text as no text	WITHOUT_CLASSIFICATION	0.999992684845268	WITHOUT_CLASSIFICATION	7.31515473199278E-6	DEFECT
// if binary check if incompatible attributes are used	WITHOUT_CLASSIFICATION	0.9999971628086535	WITHOUT_CLASSIFICATION	2.837191346475716E-6	DEFECT
// Sanity check our inputs.	WITHOUT_CLASSIFICATION	0.9999453304785547	WITHOUT_CLASSIFICATION	5.466952144532098E-5	DEFECT
// Nothing to concatenate!	WITHOUT_CLASSIFICATION	0.9999092502378963	WITHOUT_CLASSIFICATION	9.074976210364973E-5	DEFECT
// no need to do anything	WITHOUT_CLASSIFICATION	0.9999752994275551	WITHOUT_CLASSIFICATION	2.470057244476698E-5	DEFECT
// Log using WARN so it displays in 'quiet' mode.	WITHOUT_CLASSIFICATION	0.9999670325929931	WITHOUT_CLASSIFICATION	3.296740700685391E-5	DEFECT
// ensure that the parent dir of dest file exists	WITHOUT_CLASSIFICATION	0.9999416300723099	WITHOUT_CLASSIFICATION	5.836992769023245E-5	DEFECT
// non-existing files are not allowed	WITHOUT_CLASSIFICATION	0.9991763252922151	WITHOUT_CLASSIFICATION	8.236747077849395E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// Create a ZipFileSet for this file, and pass it up.	WITHOUT_CLASSIFICATION	0.9989905978002861	WITHOUT_CLASSIFICATION	0.00100940219971389	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999279765053728	WITHOUT_CLASSIFICATION	7.20234946271749E-5	DEFECT
// by default, messages are always displayed	WITHOUT_CLASSIFICATION	0.9999671315397536	WITHOUT_CLASSIFICATION	3.286846024635692E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999937048754123	WITHOUT_CLASSIFICATION	6.295124587731654E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Initialize to the size of the first text fragment, with // the hopes that it's the only one.	WITHOUT_CLASSIFICATION	0.9998512037945347	WITHOUT_CLASSIFICATION	1.4879620546532344E-4	DEFECT
// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.	WITHOUT_CLASSIFICATION	0.9999740602565768	WITHOUT_CLASSIFICATION	2.593974342323652E-5	DEFECT
// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.	WITHOUT_CLASSIFICATION	0.9992007205079446	WITHOUT_CLASSIFICATION	7.992794920554256E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9998394552937041	WITHOUT_CLASSIFICATION	1.6054470629593958E-4	DEFECT
/*package*/	WITHOUT_CLASSIFICATION	0.9998394552937041	WITHOUT_CLASSIFICATION	1.6054470629593958E-4	DEFECT
// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.	WITHOUT_CLASSIFICATION	0.9975783005622921	WITHOUT_CLASSIFICATION	0.0024216994377078724	DEFECT
//by default, we add the file.	WITHOUT_CLASSIFICATION	0.9999667116723857	WITHOUT_CLASSIFICATION	3.328832761427904E-5	DEFECT
//a web.xml file was found. See if it is a duplicate or not	WITHOUT_CLASSIFICATION	0.9990285534983093	WITHOUT_CLASSIFICATION	9.714465016907373E-4	DEFECT
//a second web.xml file, so skip it	WITHOUT_CLASSIFICATION	0.9998843321749177	WITHOUT_CLASSIFICATION	1.1566782508240886E-4	DEFECT
//check to see if we warn or not	WITHOUT_CLASSIFICATION	0.9972817824469752	WITHOUT_CLASSIFICATION	0.0027182175530248193	DEFECT
//no added file, yet	WITHOUT_CLASSIFICATION	0.9995597485876738	WITHOUT_CLASSIFICATION	4.402514123262415E-4	DEFECT
//there is no web.xml file, so add it	WITHOUT_CLASSIFICATION	0.9999691889708061	WITHOUT_CLASSIFICATION	3.081102919384827E-5	DEFECT
//and remember that we did	WITHOUT_CLASSIFICATION	0.9997341633595911	WITHOUT_CLASSIFICATION	2.6583664040889354E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//discard most of really big resources	WITHOUT_CLASSIFICATION	0.9978494360911289	WITHOUT_CLASSIFICATION	0.002150563908871137	DEFECT
//open up the resource	WITHOUT_CLASSIFICATION	0.9999352246422473	WITHOUT_CLASSIFICATION	6.477535775268205E-5	DEFECT
// impossible since *our* processLine doesn't throw an IOException	WITHOUT_CLASSIFICATION	0.9994443221221417	WITHOUT_CLASSIFICATION	5.556778778582937E-4	DEFECT
// There have been reports that 300 files could be compiled // so 250 is a conservative approach	WITHOUT_CLASSIFICATION	0.9998642213870386	WITHOUT_CLASSIFICATION	1.357786129614493E-4	DEFECT
// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)	WITHOUT_CLASSIFICATION	0.9971834126820144	WITHOUT_CLASSIFICATION	0.00281658731798557	DEFECT
//if we have a RedirectorElement, return a decoy	WITHOUT_CLASSIFICATION	0.9998874568219269	WITHOUT_CLASSIFICATION	1.1254317807316666E-4	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999511163138449	WITHOUT_CLASSIFICATION	4.888368615510368E-5	DEFECT
// srcIndex --> targetIndex	WITHOUT_CLASSIFICATION	0.9999226625204388	WITHOUT_CLASSIFICATION	7.733747956117748E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999835971458951	WITHOUT_CLASSIFICATION	1.6402854104926748E-5	DEFECT
// targetIndex --> end	WITHOUT_CLASSIFICATION	0.9999443421886928	WITHOUT_CLASSIFICATION	5.565781130731607E-5	DEFECT
// 0 --> targetIndex	WITHOUT_CLASSIFICATION	0.9999511163138449	WITHOUT_CLASSIFICATION	4.888368615510368E-5	DEFECT
// 0 --> srcIndex	WITHOUT_CLASSIFICATION	0.9999511163138449	WITHOUT_CLASSIFICATION	4.888368615510368E-5	DEFECT
// contains AbstractFileSet // (both DirSet and FileSet)	WITHOUT_CLASSIFICATION	0.9998995528690238	WITHOUT_CLASSIFICATION	1.0044713097623143E-4	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999774511571629	WITHOUT_CLASSIFICATION	2.254884283724782E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999774511571629	WITHOUT_CLASSIFICATION	2.254884283724782E-5	DEFECT
// targets are already absolute file names	WITHOUT_CLASSIFICATION	0.9999835971458951	WITHOUT_CLASSIFICATION	1.6402854104926748E-5	DEFECT
// targetIndex --> srcIndex	WITHOUT_CLASSIFICATION	0.9999226625204388	WITHOUT_CLASSIFICATION	7.733747956117748E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999557348967039	WITHOUT_CLASSIFICATION	4.426510329607054E-5	DEFECT
// srcIndex --> end	WITHOUT_CLASSIFICATION	0.9999557348967039	WITHOUT_CLASSIFICATION	4.426510329607054E-5	DEFECT
// no targetFilePos	WITHOUT_CLASSIFICATION	0.9999818496116653	WITHOUT_CLASSIFICATION	1.8150388334750638E-5	DEFECT
// fill in source file names	WITHOUT_CLASSIFICATION	0.9999738562862622	WITHOUT_CLASSIFICATION	2.6143713737768676E-5	DEFECT
/* this is skipEmpty == false */	WITHOUT_CLASSIFICATION	0.9994182968133118	WITHOUT_CLASSIFICATION	5.81703186688209E-4	DEFECT
//if there is a new priority, and it is different, change it	WITHOUT_CLASSIFICATION	0.999969378193959	WITHOUT_CLASSIFICATION	3.0621806040979124E-5	DEFECT
//catch permissions denial and keep going	WITHOUT_CLASSIFICATION	0.9996518073175966	WITHOUT_CLASSIFICATION	3.4819268240329147E-4	DEFECT
//-- XSLTLiaison	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Write the properties file back out	WITHOUT_CLASSIFICATION	0.9998363874945995	WITHOUT_CLASSIFICATION	1.6361250540050578E-4	DEFECT
//Finally set the property	WITHOUT_CLASSIFICATION	0.9998942250288616	WITHOUT_CLASSIFICATION	1.0577497113827062E-4	DEFECT
// Try parsing the line into an integer.	WITHOUT_CLASSIFICATION	0.9992116820820163	WITHOUT_CLASSIFICATION	7.883179179838277E-4	DEFECT
//-- XSLTProcess	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// check if liaison wants to log errors using us as logger	WITHOUT_CLASSIFICATION	0.999984206106747	WITHOUT_CLASSIFICATION	1.5793893252991474E-5	DEFECT
// If we enter here, it means that the stylesheet is supplied // via style attribute	WITHOUT_CLASSIFICATION	0.9997952278872537	WITHOUT_CLASSIFICATION	2.0477211274621111E-4	DEFECT
/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */	WITHOUT_CLASSIFICATION	0.9854250230349965	WITHOUT_CLASSIFICATION	0.014574976965003521	DEFECT
// if we have an in file and out then process them	WITHOUT_CLASSIFICATION	0.9999750907968661	WITHOUT_CLASSIFICATION	2.4909203133961683E-5	DEFECT
//-- make sure destination directory exists...	WITHOUT_CLASSIFICATION	0.99989527010961	WITHOUT_CLASSIFICATION	1.047298903899153E-4	DEFECT
// Process all the files marked for styling	WITHOUT_CLASSIFICATION	0.9998917509889476	WITHOUT_CLASSIFICATION	1.0824901105253045E-4	DEFECT
// Process all the directories marked for styling	WITHOUT_CLASSIFICATION	0.999819511147946	WITHOUT_CLASSIFICATION	1.8048885205393262E-4	DEFECT
// only resource collections, there better be some	WITHOUT_CLASSIFICATION	0.999770690761843	WITHOUT_CLASSIFICATION	2.293092381570459E-4	DEFECT
//anything else is a classname	WITHOUT_CLASSIFICATION	0.9995589273420119	WITHOUT_CLASSIFICATION	4.4107265798809715E-4	DEFECT
//-- processXML	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Param	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// New env var...append the previous one if we have it.	WITHOUT_CLASSIFICATION	0.9999482028609251	WITHOUT_CLASSIFICATION	5.179713907500137E-5	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9998947224766143	WITHOUT_CLASSIFICATION	1.0527752338569613E-4	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// If failed to process document, must delete target document, // or it will not attempt to process it the second time	WITHOUT_CLASSIFICATION	0.9999151399248551	WITHOUT_CLASSIFICATION	8.486007514491335E-5	DEFECT
// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath	WITHOUT_CLASSIFICATION	0.9999604408871458	WITHOUT_CLASSIFICATION	3.955911285428699E-5	DEFECT
// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up	WITHOUT_CLASSIFICATION	0.9999896722899696	WITHOUT_CLASSIFICATION	1.0327710030514201E-5	DEFECT
// If we are here we can set the stylesheet as a // resource	WITHOUT_CLASSIFICATION	0.9999924385094875	WITHOUT_CLASSIFICATION	7.561490512487886E-6	DEFECT
// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file	WITHOUT_CLASSIFICATION	0.999980615556502	WITHOUT_CLASSIFICATION	1.9384443498084184E-5	DEFECT
// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path	WITHOUT_CLASSIFICATION	0.9999174656865922	WITHOUT_CLASSIFICATION	8.253431340779479E-5	DEFECT
// only 'name' and 'value' exist.	WITHOUT_CLASSIFICATION	0.9997355094959394	WITHOUT_CLASSIFICATION	2.644905040605974E-4	DEFECT
// a value must be of a given type // say boolean|integer|string that are mostly used.	WITHOUT_CLASSIFICATION	0.9999874485944897	WITHOUT_CLASSIFICATION	1.2551405510359425E-5	DEFECT
// -- class Attribute	WITHOUT_CLASSIFICATION	0.999940350071791	WITHOUT_CLASSIFICATION	5.964992820898675E-5	DEFECT
// -- class Factory	WITHOUT_CLASSIFICATION	0.9999511701397444	WITHOUT_CLASSIFICATION	4.882986025554955E-5	DEFECT
// error message strings	WITHOUT_CLASSIFICATION	0.9998360659426035	WITHOUT_CLASSIFICATION	1.6393405739644984E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.998245710223678	WITHOUT_CLASSIFICATION	0.0017542897763219308	DEFECT
//now exit here if the property is already set	WITHOUT_CLASSIFICATION	0.9995188344544198	WITHOUT_CLASSIFICATION	4.811655455802704E-4	DEFECT
//and add any files if also defined	WITHOUT_CLASSIFICATION	0.9999738486563349	WITHOUT_CLASSIFICATION	2.6151343665078472E-5	DEFECT
//add path URLs	WITHOUT_CLASSIFICATION	0.9999137805117717	WITHOUT_CLASSIFICATION	8.621948822835932E-5	DEFECT
//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();	WITHOUT_CLASSIFICATION	0.999568336236724	WITHOUT_CLASSIFICATION	4.3166376327601286E-4	DEFECT
// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish	WITHOUT_CLASSIFICATION	0.9992885794302887	WITHOUT_CLASSIFICATION	7.114205697111866E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS	WITHOUT_CLASSIFICATION	0.9996146895631637	WITHOUT_CLASSIFICATION	3.8531043683629693E-4	DEFECT
/*     * Builds a command launcher for the OS and JVM we are running under.     */	WITHOUT_CLASSIFICATION	0.9999486169435077	WITHOUT_CLASSIFICATION	5.138305649226614E-5	DEFECT
// Try using a JDK 1.3 launcher	WITHOUT_CLASSIFICATION	0.9999258583765157	WITHOUT_CLASSIFICATION	7.414162348432743E-5	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999897016452646	WITHOUT_CLASSIFICATION	1.0298354735483782E-5	DEFECT
// OS/2	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Windows XP/2000/NT	WITHOUT_CLASSIFICATION	0.9999060962421831	WITHOUT_CLASSIFICATION	9.390375781690901E-5	DEFECT
// Windows 98/95 - need to use an auxiliary script	WITHOUT_CLASSIFICATION	0.9992041930881641	WITHOUT_CLASSIFICATION	7.958069118359061E-4	DEFECT
// OpenVMS	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Generic	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Make sure we do not recurse forever	WITHOUT_CLASSIFICATION	0.9996395608166373	WITHOUT_CLASSIFICATION	3.604391833626618E-4	DEFECT
// Just try to use what we got	WITHOUT_CLASSIFICATION	0.9996380587759685	WITHOUT_CLASSIFICATION	3.6194122403159233E-4	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999218995221091	WITHOUT_CLASSIFICATION	7.810047789094515E-5	DEFECT
// Just try to see how much we got	WITHOUT_CLASSIFICATION	0.9999065753533709	WITHOUT_CLASSIFICATION	9.34246466291279E-5	DEFECT
// OS/2 - use same mechanism as Windows 2000	WITHOUT_CLASSIFICATION	0.9997596414430171	WITHOUT_CLASSIFICATION	2.403585569829356E-4	DEFECT
// Determine if we're running under XP/2000/NT or 98/95	WITHOUT_CLASSIFICATION	0.9999884986507295	WITHOUT_CLASSIFICATION	1.1501349270436095E-5	DEFECT
// Windows 98/95	WITHOUT_CLASSIFICATION	0.999925317004297	WITHOUT_CLASSIFICATION	7.468299570307542E-5	DEFECT
// Windows XP/2000/NT/2003	WITHOUT_CLASSIFICATION	0.9999060962421831	WITHOUT_CLASSIFICATION	9.390375781690901E-5	DEFECT
// On most systems one could use: /bin/sh -c env	WITHOUT_CLASSIFICATION	0.9998213372889674	WITHOUT_CLASSIFICATION	1.786627110325665E-4	DEFECT
// Some systems have /bin/env, others /usr/bin/env, just try	WITHOUT_CLASSIFICATION	0.9999629735761344	WITHOUT_CLASSIFICATION	3.70264238655441E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.999903616961409	WITHOUT_CLASSIFICATION	9.638303859104959E-5	DEFECT
// rely on PATH	WITHOUT_CLASSIFICATION	0.999903616961409	WITHOUT_CLASSIFICATION	9.638303859104959E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.999987117678205	WITHOUT_CLASSIFICATION	1.2882321794870503E-5	DEFECT
//By default, use the shell launcher for VMS //	WITHOUT_CLASSIFICATION	0.9996246346882467	WITHOUT_CLASSIFICATION	3.753653117532593E-4	DEFECT
// add the process to the list of those to destroy if the VM exits //	WITHOUT_CLASSIFICATION	0.9999892474081175	WITHOUT_CLASSIFICATION	1.0752591882505664E-5	DEFECT
// #31928: forcibly kill it before continuing.	WITHOUT_CLASSIFICATION	0.9997913103818568	WITHOUT_CLASSIFICATION	2.0868961814323313E-4	DEFECT
// remove the process to the list of those to destroy if // the VM exits //	WITHOUT_CLASSIFICATION	0.9999864449316004	WITHOUT_CLASSIFICATION	1.3555068399651828E-5	DEFECT
//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure	WITHOUT_CLASSIFICATION	0.9996396825650072	WITHOUT_CLASSIFICATION	3.6031743499276655E-4	DEFECT
// Get key including "="	WITHOUT_CLASSIFICATION	0.9999410825154584	WITHOUT_CLASSIFICATION	5.891748454158176E-5	DEFECT
// Nb: using default locale as key is a env name	WITHOUT_CLASSIFICATION	0.9999867024363658	WITHOUT_CLASSIFICATION	1.3297563634238345E-5	DEFECT
// Find the key in the current enviroment copy // and remove it.	WITHOUT_CLASSIFICATION	0.9999457717996874	WITHOUT_CLASSIFICATION	5.422820031262308E-5	DEFECT
// Use the original casiness of the key	WITHOUT_CLASSIFICATION	0.9999231274575707	WITHOUT_CLASSIFICATION	7.687254242924289E-5	DEFECT
// Add the key to the enviromnent copy	WITHOUT_CLASSIFICATION	0.9999029126857593	WITHOUT_CLASSIFICATION	9.708731424076354E-5	DEFECT
// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")	WITHOUT_CLASSIFICATION	0.9997931842982564	WITHOUT_CLASSIFICATION	2.0681570174364586E-4	DEFECT
// further equivalence name of previous logical	WITHOUT_CLASSIFICATION	0.999934843539006	WITHOUT_CLASSIFICATION	6.515646099392172E-5	DEFECT
// new logical?	WITHOUT_CLASSIFICATION	0.999975057661308	WITHOUT_CLASSIFICATION	2.4942338692035873E-5	DEFECT
// already got this logical from a higher order table	WITHOUT_CLASSIFICATION	0.9990694522683015	WITHOUT_CLASSIFICATION	9.305477316984907E-4	DEFECT
/* the arguments: */	WITHOUT_CLASSIFICATION	0.9999429457168729	WITHOUT_CLASSIFICATION	5.705428312710822E-5	DEFECT
// IllegalAccess, IllegalArgument, ClassCast	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999467557427836	WITHOUT_CLASSIFICATION	5.324425721636302E-5	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999251697893344	WITHOUT_CLASSIFICATION	7.483021066554245E-5	DEFECT
// add the environment as logicals to the DCL script	WITHOUT_CLASSIFICATION	0.999966443776147	WITHOUT_CLASSIFICATION	3.355622385306647E-5	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)	WITHOUT_CLASSIFICATION	0.9997480079097256	WITHOUT_CLASSIFICATION	2.5199209027440176E-4	DEFECT
// Use cmd.exe to change to the specified drive and // directory before running the command	WITHOUT_CLASSIFICATION	0.9999944113707603	WITHOUT_CLASSIFICATION	5.588629239688858E-6	DEFECT
// Use cmd.exe to change to the specified directory before running // the command	WITHOUT_CLASSIFICATION	0.9999916976024962	WITHOUT_CLASSIFICATION	8.302397503891354E-6	DEFECT
// need to set the project on unknown element	WITHOUT_CLASSIFICATION	0.9999162212749573	WITHOUT_CLASSIFICATION	8.377872504273124E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999094597599868	WITHOUT_CLASSIFICATION	9.054024001320539E-5	DEFECT
//Attempt complete directory renames, if any, first.	WITHOUT_CLASSIFICATION	0.9999376091486735	WITHOUT_CLASSIFICATION	6.239085132655751E-5	DEFECT
// files to move	WITHOUT_CLASSIFICATION	0.9999670771666358	WITHOUT_CLASSIFICATION	3.2922833364191634E-5	DEFECT
//Is this file still available to be moved?	WITHOUT_CLASSIFICATION	0.9973375567785392	WITHOUT_CLASSIFICATION	0.0026624432214607803	DEFECT
// if this is the last time through the loop then // move will not occur, but that's what we want	WITHOUT_CLASSIFICATION	0.9998896274095764	WITHOUT_CLASSIFICATION	1.1037259042365053E-4	DEFECT
// maybe io error?	WITHOUT_CLASSIFICATION	0.9993063714213608	WITHOUT_CLASSIFICATION	6.936285786391915E-4	DEFECT
// found a file	WITHOUT_CLASSIFICATION	0.9999736892641101	WITHOUT_CLASSIFICATION	2.631073588995901E-5	DEFECT
// on an io error list() can return null	WITHOUT_CLASSIFICATION	0.9998858682286071	WITHOUT_CLASSIFICATION	1.141317713927496E-4	DEFECT
// Whether *this VM* is 1.4+ (but also check executable != null).	WITHOUT_CLASSIFICATION	0.9999000276729498	WITHOUT_CLASSIFICATION	9.997232705017057E-5	DEFECT
// ------------------------------------------ general Javadoc arguments	WITHOUT_CLASSIFICATION	0.9996908549650723	WITHOUT_CLASSIFICATION	3.091450349277068E-4	DEFECT
// ---------------------------- javadoc2 arguments for default doclet	WITHOUT_CLASSIFICATION	0.9999604770534942	WITHOUT_CLASSIFICATION	3.952294650576433E-5	DEFECT
// add the links arguments	WITHOUT_CLASSIFICATION	0.9999800021366329	WITHOUT_CLASSIFICATION	1.999786336717973E-5	DEFECT
// should be impossible	WITHOUT_CLASSIFICATION	0.9996500005681574	WITHOUT_CLASSIFICATION	3.4999943184252884E-4	DEFECT
// is the href a valid URL	WITHOUT_CLASSIFICATION	0.9999010627537882	WITHOUT_CLASSIFICATION	9.89372462117594E-5	DEFECT
// ok - just skip	WITHOUT_CLASSIFICATION	0.999989735797498	WITHOUT_CLASSIFICATION	1.026420250205909E-5	DEFECT
//return	WITHOUT_CLASSIFICATION	0.9995097928747805	WITHOUT_CLASSIFICATION	4.902071252195873E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
//validation logic	WITHOUT_CLASSIFICATION	0.9999196935818272	WITHOUT_CLASSIFICATION	8.030641817278096E-5	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999807264803833	WITHOUT_CLASSIFICATION	1.9273519616721778E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Only try to move if this is the last mapped file // and one of the mappings isn't to itself	WITHOUT_CLASSIFICATION	0.9999701440997865	WITHOUT_CLASSIFICATION	2.9855900213598355E-5	DEFECT
// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).	WITHOUT_CLASSIFICATION	0.9996542377446508	WITHOUT_CLASSIFICATION	3.457622553492289E-4	DEFECT
// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.	WITHOUT_CLASSIFICATION	0.9999850099760158	WITHOUT_CLASSIFICATION	1.4990023984072004E-5	DEFECT
// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"	WITHOUT_CLASSIFICATION	0.9978772443278376	WITHOUT_CLASSIFICATION	0.002122755672162301	DEFECT
// add the group arguments	WITHOUT_CLASSIFICATION	0.9999820738656172	WITHOUT_CLASSIFICATION	1.7926134382727278E-5	DEFECT
// Javadoc 1.4 parameters	WITHOUT_CLASSIFICATION	0.9999801421869216	WITHOUT_CLASSIFICATION	1.9857813078410796E-5	DEFECT
// The tag element is not used as a fileset, // but specifies the tag directly.	WITHOUT_CLASSIFICATION	0.999935453396695	WITHOUT_CLASSIFICATION	6.454660330503516E-5	DEFECT
// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.	WITHOUT_CLASSIFICATION	0.9999899315854651	WITHOUT_CLASSIFICATION	1.0068414534943907E-5	DEFECT
// Not 1.4+.	WITHOUT_CLASSIFICATION	0.9997424529518241	WITHOUT_CLASSIFICATION	2.5754704817597504E-4	DEFECT
// Javadoc 1.2/1.3 parameters:	WITHOUT_CLASSIFICATION	0.9999199744695976	WITHOUT_CLASSIFICATION	8.002553040235223E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999958294133935	WITHOUT_CLASSIFICATION	4.170586606491644E-5	DEFECT
// If using an external file, write the command line options to it	WITHOUT_CLASSIFICATION	0.999958294133935	WITHOUT_CLASSIFICATION	4.170586606491644E-5	DEFECT
/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */	WITHOUT_CLASSIFICATION	0.9997253587080176	WITHOUT_CLASSIFICATION	2.7464129198242376E-4	DEFECT
// are there any java files in this directory?	WITHOUT_CLASSIFICATION	0.9995450409652488	WITHOUT_CLASSIFICATION	4.5495903475129245E-4	DEFECT
// We don't need to care for duplicates here, // Path.list does it for us.	WITHOUT_CLASSIFICATION	0.992676710282012	WITHOUT_CLASSIFICATION	0.007323289717988065	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9998185204857478	WITHOUT_CLASSIFICATION	1.81479514252208E-4	DEFECT
//convert a class name into a resource	WITHOUT_CLASSIFICATION	0.9993297924904158	WITHOUT_CLASSIFICATION	6.702075095841803E-4	DEFECT
//set the property	WITHOUT_CLASSIFICATION	0.9996810815391479	WITHOUT_CLASSIFICATION	3.18918460852118E-4	DEFECT
// line feed	WITHOUT_CLASSIFICATION	0.9998725336618928	WITHOUT_CLASSIFICATION	1.2746633810717552E-4	DEFECT
// by default, remove matching empty dirs	WITHOUT_CLASSIFICATION	0.9999333099633754	WITHOUT_CLASSIFICATION	6.669003662464228E-5	DEFECT
// delete the single file	WITHOUT_CLASSIFICATION	0.9999642525010423	WITHOUT_CLASSIFICATION	3.574749895774002E-5	DEFECT
// delete the directory	WITHOUT_CLASSIFICATION	0.9999838833885125	WITHOUT_CLASSIFICATION	1.6116611487485212E-5	DEFECT
//add the files from the default fileset:	WITHOUT_CLASSIFICATION	0.9999506711056955	WITHOUT_CLASSIFICATION	4.9328894304501E-5	DEFECT
// sort first to files, then dirs	WITHOUT_CLASSIFICATION	0.9999260320814639	WITHOUT_CLASSIFICATION	7.396791853615906E-5	DEFECT
/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */	WITHOUT_CLASSIFICATION	0.9999112279402592	WITHOUT_CLASSIFICATION	8.877205974075409E-5	DEFECT
//patch the redirector to save output to a file	WITHOUT_CLASSIFICATION	0.9996253111050029	WITHOUT_CLASSIFICATION	3.746888949972349E-4	DEFECT
//verify special operations	WITHOUT_CLASSIFICATION	0.9996688369756458	WITHOUT_CLASSIFICATION	3.311630243542229E-4	DEFECT
//JAR  is required	WITHOUT_CLASSIFICATION	0.9992053322844728	WITHOUT_CLASSIFICATION	7.946677155272158E-4	DEFECT
//deal with jdk1.4.2 bug:	WITHOUT_CLASSIFICATION	0.9997156630478755	WITHOUT_CLASSIFICATION	2.843369521245041E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9998895755360439	WITHOUT_CLASSIFICATION	1.1042446395621643E-4	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999134604333736	WITHOUT_CLASSIFICATION	8.653956662642263E-5	DEFECT
//validation	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// nonexistent resources could only occur if we already // deleted something from a fileset:	WITHOUT_CLASSIFICATION	0.9996843689200272	WITHOUT_CLASSIFICATION	3.156310799727146E-4	DEFECT
//cache	WITHOUT_CLASSIFICATION	0.9993783167480664	WITHOUT_CLASSIFICATION	6.216832519336417E-4	DEFECT
// no include pattern implicitly means includes="**"	WITHOUT_CLASSIFICATION	0.9999746688357664	WITHOUT_CLASSIFICATION	2.533116423371344E-5	DEFECT
//Do not process this file	WITHOUT_CLASSIFICATION	0.998824526228358	WITHOUT_CLASSIFICATION	0.0011754737716418644	DEFECT
// make sure facade knows about magic properties and fork setting	WITHOUT_CLASSIFICATION	0.9998909722490958	WITHOUT_CLASSIFICATION	1.090277509040624E-4	DEFECT
// deal with the resources	WITHOUT_CLASSIFICATION	0.9999215921976432	WITHOUT_CLASSIFICATION	7.840780235678736E-5	DEFECT
// Make a transaction for each resource	WITHOUT_CLASSIFICATION	0.9997426166193555	WITHOUT_CLASSIFICATION	2.5738338064448834E-4	DEFECT
// Make a transaction group for the outer command	WITHOUT_CLASSIFICATION	0.9991810643117521	WITHOUT_CLASSIFICATION	8.189356882479718E-4	DEFECT
// Process all transactions	WITHOUT_CLASSIFICATION	0.9999106587846531	WITHOUT_CLASSIFICATION	8.934121534681466E-5	DEFECT
// Catch any statements not followed by ;	WITHOUT_CLASSIFICATION	0.9990164225397634	WITHOUT_CLASSIFICATION	9.835774602365754E-4	DEFECT
// Check and ignore empty statements	WITHOUT_CLASSIFICATION	0.9999804231768196	WITHOUT_CLASSIFICATION	1.957682318047339E-5	DEFECT
/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */	WITHOUT_CLASSIFICATION	0.9996305686942581	WITHOUT_CLASSIFICATION	3.6943130574176224E-4	DEFECT
// dreaded backwards compatibility	WITHOUT_CLASSIFICATION	0.9998970052510819	WITHOUT_CLASSIFICATION	1.0299474891802994E-4	DEFECT
/*Throw an exception if cvs exited with error. (Iulian)*/	WITHOUT_CLASSIFICATION	0.9997215614383803	WITHOUT_CLASSIFICATION	2.7843856161963843E-4	DEFECT
// re-implement legacy behaviour:	WITHOUT_CLASSIFICATION	0.999843601194463	WITHOUT_CLASSIFICATION	1.5639880553696328E-4	DEFECT
// Check if not real cvsroot => set it to null	WITHOUT_CLASSIFICATION	0.9999559913722389	WITHOUT_CLASSIFICATION	4.4008627761136906E-5	DEFECT
// Check if not real cvsrsh => set it to null	WITHOUT_CLASSIFICATION	0.9999559913722389	WITHOUT_CLASSIFICATION	4.4008627761136906E-5	DEFECT
// Check if not real tag => set it to null	WITHOUT_CLASSIFICATION	0.9999675636821815	WITHOUT_CLASSIFICATION	3.2436317818502045E-5	DEFECT
// close the output file if required	WITHOUT_CLASSIFICATION	0.9999937048754123	WITHOUT_CLASSIFICATION	6.295124587731654E-6	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//req // req	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// scan source directories and dest directory to build up // compile lists	WITHOUT_CLASSIFICATION	0.9999875968733457	WITHOUT_CLASSIFICATION	1.2403126654293801E-5	DEFECT
//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.	WITHOUT_CLASSIFICATION	0.9948931726989171	WITHOUT_CLASSIFICATION	0.005106827301082967	DEFECT
//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.	WITHOUT_CLASSIFICATION	0.9996571972306639	WITHOUT_CLASSIFICATION	3.428027693360754E-4	DEFECT
// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).	WITHOUT_CLASSIFICATION	0.9842753247263378	WITHOUT_CLASSIFICATION	0.01572467527366211	DEFECT
// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //	WITHOUT_CLASSIFICATION	0.9998103531626745	WITHOUT_CLASSIFICATION	1.896468373254616E-4	DEFECT
// we are chmodding the given directory	WITHOUT_CLASSIFICATION	0.9999919875258612	WITHOUT_CLASSIFICATION	8.012474138793298E-6	DEFECT
// may be altered in validateAttributes	WITHOUT_CLASSIFICATION	0.9996706549662947	WITHOUT_CLASSIFICATION	3.2934503370530253E-4	DEFECT
// will be removed in validateAttributes	WITHOUT_CLASSIFICATION	0.9980149197765844	WITHOUT_CLASSIFICATION	0.0019850802234155883	DEFECT
// make sure we don't have an illegal set of options	WITHOUT_CLASSIFICATION	0.9997492839590777	WITHOUT_CLASSIFICATION	2.5071604092235627E-4	DEFECT
// deal with the single file	WITHOUT_CLASSIFICATION	0.9999289519715177	WITHOUT_CLASSIFICATION	7.10480284822835E-5	DEFECT
// deal with the ResourceCollections	WITHOUT_CLASSIFICATION	0.9998387274559207	WITHOUT_CLASSIFICATION	1.6127254407928817E-4	DEFECT
// Step (1) - beware of the ZipFileSet	WITHOUT_CLASSIFICATION	0.9998510556521543	WITHOUT_CLASSIFICATION	1.4894434784574686E-4	DEFECT
// not a fileset or contains non-file resources	WITHOUT_CLASSIFICATION	0.9992436052755229	WITHOUT_CLASSIFICATION	7.563947244770882E-4	DEFECT
// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.	WITHOUT_CLASSIFICATION	0.9999645718465002	WITHOUT_CLASSIFICATION	3.542815349980183E-5	DEFECT
// a not-directory file resource // needs special treatment	WITHOUT_CLASSIFICATION	0.9998004703265826	WITHOUT_CLASSIFICATION	1.9952967341738836E-4	DEFECT
// do all the copy operations now...	WITHOUT_CLASSIFICATION	0.9997950589246289	WITHOUT_CLASSIFICATION	2.0494107537113326E-4	DEFECT
// restrict to out-of-date resources	WITHOUT_CLASSIFICATION	0.9999141247660184	WITHOUT_CLASSIFICATION	8.587523398157218E-5	DEFECT
// clean up again, so this instance can be used a second // time	WITHOUT_CLASSIFICATION	0.999980471684917	WITHOUT_CLASSIFICATION	1.9528315082990704E-5	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999821935202622	WITHOUT_CLASSIFICATION	1.7806479737812744E-5	DEFECT
// reuse the array created by the mapper	WITHOUT_CLASSIFICATION	0.9999821935202622	WITHOUT_CLASSIFICATION	1.7806479737812744E-5	DEFECT
//now patch in all system properties	WITHOUT_CLASSIFICATION	0.9983335787600073	WITHOUT_CLASSIFICATION	0.0016664212399926585	DEFECT
// is the keystore a file	WITHOUT_CLASSIFICATION	0.9998930502979099	WITHOUT_CLASSIFICATION	1.0694970209010235E-4	DEFECT
// must be a URL - just pass as is	WITHOUT_CLASSIFICATION	0.9998057216801364	WITHOUT_CLASSIFICATION	1.9427831986367787E-4	DEFECT
// Gump friendly - don't mess with the core loader if only classpath	WITHOUT_CLASSIFICATION	0.9981755738659496	WITHOUT_CLASSIFICATION	0.0018244261340504891	DEFECT
// Construct a new class loader	WITHOUT_CLASSIFICATION	0.9999418188767839	WITHOUT_CLASSIFICATION	5.818112321611696E-5	DEFECT
// The param is "parentFirst"	WITHOUT_CLASSIFICATION	0.9998058501990251	WITHOUT_CLASSIFICATION	1.9414980097479307E-4	DEFECT
/*public*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9991792392544987	WITHOUT_CLASSIFICATION	8.207607455012547E-4	DEFECT
//shield it from being closed by a filtering StreamPumper	WITHOUT_CLASSIFICATION	0.9991792392544987	WITHOUT_CLASSIFICATION	8.207607455012547E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// set read-only properties // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9999506691533886	WITHOUT_CLASSIFICATION	4.933084661149851E-5	DEFECT
// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.	WITHOUT_CLASSIFICATION	0.9999744865603394	WITHOUT_CLASSIFICATION	2.551343966064844E-5	DEFECT
// The core loader must be reverse //reverse=true;	WITHOUT_CLASSIFICATION	0.9997828643464317	WITHOUT_CLASSIFICATION	2.171356535682452E-4	DEFECT
// This allows the core loader to load optional tasks // without delegating	WITHOUT_CLASSIFICATION	0.9988146826199245	WITHOUT_CLASSIFICATION	0.0011853173800755463	DEFECT
//wait for the StreamPumpers to finish	WITHOUT_CLASSIFICATION	0.999333737348221	WITHOUT_CLASSIFICATION	6.662626517791314E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999487539977456	WITHOUT_CLASSIFICATION	5.1246002254346825E-5	DEFECT
// Normalize the reference directory (containing the jar)	WITHOUT_CLASSIFICATION	0.9999687829863813	WITHOUT_CLASSIFICATION	3.1217013618751197E-5	DEFECT
// Normalize the current file	WITHOUT_CLASSIFICATION	0.9999803306543027	WITHOUT_CLASSIFICATION	1.9669345697262213E-5	DEFECT
// No match, so bail out!	WITHOUT_CLASSIFICATION	0.9999822125781835	WITHOUT_CLASSIFICATION	1.7787421816436737E-5	DEFECT
// Finally assign the property with the manifest classpath	WITHOUT_CLASSIFICATION	0.9996281103684367	WITHOUT_CLASSIFICATION	3.71889631563218E-4	DEFECT
// try to find a MAX_LINE_LENGTH byte section	WITHOUT_CLASSIFICATION	0.9999415342803979	WITHOUT_CLASSIFICATION	5.8465719602163397E-5	DEFECT
// continuation line	WITHOUT_CLASSIFICATION	0.9998723970646474	WITHOUT_CLASSIFICATION	1.2760293535260927E-4	DEFECT
// refresh attribute in case of multivalued attributes.	WITHOUT_CLASSIFICATION	0.9988532282437873	WITHOUT_CLASSIFICATION	0.0011467717562127252	DEFECT
// the merge file always wins	WITHOUT_CLASSIFICATION	0.9999782818236788	WITHOUT_CLASSIFICATION	2.1718176321218925E-5	DEFECT
// the merge file *always* wins, even for Class-Path	WITHOUT_CLASSIFICATION	0.9998149306362313	WITHOUT_CLASSIFICATION	1.8506936376864666E-4	DEFECT
// add in the warnings	WITHOUT_CLASSIFICATION	0.9999468337255675	WITHOUT_CLASSIFICATION	5.316627443257312E-5	DEFECT
// This should be the manifest version	WITHOUT_CLASSIFICATION	0.9894076619999803	WITHOUT_CLASSIFICATION	0.010592338000019647	DEFECT
// add it back	WITHOUT_CLASSIFICATION	0.9999525941991807	WITHOUT_CLASSIFICATION	4.740580081930824E-5	DEFECT
// shouldn't happen - ignore	WITHOUT_CLASSIFICATION	0.9999056051721363	WITHOUT_CLASSIFICATION	9.439482786367939E-5	DEFECT
// create a vector and add in the warnings for all the sections	WITHOUT_CLASSIFICATION	0.9998629669901797	WITHOUT_CLASSIFICATION	1.3703300982026483E-4	DEFECT
//off by default	WITHOUT_CLASSIFICATION	0.9999767510819392	WITHOUT_CLASSIFICATION	2.324891806092102E-5	DEFECT
//set up logging	WITHOUT_CLASSIFICATION	0.9999265135176758	WITHOUT_CLASSIFICATION	7.348648232424635E-5	DEFECT
//execute the get	WITHOUT_CLASSIFICATION	0.9998955805611283	WITHOUT_CLASSIFICATION	1.0441943887170474E-4	DEFECT
//dont do any progress, unless asked	WITHOUT_CLASSIFICATION	0.9997598342563907	WITHOUT_CLASSIFICATION	2.4016574360927832E-4	DEFECT
//set the timestamp to the file date.	WITHOUT_CLASSIFICATION	0.9992290063687985	WITHOUT_CLASSIFICATION	7.709936312013983E-4	DEFECT
//set up the URL connection	WITHOUT_CLASSIFICATION	0.9999166566931611	WITHOUT_CLASSIFICATION	8.334330683894086E-5	DEFECT
// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself	WITHOUT_CLASSIFICATION	0.9998637426309617	WITHOUT_CLASSIFICATION	1.3625736903830697E-4	DEFECT
// Find the longest prefix shared by the current file // and the reference directory.	WITHOUT_CLASSIFICATION	0.9999881136945963	WITHOUT_CLASSIFICATION	1.1886305403768983E-5	DEFECT
// We have a match! Add as many ../ as parent // directory traversed to get the relative path	WITHOUT_CLASSIFICATION	0.9998091232251306	WITHOUT_CLASSIFICATION	1.9087677486949721E-4	DEFECT
// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation	WITHOUT_CLASSIFICATION	0.9924696775097263	WITHOUT_CLASSIFICATION	0.0075303224902736835	DEFECT
// a continuation on the first line is a // continuation of the name - concatenate this // line and the name	WITHOUT_CLASSIFICATION	0.9987763895810846	WITHOUT_CLASSIFICATION	0.0012236104189153833	DEFECT
// required // required	WITHOUT_CLASSIFICATION	0.9999217671462143	WITHOUT_CLASSIFICATION	7.82328537856627E-5	DEFECT
//modify the headers //NB: things like user authentication could go in here too.	WITHOUT_CLASSIFICATION	0.9931296207961893	WITHOUT_CLASSIFICATION	0.006870379203810696	DEFECT
// prepare Java 1.1 style credentials	WITHOUT_CLASSIFICATION	0.9999646025070564	WITHOUT_CLASSIFICATION	3.539749294356493E-5	DEFECT
//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing	WITHOUT_CLASSIFICATION	0.9749096083198959	WITHOUT_CLASSIFICATION	0.025090391680104088	DEFECT
//connect to the remote site (may take some time)	WITHOUT_CLASSIFICATION	0.9994851809839599	WITHOUT_CLASSIFICATION	5.148190160400414E-4	DEFECT
//next test for a 304 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9997305410299239	WITHOUT_CLASSIFICATION	2.694589700760994E-4	DEFECT
// test for 401 result (HTTP only)	WITHOUT_CLASSIFICATION	0.9998906872798644	WITHOUT_CLASSIFICATION	1.0931272013564832E-4	DEFECT
//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.	WITHOUT_CLASSIFICATION	0.9995510949558031	WITHOUT_CLASSIFICATION	4.489050441969309E-4	DEFECT
//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.	WITHOUT_CLASSIFICATION	0.9997887198379699	WITHOUT_CLASSIFICATION	2.1128016203011954E-4	DEFECT
//successful download	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// this happens if the projecthelper was not registered with the project.	WITHOUT_CLASSIFICATION	0.9989276898723175	WITHOUT_CLASSIFICATION	0.0010723101276824553	DEFECT
// methods to register and unregister shutdown hooks	WITHOUT_CLASSIFICATION	0.9999420549614229	WITHOUT_CLASSIFICATION	5.794503857714483E-5	DEFECT
// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)	WITHOUT_CLASSIFICATION	0.9999901887998929	WITHOUT_CLASSIFICATION	9.811200107147098E-6	DEFECT
// wait to add shutdown hook as needed	WITHOUT_CLASSIFICATION	0.9999736250893863	WITHOUT_CLASSIFICATION	2.6374910613699488E-5	DEFECT
// it just won't be added as a shutdown hook... :(	WITHOUT_CLASSIFICATION	0.9999833138741461	WITHOUT_CLASSIFICATION	1.668612585388585E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9995098261737424	WITHOUT_CLASSIFICATION	4.901738262576688E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999807264803833	WITHOUT_CLASSIFICATION	1.9273519616721778E-5	DEFECT
// shutdown already is in progress	WITHOUT_CLASSIFICATION	0.9995098261737424	WITHOUT_CLASSIFICATION	4.901738262576688E-4	DEFECT
// I don't think we can use File - different rules // for relative paths.	WITHOUT_CLASSIFICATION	0.9987450640126676	WITHOUT_CLASSIFICATION	0.0012549359873323855	DEFECT
// this happens if ant is used with a project // helper that doesn't set the import.	WITHOUT_CLASSIFICATION	0.9998963717066106	WITHOUT_CLASSIFICATION	1.0362829338938221E-4	DEFECT
// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).	WITHOUT_CLASSIFICATION	0.9999897576312166	WITHOUT_CLASSIFICATION	1.0242368783376356E-5	DEFECT
// whether or not this ProcessDestroyer has been registered as a // shutdown hook	WITHOUT_CLASSIFICATION	0.999137396871266	WITHOUT_CLASSIFICATION	8.62603128733856E-4	DEFECT
// whether or not this ProcessDestroyer is currently running as // shutdown hook	WITHOUT_CLASSIFICATION	0.9970349485370397	WITHOUT_CLASSIFICATION	0.0029650514629603144	DEFECT
// this should return quickly, since it basically is a NO-OP.	WITHOUT_CLASSIFICATION	0.9997564083007188	WITHOUT_CLASSIFICATION	2.435916992812223E-4	DEFECT
// the thread didn't die in time // it should not kill any processes unexpectedly	WITHOUT_CLASSIFICATION	0.9973329876550494	WITHOUT_CLASSIFICATION	0.0026670123449505667	DEFECT
// if this list is empty, register the shutdown hook	WITHOUT_CLASSIFICATION	0.9998666328769966	WITHOUT_CLASSIFICATION	1.333671230034525E-4	DEFECT
// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.	WITHOUT_CLASSIFICATION	0.9999881087307776	WITHOUT_CLASSIFICATION	1.1891269222495089E-5	DEFECT
// generate classpath, because kjc doesn't support sourcepath.	WITHOUT_CLASSIFICATION	0.9995361158886045	WITHOUT_CLASSIFICATION	4.638841113955249E-4	DEFECT
// generate the clsspath	WITHOUT_CLASSIFICATION	0.9999594050907245	WITHOUT_CLASSIFICATION	4.059490927567156E-5	DEFECT
// kjc don't have bootclasspath option.	WITHOUT_CLASSIFICATION	0.9964664526960513	WITHOUT_CLASSIFICATION	0.0035335473039486117	DEFECT
// Process the factory class	WITHOUT_CLASSIFICATION	0.9999589408534927	WITHOUT_CLASSIFICATION	4.105914650728578E-5	DEFECT
// Process the factory path	WITHOUT_CLASSIFICATION	0.9999771682087512	WITHOUT_CLASSIFICATION	2.2831791248856426E-5	DEFECT
// Process the processor options	WITHOUT_CLASSIFICATION	0.9999610520886462	WITHOUT_CLASSIFICATION	3.894791135384204E-5	DEFECT
//set up the javac options	WITHOUT_CLASSIFICATION	0.9999724428300151	WITHOUT_CLASSIFICATION	2.7557169984977514E-5	DEFECT
//then add the Apt options	WITHOUT_CLASSIFICATION	0.9999709950849134	WITHOUT_CLASSIFICATION	2.9004915086650666E-5	DEFECT
//finally invoke APT // Use reflection to be able to build on all JDKs:	WITHOUT_CLASSIFICATION	0.999886933845524	WITHOUT_CLASSIFICATION	1.1306615447605366E-4	DEFECT
//rethrow build exceptions	WITHOUT_CLASSIFICATION	0.9998646936078094	WITHOUT_CLASSIFICATION	1.353063921906491E-4	DEFECT
//cast everything else to a build exception	WITHOUT_CLASSIFICATION	0.9991758538826798	WITHOUT_CLASSIFICATION	8.241461173202199E-4	DEFECT
// Call the compile() method	WITHOUT_CLASSIFICATION	0.9999741441865827	WITHOUT_CLASSIFICATION	2.58558134172968E-5	DEFECT
// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9998802572912134	WITHOUT_CLASSIFICATION	1.1974270878658713E-4	DEFECT
// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9998856640161422	WITHOUT_CLASSIFICATION	1.1433598385771083E-4	DEFECT
// jvc has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999792261057031	WITHOUT_CLASSIFICATION	2.0773894296989502E-5	DEFECT
// Add the Classpath before the "internal" one.	WITHOUT_CLASSIFICATION	0.9999323532497877	WITHOUT_CLASSIFICATION	6.764675021224294E-5	DEFECT
// Enable MS-Extensions and ...	WITHOUT_CLASSIFICATION	0.9999283788843414	WITHOUT_CLASSIFICATION	7.162111565866947E-5	DEFECT
// ... do not display a Message about this.	WITHOUT_CLASSIFICATION	0.9995300742374589	WITHOUT_CLASSIFICATION	4.6992576254112567E-4	DEFECT
// Do not display Logo	WITHOUT_CLASSIFICATION	0.9997738150089768	WITHOUT_CLASSIFICATION	2.2618499102324867E-4	DEFECT
//add the files	WITHOUT_CLASSIFICATION	0.9999360255942328	WITHOUT_CLASSIFICATION	6.397440576720575E-5	DEFECT
//run	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//as new versions of java come out, add them to this test	WITHOUT_CLASSIFICATION	0.9996704722240934	WITHOUT_CLASSIFICATION	3.295277759064939E-4	DEFECT
//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early	WITHOUT_CLASSIFICATION	0.9994726081021738	WITHOUT_CLASSIFICATION	5.273918978262073E-4	DEFECT
// does the modern compiler exist?	WITHOUT_CLASSIFICATION	0.9996696645892325	WITHOUT_CLASSIFICATION	3.303354107675133E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9997972576585434	WITHOUT_CLASSIFICATION	2.0274234145642477E-4	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999788732496497	WITHOUT_CLASSIFICATION	2.1126750350336732E-5	DEFECT
// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"	WITHOUT_CLASSIFICATION	0.9999865848472677	WITHOUT_CLASSIFICATION	1.3415152732374826E-5	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9997498980864679	WITHOUT_CLASSIFICATION	2.5010191353224364E-4	DEFECT
// If the buildfile specifies sourcepath="", then don't // output any sourcepath.	WITHOUT_CLASSIFICATION	0.9997498980864679	WITHOUT_CLASSIFICATION	2.5010191353224364E-4	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either	WITHOUT_CLASSIFICATION	0.9992961208016363	WITHOUT_CLASSIFICATION	7.038791983636707E-4	DEFECT
// 1.5.0 doesn't support -source 1.1	WITHOUT_CLASSIFICATION	0.9992918072699762	WITHOUT_CLASSIFICATION	7.081927300236783E-4	DEFECT
//Use the VM launcher instead of shell launcher on VMS //for java	WITHOUT_CLASSIFICATION	0.9982585107380858	WITHOUT_CLASSIFICATION	0.0017414892619141509	DEFECT
// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9998802572912134	WITHOUT_CLASSIFICATION	1.1974270878658713E-4	DEFECT
// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.	WITHOUT_CLASSIFICATION	0.9998856640161422	WITHOUT_CLASSIFICATION	1.1433598385771083E-4	DEFECT
// Gcj has no option for source-path so we // will add it to classpath.	WITHOUT_CLASSIFICATION	0.9999792261057031	WITHOUT_CLASSIFICATION	2.0773894296989502E-5	DEFECT
// Use reflection to be able to build on all JDKs >= 1.1:	WITHOUT_CLASSIFICATION	0.9998816844883527	WITHOUT_CLASSIFICATION	1.1831551164741344E-4	DEFECT
// no bootclasspath, therefore, get one from the java runtime	WITHOUT_CLASSIFICATION	0.9999103430668578	WITHOUT_CLASSIFICATION	8.96569331422223E-5	DEFECT
// if the user has set JIKESPATH we should add the contents as well	WITHOUT_CLASSIFICATION	0.9999863718349552	WITHOUT_CLASSIFICATION	1.3628165044793281E-5	DEFECT
//reflection to avoid bootstrap/build problems	WITHOUT_CLASSIFICATION	0.9988016371282614	WITHOUT_CLASSIFICATION	0.0011983628717385716	DEFECT
//now verify that the class has an implementation	WITHOUT_CLASSIFICATION	0.9996107679801643	WITHOUT_CLASSIFICATION	3.8923201983568853E-4	DEFECT
//windows probing logic relies on the word 'windows' in //the OS	WITHOUT_CLASSIFICATION	0.9997968614504864	WITHOUT_CLASSIFICATION	2.0313854951368762E-4	DEFECT
//there are only four 9x platforms that we look for	WITHOUT_CLASSIFICATION	0.9996909519725697	WITHOUT_CLASSIFICATION	3.0904802743026203E-4	DEFECT
//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.	WITHOUT_CLASSIFICATION	0.9699269022201059	WITHOUT_CLASSIFICATION	0.030073097779894063	DEFECT
// millis per second	WITHOUT_CLASSIFICATION	0.9997958159179879	WITHOUT_CLASSIFICATION	2.0418408201207207E-4	DEFECT
//get the host of a url	WITHOUT_CLASSIFICATION	0.9998479106810596	WITHOUT_CLASSIFICATION	1.52089318940427E-4	DEFECT
//Java1.5: reachable = address.isReachable(timeout * 1000);	WITHOUT_CLASSIFICATION	0.9999329259560923	WITHOUT_CLASSIFICATION	6.707404390771078E-5	DEFECT
//utterly implausible, but catered for anyway	WITHOUT_CLASSIFICATION	0.9995307367267379	WITHOUT_CLASSIFICATION	4.6926327326212054E-4	DEFECT
// load the parser class	WITHOUT_CLASSIFICATION	0.9999357631449929	WITHOUT_CLASSIFICATION	6.423685500706668E-5	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9996097288354813	WITHOUT_CLASSIFICATION	3.902711645186699E-4	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999317874282765	WITHOUT_CLASSIFICATION	6.821257172354033E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999313105023125	WITHOUT_CLASSIFICATION	6.86894976874416E-5	DEFECT
// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it	WITHOUT_CLASSIFICATION	0.9997013632050711	WITHOUT_CLASSIFICATION	2.9863679492898756E-4	DEFECT
//assume this is an IOexception about un readability	WITHOUT_CLASSIFICATION	0.9961150464570674	WITHOUT_CLASSIFICATION	0.0038849535429326854	DEFECT
//any kind of fault: not reachable.	WITHOUT_CLASSIFICATION	0.9963737194450176	WITHOUT_CLASSIFICATION	0.003626280554982449	DEFECT
//java1.4 or earlier	WITHOUT_CLASSIFICATION	0.9998458793472965	WITHOUT_CLASSIFICATION	1.541206527034511E-4	DEFECT
// don't know the type, should throw exception instead?	WITHOUT_CLASSIFICATION	0.9751580045630444	WITHOUT_CLASSIFICATION	0.024841995436955564	DEFECT
//pick a value that is good for everything	WITHOUT_CLASSIFICATION	0.9981205885946063	WITHOUT_CLASSIFICATION	0.0018794114053937712	DEFECT
//initial state is false.	WITHOUT_CLASSIFICATION	0.9996878629256631	WITHOUT_CLASSIFICATION	3.1213707433679007E-4	DEFECT
//every condition is xored against the previous one	WITHOUT_CLASSIFICATION	0.9997805059633309	WITHOUT_CLASSIFICATION	2.1949403666915982E-4	DEFECT
//validate	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//#now match the files	WITHOUT_CLASSIFICATION	0.9999352143933807	WITHOUT_CLASSIFICATION	6.478560661921932E-5	DEFECT
// Intentionally left blank	WITHOUT_CLASSIFICATION	0.999909406733569	WITHOUT_CLASSIFICATION	9.059326643103405E-5	DEFECT
//private static final int GET_ENTRY = 0;	WITHOUT_CLASSIFICATION	0.9998335324514764	WITHOUT_CLASSIFICATION	1.6646754852367988E-4	DEFECT
// make sure attributes are reset when // working on a 'new' file.	WITHOUT_CLASSIFICATION	0.9998395732481433	WITHOUT_CLASSIFICATION	1.6042675185668804E-4	DEFECT
//We have ended changelog for that particular file //so we can save it	WITHOUT_CLASSIFICATION	0.9991583076586736	WITHOUT_CLASSIFICATION	8.416923413263585E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9994263731603734	WITHOUT_CLASSIFICATION	5.73626839626496E-4	DEFECT
//was -1	WITHOUT_CLASSIFICATION	0.9994263731603734	WITHOUT_CLASSIFICATION	5.73626839626496E-4	DEFECT
//There were no revisions in this changelog //entry so lets move onto next file	WITHOUT_CLASSIFICATION	0.9994017705545069	WITHOUT_CLASSIFICATION	5.982294454931103E-4	DEFECT
//Reset comment to empty here as we can accumulate multiple lines //in the processComment method	WITHOUT_CLASSIFICATION	0.9999336035599703	WITHOUT_CLASSIFICATION	6.639644002969089E-5	DEFECT
// We want something of the form: -d ">=YYYY-MM-dd"	WITHOUT_CLASSIFICATION	0.9999804922197921	WITHOUT_CLASSIFICATION	1.950778020789073E-5	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999885149311045	WITHOUT_CLASSIFICATION	1.1485068895532101E-5	DEFECT
//for now skip entries which are missing a date	WITHOUT_CLASSIFICATION	0.9998332597754526	WITHOUT_CLASSIFICATION	1.6674022454737624E-4	DEFECT
//Skip dates that are too early	WITHOUT_CLASSIFICATION	0.9998264507255958	WITHOUT_CLASSIFICATION	1.7354927440407073E-4	DEFECT
//Skip dates that are too late	WITHOUT_CLASSIFICATION	0.999929415467617	WITHOUT_CLASSIFICATION	7.058453238292167E-5	DEFECT
// validate the input parameters	WITHOUT_CLASSIFICATION	0.9997098168948757	WITHOUT_CLASSIFICATION	2.901831051242237E-4	DEFECT
// build the rdiff command	WITHOUT_CLASSIFICATION	0.9999213016907266	WITHOUT_CLASSIFICATION	7.869830927339578E-5	DEFECT
// if the two substrings are longer than the original, then name // contains address - so reset the name to null	WITHOUT_CLASSIFICATION	0.9998926640639889	WITHOUT_CLASSIFICATION	1.0733593601112943E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// support multiple packages	WITHOUT_CLASSIFICATION	0.9998320036935909	WITHOUT_CLASSIFICATION	1.6799630640904474E-4	DEFECT
// force command not to be null	WITHOUT_CLASSIFICATION	0.9961334578415	WITHOUT_CLASSIFICATION	0.003866542158500118	DEFECT
// run the cvs command	WITHOUT_CLASSIFICATION	0.9998561641113012	WITHOUT_CLASSIFICATION	1.4383588869875294E-4	DEFECT
// parse the rdiff	WITHOUT_CLASSIFICATION	0.9998959187405809	WITHOUT_CLASSIFICATION	1.0408125941902722E-4	DEFECT
// write the tag diff	WITHOUT_CLASSIFICATION	0.999969263248114	WITHOUT_CLASSIFICATION	3.073675188609826E-5	DEFECT
// parse the output of the command	WITHOUT_CLASSIFICATION	0.9995885159999028	WITHOUT_CLASSIFICATION	4.1148400009712234E-4	DEFECT
// it is a new file // set the revision but not the prevrevision	WITHOUT_CLASSIFICATION	0.9998985753226	WITHOUT_CLASSIFICATION	1.0142467740001645E-4	DEFECT
// it is a modified file // set the revision and the prevrevision	WITHOUT_CLASSIFICATION	0.999976663564201	WITHOUT_CLASSIFICATION	2.333643579902573E-5	DEFECT
// it is a removed file	WITHOUT_CLASSIFICATION	0.9995918752801385	WITHOUT_CLASSIFICATION	4.081247198614804E-4	DEFECT
/* special headers */	WITHOUT_CLASSIFICATION	0.9998923249955707	WITHOUT_CLASSIFICATION	1.0767500442936706E-4	DEFECT
// prepare for the auto select mechanism	WITHOUT_CLASSIFICATION	0.9997237059995159	WITHOUT_CLASSIFICATION	2.7629400048413146E-4	DEFECT
// try MIME format	WITHOUT_CLASSIFICATION	0.9999915121612734	WITHOUT_CLASSIFICATION	8.48783872666235E-6	DEFECT
// SMTP auth only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9986275315050278	WITHOUT_CLASSIFICATION	0.001372468494972166	DEFECT
// SSL only allowed with MIME mail	WITHOUT_CLASSIFICATION	0.9986275315050278	WITHOUT_CLASSIFICATION	0.001372468494972166	DEFECT
// try UU format	WITHOUT_CLASSIFICATION	0.9999915121612734	WITHOUT_CLASSIFICATION	8.48783872666235E-6	DEFECT
// try plain format	WITHOUT_CLASSIFICATION	0.9999916490453268	WITHOUT_CLASSIFICATION	8.350954673159824E-6	DEFECT
// a valid mailer must be present by now	WITHOUT_CLASSIFICATION	0.9999276432305975	WITHOUT_CLASSIFICATION	7.23567694025744E-5	DEFECT
// a valid message is required	WITHOUT_CLASSIFICATION	0.9999101259811247	WITHOUT_CLASSIFICATION	8.987401887524715E-5	DEFECT
// an address to send from is required	WITHOUT_CLASSIFICATION	0.9985868493024008	WITHOUT_CLASSIFICATION	0.0014131506975992268	DEFECT
// at least one address to send to/cc/bcc is required	WITHOUT_CLASSIFICATION	0.9984350107436034	WITHOUT_CLASSIFICATION	0.0015649892563966731	DEFECT
// set the mimetype if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999687294434241	WITHOUT_CLASSIFICATION	3.127055657595156E-5	DEFECT
// set the character set if not done already (and required)	WITHOUT_CLASSIFICATION	0.9999811433313192	WITHOUT_CLASSIFICATION	1.8856668680908876E-5	DEFECT
// identify which files should be attached	WITHOUT_CLASSIFICATION	0.9991484699309592	WITHOUT_CLASSIFICATION	8.515300690408213E-4	DEFECT
// let the user know what's going to happen	WITHOUT_CLASSIFICATION	0.9979123473951687	WITHOUT_CLASSIFICATION	0.002087652604831463	DEFECT
// pass the params to the mailer	WITHOUT_CLASSIFICATION	0.9992946910274852	WITHOUT_CLASSIFICATION	7.053089725147093E-4	DEFECT
// send the email	WITHOUT_CLASSIFICATION	0.9999588701093096	WITHOUT_CLASSIFICATION	4.1129890690352384E-5	DEFECT
// let the user know what happened	WITHOUT_CLASSIFICATION	0.9990239711927953	WITHOUT_CLASSIFICATION	9.760288072047161E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Read message from a file	WITHOUT_CLASSIFICATION	0.9999409822676651	WITHOUT_CLASSIFICATION	5.901773233479623E-5	DEFECT
// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java	WITHOUT_CLASSIFICATION	0.9995867568043858	WITHOUT_CLASSIFICATION	4.132431956142016E-4	DEFECT
// shortcut for "<address>"	WITHOUT_CLASSIFICATION	0.9998812348263939	WITHOUT_CLASSIFICATION	1.1876517360615073E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9997722012898879	WITHOUT_CLASSIFICATION	2.2779871011224063E-4	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9997722012898879	WITHOUT_CLASSIFICATION	2.2779871011224063E-4	DEFECT
// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource	WITHOUT_CLASSIFICATION	0.9081974330480059	WITHOUT_CLASSIFICATION	0.09180256695199406	DEFECT
// Must be like "text/plain; charset=windows-1251"	WITHOUT_CLASSIFICATION	0.9998794057828044	WITHOUT_CLASSIFICATION	1.2059421719564667E-4	DEFECT
// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)	WITHOUT_CLASSIFICATION	0.9998206166902266	WITHOUT_CLASSIFICATION	1.7938330977345038E-4	DEFECT
// SMTP provider	WITHOUT_CLASSIFICATION	0.9998811435506297	WITHOUT_CLASSIFICATION	1.188564493702999E-4	DEFECT
//create the message	WITHOUT_CLASSIFICATION	0.999936109260569	WITHOUT_CLASSIFICATION	6.389073943112608E-5	DEFECT
//set the sender	WITHOUT_CLASSIFICATION	0.9998910540968918	WITHOUT_CLASSIFICATION	1.0894590310817561E-4	DEFECT
// set the reply to addresses	WITHOUT_CLASSIFICATION	0.9999750954840265	WITHOUT_CLASSIFICATION	2.4904515973509386E-5	DEFECT
// Choosing character set of the mail message // First: looking it from MimeType	WITHOUT_CLASSIFICATION	0.9999863810278368	WITHOUT_CLASSIFICATION	1.3618972163232686E-5	DEFECT
// Assign/reassign message charset from MimeType	WITHOUT_CLASSIFICATION	0.9998496931158111	WITHOUT_CLASSIFICATION	1.503068841889826E-4	DEFECT
// Next: looking if charset having explicit definition	WITHOUT_CLASSIFICATION	0.9999557453127614	WITHOUT_CLASSIFICATION	4.4254687238499514E-5	DEFECT
// Using default	WITHOUT_CLASSIFICATION	0.9999875674800829	WITHOUT_CLASSIFICATION	1.2432519917158993E-5	DEFECT
// Using javax.activation.DataSource paradigm	WITHOUT_CLASSIFICATION	0.9998391880493405	WITHOUT_CLASSIFICATION	1.608119506595052E-4	DEFECT
// Assuming mime type in form "text/XXXX; charset=XXXXXX"	WITHOUT_CLASSIFICATION	0.9999202078684438	WITHOUT_CLASSIFICATION	7.979213155626336E-5	DEFECT
// Skip 'charset='	WITHOUT_CLASSIFICATION	0.9999399045905711	WITHOUT_CLASSIFICATION	6.009540942877383E-5	DEFECT
// Scanner to find our inputs // list of files to process	WITHOUT_CLASSIFICATION	0.9999657341367064	WITHOUT_CLASSIFICATION	3.42658632935495E-5	DEFECT
// default srcDir to basedir	WITHOUT_CLASSIFICATION	0.9999723002765991	WITHOUT_CLASSIFICATION	2.7699723400843893E-5	DEFECT
// Require destDir	WITHOUT_CLASSIFICATION	0.9999365175061629	WITHOUT_CLASSIFICATION	6.348249383715509E-5	DEFECT
// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....	WITHOUT_CLASSIFICATION	0.9988238730660381	WITHOUT_CLASSIFICATION	0.0011761269339618122	DEFECT
// File to convert // where to put the results	WITHOUT_CLASSIFICATION	0.9999043446093308	WITHOUT_CLASSIFICATION	9.565539066915857E-5	DEFECT
// Build the full file names	WITHOUT_CLASSIFICATION	0.9999818666108873	WITHOUT_CLASSIFICATION	1.813338911263733E-5	DEFECT
// Make sure we're not about to clobber something	WITHOUT_CLASSIFICATION	0.9990625088699338	WITHOUT_CLASSIFICATION	9.374911300662976E-4	DEFECT
// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,	WITHOUT_CLASSIFICATION	0.9445022163718434	WITHOUT_CLASSIFICATION	0.055497783628156494	DEFECT
//this.fork = s;	WITHOUT_CLASSIFICATION	0.9998709564769224	WITHOUT_CLASSIFICATION	1.2904352307766326E-4	DEFECT
//TODO: use ANTLR to parse the grammar file to do this.	WITHOUT_CLASSIFICATION	0.9598230263658389	WITHOUT_CLASSIFICATION	0.04017697363416113	DEFECT
// if no output directory is specified, used the target's directory	WITHOUT_CLASSIFICATION	0.9999977259808219	WITHOUT_CLASSIFICATION	2.274019178107829E-6	DEFECT
// first off, make sure that we've got a from and to extension	WITHOUT_CLASSIFICATION	0.9997622440227488	WITHOUT_CLASSIFICATION	2.3775597725104146E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Error strings	WITHOUT_CLASSIFICATION	0.9998943221376105	WITHOUT_CLASSIFICATION	1.0567786238936745E-4	DEFECT
//validating	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9998046595192961	WITHOUT_CLASSIFICATION	1.9534048070390635E-4	DEFECT
//set the schema source for the doc	WITHOUT_CLASSIFICATION	0.9998046595192961	WITHOUT_CLASSIFICATION	1.9534048070390635E-4	DEFECT
//enable XSD	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//validate the parser type	WITHOUT_CLASSIFICATION	0.9999501225238033	WITHOUT_CLASSIFICATION	4.987747619675314E-5	DEFECT
//couldnt use the xerces or jaxp calls	WITHOUT_CLASSIFICATION	0.998752414076572	WITHOUT_CLASSIFICATION	0.0012475859234281	DEFECT
//enable schema checking	WITHOUT_CLASSIFICATION	0.9997713305451187	WITHOUT_CLASSIFICATION	2.2866945488131442E-4	DEFECT
//turn off DTDs if desired	WITHOUT_CLASSIFICATION	0.9999733076541584	WITHOUT_CLASSIFICATION	2.6692345841621005E-5	DEFECT
//schema declarations go in next	WITHOUT_CLASSIFICATION	0.9977682460537033	WITHOUT_CLASSIFICATION	0.002231753946296676	DEFECT
// first off, make sure that we've got a srcdir and destdir	WITHOUT_CLASSIFICATION	0.999931142989281	WITHOUT_CLASSIFICATION	6.885701071899397E-5	DEFECT
//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);	WITHOUT_CLASSIFICATION	0.9995907978489029	WITHOUT_CLASSIFICATION	4.0920215109704894E-4	DEFECT
//this is almost implausible, but required handling	WITHOUT_CLASSIFICATION	0.9994986891295199	WITHOUT_CLASSIFICATION	5.013108704801398E-4	DEFECT
//SchemaLocation	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//private Path extdirs;	WITHOUT_CLASSIFICATION	0.9998032711037845	WITHOUT_CLASSIFICATION	1.967288962154535E-4	DEFECT
// first off, make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.999904425249058	WITHOUT_CLASSIFICATION	9.557475094196557E-5	DEFECT
// Keep jdk 1.1 compliant so others can use this	WITHOUT_CLASSIFICATION	0.999802275928626	WITHOUT_CLASSIFICATION	1.9772407137394894E-4	DEFECT
// second CR -> EOL + possibly empty line	WITHOUT_CLASSIFICATION	0.9996016497708963	WITHOUT_CLASSIFICATION	3.9835022910370856E-4	DEFECT
// first CR in this line	WITHOUT_CLASSIFICATION	0.9996003674981472	WITHOUT_CLASSIFICATION	3.996325018527265E-4	DEFECT
// LF -> EOL	WITHOUT_CLASSIFICATION	0.9999594888769091	WITHOUT_CLASSIFICATION	4.0511123091009044E-5	DEFECT
// any other char	WITHOUT_CLASSIFICATION	0.9999615318518006	WITHOUT_CLASSIFICATION	3.846814819940982E-5	DEFECT
// Mac-style linebreak or EOF (or both)	WITHOUT_CLASSIFICATION	0.9999290870443523	WITHOUT_CLASSIFICATION	7.091295564765675E-5	DEFECT
// variables to hold arguments	WITHOUT_CLASSIFICATION	0.9999106539833177	WITHOUT_CLASSIFICATION	8.934601668237215E-5	DEFECT
// ?? Should this be the default for ant?	WITHOUT_CLASSIFICATION	0.9999681636866479	WITHOUT_CLASSIFICATION	3.183631335218467E-5	DEFECT
// constants for the messages to suppress by flags and their corresponding properties	WITHOUT_CLASSIFICATION	0.9992176955988376	WITHOUT_CLASSIFICATION	7.8230440116231E-4	DEFECT
// other implementation variables	WITHOUT_CLASSIFICATION	0.9997207215719086	WITHOUT_CLASSIFICATION	2.7927842809134204E-4	DEFECT
// classpath makes no sense	WITHOUT_CLASSIFICATION	0.9999865875172225	WITHOUT_CLASSIFICATION	1.341248277744944E-5	DEFECT
// destDir	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// srcDir	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// copy the source and support files	WITHOUT_CLASSIFICATION	0.9999125176782041	WITHOUT_CLASSIFICATION	8.748232179590154E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999985536620966	WITHOUT_CLASSIFICATION	1.4463379034063647E-5	DEFECT
// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList	WITHOUT_CLASSIFICATION	0.9997305762439544	WITHOUT_CLASSIFICATION	2.6942375604549907E-4	DEFECT
// create a single array of arguments for the compiler	WITHOUT_CLASSIFICATION	0.9998418956039298	WITHOUT_CLASSIFICATION	1.5810439607029077E-4	DEFECT
// print nice output about what we are doing for the log	WITHOUT_CLASSIFICATION	0.9999255201696354	WITHOUT_CLASSIFICATION	7.447983036451527E-5	DEFECT
// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9999548787600488	WITHOUT_CLASSIFICATION	4.512123995123898E-5	DEFECT
// path is mentioned in the message	WITHOUT_CLASSIFICATION	0.9998579378599988	WITHOUT_CLASSIFICATION	1.42062140001331E-4	DEFECT
// verbose level logging for suppressed messages	WITHOUT_CLASSIFICATION	0.999808101740886	WITHOUT_CLASSIFICATION	1.918982591138888E-4	DEFECT
// error level logging for compiler errors	WITHOUT_CLASSIFICATION	0.9995787782394758	WITHOUT_CLASSIFICATION	4.2122176052411916E-4	DEFECT
// warning for all warning messages	WITHOUT_CLASSIFICATION	0.9998843719144758	WITHOUT_CLASSIFICATION	1.1562808552424948E-4	DEFECT
// info level for the rest.	WITHOUT_CLASSIFICATION	0.9999375030415231	WITHOUT_CLASSIFICATION	6.24969584769165E-5	DEFECT
// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath	WITHOUT_CLASSIFICATION	0.9998478707396314	WITHOUT_CLASSIFICATION	1.5212926036853924E-4	DEFECT
// add our classpath to the mix	WITHOUT_CLASSIFICATION	0.9999031387992876	WITHOUT_CLASSIFICATION	9.686120071235198E-5	DEFECT
// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));	WITHOUT_CLASSIFICATION	0.9999158222599447	WITHOUT_CLASSIFICATION	8.417774005532086E-5	DEFECT
// XMLReader used to validation process	WITHOUT_CLASSIFICATION	0.9999796833846456	WITHOUT_CLASSIFICATION	2.0316615354434458E-5	DEFECT
// turn validation on	WITHOUT_CLASSIFICATION	0.9998804191921891	WITHOUT_CLASSIFICATION	1.1958080781084021E-4	DEFECT
// set the feature from the attribute list	WITHOUT_CLASSIFICATION	0.9999535613569163	WITHOUT_CLASSIFICATION	4.643864308377308E-5	DEFECT
// Sets properties	WITHOUT_CLASSIFICATION	0.9999348263283928	WITHOUT_CLASSIFICATION	6.517367160718011E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// quick exit if the target is up to date	WITHOUT_CLASSIFICATION	0.9999688983275469	WITHOUT_CLASSIFICATION	3.110167245304736E-5	DEFECT
// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.9997007470253015	WITHOUT_CLASSIFICATION	2.9925297469847424E-4	DEFECT
// to report sax parsing errors // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9994346564747528	WITHOUT_CLASSIFICATION	5.653435252471449E-4	DEFECT
// then check it implements XMLReader	WITHOUT_CLASSIFICATION	0.9999525824032707	WITHOUT_CLASSIFICATION	4.741759672931349E-5	DEFECT
// see if it is a SAX1 Parser	WITHOUT_CLASSIFICATION	0.9999585282678205	WITHOUT_CLASSIFICATION	4.147173217945126E-5	DEFECT
// Validates property	WITHOUT_CLASSIFICATION	0.9997612029011854	WITHOUT_CLASSIFICATION	2.3879709881458996E-4	DEFECT
//for every file, we have a new instance of the validator	WITHOUT_CLASSIFICATION	0.9996895261611185	WITHOUT_CLASSIFICATION	3.1047383888154834E-4	DEFECT
// if this is not a valid file: just use the uri	WITHOUT_CLASSIFICATION	0.9986252886379525	WITHOUT_CLASSIFICATION	0.0013747113620474532	DEFECT
// Property	WITHOUT_CLASSIFICATION	0.9999463421385806	WITHOUT_CLASSIFICATION	5.3657861419307763E-5	DEFECT
/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */	WITHOUT_CLASSIFICATION	0.9819095326558747	WITHOUT_CLASSIFICATION	0.018090467344125418	DEFECT
// get files from old methods - includes and nested include	WITHOUT_CLASSIFICATION	0.9999549945357669	WITHOUT_CLASSIFICATION	4.500546423317714E-5	DEFECT
// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.	WITHOUT_CLASSIFICATION	0.9968919556856274	WITHOUT_CLASSIFICATION	0.0031080443143726025	DEFECT
// Pump streams asynchronously	WITHOUT_CLASSIFICATION	0.9999207055377697	WITHOUT_CLASSIFICATION	7.929446223029717E-5	DEFECT
// A wild default for when the thread is interrupted	WITHOUT_CLASSIFICATION	0.9999093334183461	WITHOUT_CLASSIFICATION	9.066658165385009E-5	DEFECT
// Wait for the process to finish	WITHOUT_CLASSIFICATION	0.9999232663558234	WITHOUT_CLASSIFICATION	7.673364417660928E-5	DEFECT
// Wait for the end of output and error streams	WITHOUT_CLASSIFICATION	0.9998495489639687	WITHOUT_CLASSIFICATION	1.5045103603124625E-4	DEFECT
// Informative summary message in case of errors	WITHOUT_CLASSIFICATION	0.9999150904665105	WITHOUT_CLASSIFICATION	8.490953348944776E-5	DEFECT
// die if cabarc fails	WITHOUT_CLASSIFICATION	0.9999383152921499	WITHOUT_CLASSIFICATION	6.168470785014548E-5	DEFECT
// Use this to prepend a message to the properties file	WITHOUT_CLASSIFICATION	0.9998588952051259	WITHOUT_CLASSIFICATION	1.4110479487400185E-4	DEFECT
/* ========================================================================    *    * Constructors    */	WITHOUT_CLASSIFICATION	0.9999091531114692	WITHOUT_CLASSIFICATION	9.084688853086586E-5	DEFECT
/* ========================================================================    *    * Methods    */	WITHOUT_CLASSIFICATION	0.9999129348716143	WITHOUT_CLASSIFICATION	8.706512838568008E-5	DEFECT
// Create the PropertyFile	WITHOUT_CLASSIFICATION	0.9999624979774528	WITHOUT_CLASSIFICATION	3.750202254713324E-5	DEFECT
// type may be null because it wasn't set	WITHOUT_CLASSIFICATION	0.9999874605663963	WITHOUT_CLASSIFICATION	1.2539433603720205E-5	DEFECT
// Default to string type // which means do nothing	WITHOUT_CLASSIFICATION	0.9999726500271677	WITHOUT_CLASSIFICATION	2.7349972832254703E-5	DEFECT
// Insert as a string by default	WITHOUT_CLASSIFICATION	0.9999865564239704	WITHOUT_CLASSIFICATION	1.3443576029625147E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// configure the transformer...	WITHOUT_CLASSIFICATION	0.9998908191340298	WITHOUT_CLASSIFICATION	1.091808659702412E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// If only value is specified, the property is set to it // regardless of its previous value.	WITHOUT_CLASSIFICATION	0.9996444170886148	WITHOUT_CLASSIFICATION	3.5558291138520646E-4	DEFECT
// If only default is specified and the property did not // exist in the property file, the property is set to default.	WITHOUT_CLASSIFICATION	0.9986300327686785	WITHOUT_CLASSIFICATION	0.0013699672313216115	DEFECT
// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.	WITHOUT_CLASSIFICATION	0.9999280222306448	WITHOUT_CLASSIFICATION	7.197776935516889E-5	DEFECT
// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.	WITHOUT_CLASSIFICATION	0.9996562921745542	WITHOUT_CLASSIFICATION	3.4370782544577223E-4	DEFECT
// Property type operations	WITHOUT_CLASSIFICATION	0.9999641200560881	WITHOUT_CLASSIFICATION	3.5879943911820566E-5	DEFECT
// Property types	WITHOUT_CLASSIFICATION	0.9999682490262187	WITHOUT_CLASSIFICATION	3.175097378132216E-5	DEFECT
// resetting the stylesheet - reset transformer	WITHOUT_CLASSIFICATION	0.9998087493635355	WITHOUT_CLASSIFICATION	1.9125063646454932E-4	DEFECT
// do we need to reset templates as well	WITHOUT_CLASSIFICATION	0.9999519052427757	WITHOUT_CLASSIFICATION	4.80947572243183E-5	DEFECT
// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)	WITHOUT_CLASSIFICATION	0.9999792675118534	WITHOUT_CLASSIFICATION	2.0732488146637218E-5	DEFECT
// end of try-catch	WITHOUT_CLASSIFICATION	0.9999452969322838	WITHOUT_CLASSIFICATION	5.470306771617231E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9934700546224556	WITHOUT_CLASSIFICATION	0.006529945377544359	DEFECT
// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.	WITHOUT_CLASSIFICATION	0.9999995809765854	WITHOUT_CLASSIFICATION	4.1902341457892563E-7	DEFECT
// not initialized yet, so create the factory	WITHOUT_CLASSIFICATION	0.9998733868789426	WITHOUT_CLASSIFICATION	1.2661312105741214E-4	DEFECT
// specific attributes for the transformer	WITHOUT_CLASSIFICATION	0.9999266505258504	WITHOUT_CLASSIFICATION	7.334947414959932E-5	DEFECT
// kept for backwards compatibility	WITHOUT_CLASSIFICATION	0.9998409483991504	WITHOUT_CLASSIFICATION	1.590516008496861E-4	DEFECT
// configure factory attributes	WITHOUT_CLASSIFICATION	0.9999256620634024	WITHOUT_CLASSIFICATION	7.433793659771089E-5	DEFECT
// use XMLCatalog as the entity resolver and URI resolver	WITHOUT_CLASSIFICATION	0.9998070896307357	WITHOUT_CLASSIFICATION	1.9291036926413988E-4	DEFECT
// configure output properties	WITHOUT_CLASSIFICATION	0.9999261730215141	WITHOUT_CLASSIFICATION	7.382697848597171E-5	DEFECT
//copy the properties file	WITHOUT_CLASSIFICATION	0.9998624691974287	WITHOUT_CLASSIFICATION	1.375308025712028E-4	DEFECT
/* load properties from file if specified, otherwise        use Ant's properties */	WITHOUT_CLASSIFICATION	0.999541934020568	WITHOUT_CLASSIFICATION	4.580659794319191E-4	DEFECT
// add ant properties	WITHOUT_CLASSIFICATION	0.9999544460233308	WITHOUT_CLASSIFICATION	4.5553976669155106E-5	DEFECT
//sort the list. Makes SCM and manual diffs easier.	WITHOUT_CLASSIFICATION	0.9998117352627938	WITHOUT_CLASSIFICATION	1.8826473720619924E-4	DEFECT
// create XML document	WITHOUT_CLASSIFICATION	0.9999114531137056	WITHOUT_CLASSIFICATION	8.854688629451233E-5	DEFECT
// output properties	WITHOUT_CLASSIFICATION	0.999941284594085	WITHOUT_CLASSIFICATION	5.87154059150071E-5	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9996732442162495	WITHOUT_CLASSIFICATION	3.2675578375049286E-4	DEFECT
//create task ok, set this task as the default one	WITHOUT_CLASSIFICATION	0.9999900977706736	WITHOUT_CLASSIFICATION	9.902229326331563E-6	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9997080576928622	WITHOUT_CLASSIFICATION	2.919423071377451E-4	DEFECT
// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9979952423322874	WITHOUT_CLASSIFICATION	0.0020047576677125942	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */	WITHOUT_CLASSIFICATION	0.9998587424404355	WITHOUT_CLASSIFICATION	1.4125755956451123E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// -reserved	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -unreserved	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -out	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -ndata	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9991929584098219	WITHOUT_CLASSIFICATION	8.070415901781368E-4	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// type value	WITHOUT_CLASSIFICATION	0.9999670361605246	WITHOUT_CLASSIFICATION	3.296383947539613E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Throws EjbcException if unsuccessful	WITHOUT_CLASSIFICATION	0.999925083811069	WITHOUT_CLASSIFICATION	7.491618893097766E-5	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999496625390752	WITHOUT_CLASSIFICATION	5.03374609248335E-5	DEFECT
// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999172807119617	WITHOUT_CLASSIFICATION	8.271928803820324E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// -nwarn	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -keep	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999534703053359	WITHOUT_CLASSIFICATION	4.652969466410262E-4	DEFECT
// Windows quoting of the value	WITHOUT_CLASSIFICATION	0.999774196832361	WITHOUT_CLASSIFICATION	2.2580316763900316E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
/*         * Should choose either -ci or -nco.         */	WITHOUT_CLASSIFICATION	0.9999883034938608	WITHOUT_CLASSIFICATION	1.1696506139214781E-5	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -nco	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999383759831191	WITHOUT_CLASSIFICATION	6.162401688091406E-5	DEFECT
// -ci	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999442893691	WITHOUT_CLASSIFICATION	5.571063090006052E-5	DEFECT
// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9991929584098219	WITHOUT_CLASSIFICATION	8.070415901781368E-4	DEFECT
// -master	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -rm	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -eltype	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -version	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -rmall -force	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// -identical	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999496625390752	WITHOUT_CLASSIFICATION	5.03374609248335E-5	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999496625390752	WITHOUT_CLASSIFICATION	5.03374609248335E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -recurse	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// type	WITHOUT_CLASSIFICATION	0.9999172807119617	WITHOUT_CLASSIFICATION	8.271928803820324E-5	DEFECT
// Returns list of EJBs for processing	WITHOUT_CLASSIFICATION	0.9997692512598586	WITHOUT_CLASSIFICATION	2.3074874014148862E-4	DEFECT
// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// type-kind:type-name	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// -ignore	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Return the type-selector	WITHOUT_CLASSIFICATION	0.9999502335210108	WITHOUT_CLASSIFICATION	4.976647898932996E-5	DEFECT
// -full	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -incremental	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -nlabel	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// baseline_root_name	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -ptime	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Check for required attributes	WITHOUT_CLASSIFICATION	0.9999496625390752	WITHOUT_CLASSIFICATION	5.03374609248335E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -replace	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.999534703053359	WITHOUT_CLASSIFICATION	4.652969466410262E-4	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999383759831191	WITHOUT_CLASSIFICATION	6.162401688091406E-5	DEFECT
// Check the command line options	WITHOUT_CLASSIFICATION	0.9999383759831191	WITHOUT_CLASSIFICATION	6.162401688091406E-5	DEFECT
// object selector	WITHOUT_CLASSIFICATION	0.9999442893691	WITHOUT_CLASSIFICATION	5.571063090006052E-5	DEFECT
// -ordinary	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9996521704094159	WITHOUT_CLASSIFICATION	3.47829590584166E-4	DEFECT
// For debugging	WITHOUT_CLASSIFICATION	0.9999509153588361	WITHOUT_CLASSIFICATION	4.908464116392113E-5	DEFECT
// -log logname	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -graphical	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -overwrite	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -global	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -rename	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -obsolete	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// -noverwrite	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// -ctime	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -pbranch	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// File[] filesInDir = directory.listFiles();	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// -shared	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// type-name@vob	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// we have a file. create a stream for it	WITHOUT_CLASSIFICATION	0.9997712432457619	WITHOUT_CLASSIFICATION	2.287567542381307E-4	DEFECT
// default directory to the project's base directory	WITHOUT_CLASSIFICATION	0.9999885307851474	WITHOUT_CLASSIFICATION	1.14692148526839E-5	DEFECT
// assume the worst	WITHOUT_CLASSIFICATION	0.9999319316963876	WITHOUT_CLASSIFICATION	6.806830361238114E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// create a data input stream from the jar // input stream	WITHOUT_CLASSIFICATION	0.9996841786390376	WITHOUT_CLASSIFICATION	3.158213609623563E-4	DEFECT
// this iterator is exhausted. Can we pop one off the stack	WITHOUT_CLASSIFICATION	0.9943788170977108	WITHOUT_CLASSIFICATION	0.005621182902289185	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999996723366789	WITHOUT_CLASSIFICATION	3.2766332122111667E-7	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999550786935452	WITHOUT_CLASSIFICATION	4.492130645491977E-5	DEFECT
// pick up the last round of dependencies that were determined	WITHOUT_CLASSIFICATION	0.9999734035306681	WITHOUT_CLASSIFICATION	2.6596469331895536E-5	DEFECT
// right we have a good looking class file.	WITHOUT_CLASSIFICATION	0.9995272241455851	WITHOUT_CLASSIFICATION	4.727758544148741E-4	DEFECT
/* int minorVersion = */	WITHOUT_CLASSIFICATION	0.9999258610536543	WITHOUT_CLASSIFICATION	7.413894634567802E-5	DEFECT
/* int majorVersion = */	WITHOUT_CLASSIFICATION	0.9999258610536543	WITHOUT_CLASSIFICATION	7.413894634567802E-5	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999258610536543	WITHOUT_CLASSIFICATION	7.413894634567802E-5	DEFECT
/* int superClassIndex = */	WITHOUT_CLASSIFICATION	0.9999258610536543	WITHOUT_CLASSIFICATION	7.413894634567802E-5	DEFECT
// read the dependency cache from the disk	WITHOUT_CLASSIFICATION	0.9999476217059476	WITHOUT_CLASSIFICATION	5.237829405236973E-5	DEFECT
// try to read the dependency info from the map if it is // not out of date	WITHOUT_CLASSIFICATION	0.9994956468749074	WITHOUT_CLASSIFICATION	5.043531250926267E-4	DEFECT
// not cached - so need to read directly from the class file	WITHOUT_CLASSIFICATION	0.9994072385674225	WITHOUT_CLASSIFICATION	5.927614325774501E-4	DEFECT
// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list	WITHOUT_CLASSIFICATION	0.9996202320368652	WITHOUT_CLASSIFICATION	3.7976796313476306E-4	DEFECT
// now determine which jars each class depends upon	WITHOUT_CLASSIFICATION	0.9999692726666569	WITHOUT_CLASSIFICATION	3.072733334307211E-5	DEFECT
// we need to add this jar to the list for this class.	WITHOUT_CLASSIFICATION	0.9999068356314076	WITHOUT_CLASSIFICATION	9.316436859239556E-5	DEFECT
// write the dependency cache to the disk	WITHOUT_CLASSIFICATION	0.9999169129380875	WITHOUT_CLASSIFICATION	8.308706191254703E-5	DEFECT
// need to delete the main class	WITHOUT_CLASSIFICATION	0.9999156754687697	WITHOUT_CLASSIFICATION	8.432453123031584E-5	DEFECT
//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.	WITHOUT_CLASSIFICATION	0.9999948885964405	WITHOUT_CLASSIFICATION	5.111403559446543E-6	DEFECT
// now check classpath file dependencies	WITHOUT_CLASSIFICATION	0.9999499590971834	WITHOUT_CLASSIFICATION	5.0040902816605826E-5	DEFECT
// if we have no info about the class - it may have been deleted already and we // are using cached info.	WITHOUT_CLASSIFICATION	0.9999963989811698	WITHOUT_CLASSIFICATION	3.6010188302166916E-6	DEFECT
// there was no class file. add this class to the list	WITHOUT_CLASSIFICATION	0.9999667776224646	WITHOUT_CLASSIFICATION	3.322237753531998E-5	DEFECT
// break the classLocations into its components.	WITHOUT_CLASSIFICATION	0.9995751255780221	WITHOUT_CLASSIFICATION	4.248744219778318E-4	DEFECT
// search the various source path entries	WITHOUT_CLASSIFICATION	0.9999336696496525	WITHOUT_CLASSIFICATION	6.633035034758464E-5	DEFECT
// create a data input stream from the jar input stream	WITHOUT_CLASSIFICATION	0.9996841786390376	WITHOUT_CLASSIFICATION	3.158213609623563E-4	DEFECT
// add null entries for any additional slots required.	WITHOUT_CLASSIFICATION	0.9999338757225622	WITHOUT_CLASSIFICATION	6.612427743782469E-5	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999559756057093	WITHOUT_CLASSIFICATION	4.402439429079334E-5	DEFECT
//in verbose mode we always log stuff	WITHOUT_CLASSIFICATION	0.9999566002807984	WITHOUT_CLASSIFICATION	4.339971920172052E-5	DEFECT
//the simple action is to send the command line in as is	WITHOUT_CLASSIFICATION	0.9990174808751247	WITHOUT_CLASSIFICATION	9.825191248754282E-4	DEFECT
// Throws EjbcException	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// The zero index is never present in the constant pool itself so // we add a null entry for it	WITHOUT_CLASSIFICATION	0.9997776213862513	WITHOUT_CLASSIFICATION	2.2237861374865622E-4	DEFECT
//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards	WITHOUT_CLASSIFICATION	0.9998540042564101	WITHOUT_CLASSIFICATION	1.459957435897923E-4	DEFECT
//start at 1 because element 0 is the executable name	WITHOUT_CLASSIFICATION	0.9997904585951617	WITHOUT_CLASSIFICATION	2.0954140483835483E-4	DEFECT
//add to the list	WITHOUT_CLASSIFICATION	0.9998925270984914	WITHOUT_CLASSIFICATION	1.0747290150865224E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9993676495711776	WITHOUT_CLASSIFICATION	6.323504288224663E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9993676495711776	WITHOUT_CLASSIFICATION	6.323504288224663E-4	DEFECT
//set source and rebuild options	WITHOUT_CLASSIFICATION	0.9999443938403202	WITHOUT_CLASSIFICATION	5.5606159679726E-5	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9991235505405335	WITHOUT_CLASSIFICATION	8.764494594665053E-4	DEFECT
//mark for a rebuild if the dest file is newer	WITHOUT_CLASSIFICATION	0.999647101369622	WITHOUT_CLASSIFICATION	3.528986303780907E-4	DEFECT
// Mono 1.0's wsdl doesn't deal with absolute paths	WITHOUT_CLASSIFICATION	0.9996246333149459	WITHOUT_CLASSIFICATION	3.7536668505413324E-4	DEFECT
//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.	WITHOUT_CLASSIFICATION	0.9947515938420147	WITHOUT_CLASSIFICATION	0.005248406157985271	DEFECT
//mark for a rebuild if we are newer	WITHOUT_CLASSIFICATION	0.9998883949086189	WITHOUT_CLASSIFICATION	1.1160509138110392E-4	DEFECT
//conditionally compile	WITHOUT_CLASSIFICATION	0.9998018722889904	WITHOUT_CLASSIFICATION	1.981277110096289E-4	DEFECT
// Errors	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999238553301344	WITHOUT_CLASSIFICATION	7.614466986554802E-5	DEFECT
//bail on no references	WITHOUT_CLASSIFICATION	0.9999238553301344	WITHOUT_CLASSIFICATION	7.614466986554802E-5	DEFECT
//demand create pathlist	WITHOUT_CLASSIFICATION	0.9998440799155004	WITHOUT_CLASSIFICATION	1.5592008449965883E-4	DEFECT
//bail on no references listed	WITHOUT_CLASSIFICATION	0.999936756062555	WITHOUT_CLASSIFICATION	6.324393744504274E-5	DEFECT
//loop through all definitions	WITHOUT_CLASSIFICATION	0.9997971696337775	WITHOUT_CLASSIFICATION	2.0283036622256842E-4	DEFECT
//add those that are set, and a delimiter	WITHOUT_CLASSIFICATION	0.9998472169577469	WITHOUT_CLASSIFICATION	1.527830422531546E-4	DEFECT
//set up response file options	WITHOUT_CLASSIFICATION	0.9999665541715604	WITHOUT_CLASSIFICATION	3.344582843950182E-5	DEFECT
//if the refs are out of date, force a build.	WITHOUT_CLASSIFICATION	0.9999479756701818	WITHOUT_CLASSIFICATION	5.20243298181238E-5	DEFECT
//bail out early if there were no files	WITHOUT_CLASSIFICATION	0.9999605648265669	WITHOUT_CLASSIFICATION	3.9435173433030244E-5	DEFECT
//now scan the hashtable and add the files	WITHOUT_CLASSIFICATION	0.9999433874727375	WITHOUT_CLASSIFICATION	5.6612527262598314E-5	DEFECT
//add the source file	WITHOUT_CLASSIFICATION	0.9999493532456539	WITHOUT_CLASSIFICATION	5.0646754346104376E-5	DEFECT
//now run	WITHOUT_CLASSIFICATION	0.9990970978575955	WITHOUT_CLASSIFICATION	9.029021424046685E-4	DEFECT
//forcibly delete the output file in case of trouble	WITHOUT_CLASSIFICATION	0.9998277627044292	WITHOUT_CLASSIFICATION	1.7223729557084408E-4	DEFECT
//then rethrow the exception	WITHOUT_CLASSIFICATION	0.9997586593483478	WITHOUT_CLASSIFICATION	2.413406516522024E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// end execute	WITHOUT_CLASSIFICATION	0.9999559756057093	WITHOUT_CLASSIFICATION	4.402439429079334E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9993676495711776	WITHOUT_CLASSIFICATION	6.323504288224663E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9993676495711776	WITHOUT_CLASSIFICATION	6.323504288224663E-4	DEFECT
//rebuild unless the dest file is newer than the source file	WITHOUT_CLASSIFICATION	0.9991235505405335	WITHOUT_CLASSIFICATION	8.764494594665053E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//determine directory: resourceDir if set, //the dir of the destFile if not	WITHOUT_CLASSIFICATION	0.9991866412865734	WITHOUT_CLASSIFICATION	8.133587134266208E-4	DEFECT
//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope	WITHOUT_CLASSIFICATION	0.9997697820577482	WITHOUT_CLASSIFICATION	2.3021794225174376E-4	DEFECT
//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes	WITHOUT_CLASSIFICATION	0.999995478836934	WITHOUT_CLASSIFICATION	4.521163066097533E-6	DEFECT
//if there is no src dir here, set it	WITHOUT_CLASSIFICATION	0.9999556991210751	WITHOUT_CLASSIFICATION	4.430087892479238E-5	DEFECT
//get dependencies list.	WITHOUT_CLASSIFICATION	0.9998280516954428	WITHOUT_CLASSIFICATION	1.7194830455730367E-4	DEFECT
//get any included source directories	WITHOUT_CLASSIFICATION	0.9998708386403957	WITHOUT_CLASSIFICATION	1.2916135960435235E-4	DEFECT
//add the files to the command	WITHOUT_CLASSIFICATION	0.9997499621497727	WITHOUT_CLASSIFICATION	2.5003785022730804E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:MethodNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */	WITHOUT_CLASSIFICATION	0.9999602518063453	WITHOUT_CLASSIFICATION	3.9748193654699555E-5	DEFECT
// ends with '.' or null	WITHOUT_CLASSIFICATION	0.9999231367927996	WITHOUT_CLASSIFICATION	7.686320720029682E-5	DEFECT
/* Constants used for the "beantype" attribute */	WITHOUT_CLASSIFICATION	0.999931414673794	WITHOUT_CLASSIFICATION	6.858532620604869E-5	DEFECT
/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */	WITHOUT_CLASSIFICATION	0.9998242178670794	WITHOUT_CLASSIFICATION	1.75782132920579E-4	DEFECT
/* Classpath used when the iAS ejbc is called */	WITHOUT_CLASSIFICATION	0.9999721162381114	WITHOUT_CLASSIFICATION	2.7883761888544953E-5	DEFECT
/* Options passed to the iAS ejbc */	WITHOUT_CLASSIFICATION	0.999818528876701	WITHOUT_CLASSIFICATION	1.814711232990425E-4	DEFECT
/* iAS installation directory (used if ejbc isn't on user's PATH) */	WITHOUT_CLASSIFICATION	0.9999387816125911	WITHOUT_CLASSIFICATION	6.121838740891945E-5	DEFECT
/* Parser and handler used to process both EJB descriptor files */	WITHOUT_CLASSIFICATION	0.9999923816661205	WITHOUT_CLASSIFICATION	7.61833387950376E-6	DEFECT
/* Value of the display-name element read from the standard EJB descriptor */	WITHOUT_CLASSIFICATION	0.9998443850505058	WITHOUT_CLASSIFICATION	1.5561494949422174E-4	DEFECT
/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */	WITHOUT_CLASSIFICATION	0.999937436257288	WITHOUT_CLASSIFICATION	6.25637427119407E-5	DEFECT
/* If the -classpath flag isn't specified, use the system classpath */	WITHOUT_CLASSIFICATION	0.9996046473466778	WITHOUT_CLASSIFICATION	3.9535265332233077E-4	DEFECT
/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */	WITHOUT_CLASSIFICATION	0.9999784974047127	WITHOUT_CLASSIFICATION	2.1502595287395392E-5	DEFECT
/* Construct a SAXParser used to process the descriptors */	WITHOUT_CLASSIFICATION	0.9999832359369188	WITHOUT_CLASSIFICATION	1.6764063081060487E-5	DEFECT
// SAXException or ParserConfigurationException may be thrown	WITHOUT_CLASSIFICATION	0.9998366668123134	WITHOUT_CLASSIFICATION	1.6333318768660073E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999736486926712	WITHOUT_CLASSIFICATION	2.6351307328753984E-5	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999848648734224	WITHOUT_CLASSIFICATION	1.5135126577716716E-5	DEFECT
// Add one for the "\"	WITHOUT_CLASSIFICATION	0.9999693348620724	WITHOUT_CLASSIFICATION	3.066513792763085E-5	DEFECT
/* Concatenate all of the command line arguments into a single String */	WITHOUT_CLASSIFICATION	0.9991739508324861	WITHOUT_CLASSIFICATION	8.26049167514011E-4	DEFECT
/* If an iAS home directory is specified, prepend it to the commmand */	WITHOUT_CLASSIFICATION	0.9999033542500559	WITHOUT_CLASSIFICATION	9.66457499440797E-5	DEFECT
/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */	WITHOUT_CLASSIFICATION	0.9986871314191147	WITHOUT_CLASSIFICATION	0.0013128685808853657	DEFECT
/* OPTIONAL COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9997842630831995	WITHOUT_CLASSIFICATION	2.1573691680059834E-4	DEFECT
/* No beantype flag is needed for an entity bean */	WITHOUT_CLASSIFICATION	0.9992911829985726	WITHOUT_CLASSIFICATION	7.088170014274009E-4	DEFECT
/* REQUIRED COMMAND LINE PARAMETERS */	WITHOUT_CLASSIFICATION	0.9997842630831995	WITHOUT_CLASSIFICATION	2.1573691680059834E-4	DEFECT
/* Convert the List into an Array and return it */	WITHOUT_CLASSIFICATION	0.9999765785138778	WITHOUT_CLASSIFICATION	2.342148612222562E-5	DEFECT
/* Inner classes follow */	WITHOUT_CLASSIFICATION	0.9999692912385894	WITHOUT_CLASSIFICATION	3.070876141071864E-5	DEFECT
// End of EjbcException inner class	WITHOUT_CLASSIFICATION	0.9998409998345793	WITHOUT_CLASSIFICATION	1.590001654206987E-4	DEFECT
// Tracks current element // Tracks current text data // "session" or "entity"	WITHOUT_CLASSIFICATION	0.9999330223978778	WITHOUT_CLASSIFICATION	6.697760212214005E-5	DEFECT
/* Search the resource Map and (if not found) file Map */	WITHOUT_CLASSIFICATION	0.9993857605274088	WITHOUT_CLASSIFICATION	6.142394725913359E-4	DEFECT
/* A new element has started, so reset the text being captured */	WITHOUT_CLASSIFICATION	0.9999339052122705	WITHOUT_CLASSIFICATION	6.609478772947051E-5	DEFECT
/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */	WITHOUT_CLASSIFICATION	0.9999899879841232	WITHOUT_CLASSIFICATION	1.0012015876778272E-5	DEFECT
// End of EjbcHandler inner class	WITHOUT_CLASSIFICATION	0.9998409998345793	WITHOUT_CLASSIFICATION	1.590001654206987E-4	DEFECT
/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */	WITHOUT_CLASSIFICATION	0.9999997333722143	WITHOUT_CLASSIFICATION	2.6662778582828865E-7	DEFECT
/* Check that the specified instance variables are valid */	WITHOUT_CLASSIFICATION	0.9999932408520478	WITHOUT_CLASSIFICATION	6.759147952244808E-6	DEFECT
/* Check that the EJB "source" classes all exist */	WITHOUT_CLASSIFICATION	0.9999771324572514	WITHOUT_CLASSIFICATION	2.2867542748712665E-5	DEFECT
// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class	WITHOUT_CLASSIFICATION	0.9997823195310392	WITHOUT_CLASSIFICATION	2.1768046896078672E-4	DEFECT
/* Check the timestamp on the remote interface */	WITHOUT_CLASSIFICATION	0.9998830778647637	WITHOUT_CLASSIFICATION	1.1692213523629177E-4	DEFECT
/* Check the timestamp on the home interface */	WITHOUT_CLASSIFICATION	0.9998864137720926	WITHOUT_CLASSIFICATION	1.1358622790732481E-4	DEFECT
/* Check the timestamp of the primary key class */	WITHOUT_CLASSIFICATION	0.999903787819617	WITHOUT_CLASSIFICATION	9.621218038297455E-5	DEFECT
// List of all stubs & skels // Earliest mod time // Has each been found?	WITHOUT_CLASSIFICATION	0.9999771362270279	WITHOUT_CLASSIFICATION	2.286377297206056E-5	DEFECT
/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */	WITHOUT_CLASSIFICATION	0.9999720236373412	WITHOUT_CLASSIFICATION	2.7976362658733215E-5	DEFECT
/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */	WITHOUT_CLASSIFICATION	0.9999438041253493	WITHOUT_CLASSIFICATION	5.619587465079339E-5	DEFECT
/* Keep track of the oldest modification timestamp */	WITHOUT_CLASSIFICATION	0.9993576298241058	WITHOUT_CLASSIFICATION	6.423701758940943E-4	DEFECT
// End of EjbInfo inner class	WITHOUT_CLASSIFICATION	0.9999205554184571	WITHOUT_CLASSIFICATION	7.944458154295751E-5	DEFECT
// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package	WITHOUT_CLASSIFICATION	0.999884916589486	WITHOUT_CLASSIFICATION	1.150834105139825E-4	DEFECT
// End of Classname inner class	WITHOUT_CLASSIFICATION	0.9998409998345793	WITHOUT_CLASSIFICATION	1.590001654206987E-4	DEFECT
// Stream to read and redirect to standard output	WITHOUT_CLASSIFICATION	0.9998797662630113	WITHOUT_CLASSIFICATION	1.2023373698864433E-4	DEFECT
// End of RedirectOutput inner class	WITHOUT_CLASSIFICATION	0.9998409998345793	WITHOUT_CLASSIFICATION	1.590001654206987E-4	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
//clientname = ejbjarfile+client.jar	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// end of else	WITHOUT_CLASSIFICATION	0.9999502688090736	WITHOUT_CLASSIFICATION	4.973119092655631E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999536170460476	WITHOUT_CLASSIFICATION	4.6382953952410654E-5	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999536170460476	WITHOUT_CLASSIFICATION	4.6382953952410654E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9998825620842177	WITHOUT_CLASSIFICATION	1.1743791578228427E-4	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9998825620842177	WITHOUT_CLASSIFICATION	1.1743791578228427E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9997502960962744	WITHOUT_CLASSIFICATION	2.497039037256081E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9997502960962744	WITHOUT_CLASSIFICATION	2.497039037256081E-4	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999168745583435	WITHOUT_CLASSIFICATION	8.312544165653108E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999168745583435	WITHOUT_CLASSIFICATION	8.312544165653108E-5	DEFECT
/* GenIC options */	WITHOUT_CLASSIFICATION	0.9999639129487948	WITHOUT_CLASSIFICATION	3.608705120519866E-5	DEFECT
/* other options */	WITHOUT_CLASSIFICATION	0.9999692753785785	WITHOUT_CLASSIFICATION	3.0724621421512005E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998922037868758	WITHOUT_CLASSIFICATION	1.0779621312418694E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998922037868758	WITHOUT_CLASSIFICATION	1.0779621312418694E-4	DEFECT
/* GenIC options setter */	WITHOUT_CLASSIFICATION	0.9999183259071119	WITHOUT_CLASSIFICATION	8.16740928881009E-5	DEFECT
// -I- // ignore all errors // -Vd	WITHOUT_CLASSIFICATION	0.9998785639326708	WITHOUT_CLASSIFICATION	1.2143606732905942E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999168745583435	WITHOUT_CLASSIFICATION	8.312544165653108E-5	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998922037868758	WITHOUT_CLASSIFICATION	1.0779621312418694E-4	DEFECT
/* other options setter */	WITHOUT_CLASSIFICATION	0.9999304619662782	WITHOUT_CLASSIFICATION	6.953803372177281E-5	DEFECT
/* other methods */	WITHOUT_CLASSIFICATION	0.9999683946359494	WITHOUT_CLASSIFICATION	3.160536405058655E-5	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9982471830038611	WITHOUT_CLASSIFICATION	0.00175281699613892	DEFECT
// create the generic jar first	WITHOUT_CLASSIFICATION	0.9999320094553069	WITHOUT_CLASSIFICATION	6.799054469313148E-5	DEFECT
// GenIC call on generic jar	WITHOUT_CLASSIFICATION	0.9989368009249934	WITHOUT_CLASSIFICATION	0.0010631990750066239	DEFECT
// create the real jar	WITHOUT_CLASSIFICATION	0.999976625472106	WITHOUT_CLASSIFICATION	2.337452789402866E-5	DEFECT
// JOnAS-specific descriptor deployment	WITHOUT_CLASSIFICATION	0.9998466416469672	WITHOUT_CLASSIFICATION	1.5335835303279343E-4	DEFECT
// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999873312592079	WITHOUT_CLASSIFICATION	1.2668740792037713E-5	DEFECT
// extract path info	WITHOUT_CLASSIFICATION	0.9999553357845757	WITHOUT_CLASSIFICATION	4.466421542418175E-5	DEFECT
// descriptorName is just a file without path	WITHOUT_CLASSIFICATION	0.999962495141263	WITHOUT_CLASSIFICATION	3.750485873708688E-5	DEFECT
/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */	WITHOUT_CLASSIFICATION	0.9999760943223235	WITHOUT_CLASSIFICATION	2.390567767648369E-5	DEFECT
// no . found	WITHOUT_CLASSIFICATION	0.9999909852920404	WITHOUT_CLASSIFICATION	9.01470795963943E-6	DEFECT
// try to find JOnAS specific convention name	WITHOUT_CLASSIFICATION	0.9999457911049927	WITHOUT_CLASSIFICATION	5.4208895007401084E-5	DEFECT
// else get standard baseName	WITHOUT_CLASSIFICATION	0.9998957786485495	WITHOUT_CLASSIFICATION	1.0422135145046512E-4	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// java policy file	WITHOUT_CLASSIFICATION	0.9999203383261505	WITHOUT_CLASSIFICATION	7.966167384948104E-5	DEFECT
// outputdir	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// work around a bug of GenIC 2.5	WITHOUT_CLASSIFICATION	0.9343100622360718	WITHOUT_CLASSIFICATION	0.06568993776392819	DEFECT
// classpath	WITHOUT_CLASSIFICATION	0.9999391040858432	WITHOUT_CLASSIFICATION	6.08959141568247E-5	DEFECT
// try to create the classpath for the correct ORB	WITHOUT_CLASSIFICATION	0.9998862581910064	WITHOUT_CLASSIFICATION	1.137418089936773E-4	DEFECT
// keepgenerated	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// nocompil	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// novalidation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// javacopts	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// rmicopts	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// secpropag	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// verbose	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// input file to process by GenIC	WITHOUT_CLASSIFICATION	0.9999365191696928	WITHOUT_CLASSIFICATION	6.348083030717071E-5	DEFECT
// calling GenIC task	WITHOUT_CLASSIFICATION	0.9999451864834236	WITHOUT_CLASSIFICATION	5.481351657652339E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// the method deleteOnExit() do not work because the directory is not empty	WITHOUT_CLASSIFICATION	0.9982471830038611	WITHOUT_CLASSIFICATION	0.00175281699613892	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9985086557001096	WITHOUT_CLASSIFICATION	0.0014913442998903128	DEFECT
// jonasroot	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// GenIC task // GenIC class (3 are supported for various // versions	WITHOUT_CLASSIFICATION	0.9996705567110169	WITHOUT_CLASSIFICATION	3.2944328898311463E-4	DEFECT
// javac	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// add the generated files to the ejbFiles	WITHOUT_CLASSIFICATION	0.9999614751175866	WITHOUT_CLASSIFICATION	3.852488241340111E-5	DEFECT
// orb	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9997842630831995	WITHOUT_CLASSIFICATION	2.1573691680059834E-4	DEFECT
/* ----------------------------------------------------------------------------------- */	WITHOUT_CLASSIFICATION	0.9997842630831995	WITHOUT_CLASSIFICATION	2.1573691680059834E-4	DEFECT
/* utilitary methods */	WITHOUT_CLASSIFICATION	0.9999533242799379	WITHOUT_CLASSIFICATION	4.6675720062102435E-5	DEFECT
// Create the parser using whatever parser the system dictates	WITHOUT_CLASSIFICATION	0.9999176485087581	WITHOUT_CLASSIFICATION	8.235149124201114E-5	DEFECT
// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.	WITHOUT_CLASSIFICATION	0.9999461523301196	WITHOUT_CLASSIFICATION	5.3847669880488375E-5	DEFECT
// process the deployment descriptor in each tool	WITHOUT_CLASSIFICATION	0.9999678071205214	WITHOUT_CLASSIFICATION	3.219287947868345E-5	DEFECT
// end of execute()	WITHOUT_CLASSIFICATION	0.9999441864138073	WITHOUT_CLASSIFICATION	5.58135861926495E-5	DEFECT
// resolve relative to project basedir	WITHOUT_CLASSIFICATION	0.999641868609684	WITHOUT_CLASSIFICATION	3.58131390316082E-4	DEFECT
// Get the filename into a String object	WITHOUT_CLASSIFICATION	0.9999432701373386	WITHOUT_CLASSIFICATION	5.672986266130515E-5	DEFECT
// Get the value of the <ejb-name> tag.  Only the first occurrence.	WITHOUT_CLASSIFICATION	0.9998864338800062	WITHOUT_CLASSIFICATION	1.1356611999385172E-4	DEFECT
// Then the toplink deployment descriptor	WITHOUT_CLASSIFICATION	0.9999020135253621	WITHOUT_CLASSIFICATION	9.798647463791413E-5	DEFECT
// Setup a naming standard here?.	WITHOUT_CLASSIFICATION	0.9997602267684412	WITHOUT_CLASSIFICATION	2.3977323155885484E-4	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999518851848146	WITHOUT_CLASSIFICATION	4.811481518544205E-5	DEFECT
// If we still can't find it, complain	WITHOUT_CLASSIFICATION	0.9996819783617477	WITHOUT_CLASSIFICATION	3.1802163825242263E-4	DEFECT
// OK, properties file may be absolute	WITHOUT_CLASSIFICATION	0.9998294295435316	WITHOUT_CLASSIFICATION	1.7057045646848157E-4	DEFECT
// do we need to regenerate the file	WITHOUT_CLASSIFICATION	0.9999351567025292	WITHOUT_CLASSIFICATION	6.484329747087953E-5	DEFECT
//weblogic.ejb.utils.DDCreator.main(args);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// there was an exception - run with no exit to get proper error	WITHOUT_CLASSIFICATION	0.9939618983989202	WITHOUT_CLASSIFICATION	0.006038101601079726	DEFECT
//weblogic.ejb.utils.DDCreator.main(newArgs);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999820420859733	WITHOUT_CLASSIFICATION	1.7957914026727706E-5	DEFECT
// Create the zip entry and add it to the jar file	WITHOUT_CLASSIFICATION	0.9999746184304064	WITHOUT_CLASSIFICATION	2.538156959372236E-5	DEFECT
//add it to list of files in jar	WITHOUT_CLASSIFICATION	0.9996693247832066	WITHOUT_CLASSIFICATION	3.3067521679345596E-4	DEFECT
// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.	WITHOUT_CLASSIFICATION	0.9999983116619356	WITHOUT_CLASSIFICATION	1.6883380644116703E-6	DEFECT
// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.	WITHOUT_CLASSIFICATION	0.9999649158450407	WITHOUT_CLASSIFICATION	3.508415495940786E-5	DEFECT
// Weblogic will throw an error if the deployment descriptor does // not match the class files.	WITHOUT_CLASSIFICATION	0.9920854501608338	WITHOUT_CLASSIFICATION	0.00791454983916613	DEFECT
// Create the file input stream, and buffer everything over // to the jar output stream	WITHOUT_CLASSIFICATION	0.999937162301084	WITHOUT_CLASSIFICATION	6.283769891592846E-5	DEFECT
// Close up the file input stream for the class file	WITHOUT_CLASSIFICATION	0.9999283957459326	WITHOUT_CLASSIFICATION	7.160425406732103E-5	DEFECT
// register any DTDs supplied by the user	WITHOUT_CLASSIFICATION	0.9998668866417858	WITHOUT_CLASSIFICATION	1.3311335821421315E-4	DEFECT
// none to register for generic	WITHOUT_CLASSIFICATION	0.9991569652194185	WITHOUT_CLASSIFICATION	8.43034780581588E-4	DEFECT
// Retrive the files to be added to JAR from EJB descriptor	WITHOUT_CLASSIFICATION	0.9997891167069707	WITHOUT_CLASSIFICATION	2.1088329302930978E-4	DEFECT
// Add any support classes specified in the build file	WITHOUT_CLASSIFICATION	0.9999544754178255	WITHOUT_CLASSIFICATION	4.5524582174618524E-5	DEFECT
// Determine the JAR filename (without filename extension)	WITHOUT_CLASSIFICATION	0.9999293457550644	WITHOUT_CLASSIFICATION	7.06542449355623E-5	DEFECT
// First the regular deployment descriptor	WITHOUT_CLASSIFICATION	0.9999039845450943	WITHOUT_CLASSIFICATION	9.601545490566967E-5	DEFECT
// now the vendor specific files, if any	WITHOUT_CLASSIFICATION	0.9999740550307439	WITHOUT_CLASSIFICATION	2.594496925610774E-5	DEFECT
// add any dependent files	WITHOUT_CLASSIFICATION	0.9999771495250402	WITHOUT_CLASSIFICATION	2.28504749598038E-5	DEFECT
// Check to see if we need a build and start doing the work!	WITHOUT_CLASSIFICATION	0.9999680235693801	WITHOUT_CLASSIFICATION	3.197643061983426E-5	DEFECT
// Log that we are going to build...	WITHOUT_CLASSIFICATION	0.9997831818116273	WITHOUT_CLASSIFICATION	2.168181883727701E-4	DEFECT
// Use helper method to write the jarfile	WITHOUT_CLASSIFICATION	0.999971334126522	WITHOUT_CLASSIFICATION	2.866587347799418E-5	DEFECT
// Log that the file is up to date...	WITHOUT_CLASSIFICATION	0.9998648150065969	WITHOUT_CLASSIFICATION	1.351849934032374E-4	DEFECT
/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */	WITHOUT_CLASSIFICATION	0.9998893669039799	WITHOUT_CLASSIFICATION	1.1063309602008495E-4	DEFECT
// add in support classes if any	WITHOUT_CLASSIFICATION	0.9999338503293671	WITHOUT_CLASSIFICATION	6.614967063285695E-5	DEFECT
// Work out what the base name is	WITHOUT_CLASSIFICATION	0.9995713363090762	WITHOUT_CLASSIFICATION	4.286636909237452E-4	DEFECT
// nothing to add for generic tool.	WITHOUT_CLASSIFICATION	0.9997761330901984	WITHOUT_CLASSIFICATION	2.238669098016673E-4	DEFECT
// clean the addedfiles set	WITHOUT_CLASSIFICATION	0.9999796369029615	WITHOUT_CLASSIFICATION	2.0363097038493846E-5	DEFECT
// Create the streams necessary to write the jarfile	WITHOUT_CLASSIFICATION	0.9999088285957188	WITHOUT_CLASSIFICATION	9.11714042811594E-5	DEFECT
//get and clean up innerclass name	WITHOUT_CLASSIFICATION	0.9998321838556095	WITHOUT_CLASSIFICATION	1.6781614439054484E-4	DEFECT
// See if there are any inner classes for this class and add them in if there are	WITHOUT_CLASSIFICATION	0.9999620919233083	WITHOUT_CLASSIFICATION	3.790807669160336E-5	DEFECT
// Loop through all the class files found and add them to the jar	WITHOUT_CLASSIFICATION	0.9999824946522418	WITHOUT_CLASSIFICATION	1.7505347758234155E-5	DEFECT
//assertions take up space too	WITHOUT_CLASSIFICATION	0.9999354348681038	WITHOUT_CLASSIFICATION	6.456513189618743E-5	DEFECT
// link the file	WITHOUT_CLASSIFICATION	0.9999691882227099	WITHOUT_CLASSIFICATION	3.081177729024278E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9997502960962744	WITHOUT_CLASSIFICATION	2.497039037256081E-4	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9998130883614599	WITHOUT_CLASSIFICATION	1.8691163854014846E-4	DEFECT
// end of writeJar	WITHOUT_CLASSIFICATION	0.9999441864138073	WITHOUT_CLASSIFICATION	5.58135861926495E-5	DEFECT
// only generate a new ClassLoader if we have a classpath	WITHOUT_CLASSIFICATION	0.9998625910426939	WITHOUT_CLASSIFICATION	1.374089573060429E-4	DEFECT
// register all the known DTDs	WITHOUT_CLASSIFICATION	0.9999691388236799	WITHOUT_CLASSIFICATION	3.086117632003967E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// The the weblogic cmp deployment descriptor	WITHOUT_CLASSIFICATION	0.9998768553992222	WITHOUT_CLASSIFICATION	1.231446007777061E-4	DEFECT
// try to determine it from publicId	WITHOUT_CLASSIFICATION	0.9999089204382401	WITHOUT_CLASSIFICATION	9.107956175992167E-5	DEFECT
// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes	WITHOUT_CLASSIFICATION	0.9999751618338396	WITHOUT_CLASSIFICATION	2.4838166160296898E-5	DEFECT
// need to create a generic jar first.	WITHOUT_CLASSIFICATION	0.9998770203640228	WITHOUT_CLASSIFICATION	1.2297963597726575E-4	DEFECT
// Only go forward if the generic and the weblogic file both exist	WITHOUT_CLASSIFICATION	0.9999761450523036	WITHOUT_CLASSIFICATION	2.3854947696428554E-5	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999136489594016	WITHOUT_CLASSIFICATION	8.635104059835622E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9997071943441641	WITHOUT_CLASSIFICATION	2.928056558359322E-4	DEFECT
//get the list of weblogic jar entries	WITHOUT_CLASSIFICATION	0.9998525927671971	WITHOUT_CLASSIFICATION	1.4740723280303592E-4	DEFECT
//Cycle Through generic and make sure its in weblogic	WITHOUT_CLASSIFICATION	0.9990632087446049	WITHOUT_CLASSIFICATION	9.367912553952338E-4	DEFECT
// File name/path match	WITHOUT_CLASSIFICATION	0.9999382353778241	WITHOUT_CLASSIFICATION	6.176462217581395E-5	DEFECT
// Check files see if same	WITHOUT_CLASSIFICATION	0.9999947600400843	WITHOUT_CLASSIFICATION	5.239959915754396E-6	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999896451538444	WITHOUT_CLASSIFICATION	1.0354846155734728E-5	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9996739743376771	WITHOUT_CLASSIFICATION	3.2602566232283636E-4	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9997101862130391	WITHOUT_CLASSIFICATION	2.8981378696081085E-4	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.999964061320423	WITHOUT_CLASSIFICATION	3.593867957691652E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.999800465458753	WITHOUT_CLASSIFICATION	1.9953454124703232E-4	DEFECT
// a file doesnt exist rebuild	WITHOUT_CLASSIFICATION	0.9997619144949719	WITHOUT_CLASSIFICATION	2.380855050280523E-4	DEFECT
//Copy files from old weblogic jar	WITHOUT_CLASSIFICATION	0.9996519834667652	WITHOUT_CLASSIFICATION	3.4801653323484184E-4	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9998585363048184	WITHOUT_CLASSIFICATION	1.4146369518168445E-4	DEFECT
//use fle from original weblogic jar	WITHOUT_CLASSIFICATION	0.9992983896186438	WITHOUT_CLASSIFICATION	7.016103813562429E-4	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999833652096163	WITHOUT_CLASSIFICATION	1.6634790383655172E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999001220180438	WITHOUT_CLASSIFICATION	9.98779819562671E-5	DEFECT
// if the implementation classes don;t exist regenerate	WITHOUT_CLASSIFICATION	0.9999510345157832	WITHOUT_CLASSIFICATION	4.896548421674612E-5	DEFECT
// any problems - just regenerate	WITHOUT_CLASSIFICATION	0.9998872806322954	WITHOUT_CLASSIFICATION	1.1271936770462072E-4	DEFECT
// create a Java task to do the rebuild	WITHOUT_CLASSIFICATION	0.9999721757252759	WITHOUT_CLASSIFICATION	2.7824274724080348E-5	DEFECT
//weblogic.ejbc.main(args);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/* Build and populate an instance of the ejbc utility */	WITHOUT_CLASSIFICATION	0.9999736486926712	WITHOUT_CLASSIFICATION	2.6351307328753984E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9997502960962744	WITHOUT_CLASSIFICATION	2.497039037256081E-4	DEFECT
//classpath	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/* Attributes set by the Ant build file */	WITHOUT_CLASSIFICATION	0.9999820420859733	WITHOUT_CLASSIFICATION	1.7957914026727706E-5	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999543829273542	WITHOUT_CLASSIFICATION	4.561707264578011E-5	DEFECT
//trim the META_INF\ off of the file name	WITHOUT_CLASSIFICATION	0.9998130883614599	WITHOUT_CLASSIFICATION	1.8691163854014846E-4	DEFECT
// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.	WITHOUT_CLASSIFICATION	0.9999883034814006	WITHOUT_CLASSIFICATION	1.1696518599562722E-5	DEFECT
// run with no exit for better reporting	WITHOUT_CLASSIFICATION	0.999914073626254	WITHOUT_CLASSIFICATION	8.592637374601423E-5	DEFECT
//weblogic.ejbc.main(newArgs);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */	WITHOUT_CLASSIFICATION	0.9988033042092196	WITHOUT_CLASSIFICATION	0.0011966957907803661	DEFECT
/* Add CMP descriptors to the list of EJB files */	WITHOUT_CLASSIFICATION	0.999959133450996	WITHOUT_CLASSIFICATION	4.0866549003985256E-5	DEFECT
/* Only calculate the descriptor name once */	WITHOUT_CLASSIFICATION	0.9999180352878079	WITHOUT_CLASSIFICATION	8.196471219217907E-5	DEFECT
// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator	WITHOUT_CLASSIFICATION	0.9999248256739828	WITHOUT_CLASSIFICATION	7.517432601726936E-5	DEFECT
/* Find the end of the standard descriptor's relative path */	WITHOUT_CLASSIFICATION	0.9999113373650563	WITHOUT_CLASSIFICATION	8.866263494366244E-5	DEFECT
/* Check to see if the standard name is used (there's no basename) */	WITHOUT_CLASSIFICATION	0.9999945698605255	WITHOUT_CLASSIFICATION	5.430139474522045E-6	DEFECT
/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */	WITHOUT_CLASSIFICATION	0.9999760943223235	WITHOUT_CLASSIFICATION	2.390567767648369E-5	DEFECT
//choose the right vendor DD	WITHOUT_CLASSIFICATION	0.9997814547795285	WITHOUT_CLASSIFICATION	2.185452204715439E-4	DEFECT
// ejb jar file to verify	WITHOUT_CLASSIFICATION	0.9999428199234387	WITHOUT_CLASSIFICATION	5.71800765612287E-5	DEFECT
//debug ?	WITHOUT_CLASSIFICATION	0.999371987149177	WITHOUT_CLASSIFICATION	6.280128508231465E-4	DEFECT
//set the classpath	WITHOUT_CLASSIFICATION	0.9998977354301072	WITHOUT_CLASSIFICATION	1.0226456989277118E-4	DEFECT
//list file	WITHOUT_CLASSIFICATION	0.9998656521893379	WITHOUT_CLASSIFICATION	1.3434781066221362E-4	DEFECT
//no TIE classes	WITHOUT_CLASSIFICATION	0.9999107861095051	WITHOUT_CLASSIFICATION	8.921389049494092E-5	DEFECT
//root dir	WITHOUT_CLASSIFICATION	0.9993967337805377	WITHOUT_CLASSIFICATION	6.03266219462285E-4	DEFECT
//compiling order	WITHOUT_CLASSIFICATION	0.9998756051440678	WITHOUT_CLASSIFICATION	1.2439485593221064E-4	DEFECT
//add the home class	WITHOUT_CLASSIFICATION	0.9999002608062753	WITHOUT_CLASSIFICATION	9.973919372474113E-5	DEFECT
//build the home classes list.	WITHOUT_CLASSIFICATION	0.9999506368889813	WITHOUT_CLASSIFICATION	4.936311101867619E-5	DEFECT
//remove .class extension	WITHOUT_CLASSIFICATION	0.9997386319258601	WITHOUT_CLASSIFICATION	2.613680741398784E-4	DEFECT
//add the gen files to the collection	WITHOUT_CLASSIFICATION	0.9997215467416852	WITHOUT_CLASSIFICATION	2.7845325831472206E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999890152646377	WITHOUT_CLASSIFICATION	1.0984735362286052E-4	DEFECT
// Get the Extensions document	WITHOUT_CLASSIFICATION	0.999963425152632	WITHOUT_CLASSIFICATION	3.657484736807455E-5	DEFECT
// We attempt to put in the MAP and Schema files of CMP beans	WITHOUT_CLASSIFICATION	0.9998523094235473	WITHOUT_CLASSIFICATION	1.476905764526552E-4	DEFECT
// Add the Map file	WITHOUT_CLASSIFICATION	0.9999867508059143	WITHOUT_CLASSIFICATION	1.3249194085774062E-5	DEFECT
// Theres nothing else to see here...keep moving sonny	WITHOUT_CLASSIFICATION	0.9999262612634582	WITHOUT_CLASSIFICATION	7.3738736541831E-5	DEFECT
// Set the options	WITHOUT_CLASSIFICATION	0.9999796205206876	WITHOUT_CLASSIFICATION	2.0379479312419286E-5	DEFECT
// Set the JvmArgs	WITHOUT_CLASSIFICATION	0.9999515833685435	WITHOUT_CLASSIFICATION	4.841663145647586E-5	DEFECT
// Set the Environment variable	WITHOUT_CLASSIFICATION	0.999882513372902	WITHOUT_CLASSIFICATION	1.1748662709802896E-4	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999885149311045	WITHOUT_CLASSIFICATION	1.1485068895532101E-5	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9997502960962744	WITHOUT_CLASSIFICATION	2.497039037256081E-4	DEFECT
//open jar files	WITHOUT_CLASSIFICATION	0.9999136489594016	WITHOUT_CLASSIFICATION	8.635104059835622E-5	DEFECT
//get the list of generic jar entries	WITHOUT_CLASSIFICATION	0.9997071943441641	WITHOUT_CLASSIFICATION	2.928056558359322E-4	DEFECT
//File are different see if its an object or an interface	WITHOUT_CLASSIFICATION	0.9999896451538444	WITHOUT_CLASSIFICATION	1.0354846155734728E-5	DEFECT
//Interface changed   rebuild jar.	WITHOUT_CLASSIFICATION	0.9996739743376771	WITHOUT_CLASSIFICATION	3.2602566232283636E-4	DEFECT
//Object class Changed   update it.	WITHOUT_CLASSIFICATION	0.9997101862130391	WITHOUT_CLASSIFICATION	2.8981378696081085E-4	DEFECT
// is it the manifest. If so ignore it	WITHOUT_CLASSIFICATION	0.999964061320423	WITHOUT_CLASSIFICATION	3.593867957691652E-5	DEFECT
//File other then class changed   rebuild	WITHOUT_CLASSIFICATION	0.999800465458753	WITHOUT_CLASSIFICATION	1.9953454124703232E-4	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999093978208815	WITHOUT_CLASSIFICATION	9.060217911839373E-5	DEFECT
// Use the entry from the generic jar	WITHOUT_CLASSIFICATION	0.9998585363048184	WITHOUT_CLASSIFICATION	1.4146369518168445E-4	DEFECT
// register all the DTDs, both the ones that are known and // any supplied by the user	WITHOUT_CLASSIFICATION	0.9999754883462711	WITHOUT_CLASSIFICATION	2.451165372883371E-5	DEFECT
// Set the working directory	WITHOUT_CLASSIFICATION	0.9999467418013118	WITHOUT_CLASSIFICATION	5.3258198688111486E-5	DEFECT
// Set the Java class name	WITHOUT_CLASSIFICATION	0.9999826828606563	WITHOUT_CLASSIFICATION	1.7317139343797304E-5	DEFECT
// create the -generic.jar, if required	WITHOUT_CLASSIFICATION	0.9999640298285931	WITHOUT_CLASSIFICATION	3.5970171406901655E-5	DEFECT
// create the "undeployed" output .jar, if required	WITHOUT_CLASSIFICATION	0.9999734552310099	WITHOUT_CLASSIFICATION	2.6544768990123744E-5	DEFECT
// Only go forward if the generic and the websphere file both exist	WITHOUT_CLASSIFICATION	0.9999761450523036	WITHOUT_CLASSIFICATION	2.3854947696428554E-5	DEFECT
//get the list of websphere jar entries	WITHOUT_CLASSIFICATION	0.9998525927671971	WITHOUT_CLASSIFICATION	1.4740723280303592E-4	DEFECT
//Cycle Through generic and make sure its in websphere	WITHOUT_CLASSIFICATION	0.9990632087446049	WITHOUT_CLASSIFICATION	9.367912553952338E-4	DEFECT
// File name/path match // Check files see if same	WITHOUT_CLASSIFICATION	0.9999920879067256	WITHOUT_CLASSIFICATION	7.912093274456524E-6	DEFECT
// a file doesn't exist rebuild	WITHOUT_CLASSIFICATION	0.9997197214451652	WITHOUT_CLASSIFICATION	2.802785548348371E-4	DEFECT
//Copy files from old websphere jar	WITHOUT_CLASSIFICATION	0.9996519834667652	WITHOUT_CLASSIFICATION	3.4801653323484184E-4	DEFECT
//use fle from original websphere jar	WITHOUT_CLASSIFICATION	0.9992983896186438	WITHOUT_CLASSIFICATION	7.016103813562429E-4	DEFECT
// Specification Name must match	WITHOUT_CLASSIFICATION	0.9998951612352597	WITHOUT_CLASSIFICATION	1.0483876474030307E-4	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9994829523667016	WITHOUT_CLASSIFICATION	5.170476332984752E-4	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999091507408702	WITHOUT_CLASSIFICATION	9.084925912983849E-5	DEFECT
// Implementation Vendor ID must match	WITHOUT_CLASSIFICATION	0.9999091507408702	WITHOUT_CLASSIFICATION	9.084925912983849E-5	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999443622177934	WITHOUT_CLASSIFICATION	5.563778220659105E-4	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9995002748471807	WITHOUT_CLASSIFICATION	4.997251528191896E-4	DEFECT
// This available optional package satisfies the requirements	WITHOUT_CLASSIFICATION	0.9995002748471807	WITHOUT_CLASSIFICATION	4.997251528191896E-4	DEFECT
//Reset list of sections	WITHOUT_CLASSIFICATION	0.9998572520074764	WITHOUT_CLASSIFICATION	1.4274799252362983E-4	DEFECT
// Extension Name must match	WITHOUT_CLASSIFICATION	0.9999476186327649	WITHOUT_CLASSIFICATION	5.2381367235166707E-5	DEFECT
//Add all the dependency data to manifest for dependencies	WITHOUT_CLASSIFICATION	0.9980236369135512	WITHOUT_CLASSIFICATION	0.001976363086448804	DEFECT
// Check if list of files to check has been specified	WITHOUT_CLASSIFICATION	0.9999885149311045	WITHOUT_CLASSIFICATION	1.1485068895532101E-5	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9997417450041473	WITHOUT_CLASSIFICATION	2.5825499585273634E-4	DEFECT
//Add all the dependency data to manifest for "optional" //dependencies	WITHOUT_CLASSIFICATION	0.9978902336294484	WITHOUT_CLASSIFICATION	0.002109766370551582	DEFECT
//add in something like //"Extension-List: javahelp java3d"	WITHOUT_CLASSIFICATION	0.9997765951443605	WITHOUT_CLASSIFICATION	2.2340485563951423E-4	DEFECT
//all methods static	WITHOUT_CLASSIFICATION	0.9999452586238898	WITHOUT_CLASSIFICATION	5.474137611016583E-5	DEFECT
/*     * Gets the destination file     */	WITHOUT_CLASSIFICATION	0.9999692652149405	WITHOUT_CLASSIFICATION	3.0734785059508796E-5	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999577421380265	WITHOUT_CLASSIFICATION	4.225786197364571E-5	DEFECT
//Load default locale bundle files //using default file encoding scheme.	WITHOUT_CLASSIFICATION	0.9999498619742686	WITHOUT_CLASSIFICATION	5.0138025731369286E-5	DEFECT
//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception	WITHOUT_CLASSIFICATION	0.9483675275862896	WITHOUT_CLASSIFICATION	0.051632472413710405	DEFECT
//So long as the line isn't empty and isn't a comment...	WITHOUT_CLASSIFICATION	0.9999438853628706	WITHOUT_CLASSIFICATION	5.611463712927257E-5	DEFECT
//Legal Key-Value separators are :, = and white space.	WITHOUT_CLASSIFICATION	0.9998780062879252	WITHOUT_CLASSIFICATION	1.2199371207477518E-4	DEFECT
//Only if we do have a key is there going to be a value	WITHOUT_CLASSIFICATION	0.9937857983921856	WITHOUT_CLASSIFICATION	0.006214201607814388	DEFECT
//Handle line continuations, if any	WITHOUT_CLASSIFICATION	0.9996534297858161	WITHOUT_CLASSIFICATION	3.4657021418395457E-4	DEFECT
//Has key already been loaded into resourceMap?	WITHOUT_CLASSIFICATION	0.9998627342708268	WITHOUT_CLASSIFICATION	1.3726572917314932E-4	DEFECT
//Make sure parent dirs exist, else, create them.	WITHOUT_CLASSIFICATION	0.9997587450248017	WITHOUT_CLASSIFICATION	2.4125497519844594E-4	DEFECT
//Check to see if dest file has to be recreated	WITHOUT_CLASSIFICATION	0.9995016261939146	WITHOUT_CLASSIFICATION	4.98373806085383E-4	DEFECT
// is there a startToken // and there is still stuff following the startToken	WITHOUT_CLASSIFICATION	0.9998858922065181	WITHOUT_CLASSIFICATION	1.1410779348188631E-4	DEFECT
// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical	WITHOUT_CLASSIFICATION	0.9999440775277727	WITHOUT_CLASSIFICATION	5.592247222735827E-5	DEFECT
// grab the token	WITHOUT_CLASSIFICATION	0.9999719226684441	WITHOUT_CLASSIFICATION	2.8077331555784678E-5	DEFECT
// If there is a white space or = or :, then // it isn't to be treated as a valid key.	WITHOUT_CLASSIFICATION	0.999979359948984	WITHOUT_CLASSIFICATION	2.0640051015975226E-5	DEFECT
// find the replace string	WITHOUT_CLASSIFICATION	0.9999360051519384	WITHOUT_CLASSIFICATION	6.399484806165413E-5	DEFECT
// generate the new line	WITHOUT_CLASSIFICATION	0.9999695252954744	WITHOUT_CLASSIFICATION	3.0474704525614666E-5	DEFECT
// set start position for next search	WITHOUT_CLASSIFICATION	0.9994740622536568	WITHOUT_CLASSIFICATION	5.259377463432836E-4	DEFECT
// find next starttoken	WITHOUT_CLASSIFICATION	0.9994397219801731	WITHOUT_CLASSIFICATION	5.602780198268903E-4	DEFECT
// deal with specified srcDir	WITHOUT_CLASSIFICATION	0.9998896832736354	WITHOUT_CLASSIFICATION	1.1031672636463953E-4	DEFECT
// deal with the filesets	WITHOUT_CLASSIFICATION	0.9999194199306997	WITHOUT_CLASSIFICATION	8.058006930031756E-5	DEFECT
// remove any files that shouldn't be overwritten.	WITHOUT_CLASSIFICATION	0.9999667573788513	WITHOUT_CLASSIFICATION	3.324262114855764E-5	DEFECT
// check that the password has been set	WITHOUT_CLASSIFICATION	0.9999870219697707	WITHOUT_CLASSIFICATION	1.2978030229306207E-5	DEFECT
// check for missing application on deploy & update	WITHOUT_CLASSIFICATION	0.9999258803040151	WITHOUT_CLASSIFICATION	7.411969598495063E-5	DEFECT
// check for missing source on deploy & update	WITHOUT_CLASSIFICATION	0.9999444839907046	WITHOUT_CLASSIFICATION	5.551600929540364E-5	DEFECT
// check for missing application on delete & undeploy	WITHOUT_CLASSIFICATION	0.9998721343023563	WITHOUT_CLASSIFICATION	1.2786569764369345E-4	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999335172003404	WITHOUT_CLASSIFICATION	6.648279965967598E-5	DEFECT
// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line	WITHOUT_CLASSIFICATION	0.9997704416368252	WITHOUT_CLASSIFICATION	2.2955836317478767E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994115948428542	WITHOUT_CLASSIFICATION	5.884051571458396E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999242841864977	WITHOUT_CLASSIFICATION	7.571581350231778E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999299812218702	WITHOUT_CLASSIFICATION	7.001877812984157E-5	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999335172003404	WITHOUT_CLASSIFICATION	6.648279965967598E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999384375280757	WITHOUT_CLASSIFICATION	6.156247192438186E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999957785916726	WITHOUT_CLASSIFICATION	4.2214083273970706E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999957785916726	WITHOUT_CLASSIFICATION	4.2214083273970706E-5	DEFECT
// required attributes	WITHOUT_CLASSIFICATION	0.999957785916726	WITHOUT_CLASSIFICATION	4.2214083273970706E-5	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9995775409439268	WITHOUT_CLASSIFICATION	4.2245905607312577E-4	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9995775409439268	WITHOUT_CLASSIFICATION	4.2245905607312577E-4	DEFECT
// load command line with optional attributes	WITHOUT_CLASSIFICATION	0.9995775409439268	WITHOUT_CLASSIFICATION	4.2245905607312577E-4	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999933291207825	WITHOUT_CLASSIFICATION	6.670879217426438E-6	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999933291207825	WITHOUT_CLASSIFICATION	6.670879217426438E-6	DEFECT
// used by jpackage for JavaCC 3.x	WITHOUT_CLASSIFICATION	0.9999569780037536	WITHOUT_CLASSIFICATION	4.3021996246425E-5	DEFECT
// check the target is a file	WITHOUT_CLASSIFICATION	0.9999793404352508	WITHOUT_CLASSIFICATION	2.065956474909167E-5	DEFECT
// determine if the generated java file is up-to-date	WITHOUT_CLASSIFICATION	0.9999054198365398	WITHOUT_CLASSIFICATION	9.458016346028397E-5	DEFECT
// Extract file's base-name	WITHOUT_CLASSIFICATION	0.9999182496863805	WITHOUT_CLASSIFICATION	8.175031361949297E-5	DEFECT
// Replace the file's extension with '.java'	WITHOUT_CLASSIFICATION	0.9998295066488808	WITHOUT_CLASSIFICATION	1.704933511192514E-4	DEFECT
// Change the directory	WITHOUT_CLASSIFICATION	0.9999856385616155	WITHOUT_CLASSIFICATION	1.4361438384396574E-5	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999005993575724	WITHOUT_CLASSIFICATION	9.940064242759912E-5	DEFECT
// first search for the "old" javah class in 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9998663600811246	WITHOUT_CLASSIFICATION	1.336399188753888E-4	DEFECT
// assume older than 1.4.2 tools.jar	WITHOUT_CLASSIFICATION	0.9986721797927836	WITHOUT_CLASSIFICATION	0.0013278202072163976	DEFECT
//private CommandlineJava commandline = new CommandlineJava();	WITHOUT_CLASSIFICATION	0.9998833688861225	WITHOUT_CLASSIFICATION	1.1663111387742145E-4	DEFECT
// required attributes // Deprecated! // Use this going forward	WITHOUT_CLASSIFICATION	0.9997251362737753	WITHOUT_CLASSIFICATION	2.748637262246315E-4	DEFECT
// optional attributes	WITHOUT_CLASSIFICATION	0.9999607927263076	WITHOUT_CLASSIFICATION	3.920727369250154E-5	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999907783533658	WITHOUT_CLASSIFICATION	9.221646634269122E-6	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999845511689953	WITHOUT_CLASSIFICATION	1.544883100461843E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
/* int accessFlags = */	WITHOUT_CLASSIFICATION	0.9999258610536543	WITHOUT_CLASSIFICATION	7.413894634567802E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9977069036473427	WITHOUT_CLASSIFICATION	0.0022930963526572434	DEFECT
// This bit turns <exclude> child tags into patters to ignore	WITHOUT_CLASSIFICATION	0.999516593960777	WITHOUT_CLASSIFICATION	4.8340603922303083E-4	DEFECT
// JL: comment extracted from JUnitTask (and slightly modified)	WITHOUT_CLASSIFICATION	0.9998244451617525	WITHOUT_CLASSIFICATION	1.7555483824736276E-4	DEFECT
// if not set, auto-create the ClassPath from the project	WITHOUT_CLASSIFICATION	0.9986449650327681	WITHOUT_CLASSIFICATION	0.0013550349672319367	DEFECT
// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two	WITHOUT_CLASSIFICATION	0.9998096046211326	WITHOUT_CLASSIFICATION	1.903953788673849E-4	DEFECT
// This is the new way - use classespath - code is the // same for now	WITHOUT_CLASSIFICATION	0.9983533885153767	WITHOUT_CLASSIFICATION	0.001646611484623339	DEFECT
// read in all constant pool entries.	WITHOUT_CLASSIFICATION	0.9998353780696406	WITHOUT_CLASSIFICATION	1.6462193035939724E-4	DEFECT
// verify this is a valid class file.	WITHOUT_CLASSIFICATION	0.9995890813881371	WITHOUT_CLASSIFICATION	4.1091861186282947E-4	DEFECT
/* int version = */	WITHOUT_CLASSIFICATION	0.999794144640028	WITHOUT_CLASSIFICATION	2.0585535997203765E-4	DEFECT
// read the constant pool.	WITHOUT_CLASSIFICATION	0.999963419914671	WITHOUT_CLASSIFICATION	3.658008532900851E-5	DEFECT
// read access flags and class index.	WITHOUT_CLASSIFICATION	0.9997280448344128	WITHOUT_CLASSIFICATION	2.719551655871384E-4	DEFECT
//Be sure everything has been set.	WITHOUT_CLASSIFICATION	0.9998730022659216	WITHOUT_CLASSIFICATION	1.2699773407851575E-4	DEFECT
//Do the merge	WITHOUT_CLASSIFICATION	0.9999021342887513	WITHOUT_CLASSIFICATION	9.786571124864533E-5	DEFECT
//Add this file to the addfiles Vector and add it //later at the top level of the output file.	WITHOUT_CLASSIFICATION	0.9998874769013594	WITHOUT_CLASSIFICATION	1.1252309864068185E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999490466244619	WITHOUT_CLASSIFICATION	5.095337553813215E-5	DEFECT
// jlink output input1 ... inputN	WITHOUT_CLASSIFICATION	0.9998980657100828	WITHOUT_CLASSIFICATION	1.019342899171772E-4	DEFECT
// To maintain compatibility with the command-line version, // we will only add files to be merged.	WITHOUT_CLASSIFICATION	0.9997641094874277	WITHOUT_CLASSIFICATION	2.3589051257220817E-4	DEFECT
/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */	WITHOUT_CLASSIFICATION	0.9997842928149399	WITHOUT_CLASSIFICATION	2.1570718506022874E-4	DEFECT
//Check to see that the file with name "name" exists.	WITHOUT_CLASSIFICATION	0.9997316559498814	WITHOUT_CLASSIFICATION	2.683440501185312E-4	DEFECT
//META-INF not found in the name of the entry. Go ahead and process it.	WITHOUT_CLASSIFICATION	0.9995390397855575	WITHOUT_CLASSIFICATION	4.6096021444255454E-4	DEFECT
//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??	WITHOUT_CLASSIFICATION	0.9890209615006116	WITHOUT_CLASSIFICATION	0.010979038499388439	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999490466244619	WITHOUT_CLASSIFICATION	5.095337553813215E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9996765481159333	WITHOUT_CLASSIFICATION	3.2345188406666345E-4	DEFECT
//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.	WITHOUT_CLASSIFICATION	0.9996015393322442	WITHOUT_CLASSIFICATION	3.9846066775572875E-4	DEFECT
//It was the duplicate entry.	WITHOUT_CLASSIFICATION	0.9998734593673617	WITHOUT_CLASSIFICATION	1.2654063263827693E-4	DEFECT
/*     * Adds contents of a directory to the output.     */	WITHOUT_CLASSIFICATION	0.9999811324656002	WITHOUT_CLASSIFICATION	1.8867534399837835E-5	DEFECT
/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */	WITHOUT_CLASSIFICATION	0.9995872979245147	WITHOUT_CLASSIFICATION	4.127020754852438E-4	DEFECT
// see if the file is in fact a .class file, and determine its actual name.	WITHOUT_CLASSIFICATION	0.9999943930580473	WITHOUT_CLASSIFICATION	5.606941952724037E-6	DEFECT
/*     * Adds a file to the output stream.     */	WITHOUT_CLASSIFICATION	0.9999382095485678	WITHOUT_CLASSIFICATION	6.179045143220865E-5	DEFECT
//Make sure file exists	WITHOUT_CLASSIFICATION	0.9999479730925783	WITHOUT_CLASSIFICATION	5.2026907421602336E-5	DEFECT
/*     * A convenience method that several other methods might call.     */	WITHOUT_CLASSIFICATION	0.9999964928080041	WITHOUT_CLASSIFICATION	3.507191995891379E-6	DEFECT
//This entry already exists. So, go with the first one.	WITHOUT_CLASSIFICATION	0.9999391176088217	WITHOUT_CLASSIFICATION	6.088239117845437E-5	DEFECT
/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */	WITHOUT_CLASSIFICATION	0.9981471491096023	WITHOUT_CLASSIFICATION	0.0018528508903977458	DEFECT
//Note, don't need to specify size or crc for compressed files.	WITHOUT_CLASSIFICATION	0.9974453916033966	WITHOUT_CLASSIFICATION	0.002554608396603474	DEFECT
//use the systemclasspath as well, to include the ant jar	WITHOUT_CLASSIFICATION	0.9999563955937243	WITHOUT_CLASSIFICATION	4.360440627559499E-5	DEFECT
/*     * Necessary in the case where you add a entry that     * is not compressed.     */	WITHOUT_CLASSIFICATION	0.9996765481159333	WITHOUT_CLASSIFICATION	3.2345188406666345E-4	DEFECT
//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix	WITHOUT_CLASSIFICATION	0.9995914423761103	WITHOUT_CLASSIFICATION	4.08557623889694E-4	DEFECT
//private String compilerPath; //fully qualified name for the compiler executable	WITHOUT_CLASSIFICATION	0.9996843366500211	WITHOUT_CLASSIFICATION	3.156633499789192E-4	DEFECT
// get all the files in the sourceDirectory	WITHOUT_CLASSIFICATION	0.9998723517710366	WITHOUT_CLASSIFICATION	1.2764822896347265E-4	DEFECT
//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)	WITHOUT_CLASSIFICATION	0.9988908963346566	WITHOUT_CLASSIFICATION	0.0011091036653434541	DEFECT
// apply transformation	WITHOUT_CLASSIFICATION	0.9999411740203584	WITHOUT_CLASSIFICATION	5.882597964165864E-5	DEFECT
//end class	WITHOUT_CLASSIFICATION	0.9998433823447134	WITHOUT_CLASSIFICATION	1.5661765528668763E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// now we need to populate the compiler adapter	WITHOUT_CLASSIFICATION	0.9998895755360439	WITHOUT_CLASSIFICATION	1.1042446395621643E-4	DEFECT
// finally, lets execute the compiler!!	WITHOUT_CLASSIFICATION	0.9999134604333736	WITHOUT_CLASSIFICATION	8.653956662642263E-5	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999506806633035	WITHOUT_CLASSIFICATION	4.93193366964792E-5	DEFECT
// compile the source files	WITHOUT_CLASSIFICATION	0.999985536620966	WITHOUT_CLASSIFICATION	1.4463379034063647E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//demand create vector of filesets	WITHOUT_CLASSIFICATION	0.9995205631114341	WITHOUT_CLASSIFICATION	4.79436888565932E-4	DEFECT
// make sure that we've got a destdir	WITHOUT_CLASSIFICATION	0.9997982946531188	WITHOUT_CLASSIFICATION	2.0170534688128733E-4	DEFECT
//bind to a compiler	WITHOUT_CLASSIFICATION	0.9996253583609924	WITHOUT_CLASSIFICATION	3.7464163900751356E-4	DEFECT
//if we are a webapp, hand off to the compiler, which had better handle it	WITHOUT_CLASSIFICATION	0.9999907770925598	WITHOUT_CLASSIFICATION	9.222907440206038E-6	DEFECT
// make sure that we've got a srcdir	WITHOUT_CLASSIFICATION	0.9997982946531188	WITHOUT_CLASSIFICATION	2.0170534688128733E-4	DEFECT
// if the compiler does its own dependency stuff, we just call it right now	WITHOUT_CLASSIFICATION	0.9997117745893934	WITHOUT_CLASSIFICATION	2.882254106066024E-4	DEFECT
//the remainder of this method is only for compilers that need their dependency work done	WITHOUT_CLASSIFICATION	0.983230814777498	WITHOUT_CLASSIFICATION	0.016769185222502037	DEFECT
// scan source directories and dest directory to build up both copy // lists and compile lists	WITHOUT_CLASSIFICATION	0.9999840607643053	WITHOUT_CLASSIFICATION	1.5939235694622898E-5	DEFECT
//        String srcFileDir=srcFile.getParent();	WITHOUT_CLASSIFICATION	0.9997758149716893	WITHOUT_CLASSIFICATION	2.241850283106193E-4	DEFECT
//end inner class	WITHOUT_CLASSIFICATION	0.999857281771085	WITHOUT_CLASSIFICATION	1.4271822891490405E-4	DEFECT
// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names	WITHOUT_CLASSIFICATION	0.9999716220573742	WITHOUT_CLASSIFICATION	2.837794262588407E-5	DEFECT
// first char is more restrictive than the rest	WITHOUT_CLASSIFICATION	0.9997862047919386	WITHOUT_CLASSIFICATION	2.137952080614938E-4	DEFECT
// this is the rest	WITHOUT_CLASSIFICATION	0.9997606935533475	WITHOUT_CLASSIFICATION	2.393064466524376E-4	DEFECT
// If the first char is not a start of Java identifier or is _ // prepend a '_'.	WITHOUT_CLASSIFICATION	0.9998518584948776	WITHOUT_CLASSIFICATION	1.4814150512235433E-4	DEFECT
//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build	WITHOUT_CLASSIFICATION	0.9996992095800223	WITHOUT_CLASSIFICATION	3.0079041997764695E-4	DEFECT
//tomcat4.0 gets the old mangler	WITHOUT_CLASSIFICATION	0.9990366153220216	WITHOUT_CLASSIFICATION	9.633846779784388E-4	DEFECT
//tomcat4.1 gets the new one	WITHOUT_CLASSIFICATION	0.9998708286251466	WITHOUT_CLASSIFICATION	1.291713748533859E-4	DEFECT
// for all other possibilities	WITHOUT_CLASSIFICATION	0.9998679823210719	WITHOUT_CLASSIFICATION	1.3201767892817692E-4	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999311862441098	WITHOUT_CLASSIFICATION	6.88137558901011E-5	DEFECT
// acrobatic cast.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// set the destination directory relative from the project if needed.	WITHOUT_CLASSIFICATION	0.9999917940744427	WITHOUT_CLASSIFICATION	8.205925557256834E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// sanity check	WITHOUT_CLASSIFICATION	0.9999602760477785	WITHOUT_CLASSIFICATION	3.972395222160341E-5	DEFECT
// plain impossible	WITHOUT_CLASSIFICATION	0.9999313105023125	WITHOUT_CLASSIFICATION	6.86894976874416E-5	DEFECT
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999934149194538	WITHOUT_CLASSIFICATION	6.585080546209964E-6	DEFECT
// append the err and output streams to the log	WITHOUT_CLASSIFICATION	0.9999311862441098	WITHOUT_CLASSIFICATION	6.88137558901011E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// If style dir is not specified we have to retrieve // the stylesheet from the classloader	WITHOUT_CLASSIFICATION	0.9943705369902185	WITHOUT_CLASSIFICATION	0.005629463009781458	DEFECT
// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem	WITHOUT_CLASSIFICATION	0.999639839643031	WITHOUT_CLASSIFICATION	3.6016035696895493E-4	DEFECT
// xalan 2	WITHOUT_CLASSIFICATION	0.9978295618349106	WITHOUT_CLASSIFICATION	0.002170438165089437	DEFECT
// xalan xsltc	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// jdk 1.5 xsltc	WITHOUT_CLASSIFICATION	0.9999388242671476	WITHOUT_CLASSIFICATION	6.117573285233067E-5	DEFECT
// must be plain, ensured by TypeAttribute	WITHOUT_CLASSIFICATION	0.9998618751622119	WITHOUT_CLASSIFICATION	1.3812483778814265E-4	DEFECT
// pre JUnit 3.7	WITHOUT_CLASSIFICATION	0.99994260782405	WITHOUT_CLASSIFICATION	5.7392175950070196E-5	DEFECT
// can be null if an error occurred in setUp	WITHOUT_CLASSIFICATION	0.9997515539088172	WITHOUT_CLASSIFICATION	2.4844609118281617E-4	DEFECT
// PlainJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Snapshot of the system properties	WITHOUT_CLASSIFICATION	0.9997387715425479	WITHOUT_CLASSIFICATION	2.612284574521536E-4	DEFECT
//add the timestamp	WITHOUT_CLASSIFICATION	0.9997888115766245	WITHOUT_CLASSIFICATION	2.111884233754218E-4	DEFECT
//and the hostname.	WITHOUT_CLASSIFICATION	0.9997340421953422	WITHOUT_CLASSIFICATION	2.659578046576981E-4	DEFECT
// Output properties	WITHOUT_CLASSIFICATION	0.9999205331120005	WITHOUT_CLASSIFICATION	7.946688799946208E-5	DEFECT
// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.	WITHOUT_CLASSIFICATION	0.9995888100467738	WITHOUT_CLASSIFICATION	4.1118995322618864E-4	DEFECT
// XMLJUnitResultFormatter	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Do we send output to the formatters ?	WITHOUT_CLASSIFICATION	0.9999716709601989	WITHOUT_CLASSIFICATION	2.8329039801119617E-5	DEFECT
//   Attributes for basetest	WITHOUT_CLASSIFICATION	0.9997397037773332	WITHOUT_CLASSIFICATION	2.6029622266679763E-4	DEFECT
// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.	WITHOUT_CLASSIFICATION	0.9855092804585616	WITHOUT_CLASSIFICATION	0.014490719541438376	DEFECT
/* forkMode.getValue().equals(ForkMode.PER_BATCH) */	WITHOUT_CLASSIFICATION	0.9997842630831995	WITHOUT_CLASSIFICATION	2.1573691680059834E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999907783533658	WITHOUT_CLASSIFICATION	9.221646634269122E-6	DEFECT
// execute the test and get the return code	WITHOUT_CLASSIFICATION	0.9999907783533658	WITHOUT_CLASSIFICATION	9.221646634269122E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9997363700822821	WITHOUT_CLASSIFICATION	2.636299177179238E-4	DEFECT
// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement	WITHOUT_CLASSIFICATION	0.9999845511689953	WITHOUT_CLASSIFICATION	1.544883100461843E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// set the default values if not specified //@todo should be moved to the test class instead.	WITHOUT_CLASSIFICATION	0.999972172988295	WITHOUT_CLASSIFICATION	2.782701170501134E-5	DEFECT
// Create a temporary file to pass the test cases to run to // the runner (one test case per line)	WITHOUT_CLASSIFICATION	0.999720315004385	WITHOUT_CLASSIFICATION	2.7968499561500953E-4	DEFECT
// #31885	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999383691288216	WITHOUT_CLASSIFICATION	6.163087117831314E-5	DEFECT
// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)	WITHOUT_CLASSIFICATION	0.9704794578587371	WITHOUT_CLASSIFICATION	0.029520542141262793	DEFECT
// make sure the test will be accepted as a TestCase	WITHOUT_CLASSIFICATION	0.9999000302775609	WITHOUT_CLASSIFICATION	9.996972243902767E-5	DEFECT
// make sure the test annotation are accepted	WITHOUT_CLASSIFICATION	0.9999283717762698	WITHOUT_CLASSIFICATION	7.162822373015768E-5	DEFECT
// will cause trouble in JDK 1.1 if omitted	WITHOUT_CLASSIFICATION	0.9996792186442489	WITHOUT_CLASSIFICATION	3.207813557511299E-4	DEFECT
// local copy since LogOutputStream.task is private	WITHOUT_CLASSIFICATION	0.9996207960499618	WITHOUT_CLASSIFICATION	3.79203950038266E-4	DEFECT
// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.	WITHOUT_CLASSIFICATION	0.9770938148524475	DEFECT	0.022906185147552435	WITHOUT_CLASSIFICATION
// dummy output for the framed report // it's all done by extension...	WITHOUT_CLASSIFICATION	0.9999412431127791	WITHOUT_CLASSIFICATION	5.875688722099376E-5	DEFECT
// conforming to NodeList interface	WITHOUT_CLASSIFICATION	0.9997964799784167	WITHOUT_CLASSIFICATION	2.0352002158330568E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.997129691243929	WITHOUT_CLASSIFICATION	0.0028703087560709977	DEFECT
// write the document	WITHOUT_CLASSIFICATION	0.9999536308676211	WITHOUT_CLASSIFICATION	4.6369132378961996E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//----- from now, the methods are all related to DOM tree manipulation	WITHOUT_CLASSIFICATION	0.9973783208708936	WITHOUT_CLASSIFICATION	0.0026216791291063576	DEFECT
// writers do not throw exceptions, so check for them.	WITHOUT_CLASSIFICATION	0.9992747054369208	WITHOUT_CLASSIFICATION	7.252945630792318E-4	DEFECT
// create the dom tree	WITHOUT_CLASSIFICATION	0.9995303135853322	WITHOUT_CLASSIFICATION	4.696864146677822E-4	DEFECT
// get all files and add them to the document	WITHOUT_CLASSIFICATION	0.9999462402048817	WITHOUT_CLASSIFICATION	5.3759795118453275E-5	DEFECT
// make sure that this is REALLY a testsuite.	WITHOUT_CLASSIFICATION	0.9990593242485455	WITHOUT_CLASSIFICATION	9.40675751454558E-4	DEFECT
//wrong root element name // issue a warning.	WITHOUT_CLASSIFICATION	0.9974648488424346	WITHOUT_CLASSIFICATION	0.002535151157565402	DEFECT
// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning	WITHOUT_CLASSIFICATION	0.9999892411621605	WITHOUT_CLASSIFICATION	1.0758837839547428E-5	DEFECT
// a missing . might imply no package at all. Don't get fooled.	WITHOUT_CLASSIFICATION	0.9999760737793785	WITHOUT_CLASSIFICATION	2.392622062144318E-5	DEFECT
// modify the name attribute and set the package	WITHOUT_CLASSIFICATION	0.9999855217614503	WITHOUT_CLASSIFICATION	1.4478238549768868E-5	DEFECT
// don't filter AssertionFailure	WITHOUT_CLASSIFICATION	0.9990833978793504	WITHOUT_CLASSIFICATION	9.166021206495813E-4	DEFECT
// JUnit 4 support:	WITHOUT_CLASSIFICATION	0.9999447220914551	WITHOUT_CLASSIFICATION	5.527790854492505E-5	DEFECT
// check for a static suite method first, even when using // JUnit 4	WITHOUT_CLASSIFICATION	0.9999614235118394	WITHOUT_CLASSIFICATION	3.857648816068031E-5	DEFECT
// check if there is a suite method	WITHOUT_CLASSIFICATION	0.9999465023918827	WITHOUT_CLASSIFICATION	5.34976081174049E-5	DEFECT
// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.	WITHOUT_CLASSIFICATION	0.9998878092499058	WITHOUT_CLASSIFICATION	1.1219075009415922E-4	DEFECT
// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.	WITHOUT_CLASSIFICATION	0.9999691332047579	WITHOUT_CLASSIFICATION	3.086679524211876E-5	DEFECT
// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.	WITHOUT_CLASSIFICATION	0.9997395349761327	WITHOUT_CLASSIFICATION	2.6046502386731197E-4	DEFECT
// OK, fall back to JUnit 3.	WITHOUT_CLASSIFICATION	0.9997952840190507	WITHOUT_CLASSIFICATION	2.0471598094918934E-4	DEFECT
// Let's use it!	WITHOUT_CLASSIFICATION	0.9998516812078573	WITHOUT_CLASSIFICATION	1.4831879214277272E-4	DEFECT
// Use JUnit 3.	WITHOUT_CLASSIFICATION	0.9999747653763941	WITHOUT_CLASSIFICATION	2.5234623605933835E-5	DEFECT
// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test	WITHOUT_CLASSIFICATION	0.9999386875822066	WITHOUT_CLASSIFICATION	6.131241779340157E-5	DEFECT
// had an exception constructing suite	WITHOUT_CLASSIFICATION	0.9996549771949418	WITHOUT_CLASSIFICATION	3.450228050582059E-4	DEFECT
// Add/overlay system properties on the properties from the Ant project	WITHOUT_CLASSIFICATION	0.999044329876115	WITHOUT_CLASSIFICATION	9.556701238849456E-4	DEFECT
// return the stack unfiltered	WITHOUT_CLASSIFICATION	0.9999686828420364	WITHOUT_CLASSIFICATION	3.1317157963607735E-5	DEFECT
// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.	WITHOUT_CLASSIFICATION	0.9979142247238323	WITHOUT_CLASSIFICATION	0.0020857752761676567	DEFECT
// To compile on pre-JDK 4 (even though this should always succeed):	WITHOUT_CLASSIFICATION	0.998570673845366	WITHOUT_CLASSIFICATION	0.0014293261546339882	DEFECT
// pre-3.4	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// JUnitTestRunner	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//rethrow	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//wrap	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9998038510601314	WITHOUT_CLASSIFICATION	1.9614893986869423E-4	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999373732421202	WITHOUT_CLASSIFICATION	6.26267578799105E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// we are going to scan everything anyway	WITHOUT_CLASSIFICATION	0.9997741493505665	WITHOUT_CLASSIFICATION	2.2585064943361492E-4	DEFECT
// only scan directories that can include matched files or // directories	WITHOUT_CLASSIFICATION	0.9999428448694936	WITHOUT_CLASSIFICATION	5.715513050644422E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9995971284328959	WITHOUT_CLASSIFICATION	4.0287156710410696E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// This default has been good enough until Ant 1.6.3, so stick // with it	WITHOUT_CLASSIFICATION	0.9999005993575724	WITHOUT_CLASSIFICATION	9.940064242759912E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Rats. // should not happen	WITHOUT_CLASSIFICATION	0.9966369274556269	WITHOUT_CLASSIFICATION	0.0033630725443730414	DEFECT
// otherwise ExecuteJava has thrown an exception	WITHOUT_CLASSIFICATION	0.9997273698426461	WITHOUT_CLASSIFICATION	2.7263015735382425E-4	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999882330117796	WITHOUT_CLASSIFICATION	1.1766988220272832E-5	DEFECT
// always start from the current ftp working dir	WITHOUT_CLASSIFICATION	0.9998872218756644	WITHOUT_CLASSIFICATION	1.1277812433565437E-4	DEFECT
// put in the newroots vector the include patterns without // wildcard tokens	WITHOUT_CLASSIFICATION	0.9999236977663457	WITHOUT_CLASSIFICATION	7.63022336542186E-5	DEFECT
// construct it	WITHOUT_CLASSIFICATION	0.9999524358156006	WITHOUT_CLASSIFICATION	4.75641843994663E-5	DEFECT
// cool case, //we do not need to scan all the subdirs in the relative path	WITHOUT_CLASSIFICATION	0.9989686970889659	WITHOUT_CLASSIFICATION	0.0010313029110342365	DEFECT
//this should not happen, except if parent has been deleted by another process	WITHOUT_CLASSIFICATION	0.9987756578210785	WITHOUT_CLASSIFICATION	0.0012243421789215794	DEFECT
// we are already in the right path, so the second parameter // is false	WITHOUT_CLASSIFICATION	0.9999007167575347	WITHOUT_CLASSIFICATION	9.928324246534002E-5	DEFECT
// hit a hidden file assume not a symlink	WITHOUT_CLASSIFICATION	0.9986773366021	WITHOUT_CLASSIFICATION	0.0013226633978999508	DEFECT
// getRelativePath also finds about symlinks	WITHOUT_CLASSIFICATION	0.9998548584911156	WITHOUT_CLASSIFICATION	1.4514150888444473E-4	DEFECT
// warn that selectors are not supported	WITHOUT_CLASSIFICATION	0.9973326614849422	WITHOUT_CLASSIFICATION	0.0026673385150578236	DEFECT
// If we are doing a listing, we need the output stream created now.	WITHOUT_CLASSIFICATION	0.9999961906464852	WITHOUT_CLASSIFICATION	3.8093535149635377E-6	DEFECT
// get files from filesets	WITHOUT_CLASSIFICATION	0.9999265624013218	WITHOUT_CLASSIFICATION	7.343759867814668E-5	DEFECT
// find first non cached dir	WITHOUT_CLASSIFICATION	0.9999746973544031	WITHOUT_CLASSIFICATION	2.530264559688952E-5	DEFECT
// check if dir exists by trying to change into it.	WITHOUT_CLASSIFICATION	0.999977549659003	WITHOUT_CLASSIFICATION	2.2450340996970078E-5	DEFECT
// could not change to it - try to create it	WITHOUT_CLASSIFICATION	0.9996905676201973	WITHOUT_CLASSIFICATION	3.0943237980271315E-4	DEFECT
// create a local temporary file	WITHOUT_CLASSIFICATION	0.999855855352309	WITHOUT_CLASSIFICATION	1.4414464769104635E-4	DEFECT
// see if we should issue a chmod command	WITHOUT_CLASSIFICATION	0.9957406424640945	WITHOUT_CLASSIFICATION	0.0042593575359054486	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999623913279191	WITHOUT_CLASSIFICATION	3.7608672080930035E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999623913279191	WITHOUT_CLASSIFICATION	3.7608672080930035E-5	DEFECT
// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows	WITHOUT_CLASSIFICATION	0.9998354191155827	WITHOUT_CLASSIFICATION	1.6458088441731738E-4	DEFECT
// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format	WITHOUT_CLASSIFICATION	0.9999373984374189	WITHOUT_CLASSIFICATION	6.260156258107013E-5	DEFECT
// If we are sending files, then assume out of date. // If we are getting files, then throw an error	WITHOUT_CLASSIFICATION	0.9987933632967618	WITHOUT_CLASSIFICATION	0.0012066367032382383	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.	WITHOUT_CLASSIFICATION	0.9999434552829083	WITHOUT_CLASSIFICATION	5.6544717091635955E-5	DEFECT
// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.	WITHOUT_CLASSIFICATION	0.9999605486089531	WITHOUT_CLASSIFICATION	3.945139104684303E-5	DEFECT
// For a unix ftp server you can set the default mask for all files // created.	WITHOUT_CLASSIFICATION	0.9999939524115129	WITHOUT_CLASSIFICATION	6.0475884871766705E-6	DEFECT
// If the action is MK_DIR, then the specified remote // directory is the directory to create.	WITHOUT_CLASSIFICATION	0.9999211772244605	WITHOUT_CLASSIFICATION	7.882277553951672E-5	DEFECT
// in this case we want to find how much time span there is between local // and remote	WITHOUT_CLASSIFICATION	0.9997048593643284	WITHOUT_CLASSIFICATION	2.951406356715978E-4	DEFECT
//socks	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//this may be a java1.4 thingy only	WITHOUT_CLASSIFICATION	0.9989219900707624	WITHOUT_CLASSIFICATION	0.0010780099292375426	DEFECT
// simple one-shot execution	WITHOUT_CLASSIFICATION	0.9999361677402414	WITHOUT_CLASSIFICATION	6.383225975863511E-5	DEFECT
// need nested read/write elements	WITHOUT_CLASSIFICATION	0.999857715086362	WITHOUT_CLASSIFICATION	1.4228491363804232E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//here we'd parse the output from change -o into submit -i //in order to support default change.	WITHOUT_CLASSIFICATION	0.9997233259754519	WITHOUT_CLASSIFICATION	2.7667402454813834E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>	WITHOUT_CLASSIFICATION	0.9995534418051355	WITHOUT_CLASSIFICATION	4.465581948644483E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999672460641353	WITHOUT_CLASSIFICATION	3.275393586470701E-4	DEFECT
//Remove any non-numerical chars - should leave the change number	WITHOUT_CLASSIFICATION	0.9995711053401539	WITHOUT_CLASSIFICATION	4.2889465984605326E-4	DEFECT
// this type of output might happen // Change 18 renamed change 20 and submitted.	WITHOUT_CLASSIFICATION	0.9999793628692392	WITHOUT_CLASSIFICATION	2.0637130760816467E-5	DEFECT
//Match "//" for begining of depot filespec	WITHOUT_CLASSIFICATION	0.9992311925049886	WITHOUT_CLASSIFICATION	7.688074950114831E-4	DEFECT
// we need to escape the description in case there are /	WITHOUT_CLASSIFICATION	0.9998596267264092	WITHOUT_CLASSIFICATION	1.4037327359093144E-4	DEFECT
// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.	WITHOUT_CLASSIFICATION	0.9992604108790616	WITHOUT_CLASSIFICATION	7.395891209383814E-4	DEFECT
//EoF	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9997790699687092	WITHOUT_CLASSIFICATION	2.2093003129076627E-4	DEFECT
/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */	WITHOUT_CLASSIFICATION	0.9999920996246483	WITHOUT_CLASSIFICATION	7.900375351653343E-6	DEFECT
/* -a */	WITHOUT_CLASSIFICATION	0.999672460641353	WITHOUT_CLASSIFICATION	3.275393586470701E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999672460641353	WITHOUT_CLASSIFICATION	3.275393586470701E-4	DEFECT
/* -n */	WITHOUT_CLASSIFICATION	0.999672460641353	WITHOUT_CLASSIFICATION	3.275393586470701E-4	DEFECT
/* -f */	WITHOUT_CLASSIFICATION	0.999672460641353	WITHOUT_CLASSIFICATION	3.275393586470701E-4	DEFECT
/* -t */	WITHOUT_CLASSIFICATION	0.999672460641353	WITHOUT_CLASSIFICATION	3.275393586470701E-4	DEFECT
/* -v */	WITHOUT_CLASSIFICATION	0.9996771405001923	WITHOUT_CLASSIFICATION	3.2285949980772726E-4	DEFECT
//We have to create a unlocked label first	WITHOUT_CLASSIFICATION	0.9993351308354878	WITHOUT_CLASSIFICATION	6.648691645122521E-4	DEFECT
//Now lock if required	WITHOUT_CLASSIFICATION	0.9999478255113592	WITHOUT_CLASSIFICATION	5.2174488640897925E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately	WITHOUT_CLASSIFICATION	0.999792037448877	WITHOUT_CLASSIFICATION	2.0796255112297973E-4	DEFECT
//Read back the label spec from perforce, //Replace Options //Submit back to Perforce	WITHOUT_CLASSIFICATION	0.9994527032488211	WITHOUT_CLASSIFICATION	5.472967511790481E-4	DEFECT
//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.	WITHOUT_CLASSIFICATION	0.9992948928300991	WITHOUT_CLASSIFICATION	7.051071699008957E-4	DEFECT
//sync says "error:" when a file is up-to-date	WITHOUT_CLASSIFICATION	0.9993919295201318	WITHOUT_CLASSIFICATION	6.080704798681435E-4	DEFECT
//sometimes there's "info1:	WITHOUT_CLASSIFICATION	0.9998279957374504	WITHOUT_CLASSIFICATION	1.7200426254951892E-4	DEFECT
//P4 runtime directives	WITHOUT_CLASSIFICATION	0.9996536832744539	WITHOUT_CLASSIFICATION	3.4631672554608946E-4	DEFECT
// Perforce task directives	WITHOUT_CLASSIFICATION	0.9999258295564389	WITHOUT_CLASSIFICATION	7.417044356101683E-5	DEFECT
//P4 g-opts and cmd opts (rtfm)	WITHOUT_CLASSIFICATION	0.999730839044589	WITHOUT_CLASSIFICATION	2.6916095541095776E-4	DEFECT
//Setters called by Ant	WITHOUT_CLASSIFICATION	0.9999519755410115	WITHOUT_CLASSIFICATION	4.802445898868238E-5	DEFECT
//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)	WITHOUT_CLASSIFICATION	0.9986026171999517	WITHOUT_CLASSIFICATION	0.0013973828000483	DEFECT
// reset error flags before executing the command	WITHOUT_CLASSIFICATION	0.9967357067798753	WITHOUT_CLASSIFICATION	0.0032642932201246626	DEFECT
//Check API for these - it's how CVS does it...	WITHOUT_CLASSIFICATION	0.992238269032296	WITHOUT_CLASSIFICATION	0.00776173096770412	DEFECT
/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */	WITHOUT_CLASSIFICATION	0.9999662051547159	WITHOUT_CLASSIFICATION	3.3794845284074176E-5	DEFECT
// private static final String PCLI_LVF_ARGS = "lvf -z -aw";	WITHOUT_CLASSIFICATION	0.9999520932535453	WITHOUT_CLASSIFICATION	4.790674645474788E-5	DEFECT
// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is	WITHOUT_CLASSIFICATION	0.9996917666590387	WITHOUT_CLASSIFICATION	3.0823334096125173E-4	DEFECT
// default pvcs project is "/"	WITHOUT_CLASSIFICATION	0.9999301420873651	WITHOUT_CLASSIFICATION	6.985791263497926E-5	DEFECT
// Create folders in workspace	WITHOUT_CLASSIFICATION	0.9999062014903463	WITHOUT_CLASSIFICATION	9.379850965376724E-5	DEFECT
// Launch get on output captured from PCLI lvf	WITHOUT_CLASSIFICATION	0.9996074488405223	WITHOUT_CLASSIFICATION	3.925511594777545E-4	DEFECT
// Extract the name of the directory from the filename	WITHOUT_CLASSIFICATION	0.9999479681264989	WITHOUT_CLASSIFICATION	5.203187350114595E-5	DEFECT
// Change these through their GET and SET methods.	WITHOUT_CLASSIFICATION	0.9999639459433355	WITHOUT_CLASSIFICATION	3.605405666448481E-5	DEFECT
// These fields deal with includes and excludes	WITHOUT_CLASSIFICATION	0.9998071529610958	WITHOUT_CLASSIFICATION	1.928470389041237E-4	DEFECT
// Check all of the properties that are required.	WITHOUT_CLASSIFICATION	0.9999693319010985	WITHOUT_CLASSIFICATION	3.06680989015289E-5	DEFECT
// Check to see if the target directory exists.	WITHOUT_CLASSIFICATION	0.9999966924436628	WITHOUT_CLASSIFICATION	3.3075563370317263E-6	DEFECT
// Search the items on this server.	WITHOUT_CLASSIFICATION	0.9995208537037504	WITHOUT_CLASSIFICATION	4.79146296249506E-4	DEFECT
// Disconnect from the server.	WITHOUT_CLASSIFICATION	0.9999141618374928	WITHOUT_CLASSIFICATION	8.583816250713323E-5	DEFECT
// Tell how many files were checked out.	WITHOUT_CLASSIFICATION	0.9979424473109665	WITHOUT_CLASSIFICATION	0.002057552689033579	DEFECT
// Optional; logOn() connects if necessary.	WITHOUT_CLASSIFICATION	0.9999296307766342	WITHOUT_CLASSIFICATION	7.036922336575306E-5	DEFECT
// Logon using specified user name and password.	WITHOUT_CLASSIFICATION	0.9997909523069853	WITHOUT_CLASSIFICATION	2.090476930146384E-4	DEFECT
// We always display the ItemID (OBJECT_ID) and primary descriptor.	WITHOUT_CLASSIFICATION	0.9999512494616641	WITHOUT_CLASSIFICATION	4.875053833591403E-5	DEFECT
//If a working directory was specified then add it to the command line	WITHOUT_CLASSIFICATION	0.999646492957317	WITHOUT_CLASSIFICATION	3.535070426830251E-4	DEFECT
// Checking for "\ // or           "/ // or           "X:\...	WITHOUT_CLASSIFICATION	0.9995980624194621	WITHOUT_CLASSIFICATION	4.0193758053791364E-4	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999289044262976	WITHOUT_CLASSIFICATION	7.10955737024245E-5	DEFECT
// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.	WITHOUT_CLASSIFICATION	0.9997046561368074	WITHOUT_CLASSIFICATION	2.953438631926174E-4	DEFECT
// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.	WITHOUT_CLASSIFICATION	0.9986483199224736	WITHOUT_CLASSIFICATION	0.0013516800775264833	DEFECT
// We'll need this item type's primary descriptor.	WITHOUT_CLASSIFICATION	0.9997531686899332	WITHOUT_CLASSIFICATION	2.468313100667359E-4	DEFECT
// Does this item type have a secondary descriptor? // If so, we'll need it.	WITHOUT_CLASSIFICATION	0.9990210974288666	WITHOUT_CLASSIFICATION	9.789025711333516E-4	DEFECT
// Now, build an array of the property names.	WITHOUT_CLASSIFICATION	0.9997988015552218	WITHOUT_CLASSIFICATION	2.011984447782357E-4	DEFECT
// Pre-fetch the item properties and cache them.	WITHOUT_CLASSIFICATION	0.9999733956482029	WITHOUT_CLASSIFICATION	2.6604351797057354E-5	DEFECT
// Now, search for items in the selected folder.	WITHOUT_CLASSIFICATION	0.9999182677747462	WITHOUT_CLASSIFICATION	8.173222525379054E-5	DEFECT
// Free up the memory used by the cached items.	WITHOUT_CLASSIFICATION	0.9999941482038998	WITHOUT_CLASSIFICATION	5.851796100154337E-6	DEFECT
// convert whatever separator char is in starteam to that of the target system.	WITHOUT_CLASSIFICATION	0.9999001760046942	WITHOUT_CLASSIFICATION	9.982399530581759E-5	DEFECT
// If it ends with separator then strip it off	WITHOUT_CLASSIFICATION	0.9999437836717383	WITHOUT_CLASSIFICATION	5.6216328261643947E-5	DEFECT
// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName	WITHOUT_CLASSIFICATION	0.9999596261676797	WITHOUT_CLASSIFICATION	4.037383232032956E-5	DEFECT
// only want to do this the first time	WITHOUT_CLASSIFICATION	0.9999096907919248	WITHOUT_CLASSIFICATION	9.030920807507158E-5	DEFECT
// Process all items in this folder.	WITHOUT_CLASSIFICATION	0.9990771008246094	WITHOUT_CLASSIFICATION	9.228991753905584E-4	DEFECT
// Process all subfolders recursively if recursion is on.	WITHOUT_CLASSIFICATION	0.9998311307922415	WITHOUT_CLASSIFICATION	1.688692077585766E-4	DEFECT
// Get descriptors for this item type.	WITHOUT_CLASSIFICATION	0.9997362100028815	WITHOUT_CLASSIFICATION	2.6378999711849395E-4	DEFECT
// VERBOSE MODE ONLY	WITHOUT_CLASSIFICATION	0.9999351760295206	WITHOUT_CLASSIFICATION	6.482397047941245E-5	DEFECT
// Show folder only if changed.	WITHOUT_CLASSIFICATION	0.9998443848361993	WITHOUT_CLASSIFICATION	1.5561516380077078E-4	DEFECT
// Show if the file is locked.	WITHOUT_CLASSIFICATION	0.9999537802787617	WITHOUT_CLASSIFICATION	4.6219721238300724E-5	DEFECT
// END VERBOSE ONLY	WITHOUT_CLASSIFICATION	0.9999350730193799	WITHOUT_CLASSIFICATION	6.492698062014278E-5	DEFECT
// add -command CheckOutFile to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// Finally, show the Item properties ... // Always show the ItemID.	WITHOUT_CLASSIFICATION	0.9999524657695814	WITHOUT_CLASSIFICATION	4.753423041858107E-5	DEFECT
// Show the primary descriptor. // There should always be one.	WITHOUT_CLASSIFICATION	0.9998983595683781	WITHOUT_CLASSIFICATION	1.0164043162193849E-4	DEFECT
// Show the secondary descriptor, if there is one. // Some item types have one, some don't.	WITHOUT_CLASSIFICATION	0.999952625476715	WITHOUT_CLASSIFICATION	4.737452328495275E-5	DEFECT
// Change the item to be checked out to a StarTeam File.	WITHOUT_CLASSIFICATION	0.9999027009968171	WITHOUT_CLASSIFICATION	9.729900318297638E-5	DEFECT
// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.	WITHOUT_CLASSIFICATION	0.9999875994331573	WITHOUT_CLASSIFICATION	1.2400566842646609E-5	DEFECT
// Begin SET and GET methods	WITHOUT_CLASSIFICATION	0.9999775455951955	WITHOUT_CLASSIFICATION	2.245440480455921E-5	DEFECT
// Begin filter getters and setters	WITHOUT_CLASSIFICATION	0.9999264266869178	WITHOUT_CLASSIFICATION	7.35733130822441E-5	DEFECT
// Check if need to set the loader	WITHOUT_CLASSIFICATION	0.9999925746007189	WITHOUT_CLASSIFICATION	7.425399281148603E-6	DEFECT
// Now create the scriptRunner	WITHOUT_CLASSIFICATION	0.9999627179604321	WITHOUT_CLASSIFICATION	3.7282039567853104E-5	DEFECT
// find the script repository - it is stored in the project	WITHOUT_CLASSIFICATION	0.9993129857022007	WITHOUT_CLASSIFICATION	6.870142977992022E-4	DEFECT
/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */	WITHOUT_CLASSIFICATION	0.9999572119409373	WITHOUT_CLASSIFICATION	4.2788059062559115E-5	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999289044262976	WITHOUT_CLASSIFICATION	7.10955737024245E-5	DEFECT
// add -command CheckInFile to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// add -file xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// add -command CheckInProject to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999666437606145	WITHOUT_CLASSIFICATION	3.335623938556298E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999666437606145	WITHOUT_CLASSIFICATION	3.335623938556298E-5	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999529402956384	WITHOUT_CLASSIFICATION	4.705970436146895E-5	DEFECT
// soscmd Command options	WITHOUT_CLASSIFICATION	0.9999657488658112	WITHOUT_CLASSIFICATION	3.4251134188673514E-5	DEFECT
// soscmd Option flags	WITHOUT_CLASSIFICATION	0.9996034747220595	WITHOUT_CLASSIFICATION	3.9652527794061497E-4	DEFECT
// add -command GetFile to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// look for a version attribute	WITHOUT_CLASSIFICATION	0.9994010351192009	WITHOUT_CLASSIFICATION	5.989648807990559E-4	DEFECT
//add -revision xxxxx to the commandline	WITHOUT_CLASSIFICATION	0.9995385699198506	WITHOUT_CLASSIFICATION	4.614300801494819E-4	DEFECT
// add -command GetProject to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// look for a label option	WITHOUT_CLASSIFICATION	0.9999702534237968	WITHOUT_CLASSIFICATION	2.9746576203281136E-5	DEFECT
// make sure localDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999139172973429	WITHOUT_CLASSIFICATION	8.608270265715388E-5	DEFECT
// This is the exit status	WITHOUT_CLASSIFICATION	0.9989632323237383	WITHOUT_CLASSIFICATION	0.0010367676762617609	DEFECT
// Use the OS VM launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999902588606122	WITHOUT_CLASSIFICATION	9.741139387784086E-6	DEFECT
// Get the path to the soscmd(.exe)	WITHOUT_CLASSIFICATION	0.9999362669032518	WITHOUT_CLASSIFICATION	6.37330967481981E-5	DEFECT
// SOS server address is required	WITHOUT_CLASSIFICATION	0.999282439748349	WITHOUT_CLASSIFICATION	7.175602516509942E-4	DEFECT
// VSS Info is required	WITHOUT_CLASSIFICATION	0.9998067050394035	WITHOUT_CLASSIFICATION	1.932949605966162E-4	DEFECT
// VSS project is required	WITHOUT_CLASSIFICATION	0.9996458049344559	WITHOUT_CLASSIFICATION	3.5419506554413785E-4	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Disable Compression	WITHOUT_CLASSIFICATION	0.9999185011380096	WITHOUT_CLASSIFICATION	8.149886199032913E-5	DEFECT
// If -soshome was not specified then we can look for nocache	WITHOUT_CLASSIFICATION	0.9997056229016006	WITHOUT_CLASSIFICATION	2.943770983993986E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999807264803833	WITHOUT_CLASSIFICATION	1.9273519616721778E-5	DEFECT
// look for a recursive option	WITHOUT_CLASSIFICATION	0.9999666437606145	WITHOUT_CLASSIFICATION	3.335623938556298E-5	DEFECT
// Look for a comment	WITHOUT_CLASSIFICATION	0.9999529402956384	WITHOUT_CLASSIFICATION	4.705970436146895E-5	DEFECT
// -verbose	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "	WITHOUT_CLASSIFICATION	0.9999696530012585	WITHOUT_CLASSIFICATION	3.034699874142339E-5	DEFECT
// add -command CheckOutProject to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// add -command AddLabel to the commandline	WITHOUT_CLASSIFICATION	0.9999059607263111	WITHOUT_CLASSIFICATION	9.403927368887531E-5	DEFECT
// a label is required	WITHOUT_CLASSIFICATION	0.9998428159075227	WITHOUT_CLASSIFICATION	1.571840924773117E-4	DEFECT
// get the list of files in the dir	WITHOUT_CLASSIFICATION	0.9999301870636949	WITHOUT_CLASSIFICATION	6.98129363051536E-5	DEFECT
// get a random number between 0 and the number of files	WITHOUT_CLASSIFICATION	0.9999346123892928	WITHOUT_CLASSIFICATION	6.538761070715094E-5	DEFECT
// set the source to the file at that location	WITHOUT_CLASSIFICATION	0.9999698631377385	WITHOUT_CLASSIFICATION	3.0136862261545748E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999564454377757	WITHOUT_CLASSIFICATION	4.3554562224221616E-5	DEFECT
//System.exit(0);	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// build successfull!	WITHOUT_CLASSIFICATION	0.9999339294863805	WITHOUT_CLASSIFICATION	6.607051361957787E-5	DEFECT
/*AbstractSshMessage*/	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// dir does not exist.	WITHOUT_CLASSIFICATION	0.9990252871327644	WITHOUT_CLASSIFICATION	9.747128672355759E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9980462316941426	WITHOUT_CLASSIFICATION	0.001953768305857405	DEFECT
// get I/O streams for remote scp	WITHOUT_CLASSIFICATION	0.9997680662554473	WITHOUT_CLASSIFICATION	2.3193374455278073E-4	DEFECT
// this indicates an error.	WITHOUT_CLASSIFICATION	0.999780556112573	WITHOUT_CLASSIFICATION	2.1944388742694448E-4	DEFECT
// appears that the next token is not used and it's zero.	WITHOUT_CLASSIFICATION	0.9945029354537355	WITHOUT_CLASSIFICATION	0.005497064546264587	DEFECT
// read a content of lfile	WITHOUT_CLASSIFICATION	0.9999498128072675	WITHOUT_CLASSIFICATION	5.0187192732554504E-5	DEFECT
// Ignored	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// do nothing;	WITHOUT_CLASSIFICATION	0.9999563818744129	WITHOUT_CLASSIFICATION	4.361812558711626E-5	DEFECT
// didn't receive any response	WITHOUT_CLASSIFICATION	0.9999157622639401	WITHOUT_CLASSIFICATION	8.423773605998064E-5	DEFECT
// execute the command	WITHOUT_CLASSIFICATION	0.9999083824194442	WITHOUT_CLASSIFICATION	9.16175805557231E-5	DEFECT
// wait for it to finish	WITHOUT_CLASSIFICATION	0.9998947686526485	WITHOUT_CLASSIFICATION	1.0523134735145631E-4	DEFECT
// ran out of time	WITHOUT_CLASSIFICATION	0.9999628715098928	WITHOUT_CLASSIFICATION	3.712849010721498E-5	DEFECT
// completed successfully	WITHOUT_CLASSIFICATION	0.9999195469356519	WITHOUT_CLASSIFICATION	8.045306434818032E-5	DEFECT
// user:password@host:/path notation	WITHOUT_CLASSIFICATION	0.999884952748631	WITHOUT_CLASSIFICATION	1.1504725136907096E-4	DEFECT
// no password, will require passphrase	WITHOUT_CLASSIFICATION	0.9986633104512889	WITHOUT_CLASSIFICATION	0.0013366895487110621	DEFECT
// skip	WITHOUT_CLASSIFICATION	0.9998543033095085	WITHOUT_CLASSIFICATION	1.4569669049145428E-4	DEFECT
// send "C0644 filesize filename", where filename should not include '/'	WITHOUT_CLASSIFICATION	0.9995253258584721	WITHOUT_CLASSIFICATION	4.746741415279013E-4	DEFECT
// send a content of lfile	WITHOUT_CLASSIFICATION	0.9999105938551438	WITHOUT_CLASSIFICATION	8.940614485616438E-5	DEFECT
// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.	WITHOUT_CLASSIFICATION	0.9999201048398985	WITHOUT_CLASSIFICATION	7.98951601015804E-5	DEFECT
// swallow if there was an error before so that // original error will be passed up	WITHOUT_CLASSIFICATION	0.9999500475715051	WITHOUT_CLASSIFICATION	4.995242849497385E-5	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9997513032211928	WITHOUT_CLASSIFICATION	2.4869677880726474E-4	DEFECT
// b may be 0 for success, //          1 for error, //          2 for fatal error,	WITHOUT_CLASSIFICATION	0.9974834128139709	WITHOUT_CLASSIFICATION	0.00251658718602901	DEFECT
// like <exec> // like <exec> // like <exec>	WITHOUT_CLASSIFICATION	0.9999147400910082	WITHOUT_CLASSIFICATION	8.525990899176886E-5	DEFECT
//log(message, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// we want this to have a false default, unlike for Checkin.	WITHOUT_CLASSIFICATION	0.9995370155132495	WITHOUT_CLASSIFICATION	4.6298448675058574E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9997346863067615	WITHOUT_CLASSIFICATION	2.6531369323848787E-4	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999751496531163	WITHOUT_CLASSIFICATION	2.4850346883765267E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999359916272479	WITHOUT_CLASSIFICATION	6.40083727521123E-5	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999359916272479	WITHOUT_CLASSIFICATION	6.40083727521123E-5	DEFECT
// if a label has been supplied, use it to configure the view // otherwise use current view	WITHOUT_CLASSIFICATION	0.9999681396227063	WITHOUT_CLASSIFICATION	3.186037729380112E-5	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9998281597690594	WITHOUT_CLASSIFICATION	1.718402309406181E-4	DEFECT
// if a date has been supplied use a view configured to the date.	WITHOUT_CLASSIFICATION	0.9998281597690594	WITHOUT_CLASSIFICATION	1.718402309406181E-4	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9997202592316901	WITHOUT_CLASSIFICATION	2.797407683100242E-4	DEFECT
// otherwise, use this view configured as the tip.	WITHOUT_CLASSIFICATION	0.9997202592316901	WITHOUT_CLASSIFICATION	2.797407683100242E-4	DEFECT
// For all Files in this folder, we need to check // if there have been modifications.	WITHOUT_CLASSIFICATION	0.9996392070530694	WITHOUT_CLASSIFICATION	3.607929469305996E-4	DEFECT
// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.	WITHOUT_CLASSIFICATION	0.9939710883996172	WITHOUT_CLASSIFICATION	0.006028911600382801	DEFECT
// handle the files so they appear first	WITHOUT_CLASSIFICATION	0.9999988553019432	WITHOUT_CLASSIFICATION	1.1446980567203248E-6	DEFECT
// now do it again for the directories so they appear last.	WITHOUT_CLASSIFICATION	0.9999969272008574	WITHOUT_CLASSIFICATION	3.0727991425187476E-6	DEFECT
// Create the new label and update the repository	WITHOUT_CLASSIFICATION	0.9999931769796927	WITHOUT_CLASSIFICATION	6.823020307307817E-6	DEFECT
// write a Properties file in each directory:	WITHOUT_CLASSIFICATION	0.999906386281799	WITHOUT_CLASSIFICATION	9.361371820105197E-5	DEFECT
// Create an instance of the rmic, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999506806633035	WITHOUT_CLASSIFICATION	4.93193366964792E-5	DEFECT
// CheckStyle:MethodNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// once we find a folder that isn't in the repository, // we know we can add it.	WITHOUT_CLASSIFICATION	0.9999359916272479	WITHOUT_CLASSIFICATION	6.40083727521123E-5	DEFECT
//ATTRIBUTES settable from ant.	WITHOUT_CLASSIFICATION	0.9993515075897219	WITHOUT_CLASSIFICATION	6.484924102781632E-4	DEFECT
// if a label has been supplied and it is a view label, use it // to configure the view	WITHOUT_CLASSIFICATION	0.9998198114480161	WITHOUT_CLASSIFICATION	1.8018855198382732E-4	DEFECT
// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot	WITHOUT_CLASSIFICATION	0.9999695654670276	WITHOUT_CLASSIFICATION	3.0434532972389977E-5	DEFECT
// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK	WITHOUT_CLASSIFICATION	0.9956362877213766	WITHOUT_CLASSIFICATION	0.004363712278623428	DEFECT
// PR 31965 says that it can return null	WITHOUT_CLASSIFICATION	0.9999858160726601	WITHOUT_CLASSIFICATION	1.418392733973402E-5	DEFECT
// no root local mapping has been specified.	WITHOUT_CLASSIFICATION	0.9996337953774592	WITHOUT_CLASSIFICATION	3.662046225407592E-4	DEFECT
// Inspect everything in the root folder and then recursively	WITHOUT_CLASSIFICATION	0.9999318861001084	WITHOUT_CLASSIFICATION	6.811389989166137E-5	DEFECT
// Tell user what he is doing	WITHOUT_CLASSIFICATION	0.9995311378653357	WITHOUT_CLASSIFICATION	4.6886213466428706E-4	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999726695215326	WITHOUT_CLASSIFICATION	2.7330478467396228E-5	DEFECT
// set the local folder.	WITHOUT_CLASSIFICATION	0.9999726695215326	WITHOUT_CLASSIFICATION	2.7330478467396228E-5	DEFECT
// ATTRIBUTES	WITHOUT_CLASSIFICATION	0.9999350730193799	WITHOUT_CLASSIFICATION	6.492698062014278E-5	DEFECT
// create a hashtable to group them by parent directory:	WITHOUT_CLASSIFICATION	0.9997870292864974	WITHOUT_CLASSIFICATION	2.1297071350260754E-4	DEFECT
// else lnk exists, do nothing	WITHOUT_CLASSIFICATION	0.9999746229516836	WITHOUT_CLASSIFICATION	2.5377048316367008E-5	DEFECT
// get an Iterator of file objects representing links (canonical):	WITHOUT_CLASSIFICATION	0.9998583117183583	WITHOUT_CLASSIFICATION	1.4168828164175622E-4	DEFECT
//iterate through the names, get the matching values	WITHOUT_CLASSIFICATION	0.9997520802089402	WITHOUT_CLASSIFICATION	2.479197910597757E-4	DEFECT
/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995860023405412	WITHOUT_CLASSIFICATION	4.1399765945883936E-4	DEFECT
/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99977819553652	WITHOUT_CLASSIFICATION	2.2180446347988366E-4	DEFECT
// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.	WITHOUT_CLASSIFICATION	0.9988643872317124	WITHOUT_CLASSIFICATION	0.001135612768287528	DEFECT
// either use default path or root local mapping, // which is now embedded in the root folder	WITHOUT_CLASSIFICATION	0.9999656257281361	WITHOUT_CLASSIFICATION	3.437427186389082E-5	DEFECT
///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995860023405412	WITHOUT_CLASSIFICATION	4.1399765945883936E-4	DEFECT
// fill up a Properties object with link and resource names:	WITHOUT_CLASSIFICATION	0.9999554144559692	WITHOUT_CLASSIFICATION	4.4585544030654226E-5	DEFECT
// find the resource of the existing link:	WITHOUT_CLASSIFICATION	0.9999092869445171	WITHOUT_CLASSIFICATION	9.071305548298647E-5	DEFECT
// rename the resource, thus breaking the link:	WITHOUT_CLASSIFICATION	0.9999277054656323	WITHOUT_CLASSIFICATION	7.229453436765583E-5	DEFECT
// delete the (now) broken link:	WITHOUT_CLASSIFICATION	0.9997278550041845	WITHOUT_CLASSIFICATION	2.7214499581549163E-4	DEFECT
// return the resource to its original name:	WITHOUT_CLASSIFICATION	0.999944642426902	WITHOUT_CLASSIFICATION	5.535757309795019E-5	DEFECT
// loop through the supplied file sets:	WITHOUT_CLASSIFICATION	0.9999756636324185	WITHOUT_CLASSIFICATION	2.4336367581470296E-5	DEFECT
// load included files as properties files:	WITHOUT_CLASSIFICATION	0.9999630676945281	WITHOUT_CLASSIFICATION	3.6932305471869315E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999497584658801	WITHOUT_CLASSIFICATION	5.02415341200053E-5	DEFECT
//set to empty str if no local path return	WITHOUT_CLASSIFICATION	0.9999926664085239	WITHOUT_CLASSIFICATION	7.333591476093414E-6	DEFECT
//make sure m_LocalDir exists, create it if it doesn't	WITHOUT_CLASSIFICATION	0.9999095747247416	WITHOUT_CLASSIFICATION	9.042527525835898E-5	DEFECT
// Use the OS launcher so we get environment variables	WITHOUT_CLASSIFICATION	0.9999902588606122	WITHOUT_CLASSIFICATION	9.741139387784086E-6	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -L Specify the new label on the command line (instead of being prompted)	WITHOUT_CLASSIFICATION	0.9994667829816875	WITHOUT_CLASSIFICATION	5.33217018312616E-4	DEFECT
// -V Label an existing file or project version	WITHOUT_CLASSIFICATION	0.9995940051314245	WITHOUT_CLASSIFICATION	4.059948685754732E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9998962389210034	WITHOUT_CLASSIFICATION	1.0376107899655307E-4	DEFECT
// pre Kaffe 1.1.5	WITHOUT_CLASSIFICATION	0.9999373732421202	WITHOUT_CLASSIFICATION	6.26267578799105E-5	DEFECT
// -GL	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:	WITHOUT_CLASSIFICATION	0.9999495210680047	WITHOUT_CLASSIFICATION	5.047893199517491E-5	DEFECT
// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9995204115198445	WITHOUT_CLASSIFICATION	4.7958848015547737E-4	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// -O-	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -R	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -V	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -W	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -G	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -GWS or -GWR	WITHOUT_CLASSIFICATION	0.9999497584658801	WITHOUT_CLASSIFICATION	5.02415341200053E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned	WITHOUT_CLASSIFICATION	0.9998450986834742	WITHOUT_CLASSIFICATION	1.5490131652582404E-4	DEFECT
// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure	WITHOUT_CLASSIFICATION	0.9999695702207096	WITHOUT_CLASSIFICATION	3.042977929042929E-5	DEFECT
// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value	WITHOUT_CLASSIFICATION	0.9994391858770959	WITHOUT_CLASSIFICATION	5.608141229040633E-4	DEFECT
// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9992350613580931	WITHOUT_CLASSIFICATION	7.649386419068796E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -C	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9998962389210034	WITHOUT_CLASSIFICATION	1.0376107899655307E-4	DEFECT
// first off, make sure that we've got a command and a vssdir ...	WITHOUT_CLASSIFICATION	0.9998962389210034	WITHOUT_CLASSIFICATION	1.0376107899655307E-4	DEFECT
// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9992314592985071	WITHOUT_CLASSIFICATION	7.685407014928802E-4	DEFECT
// -VL	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -B / -D / -F-	WITHOUT_CLASSIFICATION	0.9999364596006154	WITHOUT_CLASSIFICATION	6.354039938463516E-5	DEFECT
// -O	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// first off, make sure that we've got a command and a localPath ...	WITHOUT_CLASSIFICATION	0.9998962389210034	WITHOUT_CLASSIFICATION	1.0376107899655307E-4	DEFECT
// -G-	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// first off, make sure that we've got a command and a vssdir...	WITHOUT_CLASSIFICATION	0.9998769075045599	WITHOUT_CLASSIFICATION	1.2309249544017182E-4	DEFECT
// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9994748664421359	WITHOUT_CLASSIFICATION	5.251335578641295E-4	DEFECT
// pre Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9999373732421202	WITHOUT_CLASSIFICATION	6.26267578799105E-5	DEFECT
// only supported since Kaffe 1.1.2	WITHOUT_CLASSIFICATION	0.9997092593120496	WITHOUT_CLASSIFICATION	2.9074068795034155E-4	DEFECT
//handle the many different stub options.	WITHOUT_CLASSIFICATION	0.9992029545431385	WITHOUT_CLASSIFICATION	7.970454568616373E-4	DEFECT
//default is compatibility	WITHOUT_CLASSIFICATION	0.9997013380333132	WITHOUT_CLASSIFICATION	2.9866196668671525E-4	DEFECT
//anything else	WITHOUT_CLASSIFICATION	0.9998535107630148	WITHOUT_CLASSIFICATION	1.4648923698521693E-4	DEFECT
//do nothing with the value? or go -v+stubVersion??	WITHOUT_CLASSIFICATION	0.9999619503323766	WITHOUT_CLASSIFICATION	3.804966762350601E-5	DEFECT
//set the non-null stubOption	WITHOUT_CLASSIFICATION	0.9998676911291775	WITHOUT_CLASSIFICATION	1.3230887082250754E-4	DEFECT
// we know that name.endsWith(".class")	WITHOUT_CLASSIFICATION	0.9998547231364442	WITHOUT_CLASSIFICATION	1.452768635558148E-4	DEFECT
// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath	WITHOUT_CLASSIFICATION	0.9997972576585434	WITHOUT_CLASSIFICATION	2.0274234145642477E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.999129719822821	WITHOUT_CLASSIFICATION	8.702801771791741E-4	DEFECT
//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.	WITHOUT_CLASSIFICATION	0.9998748439384993	WITHOUT_CLASSIFICATION	1.2515606150071798E-4	DEFECT
// JRMP with simple naming convention	WITHOUT_CLASSIFICATION	0.9998213204192283	WITHOUT_CLASSIFICATION	1.786795807717444E-4	DEFECT
/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */	WITHOUT_CLASSIFICATION	0.9975514749470281	WITHOUT_CLASSIFICATION	0.0024485250529718205	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.99998775983656	WITHOUT_CLASSIFICATION	1.2240163440012387E-5	DEFECT
// no package	WITHOUT_CLASSIFICATION	0.99998775983656	WITHOUT_CLASSIFICATION	1.2240163440012387E-5	DEFECT
// only stub, no tie	WITHOUT_CLASSIFICATION	0.999945032532211	WITHOUT_CLASSIFICATION	5.496746778897773E-5	DEFECT
/*                         * stub is derived from implementation,                         * tie from interface name.                         */	WITHOUT_CLASSIFICATION	0.9999314118168809	WITHOUT_CLASSIFICATION	6.858818311907615E-5	DEFECT
//rely on RMIC being on the path	WITHOUT_CLASSIFICATION	0.9994451634789925	WITHOUT_CLASSIFICATION	5.548365210074414E-4	DEFECT
//set up the args	WITHOUT_CLASSIFICATION	0.9998815736789702	WITHOUT_CLASSIFICATION	1.1842632102969387E-4	DEFECT
// Create an instance of the rmic	WITHOUT_CLASSIFICATION	0.9999720566881347	WITHOUT_CLASSIFICATION	2.794331186523905E-5	DEFECT
//convert to lower case in the English locale,	WITHOUT_CLASSIFICATION	0.9995677842163082	WITHOUT_CLASSIFICATION	4.3221578369185176E-4	DEFECT
//handle default specially by choosing the sun or kaffe compiler	WITHOUT_CLASSIFICATION	0.9999644004577403	WITHOUT_CLASSIFICATION	3.559954225970852E-5	DEFECT
//no match? ask for the non-lower-cased type	WITHOUT_CLASSIFICATION	0.9998289258705609	WITHOUT_CLASSIFICATION	1.710741294391257E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9998645713568465	WITHOUT_CLASSIFICATION	1.354286431534098E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9998645713568465	WITHOUT_CLASSIFICATION	1.354286431534098E-4	DEFECT
//do the system assertions	WITHOUT_CLASSIFICATION	0.9998645713568465	WITHOUT_CLASSIFICATION	1.354286431534098E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9998291735708723	WITHOUT_CLASSIFICATION	1.7082642912781757E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9998291735708723	WITHOUT_CLASSIFICATION	1.7082642912781757E-4	DEFECT
//now any inner assertions	WITHOUT_CLASSIFICATION	0.9998291735708723	WITHOUT_CLASSIFICATION	1.7082642912781757E-4	DEFECT
//catch invalidness	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//see if it is a package or a class	WITHOUT_CLASSIFICATION	0.999822530353725	WITHOUT_CLASSIFICATION	1.7746964627498414E-4	DEFECT
//packages get a ... prefix	WITHOUT_CLASSIFICATION	0.9998420821428267	WITHOUT_CLASSIFICATION	1.579178571733722E-4	DEFECT
//append the ... suffix if not there already	WITHOUT_CLASSIFICATION	0.9985468159661515	WITHOUT_CLASSIFICATION	0.0014531840338484453	DEFECT
//classes just get the classname	WITHOUT_CLASSIFICATION	0.9999407821597212	WITHOUT_CLASSIFICATION	5.921784027876645E-5	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996073262518027	WITHOUT_CLASSIFICATION	3.9267374819731027E-4	DEFECT
// Add all nested elements to our catalog	WITHOUT_CLASSIFICATION	0.9998421318493852	WITHOUT_CLASSIFICATION	1.5786815061473488E-4	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999487539977456	WITHOUT_CLASSIFICATION	5.1246002254346825E-5	DEFECT
// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()	WITHOUT_CLASSIFICATION	0.9989708622912323	WITHOUT_CLASSIFICATION	0.0010291377087676677	DEFECT
// Append the classpath of the nested catalog	WITHOUT_CLASSIFICATION	0.9997718705711371	WITHOUT_CLASSIFICATION	2.281294288628856E-4	DEFECT
// Append the catalog path of the nested catalog	WITHOUT_CLASSIFICATION	0.9998687414033532	WITHOUT_CLASSIFICATION	1.312585966467506E-4	DEFECT
// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp	WITHOUT_CLASSIFICATION	0.9999731386906608	WITHOUT_CLASSIFICATION	2.68613093392635E-5	DEFECT
// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader	WITHOUT_CLASSIFICATION	0.9998743905811595	WITHOUT_CLASSIFICATION	1.2560941884053216E-4	DEFECT
// load the base class through this loader.	WITHOUT_CLASSIFICATION	0.999761571325283	WITHOUT_CLASSIFICATION	2.384286747169146E-4	DEFECT
// and find its actual loader	WITHOUT_CLASSIFICATION	0.9999737494623945	WITHOUT_CLASSIFICATION	2.6250537605496268E-5	DEFECT
// // Success!  The xml-commons resolver library is // available, so use it. //	WITHOUT_CLASSIFICATION	0.9990073933898009	WITHOUT_CLASSIFICATION	9.926066101991376E-4	DEFECT
// // The xml-commons resolver library is not // available, so we can't use it. //	WITHOUT_CLASSIFICATION	0.9863529805908153	WITHOUT_CLASSIFICATION	0.013647019409184705	DEFECT
// the following line seems to be necessary on Windows under JDK 1.2	WITHOUT_CLASSIFICATION	0.9988410926785501	WITHOUT_CLASSIFICATION	0.0011589073214498353	DEFECT
// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9971963081042267	WITHOUT_CLASSIFICATION	0.002803691895773344	DEFECT
// // for classpath lookup we ignore the base directory //	WITHOUT_CLASSIFICATION	0.9999729981030462	WITHOUT_CLASSIFICATION	2.700189695386884E-5	DEFECT
// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //	WITHOUT_CLASSIFICATION	0.9948198750780142	WITHOUT_CLASSIFICATION	0.005180124921985887	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9735527421538617	WITHOUT_CLASSIFICATION	0.026447257846138342	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9999277534147937	WITHOUT_CLASSIFICATION	7.22465852062942E-5	DEFECT
// Parse each catalog listed in nested <catalogpath> elements	WITHOUT_CLASSIFICATION	0.9998544940821195	WITHOUT_CLASSIFICATION	1.4550591788058345E-4	DEFECT
//-- XMLCatalog	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9998185204857478	WITHOUT_CLASSIFICATION	1.81479514252208E-4	DEFECT
// No includes supplied, so set it to 'matches all'	WITHOUT_CLASSIFICATION	0.9999882330117796	WITHOUT_CLASSIFICATION	1.1766988220272832E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9998836014070323	WITHOUT_CLASSIFICATION	1.163985929678127E-4	DEFECT
/* package-private for now */	WITHOUT_CLASSIFICATION	0.9998836014070323	WITHOUT_CLASSIFICATION	1.163985929678127E-4	DEFECT
// special case in ZIPs, we do not want this thing included	WITHOUT_CLASSIFICATION	0.9994073822530289	WITHOUT_CLASSIFICATION	5.926177469711208E-4	DEFECT
// first check if the archive needs to be scanned again	WITHOUT_CLASSIFICATION	0.9999727662910505	WITHOUT_CLASSIFICATION	2.7233708949551474E-5	DEFECT
//do not use a FileResource b/c it pulls File info from the filesystem:	WITHOUT_CLASSIFICATION	0.9965144881722311	WITHOUT_CLASSIFICATION	0.0034855118277688914	DEFECT
// spare scanning again and again	WITHOUT_CLASSIFICATION	0.9999429887043816	WITHOUT_CLASSIFICATION	5.7011295618492406E-5	DEFECT
/* cached DirectoryScanner instance for our own Project only */	WITHOUT_CLASSIFICATION	0.9997758349205726	WITHOUT_CLASSIFICATION	2.2416507942740638E-4	DEFECT
// SelectorContainer methods	WITHOUT_CLASSIFICATION	0.999964550064562	WITHOUT_CLASSIFICATION	3.544993543801846E-5	DEFECT
// WIN9x uses a bat file for executing commands	WITHOUT_CLASSIFICATION	0.9999096390162845	WITHOUT_CLASSIFICATION	9.036098371545647E-5	DEFECT
// empty path return empty string	WITHOUT_CLASSIFICATION	0.9999859351880714	WITHOUT_CLASSIFICATION	1.4064811928606845E-5	DEFECT
//no command? no string	WITHOUT_CLASSIFICATION	0.999871716586623	WITHOUT_CLASSIFICATION	1.282834133769637E-4	DEFECT
// parse with a simple finite state machine	WITHOUT_CLASSIFICATION	0.9997433230065994	WITHOUT_CLASSIFICATION	2.5667699340062555E-4	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.999836341623313	WITHOUT_CLASSIFICATION	1.6365837668695144E-4	DEFECT
//can't have zero-length token	WITHOUT_CLASSIFICATION	0.9994930470539805	WITHOUT_CLASSIFICATION	5.069529460195194E-4	DEFECT
// we have another token, let's parse it.	WITHOUT_CLASSIFICATION	0.999148906872395	WITHOUT_CLASSIFICATION	8.510931276051314E-4	DEFECT
// should always be the case...	WITHOUT_CLASSIFICATION	0.9997688081871449	WITHOUT_CLASSIFICATION	2.3119181285517846E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */	WITHOUT_CLASSIFICATION	0.9999813063741778	WITHOUT_CLASSIFICATION	1.869362582220797E-5	DEFECT
// ignore: don't trust anyone	WITHOUT_CLASSIFICATION	0.9990133824277958	WITHOUT_CLASSIFICATION	9.866175722041924E-4	DEFECT
// last: don't trust the developer	WITHOUT_CLASSIFICATION	0.999257473419703	WITHOUT_CLASSIFICATION	7.425265802970812E-4	DEFECT
// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.	WITHOUT_CLASSIFICATION	0.9906531234823459	WITHOUT_CLASSIFICATION	0.009346876517654135	DEFECT
// JDK 1.2+ seems to set java.home to the JRE directory.	WITHOUT_CLASSIFICATION	0.9999504083580499	WITHOUT_CLASSIFICATION	4.959164195016604E-5	DEFECT
// Just keep the old version as well and let addExisting // sort it out.	WITHOUT_CLASSIFICATION	0.9999796828319085	WITHOUT_CLASSIFICATION	2.0317168091437744E-5	DEFECT
// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.	WITHOUT_CLASSIFICATION	0.9998951938920787	WITHOUT_CLASSIFICATION	1.0480610792134626E-4	DEFECT
// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.	WITHOUT_CLASSIFICATION	0.9994913837002365	WITHOUT_CLASSIFICATION	5.086162997634772E-4	DEFECT
// Added for MacOS X	WITHOUT_CLASSIFICATION	0.999923531445713	WITHOUT_CLASSIFICATION	7.64685542869932E-5	DEFECT
//remove any null elements	WITHOUT_CLASSIFICATION	0.9998928409838291	WITHOUT_CLASSIFICATION	1.0715901617082422E-4	DEFECT
//create the list	WITHOUT_CLASSIFICATION	0.9999365063060824	WITHOUT_CLASSIFICATION	6.34936939175229E-5	DEFECT
//fill it	WITHOUT_CLASSIFICATION	0.9995124612960633	WITHOUT_CLASSIFICATION	4.8753870393664176E-4	DEFECT
//convert to an array	WITHOUT_CLASSIFICATION	0.9997483468892566	WITHOUT_CLASSIFICATION	2.5165311074343245E-4	DEFECT
// properties are part of the vm options...	WITHOUT_CLASSIFICATION	0.9999732789249713	WITHOUT_CLASSIFICATION	2.6721075028646233E-5	DEFECT
//boot classpath	WITHOUT_CLASSIFICATION	0.9998458198620793	WITHOUT_CLASSIFICATION	1.5418013792069016E-4	DEFECT
//main classpath	WITHOUT_CLASSIFICATION	0.9998458198620793	WITHOUT_CLASSIFICATION	1.5418013792069016E-4	DEFECT
//now any assertions are added	WITHOUT_CLASSIFICATION	0.9999084722678387	WITHOUT_CLASSIFICATION	9.152773216121839E-5	DEFECT
// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.	WITHOUT_CLASSIFICATION	0.9992611879062345	WITHOUT_CLASSIFICATION	7.38812093765504E-4	DEFECT
// cloned system properties	WITHOUT_CLASSIFICATION	0.9998567875051435	WITHOUT_CLASSIFICATION	1.4321249485639567E-4	DEFECT
// classpath is "-classpath <classpath>" -> 2 args	WITHOUT_CLASSIFICATION	0.9953369522922402	WITHOUT_CLASSIFICATION	0.004663047707759825	DEFECT
// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg	WITHOUT_CLASSIFICATION	0.999897191600964	WITHOUT_CLASSIFICATION	1.0280839903587477E-4	DEFECT
// jar execution requires an additional -jar option	WITHOUT_CLASSIFICATION	0.9998785996938443	WITHOUT_CLASSIFICATION	1.214003061556741E-4	DEFECT
/*<? extends EnumeratedAttribute>*/	WITHOUT_CLASSIFICATION	0.9996499735076246	WITHOUT_CLASSIFICATION	3.500264923754273E-4	DEFECT
//end nested class	WITHOUT_CLASSIFICATION	0.9997018599720561	WITHOUT_CLASSIFICATION	2.981400279439217E-4	DEFECT
// Add this PropertySet's nested PropertySets' property names.	WITHOUT_CLASSIFICATION	0.9988841690231993	WITHOUT_CLASSIFICATION	0.0011158309768006483	DEFECT
//make a copy...	WITHOUT_CLASSIFICATION	0.999850358117523	WITHOUT_CLASSIFICATION	1.4964188247705256E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Gotta atleast put in the proper spelling :-P	WITHOUT_CLASSIFICATION	0.9983637099964995	WITHOUT_CLASSIFICATION	0.0016362900035004813	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999404356640935	WITHOUT_CLASSIFICATION	5.9564335906506624E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999404356640935	WITHOUT_CLASSIFICATION	5.9564335906506624E-5	DEFECT
// CheckStyle:MemberNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9997417450041473	WITHOUT_CLASSIFICATION	2.5825499585273634E-4	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9997417450041473	WITHOUT_CLASSIFICATION	2.5825499585273634E-4	DEFECT
//-- Fields ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//-- Methods ---------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996073262518027	WITHOUT_CLASSIFICATION	3.9267374819731027E-4	DEFECT
// CheckStyle:VisibilityModifier OFF	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// may be null if a system property has been added // after the project instance has been initialized	WITHOUT_CLASSIFICATION	0.9998745971356233	WITHOUT_CLASSIFICATION	1.2540286437674828E-4	DEFECT
// Add this PropertySet's property names.	WITHOUT_CLASSIFICATION	0.9994136087299645	WITHOUT_CLASSIFICATION	5.86391270035416E-4	DEFECT
//map the names	WITHOUT_CLASSIFICATION	0.9999387031737266	WITHOUT_CLASSIFICATION	6.129682627338366E-5	DEFECT
// Create one NameEntry in the appropriate pattern list for each // line in the file.	WITHOUT_CLASSIFICATION	0.9999529156898264	WITHOUT_CLASSIFICATION	4.708431017369022E-5	DEFECT
// Get a FileReader	WITHOUT_CLASSIFICATION	0.9999604478480224	WITHOUT_CLASSIFICATION	3.955215197752091E-5	DEFECT
//Ignore exception	WITHOUT_CLASSIFICATION	0.9996998437124344	WITHOUT_CLASSIFICATION	3.0015628756564094E-4	DEFECT
//-- ResourceLocation	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// Add base set of permissions	WITHOUT_CLASSIFICATION	0.9999919055441664	WITHOUT_CLASSIFICATION	8.094455833545356E-6	DEFECT
/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */	WITHOUT_CLASSIFICATION	0.9763008541260624	WITHOUT_CLASSIFICATION	0.023699145873937524	DEFECT
// None of the actions revoked, so all allowed.	WITHOUT_CLASSIFICATION	0.9999694308322208	WITHOUT_CLASSIFICATION	3.0569167779298055E-5	DEFECT
//default true:	WITHOUT_CLASSIFICATION	0.9998529506115005	WITHOUT_CLASSIFICATION	1.470493884995486E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998529506115005	WITHOUT_CLASSIFICATION	1.470493884995486E-4	DEFECT
//default false:	WITHOUT_CLASSIFICATION	0.9998529506115005	WITHOUT_CLASSIFICATION	1.470493884995486E-4	DEFECT
// The regular expression factory	WITHOUT_CLASSIFICATION	0.9999186728564419	WITHOUT_CLASSIFICATION	8.132714355820378E-5	DEFECT
// temporary variable	WITHOUT_CLASSIFICATION	0.999938941128107	WITHOUT_CLASSIFICATION	6.105887189303045E-5	DEFECT
// This is included	WITHOUT_CLASSIFICATION	0.9991408388257504	WITHOUT_CLASSIFICATION	8.591611742495269E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//- ApacheCatalog	WITHOUT_CLASSIFICATION	0.9998386946987325	WITHOUT_CLASSIFICATION	1.613053012674411E-4	DEFECT
// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //	WITHOUT_CLASSIFICATION	0.9616861417231458	WITHOUT_CLASSIFICATION	0.0383138582768541	DEFECT
// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //	WITHOUT_CLASSIFICATION	0.9992100056439279	WITHOUT_CLASSIFICATION	7.899943560720116E-4	DEFECT
// debug // CatalogManager.getStaticManager().setVerbosity(4);	WITHOUT_CLASSIFICATION	0.9998385203441672	WITHOUT_CLASSIFICATION	1.6147965583279583E-4	DEFECT
// Pass in reference to ourselves so we can be called back.	WITHOUT_CLASSIFICATION	0.9999680483112502	WITHOUT_CLASSIFICATION	3.1951688749797944E-5	DEFECT
//-- ApacheCatalogResolver	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//sorted bag impl. borrowed from commons-collections TreeBag:	WITHOUT_CLASSIFICATION	0.9993522312967109	WITHOUT_CLASSIFICATION	6.477687032891767E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999549798702086	WITHOUT_CLASSIFICATION	4.502012979143643E-5	DEFECT
//?	WITHOUT_CLASSIFICATION	0.9993721935431851	WITHOUT_CLASSIFICATION	6.278064568149117E-4	DEFECT
//not using the accessor in this case to avoid side effects	WITHOUT_CLASSIFICATION	0.9996936925535118	WITHOUT_CLASSIFICATION	3.063074464881067E-4	DEFECT
/*package-private*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//new oata.util.ReaderInputStream(new InputStreamReader(	WITHOUT_CLASSIFICATION	0.9995966186458508	WITHOUT_CLASSIFICATION	4.033813541492059E-4	DEFECT
//, encoding), encoding);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//first the easy way, if all children are filesystem-only, return true:	WITHOUT_CLASSIFICATION	0.9999810725897995	WITHOUT_CLASSIFICATION	1.892741020040458E-5	DEFECT
//preserve order-encountered using a list; enforce set logic manually:	WITHOUT_CLASSIFICATION	0.9999690422021006	WITHOUT_CLASSIFICATION	3.095779789938252E-5	DEFECT
/* cached DirectoryScanner instance */	WITHOUT_CLASSIFICATION	0.9999290170487147	WITHOUT_CLASSIFICATION	7.09829512853035E-5	DEFECT
//if no nested, natural order:	WITHOUT_CLASSIFICATION	0.9999711942667769	WITHOUT_CLASSIFICATION	2.8805733223021073E-5	DEFECT
//dummy	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//implement ResourceSelector; inherit doc	WITHOUT_CLASSIFICATION	0.9996067051061729	WITHOUT_CLASSIFICATION	3.9329489382708947E-4	DEFECT
// First, check that all elements are correctly configured	WITHOUT_CLASSIFICATION	0.9998786365496641	WITHOUT_CLASSIFICATION	1.2136345033583522E-4	DEFECT
//if either of them is missing, they are different	WITHOUT_CLASSIFICATION	0.9999484916399479	WITHOUT_CLASSIFICATION	5.150836005215167E-5	DEFECT
// different size =>different files	WITHOUT_CLASSIFICATION	0.9999721120470089	WITHOUT_CLASSIFICATION	2.7887952991105262E-5	DEFECT
//same date if dest timestamp is within granularity of the srcfile	WITHOUT_CLASSIFICATION	0.9995186021365207	WITHOUT_CLASSIFICATION	4.813978634793828E-4	DEFECT
// different dates => different files	WITHOUT_CLASSIFICATION	0.9999560423264677	WITHOUT_CLASSIFICATION	4.3957673532246035E-5	DEFECT
//here do a bulk comparison	WITHOUT_CLASSIFICATION	0.9998851704507888	WITHOUT_CLASSIFICATION	1.148295492111507E-4	DEFECT
// At this point, we know we have a tie.	WITHOUT_CLASSIFICATION	0.9966392089215661	WITHOUT_CLASSIFICATION	0.0033607910784338763	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// If you felt daring, you could cache the basedir absolute path	WITHOUT_CLASSIFICATION	0.9999235958082723	WITHOUT_CLASSIFICATION	7.640419172766412E-5	DEFECT
// Sanity check. Ditch it if you want faster performance	WITHOUT_CLASSIFICATION	0.999955509637512	WITHOUT_CLASSIFICATION	4.449036248791779E-5	DEFECT
// Determine file whose out-of-dateness is to be checked	WITHOUT_CLASSIFICATION	0.9993120367945811	WITHOUT_CLASSIFICATION	6.879632054188137E-4	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9998843502476701	WITHOUT_CLASSIFICATION	1.156497523299523E-4	DEFECT
// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering	WITHOUT_CLASSIFICATION	0.9998843502476701	WITHOUT_CLASSIFICATION	1.156497523299523E-4	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999603370867846	WITHOUT_CLASSIFICATION	3.9662913215437224E-5	DEFECT
// Sanity check	WITHOUT_CLASSIFICATION	0.9999603370867846	WITHOUT_CLASSIFICATION	3.9662913215437224E-5	DEFECT
// Determine file whose existence is to be checked	WITHOUT_CLASSIFICATION	0.999335724504806	WITHOUT_CLASSIFICATION	6.642754951939647E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
// Directory size never selected for	WITHOUT_CLASSIFICATION	0.9999090413374949	WITHOUT_CLASSIFICATION	9.095866250500595E-5	DEFECT
/* You wish! */	WITHOUT_CLASSIFICATION	0.9999153804979053	WITHOUT_CLASSIFICATION	8.461950209480189E-5	DEFECT
// check millis and only set it once.	WITHOUT_CLASSIFICATION	0.9999559897634899	WITHOUT_CLASSIFICATION	4.401023651020776E-5	DEFECT
// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.	WITHOUT_CLASSIFICATION	0.9964858791136403	WITHOUT_CLASSIFICATION	0.003514120886359775	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999742961018497	WITHOUT_CLASSIFICATION	2.570389815017551E-5	DEFECT
// up to first '**'	WITHOUT_CLASSIFICATION	0.9999742961018497	WITHOUT_CLASSIFICATION	2.570389815017551E-5	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9998854403917616	WITHOUT_CLASSIFICATION	1.1455960823847441E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9998854403917616	WITHOUT_CLASSIFICATION	1.1455960823847441E-4	DEFECT
// String is exhausted	WITHOUT_CLASSIFICATION	0.9998854403917616	WITHOUT_CLASSIFICATION	1.1455960823847441E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9993744888256231	WITHOUT_CLASSIFICATION	6.255111743769611E-4	DEFECT
// String not exhausted, but pattern is. Failure.	WITHOUT_CLASSIFICATION	0.9993744888256231	WITHOUT_CLASSIFICATION	6.255111743769611E-4	DEFECT
// up to last '**'	WITHOUT_CLASSIFICATION	0.9999483131106904	WITHOUT_CLASSIFICATION	5.168688930967953E-5	DEFECT
// '**/**' situation, so skip one	WITHOUT_CLASSIFICATION	0.9999785149014145	WITHOUT_CLASSIFICATION	2.1485098585476627E-5	DEFECT
// No '*'s, so we make a shortcut	WITHOUT_CLASSIFICATION	0.999944737388491	WITHOUT_CLASSIFICATION	5.526261150896726E-5	DEFECT
// Pattern and string do not have the same size	WITHOUT_CLASSIFICATION	0.9988043175134643	WITHOUT_CLASSIFICATION	0.001195682486535707	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999182377890744	WITHOUT_CLASSIFICATION	8.176221092554325E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999182377890744	WITHOUT_CLASSIFICATION	8.176221092554325E-5	DEFECT
// String matches against pattern	WITHOUT_CLASSIFICATION	0.9999629246156663	WITHOUT_CLASSIFICATION	3.7075384333750867E-5	DEFECT
// throw BuildException on error	WITHOUT_CLASSIFICATION	0.9970891256785825	WITHOUT_CLASSIFICATION	0.002910874321417372	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999182377890744	WITHOUT_CLASSIFICATION	8.176221092554325E-5	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999232207847957	WITHOUT_CLASSIFICATION	7.677921520433683E-5	DEFECT
// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd	WITHOUT_CLASSIFICATION	0.9999232207847957	WITHOUT_CLASSIFICATION	7.677921520433683E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999182377890744	WITHOUT_CLASSIFICATION	8.176221092554325E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999182377890744	WITHOUT_CLASSIFICATION	8.176221092554325E-5	DEFECT
// Character mismatch	WITHOUT_CLASSIFICATION	0.9999182377890744	WITHOUT_CLASSIFICATION	8.176221092554325E-5	DEFECT
// Pattern contains only '*', which matches anything	WITHOUT_CLASSIFICATION	0.9999075249297673	WITHOUT_CLASSIFICATION	9.247507023262924E-5	DEFECT
// Process characters before first star	WITHOUT_CLASSIFICATION	0.9998828436424151	WITHOUT_CLASSIFICATION	1.1715635758487356E-4	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999586286153445	WITHOUT_CLASSIFICATION	4.137138465566727E-5	DEFECT
// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999586286153445	WITHOUT_CLASSIFICATION	4.137138465566727E-5	DEFECT
// Process characters after last star	WITHOUT_CLASSIFICATION	0.9998844028428229	WITHOUT_CLASSIFICATION	1.1559715717711239E-4	DEFECT
// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.	WITHOUT_CLASSIFICATION	0.9999800389267963	WITHOUT_CLASSIFICATION	1.996107320370181E-5	DEFECT
// Two stars next to each other, skip the first one.	WITHOUT_CLASSIFICATION	0.9997784397710099	WITHOUT_CLASSIFICATION	2.2156022899005686E-4	DEFECT
// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.	WITHOUT_CLASSIFICATION	0.9999586286153445	WITHOUT_CLASSIFICATION	4.137138465566727E-5	DEFECT
/*++*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.	WITHOUT_CLASSIFICATION	0.9997171792059415	WITHOUT_CLASSIFICATION	2.828207940585559E-4	DEFECT
// We know that dynselector must be non-null if no error message	WITHOUT_CLASSIFICATION	0.999961380232376	WITHOUT_CLASSIFICATION	3.8619767623985674E-5	DEFECT
// Deal with if and unless properties first	WITHOUT_CLASSIFICATION	0.9999589234487158	WITHOUT_CLASSIFICATION	4.107655128413821E-5	DEFECT
// -----  attributes  -----	WITHOUT_CLASSIFICATION	0.9999120301657884	WITHOUT_CLASSIFICATION	8.796983421163896E-5	DEFECT
// ----- internal member variables -----	WITHOUT_CLASSIFICATION	0.9998157502579565	WITHOUT_CLASSIFICATION	1.8424974204351256E-4	DEFECT
// -----  constructors  -----	WITHOUT_CLASSIFICATION	0.9998442854529254	WITHOUT_CLASSIFICATION	1.557145470746275E-4	DEFECT
// ----- configuration  -----	WITHOUT_CLASSIFICATION	0.9998483618744402	WITHOUT_CLASSIFICATION	1.5163812555971486E-4	DEFECT
// normal use inside Ant	WITHOUT_CLASSIFICATION	0.9998090431213775	WITHOUT_CLASSIFICATION	1.909568786223836E-4	DEFECT
// set self as a BuildListener to delay cachefile saves	WITHOUT_CLASSIFICATION	0.9999799474973977	WITHOUT_CLASSIFICATION	2.0052502602329842E-5	DEFECT
// no reference to project - e.g. during normal JUnit tests	WITHOUT_CLASSIFICATION	0.9992629522739367	WITHOUT_CLASSIFICATION	7.370477260633303E-4	DEFECT
// this is a *.* parameter for later use	WITHOUT_CLASSIFICATION	0.9965043799617717	WITHOUT_CLASSIFICATION	0.0034956200382282414	DEFECT
// specify the algorithm classname	WITHOUT_CLASSIFICATION	0.999617178288517	WITHOUT_CLASSIFICATION	3.8282171148293245E-4	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9998621183737888	WITHOUT_CLASSIFICATION	1.3788162621117966E-4	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9997091453008761	WITHOUT_CLASSIFICATION	2.9085469912399936E-4	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999417944903188	WITHOUT_CLASSIFICATION	5.820550968110947E-5	DEFECT
// else nothing to do	WITHOUT_CLASSIFICATION	0.9999554876260686	WITHOUT_CLASSIFICATION	4.451237393148499E-5	DEFECT
// use Algorithm defined via name	WITHOUT_CLASSIFICATION	0.9998621183737888	WITHOUT_CLASSIFICATION	1.3788162621117966E-4	DEFECT
// // -----  Set the main attributes, pattern '*'  ----- //	WITHOUT_CLASSIFICATION	0.9998436233736993	WITHOUT_CLASSIFICATION	1.5637662630073185E-4	DEFECT
// use Algorithm specified by classname	WITHOUT_CLASSIFICATION	0.9997091453008761	WITHOUT_CLASSIFICATION	2.9085469912399936E-4	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999417944903188	WITHOUT_CLASSIFICATION	5.820550968110947E-5	DEFECT
// specify the cache classname	WITHOUT_CLASSIFICATION	0.9999687011828559	WITHOUT_CLASSIFICATION	3.1298817144196896E-5	DEFECT
// use Cache defined via name	WITHOUT_CLASSIFICATION	0.9998830984362501	WITHOUT_CLASSIFICATION	1.1690156374988236E-4	DEFECT
// use Cache specified by classname	WITHOUT_CLASSIFICATION	0.9995065300452293	WITHOUT_CLASSIFICATION	4.934699547706394E-4	DEFECT
// specify the comparator classname	WITHOUT_CLASSIFICATION	0.9999065596923681	WITHOUT_CLASSIFICATION	9.344030763199042E-5	DEFECT
// // -----  Set the special attributes, pattern '*.*'  ----- //	WITHOUT_CLASSIFICATION	0.9997649183191251	WITHOUT_CLASSIFICATION	2.3508168087492637E-4	DEFECT
// load the specified class	WITHOUT_CLASSIFICATION	0.9999460526909622	WITHOUT_CLASSIFICATION	5.3947309037845157E-5	DEFECT
// -----  the selection work  -----	WITHOUT_CLASSIFICATION	0.995015011789575	WITHOUT_CLASSIFICATION	0.0049849882104250716	DEFECT
// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.	WITHOUT_CLASSIFICATION	0.9998448758186159	WITHOUT_CLASSIFICATION	1.551241813841307E-4	DEFECT
// You can not compute a value for a directory	WITHOUT_CLASSIFICATION	0.9991203800390328	WITHOUT_CLASSIFICATION	8.796199609672329E-4	DEFECT
// Get the values and do the comparison	WITHOUT_CLASSIFICATION	0.9999835148824153	WITHOUT_CLASSIFICATION	1.648511758472446E-5	DEFECT
// Maybe update the cache	WITHOUT_CLASSIFICATION	0.9999842115690022	WITHOUT_CLASSIFICATION	1.5788430997774493E-5	DEFECT
// -----  attribute and nested element support  -----	WITHOUT_CLASSIFICATION	0.9987160342174359	WITHOUT_CLASSIFICATION	0.001283965782564163	DEFECT
// the usual classloader	WITHOUT_CLASSIFICATION	0.9999470882864248	WITHOUT_CLASSIFICATION	5.291171357516774E-5	DEFECT
// additional use the provided classpath	WITHOUT_CLASSIFICATION	0.9998503966529866	WITHOUT_CLASSIFICATION	1.496033470134527E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// ----- 'beautiful' output -----	WITHOUT_CLASSIFICATION	0.999882116425638	WITHOUT_CLASSIFICATION	1.1788357436203676E-4	DEFECT
// ----- BuildListener interface methods -----	WITHOUT_CLASSIFICATION	0.9999505955889035	WITHOUT_CLASSIFICATION	4.9404411096491595E-5	DEFECT
// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.	WITHOUT_CLASSIFICATION	0.9980298952323202	WITHOUT_CLASSIFICATION	0.001970104767679762	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9995201281124435	WITHOUT_CLASSIFICATION	4.798718875564196E-4	DEFECT
// -----  member variables  -----	WITHOUT_CLASSIFICATION	0.9995201281124435	WITHOUT_CLASSIFICATION	4.798718875564196E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9996737537166268	WITHOUT_CLASSIFICATION	3.2624628337315836E-4	DEFECT
// -----  Algorithm-Configuration  -----	WITHOUT_CLASSIFICATION	0.9996737537166268	WITHOUT_CLASSIFICATION	3.2624628337315836E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9998369770948492	WITHOUT_CLASSIFICATION	1.630229051506982E-4	DEFECT
// -----  Logic  -----	WITHOUT_CLASSIFICATION	0.9998369770948492	WITHOUT_CLASSIFICATION	1.630229051506982E-4	DEFECT
// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint	WITHOUT_CLASSIFICATION	0.9985906153763264	WITHOUT_CLASSIFICATION	0.0014093846236736265	DEFECT
// Read the file	WITHOUT_CLASSIFICATION	0.9999649843303117	WITHOUT_CLASSIFICATION	3.501566968832532E-5	DEFECT
// -----  member variables - configuration  -----	WITHOUT_CLASSIFICATION	0.9993609080723973	WITHOUT_CLASSIFICATION	6.39091927602638E-4	DEFECT
// -----  member variables - internal use  -----	WITHOUT_CLASSIFICATION	0.9985481672751841	WITHOUT_CLASSIFICATION	0.0014518327248158828	DEFECT
// -----  Constructors  -----	WITHOUT_CLASSIFICATION	0.9998389721934681	WITHOUT_CLASSIFICATION	1.610278065319363E-4	DEFECT
// -----  Cache-Configuration  -----	WITHOUT_CLASSIFICATION	0.9996737537166268	WITHOUT_CLASSIFICATION	3.2624628337315836E-4	DEFECT
// -----  Data Access	WITHOUT_CLASSIFICATION	0.9998389892786577	WITHOUT_CLASSIFICATION	1.6101072134233916E-4	DEFECT
// after loading the cache is up to date with the file	WITHOUT_CLASSIFICATION	0.9998561565505497	WITHOUT_CLASSIFICATION	1.4384344945028534E-4	DEFECT
// -----  additional  -----	WITHOUT_CLASSIFICATION	0.9999020460822533	WITHOUT_CLASSIFICATION	9.795391774665177E-5	DEFECT
// swallow as this simply doesn't seem to be Kaffe	WITHOUT_CLASSIFICATION	0.9998112308932967	WITHOUT_CLASSIFICATION	1.8876910670319455E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9993143005611279	WITHOUT_CLASSIFICATION	6.856994388721129E-4	DEFECT
// either end of buffer or a line separator char	WITHOUT_CLASSIFICATION	0.9998578154158099	WITHOUT_CLASSIFICATION	1.421845841901069E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.	WITHOUT_CLASSIFICATION	0.9981496104651194	WITHOUT_CLASSIFICATION	0.0018503895348806663	DEFECT
// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.	WITHOUT_CLASSIFICATION	0.9999134775508604	WITHOUT_CLASSIFICATION	8.652244913970691E-5	DEFECT
//log uptodateness of all targets:	WITHOUT_CLASSIFICATION	0.9993989848251718	WITHOUT_CLASSIFICATION	6.01015174828228E-4	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// this should not happen, because the lines are // returned with the end of line delimiter	WITHOUT_CLASSIFICATION	0.9872027891784575	WITHOUT_CLASSIFICATION	0.012797210821542438	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// two not existing files are equal	WITHOUT_CLASSIFICATION	0.9999096150401074	WITHOUT_CLASSIFICATION	9.038495989257015E-5	DEFECT
// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?	WITHOUT_CLASSIFICATION	0.9997278078904498	WITHOUT_CLASSIFICATION	2.721921095501956E-4	DEFECT
// don't want to compare directory contents for now	WITHOUT_CLASSIFICATION	0.9998996628788842	WITHOUT_CLASSIFICATION	1.0033712111579027E-4	DEFECT
//as far as we know	WITHOUT_CLASSIFICATION	0.999960141203511	WITHOUT_CLASSIFICATION	3.985879648899759E-5	DEFECT
//ignore release of an already-closed funnel	WITHOUT_CLASSIFICATION	0.9996428969630792	WITHOUT_CLASSIFICATION	3.571030369208134E-4	DEFECT
// Write child elements and text	WITHOUT_CLASSIFICATION	0.9999835290338827	WITHOUT_CLASSIFICATION	1.6470966117331352E-5	DEFECT
// Write indent characters	WITHOUT_CLASSIFICATION	0.9999219666089926	WITHOUT_CLASSIFICATION	7.803339100736635E-5	DEFECT
// Write element	WITHOUT_CLASSIFICATION	0.9999504447558661	WITHOUT_CLASSIFICATION	4.955524413387966E-5	DEFECT
// steal default namespace	WITHOUT_CLASSIFICATION	0.9999910348444802	WITHOUT_CLASSIFICATION	8.965155519852697E-6	DEFECT
// Write attributes	WITHOUT_CLASSIFICATION	0.9999657574795273	WITHOUT_CLASSIFICATION	3.424252047260003E-5	DEFECT
// Write element close	WITHOUT_CLASSIFICATION	0.9999863603683632	WITHOUT_CLASSIFICATION	1.3639631636832145E-5	DEFECT
// relative path	WITHOUT_CLASSIFICATION	0.999967923469795	WITHOUT_CLASSIFICATION	3.207653020490829E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try	WITHOUT_CLASSIFICATION	0.9999977493104931	WITHOUT_CLASSIFICATION	2.250689506945988E-6	DEFECT
// swallow as we've hit the max class version that // we have	WITHOUT_CLASSIFICATION	0.9998118255896801	WITHOUT_CLASSIFICATION	1.8817441031993416E-4	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9988067516393836	WITHOUT_CLASSIFICATION	0.001193248360616348	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9998488288601152	WITHOUT_CLASSIFICATION	1.5117113988477569E-4	DEFECT
// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.	WITHOUT_CLASSIFICATION	0.9998488288601152	WITHOUT_CLASSIFICATION	1.5117113988477569E-4	DEFECT
// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.	WITHOUT_CLASSIFICATION	0.9996732620817781	WITHOUT_CLASSIFICATION	3.267379182218984E-4	DEFECT
// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's	WITHOUT_CLASSIFICATION	0.9999818468702837	WITHOUT_CLASSIFICATION	1.8153129716331057E-5	DEFECT
// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.	WITHOUT_CLASSIFICATION	0.998948011270917	WITHOUT_CLASSIFICATION	0.001051988729082869	DEFECT
//In Java1.5, the apache stuff moved.	WITHOUT_CLASSIFICATION	0.9998694662947989	WITHOUT_CLASSIFICATION	1.305337052011209E-4	DEFECT
//fall through.	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999518798867276	WITHOUT_CLASSIFICATION	4.812011327225957E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999518798867276	WITHOUT_CLASSIFICATION	4.812011327225957E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999518798867276	WITHOUT_CLASSIFICATION	4.812011327225957E-5	DEFECT
// are there any here that we forgot? // fall through	WITHOUT_CLASSIFICATION	0.999899085650099	WITHOUT_CLASSIFICATION	1.0091434990095562E-4	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9997841416114406	WITHOUT_CLASSIFICATION	2.1585838855933207E-4	DEFECT
//things like sun.reflection, sun.misc, sun.net	WITHOUT_CLASSIFICATION	0.9997841416114406	WITHOUT_CLASSIFICATION	2.1585838855933207E-4	DEFECT
//Strip '.' token	WITHOUT_CLASSIFICATION	0.9998830264751681	WITHOUT_CLASSIFICATION	1.1697352483192665E-4	DEFECT
//If it ended in a dot, throw an exception	WITHOUT_CLASSIFICATION	0.9960280186623048	WITHOUT_CLASSIFICATION	0.003971981337695109	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999490288655358	WITHOUT_CLASSIFICATION	5.097113446422269E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999490288655358	WITHOUT_CLASSIFICATION	5.097113446422269E-5	DEFECT
// Exact match	WITHOUT_CLASSIFICATION	0.9999490288655358	WITHOUT_CLASSIFICATION	5.097113446422269E-5	DEFECT
// might read too much	WITHOUT_CLASSIFICATION	0.9999860915721186	WITHOUT_CLASSIFICATION	1.390842788144189E-5	DEFECT
// would be imprecise	WITHOUT_CLASSIFICATION	0.9989654054811509	WITHOUT_CLASSIFICATION	0.0010345945188491312	DEFECT
//last character isn't a digit	WITHOUT_CLASSIFICATION	0.9998796631372378	WITHOUT_CLASSIFICATION	1.2033686276214724E-4	DEFECT
// write out the number of characters encoded in this line.	WITHOUT_CLASSIFICATION	0.9981400347645337	WITHOUT_CLASSIFICATION	0.0018599652354662926	DEFECT
// set the padding defaults	WITHOUT_CLASSIFICATION	0.999982963909019	WITHOUT_CLASSIFICATION	1.7036090981045296E-5	DEFECT
// get the next 3 bytes (if we have them)	WITHOUT_CLASSIFICATION	0.9987398665272917	WITHOUT_CLASSIFICATION	0.0012601334727082509	DEFECT
// OK, Java 1.3.	WITHOUT_CLASSIFICATION	0.9999861948715173	WITHOUT_CLASSIFICATION	1.3805128482614387E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ConstantNameCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// #8031: first try Java 1.4.	WITHOUT_CLASSIFICATION	0.9999957792453414	WITHOUT_CLASSIFICATION	4.220754658603788E-6	DEFECT
// Reflection problems? Should not happen, debug.	WITHOUT_CLASSIFICATION	0.9996137887456495	WITHOUT_CLASSIFICATION	3.862112543503547E-4	DEFECT
// CheckStyle:ParameterNumberCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:ParameterNumberCheck ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// depending on the implementation the actual RE won't // get instantiated in the constructor.	WITHOUT_CLASSIFICATION	0.9996143228200601	WITHOUT_CLASSIFICATION	3.8567717993987806E-4	DEFECT
// terminate with a linefeed alone	WITHOUT_CLASSIFICATION	0.9997018650720433	WITHOUT_CLASSIFICATION	2.981349279567767E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63	WITHOUT_CLASSIFICATION	0.999842841746032	WITHOUT_CLASSIFICATION	1.5715825396803832E-4	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999627565933177	WITHOUT_CLASSIFICATION	3.7243406682329816E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999627565933177	WITHOUT_CLASSIFICATION	3.7243406682329816E-5	DEFECT
// store the octets	WITHOUT_CLASSIFICATION	0.9999627565933177	WITHOUT_CLASSIFICATION	3.7243406682329816E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997667403793568	WITHOUT_CLASSIFICATION	2.3325962064325972E-4	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9997667403793568	WITHOUT_CLASSIFICATION	2.3325962064325972E-4	DEFECT
// magic property	WITHOUT_CLASSIFICATION	0.9998102820327145	WITHOUT_CLASSIFICATION	1.8971796728545746E-4	DEFECT
//only text nodes that are non null after property expansion are added	WITHOUT_CLASSIFICATION	0.9997077030590307	WITHOUT_CLASSIFICATION	2.922969409693157E-4	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9995106547770134	WITHOUT_CLASSIFICATION	4.893452229865984E-4	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999452703310208	WITHOUT_CLASSIFICATION	5.472966897930753E-5	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//Empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//get some non-crypto-grade randomness from various places.	WITHOUT_CLASSIFICATION	0.9991528612031088	WITHOUT_CLASSIFICATION	8.471387968912531E-4	DEFECT
// Cannot resolve it, so skip it.	WITHOUT_CLASSIFICATION	0.999977174463497	WITHOUT_CLASSIFICATION	2.2825536502998246E-5	DEFECT
// plain component	WITHOUT_CLASSIFICATION	0.9999227965521688	WITHOUT_CLASSIFICATION	7.720344783125301E-5	DEFECT
// make sure we are dealing with an absolute path	WITHOUT_CLASSIFICATION	0.9999637581016367	WITHOUT_CLASSIFICATION	3.6241898363301956E-5	DEFECT
//remove the initial separator; the root has it.	WITHOUT_CLASSIFICATION	0.9992711245276273	WITHOUT_CLASSIFICATION	7.288754723727028E-4	DEFECT
// UNC drive	WITHOUT_CLASSIFICATION	0.9999396911616111	WITHOUT_CLASSIFICATION	6.0308838389042455E-5	DEFECT
// format: "DEVICE:[DIR.SUBDIR]FILE"	WITHOUT_CLASSIFICATION	0.9998371852491174	WITHOUT_CLASSIFICATION	1.628147508826875E-4	DEFECT
// treat directories specified using .DIR syntax as files	WITHOUT_CLASSIFICATION	0.9999816958350634	WITHOUT_CLASSIFICATION	1.8304164936650807E-5	DEFECT
// add an extra slash for filesystems with drive-specifiers	WITHOUT_CLASSIFICATION	0.999915971090442	WITHOUT_CLASSIFICATION	8.402890955803867E-5	DEFECT
//do a check for the destination file existing	WITHOUT_CLASSIFICATION	0.9999375150272277	WITHOUT_CLASSIFICATION	6.248497277229205E-5	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999499781546459	WITHOUT_CLASSIFICATION	5.002184535409508E-5	DEFECT
// do nothing by default	WITHOUT_CLASSIFICATION	0.9999959492069568	WITHOUT_CLASSIFICATION	4.050793043173977E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// now recover all the dependencies collected and add to the list.	WITHOUT_CLASSIFICATION	0.9999550786935452	WITHOUT_CLASSIFICATION	4.492130645491977E-5	DEFECT
//inherit doc	WITHOUT_CLASSIFICATION	0.999836341623313	WITHOUT_CLASSIFICATION	1.6365837668695144E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// do not close the stream	WITHOUT_CLASSIFICATION	0.9999452703310208	WITHOUT_CLASSIFICATION	5.472966897930753E-5	DEFECT
// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...	WITHOUT_CLASSIFICATION	0.9997548668274778	WITHOUT_CLASSIFICATION	2.451331725221686E-4	DEFECT
// not before the filesystem root and not after it, since root // already contains one	WITHOUT_CLASSIFICATION	0.9998957161435259	WITHOUT_CLASSIFICATION	1.0428385647416823E-4	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999774608482616	WITHOUT_CLASSIFICATION	2.253915173845735E-5	DEFECT
// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar	WITHOUT_CLASSIFICATION	0.9999774608482616	WITHOUT_CLASSIFICATION	2.253915173845735E-5	DEFECT
// build the path stack info to compare	WITHOUT_CLASSIFICATION	0.9997777175842846	WITHOUT_CLASSIFICATION	2.2228241571532493E-4	DEFECT
// not the same device (would be "" on Linux/Unix)	WITHOUT_CLASSIFICATION	0.9984575930257743	WITHOUT_CLASSIFICATION	0.0015424069742257024	DEFECT
// no comparison possible	WITHOUT_CLASSIFICATION	0.9999568518655275	WITHOUT_CLASSIFICATION	4.31481344723807E-5	DEFECT
// get index of parts which are equal	WITHOUT_CLASSIFICATION	0.999947485795379	WITHOUT_CLASSIFICATION	5.251420462106978E-5	DEFECT
// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths	WITHOUT_CLASSIFICATION	0.9999957416718449	WITHOUT_CLASSIFICATION	4.2583281550295675E-6	DEFECT
// fill it up path with parts which were not equal	WITHOUT_CLASSIFICATION	0.9998903248452115	WITHOUT_CLASSIFICATION	1.0967515478855426E-4	DEFECT
// can safely use '/' because Windows understands '/' as separator	WITHOUT_CLASSIFICATION	0.9999097524611863	WITHOUT_CLASSIFICATION	9.024753881364833E-5	DEFECT
// base directory of the fileset	WITHOUT_CLASSIFICATION	0.9999585745920111	WITHOUT_CLASSIFICATION	4.142540798882716E-5	DEFECT
// build the list of sources which are out of date with // respect to the target	WITHOUT_CLASSIFICATION	0.9999766808712599	WITHOUT_CLASSIFICATION	2.3319128740130164E-5	DEFECT
// code from Magesh moved from DefaultLogger and slightly modified	WITHOUT_CLASSIFICATION	0.9998935734678427	WITHOUT_CLASSIFICATION	1.0642653215739179E-4	DEFECT
//if you cannot read it, you won't be able to write it either	WITHOUT_CLASSIFICATION	0.9996769211433699	WITHOUT_CLASSIFICATION	3.230788566300186E-4	DEFECT
// must be a zip of some sort	WITHOUT_CLASSIFICATION	0.9999622316313781	WITHOUT_CLASSIFICATION	3.7768368621869E-5	DEFECT
// does the class have a package structure	WITHOUT_CLASSIFICATION	0.9996385587969754	WITHOUT_CLASSIFICATION	3.614412030246025E-4	DEFECT
// check if the package structure is more than 1 level deep	WITHOUT_CLASSIFICATION	0.9999362162429023	WITHOUT_CLASSIFICATION	6.378375709773983E-5	DEFECT
// class name has more than 1 package level 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9996405088512043	WITHOUT_CLASSIFICATION	3.594911487956996E-4	DEFECT
// class name has only 1 package level 'package.Class'	WITHOUT_CLASSIFICATION	0.9996526082377943	WITHOUT_CLASSIFICATION	3.4739176220567716E-4	DEFECT
// Add the class in dotted notation 'com.company.Class'	WITHOUT_CLASSIFICATION	0.9999526045178687	WITHOUT_CLASSIFICATION	4.739548213117938E-5	DEFECT
// Add a class with no package 'Class'	WITHOUT_CLASSIFICATION	0.9999842459648169	WITHOUT_CLASSIFICATION	1.5754035183123842E-5	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999361309750132	WITHOUT_CLASSIFICATION	6.386902498686613E-5	DEFECT
// force BCEL classes to load now	WITHOUT_CLASSIFICATION	0.9999361309750132	WITHOUT_CLASSIFICATION	6.386902498686613E-5	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999996723366789	WITHOUT_CLASSIFICATION	3.2766332122111667E-7	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999499781546459	WITHOUT_CLASSIFICATION	5.002184535409508E-5	DEFECT
//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.	WITHOUT_CLASSIFICATION	0.9999196696020899	WITHOUT_CLASSIFICATION	8.033039791011546E-5	DEFECT
// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry	WITHOUT_CLASSIFICATION	0.9999708409313876	WITHOUT_CLASSIFICATION	2.9159068612342946E-5	DEFECT
// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free	WITHOUT_CLASSIFICATION	0.9999630255522647	WITHOUT_CLASSIFICATION	3.6974447735203414E-5	DEFECT
// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class	WITHOUT_CLASSIFICATION	0.999983159851455	WITHOUT_CLASSIFICATION	1.684014854496969E-5	DEFECT
// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.	WITHOUT_CLASSIFICATION	0.9990330848502782	WITHOUT_CLASSIFICATION	9.669151497218219E-4	DEFECT
// execute the script	WITHOUT_CLASSIFICATION	0.9999499781546459	WITHOUT_CLASSIFICATION	5.002184535409508E-5	DEFECT
// translate \1 to $1 so that the Perl5Substitution will work	WITHOUT_CLASSIFICATION	0.9983713391748841	WITHOUT_CLASSIFICATION	0.0016286608251158963	DEFECT
// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible	WITHOUT_CLASSIFICATION	0.9993367481992637	WITHOUT_CLASSIFICATION	6.632518007362889E-4	DEFECT
// no permission here	WITHOUT_CLASSIFICATION	0.9999126287753297	WITHOUT_CLASSIFICATION	8.737122467021554E-5	DEFECT
// compute the compiler options based on the input options first	WITHOUT_CLASSIFICATION	0.9999452847826968	WITHOUT_CLASSIFICATION	5.471521730306997E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999872822201497	WITHOUT_CLASSIFICATION	1.2717779850370817E-5	DEFECT
// be strict about line separator	WITHOUT_CLASSIFICATION	0.9995110903570671	WITHOUT_CLASSIFICATION	4.8890964293293E-4	DEFECT
// translate \1 to $(1) so that the Matcher will work	WITHOUT_CLASSIFICATION	0.9983713391748841	WITHOUT_CLASSIFICATION	0.0016286608251158963	DEFECT
// Do the substitution	WITHOUT_CLASSIFICATION	0.9999840435666221	WITHOUT_CLASSIFICATION	1.5956433377926882E-5	DEFECT
// replace \1 with the corresponding group	WITHOUT_CLASSIFICATION	0.9999031573131878	WITHOUT_CLASSIFICATION	9.684268681212431E-5	DEFECT
/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */	WITHOUT_CLASSIFICATION	0.999974898170455	WITHOUT_CLASSIFICATION	2.510182954500765E-5	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9985291590501821	WITHOUT_CLASSIFICATION	0.0014708409498177828	DEFECT
/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */	WITHOUT_CLASSIFICATION	0.9985291590501821	WITHOUT_CLASSIFICATION	0.0014708409498177828	DEFECT
//        blockNo++;	WITHOUT_CLASSIFICATION	0.9998669981596916	WITHOUT_CLASSIFICATION	1.3300184030840776E-4	DEFECT
// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //	WITHOUT_CLASSIFICATION	0.9997946128913003	WITHOUT_CLASSIFICATION	2.0538710869971561E-4	DEFECT
/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */	WITHOUT_CLASSIFICATION	0.9998891645551985	WITHOUT_CLASSIFICATION	1.1083544480152183E-4	DEFECT
//        ch = 0;	WITHOUT_CLASSIFICATION	0.999899494076492	WITHOUT_CLASSIFICATION	1.0050592350795742E-4	DEFECT
/* 20 is just a paranoia constant */	WITHOUT_CLASSIFICATION	0.9998579831789048	WITHOUT_CLASSIFICATION	1.4201682109509054E-4	DEFECT
// empty block at end of file	WITHOUT_CLASSIFICATION	0.999981296937387	WITHOUT_CLASSIFICATION	1.8703062612977608E-5	DEFECT
/* sort the block and establish posn of original string */	WITHOUT_CLASSIFICATION	0.9998536686222571	WITHOUT_CLASSIFICATION	1.4633137774281072E-4	DEFECT
/* Now the block's CRC, so it is in a known place. */	WITHOUT_CLASSIFICATION	0.9999266080648918	WITHOUT_CLASSIFICATION	7.339193510829912E-5	DEFECT
/* Now a single bit indicating randomisation. */	WITHOUT_CLASSIFICATION	0.9998368587064257	WITHOUT_CLASSIFICATION	1.631412935742802E-4	DEFECT
/* Finally, block's contents proper. */	WITHOUT_CLASSIFICATION	0.9999175023037763	WITHOUT_CLASSIFICATION	8.249769622364397E-5	DEFECT
/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */	WITHOUT_CLASSIFICATION	0.9999567701934362	WITHOUT_CLASSIFICATION	4.322980656372035E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
/* Decide how many coding tables to use */	WITHOUT_CLASSIFICATION	0.9877980267154841	WITHOUT_CLASSIFICATION	0.012201973284515779	DEFECT
/* Generate an initial set of coding tables */	WITHOUT_CLASSIFICATION	0.9999471636450065	WITHOUT_CLASSIFICATION	5.283635499358744E-5	DEFECT
/*          Iterate up to N_ITERS times to improve the tables.        */	WITHOUT_CLASSIFICATION	0.999862853228539	WITHOUT_CLASSIFICATION	1.3714677146108123E-4	DEFECT
/* Compute MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9998927057990128	WITHOUT_CLASSIFICATION	1.0729420098717545E-4	DEFECT
/* Assign actual codes for the tables. */	WITHOUT_CLASSIFICATION	0.9998869256259683	WITHOUT_CLASSIFICATION	1.1307437403171594E-4	DEFECT
/* Transmit the mapping table. */	WITHOUT_CLASSIFICATION	0.9993501291229588	WITHOUT_CLASSIFICATION	6.498708770411907E-4	DEFECT
/* Now the selectors. */	WITHOUT_CLASSIFICATION	0.9999347397332754	WITHOUT_CLASSIFICATION	6.52602667246204E-5	DEFECT
/* Now the coding tables. */	WITHOUT_CLASSIFICATION	0.9999347397332754	WITHOUT_CLASSIFICATION	6.52602667246204E-5	DEFECT
/* And finally, the block data proper */	WITHOUT_CLASSIFICATION	0.9975844323371129	WITHOUT_CLASSIFICATION	0.0024155676628870785	DEFECT
/* Set group start & end marks. */	WITHOUT_CLASSIFICATION	0.999877141472714	WITHOUT_CLASSIFICATION	1.2285852728606908E-4	DEFECT
/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */	WITHOUT_CLASSIFICATION	0.9998994454470561	WITHOUT_CLASSIFICATION	1.0055455294394607E-4	DEFECT
// unrolled version of the else-block	WITHOUT_CLASSIFICATION	0.9995460829009396	WITHOUT_CLASSIFICATION	4.5391709906050104E-4	DEFECT
/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */	WITHOUT_CLASSIFICATION	0.9987728292932296	WITHOUT_CLASSIFICATION	0.0012271707067703615	DEFECT
/*                  Increment the symbol frequencies for the selected table.                */	WITHOUT_CLASSIFICATION	0.9998681316760403	WITHOUT_CLASSIFICATION	1.3186832395977184E-4	DEFECT
/*              Recompute the tables based on the accumulated frequencies.            */	WITHOUT_CLASSIFICATION	0.9995421747747896	WITHOUT_CLASSIFICATION	4.578252252104513E-4	DEFECT
// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);	WITHOUT_CLASSIFICATION	0.998983513569262	WITHOUT_CLASSIFICATION	0.0010164864307379915	DEFECT
// inlined: bsW(1, 1);	WITHOUT_CLASSIFICATION	0.999918447218297	WITHOUT_CLASSIFICATION	8.155278170294767E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999184431213548	WITHOUT_CLASSIFICATION	8.1556878645246E-5	DEFECT
// inlined: bsW(1, 0);	WITHOUT_CLASSIFICATION	0.9999184431213548	WITHOUT_CLASSIFICATION	8.1556878645246E-5	DEFECT
//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9995496086971688	WITHOUT_CLASSIFICATION	4.5039130283122127E-4	DEFECT
// inlined: bsW(5, curr);	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// inlined: bsW(2, 2);	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/* 10 */	WITHOUT_CLASSIFICATION	0.999741740650955	WITHOUT_CLASSIFICATION	2.5825934904500687E-4	DEFECT
// inlined: bsW(2, 3);	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/* 11 */	WITHOUT_CLASSIFICATION	0.9996867422588552	WITHOUT_CLASSIFICATION	3.132577411447402E-4	DEFECT
// copy	WITHOUT_CLASSIFICATION	0.9996415810876563	WITHOUT_CLASSIFICATION	3.5841891234365835E-4	DEFECT
// start inline mainGTU	WITHOUT_CLASSIFICATION	0.9998766973242854	WITHOUT_CLASSIFICATION	1.2330267571461186E-4	DEFECT
// following could be done in a loop, but // unrolled it for performance:	WITHOUT_CLASSIFICATION	0.9996819742072897	WITHOUT_CLASSIFICATION	3.1802579271035877E-4	DEFECT
// while x > 0	WITHOUT_CLASSIFICATION	0.9999344972023034	WITHOUT_CLASSIFICATION	6.55027976965766E-5	DEFECT
// Set up the 2-byte frequency table	WITHOUT_CLASSIFICATION	0.9999323484420922	WITHOUT_CLASSIFICATION	6.765155790784417E-5	DEFECT
/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */	WITHOUT_CLASSIFICATION	0.9969714180538162	WITHOUT_CLASSIFICATION	0.003028581946183875	DEFECT
// Complete the initial radix sort:	WITHOUT_CLASSIFICATION	0.9998742222815177	WITHOUT_CLASSIFICATION	1.2577771848235094E-4	DEFECT
/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */	WITHOUT_CLASSIFICATION	0.9997945329136085	WITHOUT_CLASSIFICATION	2.0546708639145739E-4	DEFECT
/*              The main sorting loop.        */	WITHOUT_CLASSIFICATION	0.9996194769370421	WITHOUT_CLASSIFICATION	3.8052306295785195E-4	DEFECT
/*                  Process big buckets, starting with the least full.            */	WITHOUT_CLASSIFICATION	0.9995843354186085	WITHOUT_CLASSIFICATION	4.156645813915785E-4	DEFECT
// Step 1:	WITHOUT_CLASSIFICATION	0.9997580270295042	WITHOUT_CLASSIFICATION	2.4197297049586243E-4	DEFECT
// Step 3:	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// handle 16 bit signed numbers	WITHOUT_CLASSIFICATION	0.9999861353541617	WITHOUT_CLASSIFICATION	1.3864645838444363E-5	DEFECT
// make maps	WITHOUT_CLASSIFICATION	0.9998550036591403	WITHOUT_CLASSIFICATION	1.449963408597565E-4	DEFECT
/* directory with respect to       */	WITHOUT_CLASSIFICATION	0.9988441564113179	WITHOUT_CLASSIFICATION	0.0011558435886822038	DEFECT
// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte	WITHOUT_CLASSIFICATION	0.999639935109653	WITHOUT_CLASSIFICATION	3.600648903470089E-4	DEFECT
//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte	WITHOUT_CLASSIFICATION	0.9999089372099013	WITHOUT_CLASSIFICATION	9.106279009873083E-5	DEFECT
//    4000 byte //    4000 byte //    4000 byte	WITHOUT_CLASSIFICATION	0.9997369071090272	WITHOUT_CLASSIFICATION	2.6309289097290893E-4	DEFECT
//    1024 byte //    1024 byte //     256 byte	WITHOUT_CLASSIFICATION	0.9997369071090272	WITHOUT_CLASSIFICATION	2.6309289097290893E-4	DEFECT
//    1040 byte //    2064 byte //    2064 byte	WITHOUT_CLASSIFICATION	0.9997369071090272	WITHOUT_CLASSIFICATION	2.6309289097290893E-4	DEFECT
//  262148 byte // ------------ //  333408 byte	WITHOUT_CLASSIFICATION	0.9997451765871667	WITHOUT_CLASSIFICATION	2.548234128333188E-4	DEFECT
// Just print a message, like the previous versions of this class did	WITHOUT_CLASSIFICATION	0.9999543706891816	WITHOUT_CLASSIFICATION	4.5629310818512305E-5	DEFECT
// Variables used by setup* methods exclusively	WITHOUT_CLASSIFICATION	0.9999880828397795	WITHOUT_CLASSIFICATION	1.1917160220585978E-5	DEFECT
// currBlockNo++;	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// A bad CRC is considered a fatal error.	WITHOUT_CLASSIFICATION	0.9994317075134171	WITHOUT_CLASSIFICATION	5.682924865828289E-4	DEFECT
/* Receive the mapping table */	WITHOUT_CLASSIFICATION	0.9982474655545435	WITHOUT_CLASSIFICATION	0.0017525344454565747	DEFECT
/* Now the selectors */	WITHOUT_CLASSIFICATION	0.9999347397332754	WITHOUT_CLASSIFICATION	6.52602667246204E-5	DEFECT
/* Undo the MTF values for the selectors. */	WITHOUT_CLASSIFICATION	0.9998865467717165	WITHOUT_CLASSIFICATION	1.1345322828355462E-4	DEFECT
// nearly all times v is zero, 4 in most other cases	WITHOUT_CLASSIFICATION	0.9993847724450157	WITHOUT_CLASSIFICATION	6.152275549844361E-4	DEFECT
/* Now the coding tables */	WITHOUT_CLASSIFICATION	0.9999384442246385	WITHOUT_CLASSIFICATION	6.155577536151295E-5	DEFECT
// finally create the Huffman tables	WITHOUT_CLASSIFICATION	0.9999265307129677	WITHOUT_CLASSIFICATION	7.346928703227957E-5	DEFECT
// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'	WITHOUT_CLASSIFICATION	0.9998899492753349	WITHOUT_CLASSIFICATION	1.1005072466504807E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9998873017797809	WITHOUT_CLASSIFICATION	1.126982202191707E-4	DEFECT
// Inlined: // int zvec = bsR(zn);	WITHOUT_CLASSIFICATION	0.9998873017797809	WITHOUT_CLASSIFICATION	1.126982202191707E-4	DEFECT
/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */	WITHOUT_CLASSIFICATION	0.9855699149692029	WITHOUT_CLASSIFICATION	0.014430085030797164	DEFECT
/* not a char and not EOF */	WITHOUT_CLASSIFICATION	0.9995890795824643	WITHOUT_CLASSIFICATION	4.1092041753559464E-4	DEFECT
// (with blockSize 900k) //      256 byte	WITHOUT_CLASSIFICATION	0.9997371785761148	WITHOUT_CLASSIFICATION	2.628214238851365E-4	DEFECT
//     1024 byte	WITHOUT_CLASSIFICATION	0.9998954460272743	WITHOUT_CLASSIFICATION	1.0455397272566767E-4	DEFECT
// No need to keep track of Bcc'd addresses	WITHOUT_CLASSIFICATION	0.9999125323420784	WITHOUT_CLASSIFICATION	8.746765792157563E-5	DEFECT
// Blindly trust the user doesn't set any invalid headers	WITHOUT_CLASSIFICATION	0.9998202228181511	WITHOUT_CLASSIFICATION	1.797771818488305E-4	DEFECT
// RFC 822 s4.1: "Reply-To:" header is optional	WITHOUT_CLASSIFICATION	0.9996549325940114	WITHOUT_CLASSIFICATION	3.450674059885176E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.999280279132333	WITHOUT_CLASSIFICATION	7.197208676669301E-4	DEFECT
// support "address (name)"	WITHOUT_CLASSIFICATION	0.9997722012898879	WITHOUT_CLASSIFICATION	2.2779871011224063E-4	DEFECT
// support "(name) address"	WITHOUT_CLASSIFICATION	0.9997722012898879	WITHOUT_CLASSIFICATION	2.2779871011224063E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
//      256 byte //    18002 byte //    18002 byte	WITHOUT_CLASSIFICATION	0.9997369071090272	WITHOUT_CLASSIFICATION	2.6309289097290893E-4	DEFECT
//     6192 byte //     6192 byte //     6192 byte //       24 byte	WITHOUT_CLASSIFICATION	0.9997369071090272	WITHOUT_CLASSIFICATION	2.6309289097290893E-4	DEFECT
//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte	WITHOUT_CLASSIFICATION	0.9998032960782746	WITHOUT_CLASSIFICATION	1.967039217253919E-4	DEFECT
//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============	WITHOUT_CLASSIFICATION	0.9997369071090272	WITHOUT_CLASSIFICATION	2.6309289097290893E-4	DEFECT
// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA	WITHOUT_CLASSIFICATION	0.9996627776822556	WITHOUT_CLASSIFICATION	3.3722231774443236E-4	DEFECT
// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)	WITHOUT_CLASSIFICATION	0.999980741062019	WITHOUT_CLASSIFICATION	1.9258937981044108E-5	DEFECT
// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)	WITHOUT_CLASSIFICATION	0.9991999658083787	WITHOUT_CLASSIFICATION	8.00034191621353E-4	DEFECT
// * * * * * Raw protocol methods below here * * * * *	WITHOUT_CLASSIFICATION	0.9999233346445741	WITHOUT_CLASSIFICATION	7.666535542585766E-5	DEFECT
// make sure dot is on new line	WITHOUT_CLASSIFICATION	0.9995782049083822	WITHOUT_CLASSIFICATION	4.217950916177618E-4	DEFECT
// raw supports <CRLF>.<CRLF>	WITHOUT_CLASSIFICATION	0.9999360386703464	WITHOUT_CLASSIFICATION	6.396132965357593E-5	DEFECT
// Check that the response is one of the valid codes	WITHOUT_CLASSIFICATION	0.9999528121821686	WITHOUT_CLASSIFICATION	4.7187817831423765E-5	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9997140987971797	WITHOUT_CLASSIFICATION	2.859012028204037E-4	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999703558591758	WITHOUT_CLASSIFICATION	2.9644140824201177E-5	DEFECT
// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.	WITHOUT_CLASSIFICATION	0.999280279132333	WITHOUT_CLASSIFICATION	7.197208676669301E-4	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999806715015389	WITHOUT_CLASSIFICATION	1.9328498461075277E-5	DEFECT
// add extra dot	WITHOUT_CLASSIFICATION	0.9999806715015389	WITHOUT_CLASSIFICATION	1.9328498461075277E-5	DEFECT
// ensure always \r\n	WITHOUT_CLASSIFICATION	0.9999703558591758	WITHOUT_CLASSIFICATION	2.9644140824201177E-5	DEFECT
// UNDONE	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// create a TarEntry for the LongLink, the contents // of which are the entry's name	WITHOUT_CLASSIFICATION	0.9999888747432486	WITHOUT_CLASSIFICATION	1.1125256751470925E-5	DEFECT
// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?	WITHOUT_CLASSIFICATION	0.9999661288276641	WITHOUT_CLASSIFICATION	3.38711723359019E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.	WITHOUT_CLASSIFICATION	0.9999800204995223	WITHOUT_CLASSIFICATION	1.9979500477793597E-5	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9998198778232376	WITHOUT_CLASSIFICATION	1.8012217676235482E-4	DEFECT
// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //	WITHOUT_CLASSIFICATION	0.9997164755833409	WITHOUT_CLASSIFICATION	2.8352441665916643E-4	DEFECT
// read in the name	WITHOUT_CLASSIFICATION	0.9999663376536062	WITHOUT_CLASSIFICATION	3.3662346393735714E-5	DEFECT
// remove trailing null terminator	WITHOUT_CLASSIFICATION	0.9998560063694145	WITHOUT_CLASSIFICATION	1.4399363058551238E-4	DEFECT
// Unexpected EOF!	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999366552204735	WITHOUT_CLASSIFICATION	6.33447795264797E-5	DEFECT
/* method is STORED and we used RandomAccessFile */	WITHOUT_CLASSIFICATION	0.9999690384696968	WITHOUT_CLASSIFICATION	3.0961530303313805E-5	DEFECT
// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes	WITHOUT_CLASSIFICATION	0.9999323241407657	WITHOUT_CLASSIFICATION	6.7675859234312E-5	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9995590847536119	WITHOUT_CLASSIFICATION	4.4091524638810746E-4	DEFECT
// not specified	WITHOUT_CLASSIFICATION	0.9995590847536119	WITHOUT_CLASSIFICATION	4.4091524638810746E-4	DEFECT
// Size/CRC not required if RandomAccessFile is used	WITHOUT_CLASSIFICATION	0.9996936258016476	WITHOUT_CLASSIFICATION	3.063741983524198E-4	DEFECT
/*     * Various ZIP constants     */	WITHOUT_CLASSIFICATION	0.9998635790210664	WITHOUT_CLASSIFICATION	1.364209789336733E-4	DEFECT
//store method in local variable to prevent multiple method calls	WITHOUT_CLASSIFICATION	0.9979836351953113	WITHOUT_CLASSIFICATION	0.0020163648046885984	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999652501625654	WITHOUT_CLASSIFICATION	3.474983743459862E-4	DEFECT
// bit3 set to signal, we use a data descriptor	WITHOUT_CLASSIFICATION	0.999652501625654	WITHOUT_CLASSIFICATION	3.474983743459862E-4	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999611281353677	WITHOUT_CLASSIFICATION	3.8871864632318604E-5	DEFECT
// compression method	WITHOUT_CLASSIFICATION	0.9999611281353677	WITHOUT_CLASSIFICATION	3.8871864632318604E-5	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.99996715749038	WITHOUT_CLASSIFICATION	3.284250961990911E-5	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999575132964711	WITHOUT_CLASSIFICATION	4.248670352893603E-5	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999581242342804	WITHOUT_CLASSIFICATION	4.18757657195044E-5	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999541413910851	WITHOUT_CLASSIFICATION	4.5858608915013274E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999640528014052	WITHOUT_CLASSIFICATION	3.5947198594733696E-5	DEFECT
// version made by	WITHOUT_CLASSIFICATION	0.9998416047858287	WITHOUT_CLASSIFICATION	1.5839521417132532E-4	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.998605079774529	WITHOUT_CLASSIFICATION	0.0013949202254711264	DEFECT
// last mod. time and date	WITHOUT_CLASSIFICATION	0.99996715749038	WITHOUT_CLASSIFICATION	3.284250961990911E-5	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9769672597093706	WITHOUT_CLASSIFICATION	0.02303274029062936	DEFECT
// file name length	WITHOUT_CLASSIFICATION	0.9999575132964711	WITHOUT_CLASSIFICATION	4.248670352893603E-5	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9998481892669483	WITHOUT_CLASSIFICATION	1.5181073305172395E-4	DEFECT
// extra field length	WITHOUT_CLASSIFICATION	0.9999581242342804	WITHOUT_CLASSIFICATION	4.18757657195044E-5	DEFECT
// file name	WITHOUT_CLASSIFICATION	0.9999541413910851	WITHOUT_CLASSIFICATION	4.5858608915013274E-5	DEFECT
// extra field	WITHOUT_CLASSIFICATION	0.9999640528014052	WITHOUT_CLASSIFICATION	3.5947198594733696E-5	DEFECT
// file comment length	WITHOUT_CLASSIFICATION	0.9999615481487423	WITHOUT_CLASSIFICATION	3.845185125779436E-5	DEFECT
// disk number start	WITHOUT_CLASSIFICATION	0.9998356139979048	WITHOUT_CLASSIFICATION	1.64386002095197E-4	DEFECT
// internal file attributes	WITHOUT_CLASSIFICATION	0.999971771596558	WITHOUT_CLASSIFICATION	2.822840344192618E-5	DEFECT
// external file attributes	WITHOUT_CLASSIFICATION	0.9999706045597482	WITHOUT_CLASSIFICATION	2.9395440251835495E-5	DEFECT
// relative offset of LFH	WITHOUT_CLASSIFICATION	0.9998638311804078	WITHOUT_CLASSIFICATION	1.3616881959210874E-4	DEFECT
// disk numbers	WITHOUT_CLASSIFICATION	0.9999590696957846	WITHOUT_CLASSIFICATION	4.093030421535107E-5	DEFECT
// number of entries	WITHOUT_CLASSIFICATION	0.9998606477986728	WITHOUT_CLASSIFICATION	1.3935220132719E-4	DEFECT
// length and location of CD	WITHOUT_CLASSIFICATION	0.9998741170030195	WITHOUT_CLASSIFICATION	1.2588299698041767E-4	DEFECT
// ZIP file comment	WITHOUT_CLASSIFICATION	0.9999669919907208	WITHOUT_CLASSIFICATION	3.3008009279236504E-5	DEFECT
// array not exhausted	WITHOUT_CLASSIFICATION	0.9995262517792335	WITHOUT_CLASSIFICATION	4.7374822076642697E-4	DEFECT
/* version made by                 */	WITHOUT_CLASSIFICATION	0.9989287806549253	WITHOUT_CLASSIFICATION	0.00107121934507468	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9973531806425724	WITHOUT_CLASSIFICATION	0.0026468193574275684	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9993763538523679	WITHOUT_CLASSIFICATION	6.236461476321645E-4	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9997907695840277	WITHOUT_CLASSIFICATION	2.0923041597228938E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9997989929311951	WITHOUT_CLASSIFICATION	2.0100706880496393E-4	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9996575589927623	WITHOUT_CLASSIFICATION	3.424410072376826E-4	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9995594026128279	WITHOUT_CLASSIFICATION	4.40597387172011E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9997517417574412	WITHOUT_CLASSIFICATION	2.4825824255879364E-4	DEFECT
/* filename length                 */	WITHOUT_CLASSIFICATION	0.9996976370398634	WITHOUT_CLASSIFICATION	3.0236296013665446E-4	DEFECT
/* extra field length              */	WITHOUT_CLASSIFICATION	0.9997746038525611	WITHOUT_CLASSIFICATION	2.2539614743882628E-4	DEFECT
/* file comment length             */	WITHOUT_CLASSIFICATION	0.9997930299531668	WITHOUT_CLASSIFICATION	2.0697004683332048E-4	DEFECT
/* internal file attributes        */	WITHOUT_CLASSIFICATION	0.9998480516390341	WITHOUT_CLASSIFICATION	1.5194836096590978E-4	DEFECT
/* external file attributes        */	WITHOUT_CLASSIFICATION	0.9998417705015235	WITHOUT_CLASSIFICATION	1.5822949847652044E-4	DEFECT
/* relative offset of local header */	WITHOUT_CLASSIFICATION	0.9993425738723348	WITHOUT_CLASSIFICATION	6.5742612766514E-4	DEFECT
// disk number	WITHOUT_CLASSIFICATION	0.999873117348011	WITHOUT_CLASSIFICATION	1.2688265198899378E-4	DEFECT
// LFH offset,	WITHOUT_CLASSIFICATION	0.999934924442318	WITHOUT_CLASSIFICATION	6.50755576819745E-5	DEFECT
// data offset will be filled later	WITHOUT_CLASSIFICATION	0.9991245636248488	WITHOUT_CLASSIFICATION	8.754363751510993E-4	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9996395797805224	WITHOUT_CLASSIFICATION	3.604202194775006E-4	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9968214983865749	WITHOUT_CLASSIFICATION	0.003178501613425036	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9990657050226607	WITHOUT_CLASSIFICATION	9.342949773394032E-4	DEFECT
/* start of the central directory  */	WITHOUT_CLASSIFICATION	0.9998198778232376	WITHOUT_CLASSIFICATION	1.8012217676235482E-4	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9986648373893178	WITHOUT_CLASSIFICATION	0.0013351626106822526	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9997166295087321	WITHOUT_CLASSIFICATION	2.83370491267945E-4	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999216731386391	WITHOUT_CLASSIFICATION	7.832686136088458E-5	DEFECT
/* offset of start of central      */	WITHOUT_CLASSIFICATION	0.9989635546033011	WITHOUT_CLASSIFICATION	0.0010364453966989085	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999001220180438	WITHOUT_CLASSIFICATION	9.98779819562671E-5	DEFECT
// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003	WITHOUT_CLASSIFICATION	0.996370735543204	WITHOUT_CLASSIFICATION	0.0036292644567960507	DEFECT
// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"	WITHOUT_CLASSIFICATION	0.9996176525980643	WITHOUT_CLASSIFICATION	3.8234740193558454E-4	DEFECT
// // *****  initialize test environment (called "bed")  ***** //	WITHOUT_CLASSIFICATION	0.9998164149307098	WITHOUT_CLASSIFICATION	1.8358506929019616E-4	DEFECT
// THIS WILL FAIL. //compareBytes("abc", "utf-16");	WITHOUT_CLASSIFICATION	0.999834275252292	WITHOUT_CLASSIFICATION	1.6572474770806044E-4	DEFECT
//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now	WITHOUT_CLASSIFICATION	0.9999606248405811	WITHOUT_CLASSIFICATION	3.937515941885792E-5	DEFECT
//if there were no main targets, we list all subtargets //as it means nothing has a description	WITHOUT_CLASSIFICATION	0.9998867386272726	WITHOUT_CLASSIFICATION	1.1326137272733429E-4	DEFECT
// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.	WITHOUT_CLASSIFICATION	0.9995228937000458	WITHOUT_CLASSIFICATION	4.7710629995427586E-4	DEFECT
// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.	WITHOUT_CLASSIFICATION	0.9999208362266796	WITHOUT_CLASSIFICATION	7.916377332037128E-5	DEFECT
// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.	WITHOUT_CLASSIFICATION	0.9999996966704989	WITHOUT_CLASSIFICATION	3.0332950108859207E-7	DEFECT
// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons	WITHOUT_CLASSIFICATION	0.9747545751938709	WITHOUT_CLASSIFICATION	0.02524542480612923	DEFECT
// If we've been successful on an update, delete the // temporary file	WITHOUT_CLASSIFICATION	0.9999838891181448	WITHOUT_CLASSIFICATION	1.6110881855158006E-5	DEFECT
// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\	WITHOUT_CLASSIFICATION	0.9997450366460235	WITHOUT_CLASSIFICATION	2.5496335397644026E-4	DEFECT
/* version needed to extract       */	WITHOUT_CLASSIFICATION	0.9973531806425724	WITHOUT_CLASSIFICATION	0.0026468193574275684	DEFECT
/* general purpose bit flag        */	WITHOUT_CLASSIFICATION	0.9993763538523679	WITHOUT_CLASSIFICATION	6.236461476321645E-4	DEFECT
/* compression method              */	WITHOUT_CLASSIFICATION	0.9997907695840277	WITHOUT_CLASSIFICATION	2.0923041597228938E-4	DEFECT
/* last mod file time              */	WITHOUT_CLASSIFICATION	0.9997989929311951	WITHOUT_CLASSIFICATION	2.0100706880496393E-4	DEFECT
/* last mod file date              */	WITHOUT_CLASSIFICATION	0.9996575589927623	WITHOUT_CLASSIFICATION	3.424410072376826E-4	DEFECT
/* crc-32                          */	WITHOUT_CLASSIFICATION	0.9995594026128279	WITHOUT_CLASSIFICATION	4.40597387172011E-4	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9997517417574412	WITHOUT_CLASSIFICATION	2.4825824255879364E-4	DEFECT
/* uncompressed size               */	WITHOUT_CLASSIFICATION	0.9997517417574412	WITHOUT_CLASSIFICATION	2.4825824255879364E-4	DEFECT
/* end of central dir signature    */	WITHOUT_CLASSIFICATION	0.9996395797805224	WITHOUT_CLASSIFICATION	3.604202194775006E-4	DEFECT
/* number of this disk             */	WITHOUT_CLASSIFICATION	0.9968214983865749	WITHOUT_CLASSIFICATION	0.003178501613425036	DEFECT
/* number of the disk with the     */	WITHOUT_CLASSIFICATION	0.9990657050226607	WITHOUT_CLASSIFICATION	9.342949773394032E-4	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9986226099977049	WITHOUT_CLASSIFICATION	0.001377390002295023	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9986226099977049	WITHOUT_CLASSIFICATION	0.001377390002295023	DEFECT
/* the central dir on this disk    */	WITHOUT_CLASSIFICATION	0.9986648373893178	WITHOUT_CLASSIFICATION	0.0013351626106822526	DEFECT
/* the central dir                 */	WITHOUT_CLASSIFICATION	0.9997166295087321	WITHOUT_CLASSIFICATION	2.83370491267945E-4	DEFECT
/* size of the central directory   */	WITHOUT_CLASSIFICATION	0.9999216731386391	WITHOUT_CLASSIFICATION	7.832686136088458E-5	DEFECT
/* the starting disk number        */	WITHOUT_CLASSIFICATION	0.9996023032875487	WITHOUT_CLASSIFICATION	3.9769671245120205E-4	DEFECT
/* zipfile comment length          */	WITHOUT_CLASSIFICATION	0.9997460318768318	WITHOUT_CLASSIFICATION	2.5396812316828073E-4	DEFECT
/* local file header signature     */	WITHOUT_CLASSIFICATION	0.9993494415048679	WITHOUT_CLASSIFICATION	6.505584951320577E-4	DEFECT
/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */	WITHOUT_CLASSIFICATION	0.9999853595635997	WITHOUT_CLASSIFICATION	1.4640436400294557E-5	DEFECT
// CRC will be added later	WITHOUT_CLASSIFICATION	0.999882119963908	WITHOUT_CLASSIFICATION	1.1788003609205779E-4	DEFECT
/*<ZipExtraField>*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// initializes extra data to an empty byte array	WITHOUT_CLASSIFICATION	0.9998930724820608	WITHOUT_CLASSIFICATION	1.069275179391883E-4	DEFECT
// MS-DOS read-only attribute	WITHOUT_CLASSIFICATION	0.999892158238402	WITHOUT_CLASSIFICATION	1.078417615978767E-4	DEFECT
// MS-DOS directory flag	WITHOUT_CLASSIFICATION	0.999971136888655	WITHOUT_CLASSIFICATION	2.8863111344923212E-5	DEFECT
// A "location" attribute for a node within a // Path object.	WITHOUT_CLASSIFICATION	0.9997905438657411	WITHOUT_CLASSIFICATION	2.0945613425900383E-4	DEFECT
// Just use the same directory as the file itself. // This directory will exist	WITHOUT_CLASSIFICATION	0.9996199945951576	WITHOUT_CLASSIFICATION	3.8000540484233657E-4	DEFECT
// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.	WITHOUT_CLASSIFICATION	0.9999761727832497	WITHOUT_CLASSIFICATION	2.3827216750359544E-5	DEFECT
// // Static //	WITHOUT_CLASSIFICATION	0.9999424715498341	WITHOUT_CLASSIFICATION	5.7528450165915146E-5	DEFECT
//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...	WITHOUT_CLASSIFICATION	0.9972616634023018	WITHOUT_CLASSIFICATION	0.0027383365976981653	DEFECT
// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.	WITHOUT_CLASSIFICATION	0.9999948428595737	WITHOUT_CLASSIFICATION	5.157140426209385E-6	DEFECT
// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory	WITHOUT_CLASSIFICATION	0.9999855693881208	WITHOUT_CLASSIFICATION	1.4430611879304632E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.99997680167625	WITHOUT_CLASSIFICATION	2.319832375003877E-5	DEFECT
// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9991929584098219	WITHOUT_CLASSIFICATION	8.070415901781368E-4	DEFECT
// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help	WITHOUT_CLASSIFICATION	0.9995647665134308	WITHOUT_CLASSIFICATION	4.3523348656918906E-4	DEFECT
// push the current iterator onto the stack and then // iterate through this directory.	WITHOUT_CLASSIFICATION	0.9997830864144565	WITHOUT_CLASSIFICATION	2.1691358554350192E-4	DEFECT
// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor	WITHOUT_CLASSIFICATION	0.9999488473606546	WITHOUT_CLASSIFICATION	5.1152639345324364E-5	DEFECT
// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].	WITHOUT_CLASSIFICATION	0.9985086557001096	WITHOUT_CLASSIFICATION	0.0014913442998903128	DEFECT
// Loop through the files seeing if any has been touched // more recently than the destination jar.	WITHOUT_CLASSIFICATION	0.9999572288194929	WITHOUT_CLASSIFICATION	4.27711805070498E-5	DEFECT
// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file	WITHOUT_CLASSIFICATION	0.9998026601457052	WITHOUT_CLASSIFICATION	1.973398542948384E-4	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)	WITHOUT_CLASSIFICATION	0.9997905926191484	WITHOUT_CLASSIFICATION	2.0940738085166753E-4	DEFECT
// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"	WITHOUT_CLASSIFICATION	0.9999699161257153	WITHOUT_CLASSIFICATION	3.008387428479901E-5	DEFECT
// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc	WITHOUT_CLASSIFICATION	0.9999384375280757	WITHOUT_CLASSIFICATION	6.156247192438186E-5	DEFECT
//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.	WITHOUT_CLASSIFICATION	0.984101236515119	WITHOUT_CLASSIFICATION	0.015898763484880944	DEFECT
// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9995548667284271	WITHOUT_CLASSIFICATION	4.451332715730206E-4	DEFECT
// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup	WITHOUT_CLASSIFICATION	0.9999747097397758	WITHOUT_CLASSIFICATION	2.5290260224209155E-5	DEFECT
// If this TransformOperation has DrawOperation children // then Rotate the first child and return.	WITHOUT_CLASSIFICATION	0.9999404356640935	WITHOUT_CLASSIFICATION	5.9564335906506624E-5	DEFECT
// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task	WITHOUT_CLASSIFICATION	0.9999815075501542	WITHOUT_CLASSIFICATION	1.8492449845742808E-5	DEFECT
// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //	WITHOUT_CLASSIFICATION	0.9993573811070545	WITHOUT_CLASSIFICATION	6.426188929455307E-4	DEFECT
// CRC // compressed length // uncompressed length	WITHOUT_CLASSIFICATION	0.9998481892669483	WITHOUT_CLASSIFICATION	1.5181073305172395E-4	DEFECT
// No further methods necessary. This is just an amalgamation of two other // interfaces.	WITHOUT_CLASSIFICATION	0.999943711049514	WITHOUT_CLASSIFICATION	5.628895048600758E-5	DEFECT
// // -----  The "Singleton"  ----- //	WITHOUT_CLASSIFICATION	0.9996068528900595	WITHOUT_CLASSIFICATION	3.931471099404875E-4	DEFECT
// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent	WITHOUT_CLASSIFICATION	0.9999199935102128	WITHOUT_CLASSIFICATION	8.00064897872718E-5	DEFECT
// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore	WITHOUT_CLASSIFICATION	0.9873645890151934	WITHOUT_CLASSIFICATION	0.012635410984806623	DEFECT
// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');	WITHOUT_CLASSIFICATION	0.9999756989438078	WITHOUT_CLASSIFICATION	2.4301056192251454E-5	DEFECT
// CRC // Mode // SizDev // UID // GID	WITHOUT_CLASSIFICATION	0.9997685910881324	WITHOUT_CLASSIFICATION	2.3140891186756472E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignored	WITHOUT_CLASSIFICATION	0.9998251216246514	WITHOUT_CLASSIFICATION	1.7487837534866684E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999977152929094	WITHOUT_CLASSIFICATION	2.284707090602039E-5	DEFECT
// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.	WITHOUT_CLASSIFICATION	0.9999160013743968	WITHOUT_CLASSIFICATION	8.39986256030515E-5	DEFECT
// now wait until the spawned process is finished	WITHOUT_CLASSIFICATION	0.9999547507063912	WITHOUT_CLASSIFICATION	4.52492936086926E-5	DEFECT
// file doesn't exist -> property 'test' == null	WITHOUT_CLASSIFICATION	0.999720678359559	WITHOUT_CLASSIFICATION	2.793216404410382E-4	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9968522374692185	WITHOUT_CLASSIFICATION	0.003147762530781462	DEFECT
// we don't expect to find this	WITHOUT_CLASSIFICATION	0.9968522374692185	WITHOUT_CLASSIFICATION	0.003147762530781462	DEFECT
// ignore expected	WITHOUT_CLASSIFICATION	0.9999521958148259	WITHOUT_CLASSIFICATION	4.7804185174089765E-5	DEFECT
// keep track of what operating systems are supported here.	WITHOUT_CLASSIFICATION	0.9991820132843175	WITHOUT_CLASSIFICATION	8.179867156824592E-4	DEFECT
// if we followed the symlink we just made we should // bypass the excludes.	WITHOUT_CLASSIFICATION	0.9999823349791577	WITHOUT_CLASSIFICATION	1.7665020842312594E-5	DEFECT
// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.	WITHOUT_CLASSIFICATION	0.9934077943895164	WITHOUT_CLASSIFICATION	0.006592205610483656	DEFECT
/*             * throw in drive letters             */	WITHOUT_CLASSIFICATION	0.9991912406620704	WITHOUT_CLASSIFICATION	8.087593379295219E-4	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999215547647078	WITHOUT_CLASSIFICATION	7.844523529216115E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999215547647078	WITHOUT_CLASSIFICATION	7.844523529216115E-5	DEFECT
/*             * promised to eliminate consecutive slashes after drive letter.             */	WITHOUT_CLASSIFICATION	0.9999215547647078	WITHOUT_CLASSIFICATION	7.844523529216115E-5	DEFECT
// avoid multiple configurations	WITHOUT_CLASSIFICATION	0.9998744100314538	WITHOUT_CLASSIFICATION	1.2558996854612233E-4	DEFECT
// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999857030710824	WITHOUT_CLASSIFICATION	1.4296928917602403E-4	DEFECT
// make sure the cache is cleared.	WITHOUT_CLASSIFICATION	0.9998250761101678	WITHOUT_CLASSIFICATION	1.7492388983206673E-4	DEFECT
//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)	WITHOUT_CLASSIFICATION	0.9999995916898569	WITHOUT_CLASSIFICATION	4.083101431881566E-7	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// PR 38370	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya	WITHOUT_CLASSIFICATION	0.9985390217867841	WITHOUT_CLASSIFICATION	0.001460978213215957	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9986241525217574	WITHOUT_CLASSIFICATION	0.001375847478242576	DEFECT
// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9986241525217574	WITHOUT_CLASSIFICATION	0.001375847478242576	DEFECT
// All three specified and all three exist -> true	WITHOUT_CLASSIFICATION	0.9999705541219092	WITHOUT_CLASSIFICATION	2.944587809083487E-5	DEFECT
// Specified class is "" -> can not exist	WITHOUT_CLASSIFICATION	0.9983003848326196	WITHOUT_CLASSIFICATION	0.001699615167380315	DEFECT
// Core class that exists in system classpath is ignored, but found in specified classpath	WITHOUT_CLASSIFICATION	0.9997993124430543	WITHOUT_CLASSIFICATION	2.006875569456977E-4	DEFECT
// File is not found in specified filepath	WITHOUT_CLASSIFICATION	0.9977337976229369	WITHOUT_CLASSIFICATION	0.0022662023770631525	DEFECT
//ignored	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory	WITHOUT_CLASSIFICATION	0.9977770485955878	WITHOUT_CLASSIFICATION	0.002222951404412095	DEFECT
// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.	WITHOUT_CLASSIFICATION	0.9993479891734363	WITHOUT_CLASSIFICATION	6.52010826563759E-4	DEFECT
//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");	WITHOUT_CLASSIFICATION	0.999553086828549	WITHOUT_CLASSIFICATION	4.4691317145096113E-4	DEFECT
// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.	WITHOUT_CLASSIFICATION	0.998280327805699	WITHOUT_CLASSIFICATION	0.0017196721943009338	DEFECT
// testNoCrash is the test invoked by the captureToSummary's junit task	WITHOUT_CLASSIFICATION	0.9998806065728393	WITHOUT_CLASSIFICATION	1.193934271607527E-4	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// tests one the file object	WITHOUT_CLASSIFICATION	0.9999396061037097	WITHOUT_CLASSIFICATION	6.0393896290183066E-5	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report	WITHOUT_CLASSIFICATION	0.991391350099528	WITHOUT_CLASSIFICATION	0.008608649900472132	DEFECT
// We have extra elements	WITHOUT_CLASSIFICATION	0.9998951594609884	WITHOUT_CLASSIFICATION	1.0484053901161694E-4	DEFECT
// Set up a VSSHistory task	WITHOUT_CLASSIFICATION	0.9999616247171053	WITHOUT_CLASSIFICATION	3.8375282894771794E-5	DEFECT
// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise	WITHOUT_CLASSIFICATION	0.789106050295618	WITHOUT_CLASSIFICATION	0.21089394970438194	DEFECT
//check that dir and src are incompatible	WITHOUT_CLASSIFICATION	0.9998867487039257	WITHOUT_CLASSIFICATION	1.1325129607420712E-4	DEFECT
// ================  testcases for the cache implementations  ================	WITHOUT_CLASSIFICATION	0.9997582462715364	WITHOUT_CLASSIFICATION	2.4175372846351546E-4	DEFECT
// does the selection	WITHOUT_CLASSIFICATION	0.9998821469907826	WITHOUT_CLASSIFICATION	1.1785300921742588E-4	DEFECT
// ==============  testcases for the algorithm implementations  ==============	WITHOUT_CLASSIFICATION	0.9984945416254917	WITHOUT_CLASSIFICATION	0.0015054583745083296	DEFECT
// =====================  scenario tests  =====================	WITHOUT_CLASSIFICATION	0.9992539690867143	WITHOUT_CLASSIFICATION	7.460309132858543E-4	DEFECT
// info text // list of files // expected result // result	WITHOUT_CLASSIFICATION	0.9999755804726638	WITHOUT_CLASSIFICATION	2.4419527336203294E-5	DEFECT
//  =====================  helper methods and classes  ====================	WITHOUT_CLASSIFICATION	0.9999595270169069	WITHOUT_CLASSIFICATION	4.047298309299256E-5	DEFECT
// should be full moon	WITHOUT_CLASSIFICATION	0.9997554877246715	WITHOUT_CLASSIFICATION	2.4451227532850723E-4	DEFECT
// Try a silly case	WITHOUT_CLASSIFICATION	0.9999688176421916	WITHOUT_CLASSIFICATION	3.1182357808337816E-5	DEFECT
// java.home is bogus	WITHOUT_CLASSIFICATION	0.9997977151558461	WITHOUT_CLASSIFICATION	2.0228484415382624E-4	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// 60s // a further 30s	WITHOUT_CLASSIFICATION	0.9999310511190197	WITHOUT_CLASSIFICATION	6.894888098028779E-5	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9994750091109098	WITHOUT_CLASSIFICATION	5.249908890902434E-4	DEFECT
// order of headers cannot be guaranteed	WITHOUT_CLASSIFICATION	0.9994750091109098	WITHOUT_CLASSIFICATION	5.249908890902434E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// CheckStyle:VisibilityModifier OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */	WITHOUT_CLASSIFICATION	0.9999258269085527	WITHOUT_CLASSIFICATION	7.41730914472777E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */	WITHOUT_CLASSIFICATION	0.9999687426001682	WITHOUT_CLASSIFICATION	3.1257399831687184E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999721366390454	WITHOUT_CLASSIFICATION	2.7863360954609647E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999721366390454	WITHOUT_CLASSIFICATION	2.7863360954609647E-5	DEFECT
// impossible as getMethods should only return public methods	WITHOUT_CLASSIFICATION	0.9999721366390454	WITHOUT_CLASSIFICATION	2.7863360954609647E-5	DEFECT
// boolean and Boolean get special treatment because we // have a nice method in Project	WITHOUT_CLASSIFICATION	0.999890516964832	WITHOUT_CLASSIFICATION	1.0948303516799273E-4	DEFECT
// find the line breaks and pass other chars through in blocks	WITHOUT_CLASSIFICATION	0.9993143005611279	WITHOUT_CLASSIFICATION	6.856994388721129E-4	DEFECT
// DataType can have a "no arg" constructor or take a single // Project argument.	WITHOUT_CLASSIFICATION	0.9997257546721691	WITHOUT_CLASSIFICATION	2.7424532783094886E-4	DEFECT
// all the names are the same: check if the class path of the loader // is the same	WITHOUT_CLASSIFICATION	0.9999816516826947	WITHOUT_CLASSIFICATION	1.8348317305270384E-5	DEFECT
/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */	WITHOUT_CLASSIFICATION	0.9886664858819699	WITHOUT_CLASSIFICATION	0.01133351411803016	DEFECT
// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.	WITHOUT_CLASSIFICATION	0.9998268542884549	WITHOUT_CLASSIFICATION	1.7314571154518075E-4	DEFECT
// put back the original security manager //The following will never eval to true. (PD)	WITHOUT_CLASSIFICATION	0.9987803515667516	WITHOUT_CLASSIFICATION	0.0012196484332483882	DEFECT
// ignore path elements which are invalid // relative to the project	WITHOUT_CLASSIFICATION	0.999984468238046	WITHOUT_CLASSIFICATION	1.5531761954063186E-5	DEFECT
// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)	WITHOUT_CLASSIFICATION	0.9859261846795682	WITHOUT_CLASSIFICATION	0.014073815320431744	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/*<URL>*/	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.	WITHOUT_CLASSIFICATION	0.997063414476942	WITHOUT_CLASSIFICATION	0.00293658552305804	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
//ignore	WITHOUT_CLASSIFICATION	0.9993737615025838	WITHOUT_CLASSIFICATION	6.262384974162632E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// Not significant for the class loader.	WITHOUT_CLASSIFICATION	0.9993785562930771	WITHOUT_CLASSIFICATION	6.214437069228758E-4	DEFECT
// don't have to check for public, since // getConstructor finds public constructors only.	WITHOUT_CLASSIFICATION	0.9993347330576543	WITHOUT_CLASSIFICATION	6.652669423457631E-4	DEFECT
//not a known type	WITHOUT_CLASSIFICATION	0.9999688754037419	WITHOUT_CLASSIFICATION	3.1124596258133154E-5	DEFECT
// Initialize the globalFileSet's project	WITHOUT_CLASSIFICATION	0.9998114368476466	WITHOUT_CLASSIFICATION	1.8856315235331322E-4	DEFECT
// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire	WITHOUT_CLASSIFICATION	0.9999694177893018	WITHOUT_CLASSIFICATION	3.058221069816936E-5	DEFECT
// first build exception	WITHOUT_CLASSIFICATION	0.9999426439851671	WITHOUT_CLASSIFICATION	5.735601483281011E-5	DEFECT
// Not been visited	WITHOUT_CLASSIFICATION	0.9998858007276461	WITHOUT_CLASSIFICATION	1.1419927235382777E-4	DEFECT
// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)	WITHOUT_CLASSIFICATION	0.9974812982199711	WITHOUT_CLASSIFICATION	0.00251870178002892	DEFECT
/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */	WITHOUT_CLASSIFICATION	0.9997045536291614	WITHOUT_CLASSIFICATION	2.954463708385935E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//empty	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).	WITHOUT_CLASSIFICATION	0.9999938111252081	WITHOUT_CLASSIFICATION	6.18887479188065E-6	DEFECT
// check to what is in the classname	WITHOUT_CLASSIFICATION	0.99886351971903	WITHOUT_CLASSIFICATION	0.0011364802809700906	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.999940510373373	WITHOUT_CLASSIFICATION	5.948962662706392E-5	DEFECT
//not included, do nothing	WITHOUT_CLASSIFICATION	0.999940510373373	WITHOUT_CLASSIFICATION	5.948962662706392E-5	DEFECT
// Attributes	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// make sure we aren't going to get the path separator next	WITHOUT_CLASSIFICATION	0.9988717829960719	WITHOUT_CLASSIFICATION	0.0011282170039281032	DEFECT
// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.	WITHOUT_CLASSIFICATION	0.9999288216439152	WITHOUT_CLASSIFICATION	7.117835608479578E-5	DEFECT
// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.	WITHOUT_CLASSIFICATION	0.9957668407093501	WITHOUT_CLASSIFICATION	0.004233159290649907	DEFECT
// Mac	WITHOUT_CLASSIFICATION	0.9998947224766143	WITHOUT_CLASSIFICATION	1.0527752338569613E-4	DEFECT
// set in/excludes to reasonable defaults if needed:	WITHOUT_CLASSIFICATION	0.9999605676127459	WITHOUT_CLASSIFICATION	3.943238725411803E-5	DEFECT
// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.	WITHOUT_CLASSIFICATION	0.9999865810085656	WITHOUT_CLASSIFICATION	1.3418991434329253E-5	DEFECT
// avoid double scanning of directories, can only happen in fast mode	WITHOUT_CLASSIFICATION	0.9995971284328959	WITHOUT_CLASSIFICATION	4.0287156710410696E-4	DEFECT
// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);	WITHOUT_CLASSIFICATION	0.9993610499500544	WITHOUT_CLASSIFICATION	6.389500499456606E-4	DEFECT
// if at EOF with no characters in the buffer, return EOF	WITHOUT_CLASSIFICATION	0.9999918431010189	WITHOUT_CLASSIFICATION	8.156898981188737E-6	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999298638532665	WITHOUT_CLASSIFICATION	7.013614673339366E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999298638532665	WITHOUT_CLASSIFICATION	7.013614673339366E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999298638532665	WITHOUT_CLASSIFICATION	7.013614673339366E-5	DEFECT
// The current character is always emitted.	WITHOUT_CLASSIFICATION	0.9999298638532665	WITHOUT_CLASSIFICATION	7.013614673339366E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall tru	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Works like clone() but doesn't show up in the Javadocs	WITHOUT_CLASSIFICATION	0.9999693364831457	WITHOUT_CLASSIFICATION	3.0663516854219296E-5	DEFECT
// ----------------------------------------- //  Predefined filters // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9996964112303778	WITHOUT_CLASSIFICATION	3.035887696221422E-4	DEFECT
// -------------------------------------------- // //      Filter classes // // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9998759483406816	WITHOUT_CLASSIFICATION	1.240516593182808E-4	DEFECT
// Execute the top-level target	WITHOUT_CLASSIFICATION	0.999966623605541	WITHOUT_CLASSIFICATION	3.337639445892427E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.	WITHOUT_CLASSIFICATION	0.9988745165036153	WITHOUT_CLASSIFICATION	0.001125483496384811	DEFECT
//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle	WITHOUT_CLASSIFICATION	0.9997769363063772	WITHOUT_CLASSIFICATION	2.230636936226973E-4	DEFECT
// convert the replyTo string into a vector of emailaddresses	WITHOUT_CLASSIFICATION	0.9995908596959618	WITHOUT_CLASSIFICATION	4.091403040381898E-4	DEFECT
// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;	WITHOUT_CLASSIFICATION	0.9999371571075151	WITHOUT_CLASSIFICATION	6.28428924849325E-5	DEFECT
// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.	WITHOUT_CLASSIFICATION	0.9975783005622921	WITHOUT_CLASSIFICATION	0.0024216994377078724	DEFECT
// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return	WITHOUT_CLASSIFICATION	0.9999636011766954	WITHOUT_CLASSIFICATION	3.639882330457422E-5	DEFECT
// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.	WITHOUT_CLASSIFICATION	0.9999954263078487	WITHOUT_CLASSIFICATION	4.573692151326679E-6	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999438295231814	WITHOUT_CLASSIFICATION	5.61704768185916E-4	DEFECT
//default	WITHOUT_CLASSIFICATION	0.999438295231814	WITHOUT_CLASSIFICATION	5.61704768185916E-4	DEFECT
// use to scan own archive	WITHOUT_CLASSIFICATION	0.9996882690996387	WITHOUT_CLASSIFICATION	3.117309003613484E-4	DEFECT
// collect filesets to pass them to getResourcesToAdd	WITHOUT_CLASSIFICATION	0.999000272840974	WITHOUT_CLASSIFICATION	9.99727159026036E-4	DEFECT
// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.	WITHOUT_CLASSIFICATION	0.9541857144956611	WITHOUT_CLASSIFICATION	0.045814285504338866	DEFECT
/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */	WITHOUT_CLASSIFICATION	0.998511868092949	WITHOUT_CLASSIFICATION	0.0014881319070509582	DEFECT
// ZIPs store time with a granularity of 2 seconds, round up	WITHOUT_CLASSIFICATION	0.999649402662498	WITHOUT_CLASSIFICATION	3.5059733750198704E-4	DEFECT
/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */	WITHOUT_CLASSIFICATION	0.9969153230344125	WITHOUT_CLASSIFICATION	0.0030846769655874648	DEFECT
// may be altered in validate	WITHOUT_CLASSIFICATION	0.9996097288354813	WITHOUT_CLASSIFICATION	3.902711645186699E-4	DEFECT
//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths	WITHOUT_CLASSIFICATION	0.999876968574786	WITHOUT_CLASSIFICATION	1.2303142521400334E-4	DEFECT
//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)	WITHOUT_CLASSIFICATION	0.9997151983394714	WITHOUT_CLASSIFICATION	2.8480166052856354E-4	DEFECT
// Error messages	WITHOUT_CLASSIFICATION	0.9999317874282765	WITHOUT_CLASSIFICATION	6.821257172354033E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.	WITHOUT_CLASSIFICATION	0.9999846848362588	WITHOUT_CLASSIFICATION	1.531516374127482E-5	DEFECT
// An arbitrary attribute.	WITHOUT_CLASSIFICATION	0.9999295822264754	WITHOUT_CLASSIFICATION	7.04177735245945E-5	DEFECT
// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.	WITHOUT_CLASSIFICATION	0.9999939797235184	WITHOUT_CLASSIFICATION	6.0202764815296695E-6	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Fall Through	WITHOUT_CLASSIFICATION	0.9999349293667137	WITHOUT_CLASSIFICATION	6.507063328625593E-5	DEFECT
// Ignore the problem	WITHOUT_CLASSIFICATION	0.999966945812138	WITHOUT_CLASSIFICATION	3.305418786206391E-5	DEFECT
// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same	WITHOUT_CLASSIFICATION	0.9999974969150786	WITHOUT_CLASSIFICATION	2.5030849213837466E-6	DEFECT
// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator	WITHOUT_CLASSIFICATION	0.9998970766346313	WITHOUT_CLASSIFICATION	1.0292336536870612E-4	DEFECT
// END static class TemplateElement	WITHOUT_CLASSIFICATION	0.9998770640442521	WITHOUT_CLASSIFICATION	1.2293595574775396E-4	DEFECT
////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS	WITHOUT_CLASSIFICATION	0.9998401010813562	WITHOUT_CLASSIFICATION	1.5989891864377895E-4	DEFECT
//value and property are mutually exclusive attributes	WITHOUT_CLASSIFICATION	0.9997694222799639	WITHOUT_CLASSIFICATION	2.305777200361003E-4	DEFECT
// Ignore Exception	WITHOUT_CLASSIFICATION	0.9999807264803833	WITHOUT_CLASSIFICATION	1.9273519616721778E-5	DEFECT
//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);	WITHOUT_CLASSIFICATION	0.9996827806647975	WITHOUT_CLASSIFICATION	3.172193352025153E-4	DEFECT
// Create the directory, as it might not exist.	WITHOUT_CLASSIFICATION	0.9999355233648418	WITHOUT_CLASSIFICATION	6.44766351582258E-5	DEFECT
// Calculate the total checksum // Convert the keys (source files) into a sorted array.	WITHOUT_CLASSIFICATION	0.9999000385619009	WITHOUT_CLASSIFICATION	9.996143809911009E-5	DEFECT
// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization	WITHOUT_CLASSIFICATION	0.9991212842658161	WITHOUT_CLASSIFICATION	8.787157341838855E-4	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999279765053728	WITHOUT_CLASSIFICATION	7.20234946271749E-5	DEFECT
// We just set the prefix for this fileset, and pass it up.	WITHOUT_CLASSIFICATION	0.9999279765053728	WITHOUT_CLASSIFICATION	7.20234946271749E-5	DEFECT
/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */	WITHOUT_CLASSIFICATION	0.9998198274750025	WITHOUT_CLASSIFICATION	1.80172524997479E-4	DEFECT
// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.	WITHOUT_CLASSIFICATION	0.9999447249332583	WITHOUT_CLASSIFICATION	5.527506674177824E-5	DEFECT
// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump	WITHOUT_CLASSIFICATION	0.9961346956784577	WITHOUT_CLASSIFICATION	0.0038653043215423877	DEFECT
// preserve permissions	WITHOUT_CLASSIFICATION	0.9999274486343281	WITHOUT_CLASSIFICATION	7.255136567184925E-5	DEFECT
// override permissions if set explicitly	WITHOUT_CLASSIFICATION	0.9999867834156326	WITHOUT_CLASSIFICATION	1.3216584367336106E-5	DEFECT
// Check if we can contact the URL	WITHOUT_CLASSIFICATION	0.9999887680104012	WITHOUT_CLASSIFICATION	1.1231989598771787E-5	DEFECT
// // Instance //	WITHOUT_CLASSIFICATION	0.9999403468561573	WITHOUT_CLASSIFICATION	5.965314384277983E-5	DEFECT
//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name	WITHOUT_CLASSIFICATION	0.9999305468009294	WITHOUT_CLASSIFICATION	6.945319907054693E-5	DEFECT
// Similar to a fileset, but doesn't allow dir attribute to be set	WITHOUT_CLASSIFICATION	0.9997777226806065	WITHOUT_CLASSIFICATION	2.2227731939349405E-4	DEFECT
// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!	WITHOUT_CLASSIFICATION	0.9999957313340705	WITHOUT_CLASSIFICATION	4.2686659295680074E-6	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted	WITHOUT_CLASSIFICATION	0.9999682578641997	WITHOUT_CLASSIFICATION	3.1742135800283855E-5	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9997145308262018	WITHOUT_CLASSIFICATION	2.8546917379819285E-4	DEFECT
// Do nothing if no resources (including nested text)	WITHOUT_CLASSIFICATION	0.9999941722546469	WITHOUT_CLASSIFICATION	5.82774535308856E-6	DEFECT
// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments	WITHOUT_CLASSIFICATION	0.9999456942756721	WITHOUT_CLASSIFICATION	5.430572432797757E-5	DEFECT
// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.	WITHOUT_CLASSIFICATION	0.9999786147692908	WITHOUT_CLASSIFICATION	2.1385230709167725E-5	DEFECT
// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors	WITHOUT_CLASSIFICATION	0.9999774511571629	WITHOUT_CLASSIFICATION	2.254884283724782E-5	DEFECT
/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */	WITHOUT_CLASSIFICATION	0.999758268823536	WITHOUT_CLASSIFICATION	2.417311764639111E-4	DEFECT
//at this point there is one trailing space to remove, if the list is not empty.	WITHOUT_CLASSIFICATION	0.998245710223678	WITHOUT_CLASSIFICATION	0.0017542897763219308	DEFECT
// Ignore and keep trying	WITHOUT_CLASSIFICATION	0.9999897016452646	WITHOUT_CLASSIFICATION	1.0298354735483782E-5	DEFECT
// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).	WITHOUT_CLASSIFICATION	0.9999938145392759	WITHOUT_CLASSIFICATION	6.185460724154817E-6	DEFECT
// Since we "look ahead" before adding, there's one last env var.	WITHOUT_CLASSIFICATION	0.9999218995221091	WITHOUT_CLASSIFICATION	7.810047789094515E-5	DEFECT
//noop default encoding used	WITHOUT_CLASSIFICATION	0.999987117678205	WITHOUT_CLASSIFICATION	1.2882321794870503E-5	DEFECT
// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment	WITHOUT_CLASSIFICATION	0.9999987928095994	WITHOUT_CLASSIFICATION	1.2071904006740089E-6	DEFECT
// Locate the auxiliary script	WITHOUT_CLASSIFICATION	0.9999467557427836	WITHOUT_CLASSIFICATION	5.324425721636302E-5	DEFECT
// Build the command	WITHOUT_CLASSIFICATION	0.9999251697893344	WITHOUT_CLASSIFICATION	7.483021066554245E-5	DEFECT
/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */	WITHOUT_CLASSIFICATION	0.9999772451732543	WITHOUT_CLASSIFICATION	2.2754826745711393E-5	DEFECT
//************************************************************************ //  protected and private methods //************************************************************************	WITHOUT_CLASSIFICATION	0.9999094597599868	WITHOUT_CLASSIFICATION	9.054024001320539E-5	DEFECT
// ensure that parent dir of dest file exists!	WITHOUT_CLASSIFICATION	0.9998749370254149	WITHOUT_CLASSIFICATION	1.2506297458508085E-4	DEFECT
// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.	WITHOUT_CLASSIFICATION	0.9999945369537927	WITHOUT_CLASSIFICATION	5.4630462073185814E-6	DEFECT
// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements	WITHOUT_CLASSIFICATION	0.9999031073376691	WITHOUT_CLASSIFICATION	9.689266233091668E-5	DEFECT
// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //	WITHOUT_CLASSIFICATION	0.999956123454253	WITHOUT_CLASSIFICATION	4.387654574701918E-5	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9998185204857478	WITHOUT_CLASSIFICATION	1.81479514252208E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9998185204857478	WITHOUT_CLASSIFICATION	1.81479514252208E-4	DEFECT
/* Methods below all add specific selectors */	WITHOUT_CLASSIFICATION	0.9998185204857478	WITHOUT_CLASSIFICATION	1.81479514252208E-4	DEFECT
/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */	WITHOUT_CLASSIFICATION	0.9999990571647074	WITHOUT_CLASSIFICATION	9.428352926318608E-7	DEFECT
//hand down	WITHOUT_CLASSIFICATION	0.9998904593385896	WITHOUT_CLASSIFICATION	1.0954066141045013E-4	DEFECT
// create intermediary directories - sometimes zip don't add them	WITHOUT_CLASSIFICATION	0.9996433440650427	WITHOUT_CLASSIFICATION	3.566559349572675E-4	DEFECT
// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it	WITHOUT_CLASSIFICATION	0.9999962106270892	WITHOUT_CLASSIFICATION	3.789372910672302E-6	DEFECT
/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */	WITHOUT_CLASSIFICATION	0.995689418476047	WITHOUT_CLASSIFICATION	0.004310581523953095	DEFECT
/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */	WITHOUT_CLASSIFICATION	0.9656754498065743	WITHOUT_CLASSIFICATION	0.03432455019342566	DEFECT
//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.	WITHOUT_CLASSIFICATION	0.9999688863444013	WITHOUT_CLASSIFICATION	3.1113655598646055E-5	DEFECT
// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed	WITHOUT_CLASSIFICATION	0.9999148707157651	WITHOUT_CLASSIFICATION	8.512928423489482E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999487539977456	WITHOUT_CLASSIFICATION	5.1246002254346825E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999487539977456	WITHOUT_CLASSIFICATION	5.1246002254346825E-5	DEFECT
// Ignore exception	WITHOUT_CLASSIFICATION	0.9999487539977456	WITHOUT_CLASSIFICATION	5.1246002254346825E-5	DEFECT
// classpath attributes go into a vector	WITHOUT_CLASSIFICATION	0.9999119201947777	WITHOUT_CLASSIFICATION	8.807980522230768E-5	DEFECT
// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest	WITHOUT_CLASSIFICATION	0.9999910160416522	WITHOUT_CLASSIFICATION	8.983958347869402E-6	DEFECT
//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't	WITHOUT_CLASSIFICATION	0.9999991849805339	WITHOUT_CLASSIFICATION	8.150194662264001E-7	DEFECT
// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.	WITHOUT_CLASSIFICATION	0.9999469247042395	WITHOUT_CLASSIFICATION	5.3075295760572516E-5	DEFECT
// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed	WITHOUT_CLASSIFICATION	0.9946016997858281	WITHOUT_CLASSIFICATION	0.0053983002141718235	DEFECT
// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.	WITHOUT_CLASSIFICATION	0.9987599852469327	WITHOUT_CLASSIFICATION	0.0012400147530673606	DEFECT
// Create an instance of the compiler, redirecting output to // the project log	WITHOUT_CLASSIFICATION	0.9999506806633035	WITHOUT_CLASSIFICATION	4.93193366964792E-5	DEFECT
// Setup the apt executable	WITHOUT_CLASSIFICATION	0.9999455187740647	WITHOUT_CLASSIFICATION	5.448122593538993E-5	DEFECT
//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.	WITHOUT_CLASSIFICATION	0.9997145308262018	WITHOUT_CLASSIFICATION	2.8546917379819285E-4	DEFECT
//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.9998242823702884	WITHOUT_CLASSIFICATION	1.7571762971155488E-4	DEFECT
// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.99997680167625	WITHOUT_CLASSIFICATION	2.319832375003877E-5	DEFECT
// add dest dir to classpath so that previously compiled and // untouched classes are on classpath	WITHOUT_CLASSIFICATION	0.99997680167625	WITHOUT_CLASSIFICATION	2.319832375003877E-5	DEFECT
// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.	WITHOUT_CLASSIFICATION	0.9999788732496497	WITHOUT_CLASSIFICATION	2.1126750350336732E-5	DEFECT
/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */	WITHOUT_CLASSIFICATION	0.8166103293779161	WITHOUT_CLASSIFICATION	0.18338967062208392	DEFECT
// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!	WITHOUT_CLASSIFICATION	0.9969202870033894	WITHOUT_CLASSIFICATION	0.0030797129966105186	DEFECT
//The following is data used while processing stdout of CVS command	WITHOUT_CLASSIFICATION	0.9974479902649609	WITHOUT_CLASSIFICATION	0.002552009735039218	DEFECT
// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'	WITHOUT_CLASSIFICATION	0.9999683951256619	WITHOUT_CLASSIFICATION	3.160487433814361E-5	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// viewpath	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// ClearCase items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// -branch	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"	WITHOUT_CLASSIFICATION	0.9998241444802265	WITHOUT_CLASSIFICATION	1.7585551977353553E-4	DEFECT
// CheckStyle:MemberNameCheck OFF - bc	WITHOUT_CLASSIFICATION	0.999765367491917	WITHOUT_CLASSIFICATION	2.3463250808298774E-4	DEFECT
// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream	WITHOUT_CLASSIFICATION	0.9997348172100888	WITHOUT_CLASSIFICATION	2.6518278991119427E-4	DEFECT
// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different	WITHOUT_CLASSIFICATION	0.999936727361983	WITHOUT_CLASSIFICATION	6.327263801698922E-5	DEFECT
// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility	WITHOUT_CLASSIFICATION	0.999913962473451	WITHOUT_CLASSIFICATION	8.603752654907182E-5	DEFECT
//error if both are empty, or both are set	WITHOUT_CLASSIFICATION	0.9999819254395556	WITHOUT_CLASSIFICATION	1.8074560444483224E-5	DEFECT
// hasCR is still true (for the second one)	WITHOUT_CLASSIFICATION	0.9996431705582595	WITHOUT_CLASSIFICATION	3.568294417404932E-4	DEFECT
// should be the default, as it integrates better in ant.	WITHOUT_CLASSIFICATION	0.9998834500565603	WITHOUT_CLASSIFICATION	1.1654994343967434E-4	DEFECT
// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);	WITHOUT_CLASSIFICATION	0.9999180209822759	WITHOUT_CLASSIFICATION	8.197901772418721E-5	DEFECT
// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation	WITHOUT_CLASSIFICATION	0.9998973706502694	WITHOUT_CLASSIFICATION	1.0262934973063259E-4	DEFECT
// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it	WITHOUT_CLASSIFICATION	0.9991165891195706	WITHOUT_CLASSIFICATION	8.834108804294684E-4	DEFECT
/* ========================================================================    *    * Instance variables.    */	WITHOUT_CLASSIFICATION	0.9999454620091408	WITHOUT_CLASSIFICATION	5.45379908591898E-5	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// swallow	WITHOUT_CLASSIFICATION	0.9997583143721659	WITHOUT_CLASSIFICATION	2.4168562783409618E-4	DEFECT
// If only default is specified and the property previously // existed in the property file, it is unchanged.	WITHOUT_CLASSIFICATION	0.9993185090804606	WITHOUT_CLASSIFICATION	6.814909195393437E-4	DEFECT
// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.	WITHOUT_CLASSIFICATION	0.9995639681418885	WITHOUT_CLASSIFICATION	4.3603185811142857E-4	DEFECT
// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.	WITHOUT_CLASSIFICATION	0.9934700546224556	WITHOUT_CLASSIFICATION	0.006529945377544359	DEFECT
// build the command line from what we got the format // as specified in the CCM.EXE help	WITHOUT_CLASSIFICATION	0.9996732442162495	WITHOUT_CLASSIFICATION	3.2675578375049286E-4	DEFECT
// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface	WITHOUT_CLASSIFICATION	0.9997080576928622	WITHOUT_CLASSIFICATION	2.919423071377451E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
// Default the viewpath to basedir if it is not specified	WITHOUT_CLASSIFICATION	0.9990505347937997	WITHOUT_CLASSIFICATION	9.49465206200197E-4	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9991130435465554	WITHOUT_CLASSIFICATION	8.869564534447173E-4	DEFECT
// -c	WITHOUT_CLASSIFICATION	0.9997599007790057	WITHOUT_CLASSIFICATION	2.4009922099437833E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -cfile	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999168745583435	WITHOUT_CLASSIFICATION	8.312544165653108E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// -I- or -I-Y or -I-N	WITHOUT_CLASSIFICATION	0.9999368276742587	WITHOUT_CLASSIFICATION	6.317232574127587E-5	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.99991334301642	WITHOUT_CLASSIFICATION	8.665698357995885E-5	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* -------------------- */	WITHOUT_CLASSIFICATION	0.9998922037868758	WITHOUT_CLASSIFICATION	1.0779621312418694E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// -Y	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// VSS items	WITHOUT_CLASSIFICATION	0.9999379948772499	WITHOUT_CLASSIFICATION	6.200512275014836E-5	DEFECT
// skip version info and general purpose byte	WITHOUT_CLASSIFICATION	0.999630900982066	WITHOUT_CLASSIFICATION	3.690990179340448E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
// first off, make sure that we've got a command and a vssdir and a label ...	WITHOUT_CLASSIFICATION	0.99991334301642	WITHOUT_CLASSIFICATION	8.665698357995885E-5	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */	WITHOUT_CLASSIFICATION	0.9998663608481074	WITHOUT_CLASSIFICATION	1.3363915189262496E-4	DEFECT
// we get the root classes and build up a set of // classes upon which they depend	WITHOUT_CLASSIFICATION	0.9999996723366789	WITHOUT_CLASSIFICATION	3.2766332122111667E-7	DEFECT
// read the constant pool in and resolve it	WITHOUT_CLASSIFICATION	0.9999590558487864	WITHOUT_CLASSIFICATION	4.094415121367577E-5	DEFECT
/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */	WITHOUT_CLASSIFICATION	0.9997392310307929	WITHOUT_CLASSIFICATION	2.607689692071262E-4	DEFECT
/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */	WITHOUT_CLASSIFICATION	0.9995972676058067	WITHOUT_CLASSIFICATION	4.027323941933638E-4	DEFECT
// depFile exists and is newer than the class file // need to get dependency list from the map.	WITHOUT_CLASSIFICATION	0.9995176277997276	WITHOUT_CLASSIFICATION	4.823722002722691E-4	DEFECT
// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.	WITHOUT_CLASSIFICATION	0.9996615304681998	WITHOUT_CLASSIFICATION	3.3846953180018656E-4	DEFECT
//always trigger file mode if commands are big enough	WITHOUT_CLASSIFICATION	0.9999336841565357	WITHOUT_CLASSIFICATION	6.631584346432306E-5	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9993676495711776	WITHOUT_CLASSIFICATION	6.323504288224663E-4	DEFECT
//fill in args	WITHOUT_CLASSIFICATION	0.9993676495711776	WITHOUT_CLASSIFICATION	6.323504288224663E-4	DEFECT
//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix	WITHOUT_CLASSIFICATION	0.9999194008952975	WITHOUT_CLASSIFICATION	8.059910470245233E-5	DEFECT
//now run the command of exe + settings + files	WITHOUT_CLASSIFICATION	0.9996117141221408	WITHOUT_CLASSIFICATION	3.882858778591532E-4	DEFECT
/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */	WITHOUT_CLASSIFICATION	0.9999877774095728	WITHOUT_CLASSIFICATION	1.2222590427180094E-5	DEFECT
/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */	WITHOUT_CLASSIFICATION	0.9999967894416569	WITHOUT_CLASSIFICATION	3.2105583431923154E-6	DEFECT
/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */	WITHOUT_CLASSIFICATION	0.9999848648734224	WITHOUT_CLASSIFICATION	1.5135126577716716E-5	DEFECT
// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list	WITHOUT_CLASSIFICATION	0.9835342876407686	WITHOUT_CLASSIFICATION	0.016465712359231388	DEFECT
/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */	WITHOUT_CLASSIFICATION	0.999221223649216	WITHOUT_CLASSIFICATION	7.787763507840265E-4	DEFECT
//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file	WITHOUT_CLASSIFICATION	0.9996325971092227	WITHOUT_CLASSIFICATION	3.6740289077726094E-4	DEFECT
// ejb jar file	WITHOUT_CLASSIFICATION	0.9999536170460476	WITHOUT_CLASSIFICATION	4.6382953952410654E-5	DEFECT
//client jar file	WITHOUT_CLASSIFICATION	0.9998825620842177	WITHOUT_CLASSIFICATION	1.1743791578228427E-4	DEFECT
// Have to catch this because of the semantics of calling main()	WITHOUT_CLASSIFICATION	0.9997502960962744	WITHOUT_CLASSIFICATION	2.497039037256081E-4	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999168745583435	WITHOUT_CLASSIFICATION	8.312544165653108E-5	DEFECT
/* ------------- */	WITHOUT_CLASSIFICATION	0.9999168745583435	WITHOUT_CLASSIFICATION	8.312544165653108E-5	DEFECT
// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)	WITHOUT_CLASSIFICATION	0.9998814860643827	WITHOUT_CLASSIFICATION	1.1851393561728133E-4	DEFECT
// class name (search in the classpath provided for the ejbjar element)	WITHOUT_CLASSIFICATION	0.9997972561375726	WITHOUT_CLASSIFICATION	2.0274386242737078E-4	DEFECT
// additionalargs	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// get all the files in the descriptor directory	WITHOUT_CLASSIFICATION	0.9999518851848146	WITHOUT_CLASSIFICATION	4.811481518544205E-5	DEFECT
// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.	WITHOUT_CLASSIFICATION	0.9999496067921047	WITHOUT_CLASSIFICATION	5.039320789538958E-5	DEFECT
// Since the descriptor read properly, everything should be o.k.	WITHOUT_CLASSIFICATION	0.9998611591170691	WITHOUT_CLASSIFICATION	1.388408829308996E-4	DEFECT
// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!	WITHOUT_CLASSIFICATION	0.9999873583159006	WITHOUT_CLASSIFICATION	1.2641684099471412E-5	DEFECT
/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */	WITHOUT_CLASSIFICATION	0.9997283623391621	WITHOUT_CLASSIFICATION	2.7163766083786574E-4	DEFECT
// Get the filename of vendor specific descriptor	WITHOUT_CLASSIFICATION	0.9999543829273542	WITHOUT_CLASSIFICATION	4.561707264578011E-5	DEFECT
// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.	WITHOUT_CLASSIFICATION	0.9926110179287743	WITHOUT_CLASSIFICATION	0.007388982071225682	DEFECT
// Update with changed Bean class	WITHOUT_CLASSIFICATION	0.9999093978208815	WITHOUT_CLASSIFICATION	9.060217911839373E-5	DEFECT
// need to close files and perhaps rename output	WITHOUT_CLASSIFICATION	0.9999833652096163	WITHOUT_CLASSIFICATION	1.6634790383655172E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999001220180438	WITHOUT_CLASSIFICATION	9.98779819562671E-5	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999001220180438	WITHOUT_CLASSIFICATION	9.98779819562671E-5	DEFECT
// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.	WITHOUT_CLASSIFICATION	0.9999913730237683	WITHOUT_CLASSIFICATION	8.626976231620087E-6	DEFECT
/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */	WITHOUT_CLASSIFICATION	0.9996150964731445	WITHOUT_CLASSIFICATION	3.8490352685549995E-4	DEFECT
//remove the .class	WITHOUT_CLASSIFICATION	0.999890152646377	WITHOUT_CLASSIFICATION	1.0984735362286052E-4	DEFECT
// create the output .jar, if required	WITHOUT_CLASSIFICATION	0.9999734552310099	WITHOUT_CLASSIFICATION	2.6544768990123744E-5	DEFECT
// change this to get the objects from the other reference	WITHOUT_CLASSIFICATION	0.9997417450041473	WITHOUT_CLASSIFICATION	2.5825499585273634E-4	DEFECT
// Available specification version must be >= required	WITHOUT_CLASSIFICATION	0.9994829523667016	WITHOUT_CLASSIFICATION	5.170476332984752E-4	DEFECT
// Implementation version must be >= required	WITHOUT_CLASSIFICATION	0.999443622177934	WITHOUT_CLASSIFICATION	5.563778220659105E-4	DEFECT
//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)	WITHOUT_CLASSIFICATION	0.9997905926191484	WITHOUT_CLASSIFICATION	2.0940738085166753E-4	DEFECT
/*     * Validates URL     */	WITHOUT_CLASSIFICATION	0.9999577421380265	WITHOUT_CLASSIFICATION	4.225786197364571E-5	DEFECT
// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop	WITHOUT_CLASSIFICATION	0.9955444129284645	WITHOUT_CLASSIFICATION	0.0044555870715354785	DEFECT
// iterator through all the files and process them.	WITHOUT_CLASSIFICATION	0.9999910449218716	WITHOUT_CLASSIFICATION	8.955078128402246E-6	DEFECT
// keys to optional attributes	WITHOUT_CLASSIFICATION	0.9999335172003404	WITHOUT_CLASSIFICATION	6.648279965967598E-5	DEFECT
// use the directory containing the target as the output directory	WITHOUT_CLASSIFICATION	0.9999933291207825	WITHOUT_CLASSIFICATION	6.670879217426438E-6	DEFECT
// null watchdog means no timeout, you'd better not check with null	WITHOUT_CLASSIFICATION	0.9997363700822821	WITHOUT_CLASSIFICATION	2.636299177179238E-4	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9991130435465554	WITHOUT_CLASSIFICATION	8.869564534447173E-4	DEFECT
// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"	WITHOUT_CLASSIFICATION	0.9686523401050438	WITHOUT_CLASSIFICATION	0.031347659894956297	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9977069036473427	WITHOUT_CLASSIFICATION	0.0022930963526572434	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9977069036473427	WITHOUT_CLASSIFICATION	0.0022930963526572434	DEFECT
// not necessary as JDepend would fail, but why loose // some time?	WITHOUT_CLASSIFICATION	0.9977069036473427	WITHOUT_CLASSIFICATION	0.0022930963526572434	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999490466244619	WITHOUT_CLASSIFICATION	5.095337553813215E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999490466244619	WITHOUT_CLASSIFICATION	5.095337553813215E-5	DEFECT
//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.	WITHOUT_CLASSIFICATION	0.9999948691038472	WITHOUT_CLASSIFICATION	5.1308961528934324E-6	DEFECT
/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */	WITHOUT_CLASSIFICATION	0.9952545953589899	DEFECT	0.004745404641010146	WITHOUT_CLASSIFICATION
// Quick return - no output do nothing.	WITHOUT_CLASSIFICATION	0.9999934149194538	WITHOUT_CLASSIFICATION	6.585080546209964E-6	DEFECT
// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".	WITHOUT_CLASSIFICATION	0.9999525565013948	WITHOUT_CLASSIFICATION	4.744349860525355E-5	DEFECT
//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.	WITHOUT_CLASSIFICATION	0.9992413908905551	WITHOUT_CLASSIFICATION	7.586091094449828E-4	DEFECT
// ignored.	WITHOUT_CLASSIFICATION	0.9999383691288216	WITHOUT_CLASSIFICATION	6.163087117831314E-5	DEFECT
/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */	WITHOUT_CLASSIFICATION	0.9991130435465554	WITHOUT_CLASSIFICATION	8.869564534447173E-4	DEFECT
// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.	WITHOUT_CLASSIFICATION	0.9999182426027775	WITHOUT_CLASSIFICATION	8.175739722257746E-5	DEFECT
// See wrapListener for reason:	WITHOUT_CLASSIFICATION	0.9997735947074299	WITHOUT_CLASSIFICATION	2.2640529257011708E-4	DEFECT
// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.	WITHOUT_CLASSIFICATION	0.9997726509964313	WITHOUT_CLASSIFICATION	2.273490035686441E-4	DEFECT
// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.	WITHOUT_CLASSIFICATION	0.9997327563849838	WITHOUT_CLASSIFICATION	2.6724361501612913E-4	DEFECT
// sorted by newest Kaffe version first	WITHOUT_CLASSIFICATION	0.9998038510601314	WITHOUT_CLASSIFICATION	1.9614893986869423E-4	DEFECT
//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);	WITHOUT_CLASSIFICATION	0.9998881073988652	WITHOUT_CLASSIFICATION	1.1189260113478174E-4	DEFECT
// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves	WITHOUT_CLASSIFICATION	0.9970942126237748	WITHOUT_CLASSIFICATION	0.0029057873762252185	DEFECT
// ignore it	WITHOUT_CLASSIFICATION	0.9999623913279191	WITHOUT_CLASSIFICATION	3.7608672080930035E-5	DEFECT
// NumberFormatException or ArrayOutOfBondsException could happen here	WITHOUT_CLASSIFICATION	0.9985865784974604	WITHOUT_CLASSIFICATION	0.001413421502539635	DEFECT
//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....	WITHOUT_CLASSIFICATION	0.9999191637671065	WITHOUT_CLASSIFICATION	8.083623289346567E-5	DEFECT
// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone	WITHOUT_CLASSIFICATION	0.9999865978362229	WITHOUT_CLASSIFICATION	1.340216377696049E-5	DEFECT
// Connect to the StarTeam server, and log on.	WITHOUT_CLASSIFICATION	0.9998988769107362	WITHOUT_CLASSIFICATION	1.0112308926385987E-4	DEFECT
// Simplest constructor, uses default encryption algorithm and compression level.	WITHOUT_CLASSIFICATION	0.9999432814609742	WITHOUT_CLASSIFICATION	5.671853902579434E-5	DEFECT
// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.	WITHOUT_CLASSIFICATION	0.9999748420499226	WITHOUT_CLASSIFICATION	2.5157950077366416E-5	DEFECT
// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).	WITHOUT_CLASSIFICATION	0.9991965338422945	WITHOUT_CLASSIFICATION	8.034661577055632E-4	DEFECT
// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.	WITHOUT_CLASSIFICATION	0.9999971709898755	WITHOUT_CLASSIFICATION	2.829010124516289E-6	DEFECT
// If we find a "file" attribute then act on a file otherwise act on a project	WITHOUT_CLASSIFICATION	0.9999289044262976	WITHOUT_CLASSIFICATION	7.10955737024245E-5	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9998382140223783	WITHOUT_CLASSIFICATION	1.6178597762179226E-4	DEFECT
// Special setters for the sub-classes	WITHOUT_CLASSIFICATION	0.9998382140223783	WITHOUT_CLASSIFICATION	1.6178597762179226E-4	DEFECT
// Login info is required	WITHOUT_CLASSIFICATION	0.9998128596246498	WITHOUT_CLASSIFICATION	1.871403753501851E-4	DEFECT
// Path to the SourceOffSite home directory /home/user/.sos	WITHOUT_CLASSIFICATION	0.9999271317958655	WITHOUT_CLASSIFICATION	7.286820413453604E-5	DEFECT
// Check if source is a directory	WITHOUT_CLASSIFICATION	0.9999872724374638	WITHOUT_CLASSIFICATION	1.2727562536260277E-5	DEFECT
/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */	WITHOUT_CLASSIFICATION	0.966547640093339	WITHOUT_CLASSIFICATION	0.03345235990666092	DEFECT
// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc	WITHOUT_CLASSIFICATION	0.9997169657826578	WITHOUT_CLASSIFICATION	2.830342173421415E-4	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9980462316941426	WITHOUT_CLASSIFICATION	0.001953768305857405	DEFECT
// only track progress for files larger than 100kb in verbose mode	WITHOUT_CLASSIFICATION	0.9980462316941426	WITHOUT_CLASSIFICATION	0.001953768305857405	DEFECT
// since filesize keeps on decreasing we have to store the // initial filesize	WITHOUT_CLASSIFICATION	0.9997513032211928	WITHOUT_CLASSIFICATION	2.4869677880726474E-4	DEFECT
// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9997231074752243	WITHOUT_CLASSIFICATION	2.7689252477571306E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9997346863067615	WITHOUT_CLASSIFICATION	2.6531369323848787E-4	DEFECT
// If the file doesn't pass the include/exclude tests, skip it.	WITHOUT_CLASSIFICATION	0.9997346863067615	WITHOUT_CLASSIFICATION	2.6531369323848787E-4	DEFECT
// We try to update the status once to give StarTeam // another chance.	WITHOUT_CLASSIFICATION	0.9999751496531163	WITHOUT_CLASSIFICATION	2.4850346883765267E-5	DEFECT
// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.	WITHOUT_CLASSIFICATION	0.9995981854958723	WITHOUT_CLASSIFICATION	4.018145041276574E-4	DEFECT
// once we find a folder that isn't in the repository, // anything below it can be deleted.	WITHOUT_CLASSIFICATION	0.9998275592181338	WITHOUT_CLASSIFICATION	1.7244078186621397E-4	DEFECT
/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999748387418892	WITHOUT_CLASSIFICATION	2.5161258110736748E-5	DEFECT
// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link	WITHOUT_CLASSIFICATION	0.986797719232345	WITHOUT_CLASSIFICATION	0.01320228076765506	DEFECT
// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9996957546817483	WITHOUT_CLASSIFICATION	3.0424531825163584E-4	DEFECT
// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help	WITHOUT_CLASSIFICATION	0.9992314592985071	WITHOUT_CLASSIFICATION	7.685407014928802E-4	DEFECT
// Not a .class file or the one we'd generate	WITHOUT_CLASSIFICATION	0.9998749540601314	WITHOUT_CLASSIFICATION	1.2504593986860716E-4	DEFECT
// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.	WITHOUT_CLASSIFICATION	0.9996677776317411	WITHOUT_CLASSIFICATION	3.322223682589713E-4	DEFECT
// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //	WITHOUT_CLASSIFICATION	0.9993430880025395	WITHOUT_CLASSIFICATION	6.569119974604896E-4	DEFECT
// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //	WITHOUT_CLASSIFICATION	0.953695882778367	WITHOUT_CLASSIFICATION	0.04630411722163301	DEFECT
// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //	WITHOUT_CLASSIFICATION	0.9735527421538617	WITHOUT_CLASSIFICATION	0.026447257846138342	DEFECT
// record data about the last scanned resource	WITHOUT_CLASSIFICATION	0.9995554818096949	WITHOUT_CLASSIFICATION	4.4451819030511376E-4	DEFECT
// path containing one or more elements	WITHOUT_CLASSIFICATION	0.9999855460319661	WITHOUT_CLASSIFICATION	1.4453968033997553E-5	DEFECT
// just append beginToken and search further	WITHOUT_CLASSIFICATION	0.9999780001591267	WITHOUT_CLASSIFICATION	2.1999840873249672E-5	DEFECT
//create the command to run Java, including user specified options	WITHOUT_CLASSIFICATION	0.9977807267996567	WITHOUT_CLASSIFICATION	0.0022192732003432805	DEFECT
// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.	WITHOUT_CLASSIFICATION	0.9998463606977182	WITHOUT_CLASSIFICATION	1.5363930228180512E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
// CheckStyle:VisibilityModifier ON	WITHOUT_CLASSIFICATION	0.9998457122928391	WITHOUT_CLASSIFICATION	1.5428770716075768E-4	DEFECT
/* now check each Resource in case the child only           lets through files from any children IT may have: */	WITHOUT_CLASSIFICATION	0.9999549798702086	WITHOUT_CLASSIFICATION	4.502012979143643E-5	DEFECT
// Quick return: directories cannot be signed	WITHOUT_CLASSIFICATION	0.9993681303622336	WITHOUT_CLASSIFICATION	6.318696377664122E-4	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */	WITHOUT_CLASSIFICATION	0.9999810528756066	WITHOUT_CLASSIFICATION	1.8947124393449412E-5	DEFECT
// // -----  Set default values  ----- //	WITHOUT_CLASSIFICATION	0.9999640796624599	WITHOUT_CLASSIFICATION	3.5920337540144633E-5	DEFECT
// nothing specified - use default	WITHOUT_CLASSIFICATION	0.9999417944903188	WITHOUT_CLASSIFICATION	5.820550968110947E-5	DEFECT
// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.	WITHOUT_CLASSIFICATION	0.9998629775565908	WITHOUT_CLASSIFICATION	1.370224434091866E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
//find the out-of-date targets:	WITHOUT_CLASSIFICATION	0.9997244883952044	WITHOUT_CLASSIFICATION	2.755116047954642E-4	DEFECT
// write namespace declarations	WITHOUT_CLASSIFICATION	0.9999322268718176	WITHOUT_CLASSIFICATION	6.777312818240468E-5	DEFECT
// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>	WITHOUT_CLASSIFICATION	0.9988067516393836	WITHOUT_CLASSIFICATION	0.001193248360616348	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999518798867276	WITHOUT_CLASSIFICATION	4.812011327225957E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999518798867276	WITHOUT_CLASSIFICATION	4.812011327225957E-5	DEFECT
// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.	WITHOUT_CLASSIFICATION	0.9978530306744725	WITHOUT_CLASSIFICATION	0.002146969325527462	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// NotReached	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//no need to synchronize, as Vector is always synchronized	WITHOUT_CLASSIFICATION	0.9995106547770134	WITHOUT_CLASSIFICATION	4.893452229865984E-4	DEFECT
// Eliminate consecutive slashes after the drive spec:	WITHOUT_CLASSIFICATION	0.999919404892443	WITHOUT_CLASSIFICATION	8.059510755694426E-5	DEFECT
//if it does not, then the file is not up to date.	WITHOUT_CLASSIFICATION	0.9981708361163854	WITHOUT_CLASSIFICATION	0.001829163883614682	DEFECT
// record destdir for later use in getResource	WITHOUT_CLASSIFICATION	0.9991332799454375	WITHOUT_CLASSIFICATION	8.667200545624713E-4	DEFECT
// Check to see if it's an inner class 'com.company.Class$Inner'	WITHOUT_CLASSIFICATION	0.999967117385174	WITHOUT_CLASSIFICATION	3.288261482591695E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999872822201497	WITHOUT_CLASSIFICATION	1.2717779850370817E-5	DEFECT
// treat non-matching groups as empty matches	WITHOUT_CLASSIFICATION	0.9999872822201497	WITHOUT_CLASSIFICATION	1.2717779850370817E-5	DEFECT
/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */	WITHOUT_CLASSIFICATION	0.9687692697667324	WITHOUT_CLASSIFICATION	0.03123073023326764	DEFECT
// write 8-bit	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);	WITHOUT_CLASSIFICATION	0.9998220788518617	WITHOUT_CLASSIFICATION	1.7792114813828817E-4	DEFECT
// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //	WITHOUT_CLASSIFICATION	0.9997774383214266	WITHOUT_CLASSIFICATION	2.2256167857344608E-4	DEFECT
// Following block contains unrolled code which could be shortened by // coding it in additional loops.	WITHOUT_CLASSIFICATION	0.9999483876858524	WITHOUT_CLASSIFICATION	5.161231414766914E-5	DEFECT
/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */	WITHOUT_CLASSIFICATION	0.9931116009370053	WITHOUT_CLASSIFICATION	0.006888399062994591	DEFECT
// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.	WITHOUT_CLASSIFICATION	0.999925617677168	WITHOUT_CLASSIFICATION	7.438232283194365E-5	DEFECT
//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============	WITHOUT_CLASSIFICATION	0.9997451765871667	WITHOUT_CLASSIFICATION	2.548234128333188E-4	DEFECT
// The clean way would be to throw an exception. //throw new IOException("crc error");	WITHOUT_CLASSIFICATION	0.9936546359741272	WITHOUT_CLASSIFICATION	0.006345364025872937	DEFECT
// make next blocks readable without error // (repair feature, not yet documented, not tested)	WITHOUT_CLASSIFICATION	0.90330835749604	WITHOUT_CLASSIFICATION	0.09669164250395995	DEFECT
/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */	WITHOUT_CLASSIFICATION	0.99913493662979	WITHOUT_CLASSIFICATION	8.650633702099572E-4	DEFECT
// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.	WITHOUT_CLASSIFICATION	0.9976638330758059	WITHOUT_CLASSIFICATION	0.0023361669241941077	DEFECT
// deprecated, but email is byte-oriented	WITHOUT_CLASSIFICATION	0.9997140987971797	WITHOUT_CLASSIFICATION	2.859012028204037E-4	DEFECT
// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //	WITHOUT_CLASSIFICATION	0.938748353650059	WITHOUT_CLASSIFICATION	0.06125164634994091	DEFECT
// version needed to extract // general purpose bit flag	WITHOUT_CLASSIFICATION	0.998605079774529	WITHOUT_CLASSIFICATION	0.0013949202254711264	DEFECT
// requires version 2 as we are going to store length info // in the data descriptor	WITHOUT_CLASSIFICATION	0.9769672597093706	WITHOUT_CLASSIFICATION	0.02303274029062936	DEFECT
// file comment	WITHOUT_CLASSIFICATION	0.9999669919907208	WITHOUT_CLASSIFICATION	3.3008009279236504E-5	DEFECT
// swallow, throw the original exception instead	WITHOUT_CLASSIFICATION	0.9985827268614551	WITHOUT_CLASSIFICATION	0.0014172731385448218	DEFECT
/* compressed size                 */	WITHOUT_CLASSIFICATION	0.9997517417574412	WITHOUT_CLASSIFICATION	2.4825824255879364E-4	DEFECT
/* disk number start               */	WITHOUT_CLASSIFICATION	0.998888303626403	WITHOUT_CLASSIFICATION	0.0011116963735969434	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9986226099977049	WITHOUT_CLASSIFICATION	0.001377390002295023	DEFECT
/* total number of entries in      */	WITHOUT_CLASSIFICATION	0.9986226099977049	WITHOUT_CLASSIFICATION	0.001377390002295023	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows	DEFECT	0.9728404023500716	WITHOUT_CLASSIFICATION	0.027159597649928358	DEFECT
// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.	DEFECT	0.8655354623575143	WITHOUT_CLASSIFICATION	0.13446453764248564	DEFECT
// FIXME formatters are not thread-safe	DEFECT	0.9952436221036441	WITHOUT_CLASSIFICATION	0.004756377896355872	DEFECT
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??	DEFECT	0.9977209411734272	WITHOUT_CLASSIFICATION	0.0022790588265728345	DEFECT
// I hate to admit it, but we don't know what happened // here.  Throw the Exception.	DEFECT	0.9419385673455708	WITHOUT_CLASSIFICATION	0.05806143265442916	DEFECT
// FIXME: Is "No Namespace is Empty Namespace" really OK?	DEFECT	0.9313785343699387	DEFECT	0.06862146563006133	WITHOUT_CLASSIFICATION
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.	DEFECT	0.9960584586976593	WITHOUT_CLASSIFICATION	0.0039415413023406775	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5575847692863173	DEFECT	0.44241523071368266	WITHOUT_CLASSIFICATION
// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.	DEFECT	0.6671261570924303	WITHOUT_CLASSIFICATION	0.3328738429075697	DEFECT
// XXX: (Jon Skeet) The comment "if it hasn't been done already" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something.	DEFECT	0.9998180788242591	WITHOUT_CLASSIFICATION	1.8192117574088534E-4	DEFECT
// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.	DEFECT	0.7388922687481669	WITHOUT_CLASSIFICATION	0.261107731251833	DEFECT
// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver	DEFECT	0.5575847692863173	DEFECT	0.44241523071368266	WITHOUT_CLASSIFICATION
// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...	DEFECT	0.8706752259579061	WITHOUT_CLASSIFICATION	0.1293247740420938	DEFECT
