// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9993218146656762	WITHOUT_CLASSIFICATION	6.781853343239302E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9990876090292244	WITHOUT_CLASSIFICATION	9.123909707756725E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9996103628255517	WITHOUT_CLASSIFICATION	3.8963717444838236E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9985302675227204	WITHOUT_CLASSIFICATION	0.0014697324772795916	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9995279363294369	WITHOUT_CLASSIFICATION	4.720636705631343E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9995998402919769	WITHOUT_CLASSIFICATION	4.001597080231207E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9990736450563262	WITHOUT_CLASSIFICATION	9.263549436738754E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9996775470456573	WITHOUT_CLASSIFICATION	3.2245295434284545E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999160800954531	WITHOUT_CLASSIFICATION	8.39199045469525E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9989044589632936	WITHOUT_CLASSIFICATION	0.0010955410367064192	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996146836192161	WITHOUT_CLASSIFICATION	3.8531638078391576E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9990908773803301	WITHOUT_CLASSIFICATION	9.091226196698667E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9994518705224005	WITHOUT_CLASSIFICATION	5.481294775995275E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9996651351293709	WITHOUT_CLASSIFICATION	3.3486487062915464E-4	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9996654854665548	WITHOUT_CLASSIFICATION	3.345145334452563E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.998721710881856	WITHOUT_CLASSIFICATION	0.0012782891181440592	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9996630749730008	WITHOUT_CLASSIFICATION	3.3692502699921424E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996474931553239	WITHOUT_CLASSIFICATION	3.525068446761388E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9966753385253562	WITHOUT_CLASSIFICATION	0.0033246614746437596	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998936852089628	WITHOUT_CLASSIFICATION	1.0631479103729806E-4	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9985257541249285	WITHOUT_CLASSIFICATION	0.0014742458750714984	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9979714117199912	WITHOUT_CLASSIFICATION	0.00202858828000888	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9982894937702893	WITHOUT_CLASSIFICATION	0.001710506229710793	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9979928068930056	WITHOUT_CLASSIFICATION	0.002007193106994343	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9996089975818943	WITHOUT_CLASSIFICATION	3.9100241810580144E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9996910954275364	WITHOUT_CLASSIFICATION	3.0890457246362423E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9998934488044908	WITHOUT_CLASSIFICATION	1.0655119550912484E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996284015574401	WITHOUT_CLASSIFICATION	3.715984425598266E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9995557427511609	WITHOUT_CLASSIFICATION	4.4425724883915933E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9912815194707937	WITHOUT_CLASSIFICATION	0.008718480529206294	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9997783417073891	WITHOUT_CLASSIFICATION	2.2165829261083954E-4	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9995904181726957	WITHOUT_CLASSIFICATION	4.095818273043279E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9996589138659712	WITHOUT_CLASSIFICATION	3.410861340288942E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9988925384489501	WITHOUT_CLASSIFICATION	0.0011074615510499454	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999607807560756	WITHOUT_CLASSIFICATION	3.92192439244072E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9998567989930852	WITHOUT_CLASSIFICATION	1.4320100691486842E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9889370077161165	WITHOUT_CLASSIFICATION	0.011062992283883459	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9997756578089702	WITHOUT_CLASSIFICATION	2.2434219102983587E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999103499985394	WITHOUT_CLASSIFICATION	8.965000146055112E-5	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9996234673019647	WITHOUT_CLASSIFICATION	3.765326980353475E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9997982321605168	WITHOUT_CLASSIFICATION	2.017678394831825E-4	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9993280444261786	WITHOUT_CLASSIFICATION	6.719555738214734E-4	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.999730567322468	WITHOUT_CLASSIFICATION	2.694326775319583E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.998069437408823	WITHOUT_CLASSIFICATION	0.0019305625911769113	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9997213956404553	WITHOUT_CLASSIFICATION	2.786043595447296E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9989044589632936	WITHOUT_CLASSIFICATION	0.0010955410367064192	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996146836192161	WITHOUT_CLASSIFICATION	3.8531638078391576E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9990908773803301	WITHOUT_CLASSIFICATION	9.091226196698667E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9995557403109322	WITHOUT_CLASSIFICATION	4.44259689067789E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9994518705224005	WITHOUT_CLASSIFICATION	5.481294775995275E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9996651351293709	WITHOUT_CLASSIFICATION	3.3486487062915464E-4	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9996654854665548	WITHOUT_CLASSIFICATION	3.345145334452563E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9995998536328827	WITHOUT_CLASSIFICATION	4.0014636711717714E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9995998536328827	WITHOUT_CLASSIFICATION	4.0014636711717714E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9995998536328827	WITHOUT_CLASSIFICATION	4.0014636711717714E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9995279363294369	WITHOUT_CLASSIFICATION	4.720636705631343E-4	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9995907588735016	WITHOUT_CLASSIFICATION	4.092411264984446E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9984324450371639	WITHOUT_CLASSIFICATION	0.0015675549628361113	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9996159500262666	WITHOUT_CLASSIFICATION	3.8404997373345885E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996474931553239	WITHOUT_CLASSIFICATION	3.525068446761388E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996760178993487	WITHOUT_CLASSIFICATION	3.2398210065143077E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9996089975818943	WITHOUT_CLASSIFICATION	3.9100241810580144E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9996910954275364	WITHOUT_CLASSIFICATION	3.0890457246362423E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996284015574401	WITHOUT_CLASSIFICATION	3.715984425598266E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9997783417073891	WITHOUT_CLASSIFICATION	2.2165829261083954E-4	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9965939772484202	WITHOUT_CLASSIFICATION	0.0034060227515797783	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.999897124190012	WITHOUT_CLASSIFICATION	1.0287580998802451E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999649652128071	WITHOUT_CLASSIFICATION	3.503478719290075E-4	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9990950370459143	WITHOUT_CLASSIFICATION	9.049629540857679E-4	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9991516313268716	WITHOUT_CLASSIFICATION	8.483686731285455E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999607807560756	WITHOUT_CLASSIFICATION	3.92192439244072E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9889370077161165	WITHOUT_CLASSIFICATION	0.011062992283883459	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9998965051262975	WITHOUT_CLASSIFICATION	1.0349487370253259E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9990636625618248	WITHOUT_CLASSIFICATION	9.363374381751551E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9995377062323901	WITHOUT_CLASSIFICATION	4.6229376760988745E-4	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9996455971129546	WITHOUT_CLASSIFICATION	3.544028870454255E-4	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9996037883493597	WITHOUT_CLASSIFICATION	3.962116506402944E-4	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9983332609003994	WITHOUT_CLASSIFICATION	0.001666739099600611	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9451592347030146	WITHOUT_CLASSIFICATION	0.05484076529698542	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9983027288490393	WITHOUT_CLASSIFICATION	0.0016972711509608395	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9998896277970931	WITHOUT_CLASSIFICATION	1.1037220290677268E-4	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9980266004200832	WITHOUT_CLASSIFICATION	0.001973399579916748	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9992276139813895	WITHOUT_CLASSIFICATION	7.723860186104715E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9970959186467938	WITHOUT_CLASSIFICATION	0.0029040813532062375	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9998896277970931	WITHOUT_CLASSIFICATION	1.1037220290677268E-4	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9980266004200832	WITHOUT_CLASSIFICATION	0.001973399579916748	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9993451998541488	WITHOUT_CLASSIFICATION	6.548001458512779E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9993451998541488	WITHOUT_CLASSIFICATION	6.548001458512779E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999736277142418	WITHOUT_CLASSIFICATION	2.6372285758196414E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9997835837884312	WITHOUT_CLASSIFICATION	2.1641621156864277E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9997114513084302	WITHOUT_CLASSIFICATION	2.8854869156978523E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999736277142418	WITHOUT_CLASSIFICATION	2.6372285758196414E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9997835837884312	WITHOUT_CLASSIFICATION	2.1641621156864277E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9996848518385109	WITHOUT_CLASSIFICATION	3.1514816148916775E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998185284456858	WITHOUT_CLASSIFICATION	1.8147155431421432E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.999927857523328	WITHOUT_CLASSIFICATION	7.214247667199459E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.999927857523328	WITHOUT_CLASSIFICATION	7.214247667199459E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9997827396865312	WITHOUT_CLASSIFICATION	2.1726031346876613E-4	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.999971308093376	WITHOUT_CLASSIFICATION	2.869190662397783E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.999971308093376	WITHOUT_CLASSIFICATION	2.869190662397783E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9997729139351166	WITHOUT_CLASSIFICATION	2.270860648834221E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9997350775461308	WITHOUT_CLASSIFICATION	2.649224538692102E-4	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9997478418974789	WITHOUT_CLASSIFICATION	2.521581025211016E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999832305176926	WITHOUT_CLASSIFICATION	1.6769482307500766E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9992990501666648	WITHOUT_CLASSIFICATION	7.009498333351527E-4	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9997476132988958	WITHOUT_CLASSIFICATION	2.523867011042069E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9996720621855181	WITHOUT_CLASSIFICATION	3.279378144819282E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9996466050941667	WITHOUT_CLASSIFICATION	3.533949058333168E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9995930832791856	WITHOUT_CLASSIFICATION	4.0691672081437683E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9989326134714158	WITHOUT_CLASSIFICATION	0.0010673865285841355	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9992936446604432	WITHOUT_CLASSIFICATION	7.063553395568245E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9997183116245983	WITHOUT_CLASSIFICATION	2.81688375401725E-4	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9994802942223348	WITHOUT_CLASSIFICATION	5.197057776651733E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9935899069128631	WITHOUT_CLASSIFICATION	0.0064100930871369	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998904305384688	WITHOUT_CLASSIFICATION	1.0956946153117188E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9995845370109745	WITHOUT_CLASSIFICATION	4.154629890255723E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9998058774210783	WITHOUT_CLASSIFICATION	1.9412257892175585E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9998058774210783	WITHOUT_CLASSIFICATION	1.9412257892175585E-4	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999427387723555	WITHOUT_CLASSIFICATION	5.7261227644439174E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999427387723555	WITHOUT_CLASSIFICATION	5.7261227644439174E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9994056264851121	WITHOUT_CLASSIFICATION	5.943735148880033E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9998500704478024	WITHOUT_CLASSIFICATION	1.4992955219766575E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9994283103890972	WITHOUT_CLASSIFICATION	5.716896109028493E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999887743927209	WITHOUT_CLASSIFICATION	1.1225607279105738E-4	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9994802942223348	WITHOUT_CLASSIFICATION	5.197057776651733E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.998791404155415	WITHOUT_CLASSIFICATION	0.0012085958445849975	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9996682900275332	WITHOUT_CLASSIFICATION	3.317099724667567E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9997963271529848	WITHOUT_CLASSIFICATION	2.0367284701509097E-4	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999364505510623	WITHOUT_CLASSIFICATION	6.354944893773723E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9984647640904891	WITHOUT_CLASSIFICATION	0.0015352359095109581	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.999722885612698	WITHOUT_CLASSIFICATION	2.7711438730204614E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9996720048161748	WITHOUT_CLASSIFICATION	3.2799518382514763E-4	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9993638090692527	WITHOUT_CLASSIFICATION	6.361909307471897E-4	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999282228126137	WITHOUT_CLASSIFICATION	7.177718738629882E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999553888254333	WITHOUT_CLASSIFICATION	4.4611174566706024E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9998069713396316	WITHOUT_CLASSIFICATION	1.9302866036851831E-4	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9998069713396316	WITHOUT_CLASSIFICATION	1.9302866036851831E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9988543781597341	WITHOUT_CLASSIFICATION	0.001145621840265901	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9996465019842831	WITHOUT_CLASSIFICATION	3.5349801571691827E-4	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9988790369706609	WITHOUT_CLASSIFICATION	0.0011209630293391587	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9998923540917827	WITHOUT_CLASSIFICATION	1.0764590821727822E-4	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999900844949163	WITHOUT_CLASSIFICATION	9.915505083702343E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9997578539470965	WITHOUT_CLASSIFICATION	2.4214605290350473E-4	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999080911406175	WITHOUT_CLASSIFICATION	9.190885938256323E-5	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9995463583192021	WITHOUT_CLASSIFICATION	4.5364168079789534E-4	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999260873059337	WITHOUT_CLASSIFICATION	7.39126940663656E-5	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9993500043989388	WITHOUT_CLASSIFICATION	6.499956010612589E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9993753520513244	WITHOUT_CLASSIFICATION	6.246479486756803E-4	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9997262925233399	WITHOUT_CLASSIFICATION	2.7370747666011143E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.99971658037575	WITHOUT_CLASSIFICATION	2.8341962425000133E-4	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9995793512773458	WITHOUT_CLASSIFICATION	4.206487226542424E-4	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9997432711082193	WITHOUT_CLASSIFICATION	2.5672889178077375E-4	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9997709684776992	WITHOUT_CLASSIFICATION	2.2903152230090458E-4	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9998810776549837	WITHOUT_CLASSIFICATION	1.189223450163905E-4	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999822269819868	WITHOUT_CLASSIFICATION	1.7773018013117386E-5	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9975527607852397	WITHOUT_CLASSIFICATION	0.00244723921476019	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9997940107650138	WITHOUT_CLASSIFICATION	2.0598923498613844E-4	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9996949532946287	WITHOUT_CLASSIFICATION	3.050467053713353E-4	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999070769378102	WITHOUT_CLASSIFICATION	9.29230621897365E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9991761634361944	WITHOUT_CLASSIFICATION	8.238365638055551E-4	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9995738824641528	WITHOUT_CLASSIFICATION	4.261175358472749E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9997686233483104	WITHOUT_CLASSIFICATION	2.313766516894582E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9997114432518608	WITHOUT_CLASSIFICATION	2.88556748139218E-4	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9991993083631022	WITHOUT_CLASSIFICATION	8.00691636897809E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.997617393235545	WITHOUT_CLASSIFICATION	0.002382606764455013	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9969156019018774	WITHOUT_CLASSIFICATION	0.0030843980981226163	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999520496208313	WITHOUT_CLASSIFICATION	4.795037916867476E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9998630408749452	WITHOUT_CLASSIFICATION	1.3695912505483376E-4	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9998630408749452	WITHOUT_CLASSIFICATION	1.3695912505483376E-4	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9991839532628934	WITHOUT_CLASSIFICATION	8.160467371065649E-4	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9991839532628934	WITHOUT_CLASSIFICATION	8.160467371065649E-4	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994378783165978	WITHOUT_CLASSIFICATION	5.621216834022285E-4	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9998204136116361	WITHOUT_CLASSIFICATION	1.7958638836390847E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9998484997419668	WITHOUT_CLASSIFICATION	1.5150025803334032E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9998484997419668	WITHOUT_CLASSIFICATION	1.5150025803334032E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9990694130630816	WITHOUT_CLASSIFICATION	9.305869369183163E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9992473554420241	WITHOUT_CLASSIFICATION	7.526445579759525E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9996990913114125	WITHOUT_CLASSIFICATION	3.009086885874548E-4	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9996990913114125	WITHOUT_CLASSIFICATION	3.009086885874548E-4	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9996990913114125	WITHOUT_CLASSIFICATION	3.009086885874548E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9992473554420241	WITHOUT_CLASSIFICATION	7.526445579759525E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999258010981769	WITHOUT_CLASSIFICATION	7.41989018231617E-5	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9998593142426496	WITHOUT_CLASSIFICATION	1.4068575735042837E-4	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9991570148451522	WITHOUT_CLASSIFICATION	8.429851548478149E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9993358379501144	WITHOUT_CLASSIFICATION	6.641620498856908E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9995178182770721	WITHOUT_CLASSIFICATION	4.821817229279451E-4	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9996373046368398	WITHOUT_CLASSIFICATION	3.6269536316027844E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9990876090292244	WITHOUT_CLASSIFICATION	9.123909707756725E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9996103628255517	WITHOUT_CLASSIFICATION	3.8963717444838236E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9985302675227204	WITHOUT_CLASSIFICATION	0.0014697324772795916	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9995279363294369	WITHOUT_CLASSIFICATION	4.720636705631343E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9995998402919769	WITHOUT_CLASSIFICATION	4.001597080231207E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9990736450563262	WITHOUT_CLASSIFICATION	9.263549436738754E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9996775470456573	WITHOUT_CLASSIFICATION	3.2245295434284545E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9989044589632936	WITHOUT_CLASSIFICATION	0.0010955410367064192	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996146836192161	WITHOUT_CLASSIFICATION	3.8531638078391576E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9990908773803301	WITHOUT_CLASSIFICATION	9.091226196698667E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9995557403109322	WITHOUT_CLASSIFICATION	4.44259689067789E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9994518705224005	WITHOUT_CLASSIFICATION	5.481294775995275E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9996651351293709	WITHOUT_CLASSIFICATION	3.3486487062915464E-4	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9996654854665548	WITHOUT_CLASSIFICATION	3.345145334452563E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.998721710881856	WITHOUT_CLASSIFICATION	0.0012782891181440592	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9996630749730008	WITHOUT_CLASSIFICATION	3.3692502699921424E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9996896847796058	WITHOUT_CLASSIFICATION	3.103152203941096E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999447338408725	WITHOUT_CLASSIFICATION	5.526615912759293E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996474931553239	WITHOUT_CLASSIFICATION	3.525068446761388E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9966753385253562	WITHOUT_CLASSIFICATION	0.0033246614746437596	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998936852089628	WITHOUT_CLASSIFICATION	1.0631479103729806E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996760178993487	WITHOUT_CLASSIFICATION	3.2398210065143077E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9996089975818943	WITHOUT_CLASSIFICATION	3.9100241810580144E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9996910954275364	WITHOUT_CLASSIFICATION	3.0890457246362423E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9998934488044908	WITHOUT_CLASSIFICATION	1.0655119550912484E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996284015574401	WITHOUT_CLASSIFICATION	3.715984425598266E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9997107204856875	WITHOUT_CLASSIFICATION	2.892795143124437E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9997377456564487	WITHOUT_CLASSIFICATION	2.6225434355129805E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9996589138659712	WITHOUT_CLASSIFICATION	3.410861340288942E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9995557427511609	WITHOUT_CLASSIFICATION	4.4425724883915933E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9997783417073891	WITHOUT_CLASSIFICATION	2.2165829261083954E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9912815194707937	WITHOUT_CLASSIFICATION	0.008718480529206294	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.99898059673134	WITHOUT_CLASSIFICATION	0.001019403268660001	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9998722927637459	WITHOUT_CLASSIFICATION	1.277072362541181E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9997783417073891	WITHOUT_CLASSIFICATION	2.2165829261083954E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999607807560756	WITHOUT_CLASSIFICATION	3.92192439244072E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9988925384489501	WITHOUT_CLASSIFICATION	0.0011074615510499454	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.999956280793405	WITHOUT_CLASSIFICATION	4.371920659492108E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9889370077161165	WITHOUT_CLASSIFICATION	0.011062992283883459	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9997332447581425	WITHOUT_CLASSIFICATION	2.667552418575854E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.99898059673134	WITHOUT_CLASSIFICATION	0.001019403268660001	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9889370077161165	WITHOUT_CLASSIFICATION	0.011062992283883459	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9967565072151581	WITHOUT_CLASSIFICATION	0.0032434927848420674	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9998885825678864	WITHOUT_CLASSIFICATION	1.1141743211363323E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9996330686126762	WITHOUT_CLASSIFICATION	3.669313873238343E-4	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9995993791171336	WITHOUT_CLASSIFICATION	4.0062088286641953E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9992858001295312	WITHOUT_CLASSIFICATION	7.141998704688373E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999001971826235	WITHOUT_CLASSIFICATION	9.980281737644519E-5	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9993382965563892	WITHOUT_CLASSIFICATION	6.617034436108866E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9987808627344837	WITHOUT_CLASSIFICATION	0.0012191372655162135	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.999496062914091	WITHOUT_CLASSIFICATION	5.039370859090537E-4	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9991043335034762	WITHOUT_CLASSIFICATION	8.956664965238038E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9996012589692933	WITHOUT_CLASSIFICATION	3.9874103070671694E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9971514736928427	WITHOUT_CLASSIFICATION	0.002848526307157238	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9995428611043344	WITHOUT_CLASSIFICATION	4.5713889566566284E-4	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9995246079800838	WITHOUT_CLASSIFICATION	4.7539201991627294E-4	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9995776636200068	WITHOUT_CLASSIFICATION	4.2233637999330347E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9997666279581163	WITHOUT_CLASSIFICATION	2.3337204188363992E-4	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9997598064139104	WITHOUT_CLASSIFICATION	2.401935860896233E-4	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.99911697121765	WITHOUT_CLASSIFICATION	8.830287823499306E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9986765100244316	WITHOUT_CLASSIFICATION	0.0013234899755684368	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999551213055041	WITHOUT_CLASSIFICATION	4.4878694495823466E-5	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9994018668968961	WITHOUT_CLASSIFICATION	5.981331031038685E-4	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9981190418401983	WITHOUT_CLASSIFICATION	0.0018809581598016967	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9997401668488012	WITHOUT_CLASSIFICATION	2.5983315119883747E-4	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9997546798674506	WITHOUT_CLASSIFICATION	2.4532013254933006E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9996000137656895	WITHOUT_CLASSIFICATION	3.999862343105869E-4	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9997770627901493	WITHOUT_CLASSIFICATION	2.2293720985065629E-4	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9996803651131146	WITHOUT_CLASSIFICATION	3.196348868853423E-4	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9995466656785695	WITHOUT_CLASSIFICATION	4.533343214304401E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9997756578089702	WITHOUT_CLASSIFICATION	2.2434219102983587E-4	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9997486294464122	WITHOUT_CLASSIFICATION	2.5137055358777973E-4	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9995595434666408	WITHOUT_CLASSIFICATION	4.404565333591276E-4	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9993197435181299	WITHOUT_CLASSIFICATION	6.802564818700578E-4	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.99980285143951	WITHOUT_CLASSIFICATION	1.971485604900291E-4	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.999831973618096	WITHOUT_CLASSIFICATION	1.6802638190402787E-4	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9996979722248694	WITHOUT_CLASSIFICATION	3.0202777513054413E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9996986048661807	WITHOUT_CLASSIFICATION	3.013951338194064E-4	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9996132479508838	WITHOUT_CLASSIFICATION	3.8675204911617323E-4	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9996715323863732	WITHOUT_CLASSIFICATION	3.284676136267591E-4	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.999906504807556	WITHOUT_CLASSIFICATION	9.349519244398798E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9996027851520985	WITHOUT_CLASSIFICATION	3.972148479015275E-4	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9996763275180671	WITHOUT_CLASSIFICATION	3.2367248193281457E-4	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9992064601822241	WITHOUT_CLASSIFICATION	7.935398177759057E-4	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9998965051262975	WITHOUT_CLASSIFICATION	1.0349487370253259E-4	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9998621940318503	WITHOUT_CLASSIFICATION	1.3780596814966302E-4	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999797641245805	WITHOUT_CLASSIFICATION	2.023587541954982E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.999931621182359	WITHOUT_CLASSIFICATION	6.837881764100514E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999650342749	WITHOUT_CLASSIFICATION	3.496572510007894E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9974810963051846	WITHOUT_CLASSIFICATION	0.0025189036948154503	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.986985036177003	WITHOUT_CLASSIFICATION	0.013014963822996963	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.999452675439821	WITHOUT_CLASSIFICATION	5.473245601789387E-4	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.999189972067139	WITHOUT_CLASSIFICATION	8.100279328609689E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9997350775461308	WITHOUT_CLASSIFICATION	2.649224538692102E-4	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.999530801677753	WITHOUT_CLASSIFICATION	4.6919832224705076E-4	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9994731198737385	WITHOUT_CLASSIFICATION	5.268801262614615E-4	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9997492059380134	WITHOUT_CLASSIFICATION	2.507940619866682E-4	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9998708747707818	WITHOUT_CLASSIFICATION	1.2912522921807018E-4	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999039256534139	WITHOUT_CLASSIFICATION	9.607434658610758E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9997472396155356	WITHOUT_CLASSIFICATION	2.527603844644768E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.999429652206922	WITHOUT_CLASSIFICATION	5.703477930780503E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9996543002496484	WITHOUT_CLASSIFICATION	3.456997503515917E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9996081622438427	WITHOUT_CLASSIFICATION	3.91837756157213E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9998381499558406	WITHOUT_CLASSIFICATION	1.618500441594543E-4	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9998580723639755	WITHOUT_CLASSIFICATION	1.4192763602444844E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998904305384688	WITHOUT_CLASSIFICATION	1.0956946153117188E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9995845370109745	WITHOUT_CLASSIFICATION	4.154629890255723E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999887743927209	WITHOUT_CLASSIFICATION	1.1225607279105738E-4	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9997472396155356	WITHOUT_CLASSIFICATION	2.527603844644768E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9998381499558406	WITHOUT_CLASSIFICATION	1.618500441594543E-4	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9998580723639755	WITHOUT_CLASSIFICATION	1.4192763602444844E-4	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9992280140130952	WITHOUT_CLASSIFICATION	7.719859869046718E-4	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999735368838332	WITHOUT_CLASSIFICATION	2.6463116166849913E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999856213745965	WITHOUT_CLASSIFICATION	1.437862540363059E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.999540478477504	WITHOUT_CLASSIFICATION	4.5952152249602215E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9998708747707818	WITHOUT_CLASSIFICATION	1.2912522921807018E-4	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999039256534139	WITHOUT_CLASSIFICATION	9.607434658610758E-5	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9997888335102884	WITHOUT_CLASSIFICATION	2.111664897117143E-4	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9997823755247499	WITHOUT_CLASSIFICATION	2.176244752501052E-4	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9996894813088937	WITHOUT_CLASSIFICATION	3.105186911062391E-4	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9996647392901842	WITHOUT_CLASSIFICATION	3.3526070981579077E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999619527722164	WITHOUT_CLASSIFICATION	3.8047227783567565E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9996061165370194	WITHOUT_CLASSIFICATION	3.9388346298058484E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9990543878838801	WITHOUT_CLASSIFICATION	9.456121161199637E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9993818227669254	WITHOUT_CLASSIFICATION	6.18177233074618E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.999844002383353	WITHOUT_CLASSIFICATION	1.559976166469864E-4	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999745582685201	WITHOUT_CLASSIFICATION	2.5441731479889788E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.999355673081238	WITHOUT_CLASSIFICATION	6.443269187619792E-4	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9998955438417738	WITHOUT_CLASSIFICATION	1.0445615822617037E-4	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9994038795812222	WITHOUT_CLASSIFICATION	5.961204187777977E-4	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9998060894958399	WITHOUT_CLASSIFICATION	1.939105041600851E-4	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9996843609566544	WITHOUT_CLASSIFICATION	3.15639043345698E-4	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999898066424104	WITHOUT_CLASSIFICATION	1.0193357589572315E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9998708747707818	WITHOUT_CLASSIFICATION	1.2912522921807018E-4	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999039256534139	WITHOUT_CLASSIFICATION	9.607434658610758E-5	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9993066059117185	WITHOUT_CLASSIFICATION	6.933940882815815E-4	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9996971295690784	WITHOUT_CLASSIFICATION	3.028704309214944E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.999983783629726	WITHOUT_CLASSIFICATION	1.621637027406527E-5	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999096167662807	WITHOUT_CLASSIFICATION	9.038323371938547E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998106093988836	WITHOUT_CLASSIFICATION	1.8939060111639679E-4	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9993235798014799	WITHOUT_CLASSIFICATION	6.764201985200775E-4	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9992847208409398	WITHOUT_CLASSIFICATION	7.152791590601574E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999690102995911	WITHOUT_CLASSIFICATION	3.09897004089034E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999900747196357	WITHOUT_CLASSIFICATION	9.925280364303049E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999900747196357	WITHOUT_CLASSIFICATION	9.925280364303049E-5	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9992475045525863	WITHOUT_CLASSIFICATION	7.524954474137391E-4	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9998178194376196	WITHOUT_CLASSIFICATION	1.8218056238031446E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9989386342719411	WITHOUT_CLASSIFICATION	0.0010613657280589346	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.999886038740478	WITHOUT_CLASSIFICATION	1.1396125952197782E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999670205278115	WITHOUT_CLASSIFICATION	3.2979472188590546E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9996914497313395	WITHOUT_CLASSIFICATION	3.0855026866052595E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9997621125528211	WITHOUT_CLASSIFICATION	2.3788744717900216E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9997621125528211	WITHOUT_CLASSIFICATION	2.3788744717900216E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9992437313701792	WITHOUT_CLASSIFICATION	7.562686298208922E-4	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9996064344100081	WITHOUT_CLASSIFICATION	3.9356558999186777E-4	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999746473912198	WITHOUT_CLASSIFICATION	2.5352608780282652E-5	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9998056923883523	WITHOUT_CLASSIFICATION	1.943076116478052E-4	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9996309409755244	WITHOUT_CLASSIFICATION	3.690590244755275E-4	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999474084748433	WITHOUT_CLASSIFICATION	5.2591525156595136E-5	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9996481695864454	WITHOUT_CLASSIFICATION	3.518304135546802E-4	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9996592327700691	WITHOUT_CLASSIFICATION	3.4076722993086765E-4	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9996948540856156	WITHOUT_CLASSIFICATION	3.051459143843527E-4	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9993526365795562	WITHOUT_CLASSIFICATION	6.473634204438298E-4	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9961812640718658	WITHOUT_CLASSIFICATION	0.0038187359281342324	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9998864142077383	WITHOUT_CLASSIFICATION	1.1358579226162591E-4	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999305518272382	WITHOUT_CLASSIFICATION	6.944817276176898E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.99983738349252	WITHOUT_CLASSIFICATION	1.6261650747992698E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999229486845972	WITHOUT_CLASSIFICATION	7.705131540283622E-5	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999728112284261	WITHOUT_CLASSIFICATION	2.7188771573884084E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9997626255949713	WITHOUT_CLASSIFICATION	2.3737440502868702E-4	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9998467616502106	WITHOUT_CLASSIFICATION	1.5323834978942202E-4	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9994459295121843	WITHOUT_CLASSIFICATION	5.54070487815743E-4	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9996547667777129	WITHOUT_CLASSIFICATION	3.452332222870077E-4	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9998877045312051	WITHOUT_CLASSIFICATION	1.1229546879483022E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999917669899061	WITHOUT_CLASSIFICATION	8.23301009395024E-6	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9997927986053178	WITHOUT_CLASSIFICATION	2.0720139468223994E-4	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9997739291424528	WITHOUT_CLASSIFICATION	2.2607085754721573E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9990780980690903	WITHOUT_CLASSIFICATION	9.219019309097017E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9997007936058464	WITHOUT_CLASSIFICATION	2.992063941535685E-4	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999663088759068	WITHOUT_CLASSIFICATION	3.369112409334384E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999182127761909	WITHOUT_CLASSIFICATION	8.178722380913459E-5	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.99877760173176	WITHOUT_CLASSIFICATION	0.001222398268240077	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.999969266323454	WITHOUT_CLASSIFICATION	3.073367654612805E-5	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9992320644077325	WITHOUT_CLASSIFICATION	7.679355922675076E-4	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9996831285526818	WITHOUT_CLASSIFICATION	3.168714473181546E-4	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.999691221985339	WITHOUT_CLASSIFICATION	3.087780146610114E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9997105917611914	WITHOUT_CLASSIFICATION	2.894082388086534E-4	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.997859892809601	WITHOUT_CLASSIFICATION	0.002140107190399047	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9993541996846047	WITHOUT_CLASSIFICATION	6.458003153952894E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.999248491055885	WITHOUT_CLASSIFICATION	7.515089441150318E-4	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9974992698300231	WITHOUT_CLASSIFICATION	0.002500730169976862	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9998583546378138	WITHOUT_CLASSIFICATION	1.416453621862643E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9997700936578936	WITHOUT_CLASSIFICATION	2.2990634210646316E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9995870822198646	WITHOUT_CLASSIFICATION	4.129177801353644E-4	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.999799584171361	WITHOUT_CLASSIFICATION	2.004158286389397E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9997540584387261	WITHOUT_CLASSIFICATION	2.459415612738451E-4	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9996037945569546	WITHOUT_CLASSIFICATION	3.962054430453734E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9996354277437971	WITHOUT_CLASSIFICATION	3.645722562029458E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9995870822198646	WITHOUT_CLASSIFICATION	4.129177801353644E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9997540584387261	WITHOUT_CLASSIFICATION	2.459415612738451E-4	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9994514764813268	WITHOUT_CLASSIFICATION	5.485235186732295E-4	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9996445268064514	WITHOUT_CLASSIFICATION	3.5547319354862757E-4	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9993310042267762	WITHOUT_CLASSIFICATION	6.689957732238033E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9996386134723136	WITHOUT_CLASSIFICATION	3.613865276863972E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9997700936578936	WITHOUT_CLASSIFICATION	2.2990634210646316E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9997700936578936	WITHOUT_CLASSIFICATION	2.2990634210646316E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9995870822198646	WITHOUT_CLASSIFICATION	4.129177801353644E-4	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9996117797966516	WITHOUT_CLASSIFICATION	3.8822020334843113E-4	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9981509015015181	WITHOUT_CLASSIFICATION	0.0018490984984818428	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9998352963219873	WITHOUT_CLASSIFICATION	1.6470367801259926E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9998352963219873	WITHOUT_CLASSIFICATION	1.6470367801259926E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998604283254395	WITHOUT_CLASSIFICATION	1.395716745604883E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9996337762905083	WITHOUT_CLASSIFICATION	3.662237094917806E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998196264167349	WITHOUT_CLASSIFICATION	1.8037358326501642E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998196264167349	WITHOUT_CLASSIFICATION	1.8037358326501642E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999554891731847	WITHOUT_CLASSIFICATION	4.451082681530173E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9996337762905083	WITHOUT_CLASSIFICATION	3.662237094917806E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998196264167349	WITHOUT_CLASSIFICATION	1.8037358326501642E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999554891731847	WITHOUT_CLASSIFICATION	4.451082681530173E-4	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9995202268707791	WITHOUT_CLASSIFICATION	4.7977312922079884E-4	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9996024809391896	WITHOUT_CLASSIFICATION	3.9751906081041415E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9996793020441108	WITHOUT_CLASSIFICATION	3.2069795588916095E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9995872574788796	WITHOUT_CLASSIFICATION	4.12742521120441E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9997988985791527	WITHOUT_CLASSIFICATION	2.011014208473702E-4	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9994727226629064	WITHOUT_CLASSIFICATION	5.272773370936038E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9993542391581204	WITHOUT_CLASSIFICATION	6.457608418797048E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9991613637000307	WITHOUT_CLASSIFICATION	8.386362999692929E-4	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9990962747739863	WITHOUT_CLASSIFICATION	9.037252260135401E-4	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9998535964877694	WITHOUT_CLASSIFICATION	1.4640351223061085E-4	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999221104927303	WITHOUT_CLASSIFICATION	7.788950726973125E-5	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9988752318343712	WITHOUT_CLASSIFICATION	0.001124768165628753	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999276793829649	WITHOUT_CLASSIFICATION	7.232061703507502E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9997536116668876	WITHOUT_CLASSIFICATION	2.463883331124634E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.999825876236674	WITHOUT_CLASSIFICATION	1.741237633261098E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.999613050471581	WITHOUT_CLASSIFICATION	3.869495284189891E-4	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9993290757518996	WITHOUT_CLASSIFICATION	6.70924248100418E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9992645166587982	WITHOUT_CLASSIFICATION	7.354833412017872E-4	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9995173428792945	WITHOUT_CLASSIFICATION	4.826571207054685E-4	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9998927809751007	WITHOUT_CLASSIFICATION	1.0721902489926753E-4	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9998928061306933	WITHOUT_CLASSIFICATION	1.0719386930661123E-4	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9998075516720406	WITHOUT_CLASSIFICATION	1.9244832795929206E-4	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9998966818158443	WITHOUT_CLASSIFICATION	1.0331818415570923E-4	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9998876395034939	WITHOUT_CLASSIFICATION	1.1236049650607782E-4	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9997539751529362	WITHOUT_CLASSIFICATION	2.460248470637955E-4	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9997396472348455	WITHOUT_CLASSIFICATION	2.6035276515455207E-4	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9987762627030298	WITHOUT_CLASSIFICATION	0.001223737296970208	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999559550821739	WITHOUT_CLASSIFICATION	4.404491782617136E-5	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9960796062881214	WITHOUT_CLASSIFICATION	0.003920393711878477	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9993226959924661	WITHOUT_CLASSIFICATION	6.773040075338105E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9993578095696583	WITHOUT_CLASSIFICATION	6.42190430341686E-4	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9997578906900528	WITHOUT_CLASSIFICATION	2.421093099470352E-4	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999047561219571	WITHOUT_CLASSIFICATION	9.524387804288632E-5	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9996861991640754	WITHOUT_CLASSIFICATION	3.1380083592457824E-4	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997674768114779	WITHOUT_CLASSIFICATION	2.3252318852214036E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997637636257408	WITHOUT_CLASSIFICATION	2.3623637425917548E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997637636257408	WITHOUT_CLASSIFICATION	2.3623637425917548E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997637636257408	WITHOUT_CLASSIFICATION	2.3623637425917548E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999869752404724	WITHOUT_CLASSIFICATION	1.302475952752074E-5	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9996320133109811	WITHOUT_CLASSIFICATION	3.679866890188975E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.999898916373304	WITHOUT_CLASSIFICATION	1.010836266960747E-4	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9997297523670741	WITHOUT_CLASSIFICATION	2.702476329259666E-4	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9996689386501755	WITHOUT_CLASSIFICATION	3.310613498244424E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999761959227896	WITHOUT_CLASSIFICATION	2.3804077210303127E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999900065162406	WITHOUT_CLASSIFICATION	9.993483759464904E-6	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9986107925711237	WITHOUT_CLASSIFICATION	0.0013892074288762222	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9998772195740493	WITHOUT_CLASSIFICATION	1.227804259506196E-4	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9998854948459339	WITHOUT_CLASSIFICATION	1.1450515406607141E-4	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.998300877507873	WITHOUT_CLASSIFICATION	0.001699122492127046	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9998474834364566	WITHOUT_CLASSIFICATION	1.5251656354347163E-4	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9997734177071893	WITHOUT_CLASSIFICATION	2.2658229281059274E-4	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9996614725235216	WITHOUT_CLASSIFICATION	3.385274764785003E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999001088478633	WITHOUT_CLASSIFICATION	9.989115213672452E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.999995454934281	WITHOUT_CLASSIFICATION	4.545065718966598E-6	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9998237390544868	WITHOUT_CLASSIFICATION	1.762609455130707E-4	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999702472324629	WITHOUT_CLASSIFICATION	2.975276753713032E-5	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.997398488237031	WITHOUT_CLASSIFICATION	0.002601511762969013	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9994795413657959	WITHOUT_CLASSIFICATION	5.20458634204228E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9998280693131061	WITHOUT_CLASSIFICATION	1.7193068689398073E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9991019411165453	WITHOUT_CLASSIFICATION	8.980588834548255E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999353251928235	WITHOUT_CLASSIFICATION	6.467480717646888E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9931667699709876	WITHOUT_CLASSIFICATION	0.006833230029012425	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999484232434801	WITHOUT_CLASSIFICATION	5.157675651983062E-5	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9985631631138642	WITHOUT_CLASSIFICATION	0.001436836886135843	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9998312916174517	WITHOUT_CLASSIFICATION	1.6870838254826945E-4	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9998313817232084	WITHOUT_CLASSIFICATION	1.686182767915418E-4	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9981991751498934	WITHOUT_CLASSIFICATION	0.0018008248501065862	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999443405866387	WITHOUT_CLASSIFICATION	5.5659413361198525E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9994084496941198	WITHOUT_CLASSIFICATION	5.915503058801132E-4	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9877877494870505	WITHOUT_CLASSIFICATION	0.01221225051294949	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9993284594096133	WITHOUT_CLASSIFICATION	6.715405903866358E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9998145913526938	WITHOUT_CLASSIFICATION	1.8540864730611544E-4	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9995966034996073	WITHOUT_CLASSIFICATION	4.033965003925883E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9976014569858083	WITHOUT_CLASSIFICATION	0.002398543014191681	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.999995230779341	WITHOUT_CLASSIFICATION	4.769220659014413E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999244865956979	WITHOUT_CLASSIFICATION	7.551340430210467E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9998404951291321	WITHOUT_CLASSIFICATION	1.5950487086793976E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9992579454233029	WITHOUT_CLASSIFICATION	7.42054576697037E-4	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.999402106548833	WITHOUT_CLASSIFICATION	5.978934511671296E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9997162316966817	WITHOUT_CLASSIFICATION	2.837683033184264E-4	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9993235798014799	WITHOUT_CLASSIFICATION	6.764201985200775E-4	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998984643380502	WITHOUT_CLASSIFICATION	1.0153566194986403E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9997200420946698	WITHOUT_CLASSIFICATION	2.799579053302032E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9996462447137271	WITHOUT_CLASSIFICATION	3.53755286272899E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9972051109877665	WITHOUT_CLASSIFICATION	0.0027948890122333724	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999439734976828	WITHOUT_CLASSIFICATION	5.602650231719284E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9994839489086539	WITHOUT_CLASSIFICATION	5.160510913462339E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999151613802654	WITHOUT_CLASSIFICATION	8.483861973459597E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9995316114077415	WITHOUT_CLASSIFICATION	4.683885922584936E-4	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9997491184270806	WITHOUT_CLASSIFICATION	2.5088157291951646E-4	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998066348463622	WITHOUT_CLASSIFICATION	1.9336515363772752E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998631734150469	WITHOUT_CLASSIFICATION	1.3682658495313443E-4	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9998165656034104	WITHOUT_CLASSIFICATION	1.8343439658962047E-4	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9995318725391138	WITHOUT_CLASSIFICATION	4.681274608863059E-4	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9995734163943049	WITHOUT_CLASSIFICATION	4.265836056950788E-4	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999265110103855	WITHOUT_CLASSIFICATION	7.348898961447511E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9990691418074167	WITHOUT_CLASSIFICATION	9.30858192583399E-4	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9989636063408107	WITHOUT_CLASSIFICATION	0.0010363936591892679	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998723168992351	WITHOUT_CLASSIFICATION	1.2768310076490805E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.998941860533306	WITHOUT_CLASSIFICATION	0.0010581394666939613	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9993801638442068	WITHOUT_CLASSIFICATION	6.198361557932699E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9993010158045753	WITHOUT_CLASSIFICATION	6.989841954247412E-4	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9997936865844198	WITHOUT_CLASSIFICATION	2.063134155802519E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9997148129570106	WITHOUT_CLASSIFICATION	2.8518704298933145E-4	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9994215826858898	WITHOUT_CLASSIFICATION	5.784173141102523E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9998713813981986	WITHOUT_CLASSIFICATION	1.286186018013754E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9998713813981986	WITHOUT_CLASSIFICATION	1.286186018013754E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9997148129570106	WITHOUT_CLASSIFICATION	2.8518704298933145E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9997148710056833	WITHOUT_CLASSIFICATION	2.8512899431662616E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9995508289003933	WITHOUT_CLASSIFICATION	4.491710996067623E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9995508289003933	WITHOUT_CLASSIFICATION	4.491710996067623E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9996435105869912	WITHOUT_CLASSIFICATION	3.5648941300883935E-4	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9996805782866109	WITHOUT_CLASSIFICATION	3.194217133889726E-4	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9960939548680106	WITHOUT_CLASSIFICATION	0.0039060451319893924	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9993173107142584	WITHOUT_CLASSIFICATION	6.826892857415817E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9997031905481695	WITHOUT_CLASSIFICATION	2.9680945183045454E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9997597546595189	WITHOUT_CLASSIFICATION	2.4024534048104588E-4	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.999738840320139	WITHOUT_CLASSIFICATION	2.611596798609883E-4	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9990547867483128	WITHOUT_CLASSIFICATION	9.452132516872395E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9902621295243758	WITHOUT_CLASSIFICATION	0.009737870475624253	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999097218596996	WITHOUT_CLASSIFICATION	9.027814030032343E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999358570987373	WITHOUT_CLASSIFICATION	6.414290126276088E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9996495007094341	WITHOUT_CLASSIFICATION	3.504992905658611E-4	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9998755734535639	WITHOUT_CLASSIFICATION	1.244265464359553E-4	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9986001510870645	WITHOUT_CLASSIFICATION	0.0013998489129355657	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9998713460123978	WITHOUT_CLASSIFICATION	1.2865398760223304E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9966922119367542	WITHOUT_CLASSIFICATION	0.003307788063245858	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9999504418536761	WITHOUT_CLASSIFICATION	4.9558146323823266E-5	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9997468730632458	WITHOUT_CLASSIFICATION	2.531269367540955E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9991565560609688	WITHOUT_CLASSIFICATION	8.434439390312352E-4	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9976288456032077	WITHOUT_CLASSIFICATION	0.0023711543967921546	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9995579370129117	WITHOUT_CLASSIFICATION	4.420629870882936E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999901464478941	WITHOUT_CLASSIFICATION	9.853552105901273E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999901464478941	WITHOUT_CLASSIFICATION	9.853552105901273E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9972140608323773	WITHOUT_CLASSIFICATION	0.002785939167622747	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9992400297659695	WITHOUT_CLASSIFICATION	7.599702340304412E-4	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999430269105616	WITHOUT_CLASSIFICATION	5.6973089438286257E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9997075895396003	WITHOUT_CLASSIFICATION	2.924104603996692E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9922128856299199	WITHOUT_CLASSIFICATION	0.007787114370080014	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9998850055886607	WITHOUT_CLASSIFICATION	1.1499441133939479E-4	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9996987132740426	WITHOUT_CLASSIFICATION	3.012867259573779E-4	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9992695467554922	WITHOUT_CLASSIFICATION	7.304532445076799E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997848688375195	WITHOUT_CLASSIFICATION	2.1513116248055277E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9997629254314004	WITHOUT_CLASSIFICATION	2.3707456859962508E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999098478442887	WITHOUT_CLASSIFICATION	9.015215571124991E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9998448896240242	WITHOUT_CLASSIFICATION	1.551103759758245E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9997796833034583	WITHOUT_CLASSIFICATION	2.20316696541755E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998166212953141	WITHOUT_CLASSIFICATION	1.8337870468589117E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9998120657143672	WITHOUT_CLASSIFICATION	1.879342856329247E-4	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9998948039768094	WITHOUT_CLASSIFICATION	1.0519602319053069E-4	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9988901204788961	WITHOUT_CLASSIFICATION	0.0011098795211038981	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9998948039768094	WITHOUT_CLASSIFICATION	1.0519602319053069E-4	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.999705742124128	WITHOUT_CLASSIFICATION	2.9425787587204186E-4	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9998783736379944	WITHOUT_CLASSIFICATION	1.2162636200569265E-4	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9981013753033908	WITHOUT_CLASSIFICATION	0.0018986246966090788	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9978538217168936	WITHOUT_CLASSIFICATION	0.0021461782831063655	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9997575378284225	WITHOUT_CLASSIFICATION	2.42462171577447E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9993773922172872	WITHOUT_CLASSIFICATION	6.226077827128669E-4	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9998250306383666	WITHOUT_CLASSIFICATION	1.7496936163351268E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999190025562029	WITHOUT_CLASSIFICATION	8.099744379708033E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9986450955274874	WITHOUT_CLASSIFICATION	0.0013549044725126487	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999868172418752	WITHOUT_CLASSIFICATION	1.3182758124674726E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.999913426492276	WITHOUT_CLASSIFICATION	8.657350772401005E-5	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.999657075040424	WITHOUT_CLASSIFICATION	3.4292495957590906E-4	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999544481959466	WITHOUT_CLASSIFICATION	4.555180405336236E-5	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999198790242562	WITHOUT_CLASSIFICATION	8.01209757438481E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9996454540336371	WITHOUT_CLASSIFICATION	3.545459663629361E-4	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9995209358290843	WITHOUT_CLASSIFICATION	4.79064170915732E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9998206524882796	WITHOUT_CLASSIFICATION	1.7934751172046893E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9998701640291641	WITHOUT_CLASSIFICATION	1.2983597083594418E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9997396008487163	WITHOUT_CLASSIFICATION	2.6039915128377996E-4	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9998037407934274	WITHOUT_CLASSIFICATION	1.9625920657257635E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.998566227625127	WITHOUT_CLASSIFICATION	0.0014337723748729903	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999505360059414	WITHOUT_CLASSIFICATION	4.9463994058653775E-5	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9986614412291938	WITHOUT_CLASSIFICATION	0.0013385587708062332	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9995257960624222	WITHOUT_CLASSIFICATION	4.742039375777867E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9990876090292244	WITHOUT_CLASSIFICATION	9.123909707756725E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9996103628255517	WITHOUT_CLASSIFICATION	3.8963717444838236E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997848688375195	WITHOUT_CLASSIFICATION	2.1513116248055277E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9997629254314004	WITHOUT_CLASSIFICATION	2.3707456859962508E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999098478442887	WITHOUT_CLASSIFICATION	9.015215571124991E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9996659045589363	WITHOUT_CLASSIFICATION	3.3409544106362954E-4	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9995664812602196	WITHOUT_CLASSIFICATION	4.3351873978038585E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9998863832974119	WITHOUT_CLASSIFICATION	1.136167025882037E-4	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9993725928668103	WITHOUT_CLASSIFICATION	6.274071331896188E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9995997112490795	WITHOUT_CLASSIFICATION	4.0028875092043824E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9997242599911172	WITHOUT_CLASSIFICATION	2.757400088827466E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9997320713474404	WITHOUT_CLASSIFICATION	2.679286525596184E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.99641954562663	WITHOUT_CLASSIFICATION	0.0035804543733699806	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9993963439881025	WITHOUT_CLASSIFICATION	6.036560118975051E-4	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9995436085374465	WITHOUT_CLASSIFICATION	4.563914625534246E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997341970881061	WITHOUT_CLASSIFICATION	2.658029118939379E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997341970881061	WITHOUT_CLASSIFICATION	2.658029118939379E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9996659385492292	WITHOUT_CLASSIFICATION	3.340614507708325E-4	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991801673192581	WITHOUT_CLASSIFICATION	8.198326807418597E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9998258466242782	WITHOUT_CLASSIFICATION	1.741533757218676E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999060198428047	WITHOUT_CLASSIFICATION	9.398015719529021E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9995619851196715	WITHOUT_CLASSIFICATION	4.380148803285031E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9995778830020834	WITHOUT_CLASSIFICATION	4.2211699791656E-4	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9992145334964136	WITHOUT_CLASSIFICATION	7.854665035862801E-4	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9996944940148201	WITHOUT_CLASSIFICATION	3.055059851799039E-4	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9997089937902308	WITHOUT_CLASSIFICATION	2.910062097691399E-4	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999111790799158	WITHOUT_CLASSIFICATION	8.882092008414839E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9998616321012225	WITHOUT_CLASSIFICATION	1.383678987775733E-4	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9995953078061487	WITHOUT_CLASSIFICATION	4.046921938513457E-4	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9996256115453727	WITHOUT_CLASSIFICATION	3.7438845462739727E-4	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985291045255159	WITHOUT_CLASSIFICATION	0.0014708954744840795	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993213379954647	WITHOUT_CLASSIFICATION	6.786620045353886E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998651030080914	WITHOUT_CLASSIFICATION	1.3489699190856146E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999160800954531	WITHOUT_CLASSIFICATION	8.39199045469525E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9985302675227204	WITHOUT_CLASSIFICATION	0.0014697324772795916	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9995279363294369	WITHOUT_CLASSIFICATION	4.720636705631343E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9995998402919769	WITHOUT_CLASSIFICATION	4.001597080231207E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9990736450563262	WITHOUT_CLASSIFICATION	9.263549436738754E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9996775470456573	WITHOUT_CLASSIFICATION	3.2245295434284545E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9989044589632936	WITHOUT_CLASSIFICATION	0.0010955410367064192	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9996146836192161	WITHOUT_CLASSIFICATION	3.8531638078391576E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9990908773803301	WITHOUT_CLASSIFICATION	9.091226196698667E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9995557403109322	WITHOUT_CLASSIFICATION	4.44259689067789E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9994518705224005	WITHOUT_CLASSIFICATION	5.481294775995275E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9996651351293709	WITHOUT_CLASSIFICATION	3.3486487062915464E-4	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9996654854665548	WITHOUT_CLASSIFICATION	3.345145334452563E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.998721710881856	WITHOUT_CLASSIFICATION	0.0012782891181440592	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9996630749730008	WITHOUT_CLASSIFICATION	3.3692502699921424E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996474931553239	WITHOUT_CLASSIFICATION	3.525068446761388E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9966753385253562	WITHOUT_CLASSIFICATION	0.0033246614746437596	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998936852089628	WITHOUT_CLASSIFICATION	1.0631479103729806E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996760178993487	WITHOUT_CLASSIFICATION	3.2398210065143077E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9996089975818943	WITHOUT_CLASSIFICATION	3.9100241810580144E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9996910954275364	WITHOUT_CLASSIFICATION	3.0890457246362423E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9998934488044908	WITHOUT_CLASSIFICATION	1.0655119550912484E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9997107204856875	WITHOUT_CLASSIFICATION	2.892795143124437E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9995557427511609	WITHOUT_CLASSIFICATION	4.4425724883915933E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9912815194707937	WITHOUT_CLASSIFICATION	0.008718480529206294	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.99898059673134	WITHOUT_CLASSIFICATION	0.001019403268660001	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9996589138659712	WITHOUT_CLASSIFICATION	3.410861340288942E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9988925384489501	WITHOUT_CLASSIFICATION	0.0011074615510499454	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.999607807560756	WITHOUT_CLASSIFICATION	3.92192439244072E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9889370077161165	WITHOUT_CLASSIFICATION	0.011062992283883459	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9996659385492292	WITHOUT_CLASSIFICATION	3.340614507708325E-4	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991801673192581	WITHOUT_CLASSIFICATION	8.198326807418597E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9998258466242782	WITHOUT_CLASSIFICATION	1.741533757218676E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999060198428047	WITHOUT_CLASSIFICATION	9.398015719529021E-4	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9992145334964136	WITHOUT_CLASSIFICATION	7.854665035862801E-4	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9996944940148201	WITHOUT_CLASSIFICATION	3.055059851799039E-4	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9990548876617598	WITHOUT_CLASSIFICATION	9.451123382401271E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9996330686126762	WITHOUT_CLASSIFICATION	3.669313873238343E-4	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9995993791171336	WITHOUT_CLASSIFICATION	4.0062088286641953E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9998616321012225	WITHOUT_CLASSIFICATION	1.383678987775733E-4	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9995953078061487	WITHOUT_CLASSIFICATION	4.046921938513457E-4	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9996256115453727	WITHOUT_CLASSIFICATION	3.7438845462739727E-4	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985291045255159	WITHOUT_CLASSIFICATION	0.0014708954744840795	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998651030080914	WITHOUT_CLASSIFICATION	1.3489699190856146E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9997079543046143	WITHOUT_CLASSIFICATION	2.920456953857129E-4	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9997079543046143	WITHOUT_CLASSIFICATION	2.920456953857129E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9998758797946293	WITHOUT_CLASSIFICATION	1.241202053707173E-4	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9996335444433208	WITHOUT_CLASSIFICATION	3.6645555667919933E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9997394188301875	WITHOUT_CLASSIFICATION	2.605811698126011E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9997937379674594	WITHOUT_CLASSIFICATION	2.0626203254056939E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9995686357680035	WITHOUT_CLASSIFICATION	4.3136423199653234E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9993218146656762	WITHOUT_CLASSIFICATION	6.781853343239302E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999489431995441	WITHOUT_CLASSIFICATION	5.105680045589827E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9994843898004814	WITHOUT_CLASSIFICATION	5.156101995186538E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999489431995441	WITHOUT_CLASSIFICATION	5.105680045589827E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9986741694182459	WITHOUT_CLASSIFICATION	0.0013258305817541397	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9995684253984427	WITHOUT_CLASSIFICATION	4.315746015572906E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998324317358314	WITHOUT_CLASSIFICATION	1.6756826416868692E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998324317358314	WITHOUT_CLASSIFICATION	1.6756826416868692E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9994248728178664	WITHOUT_CLASSIFICATION	5.751271821337034E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9988479866058289	WITHOUT_CLASSIFICATION	0.0011520133941711457	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9998016328322247	WITHOUT_CLASSIFICATION	1.9836716777543162E-4	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9996673647274499	WITHOUT_CLASSIFICATION	3.3263527255005307E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999075612426107	WITHOUT_CLASSIFICATION	9.243875738934623E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9998737271475779	WITHOUT_CLASSIFICATION	1.2627285242202367E-4	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9983240244290746	WITHOUT_CLASSIFICATION	0.0016759755709253891	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999069859041121	WITHOUT_CLASSIFICATION	9.30140958879271E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9996656848915879	WITHOUT_CLASSIFICATION	3.343151084120145E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9992907032789827	WITHOUT_CLASSIFICATION	7.092967210172489E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999931769634023	WITHOUT_CLASSIFICATION	6.823036597803116E-6	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998098893637791	WITHOUT_CLASSIFICATION	1.9011063622091317E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999050466971362	WITHOUT_CLASSIFICATION	9.495330286379098E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999050466971362	WITHOUT_CLASSIFICATION	9.495330286379098E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999640573370132	WITHOUT_CLASSIFICATION	3.5942662986790334E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.999989843857593	WITHOUT_CLASSIFICATION	1.0156142406928644E-5	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9993684219688609	WITHOUT_CLASSIFICATION	6.315780311391549E-4	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9974242615051992	WITHOUT_CLASSIFICATION	0.002575738494800729	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9974933328519774	WITHOUT_CLASSIFICATION	0.0025066671480225705	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9997808378362028	WITHOUT_CLASSIFICATION	2.1916216379730586E-4	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9993930819673474	WITHOUT_CLASSIFICATION	6.06918032652664E-4	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999725477568592	WITHOUT_CLASSIFICATION	2.745224314083124E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9988442753821389	WITHOUT_CLASSIFICATION	0.001155724617861036	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9996973186839155	WITHOUT_CLASSIFICATION	3.026813160843971E-4	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999080141660389	WITHOUT_CLASSIFICATION	9.198583396108489E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9997807148342402	WITHOUT_CLASSIFICATION	2.192851657598711E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9976503736085158	WITHOUT_CLASSIFICATION	0.002349626391484148	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9994172848631557	WITHOUT_CLASSIFICATION	5.827151368443291E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9997075895396003	WITHOUT_CLASSIFICATION	2.924104603996692E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999042470004962	WITHOUT_CLASSIFICATION	9.575299950380391E-5	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999681740094767	WITHOUT_CLASSIFICATION	3.1825990523373624E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9996343192327506	WITHOUT_CLASSIFICATION	3.656807672493619E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9995698408795125	WITHOUT_CLASSIFICATION	4.3015912048743746E-4	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9992908773980175	WITHOUT_CLASSIFICATION	7.091226019826401E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9996670060112934	WITHOUT_CLASSIFICATION	3.329939887065654E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9997686896829225	WITHOUT_CLASSIFICATION	2.3131031707740714E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9998030557760486	WITHOUT_CLASSIFICATION	1.969442239514865E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9996511846681494	WITHOUT_CLASSIFICATION	3.4881533185063057E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999653379384436	WITHOUT_CLASSIFICATION	3.46620615563919E-4	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.999653379384436	WITHOUT_CLASSIFICATION	3.46620615563919E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9996157696100942	WITHOUT_CLASSIFICATION	3.842303899057743E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9993932480929225	WITHOUT_CLASSIFICATION	6.067519070774936E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998524382111644	WITHOUT_CLASSIFICATION	1.4756178883552275E-4	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994443993098542	WITHOUT_CLASSIFICATION	5.55600690145813E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999136818516465	WITHOUT_CLASSIFICATION	8.631814835350971E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999164115520551	WITHOUT_CLASSIFICATION	8.358844794493566E-5	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9997754323431335	WITHOUT_CLASSIFICATION	2.2456765686657584E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999590392702069	WITHOUT_CLASSIFICATION	4.096072979311391E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9972947934896098	WITHOUT_CLASSIFICATION	0.0027052065103902205	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999242714783559	WITHOUT_CLASSIFICATION	7.572852164410216E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9992211825483204	WITHOUT_CLASSIFICATION	7.788174516796275E-4	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9987247052796145	WITHOUT_CLASSIFICATION	0.0012752947203855428	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9998097911181374	WITHOUT_CLASSIFICATION	1.9020888186270534E-4	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9996395001536912	WITHOUT_CLASSIFICATION	3.6049984630876733E-4	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999804542095568	WITHOUT_CLASSIFICATION	1.954579044307775E-5	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.997987852756109	WITHOUT_CLASSIFICATION	0.002012147243890953	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.989000624195676	WITHOUT_CLASSIFICATION	0.010999375804324018	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9997782365770148	WITHOUT_CLASSIFICATION	2.2176342298512778E-4	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9997572665275747	WITHOUT_CLASSIFICATION	2.4273347242526785E-4	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999891777164268	WITHOUT_CLASSIFICATION	1.0822283573191391E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9995557403109322	WITHOUT_CLASSIFICATION	4.44259689067789E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9996896847796058	WITHOUT_CLASSIFICATION	3.103152203941096E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.99898059673134	WITHOUT_CLASSIFICATION	0.001019403268660001	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9997937379674594	WITHOUT_CLASSIFICATION	2.0626203254056939E-4	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.999793806088163	WITHOUT_CLASSIFICATION	2.061939118371045E-4	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9997323684764318	WITHOUT_CLASSIFICATION	2.6763152356815145E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9996775470456573	WITHOUT_CLASSIFICATION	3.2245295434284545E-4	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999161715657566	WITHOUT_CLASSIFICATION	8.382843424333946E-5	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9996678806732326	WITHOUT_CLASSIFICATION	3.321193267672636E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.998721710881856	WITHOUT_CLASSIFICATION	0.0012782891181440592	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9994709318690211	WITHOUT_CLASSIFICATION	5.290681309787833E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.99898059673134	WITHOUT_CLASSIFICATION	0.001019403268660001	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9982828839033626	WITHOUT_CLASSIFICATION	0.0017171160966374104	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999690102995911	WITHOUT_CLASSIFICATION	3.09897004089034E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9991190251376737	WITHOUT_CLASSIFICATION	8.809748623262886E-4	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.999834832054742	WITHOUT_CLASSIFICATION	1.6516794525809448E-4	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9997303157452196	WITHOUT_CLASSIFICATION	2.696842547804003E-4	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9994168642264306	WITHOUT_CLASSIFICATION	5.831357735694785E-4	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9997527579873178	WITHOUT_CLASSIFICATION	2.472420126821575E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9997700936578936	WITHOUT_CLASSIFICATION	2.2990634210646316E-4	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9909785347758946	WITHOUT_CLASSIFICATION	0.00902146522410553	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998604283254395	WITHOUT_CLASSIFICATION	1.395716745604883E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998604283254395	WITHOUT_CLASSIFICATION	1.395716745604883E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998604283254395	WITHOUT_CLASSIFICATION	1.395716745604883E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998196264167349	WITHOUT_CLASSIFICATION	1.8037358326501642E-4	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998458743390147	WITHOUT_CLASSIFICATION	1.5412566098524122E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9996110881534082	WITHOUT_CLASSIFICATION	3.8891184659177745E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9997988985791527	WITHOUT_CLASSIFICATION	2.011014208473702E-4	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999396873138866	WITHOUT_CLASSIFICATION	6.031268611335679E-5	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999763234808264	WITHOUT_CLASSIFICATION	2.3676519173601959E-4	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9937685337889056	WITHOUT_CLASSIFICATION	0.0062314662110943145	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999443346994178	WITHOUT_CLASSIFICATION	5.566530058226027E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9998936940168504	WITHOUT_CLASSIFICATION	1.063059831496185E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999355323063652	WITHOUT_CLASSIFICATION	6.446769363479785E-5	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9997210973199833	WITHOUT_CLASSIFICATION	2.78902680016711E-4	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.99833822921149	WITHOUT_CLASSIFICATION	0.001661770788510039	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9998087289348695	WITHOUT_CLASSIFICATION	1.9127106513051306E-4	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9998310084240453	WITHOUT_CLASSIFICATION	1.689915759547318E-4	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.999837351418022	WITHOUT_CLASSIFICATION	1.6264858197804778E-4	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9992328358966448	WITHOUT_CLASSIFICATION	7.671641033551278E-4	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9991168028082913	WITHOUT_CLASSIFICATION	8.83197191708717E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9992760819492454	WITHOUT_CLASSIFICATION	7.239180507545832E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9994232581226109	WITHOUT_CLASSIFICATION	5.767418773890258E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9982833854865983	WITHOUT_CLASSIFICATION	0.001716614513401653	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997637636257408	WITHOUT_CLASSIFICATION	2.3623637425917548E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.999784959905479	WITHOUT_CLASSIFICATION	2.1504009452091602E-4	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999273428870751	WITHOUT_CLASSIFICATION	7.265711292485541E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999273428870751	WITHOUT_CLASSIFICATION	7.265711292485541E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9994271510915784	WITHOUT_CLASSIFICATION	5.728489084216533E-4	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9998767657835556	WITHOUT_CLASSIFICATION	1.232342164443436E-4	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999482743728957	WITHOUT_CLASSIFICATION	5.17256271042609E-5	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999589474734072	WITHOUT_CLASSIFICATION	4.105252659267224E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999890517155748	WITHOUT_CLASSIFICATION	1.0948284425054209E-5	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999065765587207	WITHOUT_CLASSIFICATION	9.342344127934902E-5	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9997919218218312	WITHOUT_CLASSIFICATION	2.0807817816875316E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999068876758824	WITHOUT_CLASSIFICATION	9.311232411753333E-5	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9984567218175305	WITHOUT_CLASSIFICATION	0.0015432781824694496	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9992572783661996	WITHOUT_CLASSIFICATION	7.427216338004755E-4	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9895319196619873	WITHOUT_CLASSIFICATION	0.01046808033801266	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9997536311402083	WITHOUT_CLASSIFICATION	2.463688597917753E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9998480220572452	WITHOUT_CLASSIFICATION	1.519779427547766E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9996495007094341	WITHOUT_CLASSIFICATION	3.504992905658611E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9996495007094341	WITHOUT_CLASSIFICATION	3.504992905658611E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9994636044009195	WITHOUT_CLASSIFICATION	5.363955990805627E-4	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9986784800033012	WITHOUT_CLASSIFICATION	0.0013215199966988215	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9721793379036751	WITHOUT_CLASSIFICATION	0.027820662096324996	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999712846673768	WITHOUT_CLASSIFICATION	2.8715332623202106E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999712846673768	WITHOUT_CLASSIFICATION	2.8715332623202106E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999712846673768	WITHOUT_CLASSIFICATION	2.8715332623202106E-4	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9994277969803306	WITHOUT_CLASSIFICATION	5.722030196693513E-4	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9965758821273594	WITHOUT_CLASSIFICATION	0.003424117872640595	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9998448896240242	WITHOUT_CLASSIFICATION	1.551103759758245E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9997230890792097	WITHOUT_CLASSIFICATION	2.7691092079024153E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998600406492313	WITHOUT_CLASSIFICATION	1.399593507687363E-4	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.998710992932029	WITHOUT_CLASSIFICATION	0.001289007067971007	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9998461025428316	WITHOUT_CLASSIFICATION	1.538974571683434E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9996894506968543	WITHOUT_CLASSIFICATION	3.10549303145576E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9996894506968543	WITHOUT_CLASSIFICATION	3.10549303145576E-4	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9988271351842782	WITHOUT_CLASSIFICATION	0.001172864815721766	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9997856722122527	WITHOUT_CLASSIFICATION	2.143277877473302E-4	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9983770848614826	WITHOUT_CLASSIFICATION	0.0016229151385173742	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9975958405949676	WITHOUT_CLASSIFICATION	0.002404159405032312	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9992269470636631	WITHOUT_CLASSIFICATION	7.730529363368609E-4	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9926783986367019	WITHOUT_CLASSIFICATION	0.007321601363298181	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997341970881061	WITHOUT_CLASSIFICATION	2.658029118939379E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9995619851196715	WITHOUT_CLASSIFICATION	4.380148803285031E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9995778830020834	WITHOUT_CLASSIFICATION	4.2211699791656E-4	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999111790799158	WITHOUT_CLASSIFICATION	8.882092008414839E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993213379954647	WITHOUT_CLASSIFICATION	6.786620045353886E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999158601351703	WITHOUT_CLASSIFICATION	8.41398648297962E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9998772906339849	WITHOUT_CLASSIFICATION	1.2270936601508064E-4	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9997188274895562	WITHOUT_CLASSIFICATION	2.811725104437851E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9995686357680035	WITHOUT_CLASSIFICATION	4.3136423199653234E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999640573370132	WITHOUT_CLASSIFICATION	3.5942662986790334E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9997748289029725	WITHOUT_CLASSIFICATION	2.251710970274711E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.999855259620492	WITHOUT_CLASSIFICATION	1.4474037950801304E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9998019336354966	WITHOUT_CLASSIFICATION	1.9806636450347878E-4	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9997881154052838	WITHOUT_CLASSIFICATION	2.118845947162242E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9969505013292944	WITHOUT_CLASSIFICATION	0.0030494986707056914	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999269531326241	WITHOUT_CLASSIFICATION	7.304686737581201E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9998375827029102	WITHOUT_CLASSIFICATION	1.624172970897345E-4	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9965072866471226	WITHOUT_CLASSIFICATION	0.003492713352877324	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999494467976112	WITHOUT_CLASSIFICATION	5.055320238878465E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9998617466157247	WITHOUT_CLASSIFICATION	1.3825338427536903E-4	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9998617466157247	WITHOUT_CLASSIFICATION	1.3825338427536903E-4	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9997108147360201	WITHOUT_CLASSIFICATION	2.8918526397993244E-4	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9998998624345847	WITHOUT_CLASSIFICATION	1.0013756541523303E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9998048942899231	WITHOUT_CLASSIFICATION	1.9510571007681508E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999796758142393	WITHOUT_CLASSIFICATION	2.0324185760704698E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999796758142393	WITHOUT_CLASSIFICATION	2.0324185760704698E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999645382387624	WITHOUT_CLASSIFICATION	3.546176123746823E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9991256070007064	WITHOUT_CLASSIFICATION	8.74392999293554E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9998145894806415	WITHOUT_CLASSIFICATION	1.8541051935855833E-4	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9998158508032892	WITHOUT_CLASSIFICATION	1.841491967108652E-4	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9907333046134342	WITHOUT_CLASSIFICATION	0.009266695386565712	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9998590840943596	WITHOUT_CLASSIFICATION	1.409159056403523E-4	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9997753122115467	WITHOUT_CLASSIFICATION	2.2468778845323345E-4	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9978796425656487	WITHOUT_CLASSIFICATION	0.0021203574343513576	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.999714546652917	WITHOUT_CLASSIFICATION	2.854533470829905E-4	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999982671781336	WITHOUT_CLASSIFICATION	1.732821866513007E-6	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9993051622552086	WITHOUT_CLASSIFICATION	6.948377447914783E-4	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999110930364226	WITHOUT_CLASSIFICATION	8.890696357736115E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999880621196564	WITHOUT_CLASSIFICATION	1.1937880343515935E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9992711079068118	WITHOUT_CLASSIFICATION	7.288920931881206E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9997537768634965	WITHOUT_CLASSIFICATION	2.462231365034866E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9998831682302473	WITHOUT_CLASSIFICATION	1.1683176975263523E-4	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9987065334015618	WITHOUT_CLASSIFICATION	0.001293466598438123	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999660941066821	WITHOUT_CLASSIFICATION	3.390589331791037E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9998516871092744	WITHOUT_CLASSIFICATION	1.4831289072564458E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999191810940588	WITHOUT_CLASSIFICATION	8.081890594124418E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998902597620761	WITHOUT_CLASSIFICATION	1.0974023792387142E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9883599460176327	WITHOUT_CLASSIFICATION	0.011640053982367358	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998599809882881	WITHOUT_CLASSIFICATION	1.400190117119082E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995828106230054	WITHOUT_CLASSIFICATION	4.171893769946973E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995828106230054	WITHOUT_CLASSIFICATION	4.171893769946973E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995828106230054	WITHOUT_CLASSIFICATION	4.171893769946973E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995828106230054	WITHOUT_CLASSIFICATION	4.171893769946973E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999883098954561	WITHOUT_CLASSIFICATION	1.1690104543906207E-4	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9993037281755014	WITHOUT_CLASSIFICATION	6.962718244986901E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998871874949572	WITHOUT_CLASSIFICATION	1.1281250504276068E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998871874949572	WITHOUT_CLASSIFICATION	1.1281250504276068E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998871874949572	WITHOUT_CLASSIFICATION	1.1281250504276068E-4	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9995998450065026	WITHOUT_CLASSIFICATION	4.0015499349742935E-4	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9998361776410712	WITHOUT_CLASSIFICATION	1.638223589287134E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9990831351147287	WITHOUT_CLASSIFICATION	9.16864885271384E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9990831351147287	WITHOUT_CLASSIFICATION	9.16864885271384E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9995698408795125	WITHOUT_CLASSIFICATION	4.3015912048743746E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9995698408795125	WITHOUT_CLASSIFICATION	4.3015912048743746E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995501800691214	WITHOUT_CLASSIFICATION	4.498199308785025E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995501800691214	WITHOUT_CLASSIFICATION	4.498199308785025E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9997272040152315	WITHOUT_CLASSIFICATION	2.7279598476849E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9992914543465762	WITHOUT_CLASSIFICATION	7.085456534238171E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9997074466309702	WITHOUT_CLASSIFICATION	2.925533690297702E-4	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9992660236612327	WITHOUT_CLASSIFICATION	7.339763387671552E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9998435937309814	WITHOUT_CLASSIFICATION	1.5640626901861543E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9992908773980175	WITHOUT_CLASSIFICATION	7.091226019826401E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999289410327508	WITHOUT_CLASSIFICATION	7.10589672492932E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9991450286541075	WITHOUT_CLASSIFICATION	8.549713458925105E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9998041929645483	WITHOUT_CLASSIFICATION	1.9580703545173995E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.999171779384527	WITHOUT_CLASSIFICATION	8.282206154729922E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9998400952089527	WITHOUT_CLASSIFICATION	1.5990479104737996E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9995154073963494	WITHOUT_CLASSIFICATION	4.8459260365069475E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.999206928448735	WITHOUT_CLASSIFICATION	7.930715512649497E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999409580119324	WITHOUT_CLASSIFICATION	5.9041988067532496E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9998264434302142	WITHOUT_CLASSIFICATION	1.7355656978582023E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9998263663922764	WITHOUT_CLASSIFICATION	1.7363360772365143E-4	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9998728954635198	WITHOUT_CLASSIFICATION	1.2710453648026194E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9997320918544383	WITHOUT_CLASSIFICATION	2.679081455616923E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9997320918544383	WITHOUT_CLASSIFICATION	2.679081455616923E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9994917911002675	WITHOUT_CLASSIFICATION	5.08208899732451E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9996879433109762	WITHOUT_CLASSIFICATION	3.1205668902373554E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9996879433109762	WITHOUT_CLASSIFICATION	3.1205668902373554E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9996023668288146	WITHOUT_CLASSIFICATION	3.976331711853798E-4	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9995487555886595	WITHOUT_CLASSIFICATION	4.512444113404612E-4	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9994707593634853	WITHOUT_CLASSIFICATION	5.292406365147674E-4	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.999765656041155	WITHOUT_CLASSIFICATION	2.343439588448956E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9960266689658573	WITHOUT_CLASSIFICATION	0.0039733310341426575	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9960266689658573	WITHOUT_CLASSIFICATION	0.0039733310341426575	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9996666830802221	WITHOUT_CLASSIFICATION	3.333169197778479E-4	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9998163231080702	WITHOUT_CLASSIFICATION	1.8367689192987752E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.998686550712024	WITHOUT_CLASSIFICATION	0.0013134492879760193	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.999964045803333	WITHOUT_CLASSIFICATION	3.595419666697635E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9997274533151655	WITHOUT_CLASSIFICATION	2.725466848344628E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999458116203488	WITHOUT_CLASSIFICATION	5.418837965120884E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999458116203488	WITHOUT_CLASSIFICATION	5.418837965120884E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999458116203488	WITHOUT_CLASSIFICATION	5.418837965120884E-4	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999626111045063	WITHOUT_CLASSIFICATION	3.738889549354093E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999626111045063	WITHOUT_CLASSIFICATION	3.738889549354093E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9993920261657318	WITHOUT_CLASSIFICATION	6.079738342682143E-4	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999339923789703	WITHOUT_CLASSIFICATION	6.600762102966824E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999339923789703	WITHOUT_CLASSIFICATION	6.600762102966824E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.999168524660423	WITHOUT_CLASSIFICATION	8.3147533957694E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999474142998163	WITHOUT_CLASSIFICATION	5.258570018360584E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994443993098542	WITHOUT_CLASSIFICATION	5.55600690145813E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999396885614203	WITHOUT_CLASSIFICATION	6.031143857969283E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995855349362452	WITHOUT_CLASSIFICATION	4.1446506375485E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995855349362452	WITHOUT_CLASSIFICATION	4.1446506375485E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996177722340431	WITHOUT_CLASSIFICATION	3.82227765956901E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994353245022679	WITHOUT_CLASSIFICATION	5.646754977321491E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994906780662366	WITHOUT_CLASSIFICATION	5.093219337633415E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995758992671631	WITHOUT_CLASSIFICATION	4.2410073283694803E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997610769591827	WITHOUT_CLASSIFICATION	2.3892304081733897E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995034684166758	WITHOUT_CLASSIFICATION	4.965315833242896E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994892854471746	WITHOUT_CLASSIFICATION	5.10714552825295E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996201815838477	WITHOUT_CLASSIFICATION	3.7981841615230747E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999481527588136	WITHOUT_CLASSIFICATION	5.184724118638984E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994636202704111	WITHOUT_CLASSIFICATION	5.363797295888749E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994814181184044	WITHOUT_CLASSIFICATION	5.185818815955668E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9994554351255438	WITHOUT_CLASSIFICATION	5.445648744562698E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9997114513084302	WITHOUT_CLASSIFICATION	2.8854869156978523E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9997734870984705	WITHOUT_CLASSIFICATION	2.2651290152950657E-4	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9997311005879939	WITHOUT_CLASSIFICATION	2.6889941200612986E-4	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9994378783165978	WITHOUT_CLASSIFICATION	5.621216834022285E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9988224574248716	WITHOUT_CLASSIFICATION	0.0011775425751283381	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9997008102731183	WITHOUT_CLASSIFICATION	2.991897268817228E-4	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9995394358327525	WITHOUT_CLASSIFICATION	4.6056416724746805E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9998192838743475	WITHOUT_CLASSIFICATION	1.8071612565244278E-4	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9996338104484603	WITHOUT_CLASSIFICATION	3.6618955153960636E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9997689633629009	WITHOUT_CLASSIFICATION	2.3103663709917057E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9997477605504539	WITHOUT_CLASSIFICATION	2.5223944954616117E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.998058362993012	WITHOUT_CLASSIFICATION	0.0019416370069879963	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998022585263635	WITHOUT_CLASSIFICATION	1.9774147363638825E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9996368156093463	WITHOUT_CLASSIFICATION	3.6318439065375057E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9983595499901793	WITHOUT_CLASSIFICATION	0.0016404500098206878	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9983595499901793	WITHOUT_CLASSIFICATION	0.0016404500098206878	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9992417217534076	WITHOUT_CLASSIFICATION	7.582782465923497E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990597420856285	WITHOUT_CLASSIFICATION	9.402579143715641E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9997688781102382	WITHOUT_CLASSIFICATION	2.3112188976195174E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9998774714479004	WITHOUT_CLASSIFICATION	1.2252855209961253E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9997940463769094	WITHOUT_CLASSIFICATION	2.0595362309064214E-4	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.999789585417524	WITHOUT_CLASSIFICATION	2.1041458247591518E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9997968665444491	WITHOUT_CLASSIFICATION	2.031334555508548E-4	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.999740452631811	WITHOUT_CLASSIFICATION	2.595473681890216E-4	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992167627477655	WITHOUT_CLASSIFICATION	7.832372522344033E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992167627477655	WITHOUT_CLASSIFICATION	7.832372522344033E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.99918678058712	WITHOUT_CLASSIFICATION	8.132194128799045E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9998870320399939	WITHOUT_CLASSIFICATION	1.1296796000602853E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9998307005721287	WITHOUT_CLASSIFICATION	1.692994278712588E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9997572665275747	WITHOUT_CLASSIFICATION	2.4273347242526785E-4	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999791534345475	WITHOUT_CLASSIFICATION	2.0846565452473134E-5	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9992744696412666	WITHOUT_CLASSIFICATION	7.255303587334427E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9988224574248716	WITHOUT_CLASSIFICATION	0.0011775425751283381	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9994311687835357	WITHOUT_CLASSIFICATION	5.688312164642256E-4	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9998953577623789	WITHOUT_CLASSIFICATION	1.046422376210883E-4	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9995753205753395	WITHOUT_CLASSIFICATION	4.2467942466051874E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9997228437111438	WITHOUT_CLASSIFICATION	2.7715628885611185E-4	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999017791671968	WITHOUT_CLASSIFICATION	9.822083280321097E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9995066414386686	WITHOUT_CLASSIFICATION	4.93358561331314E-4	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9994543975749446	WITHOUT_CLASSIFICATION	5.456024250555019E-4	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9995800685488945	WITHOUT_CLASSIFICATION	4.199314511054509E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9968544439303301	WITHOUT_CLASSIFICATION	0.003145556069669981	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9998453201045912	WITHOUT_CLASSIFICATION	1.5467989540882062E-4	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999019663729495	WITHOUT_CLASSIFICATION	9.803362705059491E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9998453201045912	WITHOUT_CLASSIFICATION	1.5467989540882062E-4	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999019663729495	WITHOUT_CLASSIFICATION	9.803362705059491E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999262886510373	WITHOUT_CLASSIFICATION	7.37113489628035E-5	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9998958346576159	WITHOUT_CLASSIFICATION	1.0416534238405735E-4	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9993163128151565	WITHOUT_CLASSIFICATION	6.836871848435423E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9997213956404553	WITHOUT_CLASSIFICATION	2.786043595447296E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9987629385237821	WITHOUT_CLASSIFICATION	0.0012370614762178631	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9997208334620341	WITHOUT_CLASSIFICATION	2.791665379658928E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9998600406492313	WITHOUT_CLASSIFICATION	1.399593507687363E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9998751409111174	WITHOUT_CLASSIFICATION	1.2485908888260338E-4	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9997980526517208	WITHOUT_CLASSIFICATION	2.0194734827917436E-4	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.999486588865445	WITHOUT_CLASSIFICATION	5.134111345549685E-4	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9997470204432453	WITHOUT_CLASSIFICATION	2.5297955675473657E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9989342670243343	WITHOUT_CLASSIFICATION	0.0010657329756656446	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9997208334620341	WITHOUT_CLASSIFICATION	2.791665379658928E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9996965843502817	WITHOUT_CLASSIFICATION	3.0341564971829606E-4	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9997281854615458	WITHOUT_CLASSIFICATION	2.7181453845411956E-4	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9997095557102492	WITHOUT_CLASSIFICATION	2.904442897508068E-4	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9996902152886225	WITHOUT_CLASSIFICATION	3.097847113776265E-4	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9981556042711156	WITHOUT_CLASSIFICATION	0.0018443957288843112	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9997826141242112	WITHOUT_CLASSIFICATION	2.1738587578891812E-4	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999107332072373	WITHOUT_CLASSIFICATION	8.926679276267736E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979661479816151	WITHOUT_CLASSIFICATION	0.0020338520183849486	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9996465019842831	WITHOUT_CLASSIFICATION	3.5349801571691827E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9989204942739709	WITHOUT_CLASSIFICATION	0.0010795057260290508	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9997053298443008	WITHOUT_CLASSIFICATION	2.9467015569912245E-4	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996220414590594	WITHOUT_CLASSIFICATION	3.7795854094056726E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9997113065494252	WITHOUT_CLASSIFICATION	2.886934505748243E-4	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9998917063297815	WITHOUT_CLASSIFICATION	1.0829367021846843E-4	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9995706950450068	WITHOUT_CLASSIFICATION	4.293049549932399E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999097053252517	WITHOUT_CLASSIFICATION	9.029467474833589E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9994480373354373	WITHOUT_CLASSIFICATION	5.519626645626122E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9989204942739709	WITHOUT_CLASSIFICATION	0.0010795057260290508	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9997053298443008	WITHOUT_CLASSIFICATION	2.9467015569912245E-4	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996220414590594	WITHOUT_CLASSIFICATION	3.7795854094056726E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999196776326497	WITHOUT_CLASSIFICATION	8.032236735029879E-5	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9992046073341115	WITHOUT_CLASSIFICATION	7.953926658884051E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9992473554420241	WITHOUT_CLASSIFICATION	7.526445579759525E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9997903085654289	WITHOUT_CLASSIFICATION	2.0969143457104882E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9998011811169384	WITHOUT_CLASSIFICATION	1.9881888306169326E-4	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9990025312024728	WITHOUT_CLASSIFICATION	9.974687975271527E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9997507313107491	WITHOUT_CLASSIFICATION	2.492686892508989E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9997347507509807	WITHOUT_CLASSIFICATION	2.6524924901923406E-4	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9998372737574441	WITHOUT_CLASSIFICATION	1.627262425558991E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9977704804699633	WITHOUT_CLASSIFICATION	0.002229519530036572	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9997211327493132	WITHOUT_CLASSIFICATION	2.7886725068685157E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9997377456564487	WITHOUT_CLASSIFICATION	2.6225434355129805E-4	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999017717222978	WITHOUT_CLASSIFICATION	9.82282777022811E-5	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9997584023030319	WITHOUT_CLASSIFICATION	2.4159769696800108E-4	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.999626712140045	WITHOUT_CLASSIFICATION	3.7328785995502514E-4	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.999936517012167	WITHOUT_CLASSIFICATION	6.348298783294141E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999425672053252	WITHOUT_CLASSIFICATION	5.7432794674972495E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9998972813283244	WITHOUT_CLASSIFICATION	1.0271867167550385E-4	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.999895161968648	WITHOUT_CLASSIFICATION	1.0483803135194997E-4	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9970356953380841	WITHOUT_CLASSIFICATION	0.0029643046619159813	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9988588713447681	WITHOUT_CLASSIFICATION	0.001141128655231874	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9996309354152063	WITHOUT_CLASSIFICATION	3.690645847935843E-4	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9998628015004377	WITHOUT_CLASSIFICATION	1.3719849956233415E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9998327170554578	WITHOUT_CLASSIFICATION	1.6728294454219602E-4	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9998399670719419	WITHOUT_CLASSIFICATION	1.6003292805809072E-4	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9997786249055924	WITHOUT_CLASSIFICATION	2.2137509440753656E-4	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9993456182280879	WITHOUT_CLASSIFICATION	6.543817719121079E-4	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9994729249056761	WITHOUT_CLASSIFICATION	5.270750943239243E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9987808627344837	WITHOUT_CLASSIFICATION	0.0012191372655162135	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999292334315741	WITHOUT_CLASSIFICATION	7.076656842590082E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999274357744106	WITHOUT_CLASSIFICATION	7.256422558936744E-5	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9991863515532503	WITHOUT_CLASSIFICATION	8.136484467497699E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9987413836746064	WITHOUT_CLASSIFICATION	0.0012586163253935463	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9997390212469699	WITHOUT_CLASSIFICATION	2.6097875303011264E-4	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9976550451263616	WITHOUT_CLASSIFICATION	0.002344954873638365	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9996850502507335	WITHOUT_CLASSIFICATION	3.1494974926640605E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9995485887624139	WITHOUT_CLASSIFICATION	4.514112375859884E-4	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9975098895184732	WITHOUT_CLASSIFICATION	0.0024901104815268724	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9997689633629009	WITHOUT_CLASSIFICATION	2.3103663709917057E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9997989438296929	WITHOUT_CLASSIFICATION	2.010561703070406E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9995774335257099	WITHOUT_CLASSIFICATION	4.225664742899931E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9990501154297148	WITHOUT_CLASSIFICATION	9.498845702851921E-4	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9997989841344423	WITHOUT_CLASSIFICATION	2.0101586555754453E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995263290909049	WITHOUT_CLASSIFICATION	4.7367090909518356E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998960190657281	WITHOUT_CLASSIFICATION	1.0398093427194223E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995263290909049	WITHOUT_CLASSIFICATION	4.7367090909518356E-4	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999154021977978	WITHOUT_CLASSIFICATION	8.45978022021912E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9997411454398434	WITHOUT_CLASSIFICATION	2.588545601565643E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9994222316085872	WITHOUT_CLASSIFICATION	5.777683914127817E-4	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9998239856550358	WITHOUT_CLASSIFICATION	1.7601434496408423E-4	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9997271471312082	WITHOUT_CLASSIFICATION	2.7285286879168125E-4	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999019012462861	WITHOUT_CLASSIFICATION	9.809875371393519E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9998121399502173	WITHOUT_CLASSIFICATION	1.8786004978264798E-4	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999076579594992	WITHOUT_CLASSIFICATION	9.234204050071094E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999519233288573	WITHOUT_CLASSIFICATION	4.807667114275499E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999699842483326	WITHOUT_CLASSIFICATION	3.0015751667407153E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.999929690812456	WITHOUT_CLASSIFICATION	7.030918754404123E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.999383742968061	WITHOUT_CLASSIFICATION	6.162570319389764E-4	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.999756496181026	WITHOUT_CLASSIFICATION	2.4350381897395582E-4	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999556074294802	WITHOUT_CLASSIFICATION	4.439257051973745E-5	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9995089327646389	WITHOUT_CLASSIFICATION	4.910672353611672E-4	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.998531337121172	WITHOUT_CLASSIFICATION	0.0014686628788279318	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9998805250898078	WITHOUT_CLASSIFICATION	1.1947491019211545E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9998704245320008	WITHOUT_CLASSIFICATION	1.2957546799928998E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9997871807364506	WITHOUT_CLASSIFICATION	2.128192635493518E-4	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9998517621472357	WITHOUT_CLASSIFICATION	1.4823785276432553E-4	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9996698923246123	WITHOUT_CLASSIFICATION	3.3010767538776015E-4	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9997897096896825	WITHOUT_CLASSIFICATION	2.1029031031760171E-4	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9998313817232084	WITHOUT_CLASSIFICATION	1.686182767915418E-4	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9995165386770838	WITHOUT_CLASSIFICATION	4.834613229161667E-4	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.999394919788754	WITHOUT_CLASSIFICATION	6.050802112459696E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999302180137493	WITHOUT_CLASSIFICATION	6.978198625080012E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9995704699833566	WITHOUT_CLASSIFICATION	4.295300166434515E-4	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9998971074390457	WITHOUT_CLASSIFICATION	1.0289256095440282E-4	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9998507025533725	WITHOUT_CLASSIFICATION	1.4929744662749253E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.999899814909982	WITHOUT_CLASSIFICATION	1.0018509001792124E-4	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9994084496941198	WITHOUT_CLASSIFICATION	5.915503058801132E-4	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9998405369455583	WITHOUT_CLASSIFICATION	1.5946305444166105E-4	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.99994662449658	WITHOUT_CLASSIFICATION	5.337550341989363E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9996992203151057	WITHOUT_CLASSIFICATION	3.0077968489429697E-4	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9997082141211355	WITHOUT_CLASSIFICATION	2.917858788644443E-4	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9997544333002102	WITHOUT_CLASSIFICATION	2.455666997897825E-4	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999730998377205	WITHOUT_CLASSIFICATION	2.6900162279494473E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9990501154297148	WITHOUT_CLASSIFICATION	9.498845702851921E-4	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999396583031083	WITHOUT_CLASSIFICATION	6.0341696891669565E-5	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9998777080340512	WITHOUT_CLASSIFICATION	1.2229196594883734E-4	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9998925966532562	WITHOUT_CLASSIFICATION	1.074033467438034E-4	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9985442851262699	WITHOUT_CLASSIFICATION	0.001455714873730067	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998960190657281	WITHOUT_CLASSIFICATION	1.0398093427194223E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999244865956979	WITHOUT_CLASSIFICATION	7.551340430210467E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9997124915819784	WITHOUT_CLASSIFICATION	2.875084180215436E-4	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.999709518788473	WITHOUT_CLASSIFICATION	2.904812115270645E-4	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9998252761485696	WITHOUT_CLASSIFICATION	1.7472385143026486E-4	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9990621090935112	WITHOUT_CLASSIFICATION	9.378909064887885E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999071767420266	WITHOUT_CLASSIFICATION	9.28232579733606E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9998148008937287	WITHOUT_CLASSIFICATION	1.8519910627132235E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9997502000763401	WITHOUT_CLASSIFICATION	2.4979992365984055E-4	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9998685831833409	WITHOUT_CLASSIFICATION	1.3141681665906988E-4	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9991167126178534	WITHOUT_CLASSIFICATION	8.832873821465422E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9997477605504539	WITHOUT_CLASSIFICATION	2.5223944954616117E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9997162316966817	WITHOUT_CLASSIFICATION	2.837683033184264E-4	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9997098950861333	WITHOUT_CLASSIFICATION	2.901049138667263E-4	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9990986291602785	WITHOUT_CLASSIFICATION	9.013708397216217E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9997129819092495	WITHOUT_CLASSIFICATION	2.870180907504816E-4	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.999281955668633	WITHOUT_CLASSIFICATION	7.180443313670987E-4	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9987015607914028	WITHOUT_CLASSIFICATION	0.0012984392085972388	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9998618457005087	WITHOUT_CLASSIFICATION	1.3815429949120555E-4	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9997341405474908	WITHOUT_CLASSIFICATION	2.6585945250930283E-4	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9996788328950297	WITHOUT_CLASSIFICATION	3.211671049704132E-4	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.999781828287103	WITHOUT_CLASSIFICATION	2.1817171289687822E-4	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9997341405474908	WITHOUT_CLASSIFICATION	2.6585945250930283E-4	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9994019487072914	WITHOUT_CLASSIFICATION	5.980512927086088E-4	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9997480395004388	WITHOUT_CLASSIFICATION	2.5196049956123826E-4	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9998133626116141	WITHOUT_CLASSIFICATION	1.8663738838577647E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999285467092504	WITHOUT_CLASSIFICATION	7.145329074972742E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.999703309602026	WITHOUT_CLASSIFICATION	2.9669039797402787E-4	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9998798801890596	WITHOUT_CLASSIFICATION	1.2011981094038363E-4	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9998217466190281	WITHOUT_CLASSIFICATION	1.7825338097184545E-4	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999140444074459	WITHOUT_CLASSIFICATION	8.595559255412458E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999456110725681	WITHOUT_CLASSIFICATION	5.438892743199825E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9997095424282274	WITHOUT_CLASSIFICATION	2.9045757177261427E-4	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9997241888189244	WITHOUT_CLASSIFICATION	2.7581118107555564E-4	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9997532029824484	WITHOUT_CLASSIFICATION	2.4679701755152186E-4	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999024039121645	WITHOUT_CLASSIFICATION	9.759608783554257E-5	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9991012522575091	WITHOUT_CLASSIFICATION	8.987477424908613E-4	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9990650465179316	WITHOUT_CLASSIFICATION	9.349534820683766E-4	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9968656278401151	WITHOUT_CLASSIFICATION	0.0031343721598849255	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999030507843536	WITHOUT_CLASSIFICATION	9.694921564631746E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9998982012720392	WITHOUT_CLASSIFICATION	1.0179872796079953E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9998102559906583	WITHOUT_CLASSIFICATION	1.897440093417259E-4	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9998132433858153	WITHOUT_CLASSIFICATION	1.8675661418469401E-4	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9997854370200543	WITHOUT_CLASSIFICATION	2.1456297994557332E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.999695331374272	WITHOUT_CLASSIFICATION	3.0466862572801196E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999564546574109	WITHOUT_CLASSIFICATION	4.354534258910036E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999564546574109	WITHOUT_CLASSIFICATION	4.354534258910036E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9995579370129117	WITHOUT_CLASSIFICATION	4.420629870882936E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9996674975146748	WITHOUT_CLASSIFICATION	3.3250248532528174E-4	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9996506169661366	WITHOUT_CLASSIFICATION	3.493830338634298E-4	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999133226105522	WITHOUT_CLASSIFICATION	8.667738944782227E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9989827075675509	WITHOUT_CLASSIFICATION	0.0010172924324491032	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9992579454233029	WITHOUT_CLASSIFICATION	7.42054576697037E-4	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9994806842753499	WITHOUT_CLASSIFICATION	5.193157246501768E-4	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9997356995179533	WITHOUT_CLASSIFICATION	2.6430048204676495E-4	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9987335798147321	WITHOUT_CLASSIFICATION	0.0012664201852679777	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9998374448251283	WITHOUT_CLASSIFICATION	1.6255517487168312E-4	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9997059125629644	WITHOUT_CLASSIFICATION	2.94087437035694E-4	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9993157250470817	WITHOUT_CLASSIFICATION	6.842749529182592E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9995556403064899	WITHOUT_CLASSIFICATION	4.4435969350998844E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9997819968563161	WITHOUT_CLASSIFICATION	2.1800314368382017E-4	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9997568455317304	WITHOUT_CLASSIFICATION	2.4315446826954162E-4	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999932032461021	WITHOUT_CLASSIFICATION	6.796753897874083E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.999235418816872	WITHOUT_CLASSIFICATION	7.645811831280284E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.999235418816872	WITHOUT_CLASSIFICATION	7.645811831280284E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9997523468393957	WITHOUT_CLASSIFICATION	2.476531606042882E-4	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9997056624080124	WITHOUT_CLASSIFICATION	2.9433759198758237E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999360017847361	WITHOUT_CLASSIFICATION	6.399821526391238E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9997317100518904	WITHOUT_CLASSIFICATION	2.6828994810958824E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9996110881534082	WITHOUT_CLASSIFICATION	3.8891184659177745E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9995181447886813	WITHOUT_CLASSIFICATION	4.818552113187259E-4	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9998684588313917	WITHOUT_CLASSIFICATION	1.3154116860827165E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9996420691833484	WITHOUT_CLASSIFICATION	3.579308166516384E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9996420691833484	WITHOUT_CLASSIFICATION	3.579308166516384E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9996420691833484	WITHOUT_CLASSIFICATION	3.579308166516384E-4	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9998015982143718	WITHOUT_CLASSIFICATION	1.9840178562828236E-4	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9997913790856106	WITHOUT_CLASSIFICATION	2.0862091438939346E-4	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9987198642260865	WITHOUT_CLASSIFICATION	0.0012801357739135554	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9996425521747202	WITHOUT_CLASSIFICATION	3.574478252797683E-4	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9996425521747202	WITHOUT_CLASSIFICATION	3.574478252797683E-4	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9988244485991142	WITHOUT_CLASSIFICATION	0.0011755514008857204	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9997413721203167	WITHOUT_CLASSIFICATION	2.586278796832536E-4	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.998534454337586	WITHOUT_CLASSIFICATION	0.001465545662413952	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9997302205471941	WITHOUT_CLASSIFICATION	2.6977945280599164E-4	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9997143158867059	WITHOUT_CLASSIFICATION	2.856841132940541E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9994411103605336	WITHOUT_CLASSIFICATION	5.588896394663865E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9991362026811131	WITHOUT_CLASSIFICATION	8.637973188868669E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9997210973199833	WITHOUT_CLASSIFICATION	2.78902680016711E-4	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9996918051537561	WITHOUT_CLASSIFICATION	3.0819484624385794E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9997823587371544	WITHOUT_CLASSIFICATION	2.176412628457035E-4	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9997824097942357	WITHOUT_CLASSIFICATION	2.1759020576431936E-4	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9987242500714053	WITHOUT_CLASSIFICATION	0.0012757499285947916	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9997739076223707	WITHOUT_CLASSIFICATION	2.260923776293282E-4	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9990538143397115	WITHOUT_CLASSIFICATION	9.461856602885881E-4	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9991481353298303	WITHOUT_CLASSIFICATION	8.518646701697472E-4	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9991168028082913	WITHOUT_CLASSIFICATION	8.83197191708717E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9991168028082913	WITHOUT_CLASSIFICATION	8.83197191708717E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9991168028082913	WITHOUT_CLASSIFICATION	8.83197191708717E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9991168028082913	WITHOUT_CLASSIFICATION	8.83197191708717E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9992928558825948	WITHOUT_CLASSIFICATION	7.071441174052909E-4	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9994232581226109	WITHOUT_CLASSIFICATION	5.767418773890258E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9997755682063766	WITHOUT_CLASSIFICATION	2.2443179362345824E-4	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9988864825692261	WITHOUT_CLASSIFICATION	0.0011135174307739014	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9994232581226109	WITHOUT_CLASSIFICATION	5.767418773890258E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9993277234235068	WITHOUT_CLASSIFICATION	6.72276576493128E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9995334496562909	WITHOUT_CLASSIFICATION	4.66550343709043E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9995373467571897	WITHOUT_CLASSIFICATION	4.6265324281027085E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9996617630034266	WITHOUT_CLASSIFICATION	3.382369965735256E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9995334496562909	WITHOUT_CLASSIFICATION	4.66550343709043E-4	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999280371358393	WITHOUT_CLASSIFICATION	7.196286416066608E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9996617630034266	WITHOUT_CLASSIFICATION	3.382369965735256E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9997943773178719	WITHOUT_CLASSIFICATION	2.0562268212817288E-4	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9997943773178719	WITHOUT_CLASSIFICATION	2.0562268212817288E-4	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999273428870751	WITHOUT_CLASSIFICATION	7.265711292485541E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9998910628771114	WITHOUT_CLASSIFICATION	1.089371228886611E-4	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999273428870751	WITHOUT_CLASSIFICATION	7.265711292485541E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998044952972435	WITHOUT_CLASSIFICATION	1.9550470275656314E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9998048003410037	WITHOUT_CLASSIFICATION	1.9519965899618267E-4	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9995214952199156	WITHOUT_CLASSIFICATION	4.7850478008429077E-4	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999333096065588	WITHOUT_CLASSIFICATION	6.669039344124694E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999313551873913	WITHOUT_CLASSIFICATION	6.864481260862654E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999542379386254	WITHOUT_CLASSIFICATION	4.5762061374621626E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.999946323956739	WITHOUT_CLASSIFICATION	5.367604326101078E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9997443095957104	WITHOUT_CLASSIFICATION	2.5569040428970603E-4	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9997733364410865	WITHOUT_CLASSIFICATION	2.2666355891347637E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9997891024460415	WITHOUT_CLASSIFICATION	2.108975539584904E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9998878528102688	WITHOUT_CLASSIFICATION	1.1214718973109669E-4	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999237906818906	WITHOUT_CLASSIFICATION	7.620931810934997E-5	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9997999522534641	WITHOUT_CLASSIFICATION	2.0004774653601082E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998288212028196	WITHOUT_CLASSIFICATION	1.7117879718053173E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998044952972435	WITHOUT_CLASSIFICATION	1.9550470275656314E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998044952972435	WITHOUT_CLASSIFICATION	1.9550470275656314E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.999734639262642	WITHOUT_CLASSIFICATION	2.6536073735788105E-4	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9989430704499153	WITHOUT_CLASSIFICATION	0.0010569295500847257	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999068876758824	WITHOUT_CLASSIFICATION	9.311232411753333E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999765335097948	WITHOUT_CLASSIFICATION	2.3466490205200816E-4	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.999765335097948	WITHOUT_CLASSIFICATION	2.3466490205200816E-4	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9989200723447375	WITHOUT_CLASSIFICATION	0.0010799276552626257	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999476253207265	WITHOUT_CLASSIFICATION	5.2374679273551155E-5	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.998346808359784	WITHOUT_CLASSIFICATION	0.0016531916402160376	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9996975706263739	WITHOUT_CLASSIFICATION	3.024293736261452E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994666004115748	WITHOUT_CLASSIFICATION	5.333995884252423E-4	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9980829476842069	WITHOUT_CLASSIFICATION	0.0019170523157931265	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9993283468753806	WITHOUT_CLASSIFICATION	6.716531246192926E-4	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9992729916675137	WITHOUT_CLASSIFICATION	7.270083324863096E-4	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.997692093135573	WITHOUT_CLASSIFICATION	0.002307906864427022	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9996256498817785	WITHOUT_CLASSIFICATION	3.7435011822160044E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9998370054924047	WITHOUT_CLASSIFICATION	1.6299450759526497E-4	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9997849446502289	WITHOUT_CLASSIFICATION	2.1505534977116575E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994666004115748	WITHOUT_CLASSIFICATION	5.333995884252423E-4	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9994233631743337	WITHOUT_CLASSIFICATION	5.766368256662234E-4	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9997127524180719	WITHOUT_CLASSIFICATION	2.872475819281687E-4	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9985744843890109	WITHOUT_CLASSIFICATION	0.0014255156109891677	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9915682648336703	WITHOUT_CLASSIFICATION	0.008431735166329713	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9915682648336703	WITHOUT_CLASSIFICATION	0.008431735166329713	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994072300249395	WITHOUT_CLASSIFICATION	5.927699750605024E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9997688781102382	WITHOUT_CLASSIFICATION	2.3112188976195174E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9998774714479004	WITHOUT_CLASSIFICATION	1.2252855209961253E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999650671325287	WITHOUT_CLASSIFICATION	3.493286747130353E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999650671325287	WITHOUT_CLASSIFICATION	3.493286747130353E-4	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9994636044009195	WITHOUT_CLASSIFICATION	5.363955990805627E-4	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9997378862681497	WITHOUT_CLASSIFICATION	2.621137318502381E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9997030296365782	WITHOUT_CLASSIFICATION	2.969703634218384E-4	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9997782397895302	WITHOUT_CLASSIFICATION	2.217602104697983E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.999712846673768	WITHOUT_CLASSIFICATION	2.8715332623202106E-4	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9997104933396415	WITHOUT_CLASSIFICATION	2.8950666035857417E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999830603139254	WITHOUT_CLASSIFICATION	1.6939686074613335E-4	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9998811081011504	WITHOUT_CLASSIFICATION	1.188918988496184E-4	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9997472580828383	WITHOUT_CLASSIFICATION	2.527419171617722E-4	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9997750628432571	WITHOUT_CLASSIFICATION	2.2493715674289455E-4	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9997041333517799	WITHOUT_CLASSIFICATION	2.958666482201399E-4	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9993751237093984	WITHOUT_CLASSIFICATION	6.248762906015923E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9997982514043432	WITHOUT_CLASSIFICATION	2.017485956567618E-4	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9997230890792097	WITHOUT_CLASSIFICATION	2.7691092079024153E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9996490082053011	WITHOUT_CLASSIFICATION	3.50991794698903E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9996490082053011	WITHOUT_CLASSIFICATION	3.50991794698903E-4	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9997740473364795	WITHOUT_CLASSIFICATION	2.2595266352055317E-4	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9996894506968543	WITHOUT_CLASSIFICATION	3.10549303145576E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9996894506968543	WITHOUT_CLASSIFICATION	3.10549303145576E-4	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9997024373086961	WITHOUT_CLASSIFICATION	2.975626913038459E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9998453201045912	WITHOUT_CLASSIFICATION	1.5467989540882062E-4	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9995468149449338	WITHOUT_CLASSIFICATION	4.5318505506619633E-4	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9998600406492313	WITHOUT_CLASSIFICATION	1.399593507687363E-4	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9997072105619006	WITHOUT_CLASSIFICATION	2.9278943809939943E-4	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9998600406492313	WITHOUT_CLASSIFICATION	1.399593507687363E-4	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9996960245802646	WITHOUT_CLASSIFICATION	3.0397541973538924E-4	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.999927884946307	WITHOUT_CLASSIFICATION	7.211505369299856E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9998150740136604	WITHOUT_CLASSIFICATION	1.849259863395731E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9993751237093984	WITHOUT_CLASSIFICATION	6.248762906015923E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999019551896966	WITHOUT_CLASSIFICATION	9.80448103034142E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9997208334620341	WITHOUT_CLASSIFICATION	2.791665379658928E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9996308664857567	WITHOUT_CLASSIFICATION	3.691335142433392E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.999492394000744	WITHOUT_CLASSIFICATION	5.076059992561064E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9997399844565757	WITHOUT_CLASSIFICATION	2.6001554342424993E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9998615614753936	WITHOUT_CLASSIFICATION	1.3843852460649616E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999554740542227	WITHOUT_CLASSIFICATION	4.4525945777294844E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999554740542227	WITHOUT_CLASSIFICATION	4.4525945777294844E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9996681505649057	WITHOUT_CLASSIFICATION	3.318494350943091E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998382998773531	WITHOUT_CLASSIFICATION	1.6170012264688386E-4	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9996960245802646	WITHOUT_CLASSIFICATION	3.0397541973538924E-4	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9996960245802646	WITHOUT_CLASSIFICATION	3.0397541973538924E-4	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9997176946184999	WITHOUT_CLASSIFICATION	2.8230538150009177E-4	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9988077111573288	WITHOUT_CLASSIFICATION	0.0011922888426712458	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9997287159480145	WITHOUT_CLASSIFICATION	2.7128405198547734E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9996489163657499	WITHOUT_CLASSIFICATION	3.5108363425004693E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9997986627211511	WITHOUT_CLASSIFICATION	2.013372788489046E-4	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9995761855376502	WITHOUT_CLASSIFICATION	4.23814462349922E-4	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.999174926824682	WITHOUT_CLASSIFICATION	8.250731753179534E-4	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9997046519355496	WITHOUT_CLASSIFICATION	2.953480644504292E-4	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9997561769854565	WITHOUT_CLASSIFICATION	2.4382301454359975E-4	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9997241465857669	WITHOUT_CLASSIFICATION	2.7585341423302977E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9995761855376502	WITHOUT_CLASSIFICATION	4.23814462349922E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996412203849396	WITHOUT_CLASSIFICATION	3.5877961506032433E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996412203849396	WITHOUT_CLASSIFICATION	3.5877961506032433E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9998215383644503	WITHOUT_CLASSIFICATION	1.7846163554977726E-4	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9997201310047753	WITHOUT_CLASSIFICATION	2.7986899522460906E-4	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999138591529907	WITHOUT_CLASSIFICATION	8.614084700929236E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999138591529907	WITHOUT_CLASSIFICATION	8.614084700929236E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9997788280757443	WITHOUT_CLASSIFICATION	2.2117192425567583E-4	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9957452387457145	WITHOUT_CLASSIFICATION	0.004254761254285409	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9987629385237821	WITHOUT_CLASSIFICATION	0.0012370614762178631	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9997808378362028	WITHOUT_CLASSIFICATION	2.1916216379730586E-4	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9997748289029725	WITHOUT_CLASSIFICATION	2.251710970274711E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9998291622244778	WITHOUT_CLASSIFICATION	1.708377755221718E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.999855259620492	WITHOUT_CLASSIFICATION	1.4474037950801304E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9998399100969224	WITHOUT_CLASSIFICATION	1.600899030776401E-4	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9995814956028678	WITHOUT_CLASSIFICATION	4.1850439713222255E-4	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999908574675386	WITHOUT_CLASSIFICATION	9.142532461395037E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9997932081888744	WITHOUT_CLASSIFICATION	2.0679181112557754E-4	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9957452387457145	WITHOUT_CLASSIFICATION	0.004254761254285409	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9966903059103474	WITHOUT_CLASSIFICATION	0.0033096940896526965	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9998019336354966	WITHOUT_CLASSIFICATION	1.9806636450347878E-4	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9991365108617639	WITHOUT_CLASSIFICATION	8.634891382360331E-4	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9995320877628882	WITHOUT_CLASSIFICATION	4.6791223711194365E-4	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9995362263581835	WITHOUT_CLASSIFICATION	4.6377364181641935E-4	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9996551070166632	WITHOUT_CLASSIFICATION	3.448929833368342E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9998429461841334	WITHOUT_CLASSIFICATION	1.570538158664874E-4	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9997031672269474	WITHOUT_CLASSIFICATION	2.968327730526251E-4	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.999940746298716	WITHOUT_CLASSIFICATION	5.925370128402179E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.999789294439693	WITHOUT_CLASSIFICATION	2.1070556030698036E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999688087920756	WITHOUT_CLASSIFICATION	3.1191207924362616E-5	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999622208379674	WITHOUT_CLASSIFICATION	3.777916203267527E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999887012147997	WITHOUT_CLASSIFICATION	1.1298785200369128E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9998214379772477	WITHOUT_CLASSIFICATION	1.7856202275232298E-4	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9867137258985558	WITHOUT_CLASSIFICATION	0.013286274101444158	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999637575160283	WITHOUT_CLASSIFICATION	3.6242483971782006E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9998177871668094	WITHOUT_CLASSIFICATION	1.8221283319061842E-4	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9997377028378863	WITHOUT_CLASSIFICATION	2.622971621137497E-4	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9998348051716262	WITHOUT_CLASSIFICATION	1.6519482837382151E-4	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9997256509753158	WITHOUT_CLASSIFICATION	2.7434902468411875E-4	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9977451130394809	WITHOUT_CLASSIFICATION	0.0022548869605190985	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.999428053179431	WITHOUT_CLASSIFICATION	5.719468205691157E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9998375827029102	WITHOUT_CLASSIFICATION	1.624172970897345E-4	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997957747981638	WITHOUT_CLASSIFICATION	2.0422520183617854E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9977333110369188	WITHOUT_CLASSIFICATION	0.0022666889630813384	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9998765093562574	WITHOUT_CLASSIFICATION	1.2349064374262856E-4	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9997533347410209	WITHOUT_CLASSIFICATION	2.4666525897918724E-4	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9998751877204602	WITHOUT_CLASSIFICATION	1.248122795397391E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9983762736407688	WITHOUT_CLASSIFICATION	0.0016237263592312925	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9992696842001908	WITHOUT_CLASSIFICATION	7.303157998091279E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9974538013603691	WITHOUT_CLASSIFICATION	0.002546198639630899	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9995806508785865	WITHOUT_CLASSIFICATION	4.1934912141348166E-4	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.999904646207538	WITHOUT_CLASSIFICATION	9.535379246193102E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9997326432256732	WITHOUT_CLASSIFICATION	2.6735677432685167E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.999984824833129	WITHOUT_CLASSIFICATION	1.517516687098898E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9998916340944894	WITHOUT_CLASSIFICATION	1.0836590551049417E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9998876468941289	WITHOUT_CLASSIFICATION	1.1235310587119029E-4	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997957747981638	WITHOUT_CLASSIFICATION	2.0422520183617854E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9988442753821389	WITHOUT_CLASSIFICATION	0.001155724617861036	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999550304659539	WITHOUT_CLASSIFICATION	4.4969534045958154E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999550304659539	WITHOUT_CLASSIFICATION	4.4969534045958154E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9997538354548331	WITHOUT_CLASSIFICATION	2.4616454516696235E-4	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9997538354548331	WITHOUT_CLASSIFICATION	2.4616454516696235E-4	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.999854682112223	WITHOUT_CLASSIFICATION	1.4531788777701372E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9996428781621434	WITHOUT_CLASSIFICATION	3.571218378566229E-4	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9995773051525751	WITHOUT_CLASSIFICATION	4.2269484742485554E-4	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9946847331337771	WITHOUT_CLASSIFICATION	0.00531526686622288	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999343718906409	WITHOUT_CLASSIFICATION	6.562810935903317E-5	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9997681040494947	WITHOUT_CLASSIFICATION	2.3189595050519945E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9987333640640328	WITHOUT_CLASSIFICATION	0.0012666359359670958	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999694748408912	WITHOUT_CLASSIFICATION	3.052515910887905E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9997488913043011	WITHOUT_CLASSIFICATION	2.511086956989015E-4	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9996433562702994	WITHOUT_CLASSIFICATION	3.5664372970057445E-4	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9994053155686891	WITHOUT_CLASSIFICATION	5.946844313108221E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9991096313242479	WITHOUT_CLASSIFICATION	8.903686757520694E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9998026055735586	WITHOUT_CLASSIFICATION	1.9739442644143117E-4	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9995741901860838	WITHOUT_CLASSIFICATION	4.258098139160904E-4	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9998100028747327	WITHOUT_CLASSIFICATION	1.8999712526733152E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9996308664857567	WITHOUT_CLASSIFICATION	3.691335142433392E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9992991657050533	WITHOUT_CLASSIFICATION	7.008342949467372E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998901795006294	WITHOUT_CLASSIFICATION	1.0982049937057548E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998901795006294	WITHOUT_CLASSIFICATION	1.0982049937057548E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9993067440006084	WITHOUT_CLASSIFICATION	6.932559993917268E-4	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.998306619141612	WITHOUT_CLASSIFICATION	0.0016933808583880264	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9998048942899231	WITHOUT_CLASSIFICATION	1.9510571007681508E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998380543864018	WITHOUT_CLASSIFICATION	1.6194561359809023E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998839119528997	WITHOUT_CLASSIFICATION	1.1608804710024961E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998839119528997	WITHOUT_CLASSIFICATION	1.1608804710024961E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9984900250357527	WITHOUT_CLASSIFICATION	0.0015099749642472752	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9976903741375523	WITHOUT_CLASSIFICATION	0.0023096258624476147	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9998203751644714	WITHOUT_CLASSIFICATION	1.796248355285034E-4	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9998201895983104	WITHOUT_CLASSIFICATION	1.79810401689594E-4	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9998233278820621	WITHOUT_CLASSIFICATION	1.7667211793796983E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998380543864018	WITHOUT_CLASSIFICATION	1.6194561359809023E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998839119528997	WITHOUT_CLASSIFICATION	1.1608804710024961E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998839119528997	WITHOUT_CLASSIFICATION	1.1608804710024961E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9984900250357527	WITHOUT_CLASSIFICATION	0.0015099749642472752	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9997760825164292	WITHOUT_CLASSIFICATION	2.239174835708264E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9996220320182231	WITHOUT_CLASSIFICATION	3.779679817768897E-4	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9996701574547421	WITHOUT_CLASSIFICATION	3.2984254525792323E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999892427312661	WITHOUT_CLASSIFICATION	1.0757268733888183E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999439734976828	WITHOUT_CLASSIFICATION	5.602650231719284E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9994159151689288	WITHOUT_CLASSIFICATION	5.84084831071197E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9998905249402522	WITHOUT_CLASSIFICATION	1.0947505974778725E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997423620679247	WITHOUT_CLASSIFICATION	2.576379320753548E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997423620679247	WITHOUT_CLASSIFICATION	2.576379320753548E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.999973073860112	WITHOUT_CLASSIFICATION	2.6926139888000214E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999258879373506	WITHOUT_CLASSIFICATION	7.41120626494377E-5	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999548313487892	WITHOUT_CLASSIFICATION	4.516865121078074E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9995098336362125	WITHOUT_CLASSIFICATION	4.901663637874846E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999476272257053	WITHOUT_CLASSIFICATION	5.237277429475482E-5	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9990251810779927	WITHOUT_CLASSIFICATION	9.748189220072746E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9996155320172241	WITHOUT_CLASSIFICATION	3.8446798277600976E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999112163158124	WITHOUT_CLASSIFICATION	8.878368418768275E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.995267616493927	WITHOUT_CLASSIFICATION	0.004732383506073003	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9994272233937367	WITHOUT_CLASSIFICATION	5.727766062632852E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9998208484840931	WITHOUT_CLASSIFICATION	1.791515159067575E-4	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999669781448066	WITHOUT_CLASSIFICATION	3.302185519331838E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.99988672225695	WITHOUT_CLASSIFICATION	1.1327774304997209E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9995223930105176	WITHOUT_CLASSIFICATION	4.776069894824822E-4	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999450685510377	WITHOUT_CLASSIFICATION	5.493144896236519E-5	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999770477156965	WITHOUT_CLASSIFICATION	2.2952284303483113E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9937942751117739	WITHOUT_CLASSIFICATION	0.006205724888226062	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9994841576078528	WITHOUT_CLASSIFICATION	5.15842392147226E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9997657124371205	WITHOUT_CLASSIFICATION	2.3428756287947807E-4	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9995216660845909	WITHOUT_CLASSIFICATION	4.7833391540915625E-4	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.99983808744959	WITHOUT_CLASSIFICATION	1.6191255040999336E-4	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9994115748469269	WITHOUT_CLASSIFICATION	5.884251530730263E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9995805868379034	WITHOUT_CLASSIFICATION	4.1941316209656945E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999206988748258	WITHOUT_CLASSIFICATION	7.93011251741464E-5	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.999846556457549	WITHOUT_CLASSIFICATION	1.534435424510057E-4	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9997799528285329	WITHOUT_CLASSIFICATION	2.2004717146712762E-4	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9875274503615445	WITHOUT_CLASSIFICATION	0.012472549638455399	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9997741022493929	WITHOUT_CLASSIFICATION	2.2589775060716163E-4	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9998337060803957	WITHOUT_CLASSIFICATION	1.6629391960439115E-4	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9995024395255849	WITHOUT_CLASSIFICATION	4.975604744149652E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9998820490337089	WITHOUT_CLASSIFICATION	1.1795096629106749E-4	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9998959679387152	WITHOUT_CLASSIFICATION	1.0403206128488993E-4	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9998959679387152	WITHOUT_CLASSIFICATION	1.0403206128488993E-4	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9996554955634848	WITHOUT_CLASSIFICATION	3.4450443651524185E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.999811961255402	WITHOUT_CLASSIFICATION	1.8803874459806465E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999805113667383	WITHOUT_CLASSIFICATION	1.9488633261707819E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994813147694784	WITHOUT_CLASSIFICATION	5.186852305215718E-4	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9997739576859802	WITHOUT_CLASSIFICATION	2.2604231401969247E-4	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9997738822077761	WITHOUT_CLASSIFICATION	2.2611779222389157E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9991058825591065	WITHOUT_CLASSIFICATION	8.941174408935221E-4	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999798325144805	WITHOUT_CLASSIFICATION	2.0167485519431624E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9892958716132304	WITHOUT_CLASSIFICATION	0.010704128386769655	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9998503999504407	WITHOUT_CLASSIFICATION	1.4960004955942368E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9997428694875312	WITHOUT_CLASSIFICATION	2.571305124687157E-4	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9997140377182778	WITHOUT_CLASSIFICATION	2.8596228172215874E-4	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9998492758941453	WITHOUT_CLASSIFICATION	1.507241058547821E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9997078528955629	WITHOUT_CLASSIFICATION	2.921471044371524E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999982671781336	WITHOUT_CLASSIFICATION	1.732821866513007E-6	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9997293008081468	WITHOUT_CLASSIFICATION	2.706991918531709E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9997293008081468	WITHOUT_CLASSIFICATION	2.706991918531709E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9997293008081468	WITHOUT_CLASSIFICATION	2.706991918531709E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9997293008081468	WITHOUT_CLASSIFICATION	2.706991918531709E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9993312506346225	WITHOUT_CLASSIFICATION	6.687493653775655E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9996271660580848	WITHOUT_CLASSIFICATION	3.728339419151896E-4	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.999481703566434	WITHOUT_CLASSIFICATION	5.182964335660492E-4	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9992884636451383	WITHOUT_CLASSIFICATION	7.115363548616576E-4	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9996379500480441	WITHOUT_CLASSIFICATION	3.6204995195589744E-4	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9997880237246486	WITHOUT_CLASSIFICATION	2.1197627535135023E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9998593317253182	WITHOUT_CLASSIFICATION	1.406682746818121E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.999893590175561	WITHOUT_CLASSIFICATION	1.0640982443892009E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.999481703566434	WITHOUT_CLASSIFICATION	5.182964335660492E-4	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999594503124563	WITHOUT_CLASSIFICATION	4.0549687543850284E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9998247785334246	WITHOUT_CLASSIFICATION	1.7522146657540815E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9997016065129367	WITHOUT_CLASSIFICATION	2.9839348706328097E-4	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9996173340343729	WITHOUT_CLASSIFICATION	3.826659656271127E-4	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9998160559565494	WITHOUT_CLASSIFICATION	1.8394404345049915E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.998192584708016	WITHOUT_CLASSIFICATION	0.0018074152919839385	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9998993367654271	WITHOUT_CLASSIFICATION	1.006632345728529E-4	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9991362340872717	WITHOUT_CLASSIFICATION	8.637659127282693E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9997573160098782	WITHOUT_CLASSIFICATION	2.4268399012189633E-4	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9997573160098782	WITHOUT_CLASSIFICATION	2.4268399012189633E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9953092472693351	WITHOUT_CLASSIFICATION	0.00469075273066492	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.998862409777912	WITHOUT_CLASSIFICATION	0.0011375902220880057	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9997365620025456	WITHOUT_CLASSIFICATION	2.634379974544733E-4	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.999861217583099	WITHOUT_CLASSIFICATION	1.3878241690103876E-4	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999409093615709	WITHOUT_CLASSIFICATION	5.909063842920701E-5	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9997910575944392	WITHOUT_CLASSIFICATION	2.0894240556070505E-4	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9992570422102084	WITHOUT_CLASSIFICATION	7.429577897915999E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9976464127809694	WITHOUT_CLASSIFICATION	0.0023535872190305904	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9989856626972285	WITHOUT_CLASSIFICATION	0.0010143373027714198	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9894639521321965	WITHOUT_CLASSIFICATION	0.010536047867803417	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9985656180519897	WITHOUT_CLASSIFICATION	0.0014343819480102302	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9994861841497097	WITHOUT_CLASSIFICATION	5.13815850290326E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9884210812089633	WITHOUT_CLASSIFICATION	0.01157891879103681	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9993736923494397	WITHOUT_CLASSIFICATION	6.263076505602957E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9992711079068118	WITHOUT_CLASSIFICATION	7.288920931881206E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9988336280475606	WITHOUT_CLASSIFICATION	0.0011663719524394346	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9933534512099181	WITHOUT_CLASSIFICATION	0.006646548790081894	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999038973760873	WITHOUT_CLASSIFICATION	9.610262391268293E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9997554994593207	WITHOUT_CLASSIFICATION	2.4450054067930627E-4	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9998541758594099	WITHOUT_CLASSIFICATION	1.4582414059006215E-4	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.999362573606894	WITHOUT_CLASSIFICATION	6.374263931059604E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9997910575944392	WITHOUT_CLASSIFICATION	2.0894240556070505E-4	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9993542330506616	WITHOUT_CLASSIFICATION	6.457669493383442E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9993542330506616	WITHOUT_CLASSIFICATION	6.457669493383442E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9998831682302473	WITHOUT_CLASSIFICATION	1.1683176975263523E-4	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.999826507330942	WITHOUT_CLASSIFICATION	1.734926690580562E-4	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.999826507330942	WITHOUT_CLASSIFICATION	1.734926690580562E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9995906022733667	WITHOUT_CLASSIFICATION	4.093977266333663E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9995906022733667	WITHOUT_CLASSIFICATION	4.093977266333663E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.998521986042372	WITHOUT_CLASSIFICATION	0.0014780139576280758	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9996950614017982	WITHOUT_CLASSIFICATION	3.0493859820183153E-4	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9987065334015618	WITHOUT_CLASSIFICATION	0.001293466598438123	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997088004341659	WITHOUT_CLASSIFICATION	2.911995658341097E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9997568862266354	WITHOUT_CLASSIFICATION	2.4311377336471966E-4	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9995954301500869	WITHOUT_CLASSIFICATION	4.0456984991311934E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9996405516212926	WITHOUT_CLASSIFICATION	3.594483787072974E-4	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9989332697008775	WITHOUT_CLASSIFICATION	0.0010667302991225031	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9997339081192674	WITHOUT_CLASSIFICATION	2.660918807326168E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999660941066821	WITHOUT_CLASSIFICATION	3.390589331791037E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9996405521251455	WITHOUT_CLASSIFICATION	3.594478748545109E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9998639897014188	WITHOUT_CLASSIFICATION	1.3601029858125097E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9998639897014188	WITHOUT_CLASSIFICATION	1.3601029858125097E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9998516871092744	WITHOUT_CLASSIFICATION	1.4831289072564458E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.999872608537272	WITHOUT_CLASSIFICATION	1.2739146272795526E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999031066315486	WITHOUT_CLASSIFICATION	9.689336845145406E-5	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999751331560565	WITHOUT_CLASSIFICATION	2.4866843943557496E-5	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9998388432345203	WITHOUT_CLASSIFICATION	1.6115676547960353E-4	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999358855781952	WITHOUT_CLASSIFICATION	6.411442180473414E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999645456932157	WITHOUT_CLASSIFICATION	3.5454306784353356E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999042634711794	WITHOUT_CLASSIFICATION	9.573652882053935E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9996599941105863	WITHOUT_CLASSIFICATION	3.4000588941375347E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9998734622892695	WITHOUT_CLASSIFICATION	1.265377107303928E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9998161596822229	WITHOUT_CLASSIFICATION	1.838403177770519E-4	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9998270666616257	WITHOUT_CLASSIFICATION	1.7293333837439657E-4	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9998825402946413	WITHOUT_CLASSIFICATION	1.1745970535872556E-4	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9998001954627481	WITHOUT_CLASSIFICATION	1.9980453725192254E-4	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9996251795898915	WITHOUT_CLASSIFICATION	3.748204101085639E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9998589293759972	WITHOUT_CLASSIFICATION	1.4107062400280063E-4	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9995624775365552	WITHOUT_CLASSIFICATION	4.375224634446497E-4	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9995984732116004	WITHOUT_CLASSIFICATION	4.015267883994736E-4	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9992985777254045	WITHOUT_CLASSIFICATION	7.014222745955373E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9996300356419574	WITHOUT_CLASSIFICATION	3.699643580425103E-4	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.999285760316386	WITHOUT_CLASSIFICATION	7.142396836139337E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999840101354864	WITHOUT_CLASSIFICATION	1.5989864513595123E-4	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9997414319157849	WITHOUT_CLASSIFICATION	2.585680842150651E-4	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.999562517826759	WITHOUT_CLASSIFICATION	4.3748217324103566E-4	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.999562517826759	WITHOUT_CLASSIFICATION	4.3748217324103566E-4	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9995604853414138	WITHOUT_CLASSIFICATION	4.3951465858617605E-4	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9998005517593402	WITHOUT_CLASSIFICATION	1.9944824065975072E-4	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999315734442232	WITHOUT_CLASSIFICATION	6.842655577680587E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.998739913805688	WITHOUT_CLASSIFICATION	0.001260086194311932	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9997421489635936	WITHOUT_CLASSIFICATION	2.578510364063782E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9994537051511315	WITHOUT_CLASSIFICATION	5.462948488684216E-4	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9992546196309026	WITHOUT_CLASSIFICATION	7.453803690974145E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9998426403224989	WITHOUT_CLASSIFICATION	1.5735967750103044E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9995832286682629	WITHOUT_CLASSIFICATION	4.167713317371012E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9996347419904752	WITHOUT_CLASSIFICATION	3.6525800952482904E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9996926311487772	WITHOUT_CLASSIFICATION	3.0736885122281503E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995828106230054	WITHOUT_CLASSIFICATION	4.171893769946973E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9998344589214408	WITHOUT_CLASSIFICATION	1.655410785590953E-4	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9997239812683915	WITHOUT_CLASSIFICATION	2.760187316085137E-4	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9997504540467473	WITHOUT_CLASSIFICATION	2.4954595325266186E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9997112174038439	WITHOUT_CLASSIFICATION	2.88782596156087E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999883098954561	WITHOUT_CLASSIFICATION	1.1690104543906207E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998780646989907	WITHOUT_CLASSIFICATION	1.2193530100925493E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999115450111202	WITHOUT_CLASSIFICATION	8.845498887980365E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9998810115649381	WITHOUT_CLASSIFICATION	1.1898843506183528E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999021216565447	WITHOUT_CLASSIFICATION	9.787834345528913E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9991623832597648	WITHOUT_CLASSIFICATION	8.376167402351448E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9997112174038439	WITHOUT_CLASSIFICATION	2.88782596156087E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998780646989907	WITHOUT_CLASSIFICATION	1.2193530100925493E-4	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999831372092852	WITHOUT_CLASSIFICATION	1.6862790714712113E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9993037281755014	WITHOUT_CLASSIFICATION	6.962718244986901E-4	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999394563868232	WITHOUT_CLASSIFICATION	6.0543613176838175E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9993232768607156	WITHOUT_CLASSIFICATION	6.76723139284369E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995950547321221	WITHOUT_CLASSIFICATION	4.049452678779359E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9997556174703305	WITHOUT_CLASSIFICATION	2.443825296695553E-4	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9997398117824279	WITHOUT_CLASSIFICATION	2.601882175721212E-4	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9997682578131768	WITHOUT_CLASSIFICATION	2.3174218682320708E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998871874949572	WITHOUT_CLASSIFICATION	1.1281250504276068E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9998871874949572	WITHOUT_CLASSIFICATION	1.1281250504276068E-4	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9993482660806798	WITHOUT_CLASSIFICATION	6.517339193201535E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9996972065820195	WITHOUT_CLASSIFICATION	3.0279341798046945E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.999873928995903	WITHOUT_CLASSIFICATION	1.2607100409703554E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9997104933396415	WITHOUT_CLASSIFICATION	2.8950666035857417E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9997104933396415	WITHOUT_CLASSIFICATION	2.8950666035857417E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9997688781102382	WITHOUT_CLASSIFICATION	2.3112188976195174E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9998774714479004	WITHOUT_CLASSIFICATION	1.2252855209961253E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9997750628432571	WITHOUT_CLASSIFICATION	2.2493715674289455E-4	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9997041333517799	WITHOUT_CLASSIFICATION	2.958666482201399E-4	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.999403278501206	WITHOUT_CLASSIFICATION	5.967214987940837E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9998568298647468	WITHOUT_CLASSIFICATION	1.4317013525314332E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9998704551928073	WITHOUT_CLASSIFICATION	1.2954480719279827E-4	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9990671653748253	WITHOUT_CLASSIFICATION	9.328346251747014E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9996000114869851	WITHOUT_CLASSIFICATION	3.9998851301493304E-4	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999303482831382	WITHOUT_CLASSIFICATION	6.965171686181791E-5	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999003720915836	WITHOUT_CLASSIFICATION	9.962790841650857E-5	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9993573396428458	WITHOUT_CLASSIFICATION	6.42660357154177E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9997750628432571	WITHOUT_CLASSIFICATION	2.2493715674289455E-4	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9997041333517799	WITHOUT_CLASSIFICATION	2.958666482201399E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997423620679247	WITHOUT_CLASSIFICATION	2.576379320753548E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9997075895396003	WITHOUT_CLASSIFICATION	2.924104603996692E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9997869043778496	WITHOUT_CLASSIFICATION	2.1309562215036246E-4	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9985859051922874	WITHOUT_CLASSIFICATION	0.0014140948077126401	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9985859051922874	WITHOUT_CLASSIFICATION	0.0014140948077126401	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9990193548881723	WITHOUT_CLASSIFICATION	9.806451118277272E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9990193548881723	WITHOUT_CLASSIFICATION	9.806451118277272E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9997120127313197	WITHOUT_CLASSIFICATION	2.879872686803497E-4	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999449196398521	WITHOUT_CLASSIFICATION	5.508036014783762E-5	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9998499934653469	WITHOUT_CLASSIFICATION	1.500065346531265E-4	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9996940053214707	WITHOUT_CLASSIFICATION	3.0599467852936347E-4	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9997303215818818	WITHOUT_CLASSIFICATION	2.6967841811820047E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9997834974854986	WITHOUT_CLASSIFICATION	2.1650251450145176E-4	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9997433008604043	WITHOUT_CLASSIFICATION	2.566991395956359E-4	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995501800691214	WITHOUT_CLASSIFICATION	4.498199308785025E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9997272040152315	WITHOUT_CLASSIFICATION	2.7279598476849E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9997272040152315	WITHOUT_CLASSIFICATION	2.7279598476849E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9986652493341505	WITHOUT_CLASSIFICATION	0.001334750665849512	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9986652493341505	WITHOUT_CLASSIFICATION	0.001334750665849512	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9986652493341505	WITHOUT_CLASSIFICATION	0.001334750665849512	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996370352117658	WITHOUT_CLASSIFICATION	3.629647882340848E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996370352117658	WITHOUT_CLASSIFICATION	3.629647882340848E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996370352117658	WITHOUT_CLASSIFICATION	3.629647882340848E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999856893182672	WITHOUT_CLASSIFICATION	1.4310681732795477E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999856893182672	WITHOUT_CLASSIFICATION	1.4310681732795477E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9983738669078275	WITHOUT_CLASSIFICATION	0.0016261330921724508	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9983738669078275	WITHOUT_CLASSIFICATION	0.0016261330921724508	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999042470004962	WITHOUT_CLASSIFICATION	9.575299950380391E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999042470004962	WITHOUT_CLASSIFICATION	9.575299950380391E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.99986351998329	WITHOUT_CLASSIFICATION	1.364800167100638E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.99986351998329	WITHOUT_CLASSIFICATION	1.364800167100638E-4	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9998331373832998	WITHOUT_CLASSIFICATION	1.6686261670019638E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9998331373832998	WITHOUT_CLASSIFICATION	1.6686261670019638E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999856893182672	WITHOUT_CLASSIFICATION	1.4310681732795477E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9983738669078275	WITHOUT_CLASSIFICATION	0.0016261330921724508	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.99986351998329	WITHOUT_CLASSIFICATION	1.364800167100638E-4	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9998331373832998	WITHOUT_CLASSIFICATION	1.6686261670019638E-4	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9997204616835755	WITHOUT_CLASSIFICATION	2.7953831642442255E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9897515752589383	WITHOUT_CLASSIFICATION	0.01024842474106163	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9997118747205717	WITHOUT_CLASSIFICATION	2.8812527942833325E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9996828499991873	WITHOUT_CLASSIFICATION	3.1715000081267955E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9997892870930714	WITHOUT_CLASSIFICATION	2.1071290692866194E-4	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9996946639679279	WITHOUT_CLASSIFICATION	3.0533603207208394E-4	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.999701390809855	WITHOUT_CLASSIFICATION	2.9860919014497076E-4	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.997512173651555	WITHOUT_CLASSIFICATION	0.002487826348445039	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9997074466309702	WITHOUT_CLASSIFICATION	2.925533690297702E-4	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.99939909473256	WITHOUT_CLASSIFICATION	6.009052674400548E-4	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9994479565718597	WITHOUT_CLASSIFICATION	5.52043428140305E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9992806970768275	WITHOUT_CLASSIFICATION	7.193029231725085E-4	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9992908773980175	WITHOUT_CLASSIFICATION	7.091226019826401E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9992908773980175	WITHOUT_CLASSIFICATION	7.091226019826401E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9994286050883087	WITHOUT_CLASSIFICATION	5.713949116912576E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9998435937309814	WITHOUT_CLASSIFICATION	1.5640626901861543E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9994400300504287	WITHOUT_CLASSIFICATION	5.599699495712985E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9992660236612327	WITHOUT_CLASSIFICATION	7.339763387671552E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9992908773980175	WITHOUT_CLASSIFICATION	7.091226019826401E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9983831028842488	WITHOUT_CLASSIFICATION	0.0016168971157511684	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9983831028842488	WITHOUT_CLASSIFICATION	0.0016168971157511684	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9994286050883087	WITHOUT_CLASSIFICATION	5.713949116912576E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9993717510706834	WITHOUT_CLASSIFICATION	6.282489293165501E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9990103035658825	WITHOUT_CLASSIFICATION	9.896964341175533E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9995229495391886	WITHOUT_CLASSIFICATION	4.7705046081140544E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9995731929633606	WITHOUT_CLASSIFICATION	4.268070366394217E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9997114095904566	WITHOUT_CLASSIFICATION	2.885904095434667E-4	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9992509135148677	WITHOUT_CLASSIFICATION	7.49086485132316E-4	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9997764530336308	WITHOUT_CLASSIFICATION	2.235469663692073E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9997764530336308	WITHOUT_CLASSIFICATION	2.235469663692073E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9992404172876778	WITHOUT_CLASSIFICATION	7.595827123223003E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9997113492352865	WITHOUT_CLASSIFICATION	2.8865076471346524E-4	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9992404172876778	WITHOUT_CLASSIFICATION	7.595827123222999E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9997393046584039	WITHOUT_CLASSIFICATION	2.60695341596149E-4	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9998386576307627	WITHOUT_CLASSIFICATION	1.6134236923719746E-4	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9998753555308956	WITHOUT_CLASSIFICATION	1.246444691043126E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9997514588790343	WITHOUT_CLASSIFICATION	2.485411209657899E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9995061881372587	WITHOUT_CLASSIFICATION	4.938118627413206E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9996787486935537	WITHOUT_CLASSIFICATION	3.2125130644632897E-4	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9995960006138777	WITHOUT_CLASSIFICATION	4.0399938612233917E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9997668187443508	WITHOUT_CLASSIFICATION	2.331812556492149E-4	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.999768083261995	WITHOUT_CLASSIFICATION	2.3191673800508516E-4	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9995533338745933	WITHOUT_CLASSIFICATION	4.4666612540674507E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9997978447776904	WITHOUT_CLASSIFICATION	2.021552223096556E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9992220618706423	WITHOUT_CLASSIFICATION	7.779381293575768E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9997340982366426	WITHOUT_CLASSIFICATION	2.6590176335738395E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9998446441669073	WITHOUT_CLASSIFICATION	1.553558330927085E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994594511316554	WITHOUT_CLASSIFICATION	5.405488683445971E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994594511316554	WITHOUT_CLASSIFICATION	5.405488683445971E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9993937905403142	WITHOUT_CLASSIFICATION	6.062094596859251E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9991646309409447	WITHOUT_CLASSIFICATION	8.353690590552355E-4	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9987841835063995	WITHOUT_CLASSIFICATION	0.0012158164936004858	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9987841835063995	WITHOUT_CLASSIFICATION	0.0012158164936004858	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9998046094680975	WITHOUT_CLASSIFICATION	1.9539053190248913E-4	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9997709363260698	WITHOUT_CLASSIFICATION	2.2906367393007396E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9997764530336308	WITHOUT_CLASSIFICATION	2.235469663692073E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9997764530336308	WITHOUT_CLASSIFICATION	2.235469663692073E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9997399541732205	WITHOUT_CLASSIFICATION	2.6004582677946524E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9998025991006166	WITHOUT_CLASSIFICATION	1.9740089938338596E-4	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9997778971045732	WITHOUT_CLASSIFICATION	2.2210289542684978E-4	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9998169494967898	WITHOUT_CLASSIFICATION	1.8305050321017316E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.997512173651555	WITHOUT_CLASSIFICATION	0.002487826348445039	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9993296049032819	WITHOUT_CLASSIFICATION	6.703950967180517E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9994864276523264	WITHOUT_CLASSIFICATION	5.135723476735371E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.999864513814528	WITHOUT_CLASSIFICATION	1.3548618547195933E-4	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9996280467711846	WITHOUT_CLASSIFICATION	3.719532288153804E-4	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9994832801021981	WITHOUT_CLASSIFICATION	5.167198978019171E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999046542200669	WITHOUT_CLASSIFICATION	9.534577993308403E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.999797932949379	WITHOUT_CLASSIFICATION	2.020670506209284E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9997824228620456	WITHOUT_CLASSIFICATION	2.1757713795449778E-4	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9998775074164756	WITHOUT_CLASSIFICATION	1.2249258352439347E-4	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9998194213265474	WITHOUT_CLASSIFICATION	1.8057867345262432E-4	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9995142755936681	WITHOUT_CLASSIFICATION	4.8572440633182234E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9978328227101971	WITHOUT_CLASSIFICATION	0.002167177289802861	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9996860029909109	WITHOUT_CLASSIFICATION	3.1399700908907313E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9997029508093515	WITHOUT_CLASSIFICATION	2.970491906485209E-4	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998725106648191	WITHOUT_CLASSIFICATION	1.274893351808454E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9998263663922764	WITHOUT_CLASSIFICATION	1.7363360772365143E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9998263663922764	WITHOUT_CLASSIFICATION	1.7363360772365143E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9998030557760486	WITHOUT_CLASSIFICATION	1.969442239514865E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9982277315892799	WITHOUT_CLASSIFICATION	0.0017722684107201207	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9996147098020554	WITHOUT_CLASSIFICATION	3.8529019794460623E-4	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9958979256289858	WITHOUT_CLASSIFICATION	0.004102074371014155	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9992641699580511	WITHOUT_CLASSIFICATION	7.358300419489886E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9992442480848495	WITHOUT_CLASSIFICATION	7.557519151505658E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9996807527566978	WITHOUT_CLASSIFICATION	3.192472433022919E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9994917911002675	WITHOUT_CLASSIFICATION	5.08208899732451E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9998142706992725	WITHOUT_CLASSIFICATION	1.8572930072749576E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9995670806576785	WITHOUT_CLASSIFICATION	4.3291934232147773E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9945401961320337	WITHOUT_CLASSIFICATION	0.005459803867966229	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9996655926234898	WITHOUT_CLASSIFICATION	3.3440737651019504E-4	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9993908642668814	WITHOUT_CLASSIFICATION	6.091357331185254E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9994653834876623	WITHOUT_CLASSIFICATION	5.346165123377207E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9998037695828592	WITHOUT_CLASSIFICATION	1.962304171406849E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9996476727954392	WITHOUT_CLASSIFICATION	3.523272045608335E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9995740966030009	WITHOUT_CLASSIFICATION	4.259033969991802E-4	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9997266804931146	WITHOUT_CLASSIFICATION	2.733195068853701E-4	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9997266804931146	WITHOUT_CLASSIFICATION	2.733195068853701E-4	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9996023668288146	WITHOUT_CLASSIFICATION	3.976331711853798E-4	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9995487555886595	WITHOUT_CLASSIFICATION	4.512444113404612E-4	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9996061757851302	WITHOUT_CLASSIFICATION	3.938242148697544E-4	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9994707593634853	WITHOUT_CLASSIFICATION	5.292406365147674E-4	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9994864970792813	WITHOUT_CLASSIFICATION	5.135029207187957E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9996608288992844	WITHOUT_CLASSIFICATION	3.3917110071556776E-4	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9998226459067402	WITHOUT_CLASSIFICATION	1.7735409325986165E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9996533346654214	WITHOUT_CLASSIFICATION	3.466653345785486E-4	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.999300400179922	WITHOUT_CLASSIFICATION	6.995998200778852E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9996014143000856	WITHOUT_CLASSIFICATION	3.985856999143656E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9984456448989545	WITHOUT_CLASSIFICATION	0.0015543551010454627	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.999964045803333	WITHOUT_CLASSIFICATION	3.595419666697635E-5	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999138990833727	WITHOUT_CLASSIFICATION	8.610091662737817E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9997274533151655	WITHOUT_CLASSIFICATION	2.725466848344628E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9997674653862282	WITHOUT_CLASSIFICATION	2.325346137717832E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9998781261510439	WITHOUT_CLASSIFICATION	1.218738489561266E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9998710878974814	WITHOUT_CLASSIFICATION	1.2891210251859866E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9998225586316071	WITHOUT_CLASSIFICATION	1.7744136839282994E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9997516274876715	WITHOUT_CLASSIFICATION	2.4837251232841695E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999337748583366	WITHOUT_CLASSIFICATION	6.622514166339342E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9997240998674395	WITHOUT_CLASSIFICATION	2.759001325605614E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9998647232035661	WITHOUT_CLASSIFICATION	1.352767964338183E-4	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9986731338045024	WITHOUT_CLASSIFICATION	0.0013268661954976735	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9998795288875497	WITHOUT_CLASSIFICATION	1.204711124502363E-4	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998524382111644	WITHOUT_CLASSIFICATION	1.4756178883552275E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999458116203488	WITHOUT_CLASSIFICATION	5.418837965120884E-4	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9998055535346585	WITHOUT_CLASSIFICATION	1.9444646534145501E-4	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9995815559404755	WITHOUT_CLASSIFICATION	4.184440595244808E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9989104263728947	WITHOUT_CLASSIFICATION	0.0010895736271053348	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9993875814323723	WITHOUT_CLASSIFICATION	6.124185676276735E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9996511846681494	WITHOUT_CLASSIFICATION	3.4881533185063057E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999266422409513	WITHOUT_CLASSIFICATION	7.335775904862984E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9996377555163676	WITHOUT_CLASSIFICATION	3.622444836323959E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9995587092287364	WITHOUT_CLASSIFICATION	4.4129077126365765E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999252923211032	WITHOUT_CLASSIFICATION	7.470767889692598E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9995587092287364	WITHOUT_CLASSIFICATION	4.4129077126365765E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9993770820605261	WITHOUT_CLASSIFICATION	6.229179394738167E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9990144952460273	WITHOUT_CLASSIFICATION	9.855047539728096E-4	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9998836033296459	WITHOUT_CLASSIFICATION	1.1639667035414493E-4	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9996359070108529	WITHOUT_CLASSIFICATION	3.6409298914710477E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9992609244975947	WITHOUT_CLASSIFICATION	7.390755024051945E-4	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9993920261657318	WITHOUT_CLASSIFICATION	6.079738342682143E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9983582949924948	WITHOUT_CLASSIFICATION	0.001641705007505228	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9997240468006756	WITHOUT_CLASSIFICATION	2.7595319932430387E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999234392993251	WITHOUT_CLASSIFICATION	7.65607006748664E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998623874293584	WITHOUT_CLASSIFICATION	1.3761257064160467E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.99891779325112	WITHOUT_CLASSIFICATION	0.001082206748879989	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9997892481888178	WITHOUT_CLASSIFICATION	2.107518111821741E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9995448581512976	WITHOUT_CLASSIFICATION	4.551418487024089E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9990783909982798	WITHOUT_CLASSIFICATION	9.216090017203194E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9995015023185397	WITHOUT_CLASSIFICATION	4.984976814602868E-4	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9989157327242575	WITHOUT_CLASSIFICATION	0.00108426727574256	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9984036694331188	WITHOUT_CLASSIFICATION	0.0015963305668811644	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9993932480929225	WITHOUT_CLASSIFICATION	6.067519070774936E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9998154844619439	WITHOUT_CLASSIFICATION	1.8451553805595724E-4	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.999168524660423	WITHOUT_CLASSIFICATION	8.3147533957694E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999364858741737	WITHOUT_CLASSIFICATION	6.351412582634026E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9995228194264749	WITHOUT_CLASSIFICATION	4.771805735251894E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999258629823007	WITHOUT_CLASSIFICATION	7.413701769921769E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9997325191418528	WITHOUT_CLASSIFICATION	2.67480858147201E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9997320918544383	WITHOUT_CLASSIFICATION	2.679081455616923E-4	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998462555552662	WITHOUT_CLASSIFICATION	1.537444447337813E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9998375180000492	WITHOUT_CLASSIFICATION	1.6248199995076777E-4	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9984524321427661	WITHOUT_CLASSIFICATION	0.0015475678572339068	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9987558728767447	WITHOUT_CLASSIFICATION	0.0012441271232553034	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9991682132458833	WITHOUT_CLASSIFICATION	8.31786754116678E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998765659120168	WITHOUT_CLASSIFICATION	1.234340879832484E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.99954281487564	WITHOUT_CLASSIFICATION	4.571851243600023E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.999761895688019	WITHOUT_CLASSIFICATION	2.3810431198090869E-4	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9997336318883755	WITHOUT_CLASSIFICATION	2.6636811162448657E-4	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9996546424683358	WITHOUT_CLASSIFICATION	3.453575316641544E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9994433936551725	WITHOUT_CLASSIFICATION	5.566063448275219E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9994636202704111	WITHOUT_CLASSIFICATION	5.363797295888749E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999396885614203	WITHOUT_CLASSIFICATION	6.031143857969283E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994665216973543	WITHOUT_CLASSIFICATION	5.334783026456244E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995085521203129	WITHOUT_CLASSIFICATION	4.91447879687187E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994519843926999	WITHOUT_CLASSIFICATION	5.480156073001232E-4	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999505899718243	WITHOUT_CLASSIFICATION	4.94100281757085E-4	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993927551064892	WITHOUT_CLASSIFICATION	6.072448935108203E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994353245022679	WITHOUT_CLASSIFICATION	5.646754977321491E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994906780662366	WITHOUT_CLASSIFICATION	5.093219337633415E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994831962133002	WITHOUT_CLASSIFICATION	5.168037866997927E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994499746554217	WITHOUT_CLASSIFICATION	5.500253445782302E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994500297616212	WITHOUT_CLASSIFICATION	5.499702383788105E-4	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994983493432491	WITHOUT_CLASSIFICATION	5.016506567509699E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994400933094792	WITHOUT_CLASSIFICATION	5.599066905207424E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995085521203129	WITHOUT_CLASSIFICATION	4.91447879687187E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995085521203129	WITHOUT_CLASSIFICATION	4.91447879687187E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997610769591827	WITHOUT_CLASSIFICATION	2.3892304081733897E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995643424162647	WITHOUT_CLASSIFICATION	4.3565758373521944E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995448291319924	WITHOUT_CLASSIFICATION	4.5517086800752216E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994892854471746	WITHOUT_CLASSIFICATION	5.10714552825295E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997379494305856	WITHOUT_CLASSIFICATION	2.620505694144679E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999492504294554	WITHOUT_CLASSIFICATION	5.074957054460379E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995722075409015	WITHOUT_CLASSIFICATION	4.2779245909849704E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999505899718243	WITHOUT_CLASSIFICATION	4.94100281757085E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994499746554217	WITHOUT_CLASSIFICATION	5.500253445782302E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994819912677007	WITHOUT_CLASSIFICATION	5.180087322993052E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994892854471746	WITHOUT_CLASSIFICATION	5.10714552825295E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995758376470752	WITHOUT_CLASSIFICATION	4.2416235292476397E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994845838272235	WITHOUT_CLASSIFICATION	5.154161727764778E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995643424162647	WITHOUT_CLASSIFICATION	4.3565758373521944E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995807787577873	WITHOUT_CLASSIFICATION	4.192212422126686E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995356186333405	WITHOUT_CLASSIFICATION	4.643813666596068E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999445608181703	WITHOUT_CLASSIFICATION	5.54391818296934E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999481527588136	WITHOUT_CLASSIFICATION	5.184724118638984E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994636202704111	WITHOUT_CLASSIFICATION	5.363797295888749E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994814181184044	WITHOUT_CLASSIFICATION	5.185818815955668E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999445608181703	WITHOUT_CLASSIFICATION	5.54391818296934E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994814181184044	WITHOUT_CLASSIFICATION	5.185818815955668E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995134927809495	WITHOUT_CLASSIFICATION	4.865072190505121E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995027601407828	WITHOUT_CLASSIFICATION	4.972398592172596E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997564658729384	WITHOUT_CLASSIFICATION	2.4353412706150585E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995631694361923	WITHOUT_CLASSIFICATION	4.368305638078183E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999479346560692	WITHOUT_CLASSIFICATION	5.206534393079335E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994539292272895	WITHOUT_CLASSIFICATION	5.460707727104718E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994491021592116	WITHOUT_CLASSIFICATION	5.508978407883953E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994433936551725	WITHOUT_CLASSIFICATION	5.566063448275219E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994499746554217	WITHOUT_CLASSIFICATION	5.500253445782302E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995519162581334	WITHOUT_CLASSIFICATION	4.4808374186658504E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994230751486411	WITHOUT_CLASSIFICATION	5.769248513588966E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994491021592116	WITHOUT_CLASSIFICATION	5.508978407883953E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999507555528033	WITHOUT_CLASSIFICATION	4.924444719668761E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994072300249395	WITHOUT_CLASSIFICATION	5.927699750605024E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994029374656933	WITHOUT_CLASSIFICATION	5.970625343066483E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995221802681508	WITHOUT_CLASSIFICATION	4.778197318493063E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994906780662366	WITHOUT_CLASSIFICATION	5.093219337633415E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995221802681508	WITHOUT_CLASSIFICATION	4.778197318493063E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994660150512777	WITHOUT_CLASSIFICATION	5.339849487222719E-4	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994664121246718	WITHOUT_CLASSIFICATION	5.33587875328198E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994378455445257	WITHOUT_CLASSIFICATION	5.621544554742711E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994983493432491	WITHOUT_CLASSIFICATION	5.016506567509699E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9998037695828592	WITHOUT_CLASSIFICATION	1.962304171406849E-4	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995950547321221	WITHOUT_CLASSIFICATION	4.049452678779359E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994718846781262	WITHOUT_CLASSIFICATION	5.281153218738781E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995221802681508	WITHOUT_CLASSIFICATION	4.778197318493063E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994813147694784	WITHOUT_CLASSIFICATION	5.186852305215718E-4	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993957940102328	WITHOUT_CLASSIFICATION	6.04205989767182E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994985049295937	WITHOUT_CLASSIFICATION	5.014950704063432E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9998321823062517	WITHOUT_CLASSIFICATION	1.6781769374836592E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9998285834950411	WITHOUT_CLASSIFICATION	1.7141650495893464E-4	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9997311316739875	WITHOUT_CLASSIFICATION	2.6886832601246715E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9996476727954392	WITHOUT_CLASSIFICATION	3.523272045608335E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9980617585165206	WITHOUT_CLASSIFICATION	0.0019382414834794642	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9990063783894049	WITHOUT_CLASSIFICATION	9.936216105951615E-4	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9997232504413016	WITHOUT_CLASSIFICATION	2.767495586983621E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9978328227101971	WITHOUT_CLASSIFICATION	0.002167177289802861	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9996860029909109	WITHOUT_CLASSIFICATION	3.1399700908907313E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9997029508093515	WITHOUT_CLASSIFICATION	2.970491906485209E-4	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998725106648191	WITHOUT_CLASSIFICATION	1.274893351808454E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9998263663922764	WITHOUT_CLASSIFICATION	1.7363360772365143E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9982277315892799	WITHOUT_CLASSIFICATION	0.0017722684107201207	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9996147098020554	WITHOUT_CLASSIFICATION	3.8529019794460623E-4	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9958979256289858	WITHOUT_CLASSIFICATION	0.004102074371014155	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9992641699580511	WITHOUT_CLASSIFICATION	7.358300419489886E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9992442480848495	WITHOUT_CLASSIFICATION	7.557519151505658E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9997320918544383	WITHOUT_CLASSIFICATION	2.679081455616923E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9995670806576785	WITHOUT_CLASSIFICATION	4.3291934232147773E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9945401961320337	WITHOUT_CLASSIFICATION	0.005459803867966229	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9996655926234898	WITHOUT_CLASSIFICATION	3.3440737651019504E-4	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9993908642668814	WITHOUT_CLASSIFICATION	6.091357331185254E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9994653834876623	WITHOUT_CLASSIFICATION	5.346165123377207E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9998142706992725	WITHOUT_CLASSIFICATION	1.8572930072749576E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9998037695828592	WITHOUT_CLASSIFICATION	1.962304171406849E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9995740966030009	WITHOUT_CLASSIFICATION	4.259033969991802E-4	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9997266804931146	WITHOUT_CLASSIFICATION	2.733195068853701E-4	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9997266804931146	WITHOUT_CLASSIFICATION	2.733195068853701E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994997706145673	WITHOUT_CLASSIFICATION	5.00229385432663E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999018283117183	WITHOUT_CLASSIFICATION	9.817168828173618E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9995407075447974	WITHOUT_CLASSIFICATION	4.592924552026284E-4	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9996061757851302	WITHOUT_CLASSIFICATION	3.938242148697544E-4	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9994864970792813	WITHOUT_CLASSIFICATION	5.135029207187957E-4	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.999765656041155	WITHOUT_CLASSIFICATION	2.343439588448956E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9996608288992844	WITHOUT_CLASSIFICATION	3.3917110071556776E-4	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9998226459067402	WITHOUT_CLASSIFICATION	1.7735409325986165E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9996533346654214	WITHOUT_CLASSIFICATION	3.466653345785486E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9996666830802221	WITHOUT_CLASSIFICATION	3.333169197778479E-4	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.999300400179922	WITHOUT_CLASSIFICATION	6.995998200778852E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.998686550712024	WITHOUT_CLASSIFICATION	0.0013134492879760193	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999138990833727	WITHOUT_CLASSIFICATION	8.610091662737817E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9996014143000856	WITHOUT_CLASSIFICATION	3.985856999143656E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9984456448989545	WITHOUT_CLASSIFICATION	0.0015543551010454627	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9997674653862282	WITHOUT_CLASSIFICATION	2.325346137717832E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9998781261510439	WITHOUT_CLASSIFICATION	1.218738489561266E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9998710878974814	WITHOUT_CLASSIFICATION	1.2891210251859866E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9996157696100942	WITHOUT_CLASSIFICATION	3.842303899057743E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9998225586316071	WITHOUT_CLASSIFICATION	1.7744136839282994E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9997516274876715	WITHOUT_CLASSIFICATION	2.4837251232841695E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999337748583366	WITHOUT_CLASSIFICATION	6.622514166339342E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9997240998674395	WITHOUT_CLASSIFICATION	2.759001325605614E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9998647232035661	WITHOUT_CLASSIFICATION	1.352767964338183E-4	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9986731338045024	WITHOUT_CLASSIFICATION	0.0013268661954976735	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9998795288875497	WITHOUT_CLASSIFICATION	1.204711124502363E-4	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998524382111644	WITHOUT_CLASSIFICATION	1.4756178883552275E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999458116203488	WITHOUT_CLASSIFICATION	5.418837965120884E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999458116203488	WITHOUT_CLASSIFICATION	5.418837965120884E-4	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9998055535346585	WITHOUT_CLASSIFICATION	1.9444646534145501E-4	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9995815559404755	WITHOUT_CLASSIFICATION	4.184440595244808E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9989104263728947	WITHOUT_CLASSIFICATION	0.0010895736271053348	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9993875814323723	WITHOUT_CLASSIFICATION	6.124185676276735E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999266422409513	WITHOUT_CLASSIFICATION	7.335775904862984E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9996377555163676	WITHOUT_CLASSIFICATION	3.622444836323959E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9995587092287364	WITHOUT_CLASSIFICATION	4.4129077126365765E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9995587092287364	WITHOUT_CLASSIFICATION	4.4129077126365765E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998524382111644	WITHOUT_CLASSIFICATION	1.4756178883552275E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9993770820605261	WITHOUT_CLASSIFICATION	6.229179394738167E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9990144952460273	WITHOUT_CLASSIFICATION	9.855047539728096E-4	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9998836033296459	WITHOUT_CLASSIFICATION	1.1639667035414493E-4	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9996359070108529	WITHOUT_CLASSIFICATION	3.6409298914710477E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9992609244975947	WITHOUT_CLASSIFICATION	7.390755024051945E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9983582949924948	WITHOUT_CLASSIFICATION	0.001641705007505228	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9997240468006756	WITHOUT_CLASSIFICATION	2.7595319932430387E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999234392993251	WITHOUT_CLASSIFICATION	7.65607006748664E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998623874293584	WITHOUT_CLASSIFICATION	1.3761257064160467E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.99891779325112	WITHOUT_CLASSIFICATION	0.001082206748879989	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9997892481888178	WITHOUT_CLASSIFICATION	2.107518111821741E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9995448581512976	WITHOUT_CLASSIFICATION	4.551418487024089E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9990783909982798	WITHOUT_CLASSIFICATION	9.216090017203194E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9995015023185397	WITHOUT_CLASSIFICATION	4.984976814602868E-4	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9989157327242575	WITHOUT_CLASSIFICATION	0.00108426727574256	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9984036694331188	WITHOUT_CLASSIFICATION	0.0015963305668811644	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9998154844619439	WITHOUT_CLASSIFICATION	1.8451553805595724E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999364858741737	WITHOUT_CLASSIFICATION	6.351412582634026E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9995228194264749	WITHOUT_CLASSIFICATION	4.771805735251894E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999258629823007	WITHOUT_CLASSIFICATION	7.413701769921769E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9997325191418528	WITHOUT_CLASSIFICATION	2.67480858147201E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999136818516465	WITHOUT_CLASSIFICATION	8.631814835350971E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9998309471944586	WITHOUT_CLASSIFICATION	1.69052805541254E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9979503632224447	WITHOUT_CLASSIFICATION	0.0020496367775553388	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998462555552662	WITHOUT_CLASSIFICATION	1.537444447337813E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9995910139047812	WITHOUT_CLASSIFICATION	4.089860952187297E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9998375180000492	WITHOUT_CLASSIFICATION	1.6248199995076777E-4	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9984524321427661	WITHOUT_CLASSIFICATION	0.0015475678572339068	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9987558728767447	WITHOUT_CLASSIFICATION	0.0012441271232553034	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999474142998163	WITHOUT_CLASSIFICATION	5.258570018360584E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9991682132458833	WITHOUT_CLASSIFICATION	8.31786754116678E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998765659120168	WITHOUT_CLASSIFICATION	1.234340879832484E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.99954281487564	WITHOUT_CLASSIFICATION	4.571851243600023E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.999761895688019	WITHOUT_CLASSIFICATION	2.3810431198090869E-4	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9997336318883755	WITHOUT_CLASSIFICATION	2.6636811162448657E-4	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9996546424683358	WITHOUT_CLASSIFICATION	3.453575316641544E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9994433936551725	WITHOUT_CLASSIFICATION	5.566063448275219E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9994636202704111	WITHOUT_CLASSIFICATION	5.363797295888749E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994665216973543	WITHOUT_CLASSIFICATION	5.334783026456244E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995085521203129	WITHOUT_CLASSIFICATION	4.91447879687187E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994519843926999	WITHOUT_CLASSIFICATION	5.480156073001232E-4	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999505899718243	WITHOUT_CLASSIFICATION	4.94100281757085E-4	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993927551064892	WITHOUT_CLASSIFICATION	6.072448935108203E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996177722340431	WITHOUT_CLASSIFICATION	3.82227765956901E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994831962133002	WITHOUT_CLASSIFICATION	5.168037866997927E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994499746554217	WITHOUT_CLASSIFICATION	5.500253445782302E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994500297616212	WITHOUT_CLASSIFICATION	5.499702383788105E-4	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994983493432491	WITHOUT_CLASSIFICATION	5.016506567509699E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994400933094792	WITHOUT_CLASSIFICATION	5.599066905207424E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995758992671631	WITHOUT_CLASSIFICATION	4.2410073283694803E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995085521203129	WITHOUT_CLASSIFICATION	4.91447879687187E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995643424162647	WITHOUT_CLASSIFICATION	4.3565758373521944E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995722075409015	WITHOUT_CLASSIFICATION	4.2779245909849704E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995085521203129	WITHOUT_CLASSIFICATION	4.91447879687187E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995448291319924	WITHOUT_CLASSIFICATION	4.5517086800752216E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994892854471746	WITHOUT_CLASSIFICATION	5.10714552825295E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997379494305856	WITHOUT_CLASSIFICATION	2.620505694144679E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999492504294554	WITHOUT_CLASSIFICATION	5.074957054460379E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999505899718243	WITHOUT_CLASSIFICATION	4.94100281757085E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994499746554217	WITHOUT_CLASSIFICATION	5.500253445782302E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994819912677007	WITHOUT_CLASSIFICATION	5.180087322993052E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995034684166758	WITHOUT_CLASSIFICATION	4.965315833242896E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996201815838477	WITHOUT_CLASSIFICATION	3.7981841615230747E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995758376470752	WITHOUT_CLASSIFICATION	4.2416235292476397E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994845838272235	WITHOUT_CLASSIFICATION	5.154161727764778E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995807787577873	WITHOUT_CLASSIFICATION	4.192212422126686E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995306606382034	WITHOUT_CLASSIFICATION	4.693393617966461E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995643424162647	WITHOUT_CLASSIFICATION	4.3565758373521944E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995356186333405	WITHOUT_CLASSIFICATION	4.643813666596068E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999445608181703	WITHOUT_CLASSIFICATION	5.54391818296934E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994636202704111	WITHOUT_CLASSIFICATION	5.363797295888749E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994636202704111	WITHOUT_CLASSIFICATION	5.363797295888749E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994814181184044	WITHOUT_CLASSIFICATION	5.185818815955668E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995134927809495	WITHOUT_CLASSIFICATION	4.865072190505121E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999445608181703	WITHOUT_CLASSIFICATION	5.54391818296934E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995027601407828	WITHOUT_CLASSIFICATION	4.972398592172596E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997564658729384	WITHOUT_CLASSIFICATION	2.4353412706150585E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995631694361923	WITHOUT_CLASSIFICATION	4.368305638078183E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999479346560692	WITHOUT_CLASSIFICATION	5.206534393079335E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994539292272895	WITHOUT_CLASSIFICATION	5.460707727104718E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994398634927218	WITHOUT_CLASSIFICATION	5.601365072780731E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994491021592116	WITHOUT_CLASSIFICATION	5.508978407883953E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994433936551725	WITHOUT_CLASSIFICATION	5.566063448275219E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994499746554217	WITHOUT_CLASSIFICATION	5.500253445782302E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995519162581334	WITHOUT_CLASSIFICATION	4.4808374186658504E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994758817516979	WITHOUT_CLASSIFICATION	5.241182483021448E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994931508887333	WITHOUT_CLASSIFICATION	5.068491112667562E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994230751486411	WITHOUT_CLASSIFICATION	5.769248513588966E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994491021592116	WITHOUT_CLASSIFICATION	5.508978407883953E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999507555528033	WITHOUT_CLASSIFICATION	4.924444719668761E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994029374656933	WITHOUT_CLASSIFICATION	5.970625343066483E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995221802681508	WITHOUT_CLASSIFICATION	4.778197318493063E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994906780662366	WITHOUT_CLASSIFICATION	5.093219337633415E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995221802681508	WITHOUT_CLASSIFICATION	4.778197318493063E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994660150512777	WITHOUT_CLASSIFICATION	5.339849487222719E-4	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994664121246718	WITHOUT_CLASSIFICATION	5.33587875328198E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994378455445257	WITHOUT_CLASSIFICATION	5.621544554742711E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994983493432491	WITHOUT_CLASSIFICATION	5.016506567509699E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995172742466449	WITHOUT_CLASSIFICATION	4.827257533549631E-4	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994498040210896	WITHOUT_CLASSIFICATION	5.501959789103381E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994813147694784	WITHOUT_CLASSIFICATION	5.186852305215718E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994718846781262	WITHOUT_CLASSIFICATION	5.281153218738781E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995221802681508	WITHOUT_CLASSIFICATION	4.778197318493063E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994813147694784	WITHOUT_CLASSIFICATION	5.186852305215718E-4	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993957940102328	WITHOUT_CLASSIFICATION	6.04205989767182E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994985049295937	WITHOUT_CLASSIFICATION	5.014950704063432E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994997706145673	WITHOUT_CLASSIFICATION	5.00229385432663E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9998321823062517	WITHOUT_CLASSIFICATION	1.6781769374836592E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9998285834950411	WITHOUT_CLASSIFICATION	1.7141650495893464E-4	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9997311316739875	WITHOUT_CLASSIFICATION	2.6886832601246715E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9998037695828592	WITHOUT_CLASSIFICATION	1.962304171406849E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9980617585165206	WITHOUT_CLASSIFICATION	0.0019382414834794642	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9990063783894049	WITHOUT_CLASSIFICATION	9.936216105951615E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999018283117183	WITHOUT_CLASSIFICATION	9.817168828173618E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9994876735555658	WITHOUT_CLASSIFICATION	5.123264444341222E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9994876735555658	WITHOUT_CLASSIFICATION	5.123264444341222E-4	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9989381839666202	WITHOUT_CLASSIFICATION	0.001061816033379895	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999830559438988	WITHOUT_CLASSIFICATION	1.6944056101129732E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9998780460874037	WITHOUT_CLASSIFICATION	1.2195391259636578E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.999797727838402	WITHOUT_CLASSIFICATION	2.0227216159810784E-4	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9997025971001793	WITHOUT_CLASSIFICATION	2.974028998206716E-4	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9998161444884963	WITHOUT_CLASSIFICATION	1.8385551150369793E-4	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9998916670615634	WITHOUT_CLASSIFICATION	1.0833293843660466E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9996701601294212	WITHOUT_CLASSIFICATION	3.298398705787434E-4	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999160457173826	WITHOUT_CLASSIFICATION	8.395428261739939E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9996533811294206	WITHOUT_CLASSIFICATION	3.466188705793916E-4	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9996211437417499	WITHOUT_CLASSIFICATION	3.788562582499866E-4	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9998543065672962	WITHOUT_CLASSIFICATION	1.4569343270367916E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9998958571737546	WITHOUT_CLASSIFICATION	1.0414282624542529E-4	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999352328451004	WITHOUT_CLASSIFICATION	6.476715489956621E-5	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9906312271617853	WITHOUT_CLASSIFICATION	0.00936877283821469	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999188243622881	WITHOUT_CLASSIFICATION	8.117563771181327E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998154560846568	WITHOUT_CLASSIFICATION	1.8454391534327656E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999003781315339	WITHOUT_CLASSIFICATION	9.962186846611299E-5	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9995830287982507	WITHOUT_CLASSIFICATION	4.169712017493659E-4	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9995998652205026	WITHOUT_CLASSIFICATION	4.001347794973909E-4	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9998188960398198	WITHOUT_CLASSIFICATION	1.811039601801802E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999530979489627	WITHOUT_CLASSIFICATION	4.690205103732261E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9994077389657748	WITHOUT_CLASSIFICATION	5.922610342251257E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9993238527273213	WITHOUT_CLASSIFICATION	6.761472726786364E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9988434856820884	WITHOUT_CLASSIFICATION	0.0011565143179116102	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9987373103987558	WITHOUT_CLASSIFICATION	0.001262689601244302	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9997266803225388	WITHOUT_CLASSIFICATION	2.733196774612689E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9997266803225388	WITHOUT_CLASSIFICATION	2.733196774612689E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9996670047327252	WITHOUT_CLASSIFICATION	3.329952672747905E-4	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9998913462445251	WITHOUT_CLASSIFICATION	1.0865375547485876E-4	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9991347506209945	WITHOUT_CLASSIFICATION	8.652493790053896E-4	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999387354716905	WITHOUT_CLASSIFICATION	6.126452830945361E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9995508529009088	WITHOUT_CLASSIFICATION	4.491470990911985E-4	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9996988174819905	WITHOUT_CLASSIFICATION	3.0118251800946973E-4	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.999833261943757	WITHOUT_CLASSIFICATION	1.6673805624304417E-4	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9998643377513933	WITHOUT_CLASSIFICATION	1.3566224860668782E-4	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999043602135258	WITHOUT_CLASSIFICATION	9.563978647422164E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9996934843936212	WITHOUT_CLASSIFICATION	3.065156063788184E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9996934843936212	WITHOUT_CLASSIFICATION	3.065156063788184E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9997071087028289	WITHOUT_CLASSIFICATION	2.928912971710996E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9997071087028289	WITHOUT_CLASSIFICATION	2.928912971710996E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9998486049461277	WITHOUT_CLASSIFICATION	1.5139505387230117E-4	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9996500508942398	WITHOUT_CLASSIFICATION	3.4994910576024605E-4	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999785515211524	WITHOUT_CLASSIFICATION	2.144847884754641E-5	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999797057307903	WITHOUT_CLASSIFICATION	2.0294269209702622E-5	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999576637996925	WITHOUT_CLASSIFICATION	4.233620030744142E-5	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9997651231387278	WITHOUT_CLASSIFICATION	2.3487686127211032E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9993541666754556	WITHOUT_CLASSIFICATION	6.458333245444172E-4	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.999887766149677	WITHOUT_CLASSIFICATION	1.1223385032298892E-4	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9648738765526829	WITHOUT_CLASSIFICATION	0.03512612344731716	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.999843690045755	WITHOUT_CLASSIFICATION	1.5630995424506798E-4	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998703801363267	WITHOUT_CLASSIFICATION	1.2961986367333931E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9998825722029744	WITHOUT_CLASSIFICATION	1.1742779702560515E-4	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9995360585623666	WITHOUT_CLASSIFICATION	4.63941437633361E-4	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9997997153861374	WITHOUT_CLASSIFICATION	2.002846138626342E-4	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9998811370459989	WITHOUT_CLASSIFICATION	1.1886295400098285E-4	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9996873364480334	WITHOUT_CLASSIFICATION	3.126635519666631E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9998587409838071	WITHOUT_CLASSIFICATION	1.41259016192926E-4	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9998483846836271	WITHOUT_CLASSIFICATION	1.5161531637283788E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9852833397327778	WITHOUT_CLASSIFICATION	0.01471666026722221	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9995467840375196	WITHOUT_CLASSIFICATION	4.5321596248045507E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9998801320107952	WITHOUT_CLASSIFICATION	1.1986798920474006E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9995800371596761	WITHOUT_CLASSIFICATION	4.199628403238212E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9995496588778061	WITHOUT_CLASSIFICATION	4.503411221938779E-4	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999255037352875	WITHOUT_CLASSIFICATION	7.449626471245371E-5	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9995273197324044	WITHOUT_CLASSIFICATION	4.726802675955126E-4	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9950915733010562	WITHOUT_CLASSIFICATION	0.004908426698943778	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9997490734610667	WITHOUT_CLASSIFICATION	2.5092653893336555E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9996904399640034	WITHOUT_CLASSIFICATION	3.095600359965908E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9996904399640034	WITHOUT_CLASSIFICATION	3.095600359965908E-4	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997616270804732	WITHOUT_CLASSIFICATION	2.3837291952669306E-4	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9996741755176186	WITHOUT_CLASSIFICATION	3.258244823814714E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9998582356321185	WITHOUT_CLASSIFICATION	1.417643678815257E-4	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9995628465297158	WITHOUT_CLASSIFICATION	4.3715347028413154E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9996533555052252	WITHOUT_CLASSIFICATION	3.4664449477485185E-4	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9997559927631616	WITHOUT_CLASSIFICATION	2.4400723683832046E-4	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9998145109143978	WITHOUT_CLASSIFICATION	1.854890856021783E-4	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997592055539619	WITHOUT_CLASSIFICATION	2.4079444603808655E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9950915733010562	WITHOUT_CLASSIFICATION	0.004908426698943778	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9972947934896098	WITHOUT_CLASSIFICATION	0.0027052065103902205	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.999468774764228	WITHOUT_CLASSIFICATION	5.312252357719594E-4	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9994788545301675	WITHOUT_CLASSIFICATION	5.211454698325037E-4	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.998936371413628	WITHOUT_CLASSIFICATION	0.0010636285863719823	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9990075549050363	WITHOUT_CLASSIFICATION	9.924450949637094E-4	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9995106177010438	WITHOUT_CLASSIFICATION	4.893822989562478E-4	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9996372925700141	WITHOUT_CLASSIFICATION	3.6270742998589355E-4	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9996133962511475	WITHOUT_CLASSIFICATION	3.866037488525565E-4	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9995713242650764	WITHOUT_CLASSIFICATION	4.286757349234966E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9996031429313406	WITHOUT_CLASSIFICATION	3.968570686594687E-4	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9996707532264067	WITHOUT_CLASSIFICATION	3.292467735932842E-4	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9998371605638788	WITHOUT_CLASSIFICATION	1.6283943612115803E-4	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999833194392857	WITHOUT_CLASSIFICATION	1.668056071429948E-4	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999322895067969	WITHOUT_CLASSIFICATION	6.771049320302791E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.997041759000131	WITHOUT_CLASSIFICATION	0.002958240999869014	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9998600480365045	WITHOUT_CLASSIFICATION	1.399519634955933E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9997729709686798	WITHOUT_CLASSIFICATION	2.2702903132018913E-4	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9991384428487177	WITHOUT_CLASSIFICATION	8.615571512823495E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9997855087277758	WITHOUT_CLASSIFICATION	2.144912722242199E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9992480275353082	WITHOUT_CLASSIFICATION	7.519724646918827E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9993679184192954	WITHOUT_CLASSIFICATION	6.320815807045248E-4	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9991079135366312	WITHOUT_CLASSIFICATION	8.920864633687434E-4	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9987743453275042	WITHOUT_CLASSIFICATION	0.0012256546724958054	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.999726482147491	WITHOUT_CLASSIFICATION	2.7351785250892877E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9996372925700141	WITHOUT_CLASSIFICATION	3.6270742998589355E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9992221649165719	WITHOUT_CLASSIFICATION	7.778350834281617E-4	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9993719015794241	WITHOUT_CLASSIFICATION	6.280984205759662E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999120899552036	WITHOUT_CLASSIFICATION	8.791004479630012E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9070977313981833	WITHOUT_CLASSIFICATION	0.09290226860181669	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9968613546631655	WITHOUT_CLASSIFICATION	0.003138645336834546	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9612098943097683	WITHOUT_CLASSIFICATION	0.03879010569023169	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9922901680548832	WITHOUT_CLASSIFICATION	0.00770983194511674	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9997883648873278	WITHOUT_CLASSIFICATION	2.1163511267215977E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9995640548011662	WITHOUT_CLASSIFICATION	4.359451988337842E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9998637789716991	WITHOUT_CLASSIFICATION	1.3622102830079588E-4	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9996395001536912	WITHOUT_CLASSIFICATION	3.6049984630876733E-4	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9996395001536912	WITHOUT_CLASSIFICATION	3.6049984630876733E-4	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9998844940628774	WITHOUT_CLASSIFICATION	1.1550593712254196E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9995351810508213	WITHOUT_CLASSIFICATION	4.6481894917864007E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9997178780265179	WITHOUT_CLASSIFICATION	2.821219734820754E-4	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998525134621827	WITHOUT_CLASSIFICATION	1.474865378173398E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.999649878119078	WITHOUT_CLASSIFICATION	3.5012188092201286E-4	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9996152219125417	WITHOUT_CLASSIFICATION	3.84778087458226E-4	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9998965122806854	WITHOUT_CLASSIFICATION	1.0348771931445935E-4	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.999482324150445	WITHOUT_CLASSIFICATION	5.176758495549859E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9997347481518661	WITHOUT_CLASSIFICATION	2.65251848133901E-4	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9998274951012824	WITHOUT_CLASSIFICATION	1.7250489871762975E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9997071087028289	WITHOUT_CLASSIFICATION	2.928912971710996E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9993541666754556	WITHOUT_CLASSIFICATION	6.458333245444172E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998525134621827	WITHOUT_CLASSIFICATION	1.474865378173398E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.999649878119078	WITHOUT_CLASSIFICATION	3.5012188092201286E-4	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9994834771406602	WITHOUT_CLASSIFICATION	5.165228593398865E-4	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9996288521129109	WITHOUT_CLASSIFICATION	3.71147887089184E-4	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9995552422665045	WITHOUT_CLASSIFICATION	4.4475773349540563E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9994486538396091	WITHOUT_CLASSIFICATION	5.51346160390909E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9867124856720885	WITHOUT_CLASSIFICATION	0.013287514327911611	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9998984819238262	WITHOUT_CLASSIFICATION	1.0151807617373667E-4	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9965862803193075	WITHOUT_CLASSIFICATION	0.003413719680692478	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9989096643404753	WITHOUT_CLASSIFICATION	0.001090335659524647	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9990091249925115	WITHOUT_CLASSIFICATION	9.90875007488546E-4	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9956124648817501	WITHOUT_CLASSIFICATION	0.004387535118249815	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9998581515800233	WITHOUT_CLASSIFICATION	1.4184841997668733E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9993390418105003	WITHOUT_CLASSIFICATION	6.609581894997928E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9998463724464113	WITHOUT_CLASSIFICATION	1.536275535887416E-4	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9995077546792611	WITHOUT_CLASSIFICATION	4.922453207388985E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9998045585451328	WITHOUT_CLASSIFICATION	1.9544145486723207E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9993390418105003	WITHOUT_CLASSIFICATION	6.609581894997928E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9993390418105003	WITHOUT_CLASSIFICATION	6.609581894997928E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9993390418105003	WITHOUT_CLASSIFICATION	6.609581894997928E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9998034274844346	WITHOUT_CLASSIFICATION	1.965725155653808E-4	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9998279360464805	WITHOUT_CLASSIFICATION	1.7206395351956034E-4	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9996352187079921	WITHOUT_CLASSIFICATION	3.64781292007892E-4	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.999917408885669	WITHOUT_CLASSIFICATION	8.259111433098902E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9995877134930256	WITHOUT_CLASSIFICATION	4.1228650697439773E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999111305011495	WITHOUT_CLASSIFICATION	8.886949885045849E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9987486421229164	WITHOUT_CLASSIFICATION	0.0012513578770835772	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999031307056909	WITHOUT_CLASSIFICATION	9.686929430910607E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9997372138108843	WITHOUT_CLASSIFICATION	2.627861891156549E-4	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9997081362271919	WITHOUT_CLASSIFICATION	2.9186377280813726E-4	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9990599054696215	WITHOUT_CLASSIFICATION	9.400945303784723E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999060198428047	WITHOUT_CLASSIFICATION	9.398015719529021E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9998123313900645	WITHOUT_CLASSIFICATION	1.876686099353894E-4	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9997971678681036	WITHOUT_CLASSIFICATION	2.0283213189645755E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.999829231694205	WITHOUT_CLASSIFICATION	1.707683057949909E-4	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9998611414099253	WITHOUT_CLASSIFICATION	1.3885859007465985E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9990831058639614	WITHOUT_CLASSIFICATION	9.168941360385147E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9997143812445453	WITHOUT_CLASSIFICATION	2.8561875545472066E-4	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.999896560913501	WITHOUT_CLASSIFICATION	1.0343908649900364E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9998428139670534	WITHOUT_CLASSIFICATION	1.5718603294661662E-4	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9995097842322348	WITHOUT_CLASSIFICATION	4.902157677651414E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999751976057585	WITHOUT_CLASSIFICATION	2.4802394241498074E-4	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9998722736172507	WITHOUT_CLASSIFICATION	1.2772638274931712E-4	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9989229827407701	WITHOUT_CLASSIFICATION	0.0010770172592299398	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9995215135514487	WITHOUT_CLASSIFICATION	4.7848644855143333E-4	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9995381263989672	WITHOUT_CLASSIFICATION	4.61873601032746E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9996571540649364	WITHOUT_CLASSIFICATION	3.4284593506366386E-4	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9993265882290859	WITHOUT_CLASSIFICATION	6.734117709140838E-4	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9997387194592466	WITHOUT_CLASSIFICATION	2.6128054075342166E-4	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9994750047826744	WITHOUT_CLASSIFICATION	5.249952173256292E-4	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9994793884160665	WITHOUT_CLASSIFICATION	5.206115839335455E-4	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9994028695450653	WITHOUT_CLASSIFICATION	5.971304549347677E-4	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9997927046562931	WITHOUT_CLASSIFICATION	2.0729534370696363E-4	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9984180372058268	WITHOUT_CLASSIFICATION	0.00158196279417321	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9997678809428417	WITHOUT_CLASSIFICATION	2.3211905715815481E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9995418976944422	WITHOUT_CLASSIFICATION	4.5810230555772555E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999226867209249	WITHOUT_CLASSIFICATION	7.731327907519605E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999518450504012	WITHOUT_CLASSIFICATION	4.815494959879822E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9998074414079275	WITHOUT_CLASSIFICATION	1.925585920724992E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9998074414079275	WITHOUT_CLASSIFICATION	1.925585920724992E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.999434532055671	WITHOUT_CLASSIFICATION	5.65467944328958E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.999434532055671	WITHOUT_CLASSIFICATION	5.65467944328958E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9992211825483204	WITHOUT_CLASSIFICATION	7.788174516796275E-4	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.999530494333535	WITHOUT_CLASSIFICATION	4.6950566646501506E-4	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999003956013531	WITHOUT_CLASSIFICATION	9.960439864691722E-5	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9997334705321415	WITHOUT_CLASSIFICATION	2.665294678584985E-4	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9998377718247057	WITHOUT_CLASSIFICATION	1.622281752942411E-4	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9997936082715384	WITHOUT_CLASSIFICATION	2.063917284615012E-4	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9993328341828068	WITHOUT_CLASSIFICATION	6.671658171931565E-4	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9991222528727429	WITHOUT_CLASSIFICATION	8.777471272569585E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9990518687929356	WITHOUT_CLASSIFICATION	9.481312070644381E-4	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9998648928859676	WITHOUT_CLASSIFICATION	1.3510711403237087E-4	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9997118351023516	WITHOUT_CLASSIFICATION	2.8816489764844796E-4	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9995583440285155	WITHOUT_CLASSIFICATION	4.4165597148448015E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9994368749517014	WITHOUT_CLASSIFICATION	5.631250482985798E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999297383177699	WITHOUT_CLASSIFICATION	7.02616822301432E-5	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9996044532204722	WITHOUT_CLASSIFICATION	3.9554677952784677E-4	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9997769190994372	WITHOUT_CLASSIFICATION	2.2308090056289494E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9997440838675099	WITHOUT_CLASSIFICATION	2.559161324901521E-4	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9981520640038428	WITHOUT_CLASSIFICATION	0.0018479359961571485	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998287654479784	WITHOUT_CLASSIFICATION	1.7123455202155816E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9995802717028563	WITHOUT_CLASSIFICATION	4.197282971436988E-4	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9991734015279715	WITHOUT_CLASSIFICATION	8.265984720283904E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9997485432728261	WITHOUT_CLASSIFICATION	2.5145672717383466E-4	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9999282004198009	WITHOUT_CLASSIFICATION	7.179958019908864E-5	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9998142711332139	WITHOUT_CLASSIFICATION	1.8572886678603625E-4	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9994679833825226	WITHOUT_CLASSIFICATION	5.320166174773936E-4	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9991943974707093	WITHOUT_CLASSIFICATION	8.056025292907887E-4	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9996991050491794	WITHOUT_CLASSIFICATION	3.0089495082061594E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9991868544540675	WITHOUT_CLASSIFICATION	8.13145545932478E-4	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9998207508100804	WITHOUT_CLASSIFICATION	1.792491899197014E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9994876735555658	WITHOUT_CLASSIFICATION	5.123264444341222E-4	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9995835169963103	WITHOUT_CLASSIFICATION	4.1648300368971665E-4	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9994738760045062	WITHOUT_CLASSIFICATION	5.261239954938618E-4	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.999448786171887	WITHOUT_CLASSIFICATION	5.512138281128982E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9993372045967195	WITHOUT_CLASSIFICATION	6.627954032804485E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9997484897777239	WITHOUT_CLASSIFICATION	2.515102222760764E-4	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998485119494303	WITHOUT_CLASSIFICATION	1.514880505697667E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9996769465926496	WITHOUT_CLASSIFICATION	3.2305340735042294E-4	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9998031524710066	WITHOUT_CLASSIFICATION	1.9684752899338102E-4	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9996648757573052	WITHOUT_CLASSIFICATION	3.3512424269468354E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9991409392127067	WITHOUT_CLASSIFICATION	8.590607872932622E-4	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9879280412520068	WITHOUT_CLASSIFICATION	0.01207195874799316	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9998283531517262	WITHOUT_CLASSIFICATION	1.716468482737275E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9958464948248893	WITHOUT_CLASSIFICATION	0.004153505175110742	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9998636077338339	WITHOUT_CLASSIFICATION	1.3639226616621563E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9969497512396096	WITHOUT_CLASSIFICATION	0.003050248760390407	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.999613463833873	WITHOUT_CLASSIFICATION	3.86536166127171E-4	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9996941077233966	WITHOUT_CLASSIFICATION	3.0589227660336575E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9994925691408811	WITHOUT_CLASSIFICATION	5.07430859118929E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.999991443823618	WITHOUT_CLASSIFICATION	8.556176381911212E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999403865100449	WITHOUT_CLASSIFICATION	5.961348995509172E-5	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9994965346026687	WITHOUT_CLASSIFICATION	5.03465397331333E-4	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9996516810376765	WITHOUT_CLASSIFICATION	3.483189623233581E-4	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9996012589692933	WITHOUT_CLASSIFICATION	3.9874103070671694E-4	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.999757229804517	WITHOUT_CLASSIFICATION	2.4277019548304632E-4	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9991350332658324	WITHOUT_CLASSIFICATION	8.649667341675724E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9991693518170245	WITHOUT_CLASSIFICATION	8.306481829754678E-4	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999146564827903	WITHOUT_CLASSIFICATION	8.53435172096776E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999807543140664	WITHOUT_CLASSIFICATION	1.9245685933665837E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9995961964889837	WITHOUT_CLASSIFICATION	4.0380351101638274E-4	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9992582803638884	WITHOUT_CLASSIFICATION	7.417196361114475E-4	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9994079783038639	WITHOUT_CLASSIFICATION	5.92021696136177E-4	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9984007436590823	WITHOUT_CLASSIFICATION	0.0015992563409178153	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9996964506481403	WITHOUT_CLASSIFICATION	3.0354935185981506E-4	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999226864091003	WITHOUT_CLASSIFICATION	7.731359089970525E-5	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9997072105619006	WITHOUT_CLASSIFICATION	2.9278943809939943E-4	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999905144335836	WITHOUT_CLASSIFICATION	9.485566416501096E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9996455465892364	WITHOUT_CLASSIFICATION	3.5445341076356115E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9996455465892364	WITHOUT_CLASSIFICATION	3.5445341076356115E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9997367293508114	WITHOUT_CLASSIFICATION	2.6327064918856745E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.998897125562029	WITHOUT_CLASSIFICATION	0.0011028744379709848	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9996993730886833	WITHOUT_CLASSIFICATION	3.0062691131663985E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9994691261663978	WITHOUT_CLASSIFICATION	5.308738336022082E-4	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9996857905274066	WITHOUT_CLASSIFICATION	3.1420947259344E-4	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9996764209655018	WITHOUT_CLASSIFICATION	3.2357903449816805E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9996084529597127	WITHOUT_CLASSIFICATION	3.915470402873355E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9996084529597127	WITHOUT_CLASSIFICATION	3.915470402873355E-4	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9992240758874174	WITHOUT_CLASSIFICATION	7.75924112582698E-4	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9997669991996305	WITHOUT_CLASSIFICATION	2.33000800369532E-4	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9997825071334591	WITHOUT_CLASSIFICATION	2.1749286654103067E-4	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9991614010487488	WITHOUT_CLASSIFICATION	8.385989512511566E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9994884819274289	WITHOUT_CLASSIFICATION	5.115180725710896E-4	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9951672962276977	WITHOUT_CLASSIFICATION	0.0048327037723022055	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9998298967326013	WITHOUT_CLASSIFICATION	1.7010326739876397E-4	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9996391978925641	WITHOUT_CLASSIFICATION	3.6080210743590557E-4	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999767169988891	WITHOUT_CLASSIFICATION	2.3283001110859743E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9996773542321693	WITHOUT_CLASSIFICATION	3.2264576783068113E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9996731940593807	WITHOUT_CLASSIFICATION	3.2680594061927615E-4	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9997486650616123	WITHOUT_CLASSIFICATION	2.51334938387702E-4	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9997192550738305	WITHOUT_CLASSIFICATION	2.8074492616943323E-4	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9997820533329584	WITHOUT_CLASSIFICATION	2.1794666704160476E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9993310735782837	WITHOUT_CLASSIFICATION	6.689264217163394E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9998826936651333	WITHOUT_CLASSIFICATION	1.1730633486668297E-4	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999651927748404	WITHOUT_CLASSIFICATION	3.480722515955462E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9985234562989096	WITHOUT_CLASSIFICATION	0.001476543701090386	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999166781985673	WITHOUT_CLASSIFICATION	8.332180143273483E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9993092275680988	WITHOUT_CLASSIFICATION	6.907724319011462E-4	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999508295166976	WITHOUT_CLASSIFICATION	4.917048330239794E-4	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999530240898149	WITHOUT_CLASSIFICATION	4.697591018522499E-5	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9998073389316215	WITHOUT_CLASSIFICATION	1.9266106837831354E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9998661787974978	WITHOUT_CLASSIFICATION	1.3382120250221205E-4	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9996096875696019	WITHOUT_CLASSIFICATION	3.903124303982176E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.99991321683324	WITHOUT_CLASSIFICATION	8.67831667600808E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9997518270876219	WITHOUT_CLASSIFICATION	2.4817291237803413E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9996831004105057	WITHOUT_CLASSIFICATION	3.1689958949432487E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999139930743479	WITHOUT_CLASSIFICATION	8.60069256520525E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999440239501834	WITHOUT_CLASSIFICATION	5.597604981643854E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999734785734121	WITHOUT_CLASSIFICATION	2.6521426587775797E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9998008190739245	WITHOUT_CLASSIFICATION	1.99180926075538E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9996514988332834	WITHOUT_CLASSIFICATION	3.4850116671661206E-4	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9995293156101207	WITHOUT_CLASSIFICATION	4.706843898793405E-4	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9933056056189871	WITHOUT_CLASSIFICATION	0.006694394381012918	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.999863616594269	WITHOUT_CLASSIFICATION	1.3638340573097902E-4	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.999256481506504	WITHOUT_CLASSIFICATION	7.435184934958946E-4	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999507234226175	WITHOUT_CLASSIFICATION	4.92765773825129E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9991576347966787	WITHOUT_CLASSIFICATION	8.423652033212624E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9967075218968106	WITHOUT_CLASSIFICATION	0.0032924781031893682	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9993063148556011	WITHOUT_CLASSIFICATION	6.936851443989617E-4	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9997214011346777	WITHOUT_CLASSIFICATION	2.785988653223765E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.999348919539083	WITHOUT_CLASSIFICATION	6.510804609169595E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9996473294025645	WITHOUT_CLASSIFICATION	3.526705974354712E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990597420856285	WITHOUT_CLASSIFICATION	9.402579143715641E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990597420856285	WITHOUT_CLASSIFICATION	9.402579143715641E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996412203849396	WITHOUT_CLASSIFICATION	3.5877961506032433E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996412203849396	WITHOUT_CLASSIFICATION	3.5877961506032433E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9998045585451328	WITHOUT_CLASSIFICATION	1.9544145486723207E-4	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997571582512575	WITHOUT_CLASSIFICATION	2.428417487424997E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998332302849581	WITHOUT_CLASSIFICATION	1.667697150420019E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9998270640806617	WITHOUT_CLASSIFICATION	1.7293591933819594E-4	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.99931680481556	WITHOUT_CLASSIFICATION	6.831951844401473E-4	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.999744209589699	WITHOUT_CLASSIFICATION	2.557904103010157E-4	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.999894788421951	WITHOUT_CLASSIFICATION	1.0521157804903021E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9891485525807944	WITHOUT_CLASSIFICATION	0.010851447419205615	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9998179314707161	WITHOUT_CLASSIFICATION	1.8206852928390153E-4	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9997902222498227	WITHOUT_CLASSIFICATION	2.0977775017735792E-4	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9994233631743337	WITHOUT_CLASSIFICATION	5.766368256662234E-4	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9990244254721511	WITHOUT_CLASSIFICATION	9.755745278487743E-4	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9995568538680908	WITHOUT_CLASSIFICATION	4.4314613190913845E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9997739912835748	WITHOUT_CLASSIFICATION	2.2600871642532063E-4	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9996656848915879	WITHOUT_CLASSIFICATION	3.343151084120145E-4	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.999339533470214	WITHOUT_CLASSIFICATION	6.60466529786021E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9996578875473826	WITHOUT_CLASSIFICATION	3.4211245261741305E-4	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9994654403266197	WITHOUT_CLASSIFICATION	5.345596733804361E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9996209460937573	WITHOUT_CLASSIFICATION	3.790539062427738E-4	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9994965990337885	WITHOUT_CLASSIFICATION	5.034009662114009E-4	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998040612591372	WITHOUT_CLASSIFICATION	1.9593874086277875E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.99983313715031	WITHOUT_CLASSIFICATION	1.668628496901566E-4	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9998785567414608	WITHOUT_CLASSIFICATION	1.2144325853918981E-4	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.99983313715031	WITHOUT_CLASSIFICATION	1.668628496901566E-4	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9998354048576652	WITHOUT_CLASSIFICATION	1.645951423348072E-4	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998522334525928	WITHOUT_CLASSIFICATION	1.4776654740716297E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999001172131238	WITHOUT_CLASSIFICATION	9.988278687622452E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9997569543021054	WITHOUT_CLASSIFICATION	2.4304569789451358E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9997087627626062	WITHOUT_CLASSIFICATION	2.912372373937796E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9998669746219062	WITHOUT_CLASSIFICATION	1.3302537809384282E-4	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9997008456940298	WITHOUT_CLASSIFICATION	2.9915430597014396E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.999541818390443	WITHOUT_CLASSIFICATION	4.581816095570428E-4	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9975215450876632	WITHOUT_CLASSIFICATION	0.002478454912336775	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9997993846237093	WITHOUT_CLASSIFICATION	2.006153762906377E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9996660867775888	WITHOUT_CLASSIFICATION	3.3391322241111695E-4	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9994885388543567	WITHOUT_CLASSIFICATION	5.11461145643237E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9995765175477778	WITHOUT_CLASSIFICATION	4.2348245222231746E-4	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9990908773803301	WITHOUT_CLASSIFICATION	9.091226196698667E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9998260290180505	WITHOUT_CLASSIFICATION	1.7397098194943226E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999715304095113	WITHOUT_CLASSIFICATION	2.8469590488834273E-5	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9996056056747031	WITHOUT_CLASSIFICATION	3.943943252968431E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999354254224052	WITHOUT_CLASSIFICATION	6.457457759477925E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999024203762465	WITHOUT_CLASSIFICATION	9.757962375346704E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9998068516145803	WITHOUT_CLASSIFICATION	1.9314838541979214E-4	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9995843595078457	WITHOUT_CLASSIFICATION	4.1564049215425024E-4	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9994225230642128	WITHOUT_CLASSIFICATION	5.774769357873655E-4	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9998568072083021	WITHOUT_CLASSIFICATION	1.4319279169786042E-4	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9998364787031248	WITHOUT_CLASSIFICATION	1.6352129687530537E-4	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9997774147964066	WITHOUT_CLASSIFICATION	2.2258520359346457E-4	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9995474156383293	WITHOUT_CLASSIFICATION	4.525843616707786E-4	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9956011202342611	WITHOUT_CLASSIFICATION	0.004398879765738928	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9993440516537309	WITHOUT_CLASSIFICATION	6.559483462690653E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999164227212907	WITHOUT_CLASSIFICATION	8.357727870942048E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.999872819687972	WITHOUT_CLASSIFICATION	1.2718031202795167E-4	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9998598704141893	WITHOUT_CLASSIFICATION	1.4012958581064398E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999240381376134	WITHOUT_CLASSIFICATION	7.596186238659241E-5	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9995527455138501	WITHOUT_CLASSIFICATION	4.4725448614993244E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9992416110083835	WITHOUT_CLASSIFICATION	7.583889916166048E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999514614689011	WITHOUT_CLASSIFICATION	4.8538531098780394E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9992709959285203	WITHOUT_CLASSIFICATION	7.290040714797435E-4	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9997846504000232	WITHOUT_CLASSIFICATION	2.1534959997675801E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9996079620247464	WITHOUT_CLASSIFICATION	3.9203797525351583E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9991471080009416	WITHOUT_CLASSIFICATION	8.528919990584131E-4	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9996634168037488	WITHOUT_CLASSIFICATION	3.3658319625116115E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9996079620247464	WITHOUT_CLASSIFICATION	3.9203797525351583E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9995885315256712	WITHOUT_CLASSIFICATION	4.114684743288282E-4	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9996079620247464	WITHOUT_CLASSIFICATION	3.9203797525351583E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9996414866965886	WITHOUT_CLASSIFICATION	3.585133034113596E-4	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999911891225783	WITHOUT_CLASSIFICATION	8.81087742161575E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9997288154480217	WITHOUT_CLASSIFICATION	2.711845519782627E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999821843219083	WITHOUT_CLASSIFICATION	1.781567809170138E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999570230481554	WITHOUT_CLASSIFICATION	4.297695184449788E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9998384827863045	WITHOUT_CLASSIFICATION	1.6151721369551413E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9998830032896435	WITHOUT_CLASSIFICATION	1.1699671035652904E-4	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.999811051482552	WITHOUT_CLASSIFICATION	1.8894851744799424E-4	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999502890147715	WITHOUT_CLASSIFICATION	4.971098522858918E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9998049779158836	WITHOUT_CLASSIFICATION	1.9502208411628102E-4	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9998938120351142	WITHOUT_CLASSIFICATION	1.0618796488580028E-4	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9990780904730008	WITHOUT_CLASSIFICATION	9.219095269993254E-4	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9998744877153101	WITHOUT_CLASSIFICATION	1.255122846899749E-4	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999110939672298	WITHOUT_CLASSIFICATION	8.890603277020158E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9998311396397326	WITHOUT_CLASSIFICATION	1.6886036026751556E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999110939672298	WITHOUT_CLASSIFICATION	8.890603277020168E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9981370908056505	WITHOUT_CLASSIFICATION	0.0018629091943494947	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9998312878757687	WITHOUT_CLASSIFICATION	1.687121242312007E-4	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9976266131411684	WITHOUT_CLASSIFICATION	0.0023733868588316823	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9807355174800183	WITHOUT_CLASSIFICATION	0.01926448251998173	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9985741012134834	WITHOUT_CLASSIFICATION	0.0014258987865165388	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9998837023406706	WITHOUT_CLASSIFICATION	1.1629765932944515E-4	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999347635677617	WITHOUT_CLASSIFICATION	6.523643223824513E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999034004717815	WITHOUT_CLASSIFICATION	9.659952821851373E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.999757161644964	WITHOUT_CLASSIFICATION	2.428383550360374E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9995776255502469	WITHOUT_CLASSIFICATION	4.223744497531178E-4	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9698779690036418	WITHOUT_CLASSIFICATION	0.030122030996358275	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9997693585215043	WITHOUT_CLASSIFICATION	2.3064147849580173E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9991983959160895	WITHOUT_CLASSIFICATION	8.016040839105259E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9930695939634449	WITHOUT_CLASSIFICATION	0.006930406036555185	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9997089943331241	WITHOUT_CLASSIFICATION	2.9100566687592676E-4	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9994659388776541	WITHOUT_CLASSIFICATION	5.340611223459138E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9994212867469702	WITHOUT_CLASSIFICATION	5.787132530298587E-4	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9997650910928363	WITHOUT_CLASSIFICATION	2.349089071637004E-4	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999067063261834	WITHOUT_CLASSIFICATION	9.32936738165521E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9994821266134506	WITHOUT_CLASSIFICATION	5.178733865494797E-4	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9996404592831774	WITHOUT_CLASSIFICATION	3.595407168226516E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9987009894315633	WITHOUT_CLASSIFICATION	0.0012990105684367898	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9998251630405436	WITHOUT_CLASSIFICATION	1.748369594563801E-4	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9996557331949268	WITHOUT_CLASSIFICATION	3.442668050731512E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9996410020773502	WITHOUT_CLASSIFICATION	3.5899792264987236E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9995078823290238	WITHOUT_CLASSIFICATION	4.921176709763161E-4	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999153236008647	WITHOUT_CLASSIFICATION	8.467639913534178E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9996676025554456	WITHOUT_CLASSIFICATION	3.323974445544078E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998231832100171	WITHOUT_CLASSIFICATION	1.7681678998288425E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.999854704437325	WITHOUT_CLASSIFICATION	1.452955626749863E-4	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.99976625885291	WITHOUT_CLASSIFICATION	2.3374114708998452E-4	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9996607330635087	WITHOUT_CLASSIFICATION	3.3926693649127815E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999322517682848	WITHOUT_CLASSIFICATION	6.774823171527567E-5	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999039167292371	WITHOUT_CLASSIFICATION	9.608327076295753E-5	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9991199104151319	WITHOUT_CLASSIFICATION	8.800895848681445E-4	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9986711331772714	WITHOUT_CLASSIFICATION	0.001328866822728497	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9998373061811174	WITHOUT_CLASSIFICATION	1.6269381888246872E-4	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9998203748737164	WITHOUT_CLASSIFICATION	1.7962512628358048E-4	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9998440562651002	WITHOUT_CLASSIFICATION	1.5594373489977522E-4	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9995510243093074	WITHOUT_CLASSIFICATION	4.4897569069245907E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9998205252488802	WITHOUT_CLASSIFICATION	1.7947475111980386E-4	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9998336937801781	WITHOUT_CLASSIFICATION	1.6630621982199575E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9991007747132937	WITHOUT_CLASSIFICATION	8.992252867063763E-4	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9995649093383125	WITHOUT_CLASSIFICATION	4.3509066168753035E-4	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9998142730307688	WITHOUT_CLASSIFICATION	1.857269692312126E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9994215826858898	WITHOUT_CLASSIFICATION	5.784173141102523E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.999473573959226	WITHOUT_CLASSIFICATION	5.26426040774063E-4	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9994573569944614	WITHOUT_CLASSIFICATION	5.426430055386351E-4	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9994535871359761	WITHOUT_CLASSIFICATION	5.464128640239177E-4	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999266871415355	WITHOUT_CLASSIFICATION	7.33128584645329E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9994384385744707	WITHOUT_CLASSIFICATION	5.615614255292645E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9991007747132937	WITHOUT_CLASSIFICATION	8.992252867063763E-4	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9991117592748978	WITHOUT_CLASSIFICATION	8.882407251022839E-4	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9998691549308684	WITHOUT_CLASSIFICATION	1.3084506913160678E-4	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9995711351879294	WITHOUT_CLASSIFICATION	4.2886481207052627E-4	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9996454041063036	WITHOUT_CLASSIFICATION	3.545958936964198E-4	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9996638240172966	WITHOUT_CLASSIFICATION	3.361759827033926E-4	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9908011825807983	WITHOUT_CLASSIFICATION	0.009198817419201708	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9997227760769677	WITHOUT_CLASSIFICATION	2.7722392303235514E-4	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9997227760769677	WITHOUT_CLASSIFICATION	2.7722392303235514E-4	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9965235930968177	WITHOUT_CLASSIFICATION	0.003476406903182202	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9965235930968177	WITHOUT_CLASSIFICATION	0.003476406903182202	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9945053455327417	WITHOUT_CLASSIFICATION	0.00549465446725825	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9996626715036446	WITHOUT_CLASSIFICATION	3.3732849635542065E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9996119693416596	WITHOUT_CLASSIFICATION	3.8803065834045115E-4	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.988465100439284	WITHOUT_CLASSIFICATION	0.01153489956071598	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9996000874867662	WITHOUT_CLASSIFICATION	3.9991251323383E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9994029145508943	WITHOUT_CLASSIFICATION	5.970854491057367E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9996751521342326	WITHOUT_CLASSIFICATION	3.248478657673715E-4	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9989783595975498	WITHOUT_CLASSIFICATION	0.001021640402450253	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999475758618938	WITHOUT_CLASSIFICATION	5.242413810624161E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.999737644942607	WITHOUT_CLASSIFICATION	2.623550573930591E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.99910416501126	WITHOUT_CLASSIFICATION	8.95834988740071E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9996119693416596	WITHOUT_CLASSIFICATION	3.8803065834045115E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.999737644942607	WITHOUT_CLASSIFICATION	2.623550573930591E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9980997174784746	WITHOUT_CLASSIFICATION	0.0019002825215254685	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9996626715036446	WITHOUT_CLASSIFICATION	3.3732849635542065E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999786026326223	WITHOUT_CLASSIFICATION	2.1397367377695575E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9998514520494566	WITHOUT_CLASSIFICATION	1.4854795054334384E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9996023860683061	WITHOUT_CLASSIFICATION	3.976139316939595E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9996023860683061	WITHOUT_CLASSIFICATION	3.976139316939595E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999114193494003	WITHOUT_CLASSIFICATION	8.858065059973454E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9997982535041743	WITHOUT_CLASSIFICATION	2.017464958257621E-4	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9995621687481442	WITHOUT_CLASSIFICATION	4.378312518557638E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9990508441325117	WITHOUT_CLASSIFICATION	9.491558674882952E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9988224826263625	WITHOUT_CLASSIFICATION	0.0011775173736374995	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9996768063234882	WITHOUT_CLASSIFICATION	3.231936765117064E-4	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9991853887043265	WITHOUT_CLASSIFICATION	8.146112956735417E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9991607545425671	WITHOUT_CLASSIFICATION	8.392454574327377E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9997823183755493	WITHOUT_CLASSIFICATION	2.1768162445061186E-4	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9998269818449872	WITHOUT_CLASSIFICATION	1.730181550128663E-4	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9992697554607448	WITHOUT_CLASSIFICATION	7.302445392553109E-4	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9997743069281456	WITHOUT_CLASSIFICATION	2.256930718543212E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9912838375351553	WITHOUT_CLASSIFICATION	0.00871616246484478	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9998723865257344	WITHOUT_CLASSIFICATION	1.2761347426560004E-4	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9997385738008897	WITHOUT_CLASSIFICATION	2.614261991103484E-4	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9998013340300652	WITHOUT_CLASSIFICATION	1.9866596993470376E-4	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9997853963118312	WITHOUT_CLASSIFICATION	2.14603688168714E-4	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9993068900351321	WITHOUT_CLASSIFICATION	6.931099648679295E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9993544638984205	WITHOUT_CLASSIFICATION	6.455361015793538E-4	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9997804542971829	WITHOUT_CLASSIFICATION	2.195457028170328E-4	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9997712743249418	WITHOUT_CLASSIFICATION	2.287256750582727E-4	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9993775370520385	WITHOUT_CLASSIFICATION	6.224629479615763E-4	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9998113865563839	WITHOUT_CLASSIFICATION	1.8861344361602834E-4	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.99999265834024	WITHOUT_CLASSIFICATION	7.34165975998428E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997651916037746	WITHOUT_CLASSIFICATION	2.3480839622539983E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9996495007094341	WITHOUT_CLASSIFICATION	3.504992905658611E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9996659385492292	WITHOUT_CLASSIFICATION	3.340614507708325E-4	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991801673192581	WITHOUT_CLASSIFICATION	8.198326807418597E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9998258466242782	WITHOUT_CLASSIFICATION	1.741533757218676E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999060198428047	WITHOUT_CLASSIFICATION	9.398015719529021E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9995619851196715	WITHOUT_CLASSIFICATION	4.380148803285031E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9995778830020834	WITHOUT_CLASSIFICATION	4.2211699791656E-4	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9992145334964136	WITHOUT_CLASSIFICATION	7.854665035862801E-4	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9996944940148201	WITHOUT_CLASSIFICATION	3.055059851799039E-4	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999185680811543	WITHOUT_CLASSIFICATION	8.143191884572454E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997549049546006	WITHOUT_CLASSIFICATION	2.4509504539939987E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9998891996490528	WITHOUT_CLASSIFICATION	1.1080035094724191E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9997129633208228	WITHOUT_CLASSIFICATION	2.870366791771999E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9995332839908281	WITHOUT_CLASSIFICATION	4.6671600917199226E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.999769253583134	WITHOUT_CLASSIFICATION	2.3074641686604495E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9996659385492292	WITHOUT_CLASSIFICATION	3.340614507708325E-4	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9991801673192581	WITHOUT_CLASSIFICATION	8.198326807418597E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9998258466242782	WITHOUT_CLASSIFICATION	1.741533757218676E-4	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999111790799158	WITHOUT_CLASSIFICATION	8.882092008414839E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9998616321012225	WITHOUT_CLASSIFICATION	1.383678987775733E-4	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9995953078061487	WITHOUT_CLASSIFICATION	4.046921938513457E-4	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9996256115453727	WITHOUT_CLASSIFICATION	3.7438845462739727E-4	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985291045255159	WITHOUT_CLASSIFICATION	0.0014708954744840795	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993213379954647	WITHOUT_CLASSIFICATION	6.786620045353886E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998651030080914	WITHOUT_CLASSIFICATION	1.3489699190856146E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999088742608953	WITHOUT_CLASSIFICATION	9.112573910473543E-5	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9994657861666503	WITHOUT_CLASSIFICATION	5.342138333497052E-4	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9997421202905014	WITHOUT_CLASSIFICATION	2.5787970949863685E-4	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9996330686126762	WITHOUT_CLASSIFICATION	3.669313873238343E-4	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9995993791171336	WITHOUT_CLASSIFICATION	4.0062088286641953E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9996495007094341	WITHOUT_CLASSIFICATION	3.504992905658611E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9995778830020834	WITHOUT_CLASSIFICATION	4.2211699791656E-4	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9992145334964136	WITHOUT_CLASSIFICATION	7.854665035862801E-4	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9996944940148201	WITHOUT_CLASSIFICATION	3.055059851799039E-4	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9998616321012225	WITHOUT_CLASSIFICATION	1.383678987775733E-4	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9995953078061487	WITHOUT_CLASSIFICATION	4.046921938513457E-4	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9996256115453727	WITHOUT_CLASSIFICATION	3.7438845462739727E-4	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985291045255159	WITHOUT_CLASSIFICATION	0.0014708954744840795	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993213379954647	WITHOUT_CLASSIFICATION	6.786620045353886E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9998758797946293	WITHOUT_CLASSIFICATION	1.241202053707173E-4	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9996335444433208	WITHOUT_CLASSIFICATION	3.6645555667919933E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9997394188301875	WITHOUT_CLASSIFICATION	2.605811698126011E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998154560846568	WITHOUT_CLASSIFICATION	1.8454391534327656E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998154560846568	WITHOUT_CLASSIFICATION	1.8454391534327656E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998154560846568	WITHOUT_CLASSIFICATION	1.8454391534327656E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998154560846568	WITHOUT_CLASSIFICATION	1.8454391534327656E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998154560846568	WITHOUT_CLASSIFICATION	1.8454391534327656E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9994077389657748	WITHOUT_CLASSIFICATION	5.922610342251257E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9997990982827091	WITHOUT_CLASSIFICATION	2.009017172908277E-4	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9994380369174096	WITHOUT_CLASSIFICATION	5.61963082590349E-4	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9989348891283856	WITHOUT_CLASSIFICATION	0.0010651108716144048	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9998484096306496	WITHOUT_CLASSIFICATION	1.5159036935046848E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9996770585242696	WITHOUT_CLASSIFICATION	3.22941475730375E-4	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9997409333773744	WITHOUT_CLASSIFICATION	2.590666226255714E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9994731813342429	WITHOUT_CLASSIFICATION	5.268186657570381E-4	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9996811344732623	WITHOUT_CLASSIFICATION	3.188655267375952E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990597420856285	WITHOUT_CLASSIFICATION	9.402579143715641E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990597420856285	WITHOUT_CLASSIFICATION	9.402579143715641E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990597420856285	WITHOUT_CLASSIFICATION	9.402579143715641E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9997490734610667	WITHOUT_CLASSIFICATION	2.5092653893336555E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9970959186467938	WITHOUT_CLASSIFICATION	0.0029040813532062375	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9996924774148408	WITHOUT_CLASSIFICATION	3.0752258515914506E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998185284456858	WITHOUT_CLASSIFICATION	1.8147155431421432E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998185284456858	WITHOUT_CLASSIFICATION	1.8147155431421432E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998185284456858	WITHOUT_CLASSIFICATION	1.8147155431421432E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9997855087277758	WITHOUT_CLASSIFICATION	2.144912722242199E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9992480275353082	WITHOUT_CLASSIFICATION	7.519724646918827E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9993679184192954	WITHOUT_CLASSIFICATION	6.320815807045248E-4	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9952215756027157	WITHOUT_CLASSIFICATION	0.004778424397284164	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9952215756027157	WITHOUT_CLASSIFICATION	0.004778424397284164	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9994972279090566	WITHOUT_CLASSIFICATION	5.027720909434097E-4	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9997206926699527	WITHOUT_CLASSIFICATION	2.79307330047322E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9982564174368217	WITHOUT_CLASSIFICATION	0.0017435825631782853	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9969397642015336	WITHOUT_CLASSIFICATION	0.0030602357984663743	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9996519648854418	WITHOUT_CLASSIFICATION	3.480351145581959E-4	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9997751277531685	WITHOUT_CLASSIFICATION	2.2487224683153453E-4	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9980903576714137	WITHOUT_CLASSIFICATION	0.0019096423285863363	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9992816016860471	WITHOUT_CLASSIFICATION	7.183983139530019E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9996105996812279	WITHOUT_CLASSIFICATION	3.8940031877209794E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999111790799158	WITHOUT_CLASSIFICATION	8.882092008414839E-5	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997079543046143	WITHOUT_CLASSIFICATION	2.920456953857129E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998651030080914	WITHOUT_CLASSIFICATION	1.3489699190856146E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997079543046143	WITHOUT_CLASSIFICATION	2.920456953857129E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9996555600000487	WITHOUT_CLASSIFICATION	3.4443999995120066E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998783463969851	WITHOUT_CLASSIFICATION	1.2165360301487104E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999751976057585	WITHOUT_CLASSIFICATION	2.4802394241498074E-4	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9994167652132313	WITHOUT_CLASSIFICATION	5.832347867687085E-4	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9994167652132313	WITHOUT_CLASSIFICATION	5.832347867687085E-4	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999657553855534	WITHOUT_CLASSIFICATION	3.424461444649472E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9997587833948012	WITHOUT_CLASSIFICATION	2.412166051988369E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998645993121216	WITHOUT_CLASSIFICATION	1.354006878783841E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9997092244908857	WITHOUT_CLASSIFICATION	2.907755091141661E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9997092244908857	WITHOUT_CLASSIFICATION	2.907755091141661E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9998508498429747	WITHOUT_CLASSIFICATION	1.4915015702531104E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9998508498429747	WITHOUT_CLASSIFICATION	1.4915015702531104E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998645993121216	WITHOUT_CLASSIFICATION	1.354006878783841E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9997092244908857	WITHOUT_CLASSIFICATION	2.907755091141661E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9997092244908857	WITHOUT_CLASSIFICATION	2.907755091141661E-4	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998520781778466	WITHOUT_CLASSIFICATION	1.4792182215334635E-4	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9998645993121216	WITHOUT_CLASSIFICATION	1.354006878783841E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9998127870169349	WITHOUT_CLASSIFICATION	1.872129830651701E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9997806991011069	WITHOUT_CLASSIFICATION	2.1930089889318915E-4	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9997321611540257	WITHOUT_CLASSIFICATION	2.6783884597418714E-4	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9996716895385325	WITHOUT_CLASSIFICATION	3.2831046146757846E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9994886064967688	WITHOUT_CLASSIFICATION	5.113935032311263E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9990867970508125	WITHOUT_CLASSIFICATION	9.132029491874703E-4	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9974365788536014	WITHOUT_CLASSIFICATION	0.002563421146398562	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9879280412520068	WITHOUT_CLASSIFICATION	0.01207195874799316	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9995394358327525	WITHOUT_CLASSIFICATION	4.6056416724746805E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9984966333733616	WITHOUT_CLASSIFICATION	0.00150336662663832	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9996940112579822	WITHOUT_CLASSIFICATION	3.0598874201782597E-4	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999369827496908	WITHOUT_CLASSIFICATION	6.301725030927017E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9994802942223348	WITHOUT_CLASSIFICATION	5.197057776651733E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9998143768691717	WITHOUT_CLASSIFICATION	1.856231308281984E-4	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9990099482162946	WITHOUT_CLASSIFICATION	9.900517837054545E-4	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9997322856454128	WITHOUT_CLASSIFICATION	2.6771435458715966E-4	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9995064285187346	WITHOUT_CLASSIFICATION	4.935714812654779E-4	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9991276128473757	WITHOUT_CLASSIFICATION	8.723871526242111E-4	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9998058774210783	WITHOUT_CLASSIFICATION	1.9412257892175585E-4	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9998058774210783	WITHOUT_CLASSIFICATION	1.9412257892175585E-4	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9998058774210783	WITHOUT_CLASSIFICATION	1.9412257892175585E-4	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999508295166976	WITHOUT_CLASSIFICATION	4.917048330239794E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9998058774210783	WITHOUT_CLASSIFICATION	1.9412257892175585E-4	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9994253400390044	WITHOUT_CLASSIFICATION	5.746599609955975E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9998778800017101	WITHOUT_CLASSIFICATION	1.2211999828987754E-4	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9997251088561658	WITHOUT_CLASSIFICATION	2.7489114383424576E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9997847576110085	WITHOUT_CLASSIFICATION	2.15242388991543E-4	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.999988422506316	WITHOUT_CLASSIFICATION	1.1577493684024829E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9997192962756463	WITHOUT_CLASSIFICATION	2.8070372435366764E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9997087627626062	WITHOUT_CLASSIFICATION	2.912372373937796E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9996900111193106	WITHOUT_CLASSIFICATION	3.0998888068944534E-4	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9998125083802325	WITHOUT_CLASSIFICATION	1.8749161976755723E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9997104933396415	WITHOUT_CLASSIFICATION	2.8950666035857417E-4	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9997398260401665	WITHOUT_CLASSIFICATION	2.6017395983349983E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995302356795295	WITHOUT_CLASSIFICATION	4.697643204704385E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9995765175477778	WITHOUT_CLASSIFICATION	4.2348245222231746E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9993327026323303	WITHOUT_CLASSIFICATION	6.672973676697218E-4	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9995101027137544	WITHOUT_CLASSIFICATION	4.89897286245589E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9998637386399684	WITHOUT_CLASSIFICATION	1.36261360031669E-4	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999816737153511	WITHOUT_CLASSIFICATION	1.832628464890142E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998334082229058	WITHOUT_CLASSIFICATION	1.6659177709420702E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9975810820223431	WITHOUT_CLASSIFICATION	0.00241891797765696	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9998675894806666	WITHOUT_CLASSIFICATION	1.3241051933348067E-4	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999041304129773	WITHOUT_CLASSIFICATION	9.586958702265408E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9997075895396003	WITHOUT_CLASSIFICATION	2.924104603996692E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9997497138979666	WITHOUT_CLASSIFICATION	2.502861020333899E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9997497138979666	WITHOUT_CLASSIFICATION	2.502861020333899E-4	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.99930761634496	WITHOUT_CLASSIFICATION	6.923836550400442E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9998500704478024	WITHOUT_CLASSIFICATION	1.4992955219766575E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999530612088647	WITHOUT_CLASSIFICATION	4.693879113537011E-5	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9980578316880967	WITHOUT_CLASSIFICATION	0.0019421683119032595	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992167627477655	WITHOUT_CLASSIFICATION	7.832372522344033E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992167627477655	WITHOUT_CLASSIFICATION	7.832372522344033E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9998539566701369	WITHOUT_CLASSIFICATION	1.4604332986321638E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9997306164287306	WITHOUT_CLASSIFICATION	2.693835712693653E-4	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9956331967068244	WITHOUT_CLASSIFICATION	0.004366803293175551	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9997408252244334	WITHOUT_CLASSIFICATION	2.5917477556653047E-4	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9998914242974929	WITHOUT_CLASSIFICATION	1.0857570250712774E-4	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999323212831588	WITHOUT_CLASSIFICATION	6.767871684123913E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999323212831588	WITHOUT_CLASSIFICATION	6.767871684123913E-5	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9990058210778571	WITHOUT_CLASSIFICATION	9.941789221429803E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.999406430207694	WITHOUT_CLASSIFICATION	5.935697923059057E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.999872094941162	WITHOUT_CLASSIFICATION	1.2790505883799122E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9997101326847626	WITHOUT_CLASSIFICATION	2.8986731523748143E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9991007747132937	WITHOUT_CLASSIFICATION	8.992252867063763E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9988543781597341	WITHOUT_CLASSIFICATION	0.001145621840265901	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9986120275661933	WITHOUT_CLASSIFICATION	0.0013879724338067864	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9990598766769888	WITHOUT_CLASSIFICATION	9.401233230111421E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9945053455327417	WITHOUT_CLASSIFICATION	0.00549465446725825	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9993067156855291	WITHOUT_CLASSIFICATION	6.932843144709209E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9996541719139865	WITHOUT_CLASSIFICATION	3.458280860134505E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999649676943869	WITHOUT_CLASSIFICATION	3.5032305613144044E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999038439959482	WITHOUT_CLASSIFICATION	9.615600405169108E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997281583255586	WITHOUT_CLASSIFICATION	2.718416744413904E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9996726342311356	WITHOUT_CLASSIFICATION	3.273657688644515E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9997849446502289	WITHOUT_CLASSIFICATION	2.1505534977116575E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9980997174784746	WITHOUT_CLASSIFICATION	0.0019002825215254685	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.999461305324852	WITHOUT_CLASSIFICATION	5.386946751480302E-4	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9993192746405819	WITHOUT_CLASSIFICATION	6.807253594181345E-4	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9993192746405819	WITHOUT_CLASSIFICATION	6.807253594181345E-4	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9994887031356942	WITHOUT_CLASSIFICATION	5.112968643057352E-4	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9993239548234089	WITHOUT_CLASSIFICATION	6.76045176591013E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9968544439303301	WITHOUT_CLASSIFICATION	0.003145556069669981	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9992992988027668	WITHOUT_CLASSIFICATION	7.007011972333042E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9997995676731303	WITHOUT_CLASSIFICATION	2.0043232686969996E-4	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9994846712452267	WITHOUT_CLASSIFICATION	5.15328754773424E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9997421479283308	WITHOUT_CLASSIFICATION	2.578520716692196E-4	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9998127386853718	WITHOUT_CLASSIFICATION	1.8726131462818606E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999558681458329	WITHOUT_CLASSIFICATION	4.4131854167056315E-5	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9998175860652209	WITHOUT_CLASSIFICATION	1.8241393477916245E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9998484997419668	WITHOUT_CLASSIFICATION	1.5150025803334032E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9995998536328827	WITHOUT_CLASSIFICATION	4.0014636711717714E-4	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9984026018978364	WITHOUT_CLASSIFICATION	0.0015973981021635579	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9985615908267609	WITHOUT_CLASSIFICATION	0.0014384091732390853	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9996898913062552	WITHOUT_CLASSIFICATION	3.101086937447875E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997200158424459	WITHOUT_CLASSIFICATION	2.7998415755417554E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997241969363179	WITHOUT_CLASSIFICATION	2.75803063682136E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997248636835508	WITHOUT_CLASSIFICATION	2.751363164490878E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999449590396308	WITHOUT_CLASSIFICATION	5.5040960369326945E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999449590396308	WITHOUT_CLASSIFICATION	5.5040960369326945E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999252923211032	WITHOUT_CLASSIFICATION	7.470767889692598E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9998309471944586	WITHOUT_CLASSIFICATION	1.69052805541254E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9979503632224447	WITHOUT_CLASSIFICATION	0.0020496367775553388	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9995910139047812	WITHOUT_CLASSIFICATION	4.089860952187297E-4	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9991027082708426	WITHOUT_CLASSIFICATION	8.972917291574687E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9995998402919769	WITHOUT_CLASSIFICATION	4.001597080231207E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9977704804699633	WITHOUT_CLASSIFICATION	0.002229519530036572	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997306640211463	WITHOUT_CLASSIFICATION	2.6933597885375033E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.999679647948388	WITHOUT_CLASSIFICATION	3.2035205161194224E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9996896847796058	WITHOUT_CLASSIFICATION	3.103152203941096E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9998566517360322	WITHOUT_CLASSIFICATION	1.433482639678291E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999447338408725	WITHOUT_CLASSIFICATION	5.526615912759293E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999447338408725	WITHOUT_CLASSIFICATION	5.526615912759293E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998936852089628	WITHOUT_CLASSIFICATION	1.0631479103729806E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996760178993487	WITHOUT_CLASSIFICATION	3.2398210065143077E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9996910954275364	WITHOUT_CLASSIFICATION	3.0890457246362423E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9996284015574401	WITHOUT_CLASSIFICATION	3.715984425598266E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9997107204856875	WITHOUT_CLASSIFICATION	2.892795143124437E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9997783417073891	WITHOUT_CLASSIFICATION	2.2165829261083954E-4	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9996581402280456	WITHOUT_CLASSIFICATION	3.4185977195444727E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9997223952101595	WITHOUT_CLASSIFICATION	2.7760478984048645E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9994960151477799	WITHOUT_CLASSIFICATION	5.039848522200974E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9992235377808403	WITHOUT_CLASSIFICATION	7.764622191597171E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9993335054537247	WITHOUT_CLASSIFICATION	6.664945462753111E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9987629385237821	WITHOUT_CLASSIFICATION	0.0012370614762178631	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9987629385237821	WITHOUT_CLASSIFICATION	0.0012370614762178631	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998263849914887	WITHOUT_CLASSIFICATION	1.7361500851127175E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.999690668757758	WITHOUT_CLASSIFICATION	3.0933124224203555E-4	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9990520461218172	WITHOUT_CLASSIFICATION	9.479538781829151E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9996656373303546	WITHOUT_CLASSIFICATION	3.343626696454143E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9998488000701067	WITHOUT_CLASSIFICATION	1.511999298932961E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9991421960333648	WITHOUT_CLASSIFICATION	8.578039666351422E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992529216641268	WITHOUT_CLASSIFICATION	7.470783358732372E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999669595878431	WITHOUT_CLASSIFICATION	3.304041215693143E-5	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9996829006220723	WITHOUT_CLASSIFICATION	3.1709937792765927E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9997255937729108	WITHOUT_CLASSIFICATION	2.7440622708920534E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9993197466654292	WITHOUT_CLASSIFICATION	6.802533345708298E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9993197466654292	WITHOUT_CLASSIFICATION	6.802533345708298E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9993212043461479	WITHOUT_CLASSIFICATION	6.78795653851984E-4	DEFECT
// is this an error???	DEFECT	0.9997938789489645	WITHOUT_CLASSIFICATION	2.0612105103532243E-4	DEFECT
// is this an error???	DEFECT	0.9997938789489645	WITHOUT_CLASSIFICATION	2.0612105103532243E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9975118388947029	WITHOUT_CLASSIFICATION	0.002488161105297136	DEFECT
