// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9996269485414707	WITHOUT_CLASSIFICATION	3.730514585292459E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997390113003718	WITHOUT_CLASSIFICATION	2.609886996282249E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999452008617731	WITHOUT_CLASSIFICATION	5.479913822700282E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.999960911723018	WITHOUT_CLASSIFICATION	3.9088276982012104E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995164791442361	WITHOUT_CLASSIFICATION	4.835208557638659E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999804087313786	WITHOUT_CLASSIFICATION	1.9591268621405538E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998480771314581	WITHOUT_CLASSIFICATION	1.519228685419567E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998890011601845	WITHOUT_CLASSIFICATION	1.1099883981544177E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999617513676449	WITHOUT_CLASSIFICATION	3.824863235508676E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999967745411171	WITHOUT_CLASSIFICATION	3.225458882901944E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999739657571055	WITHOUT_CLASSIFICATION	2.6034242894478482E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999398418295861	WITHOUT_CLASSIFICATION	6.0158170413832726E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817720687016	WITHOUT_CLASSIFICATION	2.1822793129857212E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999213095687668	WITHOUT_CLASSIFICATION	7.869043123324041E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999854480383171	WITHOUT_CLASSIFICATION	1.4551961682902494E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999730462173645	WITHOUT_CLASSIFICATION	2.6953782635506157E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999500354964515	WITHOUT_CLASSIFICATION	4.99645035485165E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998480771314581	WITHOUT_CLASSIFICATION	1.519228685419567E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999598573668398	WITHOUT_CLASSIFICATION	4.0142633160143906E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999766967096464	WITHOUT_CLASSIFICATION	2.3303290353650557E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996397561390988	WITHOUT_CLASSIFICATION	3.6024386090122986E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9916935772388487	WITHOUT_CLASSIFICATION	0.008306422761151254	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999402902332643	WITHOUT_CLASSIFICATION	5.9709766735765624E-5	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9992806366564715	WITHOUT_CLASSIFICATION	7.193633435284409E-4	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.988085663416614	WITHOUT_CLASSIFICATION	0.011914336583386082	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9987952310848038	WITHOUT_CLASSIFICATION	0.001204768915196242	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.993108772037584	WITHOUT_CLASSIFICATION	0.0068912279624160485	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998428443987114	WITHOUT_CLASSIFICATION	1.571556012887017E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999199186692422	WITHOUT_CLASSIFICATION	8.008133075775561E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999885814316695	WITHOUT_CLASSIFICATION	1.1418568330534167E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9985949932085556	WITHOUT_CLASSIFICATION	0.001405006791444389	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999503832245618	WITHOUT_CLASSIFICATION	4.961677543817941E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9986762806040207	WITHOUT_CLASSIFICATION	0.0013237193959792976	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999842631579291	WITHOUT_CLASSIFICATION	1.573684207087553E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999081514835377	WITHOUT_CLASSIFICATION	9.184851646223467E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999537066919331	WITHOUT_CLASSIFICATION	4.6293308066909804E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9974172015573408	WITHOUT_CLASSIFICATION	0.002582798442659128	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999463482562809	WITHOUT_CLASSIFICATION	5.3651743718955356E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999784564602632	WITHOUT_CLASSIFICATION	2.154353973683154E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.994130239840169	WITHOUT_CLASSIFICATION	0.005869760159830972	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999864611352745	WITHOUT_CLASSIFICATION	1.3538864725565693E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9997390113003718	WITHOUT_CLASSIFICATION	2.609886996282249E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997436658586807	WITHOUT_CLASSIFICATION	2.563341413193306E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999954184988056	WITHOUT_CLASSIFICATION	4.5815011944278355E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.999372022820413	WITHOUT_CLASSIFICATION	6.279771795868836E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.999913281669326	WITHOUT_CLASSIFICATION	8.671833067407413E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9229672296707191	WITHOUT_CLASSIFICATION	0.07703277032928099	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999497531485323	WITHOUT_CLASSIFICATION	5.0246851467750466E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999960192246024	WITHOUT_CLASSIFICATION	3.980775397600975E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9799234678895543	WITHOUT_CLASSIFICATION	0.02007653211044569	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999398418295861	WITHOUT_CLASSIFICATION	6.0158170413832726E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817720687016	WITHOUT_CLASSIFICATION	2.1822793129857212E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999213095687668	WITHOUT_CLASSIFICATION	7.869043123324041E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9998321325686319	WITHOUT_CLASSIFICATION	1.6786743136801464E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999854480383171	WITHOUT_CLASSIFICATION	1.4551961682902494E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999730462173645	WITHOUT_CLASSIFICATION	2.6953782635506157E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999500354964515	WITHOUT_CLASSIFICATION	4.99645035485165E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.993480716645021	WITHOUT_CLASSIFICATION	0.006519283354978875	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.993480716645021	WITHOUT_CLASSIFICATION	0.006519283354978875	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.993480716645021	WITHOUT_CLASSIFICATION	0.006519283354978875	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999804087313786	WITHOUT_CLASSIFICATION	1.9591268621405538E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.99943300319785	WITHOUT_CLASSIFICATION	5.669968021499396E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9998722106570885	WITHOUT_CLASSIFICATION	1.277893429114035E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.999976848304419	WITHOUT_CLASSIFICATION	2.3151695581083796E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996397561390988	WITHOUT_CLASSIFICATION	3.6024386090122986E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996830858054387	WITHOUT_CLASSIFICATION	3.1691419456121605E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998428443987114	WITHOUT_CLASSIFICATION	1.571556012887017E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999199186692422	WITHOUT_CLASSIFICATION	8.008133075775561E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9985949932085556	WITHOUT_CLASSIFICATION	0.001405006791444389	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999842631579291	WITHOUT_CLASSIFICATION	1.573684207087553E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9998870076650032	WITHOUT_CLASSIFICATION	1.1299233499687463E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9998205637932949	WITHOUT_CLASSIFICATION	1.7943620670509886E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999626322928441	WITHOUT_CLASSIFICATION	3.736770715591496E-5	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999617450613828	WITHOUT_CLASSIFICATION	3.825493861720439E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999745396308045	WITHOUT_CLASSIFICATION	2.546036919546814E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999463482562809	WITHOUT_CLASSIFICATION	5.3651743718955356E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.994130239840169	WITHOUT_CLASSIFICATION	0.005869760159830972	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999695750498789	WITHOUT_CLASSIFICATION	3.042495012116267E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9996643773064736	WITHOUT_CLASSIFICATION	3.3562269352645105E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999830315785585	WITHOUT_CLASSIFICATION	1.6968421441506087E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999868403383938	WITHOUT_CLASSIFICATION	1.3159661606334766E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999208058341502	WITHOUT_CLASSIFICATION	7.919416584977169E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9984130829871432	WITHOUT_CLASSIFICATION	0.0015869170128567586	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998952799642719	WITHOUT_CLASSIFICATION	1.0472003572811213E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9715460726202539	WITHOUT_CLASSIFICATION	0.028453927379746054	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9990309206308087	WITHOUT_CLASSIFICATION	9.690793691913479E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999840695122949	WITHOUT_CLASSIFICATION	1.593048770508437E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999215778045076	WITHOUT_CLASSIFICATION	7.842219549230494E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999952833809665	WITHOUT_CLASSIFICATION	4.716619033498709E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.999669802864112	WITHOUT_CLASSIFICATION	3.3019713588803196E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9995169810821284	WITHOUT_CLASSIFICATION	4.830189178717034E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999840695122949	WITHOUT_CLASSIFICATION	1.593048770508437E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999215778045076	WITHOUT_CLASSIFICATION	7.842219549230494E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.99980602082619	WITHOUT_CLASSIFICATION	1.9397917380995327E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.99980602082619	WITHOUT_CLASSIFICATION	1.9397917380995327E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9996616709251146	WITHOUT_CLASSIFICATION	3.383290748854937E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.999866559714851	WITHOUT_CLASSIFICATION	1.334402851488903E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999886602829972	WITHOUT_CLASSIFICATION	1.1339717002932085E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9996616709251146	WITHOUT_CLASSIFICATION	3.383290748854937E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.999866559714851	WITHOUT_CLASSIFICATION	1.334402851488903E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999676383579907	WITHOUT_CLASSIFICATION	3.236164200921574E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.999930201654247	WITHOUT_CLASSIFICATION	6.979834575304788E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999789754071546	WITHOUT_CLASSIFICATION	2.1024592845378987E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999271956091345	WITHOUT_CLASSIFICATION	7.280439086556081E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999789754071546	WITHOUT_CLASSIFICATION	2.1024592845378987E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.999977738838431	WITHOUT_CLASSIFICATION	2.226116156900631E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999155929615186	WITHOUT_CLASSIFICATION	8.440703848148827E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999155929615186	WITHOUT_CLASSIFICATION	8.440703848148827E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999252715145553	WITHOUT_CLASSIFICATION	7.47284854447143E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999323329285871	WITHOUT_CLASSIFICATION	6.766707141291497E-5	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9998156959502137	WITHOUT_CLASSIFICATION	1.8430404978631972E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999723585364174	WITHOUT_CLASSIFICATION	2.7641463582575748E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.999989026000756	WITHOUT_CLASSIFICATION	1.0973999243955597E-5	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9998941475427711	WITHOUT_CLASSIFICATION	1.0585245722884943E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9998430334231596	WITHOUT_CLASSIFICATION	1.5696657684038744E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999556786999333	WITHOUT_CLASSIFICATION	4.432130006675367E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999943661862583	WITHOUT_CLASSIFICATION	5.633813741773974E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9998249910077728	WITHOUT_CLASSIFICATION	1.7500899222729218E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999912972067193	WITHOUT_CLASSIFICATION	8.702793280810069E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999308185526825	WITHOUT_CLASSIFICATION	6.918144731748432E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999917394659795	WITHOUT_CLASSIFICATION	8.260534020502768E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997780722774607	WITHOUT_CLASSIFICATION	2.219277225392995E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9996585478243947	WITHOUT_CLASSIFICATION	3.4145217560538365E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998152074308073	WITHOUT_CLASSIFICATION	1.8479256919256673E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9996709352731875	WITHOUT_CLASSIFICATION	3.290647268125491E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895671495	WITHOUT_CLASSIFICATION	1.0432850543595724E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895671495	WITHOUT_CLASSIFICATION	1.0432850543595724E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999030487711914	WITHOUT_CLASSIFICATION	9.695122880851809E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999031415824371	WITHOUT_CLASSIFICATION	9.68584175629739E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999007888202616	WITHOUT_CLASSIFICATION	9.921117973838988E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9995341216332005	WITHOUT_CLASSIFICATION	4.658783667994707E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9985146853761969	WITHOUT_CLASSIFICATION	0.0014853146238030528	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999786705454731	WITHOUT_CLASSIFICATION	2.1329454526845685E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997780722774607	WITHOUT_CLASSIFICATION	2.219277225392995E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9952239484885099	WITHOUT_CLASSIFICATION	0.004776051511490076	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9998992889934275	WITHOUT_CLASSIFICATION	1.0071100657243305E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999753309491487	WITHOUT_CLASSIFICATION	2.466905085126411E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999941697224511	WITHOUT_CLASSIFICATION	5.830277548865092E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9995538792782317	WITHOUT_CLASSIFICATION	4.46120721768207E-4	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9997745641223715	WITHOUT_CLASSIFICATION	2.2543587762846563E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999839089979322	WITHOUT_CLASSIFICATION	1.6091002067833022E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999433123654241	WITHOUT_CLASSIFICATION	5.668763457580988E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9998020234226795	WITHOUT_CLASSIFICATION	1.9797657732053555E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995241004581384	WITHOUT_CLASSIFICATION	4.75899541861634E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999995744340091	WITHOUT_CLASSIFICATION	4.255659908948899E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999447076486407	WITHOUT_CLASSIFICATION	5.5292351359221935E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999447076486407	WITHOUT_CLASSIFICATION	5.5292351359221935E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9971034855966981	WITHOUT_CLASSIFICATION	0.002896514403301851	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999763558730863	WITHOUT_CLASSIFICATION	2.3644126913755525E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999403852749561	WITHOUT_CLASSIFICATION	5.961472504388318E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999947058719464	WITHOUT_CLASSIFICATION	5.294128053588306E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999965857567844	WITHOUT_CLASSIFICATION	3.4142432156092E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999933696338762	WITHOUT_CLASSIFICATION	6.630366123780093E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9959800642926708	WITHOUT_CLASSIFICATION	0.004019935707329223	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999646882814708	WITHOUT_CLASSIFICATION	3.531171852918103E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9998486687793162	WITHOUT_CLASSIFICATION	1.5133122068377645E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9822698205390639	WITHOUT_CLASSIFICATION	0.01773017946093619	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999587874770164	WITHOUT_CLASSIFICATION	4.1212522983600705E-5	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9978690156667019	WITHOUT_CLASSIFICATION	0.0021309843332979936	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9987231072510023	WITHOUT_CLASSIFICATION	0.0012768927489976928	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999035942829381	WITHOUT_CLASSIFICATION	9.640571706185744E-5	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9819023740195734	WITHOUT_CLASSIFICATION	0.018097625980426663	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999804747819315	WITHOUT_CLASSIFICATION	1.9525218068485053E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999275991462264	WITHOUT_CLASSIFICATION	7.240085377358057E-5	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999972136501133	WITHOUT_CLASSIFICATION	2.786349886715801E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9993090582746986	WITHOUT_CLASSIFICATION	6.909417253013257E-4	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999991282672145	WITHOUT_CLASSIFICATION	8.717327855342422E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999993184917323	WITHOUT_CLASSIFICATION	6.815082676304748E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999804707044074	WITHOUT_CLASSIFICATION	1.9529295592566587E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999929699519308	WITHOUT_CLASSIFICATION	7.0300480692209666E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999111326824972	WITHOUT_CLASSIFICATION	8.886731750291366E-5	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9996900583763986	WITHOUT_CLASSIFICATION	3.0994162360153623E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999950236009547	WITHOUT_CLASSIFICATION	4.976399045263629E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9992619879799729	WITHOUT_CLASSIFICATION	7.380120200272265E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9995236134507908	WITHOUT_CLASSIFICATION	4.763865492092658E-4	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9912338374170052	WITHOUT_CLASSIFICATION	0.008766162582994844	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.999959464402836	WITHOUT_CLASSIFICATION	4.0535597164011366E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999932546816939	WITHOUT_CLASSIFICATION	6.745318306242129E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999932546816939	WITHOUT_CLASSIFICATION	6.745318306242129E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999815548110642	WITHOUT_CLASSIFICATION	1.844518893586496E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999815548110642	WITHOUT_CLASSIFICATION	1.844518893586496E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9988254514101248	WITHOUT_CLASSIFICATION	0.0011745485898751603	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999712817162576	WITHOUT_CLASSIFICATION	2.8718283742423104E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9993507911466551	WITHOUT_CLASSIFICATION	6.492088533447937E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9993507911466551	WITHOUT_CLASSIFICATION	6.492088533447937E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999050323755421	WITHOUT_CLASSIFICATION	9.496762445798963E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999659086087143	WITHOUT_CLASSIFICATION	3.4091391285689503E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999308185526825	WITHOUT_CLASSIFICATION	6.918144731748432E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999686638812887	WITHOUT_CLASSIFICATION	3.13361187112197E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999686638812887	WITHOUT_CLASSIFICATION	3.13361187112197E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999686638812887	WITHOUT_CLASSIFICATION	3.13361187112197E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999659086087143	WITHOUT_CLASSIFICATION	3.4091391285689503E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999169943994934	WITHOUT_CLASSIFICATION	8.300560050647641E-5	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999318115171719	WITHOUT_CLASSIFICATION	6.818848282810834E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9984546085072757	WITHOUT_CLASSIFICATION	0.0015453914927242502	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.999882862570176	WITHOUT_CLASSIFICATION	1.1713742982399611E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999150025364136	WITHOUT_CLASSIFICATION	8.49974635863875E-5	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9997241204994659	WITHOUT_CLASSIFICATION	2.7587950053408226E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999452008617731	WITHOUT_CLASSIFICATION	5.479913822700282E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.999960911723018	WITHOUT_CLASSIFICATION	3.9088276982012104E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995164791442361	WITHOUT_CLASSIFICATION	4.835208557638659E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999804087313786	WITHOUT_CLASSIFICATION	1.9591268621405538E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998890011601845	WITHOUT_CLASSIFICATION	1.1099883981544177E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999617513676449	WITHOUT_CLASSIFICATION	3.824863235508676E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999967745411171	WITHOUT_CLASSIFICATION	3.225458882901944E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999398418295861	WITHOUT_CLASSIFICATION	6.0158170413832726E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817720687016	WITHOUT_CLASSIFICATION	2.1822793129857212E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999213095687668	WITHOUT_CLASSIFICATION	7.869043123324041E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998790138752047	WITHOUT_CLASSIFICATION	1.2098612479525556E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999854480383171	WITHOUT_CLASSIFICATION	1.4551961682902494E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999730462173645	WITHOUT_CLASSIFICATION	2.6953782635506157E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999500354964515	WITHOUT_CLASSIFICATION	4.99645035485165E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999598573668398	WITHOUT_CLASSIFICATION	4.0142633160143906E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999766967096464	WITHOUT_CLASSIFICATION	2.3303290353650557E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998499645181765	WITHOUT_CLASSIFICATION	1.500354818234865E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999202822712868	WITHOUT_CLASSIFICATION	7.971772871324053E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996397561390988	WITHOUT_CLASSIFICATION	3.6024386090122986E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9916935772388487	WITHOUT_CLASSIFICATION	0.008306422761151254	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999402902332643	WITHOUT_CLASSIFICATION	5.9709766735765624E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996830858054387	WITHOUT_CLASSIFICATION	3.1691419456121605E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998428443987114	WITHOUT_CLASSIFICATION	1.571556012887017E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999199186692422	WITHOUT_CLASSIFICATION	8.008133075775561E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999885814316695	WITHOUT_CLASSIFICATION	1.1418568330534167E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9985949932085556	WITHOUT_CLASSIFICATION	0.001405006791444389	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999975985346832	WITHOUT_CLASSIFICATION	2.401465316952116E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999841795021072	WITHOUT_CLASSIFICATION	1.5820497892846293E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999537066919331	WITHOUT_CLASSIFICATION	4.6293308066909804E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999503832245618	WITHOUT_CLASSIFICATION	4.961677543817941E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999842631579291	WITHOUT_CLASSIFICATION	1.573684207087553E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9986762806040207	WITHOUT_CLASSIFICATION	0.0013237193959792976	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995362271950735	WITHOUT_CLASSIFICATION	4.6377280492646217E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999571214109989	WITHOUT_CLASSIFICATION	4.28785890011689E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999842631579291	WITHOUT_CLASSIFICATION	1.573684207087553E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999463482562809	WITHOUT_CLASSIFICATION	5.3651743718955356E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9974172015573408	WITHOUT_CLASSIFICATION	0.002582798442659128	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999843340536668	WITHOUT_CLASSIFICATION	1.5665946333212974E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.994130239840169	WITHOUT_CLASSIFICATION	0.005869760159830972	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999803569008497	WITHOUT_CLASSIFICATION	1.9643099150257637E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995362271950735	WITHOUT_CLASSIFICATION	4.6377280492646217E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.994130239840169	WITHOUT_CLASSIFICATION	0.005869760159830972	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9998047330217178	WITHOUT_CLASSIFICATION	1.9526697828219482E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999571353630969	WITHOUT_CLASSIFICATION	4.286463690304988E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999860840853242	WITHOUT_CLASSIFICATION	1.3915914675723395E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999885027918396	WITHOUT_CLASSIFICATION	1.1497208160443269E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9994062364036649	WITHOUT_CLASSIFICATION	5.937635963350281E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.999897440623584	WITHOUT_CLASSIFICATION	1.0255937641591835E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9994062364036649	WITHOUT_CLASSIFICATION	5.937635963350281E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9997046434157332	WITHOUT_CLASSIFICATION	2.9535658426681183E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9993894532004035	WITHOUT_CLASSIFICATION	6.105467995964836E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9971639950876616	WITHOUT_CLASSIFICATION	0.002836004912338356	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999898104915171	WITHOUT_CLASSIFICATION	1.018950848290202E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998841702603992	WITHOUT_CLASSIFICATION	1.1582973960076823E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.999901007099386	WITHOUT_CLASSIFICATION	9.89929006140319E-5	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9994804254789478	WITHOUT_CLASSIFICATION	5.195745210521943E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9984694328824917	WITHOUT_CLASSIFICATION	0.0015305671175082987	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999878212415666	WITHOUT_CLASSIFICATION	1.2178758433425595E-5	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9993313923830119	WITHOUT_CLASSIFICATION	6.686076169881025E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.999149118788778	WITHOUT_CLASSIFICATION	8.508812112219972E-4	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999556971984361	WITHOUT_CLASSIFICATION	4.430280156395769E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9995327428181124	WITHOUT_CLASSIFICATION	4.672571818875587E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.99991917801628	WITHOUT_CLASSIFICATION	8.082198371995696E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999921500881236	WITHOUT_CLASSIFICATION	7.849911876385735E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999832191354224	WITHOUT_CLASSIFICATION	1.6780864577597264E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.995403636584831	WITHOUT_CLASSIFICATION	0.004596363415168997	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9988791470567727	WITHOUT_CLASSIFICATION	0.0011208529432272633	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9998587447661276	WITHOUT_CLASSIFICATION	1.412552338724113E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999832491073726	WITHOUT_CLASSIFICATION	1.6750892627411074E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.999929980725477	WITHOUT_CLASSIFICATION	7.001927452296295E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9998441540286809	WITHOUT_CLASSIFICATION	1.558459713191023E-4	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999585810370747	WITHOUT_CLASSIFICATION	4.141896292529541E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999864611352745	WITHOUT_CLASSIFICATION	1.3538864725565693E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999649306919529	WITHOUT_CLASSIFICATION	3.506930804695846E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999472987049264	WITHOUT_CLASSIFICATION	5.270129507359311E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999945536188292	WITHOUT_CLASSIFICATION	5.4463811708665555E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999892965561616	WITHOUT_CLASSIFICATION	1.0703443838340235E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999506908589297	WITHOUT_CLASSIFICATION	4.930914107015709E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9997335062027153	WITHOUT_CLASSIFICATION	2.664937972847107E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999801451785575	WITHOUT_CLASSIFICATION	1.9854821442454598E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999834989170068	WITHOUT_CLASSIFICATION	1.650108299322805E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999806852973384	WITHOUT_CLASSIFICATION	1.931470266155886E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999940491274802	WITHOUT_CLASSIFICATION	5.950872519795362E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999737061690097	WITHOUT_CLASSIFICATION	2.629383099025806E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9990590618226388	WITHOUT_CLASSIFICATION	9.409381773611012E-4	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.99997144158068	WITHOUT_CLASSIFICATION	2.8558419320060452E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999899137333847	WITHOUT_CLASSIFICATION	1.0086266615262265E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999695750498789	WITHOUT_CLASSIFICATION	3.042495012116267E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999464111195272	WITHOUT_CLASSIFICATION	5.358888047273111E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999716710878505	WITHOUT_CLASSIFICATION	2.8328912149592387E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999890830653272	WITHOUT_CLASSIFICATION	1.0916934672847722E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999929287261039	WITHOUT_CLASSIFICATION	7.071273896121526E-6	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999952755026166	WITHOUT_CLASSIFICATION	4.724497383454809E-6	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.99908072593238	WITHOUT_CLASSIFICATION	9.192740676201327E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9889063724355263	WITHOUT_CLASSIFICATION	0.011093627564473863	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999375202571268	WITHOUT_CLASSIFICATION	6.247974287310627E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9998932196751994	WITHOUT_CLASSIFICATION	1.0678032480054812E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999323329285871	WITHOUT_CLASSIFICATION	6.766707141291497E-5	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9989348171682022	WITHOUT_CLASSIFICATION	0.0010651828317977449	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999349868525786	WITHOUT_CLASSIFICATION	6.501314742135325E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.999978369815319	WITHOUT_CLASSIFICATION	2.1630184681031614E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999951664346526	WITHOUT_CLASSIFICATION	4.833565347402348E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999953120154378	WITHOUT_CLASSIFICATION	4.687984562139178E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998221919559583	WITHOUT_CLASSIFICATION	1.7780804404168558E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.999652972966701	WITHOUT_CLASSIFICATION	3.4702703329898686E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9998378782141236	WITHOUT_CLASSIFICATION	1.6212178587647486E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999505393863951	WITHOUT_CLASSIFICATION	4.946061360487918E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999956540651821	WITHOUT_CLASSIFICATION	4.345934817973335E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999941704192954	WITHOUT_CLASSIFICATION	5.829580704584354E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998152074308073	WITHOUT_CLASSIFICATION	1.8479256919256673E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9996709352731875	WITHOUT_CLASSIFICATION	3.290647268125491E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999786705454731	WITHOUT_CLASSIFICATION	2.1329454526845685E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998221919559583	WITHOUT_CLASSIFICATION	1.7780804404168558E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999956540651821	WITHOUT_CLASSIFICATION	4.345934817973335E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999941704192954	WITHOUT_CLASSIFICATION	5.829580704584354E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999270994261124	WITHOUT_CLASSIFICATION	7.290057388765492E-5	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999848619649097	WITHOUT_CLASSIFICATION	1.513803509044613E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999133918098494	WITHOUT_CLASSIFICATION	8.660819015052023E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9995463551230078	WITHOUT_CLASSIFICATION	4.536448769922161E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999951664346526	WITHOUT_CLASSIFICATION	4.833565347402348E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999953120154378	WITHOUT_CLASSIFICATION	4.687984562139178E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999625747285673	WITHOUT_CLASSIFICATION	3.7425271432636406E-5	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999902288574473	WITHOUT_CLASSIFICATION	9.771142552711938E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999826570065832	WITHOUT_CLASSIFICATION	1.7342993416880723E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9997897611411138	WITHOUT_CLASSIFICATION	2.1023885888611012E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999850575662659	WITHOUT_CLASSIFICATION	1.4942433734021765E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9944230301837549	WITHOUT_CLASSIFICATION	0.00557696981624515	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.999971377329307	WITHOUT_CLASSIFICATION	2.86226706930643E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9998340648165801	WITHOUT_CLASSIFICATION	1.6593518341985822E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999129067579805	WITHOUT_CLASSIFICATION	8.709324201955356E-5	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999774679944903	WITHOUT_CLASSIFICATION	2.253200550966595E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9893394578987937	WITHOUT_CLASSIFICATION	0.010660542101206295	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.999964038693553	WITHOUT_CLASSIFICATION	3.5961306446955665E-5	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999957260403651	WITHOUT_CLASSIFICATION	4.273959634854619E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999974119052045	WITHOUT_CLASSIFICATION	2.5880947954522513E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999667311843642	WITHOUT_CLASSIFICATION	3.326881563585171E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999998562618072	WITHOUT_CLASSIFICATION	1.4373819269105789E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999951664346526	WITHOUT_CLASSIFICATION	4.833565347402348E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999953120154378	WITHOUT_CLASSIFICATION	4.687984562139178E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999828639566517	WITHOUT_CLASSIFICATION	1.7136043348292268E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9998172474491089	WITHOUT_CLASSIFICATION	1.827525508911385E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.999991981066819	WITHOUT_CLASSIFICATION	8.018933181128659E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999249095862535	WITHOUT_CLASSIFICATION	7.509041374660077E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999958413654473	WITHOUT_CLASSIFICATION	4.15863455270477E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999262739118004	WITHOUT_CLASSIFICATION	7.372608819956728E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9741896503203569	WITHOUT_CLASSIFICATION	0.025810349679643102	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9996926962472845	WITHOUT_CLASSIFICATION	3.073037527155294E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9997933337135047	WITHOUT_CLASSIFICATION	2.0666628649524578E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9997933337135047	WITHOUT_CLASSIFICATION	2.0666628649524578E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9984392401780446	WITHOUT_CLASSIFICATION	0.001560759821955322	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9996816088508108	WITHOUT_CLASSIFICATION	3.183911491891737E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9969493212450888	WITHOUT_CLASSIFICATION	0.0030506787549112514	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.999742043963977	WITHOUT_CLASSIFICATION	2.579560360229116E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999828085448119	WITHOUT_CLASSIFICATION	1.7191455188092505E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999664318137905	WITHOUT_CLASSIFICATION	3.35681862095004E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9998428612748548	WITHOUT_CLASSIFICATION	1.5713872514519267E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9998428612748548	WITHOUT_CLASSIFICATION	1.5713872514519267E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999552913189196	WITHOUT_CLASSIFICATION	4.470868108037619E-5	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999336457042873	WITHOUT_CLASSIFICATION	6.635429571270372E-5	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999893044607513	WITHOUT_CLASSIFICATION	1.0695539248762394E-5	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999757704077135	WITHOUT_CLASSIFICATION	2.422959228654733E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999426161168491	WITHOUT_CLASSIFICATION	5.738388315082326E-5	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9998247659132755	WITHOUT_CLASSIFICATION	1.7523408672452244E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999901836173554	WITHOUT_CLASSIFICATION	9.816382644699387E-6	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9997886751557787	WITHOUT_CLASSIFICATION	2.1132484422120833E-4	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999411533613187	WITHOUT_CLASSIFICATION	5.884663868123808E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999968011453374	WITHOUT_CLASSIFICATION	3.1988546625833915E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.999988500063472	WITHOUT_CLASSIFICATION	1.1499936528050744E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999949314191902	WITHOUT_CLASSIFICATION	5.068580809852943E-6	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9997273880974087	WITHOUT_CLASSIFICATION	2.7261190259130646E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9998975360280349	WITHOUT_CLASSIFICATION	1.0246397196510946E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.999563440759482	WITHOUT_CLASSIFICATION	4.365592405180066E-4	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999840136236723	WITHOUT_CLASSIFICATION	1.5986376327771994E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999838432590976	WITHOUT_CLASSIFICATION	1.6156740902366994E-5	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999925057424636	WITHOUT_CLASSIFICATION	7.494257536383904E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999564180987995	WITHOUT_CLASSIFICATION	4.358190120049369E-5	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999625237191976	WITHOUT_CLASSIFICATION	3.747628080234765E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.999517270898189	WITHOUT_CLASSIFICATION	4.827291018109327E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999993067291929	WITHOUT_CLASSIFICATION	6.932708069940754E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999857491148874	WITHOUT_CLASSIFICATION	1.4250885112597296E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9993481298974388	WITHOUT_CLASSIFICATION	6.518701025612242E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.999797649858385	WITHOUT_CLASSIFICATION	2.0235014161492358E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999896811573585	WITHOUT_CLASSIFICATION	1.0318842641486073E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999841635164297	WITHOUT_CLASSIFICATION	1.583648357036983E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9998246069683895	WITHOUT_CLASSIFICATION	1.7539303161047322E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.999908041462362	WITHOUT_CLASSIFICATION	9.195853763804367E-5	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999965913866876	WITHOUT_CLASSIFICATION	3.4086133123811787E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999903274591512	WITHOUT_CLASSIFICATION	9.672540848721743E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999469892014644	WITHOUT_CLASSIFICATION	5.301079853556393E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9997295417714128	WITHOUT_CLASSIFICATION	2.704582285872353E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999864395944782	WITHOUT_CLASSIFICATION	1.3560405521850834E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9994999172557074	WITHOUT_CLASSIFICATION	5.0008274429262E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9989714526370791	WITHOUT_CLASSIFICATION	0.001028547362920877	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999970001002185	WITHOUT_CLASSIFICATION	2.99989978155199E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9998684287670264	WITHOUT_CLASSIFICATION	1.3157123297361767E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999897104347962	WITHOUT_CLASSIFICATION	1.0289565203683987E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999615069566303	WITHOUT_CLASSIFICATION	3.8493043369575264E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999923182314489	WITHOUT_CLASSIFICATION	7.681768551215282E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9998821308359553	WITHOUT_CLASSIFICATION	1.1786916404460714E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999675275661732	WITHOUT_CLASSIFICATION	3.247243382678341E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9998900891065488	WITHOUT_CLASSIFICATION	1.0991089345123399E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9992741090575243	WITHOUT_CLASSIFICATION	7.258909424755648E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999923182314489	WITHOUT_CLASSIFICATION	7.681768551215282E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999675275661732	WITHOUT_CLASSIFICATION	3.247243382678341E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9985972136669452	WITHOUT_CLASSIFICATION	0.0014027863330548268	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.999966072089741	WITHOUT_CLASSIFICATION	3.3927910258965854E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.999873723277391	WITHOUT_CLASSIFICATION	1.2627672260907523E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999929854403206	WITHOUT_CLASSIFICATION	7.0145596793918295E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999615069566303	WITHOUT_CLASSIFICATION	3.8493043369575264E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999615069566303	WITHOUT_CLASSIFICATION	3.8493043369575264E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999923182314489	WITHOUT_CLASSIFICATION	7.681768551215282E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999872427662393	WITHOUT_CLASSIFICATION	1.2757233760695042E-5	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999406215350528	WITHOUT_CLASSIFICATION	5.93784649471145E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.99997265039382	WITHOUT_CLASSIFICATION	2.734960618000522E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.99997265039382	WITHOUT_CLASSIFICATION	2.734960618000522E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998773118411103	WITHOUT_CLASSIFICATION	1.2268815888973086E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998228875506551	WITHOUT_CLASSIFICATION	1.7711244934503177E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999370231377512	WITHOUT_CLASSIFICATION	6.297686224875574E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999370231377512	WITHOUT_CLASSIFICATION	6.297686224875574E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9991670828780249	WITHOUT_CLASSIFICATION	8.329171219752033E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998228875506551	WITHOUT_CLASSIFICATION	1.7711244934503177E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999370231377512	WITHOUT_CLASSIFICATION	6.297686224875574E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9991670828780249	WITHOUT_CLASSIFICATION	8.329171219752033E-4	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999039462198023	WITHOUT_CLASSIFICATION	9.605378019764744E-5	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9996000164258585	WITHOUT_CLASSIFICATION	3.999835741414483E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9998582024285217	WITHOUT_CLASSIFICATION	1.4179757147833255E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9998107367671476	WITHOUT_CLASSIFICATION	1.8926323285246483E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9998118067825208	WITHOUT_CLASSIFICATION	1.881932174792967E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999810757172367	WITHOUT_CLASSIFICATION	1.8924282763289973E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998821522384446	WITHOUT_CLASSIFICATION	1.1784776155539008E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9997967298758306	WITHOUT_CLASSIFICATION	2.0327012416952118E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9997865048619401	WITHOUT_CLASSIFICATION	2.134951380599898E-4	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9998777313111296	WITHOUT_CLASSIFICATION	1.2226868887044452E-4	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999927342393535	WITHOUT_CLASSIFICATION	7.265760646521043E-6	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999961821363367	WITHOUT_CLASSIFICATION	3.817863663378018E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999949682552234	WITHOUT_CLASSIFICATION	5.0317447766050266E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999893969421382	WITHOUT_CLASSIFICATION	1.0603057861815606E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9998414158656218	WITHOUT_CLASSIFICATION	1.5858413437824854E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9998620406377058	WITHOUT_CLASSIFICATION	1.3795936229428404E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.999279616635332	WITHOUT_CLASSIFICATION	7.203833646679933E-4	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9998880790511306	WITHOUT_CLASSIFICATION	1.1192094886937894E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999962799614857	WITHOUT_CLASSIFICATION	3.7200385144045363E-6	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999675461238953	WITHOUT_CLASSIFICATION	3.245387610468485E-5	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999856701528428	WITHOUT_CLASSIFICATION	1.4329847157241775E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999827845776713	WITHOUT_CLASSIFICATION	1.7215422328648212E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999828813482213	WITHOUT_CLASSIFICATION	1.7118651778683577E-5	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999942285451909	WITHOUT_CLASSIFICATION	5.771454809082025E-6	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9998896596650775	WITHOUT_CLASSIFICATION	1.1034033492259295E-4	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999434654299617	WITHOUT_CLASSIFICATION	5.653457003834737E-5	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999917495757362	WITHOUT_CLASSIFICATION	8.250424263842956E-6	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999142525986203	WITHOUT_CLASSIFICATION	8.574740137957422E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9997815857127759	WITHOUT_CLASSIFICATION	2.1841428722409512E-4	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999846611805442	WITHOUT_CLASSIFICATION	1.5338819455761752E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998395222405205	WITHOUT_CLASSIFICATION	1.604777594795008E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999140316000266	WITHOUT_CLASSIFICATION	8.596839997339203E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999595715205941	WITHOUT_CLASSIFICATION	4.042847940597104E-5	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9998858131092069	WITHOUT_CLASSIFICATION	1.1418689079313337E-4	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999923894901912	WITHOUT_CLASSIFICATION	7.610509808849156E-6	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998718786842551	WITHOUT_CLASSIFICATION	1.281213157448394E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998316266833447	WITHOUT_CLASSIFICATION	1.6837331665534676E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998316266833447	WITHOUT_CLASSIFICATION	1.6837331665534676E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998316266833447	WITHOUT_CLASSIFICATION	1.6837331665534676E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999994793681052	WITHOUT_CLASSIFICATION	5.206318949181734E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9997989265959704	WITHOUT_CLASSIFICATION	2.0107340402970923E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9948571802592531	WITHOUT_CLASSIFICATION	0.005142819740746944	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9989849201627428	WITHOUT_CLASSIFICATION	0.001015079837257284	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999600212393731	WITHOUT_CLASSIFICATION	3.997876062697545E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999627140235319	WITHOUT_CLASSIFICATION	3.728597646804661E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.999998525662463	WITHOUT_CLASSIFICATION	1.4743375370375415E-6	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9998895258316061	WITHOUT_CLASSIFICATION	1.1047416839389529E-4	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999338686114889	WITHOUT_CLASSIFICATION	6.6131388511036E-5	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999708892315204	WITHOUT_CLASSIFICATION	2.911076847955663E-5	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9964229986062969	WITHOUT_CLASSIFICATION	0.003577001393703032	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.999927048239685	WITHOUT_CLASSIFICATION	7.295176031496015E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999824583674018	WITHOUT_CLASSIFICATION	1.7541632598255606E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9998846155685494	WITHOUT_CLASSIFICATION	1.1538443145065591E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9994419641839833	WITHOUT_CLASSIFICATION	5.580358160167144E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999995458018061	WITHOUT_CLASSIFICATION	4.5419819393938007E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999813774080233	WITHOUT_CLASSIFICATION	1.862259197669946E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999935583413434	WITHOUT_CLASSIFICATION	6.441658656503547E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999594961429967	WITHOUT_CLASSIFICATION	4.050385700327362E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9998137274294389	WITHOUT_CLASSIFICATION	1.8627257056115745E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9998579134513198	WITHOUT_CLASSIFICATION	1.4208654868014882E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9996383201236246	WITHOUT_CLASSIFICATION	3.61679876375432E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9998450171113352	WITHOUT_CLASSIFICATION	1.5498288866480512E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9983469091096645	WITHOUT_CLASSIFICATION	0.001653090890335496	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999988461181701	WITHOUT_CLASSIFICATION	1.1538818298113273E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999803370418181	WITHOUT_CLASSIFICATION	1.9662958181943703E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999934959565934	WITHOUT_CLASSIFICATION	6.5040434067264375E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999881530935139	WITHOUT_CLASSIFICATION	1.1846906486229014E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999330578255361	WITHOUT_CLASSIFICATION	6.69421744639134E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999636578326291	WITHOUT_CLASSIFICATION	3.6342167370912396E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.999954827015316	WITHOUT_CLASSIFICATION	4.5172984684050824E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9967517246919508	WITHOUT_CLASSIFICATION	0.003248275308049246	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9995269217220655	WITHOUT_CLASSIFICATION	4.7307827793458543E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999933681124641	WITHOUT_CLASSIFICATION	6.631887535897275E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9998560628279652	WITHOUT_CLASSIFICATION	1.4393717203476888E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9998091239918205	WITHOUT_CLASSIFICATION	1.908760081794912E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999887030606397	WITHOUT_CLASSIFICATION	1.1296939360309581E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9997930003161016	WITHOUT_CLASSIFICATION	2.069996838984239E-4	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999588276733913	WITHOUT_CLASSIFICATION	4.1172326608708433E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999628536334977	WITHOUT_CLASSIFICATION	3.714636650220078E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999763342165693	WITHOUT_CLASSIFICATION	2.3665783430738066E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999658014108734	WITHOUT_CLASSIFICATION	3.4198589126609746E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999262739118004	WITHOUT_CLASSIFICATION	7.372608819956728E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999960342970888	WITHOUT_CLASSIFICATION	3.965702911163792E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999297328369238	WITHOUT_CLASSIFICATION	7.026716307618343E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9997336772416081	WITHOUT_CLASSIFICATION	2.663227583918066E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9956125517927872	WITHOUT_CLASSIFICATION	0.004387448207212765	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9968973034021545	WITHOUT_CLASSIFICATION	0.0031026965978454063	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9979603123847894	WITHOUT_CLASSIFICATION	0.0020396876152104703	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999062598842945	WITHOUT_CLASSIFICATION	9.374011570548537E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999843028231497	WITHOUT_CLASSIFICATION	1.5697176850349055E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9986784016937504	WITHOUT_CLASSIFICATION	0.0013215983062495374	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998845153666802	WITHOUT_CLASSIFICATION	1.1548463331985192E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999433799235802	WITHOUT_CLASSIFICATION	5.662007641985147E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999890888963647	WITHOUT_CLASSIFICATION	1.0911103635283522E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999424340738617	WITHOUT_CLASSIFICATION	5.756592613819959E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9978329764503325	WITHOUT_CLASSIFICATION	0.002167023549667467	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999663832904465	WITHOUT_CLASSIFICATION	3.361670955353023E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999525003844968	WITHOUT_CLASSIFICATION	4.749961550326783E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999096829261657	WITHOUT_CLASSIFICATION	9.031707383429145E-5	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998422744343711	WITHOUT_CLASSIFICATION	1.5772556562894613E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9998604789186794	WITHOUT_CLASSIFICATION	1.39521081320625E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9995676395822362	WITHOUT_CLASSIFICATION	4.3236041776379444E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999135177246363	WITHOUT_CLASSIFICATION	8.648227536371672E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9902484440031482	WITHOUT_CLASSIFICATION	0.00975155599685194	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999957821222602	WITHOUT_CLASSIFICATION	4.2178777397967657E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.999899115029192	WITHOUT_CLASSIFICATION	1.0088497080789407E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999893162327499	WITHOUT_CLASSIFICATION	1.0683767250085364E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999893162327499	WITHOUT_CLASSIFICATION	1.0683767250085364E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999957821222602	WITHOUT_CLASSIFICATION	4.2178777397967657E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.999943276298668	WITHOUT_CLASSIFICATION	5.6723701332048296E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.999923394510438	WITHOUT_CLASSIFICATION	7.660548956208185E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.999923394510438	WITHOUT_CLASSIFICATION	7.660548956208185E-5	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.999950571980166	WITHOUT_CLASSIFICATION	4.9428019834092236E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999801262476307	WITHOUT_CLASSIFICATION	1.9873752369404873E-5	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9998970730167361	WITHOUT_CLASSIFICATION	1.0292698326393669E-4	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9973993328971695	WITHOUT_CLASSIFICATION	0.0026006671028304318	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9998795201931213	WITHOUT_CLASSIFICATION	1.20479806878651E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999684001129328	WITHOUT_CLASSIFICATION	3.159988706712868E-5	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999176164776137	WITHOUT_CLASSIFICATION	8.238352238632306E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9997483624939943	WITHOUT_CLASSIFICATION	2.5163750600558826E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9997487938648497	WITHOUT_CLASSIFICATION	2.512061351502751E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9998887474901871	WITHOUT_CLASSIFICATION	1.1125250981286278E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999825698863382	WITHOUT_CLASSIFICATION	1.7430113661819124E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999985273998362	WITHOUT_CLASSIFICATION	1.4726001637981472E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999802840132408	WITHOUT_CLASSIFICATION	1.9715986759207676E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999633047341613	WITHOUT_CLASSIFICATION	3.669526583866592E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999495688908967	WITHOUT_CLASSIFICATION	5.0431109103303397E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999854855282911	WITHOUT_CLASSIFICATION	1.4514471708960543E-5	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999900564336937	WITHOUT_CLASSIFICATION	9.943566306353377E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9998711958037023	WITHOUT_CLASSIFICATION	1.2880419629761574E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.997476056711121	WITHOUT_CLASSIFICATION	0.002523943288878913	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9998624406817728	WITHOUT_CLASSIFICATION	1.3755931822724898E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999991139842597	WITHOUT_CLASSIFICATION	8.860157403573434E-7	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.99963533542194	WITHOUT_CLASSIFICATION	3.6466457806003355E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998565018293465	WITHOUT_CLASSIFICATION	1.4349817065346137E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999815049005001	WITHOUT_CLASSIFICATION	1.8495099499904987E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999815049005001	WITHOUT_CLASSIFICATION	1.8495099499904987E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9997488288150418	WITHOUT_CLASSIFICATION	2.511711849581087E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9991252891217217	WITHOUT_CLASSIFICATION	8.747108782784096E-4	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9997570994464288	WITHOUT_CLASSIFICATION	2.4290055357107702E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998987351787086	WITHOUT_CLASSIFICATION	1.012648212914656E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999816258300446	WITHOUT_CLASSIFICATION	1.837416995541196E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9998520962307403	WITHOUT_CLASSIFICATION	1.4790376925961888E-4	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999567609695249	WITHOUT_CLASSIFICATION	4.3239030475015913E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999326405175042	WITHOUT_CLASSIFICATION	6.735948249577371E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997798164716645	WITHOUT_CLASSIFICATION	2.2018352833553194E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9994985050231813	WITHOUT_CLASSIFICATION	5.014949768186977E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999603816983706	WITHOUT_CLASSIFICATION	3.961830162939604E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.999826661407616	WITHOUT_CLASSIFICATION	1.7333859238405244E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9998097530591029	WITHOUT_CLASSIFICATION	1.9024694089712565E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998982397196442	WITHOUT_CLASSIFICATION	1.0176028035574941E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999894070172014	WITHOUT_CLASSIFICATION	1.0592982798682576E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999872698976647	WITHOUT_CLASSIFICATION	1.2730102335203567E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.999350234477465	WITHOUT_CLASSIFICATION	6.497655225349976E-4	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999872698976647	WITHOUT_CLASSIFICATION	1.2730102335203567E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998952799642719	WITHOUT_CLASSIFICATION	1.0472003572811213E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999076035343143	WITHOUT_CLASSIFICATION	9.239646568566912E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9998415119651486	WITHOUT_CLASSIFICATION	1.5848803485144934E-4	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.999995408181679	WITHOUT_CLASSIFICATION	4.591818320947862E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9996290681450304	WITHOUT_CLASSIFICATION	3.7093185496956267E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9995559191956509	WITHOUT_CLASSIFICATION	4.440808043491149E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999750117208692	WITHOUT_CLASSIFICATION	2.498827913073618E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999731445553387	WITHOUT_CLASSIFICATION	2.6855444661357915E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999894306573246	WITHOUT_CLASSIFICATION	1.0569342675380703E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999545045198985	WITHOUT_CLASSIFICATION	4.5495480101466955E-5	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999480587911822	WITHOUT_CLASSIFICATION	5.1941208817752094E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9998784903891996	WITHOUT_CLASSIFICATION	1.215096108003438E-4	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999564027804554	WITHOUT_CLASSIFICATION	4.35972195445258E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999964567336869	WITHOUT_CLASSIFICATION	3.5432663131159543E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999213041659295	WITHOUT_CLASSIFICATION	7.86958340704713E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999401347410343	WITHOUT_CLASSIFICATION	5.986525896586063E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9998135936293014	WITHOUT_CLASSIFICATION	1.8640637069860266E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9998642190588416	WITHOUT_CLASSIFICATION	1.3578094115837208E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9998421820922172	WITHOUT_CLASSIFICATION	1.5781790778279334E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999828585196436	WITHOUT_CLASSIFICATION	1.7141480356331623E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9995024582466825	WITHOUT_CLASSIFICATION	4.975417533174273E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9992620088682651	WITHOUT_CLASSIFICATION	7.37991131734953E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999966638308531	WITHOUT_CLASSIFICATION	3.3361691468399073E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999823424850733	WITHOUT_CLASSIFICATION	1.765751492666541E-5	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999882412340412	WITHOUT_CLASSIFICATION	1.1758765958881757E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999452008617731	WITHOUT_CLASSIFICATION	5.479913822700282E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.999960911723018	WITHOUT_CLASSIFICATION	3.9088276982012104E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997798164716645	WITHOUT_CLASSIFICATION	2.2018352833553194E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9994985050231813	WITHOUT_CLASSIFICATION	5.014949768186977E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999603816983706	WITHOUT_CLASSIFICATION	3.961830162939604E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999582078030469	WITHOUT_CLASSIFICATION	4.1792196953162827E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9997797923248772	WITHOUT_CLASSIFICATION	2.2020767512278473E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999860820669451	WITHOUT_CLASSIFICATION	1.3917933055089545E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9998067800018009	WITHOUT_CLASSIFICATION	1.9321999819906394E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.999826211171627	WITHOUT_CLASSIFICATION	1.7378882837294597E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9998254214997722	WITHOUT_CLASSIFICATION	1.7457850022774637E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9997027206112249	WITHOUT_CLASSIFICATION	2.972793887750536E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9996517232473623	WITHOUT_CLASSIFICATION	3.482767526377158E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.999925100278266	WITHOUT_CLASSIFICATION	7.489972173402019E-5	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999814205464185	WITHOUT_CLASSIFICATION	1.857945358157121E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997918223680933	WITHOUT_CLASSIFICATION	2.0817763190681128E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997918223680933	WITHOUT_CLASSIFICATION	2.0817763190681128E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999822309329561	WITHOUT_CLASSIFICATION	1.776906704388666E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999261264200914	WITHOUT_CLASSIFICATION	7.387357990863427E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857718304156	WITHOUT_CLASSIFICATION	1.4228169584467178E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999859333835373	WITHOUT_CLASSIFICATION	1.4066616462737303E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999059567966884	WITHOUT_CLASSIFICATION	9.404320331162348E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999989055063259	WITHOUT_CLASSIFICATION	1.0944936740999661E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999898339156663	WITHOUT_CLASSIFICATION	1.0166084333702694E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887150884593	WITHOUT_CLASSIFICATION	1.1284911540604395E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999690858320124	WITHOUT_CLASSIFICATION	3.0914167987525714E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999963084968279	WITHOUT_CLASSIFICATION	3.6915031720784E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997876421296	WITHOUT_CLASSIFICATION	2.12357870426366E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999691609293688	WITHOUT_CLASSIFICATION	3.0839070631158603E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999952836692528	WITHOUT_CLASSIFICATION	4.716330747128831E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.998693742735615	WITHOUT_CLASSIFICATION	0.001306257264384979	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995496106545402	WITHOUT_CLASSIFICATION	4.5038934545993257E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996316563715157	WITHOUT_CLASSIFICATION	3.683436284841658E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999739657571055	WITHOUT_CLASSIFICATION	2.6034242894478482E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995164791442361	WITHOUT_CLASSIFICATION	4.835208557638659E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999804087313786	WITHOUT_CLASSIFICATION	1.9591268621405538E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998890011601845	WITHOUT_CLASSIFICATION	1.1099883981544177E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999617513676449	WITHOUT_CLASSIFICATION	3.824863235508676E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999967745411171	WITHOUT_CLASSIFICATION	3.225458882901944E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999398418295861	WITHOUT_CLASSIFICATION	6.0158170413832726E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817720687016	WITHOUT_CLASSIFICATION	2.1822793129857212E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999213095687668	WITHOUT_CLASSIFICATION	7.869043123324041E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998790138752047	WITHOUT_CLASSIFICATION	1.2098612479525556E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.999854480383171	WITHOUT_CLASSIFICATION	1.4551961682902494E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999730462173645	WITHOUT_CLASSIFICATION	2.6953782635506157E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999500354964515	WITHOUT_CLASSIFICATION	4.99645035485165E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999598573668398	WITHOUT_CLASSIFICATION	4.0142633160143906E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999766967096464	WITHOUT_CLASSIFICATION	2.3303290353650557E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996397561390988	WITHOUT_CLASSIFICATION	3.6024386090122986E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9916935772388487	WITHOUT_CLASSIFICATION	0.008306422761151254	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999402902332643	WITHOUT_CLASSIFICATION	5.9709766735765624E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996830858054387	WITHOUT_CLASSIFICATION	3.1691419456121605E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998428443987114	WITHOUT_CLASSIFICATION	1.571556012887017E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999199186692422	WITHOUT_CLASSIFICATION	8.008133075775561E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999885814316695	WITHOUT_CLASSIFICATION	1.1418568330534167E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999975985346832	WITHOUT_CLASSIFICATION	2.401465316952116E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999503832245618	WITHOUT_CLASSIFICATION	4.961677543817941E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9986762806040207	WITHOUT_CLASSIFICATION	0.0013237193959792976	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995362271950735	WITHOUT_CLASSIFICATION	4.6377280492646217E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999537066919331	WITHOUT_CLASSIFICATION	4.6293308066909804E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9974172015573408	WITHOUT_CLASSIFICATION	0.002582798442659128	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999463482562809	WITHOUT_CLASSIFICATION	5.3651743718955356E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.994130239840169	WITHOUT_CLASSIFICATION	0.005869760159830972	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999822309329561	WITHOUT_CLASSIFICATION	1.776906704388666E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999261264200914	WITHOUT_CLASSIFICATION	7.387357990863427E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857718304156	WITHOUT_CLASSIFICATION	1.4228169584467178E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999859333835373	WITHOUT_CLASSIFICATION	1.4066616462737303E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999898339156663	WITHOUT_CLASSIFICATION	1.0166084333702694E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887150884593	WITHOUT_CLASSIFICATION	1.1284911540604395E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9965272753354656	WITHOUT_CLASSIFICATION	0.0034727246645343797	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999860840853242	WITHOUT_CLASSIFICATION	1.3915914675723395E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999885027918396	WITHOUT_CLASSIFICATION	1.1497208160443269E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997876421296	WITHOUT_CLASSIFICATION	2.12357870426366E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999691609293688	WITHOUT_CLASSIFICATION	3.0839070631158603E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999952836692528	WITHOUT_CLASSIFICATION	4.716330747128831E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.998693742735615	WITHOUT_CLASSIFICATION	0.001306257264384979	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996316563715157	WITHOUT_CLASSIFICATION	3.683436284841658E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999603997260679	WITHOUT_CLASSIFICATION	3.96002739321037E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999603997260679	WITHOUT_CLASSIFICATION	3.96002739321037E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999972712206363	WITHOUT_CLASSIFICATION	2.728779363605249E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9995769034983887	WITHOUT_CLASSIFICATION	4.230965016112964E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999890467503206	WITHOUT_CLASSIFICATION	1.0953249679445625E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999707673852807	WITHOUT_CLASSIFICATION	2.923261471929119E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9998624006907283	WITHOUT_CLASSIFICATION	1.3759930927174E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9996269485414707	WITHOUT_CLASSIFICATION	3.730514585292459E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999817281360463	WITHOUT_CLASSIFICATION	1.827186395369515E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999091365694989	WITHOUT_CLASSIFICATION	9.086343050112917E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999817281360463	WITHOUT_CLASSIFICATION	1.827186395369515E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9988957271404142	WITHOUT_CLASSIFICATION	0.0011042728595857885	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999271574768666	WITHOUT_CLASSIFICATION	7.284252313343345E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998543458697091	WITHOUT_CLASSIFICATION	1.456541302910035E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998543458697091	WITHOUT_CLASSIFICATION	1.456541302910035E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9997329486735846	WITHOUT_CLASSIFICATION	2.6705132641525396E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9994922924820168	WITHOUT_CLASSIFICATION	5.077075179832532E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999653875018584	WITHOUT_CLASSIFICATION	3.461249814158363E-5	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9998985557555334	WITHOUT_CLASSIFICATION	1.0144424446659733E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9996834939197216	WITHOUT_CLASSIFICATION	3.165060802784532E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999412823876795	WITHOUT_CLASSIFICATION	5.871761232034882E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9989252951842934	WITHOUT_CLASSIFICATION	0.0010747048157066087	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999791319421734	WITHOUT_CLASSIFICATION	2.0868057826725254E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998743205757258	WITHOUT_CLASSIFICATION	1.2567942427423574E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9998790216325668	WITHOUT_CLASSIFICATION	1.2097836743316063E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999214679487554	WITHOUT_CLASSIFICATION	7.853205124467987E-5	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998655151321797	WITHOUT_CLASSIFICATION	1.3448486782031117E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999514466232672	WITHOUT_CLASSIFICATION	4.855337673282251E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999514466232672	WITHOUT_CLASSIFICATION	4.855337673282251E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999387439279221	WITHOUT_CLASSIFICATION	6.125607207792312E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9997300343534756	WITHOUT_CLASSIFICATION	2.6996564652429037E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9989969018489596	WITHOUT_CLASSIFICATION	0.0010030981510403072	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.999114871194807	WITHOUT_CLASSIFICATION	8.851288051928753E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9998006987157148	WITHOUT_CLASSIFICATION	1.9930128428531684E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999876983638428	WITHOUT_CLASSIFICATION	1.2301636157145375E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999900107641823	WITHOUT_CLASSIFICATION	9.98923581787791E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9998708111410697	WITHOUT_CLASSIFICATION	1.291888589303259E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999546292646266	WITHOUT_CLASSIFICATION	4.5370735373277084E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999645153850506	WITHOUT_CLASSIFICATION	3.548461494927006E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.999981995560712	WITHOUT_CLASSIFICATION	1.8004439288039917E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999697628640973	WITHOUT_CLASSIFICATION	3.023713590265445E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999859733785015	WITHOUT_CLASSIFICATION	1.4026621498505354E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9840638214380893	WITHOUT_CLASSIFICATION	0.01593617856191066	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998987351787086	WITHOUT_CLASSIFICATION	1.012648212914656E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999264790801249	WITHOUT_CLASSIFICATION	7.352091987512877E-5	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999222525953417	WITHOUT_CLASSIFICATION	7.774740465817596E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999266541955729	WITHOUT_CLASSIFICATION	7.334580442706069E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9994482762165624	WITHOUT_CLASSIFICATION	5.517237834376148E-4	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9997325565074359	WITHOUT_CLASSIFICATION	2.6744349256417567E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9997577268126324	WITHOUT_CLASSIFICATION	2.4227318736745506E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9994369862958641	WITHOUT_CLASSIFICATION	5.630137041359004E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.999951516427319	WITHOUT_CLASSIFICATION	4.8483572680907975E-5	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999839897158628	WITHOUT_CLASSIFICATION	1.6010284137226603E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999480722334642	WITHOUT_CLASSIFICATION	5.192776653583733E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999956852147378	WITHOUT_CLASSIFICATION	4.314785262190426E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999956852147378	WITHOUT_CLASSIFICATION	4.314785262190426E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9987960919457235	WITHOUT_CLASSIFICATION	0.0012039080542764987	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9993419007385803	WITHOUT_CLASSIFICATION	6.580992614196373E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998493868850714	WITHOUT_CLASSIFICATION	1.506131149285531E-4	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992576771074918	WITHOUT_CLASSIFICATION	7.423228925081392E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999909018195131	WITHOUT_CLASSIFICATION	9.09818048690381E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992572622500484	WITHOUT_CLASSIFICATION	7.42737749951609E-4	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999029461052904	WITHOUT_CLASSIFICATION	9.70538947096852E-5	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.998928250826068	WITHOUT_CLASSIFICATION	0.0010717491739320544	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999650742453141	WITHOUT_CLASSIFICATION	3.49257546858067E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998703636194388	WITHOUT_CLASSIFICATION	1.296363805610773E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999397672991254	WITHOUT_CLASSIFICATION	6.023270087471399E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997667188899253	WITHOUT_CLASSIFICATION	2.3328111007460872E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999973904191743	WITHOUT_CLASSIFICATION	2.6095808256071682E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.999118008282858	WITHOUT_CLASSIFICATION	8.819917171419935E-4	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999421506800329	WITHOUT_CLASSIFICATION	5.784931996718906E-5	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999519068226717	WITHOUT_CLASSIFICATION	4.8093177328272395E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999997419941579	WITHOUT_CLASSIFICATION	2.5800584217136516E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9683583277369218	WITHOUT_CLASSIFICATION	0.031641672263078235	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9932058451138501	WITHOUT_CLASSIFICATION	0.006794154886149844	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999598619269721	WITHOUT_CLASSIFICATION	4.01380730278072E-5	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999383322485791	WITHOUT_CLASSIFICATION	6.166775142088082E-5	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999802653238091	WITHOUT_CLASSIFICATION	1.9734676190817052E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998790138752047	WITHOUT_CLASSIFICATION	1.2098612479525556E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998499645181765	WITHOUT_CLASSIFICATION	1.500354818234865E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995362271950735	WITHOUT_CLASSIFICATION	4.6377280492646217E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999707673852807	WITHOUT_CLASSIFICATION	2.923261471929119E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9974063216432225	WITHOUT_CLASSIFICATION	0.00259367835677755	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9990420739818938	WITHOUT_CLASSIFICATION	9.579260181061294E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.999967745411171	WITHOUT_CLASSIFICATION	3.225458882901944E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9963546521376442	WITHOUT_CLASSIFICATION	0.00364534786235594	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9996931313698189	WITHOUT_CLASSIFICATION	3.0686863018112166E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999585978581927	WITHOUT_CLASSIFICATION	4.1402141807147616E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999684611969405	WITHOUT_CLASSIFICATION	3.15388030595247E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995362271950735	WITHOUT_CLASSIFICATION	4.6377280492646217E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9989759920565995	WITHOUT_CLASSIFICATION	0.0010240079434006082	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9996926962472845	WITHOUT_CLASSIFICATION	3.073037527155294E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999916856266788	WITHOUT_CLASSIFICATION	8.314373321210265E-6	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999636082430902	WITHOUT_CLASSIFICATION	3.63917569099383E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9962020839148841	WITHOUT_CLASSIFICATION	0.0037979160851158867	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999989960296086	WITHOUT_CLASSIFICATION	1.0039703913919826E-6	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999784354058993	WITHOUT_CLASSIFICATION	2.156459410067627E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999615069566303	WITHOUT_CLASSIFICATION	3.8493043369575264E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.999999087950266	WITHOUT_CLASSIFICATION	9.120497338363186E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998773118411103	WITHOUT_CLASSIFICATION	1.2268815888973086E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998773118411103	WITHOUT_CLASSIFICATION	1.2268815888973086E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998773118411103	WITHOUT_CLASSIFICATION	1.2268815888973086E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999370231377512	WITHOUT_CLASSIFICATION	6.297686224875574E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9997731839835554	WITHOUT_CLASSIFICATION	2.2681601644449766E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999143847373976	WITHOUT_CLASSIFICATION	8.56152626024839E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999810757172367	WITHOUT_CLASSIFICATION	1.8924282763289973E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999983734693911	WITHOUT_CLASSIFICATION	1.6265306088088962E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999529972986752	WITHOUT_CLASSIFICATION	4.700270132481957E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9972175026218982	WITHOUT_CLASSIFICATION	0.002782497378101799	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999307670860444	WITHOUT_CLASSIFICATION	6.923291395555915E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9997695749346126	WITHOUT_CLASSIFICATION	2.3042506538738055E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999995950331126	WITHOUT_CLASSIFICATION	4.0496688741029687E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999535903622244	WITHOUT_CLASSIFICATION	4.640963777563491E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999939132077968	WITHOUT_CLASSIFICATION	6.08679220311919E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999798704661192	WITHOUT_CLASSIFICATION	2.012953388077867E-5	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999998103125852	WITHOUT_CLASSIFICATION	1.8968741477088425E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999962711381688	WITHOUT_CLASSIFICATION	3.728861831295421E-6	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999402858907764	WITHOUT_CLASSIFICATION	5.9714109223682234E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9998333032118047	WITHOUT_CLASSIFICATION	1.6669678819523684E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9982843282407758	WITHOUT_CLASSIFICATION	0.001715671759224255	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998427303018554	WITHOUT_CLASSIFICATION	1.5726969814452082E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999878035423133	WITHOUT_CLASSIFICATION	1.2196457686636716E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998316266833447	WITHOUT_CLASSIFICATION	1.6837331665534676E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999231870604857	WITHOUT_CLASSIFICATION	7.68129395142954E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999434170114083	WITHOUT_CLASSIFICATION	5.658298859160591E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999434170114083	WITHOUT_CLASSIFICATION	5.658298859160591E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999347295177473	WITHOUT_CLASSIFICATION	6.527048225263441E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999787451436489	WITHOUT_CLASSIFICATION	2.1254856351054135E-5	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.99997178523939	WITHOUT_CLASSIFICATION	2.821476061008001E-5	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999673499200619	WITHOUT_CLASSIFICATION	3.265007993815588E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999991881474414	WITHOUT_CLASSIFICATION	8.118525587041018E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999971499078397	WITHOUT_CLASSIFICATION	2.8500921603319378E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.999975899154649	WITHOUT_CLASSIFICATION	2.4100845351094724E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999969861406198	WITHOUT_CLASSIFICATION	3.013859380136864E-6	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9997040431887707	WITHOUT_CLASSIFICATION	2.959568112292952E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9996156768398113	WITHOUT_CLASSIFICATION	3.8432316018859687E-4	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.999622836573438	WITHOUT_CLASSIFICATION	3.77163426562032E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998515261921067	WITHOUT_CLASSIFICATION	1.484738078932744E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9992445623642212	WITHOUT_CLASSIFICATION	7.55437635778685E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999802840132408	WITHOUT_CLASSIFICATION	1.9715986759207676E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999802840132408	WITHOUT_CLASSIFICATION	1.9715986759207676E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999205704396054	WITHOUT_CLASSIFICATION	7.942956039470377E-5	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.997392294895388	WITHOUT_CLASSIFICATION	0.0026077051046119663	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999936734653576	WITHOUT_CLASSIFICATION	6.3265346423945365E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999895213827538	WITHOUT_CLASSIFICATION	1.0478617246309309E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999895213827538	WITHOUT_CLASSIFICATION	1.0478617246309309E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999895213827538	WITHOUT_CLASSIFICATION	1.0478617246309309E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9997778412119139	WITHOUT_CLASSIFICATION	2.221587880860696E-4	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999641834668	WITHOUT_CLASSIFICATION	3.581653309190965E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.999826661407616	WITHOUT_CLASSIFICATION	1.7333859238405244E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998602924165794	WITHOUT_CLASSIFICATION	1.3970758342071455E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999723429028612	WITHOUT_CLASSIFICATION	2.7657097138799357E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9998323413010343	WITHOUT_CLASSIFICATION	1.6765869896568714E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9998712561923117	WITHOUT_CLASSIFICATION	1.2874380768841055E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997849181038813	WITHOUT_CLASSIFICATION	2.1508189611877318E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997849181038813	WITHOUT_CLASSIFICATION	2.1508189611877318E-4	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999941986205589	WITHOUT_CLASSIFICATION	5.801379441077286E-6	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9998293409330147	WITHOUT_CLASSIFICATION	1.706590669853788E-4	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9997689190586228	WITHOUT_CLASSIFICATION	2.3108094137721128E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9953101005652285	WITHOUT_CLASSIFICATION	0.004689899434771592	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999973552961751	WITHOUT_CLASSIFICATION	2.6447038249007198E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9994855112690867	WITHOUT_CLASSIFICATION	5.144887309133096E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997918223680933	WITHOUT_CLASSIFICATION	2.0817763190681128E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999059567966884	WITHOUT_CLASSIFICATION	9.404320331162348E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999989055063259	WITHOUT_CLASSIFICATION	1.0944936740999661E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999963084968279	WITHOUT_CLASSIFICATION	3.6915031720784E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995496106545402	WITHOUT_CLASSIFICATION	4.5038934545993257E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999772225212726	WITHOUT_CLASSIFICATION	2.2777478727303122E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999452911121083	WITHOUT_CLASSIFICATION	5.4708887891782326E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999187760744036	WITHOUT_CLASSIFICATION	8.122392559645905E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9998624006907283	WITHOUT_CLASSIFICATION	1.3759930927174E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999387439279221	WITHOUT_CLASSIFICATION	6.125607207792312E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9997639898829647	WITHOUT_CLASSIFICATION	2.3601011703528526E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999571405920162	WITHOUT_CLASSIFICATION	4.2859407983797486E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.999999866149317	WITHOUT_CLASSIFICATION	1.338506830544987E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9997685315622462	WITHOUT_CLASSIFICATION	2.3146843775377572E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9980946462783317	WITHOUT_CLASSIFICATION	0.0019053537216684267	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9998991270474733	WITHOUT_CLASSIFICATION	1.008729525267027E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999834600825931	WITHOUT_CLASSIFICATION	1.6539917406908753E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9996809712427637	WITHOUT_CLASSIFICATION	3.1902875723624057E-4	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999998771800828	WITHOUT_CLASSIFICATION	1.2281991727589184E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999565125135349	WITHOUT_CLASSIFICATION	4.348748646504548E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999565125135349	WITHOUT_CLASSIFICATION	4.348748646504548E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9951653000931502	WITHOUT_CLASSIFICATION	0.004834699906849725	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999378092434883	WITHOUT_CLASSIFICATION	6.219075651170999E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9982461822442834	WITHOUT_CLASSIFICATION	0.0017538177557166906	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9994386105279701	WITHOUT_CLASSIFICATION	5.613894720298672E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9994386105279701	WITHOUT_CLASSIFICATION	5.613894720298672E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999839662917505	WITHOUT_CLASSIFICATION	1.6033708249529717E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997405615455559	WITHOUT_CLASSIFICATION	2.594384544441345E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999948910791688	WITHOUT_CLASSIFICATION	5.1089208311751895E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999954507503623	WITHOUT_CLASSIFICATION	4.5492496376450105E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9985040747048688	WITHOUT_CLASSIFICATION	0.0014959252951311601	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999950527768696	WITHOUT_CLASSIFICATION	4.947223130410447E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999893004751084	WITHOUT_CLASSIFICATION	1.0699524891687281E-5	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999378216993472	WITHOUT_CLASSIFICATION	6.217830065284482E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9987826495290152	WITHOUT_CLASSIFICATION	0.001217350470984759	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9998313052659362	WITHOUT_CLASSIFICATION	1.6869473406381483E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999782224092	WITHOUT_CLASSIFICATION	2.1777590876723063E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999921852221019	WITHOUT_CLASSIFICATION	7.814777898078895E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999693850131186	WITHOUT_CLASSIFICATION	3.0614986881512635E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999531198458	WITHOUT_CLASSIFICATION	4.688015425386744E-8	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9997782886361826	WITHOUT_CLASSIFICATION	2.2171136381747043E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999864700083371	WITHOUT_CLASSIFICATION	1.3529991663020972E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.99997832296098	WITHOUT_CLASSIFICATION	2.16770390199939E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998709526875413	WITHOUT_CLASSIFICATION	1.2904731245862245E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999931973862185	WITHOUT_CLASSIFICATION	6.802613781523138E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9996934431751702	WITHOUT_CLASSIFICATION	3.065568248298734E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.999994674027446	WITHOUT_CLASSIFICATION	5.325972553967531E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998977018093504	WITHOUT_CLASSIFICATION	1.0229819064946075E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.999409702935881	WITHOUT_CLASSIFICATION	5.902970641189392E-4	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998525371204985	WITHOUT_CLASSIFICATION	1.4746287950148827E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998691077673587	WITHOUT_CLASSIFICATION	1.3089223264132295E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998691077673587	WITHOUT_CLASSIFICATION	1.3089223264132295E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998691077673587	WITHOUT_CLASSIFICATION	1.3089223264132295E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998691077673587	WITHOUT_CLASSIFICATION	1.3089223264132295E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999505000432072	WITHOUT_CLASSIFICATION	4.9499956792877886E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999877576104796	WITHOUT_CLASSIFICATION	1.2242389520339451E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999711593158509	WITHOUT_CLASSIFICATION	2.884068414914115E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999711593158509	WITHOUT_CLASSIFICATION	2.884068414914115E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999711593158509	WITHOUT_CLASSIFICATION	2.884068414914115E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999041291988006	WITHOUT_CLASSIFICATION	9.587080119951579E-5	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999335178182588	WITHOUT_CLASSIFICATION	6.648218174131478E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9998833666993522	WITHOUT_CLASSIFICATION	1.1663330064780391E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9998833666993522	WITHOUT_CLASSIFICATION	1.1663330064780391E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9994482762165624	WITHOUT_CLASSIFICATION	5.517237834376148E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9994482762165624	WITHOUT_CLASSIFICATION	5.517237834376148E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9996869808758156	WITHOUT_CLASSIFICATION	3.130191241843592E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9996869808758156	WITHOUT_CLASSIFICATION	3.130191241843592E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999878476735133	WITHOUT_CLASSIFICATION	1.2152326486543387E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9997306525372915	WITHOUT_CLASSIFICATION	2.693474627083982E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9998303976783213	WITHOUT_CLASSIFICATION	1.696023216785932E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999472656437656	WITHOUT_CLASSIFICATION	5.273435623446228E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9997250506404856	WITHOUT_CLASSIFICATION	2.7494935951447963E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997799640164278	WITHOUT_CLASSIFICATION	2.2003598357234482E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997321096685461	WITHOUT_CLASSIFICATION	2.678903314538849E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999147659870695	WITHOUT_CLASSIFICATION	8.523401293051032E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998309128879692	WITHOUT_CLASSIFICATION	1.6908711203064835E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999468419747233	WITHOUT_CLASSIFICATION	5.3158025276626104E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999276256252694	WITHOUT_CLASSIFICATION	7.23743747305315E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999726159899406	WITHOUT_CLASSIFICATION	2.738401005938855E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999469222743165	WITHOUT_CLASSIFICATION	5.3077725683586587E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9998566774253769	WITHOUT_CLASSIFICATION	1.43322574623103E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999947435879035	WITHOUT_CLASSIFICATION	5.256412096491753E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999477665761871	WITHOUT_CLASSIFICATION	5.2233423812911346E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9998904354082082	WITHOUT_CLASSIFICATION	1.0956459179185646E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998654209167788	WITHOUT_CLASSIFICATION	1.3457908322124485E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998654209167788	WITHOUT_CLASSIFICATION	1.3457908322124485E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999282532419437	WITHOUT_CLASSIFICATION	7.174675805630597E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9996441619463956	WITHOUT_CLASSIFICATION	3.5583805360436165E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9998298741738714	WITHOUT_CLASSIFICATION	1.7012582612852375E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9993181020348813	WITHOUT_CLASSIFICATION	6.818979651186774E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999406396491047	WITHOUT_CLASSIFICATION	5.936035089526809E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998331237982652	WITHOUT_CLASSIFICATION	1.6687620173488847E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998331237982652	WITHOUT_CLASSIFICATION	1.6687620173488847E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998331237982652	WITHOUT_CLASSIFICATION	1.6687620173488847E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998331237982652	WITHOUT_CLASSIFICATION	1.6687620173488847E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999858204735412	WITHOUT_CLASSIFICATION	1.4179526458634109E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999910769347893	WITHOUT_CLASSIFICATION	8.923065210654499E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999371549201	WITHOUT_CLASSIFICATION	6.284507986003926E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999468887802746	WITHOUT_CLASSIFICATION	5.311121972544394E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999468887802746	WITHOUT_CLASSIFICATION	5.311121972544394E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9998805864315384	WITHOUT_CLASSIFICATION	1.1941356846154452E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9990978601762476	WITHOUT_CLASSIFICATION	9.021398237525395E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9990978601762476	WITHOUT_CLASSIFICATION	9.021398237525395E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999836044420238	WITHOUT_CLASSIFICATION	1.639555797618982E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999822067287384	WITHOUT_CLASSIFICATION	1.779327126154738E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999787151059716	WITHOUT_CLASSIFICATION	2.1284894028467057E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.999996483753578	WITHOUT_CLASSIFICATION	3.5162464220995975E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998558831517261	WITHOUT_CLASSIFICATION	1.4411684827392223E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9904153366403365	WITHOUT_CLASSIFICATION	0.009584663359663464	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9904153366403365	WITHOUT_CLASSIFICATION	0.009584663359663464	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999972974173259	WITHOUT_CLASSIFICATION	2.7025826741070067E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.999979355025131	WITHOUT_CLASSIFICATION	2.0644974869034318E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9997927459678365	WITHOUT_CLASSIFICATION	2.0725403216347897E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999983706790304	WITHOUT_CLASSIFICATION	1.6293209696253375E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998922570167198	WITHOUT_CLASSIFICATION	1.077429832802202E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999970005014933	WITHOUT_CLASSIFICATION	2.9994985066966048E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999970005014933	WITHOUT_CLASSIFICATION	2.9994985066966048E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999970005014933	WITHOUT_CLASSIFICATION	2.9994985066966048E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999853756018253	WITHOUT_CLASSIFICATION	1.4624398174836246E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999853756018253	WITHOUT_CLASSIFICATION	1.4624398174836246E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999183616059125	WITHOUT_CLASSIFICATION	8.163839408747613E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999956440328741	WITHOUT_CLASSIFICATION	4.355967125814325E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999956440328741	WITHOUT_CLASSIFICATION	4.355967125814325E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9998978708663444	WITHOUT_CLASSIFICATION	1.0212913365551645E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999737398426807	WITHOUT_CLASSIFICATION	2.6260157319403658E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992576771074918	WITHOUT_CLASSIFICATION	7.423228925081392E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999134626554466	WITHOUT_CLASSIFICATION	8.6537344553459E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9957730967146856	WITHOUT_CLASSIFICATION	0.00422690328531446	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9957730967146856	WITHOUT_CLASSIFICATION	0.00422690328531446	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999094245348607	WITHOUT_CLASSIFICATION	9.057546513930111E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999412273168247	WITHOUT_CLASSIFICATION	5.877268317528448E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999709146897274	WITHOUT_CLASSIFICATION	2.9085310272642455E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997259922598537	WITHOUT_CLASSIFICATION	2.740077401463517E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998691862977729	WITHOUT_CLASSIFICATION	1.3081370222703753E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999976748275363	WITHOUT_CLASSIFICATION	2.325172463693637E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991534092935943	WITHOUT_CLASSIFICATION	8.465907064057207E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989454355969404	WITHOUT_CLASSIFICATION	0.001054564403059655	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998929880923532	WITHOUT_CLASSIFICATION	1.0701190764694825E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999663743185361	WITHOUT_CLASSIFICATION	3.362568146391171E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999175072955502	WITHOUT_CLASSIFICATION	8.249270444982063E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9998767856069821	WITHOUT_CLASSIFICATION	1.2321439301796557E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999886602829972	WITHOUT_CLASSIFICATION	1.1339717002932085E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999976844272611	WITHOUT_CLASSIFICATION	2.3155727388097295E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999779565527592	WITHOUT_CLASSIFICATION	2.2043447240812055E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9988254514101248	WITHOUT_CLASSIFICATION	0.0011745485898751603	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998910979699855	WITHOUT_CLASSIFICATION	1.0890203001451321E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999441031620823	WITHOUT_CLASSIFICATION	5.589683791761132E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9996936431777856	WITHOUT_CLASSIFICATION	3.0635682221434596E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999528655271425	WITHOUT_CLASSIFICATION	4.71344728575984E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9996403999885476	WITHOUT_CLASSIFICATION	3.5960001145237996E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9997601991802294	WITHOUT_CLASSIFICATION	2.398008197707059E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9998422785188807	WITHOUT_CLASSIFICATION	1.5772148111932333E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9998616166376483	WITHOUT_CLASSIFICATION	1.3838336235172326E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998975632758995	WITHOUT_CLASSIFICATION	1.0243672410051493E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9993210918484172	WITHOUT_CLASSIFICATION	6.789081515828213E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9992243019441852	WITHOUT_CLASSIFICATION	7.756980558149087E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9992243019441852	WITHOUT_CLASSIFICATION	7.756980558149087E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999598161448974	WITHOUT_CLASSIFICATION	4.018385510265563E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998584173231467	WITHOUT_CLASSIFICATION	1.415826768532929E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999962707063106	WITHOUT_CLASSIFICATION	3.729293689398764E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9997250523902658	WITHOUT_CLASSIFICATION	2.7494760973429316E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999807243790966	WITHOUT_CLASSIFICATION	1.9275620903423824E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9998907740339771	WITHOUT_CLASSIFICATION	1.0922596602288622E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999483424188841	WITHOUT_CLASSIFICATION	5.165758111585575E-5	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999830665153733	WITHOUT_CLASSIFICATION	1.6933484626688316E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999675714537203	WITHOUT_CLASSIFICATION	3.2428546279759115E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996680153690818	WITHOUT_CLASSIFICATION	3.3198463091817313E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996680153690818	WITHOUT_CLASSIFICATION	3.3198463091817313E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.99989221480927	WITHOUT_CLASSIFICATION	1.0778519073000052E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999760476504411	WITHOUT_CLASSIFICATION	2.3952349558868366E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9982857638588947	WITHOUT_CLASSIFICATION	0.0017142361411052144	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999383322485791	WITHOUT_CLASSIFICATION	6.166775142088082E-5	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999961145065952	WITHOUT_CLASSIFICATION	3.885493404805219E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9997489603255442	WITHOUT_CLASSIFICATION	2.510396744558705E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998910979699855	WITHOUT_CLASSIFICATION	1.0890203001451321E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999437588448444	WITHOUT_CLASSIFICATION	5.624115515547456E-5	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999863330326414	WITHOUT_CLASSIFICATION	1.3666967358638084E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998769803340244	WITHOUT_CLASSIFICATION	1.2301966597552788E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999544633845993	WITHOUT_CLASSIFICATION	4.553661540069739E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999904482168414	WITHOUT_CLASSIFICATION	9.55178315853774E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999844520488789	WITHOUT_CLASSIFICATION	1.5547951121095994E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999936855619859	WITHOUT_CLASSIFICATION	6.314438014121767E-6	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999592425468277	WITHOUT_CLASSIFICATION	4.075745317235809E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9986135741022084	WITHOUT_CLASSIFICATION	0.001386425897791619	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.999944579834466	WITHOUT_CLASSIFICATION	5.542016553403977E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999573442589454	WITHOUT_CLASSIFICATION	4.265574105461813E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.999944579834466	WITHOUT_CLASSIFICATION	5.542016553403977E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999573442589454	WITHOUT_CLASSIFICATION	4.265574105461813E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9980802338831668	WITHOUT_CLASSIFICATION	0.001919766116833259	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9980271080528974	WITHOUT_CLASSIFICATION	0.0019728919471025896	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9998418610041899	WITHOUT_CLASSIFICATION	1.5813899581000804E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9799234678895543	WITHOUT_CLASSIFICATION	0.02007653211044569	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997866741180923	WITHOUT_CLASSIFICATION	2.1332588190774632E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999332737089602	WITHOUT_CLASSIFICATION	6.672629103969855E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999723429028612	WITHOUT_CLASSIFICATION	2.7657097138799357E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999476885100064	WITHOUT_CLASSIFICATION	5.231148999360748E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.999887879128122	WITHOUT_CLASSIFICATION	1.1212087187787235E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999428221882292	WITHOUT_CLASSIFICATION	5.7177811770765325E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999831937611143	WITHOUT_CLASSIFICATION	1.6806238885596036E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999270839356651	WITHOUT_CLASSIFICATION	7.291606433493106E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9995922187583063	WITHOUT_CLASSIFICATION	4.0778124169364423E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9994956122895092	WITHOUT_CLASSIFICATION	5.04387710490781E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999332737089602	WITHOUT_CLASSIFICATION	6.672629103969855E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999679970277999	WITHOUT_CLASSIFICATION	3.200297220002794E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999691584887719	WITHOUT_CLASSIFICATION	3.0841511228042956E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999899137333847	WITHOUT_CLASSIFICATION	1.0086266615262265E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999464111195272	WITHOUT_CLASSIFICATION	5.358888047273111E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999504822574607	WITHOUT_CLASSIFICATION	4.951774253928366E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995241004581384	WITHOUT_CLASSIFICATION	4.75899541861634E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9938654367867552	WITHOUT_CLASSIFICATION	0.0061345632132447925	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995241004581384	WITHOUT_CLASSIFICATION	4.75899541861634E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995241004581384	WITHOUT_CLASSIFICATION	4.75899541861634E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999525541423378	WITHOUT_CLASSIFICATION	4.7445857662199806E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996019366430913	WITHOUT_CLASSIFICATION	3.980633569087992E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9998262561091436	WITHOUT_CLASSIFICATION	1.7374389085649675E-4	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999838343362004	WITHOUT_CLASSIFICATION	1.6165663799568892E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995241004581384	WITHOUT_CLASSIFICATION	4.75899541861634E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999763558730863	WITHOUT_CLASSIFICATION	2.3644126913755525E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999675280821301	WITHOUT_CLASSIFICATION	3.247191786996943E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999924316570004	WITHOUT_CLASSIFICATION	7.568342999633103E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996790622141709	WITHOUT_CLASSIFICATION	3.2093778582901425E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999345729773884	WITHOUT_CLASSIFICATION	6.54270226116059E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999538291779884	WITHOUT_CLASSIFICATION	4.617082201158574E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9998733589134621	WITHOUT_CLASSIFICATION	1.2664108653800106E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.999985465761876	WITHOUT_CLASSIFICATION	1.4534238123916883E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999444915430236	WITHOUT_CLASSIFICATION	5.5508456976341944E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999675280821301	WITHOUT_CLASSIFICATION	3.247191786996943E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999924316570004	WITHOUT_CLASSIFICATION	7.568342999633103E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996790622141709	WITHOUT_CLASSIFICATION	3.2093778582901425E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9998430066339135	WITHOUT_CLASSIFICATION	1.569933660864496E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9995556832240845	WITHOUT_CLASSIFICATION	4.443167759154931E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999659086087143	WITHOUT_CLASSIFICATION	3.4091391285689503E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9998819166631098	WITHOUT_CLASSIFICATION	1.180833368901287E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999530045667993	WITHOUT_CLASSIFICATION	4.6995433200717356E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9992153801963248	WITHOUT_CLASSIFICATION	7.846198036750972E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999088902876035	WITHOUT_CLASSIFICATION	9.11097123965136E-5	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999728719251992	WITHOUT_CLASSIFICATION	2.712807480075516E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999399351677173	WITHOUT_CLASSIFICATION	6.006483228264574E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9991210386039625	WITHOUT_CLASSIFICATION	8.789613960375456E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9998961052112859	WITHOUT_CLASSIFICATION	1.03894788714078E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999841795021072	WITHOUT_CLASSIFICATION	1.5820497892846293E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999643114119824	WITHOUT_CLASSIFICATION	3.568858801760574E-5	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9977927289604396	WITHOUT_CLASSIFICATION	0.0022072710395604415	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999948477892088	WITHOUT_CLASSIFICATION	5.152210791200262E-6	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9979307359923278	WITHOUT_CLASSIFICATION	0.002069264007672245	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999785261763116	WITHOUT_CLASSIFICATION	2.147382368851623E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999449189987366	WITHOUT_CLASSIFICATION	5.508100126350909E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999271997629049	WITHOUT_CLASSIFICATION	7.280023709510584E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9889546383337595	WITHOUT_CLASSIFICATION	0.011045361666240448	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9892552574727352	WITHOUT_CLASSIFICATION	0.010744742527264843	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9967505585937889	WITHOUT_CLASSIFICATION	0.0032494414062110687	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9998727249401694	WITHOUT_CLASSIFICATION	1.2727505983051445E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999448672808801	WITHOUT_CLASSIFICATION	5.513271912004304E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.997654573259244	WITHOUT_CLASSIFICATION	0.0023454267407559968	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999657091423824	WITHOUT_CLASSIFICATION	3.429085761768362E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999682302069325	WITHOUT_CLASSIFICATION	3.176979306757454E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9997196753423108	WITHOUT_CLASSIFICATION	2.803246576892753E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9971639950876616	WITHOUT_CLASSIFICATION	0.002836004912338356	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9986949203792154	WITHOUT_CLASSIFICATION	0.0013050796207846433	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.999438266198731	WITHOUT_CLASSIFICATION	5.617338012690189E-4	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9996596598897604	WITHOUT_CLASSIFICATION	3.403401102396778E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9997508837513958	WITHOUT_CLASSIFICATION	2.491162486041695E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9997516448631835	WITHOUT_CLASSIFICATION	2.483551368164346E-4	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.998453983689249	WITHOUT_CLASSIFICATION	0.0015460163107510624	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9998721979238492	WITHOUT_CLASSIFICATION	1.2780207615082457E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9981795249073991	WITHOUT_CLASSIFICATION	0.001820475092600824	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9681172770929464	WITHOUT_CLASSIFICATION	0.03188272290705354	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9997545440045225	WITHOUT_CLASSIFICATION	2.4545599547758155E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9997601991802294	WITHOUT_CLASSIFICATION	2.398008197707059E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9992914927293455	WITHOUT_CLASSIFICATION	7.085072706545832E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999040314620276	WITHOUT_CLASSIFICATION	9.596853797252857E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999254502226694	WITHOUT_CLASSIFICATION	7.45497773305963E-5	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999194040774231	WITHOUT_CLASSIFICATION	8.059592257692699E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9956534843901359	WITHOUT_CLASSIFICATION	0.004346515609864088	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998751684922295	WITHOUT_CLASSIFICATION	1.2483150777044217E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9956534843901359	WITHOUT_CLASSIFICATION	0.004346515609864088	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999713031891	WITHOUT_CLASSIFICATION	2.8696810899942095E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9996343536763335	WITHOUT_CLASSIFICATION	3.656463236665725E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999517893828966	WITHOUT_CLASSIFICATION	4.8210617103401536E-5	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.99999209072699	WITHOUT_CLASSIFICATION	7.90927300998059E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999435504014768	WITHOUT_CLASSIFICATION	5.644959852327522E-5	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999845880451346	WITHOUT_CLASSIFICATION	1.5411954865472328E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999789999007366	WITHOUT_CLASSIFICATION	2.1000099263459603E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999786040734099	WITHOUT_CLASSIFICATION	2.1395926590107184E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.999987904593103	WITHOUT_CLASSIFICATION	1.209540689702477E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999800837599628	WITHOUT_CLASSIFICATION	1.991624003710237E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999540486469692	WITHOUT_CLASSIFICATION	4.5951353030809577E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9989764096184296	WITHOUT_CLASSIFICATION	0.0010235903815703912	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999831083223122	WITHOUT_CLASSIFICATION	1.689167768775596E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999981815206929	WITHOUT_CLASSIFICATION	1.8184793071205688E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999811826395032	WITHOUT_CLASSIFICATION	1.8817360496813163E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999885918603456	WITHOUT_CLASSIFICATION	1.1408139654250124E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9996545192657947	WITHOUT_CLASSIFICATION	3.4548073420520554E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9998286225487049	WITHOUT_CLASSIFICATION	1.713774512950441E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999882031210736	WITHOUT_CLASSIFICATION	1.1796878926523163E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.997837244729137	WITHOUT_CLASSIFICATION	0.002162755270862985	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999725524777008	WITHOUT_CLASSIFICATION	2.7447522299161267E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999159185326562	WITHOUT_CLASSIFICATION	8.40814673438515E-5	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999881530935139	WITHOUT_CLASSIFICATION	1.1846906486229014E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999897772718843	WITHOUT_CLASSIFICATION	1.0222728115714795E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9998038537433707	WITHOUT_CLASSIFICATION	1.9614625662932954E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999362946451148	WITHOUT_CLASSIFICATION	6.370535488519075E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999480955981602	WITHOUT_CLASSIFICATION	5.1904401839770134E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9989690540142071	WITHOUT_CLASSIFICATION	0.0010309459857928938	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9998457579074139	WITHOUT_CLASSIFICATION	1.5424209258605996E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9974337732974241	WITHOUT_CLASSIFICATION	0.0025662267025758478	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.999954827015316	WITHOUT_CLASSIFICATION	4.5172984684050824E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999978491297988	WITHOUT_CLASSIFICATION	2.1508702012196312E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999415752587948	WITHOUT_CLASSIFICATION	5.842474120517239E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999613638359401	WITHOUT_CLASSIFICATION	3.8636164059883965E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999546372369962	WITHOUT_CLASSIFICATION	4.536276300385499E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.999888785629558	WITHOUT_CLASSIFICATION	1.1121437044198066E-4	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999332011776011	WITHOUT_CLASSIFICATION	6.679882239897481E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999254502226694	WITHOUT_CLASSIFICATION	7.45497773305963E-5	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.999954105533513	WITHOUT_CLASSIFICATION	4.589446648702046E-5	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.999960094621432	WITHOUT_CLASSIFICATION	3.990537856795942E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999743859674919	WITHOUT_CLASSIFICATION	2.561403250813104E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9996744914700358	WITHOUT_CLASSIFICATION	3.255085299642073E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998751684922295	WITHOUT_CLASSIFICATION	1.2483150777044217E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9997930003161016	WITHOUT_CLASSIFICATION	2.069996838984239E-4	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999692658465448	WITHOUT_CLASSIFICATION	3.0734153455258674E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999770611836154	WITHOUT_CLASSIFICATION	2.293881638467368E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999541809076977	WITHOUT_CLASSIFICATION	4.581909230225319E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999248806799973	WITHOUT_CLASSIFICATION	7.511932000273305E-5	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9996764831177597	WITHOUT_CLASSIFICATION	3.235168822402601E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9998444680725411	WITHOUT_CLASSIFICATION	1.5553192745885872E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999730538165442	WITHOUT_CLASSIFICATION	2.694618345577551E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999704225320293	WITHOUT_CLASSIFICATION	2.957746797064524E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.994196198234958	WITHOUT_CLASSIFICATION	0.005803801765041981	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9998422785188807	WITHOUT_CLASSIFICATION	1.5772148111932333E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999658014108734	WITHOUT_CLASSIFICATION	3.4198589126609746E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999595951311864	WITHOUT_CLASSIFICATION	4.040486881360612E-5	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9997225022970455	WITHOUT_CLASSIFICATION	2.774977029544853E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9998994326896113	WITHOUT_CLASSIFICATION	1.0056731038868492E-4	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999377702446636	WITHOUT_CLASSIFICATION	6.222975533644228E-5	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9998245448222138	WITHOUT_CLASSIFICATION	1.7545517778613697E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999683858709314	WITHOUT_CLASSIFICATION	3.161412906856075E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999723806283873	WITHOUT_CLASSIFICATION	2.761937161274609E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999484699840956	WITHOUT_CLASSIFICATION	5.153001590444258E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999841565498493	WITHOUT_CLASSIFICATION	1.5843450150685408E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999723806283873	WITHOUT_CLASSIFICATION	2.761937161274609E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999730367736461	WITHOUT_CLASSIFICATION	2.696322635389737E-5	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999868370684439	WITHOUT_CLASSIFICATION	1.3162931556088167E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9998555325799392	WITHOUT_CLASSIFICATION	1.444674200608335E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999588382587342	WITHOUT_CLASSIFICATION	4.1161741265819825E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999881208648849	WITHOUT_CLASSIFICATION	1.187913511516285E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.999988125516428	WITHOUT_CLASSIFICATION	1.1874483571964334E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999811718254507	WITHOUT_CLASSIFICATION	1.8828174549394283E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999873956170323	WITHOUT_CLASSIFICATION	1.2604382967733496E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999886631484125	WITHOUT_CLASSIFICATION	1.133685158747279E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999888505011431	WITHOUT_CLASSIFICATION	1.1149498856875269E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.999975578462932	WITHOUT_CLASSIFICATION	2.4421537068109778E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.99994850240346	WITHOUT_CLASSIFICATION	5.1497596540021683E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999955759852396	WITHOUT_CLASSIFICATION	4.424014760431303E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999676326579968	WITHOUT_CLASSIFICATION	3.236734200315689E-5	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999334622950126	WITHOUT_CLASSIFICATION	6.653770498746965E-5	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9970578711240659	WITHOUT_CLASSIFICATION	0.0029421288759341876	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.999953818556125	WITHOUT_CLASSIFICATION	4.618144387512869E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9998474616704311	WITHOUT_CLASSIFICATION	1.5253832956888674E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999797223552249	WITHOUT_CLASSIFICATION	2.0277644775147098E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.999979768846691	WITHOUT_CLASSIFICATION	2.0231153308890024E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999878175885966	WITHOUT_CLASSIFICATION	1.2182411403332812E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999440751149281	WITHOUT_CLASSIFICATION	5.5924885071940456E-5	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998654333694565	WITHOUT_CLASSIFICATION	1.3456663054340308E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998654333694565	WITHOUT_CLASSIFICATION	1.3456663054340308E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998565018293465	WITHOUT_CLASSIFICATION	1.4349817065346137E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999830118053923	WITHOUT_CLASSIFICATION	1.698819460769454E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999739002860183	WITHOUT_CLASSIFICATION	2.6099713981639794E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9990043932373341	WITHOUT_CLASSIFICATION	9.956067626658493E-4	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9995987298276412	WITHOUT_CLASSIFICATION	4.012701723587511E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9991728785935995	WITHOUT_CLASSIFICATION	8.271214064005967E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999628536334977	WITHOUT_CLASSIFICATION	3.714636650220078E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999867835168528	WITHOUT_CLASSIFICATION	1.3216483147240792E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999453145236252	WITHOUT_CLASSIFICATION	5.4685476374878545E-5	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9976315897174274	WITHOUT_CLASSIFICATION	0.0023684102825725774	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999722147361464	WITHOUT_CLASSIFICATION	2.778526385358504E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999666973481544	WITHOUT_CLASSIFICATION	3.330265184557916E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9998785552858475	WITHOUT_CLASSIFICATION	1.2144471415253668E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999409548420414	WITHOUT_CLASSIFICATION	5.904515795861164E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9998965053261641	WITHOUT_CLASSIFICATION	1.0349467383594721E-4	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999607575261996	WITHOUT_CLASSIFICATION	3.9242473800399686E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999990785020894	WITHOUT_CLASSIFICATION	9.214979105717757E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9998163659096371	WITHOUT_CLASSIFICATION	1.836340903629446E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9998163659096371	WITHOUT_CLASSIFICATION	1.836340903629446E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999683181350245	WITHOUT_CLASSIFICATION	3.168186497549679E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999683181350245	WITHOUT_CLASSIFICATION	3.168186497549679E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9997951413851117	WITHOUT_CLASSIFICATION	2.048586148882182E-4	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999413270907181	WITHOUT_CLASSIFICATION	5.8672909281845385E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9998101885453737	WITHOUT_CLASSIFICATION	1.8981145462619012E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999644441866808	WITHOUT_CLASSIFICATION	3.5555813319126986E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999485421062776	WITHOUT_CLASSIFICATION	5.145789372240567E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999143847373976	WITHOUT_CLASSIFICATION	8.56152626024839E-5	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999584434530628	WITHOUT_CLASSIFICATION	4.1556546937111825E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.999965111688311	WITHOUT_CLASSIFICATION	3.488831168898132E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999684830175092	WITHOUT_CLASSIFICATION	3.151698249089007E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999684830175092	WITHOUT_CLASSIFICATION	3.151698249089007E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999684830175092	WITHOUT_CLASSIFICATION	3.151698249089007E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999473211122686	WITHOUT_CLASSIFICATION	5.26788877313582E-5	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999467559557953	WITHOUT_CLASSIFICATION	5.3244044204746865E-5	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999249832134295	WITHOUT_CLASSIFICATION	7.501678657042339E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999511060900796	WITHOUT_CLASSIFICATION	4.889390992040995E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999512308863371	WITHOUT_CLASSIFICATION	4.8769113662929356E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.999918019859388	WITHOUT_CLASSIFICATION	8.198014061193633E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.999894922693823	WITHOUT_CLASSIFICATION	1.0507730617699822E-4	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9997673141029042	WITHOUT_CLASSIFICATION	2.3268589709583569E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999832179733754	WITHOUT_CLASSIFICATION	1.6782026624622005E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998603350661737	WITHOUT_CLASSIFICATION	1.396649338263182E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.999674039191401	WITHOUT_CLASSIFICATION	3.259608085990755E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9997696508075019	WITHOUT_CLASSIFICATION	2.3034919249805965E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999535903622244	WITHOUT_CLASSIFICATION	4.640963777563491E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9998746513669183	WITHOUT_CLASSIFICATION	1.2534863308160502E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999746028685592	WITHOUT_CLASSIFICATION	2.539713144074139E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999694887625467	WITHOUT_CLASSIFICATION	3.0511237453261914E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.999997361293696	WITHOUT_CLASSIFICATION	2.638706303958526E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.999854061917465	WITHOUT_CLASSIFICATION	1.459380825350398E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999407334162296	WITHOUT_CLASSIFICATION	5.926658377039572E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999901803004199	WITHOUT_CLASSIFICATION	9.819699580148508E-6	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999893903587593	WITHOUT_CLASSIFICATION	1.0609641240721048E-5	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9998333032118047	WITHOUT_CLASSIFICATION	1.6669678819523684E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9998333032118047	WITHOUT_CLASSIFICATION	1.6669678819523684E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9998333032118047	WITHOUT_CLASSIFICATION	1.6669678819523684E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9998333032118047	WITHOUT_CLASSIFICATION	1.6669678819523684E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999334888577094	WITHOUT_CLASSIFICATION	6.651114229061493E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998427303018554	WITHOUT_CLASSIFICATION	1.5726969814452082E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999702874707982	WITHOUT_CLASSIFICATION	2.97125292017925E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997422875090144	WITHOUT_CLASSIFICATION	2.577124909855326E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998427303018554	WITHOUT_CLASSIFICATION	1.5726969814452082E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9996413671771324	WITHOUT_CLASSIFICATION	3.58632822867664E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9996734440533902	WITHOUT_CLASSIFICATION	3.265559466097789E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999681947306231	WITHOUT_CLASSIFICATION	3.1805269376899254E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9998319679681243	WITHOUT_CLASSIFICATION	1.6803203187563446E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9987245576183662	WITHOUT_CLASSIFICATION	0.0012754423816337872	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999407980067715	WITHOUT_CLASSIFICATION	5.9201993228509554E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9998319082369433	WITHOUT_CLASSIFICATION	1.6809176305662406E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999857672313008	WITHOUT_CLASSIFICATION	1.4232768699115942E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999857672313008	WITHOUT_CLASSIFICATION	1.4232768699115942E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999434170114083	WITHOUT_CLASSIFICATION	5.658298859160591E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999230713630731	WITHOUT_CLASSIFICATION	7.692863692689681E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999434170114083	WITHOUT_CLASSIFICATION	5.658298859160591E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997279977780066	WITHOUT_CLASSIFICATION	2.720022219933534E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.999995792453344	WITHOUT_CLASSIFICATION	4.2075466559296825E-6	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9998755134064417	WITHOUT_CLASSIFICATION	1.2448659355836263E-4	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999749443094734	WITHOUT_CLASSIFICATION	2.5055690526595827E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999649484051425	WITHOUT_CLASSIFICATION	3.505159485751836E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999908233658298	WITHOUT_CLASSIFICATION	9.17663417022393E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999931358725587	WITHOUT_CLASSIFICATION	6.8641274412611055E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999601272404179	WITHOUT_CLASSIFICATION	3.987275958207354E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9995894722565412	WITHOUT_CLASSIFICATION	4.105277434588827E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9997923397563976	WITHOUT_CLASSIFICATION	2.076602436023909E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999913421153729	WITHOUT_CLASSIFICATION	8.657884627125767E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999978716937887	WITHOUT_CLASSIFICATION	2.128306211330896E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9996569838113148	WITHOUT_CLASSIFICATION	3.430161886851704E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998210279696741	WITHOUT_CLASSIFICATION	1.7897203032586197E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997279977780066	WITHOUT_CLASSIFICATION	2.720022219933534E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997279977780066	WITHOUT_CLASSIFICATION	2.720022219933534E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999346176776402	WITHOUT_CLASSIFICATION	6.538232235972357E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9995722947660822	WITHOUT_CLASSIFICATION	4.277052339177606E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999969861406198	WITHOUT_CLASSIFICATION	3.013859380136864E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999120934280077	WITHOUT_CLASSIFICATION	8.790657199230081E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999120934280077	WITHOUT_CLASSIFICATION	8.790657199230081E-5	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.999990995709531	WITHOUT_CLASSIFICATION	9.004290468938682E-6	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999969175977742	WITHOUT_CLASSIFICATION	3.0824022256703146E-6	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9998765604576153	WITHOUT_CLASSIFICATION	1.2343954238474886E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9998880585798873	WITHOUT_CLASSIFICATION	1.1194142011269396E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982521849617019	WITHOUT_CLASSIFICATION	0.0017478150382981388	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999171214060413	WITHOUT_CLASSIFICATION	8.28785939587224E-5	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.999903790894113	WITHOUT_CLASSIFICATION	9.6209105887064E-5	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999487355450885	WITHOUT_CLASSIFICATION	5.12644549116372E-5	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.999315635930165	WITHOUT_CLASSIFICATION	6.843640698349127E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9997721101714189	WITHOUT_CLASSIFICATION	2.278898285811588E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999540755851751	WITHOUT_CLASSIFICATION	4.592441482475815E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999853612649402	WITHOUT_CLASSIFICATION	1.4638735059749211E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982521849617019	WITHOUT_CLASSIFICATION	0.0017478150382981388	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999136077172784	WITHOUT_CLASSIFICATION	8.6392282721522E-5	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999511069943765	WITHOUT_CLASSIFICATION	4.889300562346119E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999091309831327	WITHOUT_CLASSIFICATION	9.086901686736798E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9992516970723391	WITHOUT_CLASSIFICATION	7.483029276610217E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9992516970723391	WITHOUT_CLASSIFICATION	7.483029276610217E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998090387215146	WITHOUT_CLASSIFICATION	1.9096127848547737E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999962707063106	WITHOUT_CLASSIFICATION	3.729293689398764E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9997250523902658	WITHOUT_CLASSIFICATION	2.7494760973429316E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999691117870907	WITHOUT_CLASSIFICATION	3.088821290942046E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999691117870907	WITHOUT_CLASSIFICATION	3.088821290942046E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999205704396054	WITHOUT_CLASSIFICATION	7.942956039470377E-5	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999672705699086	WITHOUT_CLASSIFICATION	3.272943009135027E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999599954554838	WITHOUT_CLASSIFICATION	4.000454451621271E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.999538980469845	WITHOUT_CLASSIFICATION	4.6101953015495565E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999895213827538	WITHOUT_CLASSIFICATION	1.0478617246309309E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999642199198006	WITHOUT_CLASSIFICATION	3.578008019950464E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999683181350245	WITHOUT_CLASSIFICATION	3.168186497549679E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999743579473642	WITHOUT_CLASSIFICATION	2.5642052635712594E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998784365552423	WITHOUT_CLASSIFICATION	1.2156344475766557E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9997564302875864	WITHOUT_CLASSIFICATION	2.4356971241358167E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999690469085016	WITHOUT_CLASSIFICATION	3.095309149830464E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999857674811247	WITHOUT_CLASSIFICATION	1.423251887538142E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999752052811848	WITHOUT_CLASSIFICATION	2.479471881518172E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999362125110749	WITHOUT_CLASSIFICATION	6.378748892511809E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9995172184421407	WITHOUT_CLASSIFICATION	4.8278155785937957E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.999969422127231	WITHOUT_CLASSIFICATION	3.057787276913589E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998602924165794	WITHOUT_CLASSIFICATION	1.3970758342071455E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999158150233735	WITHOUT_CLASSIFICATION	8.418497662657064E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999158150233735	WITHOUT_CLASSIFICATION	8.418497662657064E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999379310981866	WITHOUT_CLASSIFICATION	6.206890181341995E-5	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997849181038813	WITHOUT_CLASSIFICATION	2.1508189611877318E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997849181038813	WITHOUT_CLASSIFICATION	2.1508189611877318E-4	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9998210601531784	WITHOUT_CLASSIFICATION	1.7893984682162509E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.999944579834466	WITHOUT_CLASSIFICATION	5.542016553403977E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998952799642719	WITHOUT_CLASSIFICATION	1.0472003572811213E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999225376961216	WITHOUT_CLASSIFICATION	7.746230387848295E-5	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999723429028612	WITHOUT_CLASSIFICATION	2.7657097138799357E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.999947738811184	WITHOUT_CLASSIFICATION	5.226118881590864E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999723429028612	WITHOUT_CLASSIFICATION	2.7657097138799357E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999635824378189	WITHOUT_CLASSIFICATION	3.6417562181200186E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999879579717436	WITHOUT_CLASSIFICATION	1.2042028256469145E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9997670839054041	WITHOUT_CLASSIFICATION	2.3291609459592222E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9995172184421407	WITHOUT_CLASSIFICATION	4.8278155785937957E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9997850568735742	WITHOUT_CLASSIFICATION	2.1494312642575736E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999332737089602	WITHOUT_CLASSIFICATION	6.672629103969855E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9997129934557628	WITHOUT_CLASSIFICATION	2.8700654423713834E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9994620797980945	WITHOUT_CLASSIFICATION	5.379202019054464E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9995282601336221	WITHOUT_CLASSIFICATION	4.717398663780006E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999751189890637	WITHOUT_CLASSIFICATION	2.4881010936399763E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969808564105732	WITHOUT_CLASSIFICATION	0.003019143589426723	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969808564105732	WITHOUT_CLASSIFICATION	0.003019143589426723	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9994858495297821	WITHOUT_CLASSIFICATION	5.141504702179061E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999544725791878	WITHOUT_CLASSIFICATION	4.552742081228006E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999635824378189	WITHOUT_CLASSIFICATION	3.6417562181200186E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999635824378189	WITHOUT_CLASSIFICATION	3.6417562181200186E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999681486790373	WITHOUT_CLASSIFICATION	3.1851320962677216E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9955437351617932	WITHOUT_CLASSIFICATION	0.004456264838206822	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.999851288364773	WITHOUT_CLASSIFICATION	1.4871163522701175E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9996228970603653	WITHOUT_CLASSIFICATION	3.7710293963476413E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9998343115921828	WITHOUT_CLASSIFICATION	1.656884078171705E-4	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999613716028084	WITHOUT_CLASSIFICATION	3.862839719171792E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999909465829147	WITHOUT_CLASSIFICATION	9.053417085442416E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.999864971823269	WITHOUT_CLASSIFICATION	1.3502817673093843E-4	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9997803229303807	WITHOUT_CLASSIFICATION	2.1967706961938918E-4	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.99988392225684	WITHOUT_CLASSIFICATION	1.1607774316006343E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999611515656347	WITHOUT_CLASSIFICATION	3.884843436537266E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998612765543292	WITHOUT_CLASSIFICATION	1.3872344567082766E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998612765543292	WITHOUT_CLASSIFICATION	1.3872344567082766E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.999977362720656	WITHOUT_CLASSIFICATION	2.2637279344009072E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999534287431797	WITHOUT_CLASSIFICATION	4.6571256820309104E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.99992098336446	WITHOUT_CLASSIFICATION	7.901663554004116E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.99992098336446	WITHOUT_CLASSIFICATION	7.901663554004116E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999846168215839	WITHOUT_CLASSIFICATION	1.5383178416106828E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9998002727966985	WITHOUT_CLASSIFICATION	1.9972720330156237E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997866741180923	WITHOUT_CLASSIFICATION	2.1332588190774632E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999876983638428	WITHOUT_CLASSIFICATION	1.2301636157145375E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9997639898829647	WITHOUT_CLASSIFICATION	2.3601011703528526E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9994428689044449	WITHOUT_CLASSIFICATION	5.571310955550791E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999571405920162	WITHOUT_CLASSIFICATION	4.2859407983797486E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999369084126991	WITHOUT_CLASSIFICATION	6.309158730085335E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999878118680837	WITHOUT_CLASSIFICATION	1.2188131916165555E-5	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999969947311747	WITHOUT_CLASSIFICATION	3.0052688252916288E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999553661217347	WITHOUT_CLASSIFICATION	4.463387826522879E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993240496759497	WITHOUT_CLASSIFICATION	6.759503240502847E-4	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9998002727966985	WITHOUT_CLASSIFICATION	1.9972720330156237E-4	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999863615926596	WITHOUT_CLASSIFICATION	1.3638407340481018E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.999999866149317	WITHOUT_CLASSIFICATION	1.338506830544987E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999892908099572	WITHOUT_CLASSIFICATION	1.0709190042798237E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999727346296647	WITHOUT_CLASSIFICATION	2.7265370335273174E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999871535215706	WITHOUT_CLASSIFICATION	1.2846478429254007E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998056785297793	WITHOUT_CLASSIFICATION	1.9432147022070115E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9979949688979302	WITHOUT_CLASSIFICATION	0.002005031102069818	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999972289598501	WITHOUT_CLASSIFICATION	2.7710401498939633E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999904125021598	WITHOUT_CLASSIFICATION	9.587497840238023E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.999768428641184	WITHOUT_CLASSIFICATION	2.315713588161083E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9991772152013668	WITHOUT_CLASSIFICATION	8.227847986330562E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9989816563206131	WITHOUT_CLASSIFICATION	0.0010183436793869082	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999888242563725	WITHOUT_CLASSIFICATION	1.1175743627443111E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9980000862173203	WITHOUT_CLASSIFICATION	0.001999913782679683	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9990678290531544	WITHOUT_CLASSIFICATION	9.32170946845618E-4	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9998653378196986	WITHOUT_CLASSIFICATION	1.346621803014383E-4	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999337640616941	WITHOUT_CLASSIFICATION	6.623593830596451E-5	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999077181065873	WITHOUT_CLASSIFICATION	9.228189341274146E-5	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999907398955136	WITHOUT_CLASSIFICATION	9.260104486506638E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9991894008351208	WITHOUT_CLASSIFICATION	8.105991648792385E-4	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999691826587161	WITHOUT_CLASSIFICATION	3.081734128380985E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9997243340360485	WITHOUT_CLASSIFICATION	2.756659639515343E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999834600825931	WITHOUT_CLASSIFICATION	1.6539917406908753E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997787071884828	WITHOUT_CLASSIFICATION	2.2129281151704003E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9997418517167704	WITHOUT_CLASSIFICATION	2.5814828322957834E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999959950623647	WITHOUT_CLASSIFICATION	4.0049376353196E-6	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999609586883548	WITHOUT_CLASSIFICATION	3.90413116452874E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.999574121199342	WITHOUT_CLASSIFICATION	4.258788006580626E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.998518049969578	WITHOUT_CLASSIFICATION	0.0014819500304219095	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9973046324394763	WITHOUT_CLASSIFICATION	0.0026953675605236285	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9998275404983171	WITHOUT_CLASSIFICATION	1.72459501682945E-4	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999918327847765	WITHOUT_CLASSIFICATION	8.167215223400428E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999489691518474	WITHOUT_CLASSIFICATION	5.1030848152540196E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9998312459335821	WITHOUT_CLASSIFICATION	1.6875406641793576E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999738518772916	WITHOUT_CLASSIFICATION	2.6148122708375763E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9911775660935905	WITHOUT_CLASSIFICATION	0.0088224339064095	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.999923758215188	WITHOUT_CLASSIFICATION	7.624178481199438E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997787071884828	WITHOUT_CLASSIFICATION	2.2129281151704003E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999546292646266	WITHOUT_CLASSIFICATION	4.5370735373277084E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999986271508821	WITHOUT_CLASSIFICATION	1.3728491178632487E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999986271508821	WITHOUT_CLASSIFICATION	1.3728491178632487E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999928383240432	WITHOUT_CLASSIFICATION	7.161675956829724E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999928383240432	WITHOUT_CLASSIFICATION	7.161675956829724E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9915573967794347	WITHOUT_CLASSIFICATION	0.008442603220565286	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999483976231515	WITHOUT_CLASSIFICATION	5.160237684854013E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999850405518471	WITHOUT_CLASSIFICATION	1.495944815291676E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9998477940647242	WITHOUT_CLASSIFICATION	1.5220593527570103E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9995991545333336	WITHOUT_CLASSIFICATION	4.0084546666634325E-4	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9998681040865719	WITHOUT_CLASSIFICATION	1.3189591342812067E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9990458572195784	WITHOUT_CLASSIFICATION	9.54142780421652E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999201905009941	WITHOUT_CLASSIFICATION	7.980949900590464E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999705865798664	WITHOUT_CLASSIFICATION	2.9413420133522303E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999643943409219	WITHOUT_CLASSIFICATION	3.5605659078163934E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.999697816138324	WITHOUT_CLASSIFICATION	3.021838616760075E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9998258684291838	WITHOUT_CLASSIFICATION	1.741315708162713E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9966603689725665	WITHOUT_CLASSIFICATION	0.003339631027433587	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999885080323908	WITHOUT_CLASSIFICATION	1.149196760912565E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999512601175894	WITHOUT_CLASSIFICATION	4.873988241053354E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9997129934557628	WITHOUT_CLASSIFICATION	2.8700654423713834E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9991347066125956	WITHOUT_CLASSIFICATION	8.652933874044784E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999911372500729	WITHOUT_CLASSIFICATION	8.862749927089878E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999911372500729	WITHOUT_CLASSIFICATION	8.862749927089878E-5	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9989496395133606	WITHOUT_CLASSIFICATION	0.0010503604866394102	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998861131867114	WITHOUT_CLASSIFICATION	1.1388681328864097E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9982461822442834	WITHOUT_CLASSIFICATION	0.0017538177557166906	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998817236175077	WITHOUT_CLASSIFICATION	1.1827638249224039E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998069883247135	WITHOUT_CLASSIFICATION	1.9301167528654303E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998069883247135	WITHOUT_CLASSIFICATION	1.9301167528654303E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.99889003704676	WITHOUT_CLASSIFICATION	0.0011099629532399773	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.999999822327347	WITHOUT_CLASSIFICATION	1.7767265313304129E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999871887763986	WITHOUT_CLASSIFICATION	1.281122360137449E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999582426523478	WITHOUT_CLASSIFICATION	4.17573476521916E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9996022353838678	WITHOUT_CLASSIFICATION	3.977646161322816E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998817236175077	WITHOUT_CLASSIFICATION	1.1827638249224039E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998069883247135	WITHOUT_CLASSIFICATION	1.9301167528654303E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998069883247135	WITHOUT_CLASSIFICATION	1.9301167528654303E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.99889003704676	WITHOUT_CLASSIFICATION	0.0011099629532399773	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9996042613313917	WITHOUT_CLASSIFICATION	3.957386686083535E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999522818347842	WITHOUT_CLASSIFICATION	4.771816521582469E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9998048062941187	WITHOUT_CLASSIFICATION	1.951937058812859E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999909639989188	WITHOUT_CLASSIFICATION	9.036001081151544E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9968973034021545	WITHOUT_CLASSIFICATION	0.0031026965978454063	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9956674650649378	WITHOUT_CLASSIFICATION	0.00433253493506222	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999689496716825	WITHOUT_CLASSIFICATION	3.105032831748517E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998508284793525	WITHOUT_CLASSIFICATION	1.4917152064753092E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998508284793525	WITHOUT_CLASSIFICATION	1.4917152064753092E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9997422078584308	WITHOUT_CLASSIFICATION	2.577921415692504E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9993167838691117	WITHOUT_CLASSIFICATION	6.832161308882842E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9998506256686689	WITHOUT_CLASSIFICATION	1.4937433133112275E-4	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997452706521984	WITHOUT_CLASSIFICATION	2.547293478015508E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9997358587823229	WITHOUT_CLASSIFICATION	2.6414121767718543E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998544266044067	WITHOUT_CLASSIFICATION	1.455733955932828E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.999894707598482	WITHOUT_CLASSIFICATION	1.0529240151809627E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.999929684810747	WITHOUT_CLASSIFICATION	7.031518925301028E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9934938797614087	WITHOUT_CLASSIFICATION	0.006506120238591387	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.999897326399064	WITHOUT_CLASSIFICATION	1.0267360093602709E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999909498570979	WITHOUT_CLASSIFICATION	9.050142902014523E-6	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9995150363539317	WITHOUT_CLASSIFICATION	4.8496364606833526E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9998979358776937	WITHOUT_CLASSIFICATION	1.0206412230634915E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.997930417044527	WITHOUT_CLASSIFICATION	0.0020695829554729815	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.999837191630082	WITHOUT_CLASSIFICATION	1.628083699179209E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9998034788268445	WITHOUT_CLASSIFICATION	1.9652117315542444E-4	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9986583147015068	WITHOUT_CLASSIFICATION	0.0013416852984931417	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9998964161041768	WITHOUT_CLASSIFICATION	1.0358389582319033E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999623460961761	WITHOUT_CLASSIFICATION	3.765390382387734E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9987940285872073	WITHOUT_CLASSIFICATION	0.0012059714127926587	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9992555646555359	WITHOUT_CLASSIFICATION	7.444353444640365E-4	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9997771028940482	WITHOUT_CLASSIFICATION	2.2289710595180547E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9994414387641697	WITHOUT_CLASSIFICATION	5.585612358302744E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.999913138495362	WITHOUT_CLASSIFICATION	8.686150463802192E-5	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999847808656711	WITHOUT_CLASSIFICATION	1.5219134328823431E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999397788853003	WITHOUT_CLASSIFICATION	6.022111469972748E-5	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9986433913707258	WITHOUT_CLASSIFICATION	0.0013566086292742248	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999991168979339	WITHOUT_CLASSIFICATION	8.831020661124519E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999988459265162	WITHOUT_CLASSIFICATION	1.1540734837470567E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9998425403197082	WITHOUT_CLASSIFICATION	1.5745968029173135E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999719162311649	WITHOUT_CLASSIFICATION	2.808376883514785E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999934483972706	WITHOUT_CLASSIFICATION	6.551602729421768E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999934483972706	WITHOUT_CLASSIFICATION	6.551602729421768E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9998300114909031	WITHOUT_CLASSIFICATION	1.699885090969044E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9998706864880983	WITHOUT_CLASSIFICATION	1.2931351190177944E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999747129447006	WITHOUT_CLASSIFICATION	2.5287055299335783E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999634448260742	WITHOUT_CLASSIFICATION	3.6555173925828944E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999072310381777	WITHOUT_CLASSIFICATION	9.276896182230187E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999865054298132	WITHOUT_CLASSIFICATION	1.3494570186799694E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998952799642719	WITHOUT_CLASSIFICATION	1.0472003572811213E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9997242905329432	WITHOUT_CLASSIFICATION	2.757094670568523E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9987403813206284	WITHOUT_CLASSIFICATION	0.0012596186793716521	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9996281986218366	WITHOUT_CLASSIFICATION	3.7180137816339036E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9995806262269035	WITHOUT_CLASSIFICATION	4.193737730966265E-4	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9990174224670323	WITHOUT_CLASSIFICATION	9.825775329677046E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998952799642719	WITHOUT_CLASSIFICATION	1.0472003572811213E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998952799642719	WITHOUT_CLASSIFICATION	1.0472003572811213E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999919320740981	WITHOUT_CLASSIFICATION	8.067925901935374E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999784927991807	WITHOUT_CLASSIFICATION	2.150720081932236E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9998075907693467	WITHOUT_CLASSIFICATION	1.924092306534069E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999128646413381	WITHOUT_CLASSIFICATION	8.713535866186549E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999782224092	WITHOUT_CLASSIFICATION	2.1777590876723063E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9998916250280205	WITHOUT_CLASSIFICATION	1.0837497197945633E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.999891989910452	WITHOUT_CLASSIFICATION	1.0801008954802232E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.999891989910452	WITHOUT_CLASSIFICATION	1.0801008954802232E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.999891989910452	WITHOUT_CLASSIFICATION	1.0801008954802232E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9997015089807507	WITHOUT_CLASSIFICATION	2.984910192492355E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999488584005576	WITHOUT_CLASSIFICATION	5.114159944243487E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9993236895163082	WITHOUT_CLASSIFICATION	6.763104836917017E-4	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999725704643375	WITHOUT_CLASSIFICATION	2.7429535662433458E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999261256830746	WITHOUT_CLASSIFICATION	7.38743169254307E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9998877877179475	WITHOUT_CLASSIFICATION	1.122122820525674E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999492590543682	WITHOUT_CLASSIFICATION	5.07409456319001E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9998766244811624	WITHOUT_CLASSIFICATION	1.233755188376088E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9993236895163082	WITHOUT_CLASSIFICATION	6.763104836917017E-4	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999849537700627	WITHOUT_CLASSIFICATION	1.5046229937304102E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9998743114550553	WITHOUT_CLASSIFICATION	1.2568854494462086E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999335957424896	WITHOUT_CLASSIFICATION	6.64042575102676E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999763729544883	WITHOUT_CLASSIFICATION	2.3627045511729757E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9994979461136493	WITHOUT_CLASSIFICATION	5.020538863507154E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999332750673552	WITHOUT_CLASSIFICATION	6.672493264479003E-5	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999932258614894	WITHOUT_CLASSIFICATION	6.774138510600631E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9996978560755769	WITHOUT_CLASSIFICATION	3.021439244230404E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999955072201748	WITHOUT_CLASSIFICATION	4.49277982520417E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9998715985323959	WITHOUT_CLASSIFICATION	1.2840146760411346E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999955072201748	WITHOUT_CLASSIFICATION	4.49277982520417E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9997287334335145	WITHOUT_CLASSIFICATION	2.712665664854947E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9996319614539496	WITHOUT_CLASSIFICATION	3.6803854605042493E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999583715949906	WITHOUT_CLASSIFICATION	4.1628405009367523E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999535797415092	WITHOUT_CLASSIFICATION	4.642025849086002E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999286862323816	WITHOUT_CLASSIFICATION	7.131376761846681E-5	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999972452848372	WITHOUT_CLASSIFICATION	2.7547151627998594E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9913982899393184	WITHOUT_CLASSIFICATION	0.008601710060681573	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9980701004981005	WITHOUT_CLASSIFICATION	0.0019298995018995062	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9998907626935367	WITHOUT_CLASSIFICATION	1.0923730646331242E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9989560860148059	WITHOUT_CLASSIFICATION	0.0010439139851940965	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9996806013663403	WITHOUT_CLASSIFICATION	3.193986336597561E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9996988609705322	WITHOUT_CLASSIFICATION	3.0113902946775817E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9995787853932122	WITHOUT_CLASSIFICATION	4.212146067878127E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9758833204656568	WITHOUT_CLASSIFICATION	0.024116679534343155	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9995725400088138	WITHOUT_CLASSIFICATION	4.274599911861449E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9997782886361826	WITHOUT_CLASSIFICATION	2.2171136381747043E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999099668490589	WITHOUT_CLASSIFICATION	9.003315094117316E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9670704516500122	WITHOUT_CLASSIFICATION	0.032929548349987826	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999783302647096	WITHOUT_CLASSIFICATION	2.1669735290391117E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999292206805757	WITHOUT_CLASSIFICATION	7.077931942427442E-5	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999798341614714	WITHOUT_CLASSIFICATION	2.016583852861896E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999291751519371	WITHOUT_CLASSIFICATION	7.082484806280822E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999340286868451	WITHOUT_CLASSIFICATION	6.59713131548832E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9913982899393184	WITHOUT_CLASSIFICATION	0.008601710060681573	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9997268132553502	WITHOUT_CLASSIFICATION	2.7318674464972954E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9997268132553502	WITHOUT_CLASSIFICATION	2.7318674464972954E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.99997832296098	WITHOUT_CLASSIFICATION	2.16770390199939E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999820659025568	WITHOUT_CLASSIFICATION	1.793409744322839E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999820659025568	WITHOUT_CLASSIFICATION	1.793409744322839E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9997560712165191	WITHOUT_CLASSIFICATION	2.439287834808522E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9997560712165191	WITHOUT_CLASSIFICATION	2.439287834808522E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9988399525885286	WITHOUT_CLASSIFICATION	0.0011600474114713776	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999710783574495	WITHOUT_CLASSIFICATION	2.8921642550550388E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998709526875413	WITHOUT_CLASSIFICATION	1.2904731245862245E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997746785835592	WITHOUT_CLASSIFICATION	2.2532141644087073E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999702268630292	WITHOUT_CLASSIFICATION	2.9773136970708868E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9998190308630218	WITHOUT_CLASSIFICATION	1.8096913697823202E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999831297235093	WITHOUT_CLASSIFICATION	1.6870276490701678E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999757230680838	WITHOUT_CLASSIFICATION	2.4276931916235728E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.99994821500256	WITHOUT_CLASSIFICATION	5.178499744007316E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999931973862185	WITHOUT_CLASSIFICATION	6.802613781523138E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9998544280936951	WITHOUT_CLASSIFICATION	1.4557190630496464E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999573448456268	WITHOUT_CLASSIFICATION	4.265515437309906E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995797871850819	WITHOUT_CLASSIFICATION	4.202128149181516E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995797871850819	WITHOUT_CLASSIFICATION	4.202128149181516E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9996934431751702	WITHOUT_CLASSIFICATION	3.065568248298734E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9986722767209187	WITHOUT_CLASSIFICATION	0.0013277232790812714	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999916569402336	WITHOUT_CLASSIFICATION	8.34305976641941E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9984811007694694	WITHOUT_CLASSIFICATION	0.001518899230530578	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999897126831759	WITHOUT_CLASSIFICATION	1.0287316824037312E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999473144568961	WITHOUT_CLASSIFICATION	5.268554310387866E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999860571922795	WITHOUT_CLASSIFICATION	1.3942807720588637E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999188539558562	WITHOUT_CLASSIFICATION	8.114604414366926E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.999891945677849	WITHOUT_CLASSIFICATION	1.0805432215101784E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9998389494226396	WITHOUT_CLASSIFICATION	1.6105057736039895E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999973013716451	WITHOUT_CLASSIFICATION	2.698628354788322E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999744619569433	WITHOUT_CLASSIFICATION	2.553804305664109E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999904308454778	WITHOUT_CLASSIFICATION	9.569154522200673E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999756159677544	WITHOUT_CLASSIFICATION	2.4384032245619795E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9998978317640981	WITHOUT_CLASSIFICATION	1.0216823590197053E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999826373610203	WITHOUT_CLASSIFICATION	1.7362638979764697E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999298237126713	WITHOUT_CLASSIFICATION	7.017628732878812E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999478732137885	WITHOUT_CLASSIFICATION	5.212678621145991E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999165278661133	WITHOUT_CLASSIFICATION	8.347213388668984E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999649833927732	WITHOUT_CLASSIFICATION	3.501660722692052E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9998876409821393	WITHOUT_CLASSIFICATION	1.1235901786067056E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999871706967413	WITHOUT_CLASSIFICATION	1.2829303258704036E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999832468832656	WITHOUT_CLASSIFICATION	1.675311673441613E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999528653076982	WITHOUT_CLASSIFICATION	4.713469230169756E-5	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999528653076982	WITHOUT_CLASSIFICATION	4.713469230169756E-5	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999717898908057	WITHOUT_CLASSIFICATION	2.8210109194407676E-5	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999934895030061	WITHOUT_CLASSIFICATION	6.510496993862288E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999889450938816	WITHOUT_CLASSIFICATION	1.1054906118460593E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9998491127854858	WITHOUT_CLASSIFICATION	1.5088721451413797E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.999950739753041	WITHOUT_CLASSIFICATION	4.926024695892298E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9982936668494347	WITHOUT_CLASSIFICATION	0.0017063331505652727	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9991314127910436	WITHOUT_CLASSIFICATION	8.685872089564165E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9998528216560658	WITHOUT_CLASSIFICATION	1.4717834393430197E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9994012632129983	WITHOUT_CLASSIFICATION	5.98736787001687E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9995524101867367	WITHOUT_CLASSIFICATION	4.475898132632435E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999720761291463	WITHOUT_CLASSIFICATION	2.7923870853668776E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998691077673587	WITHOUT_CLASSIFICATION	1.3089223264132295E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999515406955172	WITHOUT_CLASSIFICATION	4.845930448284394E-5	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999484058167952	WITHOUT_CLASSIFICATION	5.159418320489667E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999643556068413	WITHOUT_CLASSIFICATION	3.5644393158840336E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9997545002926779	WITHOUT_CLASSIFICATION	2.454997073221393E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999505000432072	WITHOUT_CLASSIFICATION	4.9499956792877886E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999878702923313	WITHOUT_CLASSIFICATION	1.2129707668631253E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999233275474209	WITHOUT_CLASSIFICATION	7.667245257918901E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9995676936425651	WITHOUT_CLASSIFICATION	4.323063574348651E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999943509778411	WITHOUT_CLASSIFICATION	5.649022158924972E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999137702020012	WITHOUT_CLASSIFICATION	8.6229797998669E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9997545002926779	WITHOUT_CLASSIFICATION	2.454997073221393E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999878702923313	WITHOUT_CLASSIFICATION	1.2129707668631253E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999643020964948	WITHOUT_CLASSIFICATION	3.5697903505180964E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999877576104796	WITHOUT_CLASSIFICATION	1.2242389520339451E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999524586517313	WITHOUT_CLASSIFICATION	4.754134826879569E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9998981790219285	WITHOUT_CLASSIFICATION	1.018209780714643E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990760416205337	WITHOUT_CLASSIFICATION	9.239583794663064E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9991135728715079	WITHOUT_CLASSIFICATION	8.864271284920189E-4	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.999952229990898	WITHOUT_CLASSIFICATION	4.777000910198605E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999337051893944	WITHOUT_CLASSIFICATION	6.629481060561788E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999711593158509	WITHOUT_CLASSIFICATION	2.884068414914115E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999711593158509	WITHOUT_CLASSIFICATION	2.884068414914115E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9998716591919943	WITHOUT_CLASSIFICATION	1.2834080800562623E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999210669845774	WITHOUT_CLASSIFICATION	7.893301542265004E-5	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9998403210881536	WITHOUT_CLASSIFICATION	1.59678911846452E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999642199198006	WITHOUT_CLASSIFICATION	3.578008019950464E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999642199198006	WITHOUT_CLASSIFICATION	3.578008019950464E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999962707063106	WITHOUT_CLASSIFICATION	3.729293689398764E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9997250523902658	WITHOUT_CLASSIFICATION	2.7494760973429316E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999857674811247	WITHOUT_CLASSIFICATION	1.423251887538142E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999752052811848	WITHOUT_CLASSIFICATION	2.479471881518172E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9996711204485172	WITHOUT_CLASSIFICATION	3.288795514828459E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999213885528699	WITHOUT_CLASSIFICATION	7.861144712999047E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999607689787774	WITHOUT_CLASSIFICATION	3.923102122259469E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998843878888982	WITHOUT_CLASSIFICATION	1.1561211110174695E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999908325821703	WITHOUT_CLASSIFICATION	9.167417829711984E-6	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999958824665519	WITHOUT_CLASSIFICATION	4.117533448084931E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999974180799583	WITHOUT_CLASSIFICATION	2.581920041688058E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9993809799514588	WITHOUT_CLASSIFICATION	6.190200485410994E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999857674811247	WITHOUT_CLASSIFICATION	1.423251887538142E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999752052811848	WITHOUT_CLASSIFICATION	2.479471881518172E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998508284793525	WITHOUT_CLASSIFICATION	1.4917152064753092E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998987351787086	WITHOUT_CLASSIFICATION	1.012648212914656E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999630242917508	WITHOUT_CLASSIFICATION	3.697570824932993E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9998112505115814	WITHOUT_CLASSIFICATION	1.8874948841869892E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9998112505115814	WITHOUT_CLASSIFICATION	1.8874948841869892E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9996215562702547	WITHOUT_CLASSIFICATION	3.7844372974529453E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9996215562702547	WITHOUT_CLASSIFICATION	3.7844372974529453E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999438138501089	WITHOUT_CLASSIFICATION	5.6186149891198656E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999476284703336	WITHOUT_CLASSIFICATION	5.237152966631703E-5	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999434837903605	WITHOUT_CLASSIFICATION	5.651620963942916E-5	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999404325278789	WITHOUT_CLASSIFICATION	5.9567472121135434E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.999904169944217	WITHOUT_CLASSIFICATION	9.583005578294537E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999285534283562	WITHOUT_CLASSIFICATION	7.14465716437963E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.999978302504447	WITHOUT_CLASSIFICATION	2.169749555311208E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9996869808758156	WITHOUT_CLASSIFICATION	3.130191241843592E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999878476735133	WITHOUT_CLASSIFICATION	1.2152326486543387E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999878476735133	WITHOUT_CLASSIFICATION	1.2152326486543387E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995580130774254	WITHOUT_CLASSIFICATION	4.419869225746299E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995580130774254	WITHOUT_CLASSIFICATION	4.419869225746299E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995580130774254	WITHOUT_CLASSIFICATION	4.419869225746299E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999791502268985	WITHOUT_CLASSIFICATION	2.0849773101490896E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999791502268985	WITHOUT_CLASSIFICATION	2.0849773101490896E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999791502268985	WITHOUT_CLASSIFICATION	2.0849773101490896E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999915401638751	WITHOUT_CLASSIFICATION	8.459836124933946E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999915401638751	WITHOUT_CLASSIFICATION	8.459836124933946E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9997003086242663	WITHOUT_CLASSIFICATION	2.996913757336825E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9997003086242663	WITHOUT_CLASSIFICATION	2.996913757336825E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999364540733555	WITHOUT_CLASSIFICATION	6.354592664447333E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999364540733555	WITHOUT_CLASSIFICATION	6.354592664447333E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999264790801249	WITHOUT_CLASSIFICATION	7.352091987512877E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999264790801249	WITHOUT_CLASSIFICATION	7.352091987512877E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999184412780046	WITHOUT_CLASSIFICATION	8.15587219954103E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999184412780046	WITHOUT_CLASSIFICATION	8.15587219954103E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999463877640664	WITHOUT_CLASSIFICATION	5.3612235933539166E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999463877640664	WITHOUT_CLASSIFICATION	5.3612235933539166E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999958333300714	WITHOUT_CLASSIFICATION	4.166669928634143E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999958333300714	WITHOUT_CLASSIFICATION	4.166669928634143E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999915401638751	WITHOUT_CLASSIFICATION	8.459836124933946E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9997003086242663	WITHOUT_CLASSIFICATION	2.996913757336825E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999364540733555	WITHOUT_CLASSIFICATION	6.354592664447333E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999184412780046	WITHOUT_CLASSIFICATION	8.15587219954103E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999463877640664	WITHOUT_CLASSIFICATION	5.3612235933539166E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999958333300714	WITHOUT_CLASSIFICATION	4.166669928634143E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9998321292665675	WITHOUT_CLASSIFICATION	1.6787073343248042E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9736438376936494	WITHOUT_CLASSIFICATION	0.02635616230635062	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9997950643613196	WITHOUT_CLASSIFICATION	2.049356386804455E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998560970340785	WITHOUT_CLASSIFICATION	1.4390296592145898E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999689398355733	WITHOUT_CLASSIFICATION	3.106016442665051E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999620998176296	WITHOUT_CLASSIFICATION	3.7900182370355565E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999475805239442	WITHOUT_CLASSIFICATION	5.241947605571974E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999284045667117	WITHOUT_CLASSIFICATION	7.15954332882812E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999473661680506	WITHOUT_CLASSIFICATION	5.2633831949508534E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9998303976783213	WITHOUT_CLASSIFICATION	1.696023216785932E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996549407050959	WITHOUT_CLASSIFICATION	3.450592949041554E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999472656437656	WITHOUT_CLASSIFICATION	5.273435623446228E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999492163869683	WITHOUT_CLASSIFICATION	5.078361303171929E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9997501081232724	WITHOUT_CLASSIFICATION	2.4989187672761783E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9994443024512452	WITHOUT_CLASSIFICATION	5.556975487548966E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999424485029622	WITHOUT_CLASSIFICATION	5.7551497037763085E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9997321096685461	WITHOUT_CLASSIFICATION	2.678903314538849E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9997485894676501	WITHOUT_CLASSIFICATION	2.514105323499815E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9993922914452209	WITHOUT_CLASSIFICATION	6.077085547790881E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997799640164278	WITHOUT_CLASSIFICATION	2.2003598357234482E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9998644215442596	WITHOUT_CLASSIFICATION	1.3557845574047256E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9997250506404856	WITHOUT_CLASSIFICATION	2.7494935951447963E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997321096685461	WITHOUT_CLASSIFICATION	2.678903314538849E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999097332618287	WITHOUT_CLASSIFICATION	9.026673817119322E-5	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999097332618287	WITHOUT_CLASSIFICATION	9.026673817119322E-5	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9993922914452209	WITHOUT_CLASSIFICATION	6.077085547790881E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9997782923946128	WITHOUT_CLASSIFICATION	2.2170760538724885E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9995636787068436	WITHOUT_CLASSIFICATION	4.3632129315635904E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9997607998915219	WITHOUT_CLASSIFICATION	2.3920010847817714E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9998283697433014	WITHOUT_CLASSIFICATION	1.7163025669865325E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.999967737779237	WITHOUT_CLASSIFICATION	3.2262220763053655E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.999830558274609	WITHOUT_CLASSIFICATION	1.6944172539103158E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9992382884084151	WITHOUT_CLASSIFICATION	7.617115915848657E-4	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9998292261366474	WITHOUT_CLASSIFICATION	1.7077386335254626E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998547787643306	WITHOUT_CLASSIFICATION	1.4522123566937265E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998547787643306	WITHOUT_CLASSIFICATION	1.4522123566937265E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998309128879692	WITHOUT_CLASSIFICATION	1.6908711203064835E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998309128879692	WITHOUT_CLASSIFICATION	1.6908711203064835E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998309128879692	WITHOUT_CLASSIFICATION	1.6908711203064835E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999840491608287	WITHOUT_CLASSIFICATION	1.595083917133677E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999840491608287	WITHOUT_CLASSIFICATION	1.595083917133677E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999468419747233	WITHOUT_CLASSIFICATION	5.3158025276626104E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999468419747233	WITHOUT_CLASSIFICATION	5.3158025276626104E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9997074140027407	WITHOUT_CLASSIFICATION	2.925859972593243E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.999925733928699	WITHOUT_CLASSIFICATION	7.42660713010031E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9997114277726811	WITHOUT_CLASSIFICATION	2.885722273189741E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999618574240795	WITHOUT_CLASSIFICATION	3.814257592048358E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999903422613474	WITHOUT_CLASSIFICATION	9.65773865254705E-6	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9998610782964859	WITHOUT_CLASSIFICATION	1.3892170351416044E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999747875660687	WITHOUT_CLASSIFICATION	2.521243393129791E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999247777811725	WITHOUT_CLASSIFICATION	7.522221882747412E-5	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999527370966759	WITHOUT_CLASSIFICATION	4.7262903324229595E-5	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9996712530842353	WITHOUT_CLASSIFICATION	3.287469157646487E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999537706681053	WITHOUT_CLASSIFICATION	4.6229331894752554E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999893253315565	WITHOUT_CLASSIFICATION	1.067466844353645E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9998331158747911	WITHOUT_CLASSIFICATION	1.6688412520899084E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9998292261366474	WITHOUT_CLASSIFICATION	1.7077386335254626E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9992735919652928	WITHOUT_CLASSIFICATION	7.264080347072471E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999508722983645	WITHOUT_CLASSIFICATION	4.912770163548899E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9995036135631515	WITHOUT_CLASSIFICATION	4.963864368485023E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999947435879035	WITHOUT_CLASSIFICATION	5.256412096491753E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999947435879035	WITHOUT_CLASSIFICATION	5.256412096491753E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999947435879035	WITHOUT_CLASSIFICATION	5.256412096491753E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999477665761871	WITHOUT_CLASSIFICATION	5.2233423812911346E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999477665761871	WITHOUT_CLASSIFICATION	5.2233423812911346E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999472725776639	WITHOUT_CLASSIFICATION	5.2727422336091235E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999472725776639	WITHOUT_CLASSIFICATION	5.2727422336091235E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.999742365176509	WITHOUT_CLASSIFICATION	2.5763482349096684E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999811345364812	WITHOUT_CLASSIFICATION	1.8865463518816645E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994780624475074	WITHOUT_CLASSIFICATION	5.219375524926382E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994780624475074	WITHOUT_CLASSIFICATION	5.219375524926382E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998654209167788	WITHOUT_CLASSIFICATION	1.3457908322124485E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9994947332519728	WITHOUT_CLASSIFICATION	5.052667480271292E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9858858969856424	WITHOUT_CLASSIFICATION	0.014114103014357456	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999660819946831	WITHOUT_CLASSIFICATION	3.391800531703068E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999660819946831	WITHOUT_CLASSIFICATION	3.391800531703068E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999695468447842	WITHOUT_CLASSIFICATION	3.0453155215747222E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999504539840168	WITHOUT_CLASSIFICATION	4.9546015983082536E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999326818189257	WITHOUT_CLASSIFICATION	6.73181810743726E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999840491608287	WITHOUT_CLASSIFICATION	1.595083917133677E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999840491608287	WITHOUT_CLASSIFICATION	1.595083917133677E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999468419747233	WITHOUT_CLASSIFICATION	5.3158025276626104E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9998331158747911	WITHOUT_CLASSIFICATION	1.6688412520899084E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9998292261366474	WITHOUT_CLASSIFICATION	1.7077386335254626E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999469222743165	WITHOUT_CLASSIFICATION	5.3077725683586587E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999477665761871	WITHOUT_CLASSIFICATION	5.2233423812911346E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998654209167788	WITHOUT_CLASSIFICATION	1.3457908322124485E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.999943451967559	WITHOUT_CLASSIFICATION	5.6548032441016014E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.999901863783568	WITHOUT_CLASSIFICATION	9.813621643204428E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9998917978957521	WITHOUT_CLASSIFICATION	1.0820210424791053E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996549407050959	WITHOUT_CLASSIFICATION	3.450592949041554E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9997104198462063	WITHOUT_CLASSIFICATION	2.895801537936889E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9998064221057462	WITHOUT_CLASSIFICATION	1.9357789425376718E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999733654373931	WITHOUT_CLASSIFICATION	2.663456260685268E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999146690774301	WITHOUT_CLASSIFICATION	8.533092256988261E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9998514779550006	WITHOUT_CLASSIFICATION	1.4852204499938448E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.999991131598871	WITHOUT_CLASSIFICATION	8.86840112888675E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999315980821869	WITHOUT_CLASSIFICATION	6.840191781305369E-5	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999236702289851	WITHOUT_CLASSIFICATION	7.63297710150002E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999468856029037	WITHOUT_CLASSIFICATION	5.311439709633482E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999283211042077	WITHOUT_CLASSIFICATION	7.167889579223482E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999816700856391	WITHOUT_CLASSIFICATION	1.832991436086591E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.999971712067892	WITHOUT_CLASSIFICATION	2.8287932107959426E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9984747770588108	WITHOUT_CLASSIFICATION	0.0015252229411891163	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9967873604161417	WITHOUT_CLASSIFICATION	0.0032126395838582684	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999312279280174	WITHOUT_CLASSIFICATION	6.87720719826729E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999443796036038	WITHOUT_CLASSIFICATION	5.5620396396160145E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999895484179338	WITHOUT_CLASSIFICATION	1.0451582066197743E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999910769347893	WITHOUT_CLASSIFICATION	8.923065210654499E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999910769347893	WITHOUT_CLASSIFICATION	8.923065210654499E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.999951516427319	WITHOUT_CLASSIFICATION	4.8483572680907975E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999758224560188	WITHOUT_CLASSIFICATION	2.4177543981190842E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9964499080974079	WITHOUT_CLASSIFICATION	0.003550091902592204	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9986198124043115	WITHOUT_CLASSIFICATION	0.0013801875956884772	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999155909776015	WITHOUT_CLASSIFICATION	8.440902239843064E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9996991908911026	WITHOUT_CLASSIFICATION	3.0080910889746865E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999325956357575	WITHOUT_CLASSIFICATION	6.740436424236758E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9998805864315384	WITHOUT_CLASSIFICATION	1.1941356846154452E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9950134658178335	WITHOUT_CLASSIFICATION	0.004986534182166553	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999769180066067	WITHOUT_CLASSIFICATION	2.308199339330164E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9998567387291609	WITHOUT_CLASSIFICATION	1.4326127083917365E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999284625580415	WITHOUT_CLASSIFICATION	7.153744195855584E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999186947900124	WITHOUT_CLASSIFICATION	8.13052099876158E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.999897129864172	WITHOUT_CLASSIFICATION	1.02870135827984E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999710741056854	WITHOUT_CLASSIFICATION	2.8925894314651622E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9998669555494396	WITHOUT_CLASSIFICATION	1.330444505604583E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999198104951843	WITHOUT_CLASSIFICATION	8.01895048156589E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999659128193871	WITHOUT_CLASSIFICATION	3.408718061296871E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999659128193871	WITHOUT_CLASSIFICATION	3.408718061296871E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999836044420238	WITHOUT_CLASSIFICATION	1.639555797618982E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999787151059716	WITHOUT_CLASSIFICATION	2.1284894028467057E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999822067287384	WITHOUT_CLASSIFICATION	1.779327126154738E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999787179519349	WITHOUT_CLASSIFICATION	2.1282048065060287E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999789764720944	WITHOUT_CLASSIFICATION	2.10235279054789E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999544797490416	WITHOUT_CLASSIFICATION	4.5520250958420086E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.999996483753578	WITHOUT_CLASSIFICATION	3.5162464220995975E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999709332749006	WITHOUT_CLASSIFICATION	2.9066725099271976E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999959702281363	WITHOUT_CLASSIFICATION	4.029771863686667E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9994316039848548	WITHOUT_CLASSIFICATION	5.683960151452317E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999912480754951	WITHOUT_CLASSIFICATION	8.751924504988201E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9994325096224003	WITHOUT_CLASSIFICATION	5.67490377599731E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999000557641656	WITHOUT_CLASSIFICATION	9.994423583441092E-5	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999293281744671	WITHOUT_CLASSIFICATION	7.067182553291476E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999983706790304	WITHOUT_CLASSIFICATION	1.6293209696253375E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999986454922579	WITHOUT_CLASSIFICATION	1.3545077421082987E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998922570167198	WITHOUT_CLASSIFICATION	1.077429832802202E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9997269849184187	WITHOUT_CLASSIFICATION	2.7301508158129395E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9994487159438992	WITHOUT_CLASSIFICATION	5.512840561008106E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999857876996216	WITHOUT_CLASSIFICATION	1.4212300378399435E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9988301939779887	WITHOUT_CLASSIFICATION	0.0011698060220113212	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998447683294781	WITHOUT_CLASSIFICATION	1.5523167052188897E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999699552082671	WITHOUT_CLASSIFICATION	3.0044791732832597E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998644714587271	WITHOUT_CLASSIFICATION	1.3552854127283598E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999984913517619	WITHOUT_CLASSIFICATION	1.5086482381133016E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999864867163177	WITHOUT_CLASSIFICATION	1.3513283682352854E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999596202406486	WITHOUT_CLASSIFICATION	4.037975935145526E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998493868850714	WITHOUT_CLASSIFICATION	1.506131149285531E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999970005014933	WITHOUT_CLASSIFICATION	2.9994985066966048E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.999999389065735	WITHOUT_CLASSIFICATION	6.109342650172528E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9997153512624906	WITHOUT_CLASSIFICATION	2.84648737509465E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.999552504787134	WITHOUT_CLASSIFICATION	4.474952128659197E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997698171244391	WITHOUT_CLASSIFICATION	2.3018287556083596E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999839897158628	WITHOUT_CLASSIFICATION	1.6010284137226603E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999040419125437	WITHOUT_CLASSIFICATION	9.595808745631603E-5	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9989777150065384	WITHOUT_CLASSIFICATION	0.0010222849934615043	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9996273467170244	WITHOUT_CLASSIFICATION	3.7265328297565563E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999246387730365	WITHOUT_CLASSIFICATION	7.536122696351151E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9991934487662729	WITHOUT_CLASSIFICATION	8.065512337270932E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999414878554327	WITHOUT_CLASSIFICATION	5.8512144567229076E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999123585708788	WITHOUT_CLASSIFICATION	8.764142912112578E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999233014721938	WITHOUT_CLASSIFICATION	7.669852780624302E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999798840676773	WITHOUT_CLASSIFICATION	2.011593232264188E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998638497047881	WITHOUT_CLASSIFICATION	1.3615029521185578E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999934866036556	WITHOUT_CLASSIFICATION	6.5133963444756425E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999183616059125	WITHOUT_CLASSIFICATION	8.163839408747613E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996157930468933	WITHOUT_CLASSIFICATION	3.8420695310680333E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999186041021045	WITHOUT_CLASSIFICATION	8.139589789547428E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999514184731445	WITHOUT_CLASSIFICATION	4.858152685555646E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.999831815631388	WITHOUT_CLASSIFICATION	1.681843686119691E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.984087059857693	WITHOUT_CLASSIFICATION	0.015912940142307125	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999400642582208	WITHOUT_CLASSIFICATION	5.993574177924364E-5	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999575597678737	WITHOUT_CLASSIFICATION	4.244023212628096E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9997412167103621	WITHOUT_CLASSIFICATION	2.5878328963794373E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999656556626356	WITHOUT_CLASSIFICATION	3.434433736435816E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999302800623798	WITHOUT_CLASSIFICATION	6.971993762019257E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.999947943759263	WITHOUT_CLASSIFICATION	5.20562407370532E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9993419007385803	WITHOUT_CLASSIFICATION	6.580992614196373E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999914057054226	WITHOUT_CLASSIFICATION	8.594294577396649E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9998978708663444	WITHOUT_CLASSIFICATION	1.0212913365551645E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998570317505412	WITHOUT_CLASSIFICATION	1.4296824945881246E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9994835168097826	WITHOUT_CLASSIFICATION	5.164831902174213E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9984783149590305	WITHOUT_CLASSIFICATION	0.001521685040969571	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999530246908225	WITHOUT_CLASSIFICATION	4.69753091775397E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999468887802746	WITHOUT_CLASSIFICATION	5.311121972544394E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998310245142072	WITHOUT_CLASSIFICATION	1.6897548579280702E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999786218273492	WITHOUT_CLASSIFICATION	2.137817265074723E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997685467346515	WITHOUT_CLASSIFICATION	2.3145326534837357E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997683552381267	WITHOUT_CLASSIFICATION	2.3164476187319898E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9997274594038572	WITHOUT_CLASSIFICATION	2.7254059614276275E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999851277493994	WITHOUT_CLASSIFICATION	1.4872250600689872E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999492991547798	WITHOUT_CLASSIFICATION	5.070084522025121E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999968195875008	WITHOUT_CLASSIFICATION	3.1804124991126746E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999477668005317	WITHOUT_CLASSIFICATION	5.22331994683602E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998816781036527	WITHOUT_CLASSIFICATION	1.1832189634732379E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9975634667689651	WITHOUT_CLASSIFICATION	0.002436533231034907	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999663743185361	WITHOUT_CLASSIFICATION	3.362568146391171E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999134626554466	WITHOUT_CLASSIFICATION	8.6537344553459E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999921216306001	WITHOUT_CLASSIFICATION	7.878369399903896E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999603847737776	WITHOUT_CLASSIFICATION	3.961522622240659E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999375272193497	WITHOUT_CLASSIFICATION	6.247278065031068E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565024673943	WITHOUT_CLASSIFICATION	4.349753260576376E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999592890631938	WITHOUT_CLASSIFICATION	4.07109368063381E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999652552912548	WITHOUT_CLASSIFICATION	3.474470874507917E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998088364500982	WITHOUT_CLASSIFICATION	1.911635499016909E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999584772170169	WITHOUT_CLASSIFICATION	4.152278298303822E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999412273168247	WITHOUT_CLASSIFICATION	5.877268317528448E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999709146897274	WITHOUT_CLASSIFICATION	2.9085310272642455E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998088404724693	WITHOUT_CLASSIFICATION	1.9115952753060185E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993514013728686	WITHOUT_CLASSIFICATION	6.485986271314899E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536339136063	WITHOUT_CLASSIFICATION	4.6366086393632316E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999503958633539	WITHOUT_CLASSIFICATION	4.960413664626693E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992086317218902	WITHOUT_CLASSIFICATION	7.913682781098216E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992575574759579	WITHOUT_CLASSIFICATION	7.424425240420865E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993281882829318	WITHOUT_CLASSIFICATION	6.71811717068184E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993281882829318	WITHOUT_CLASSIFICATION	6.71811717068184E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998691862977729	WITHOUT_CLASSIFICATION	1.3081370222703753E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996449232509798	WITHOUT_CLASSIFICATION	3.5507674902031513E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991375464845599	WITHOUT_CLASSIFICATION	8.624535154401627E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991534092935943	WITHOUT_CLASSIFICATION	8.465907064057202E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998782686277374	WITHOUT_CLASSIFICATION	1.2173137226260459E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9972234377298004	WITHOUT_CLASSIFICATION	0.0027765622701996086	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992572622500484	WITHOUT_CLASSIFICATION	7.42737749951609E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997116807413414	WITHOUT_CLASSIFICATION	2.883192586585486E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999668458763881	WITHOUT_CLASSIFICATION	3.315412361203053E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993514013728686	WITHOUT_CLASSIFICATION	6.485986271314899E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999120224745109	WITHOUT_CLASSIFICATION	8.797752548905333E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991534092935943	WITHOUT_CLASSIFICATION	8.465907064057207E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993398170850795	WITHOUT_CLASSIFICATION	6.60182914920603E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998798880598327	WITHOUT_CLASSIFICATION	1.2011194016720092E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996449232509798	WITHOUT_CLASSIFICATION	3.5507674902031513E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997182576011204	WITHOUT_CLASSIFICATION	2.817423988796023E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999636142207314	WITHOUT_CLASSIFICATION	3.638577926865896E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999710355717016	WITHOUT_CLASSIFICATION	2.8964428298392745E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998929880923532	WITHOUT_CLASSIFICATION	1.0701190764694825E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999663743185361	WITHOUT_CLASSIFICATION	3.362568146391171E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999175072955502	WITHOUT_CLASSIFICATION	8.249270444982063E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999710355717016	WITHOUT_CLASSIFICATION	2.8964428298392745E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999175072955502	WITHOUT_CLASSIFICATION	8.249270444982063E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991953060395781	WITHOUT_CLASSIFICATION	8.046939604218797E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9984266255433508	WITHOUT_CLASSIFICATION	0.001573374456649264	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994101704698873	WITHOUT_CLASSIFICATION	5.89829530112592E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999410551581022	WITHOUT_CLASSIFICATION	5.894484189781085E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9941265916904751	WITHOUT_CLASSIFICATION	0.005873408309524818	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994265465297828	WITHOUT_CLASSIFICATION	5.734534702171155E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992572622500484	WITHOUT_CLASSIFICATION	7.42737749951609E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996734539022087	WITHOUT_CLASSIFICATION	3.265460977912618E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9975634667689651	WITHOUT_CLASSIFICATION	0.0024365332310349085	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993514013728686	WITHOUT_CLASSIFICATION	6.485986271314901E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992342449258671	WITHOUT_CLASSIFICATION	7.657550741329032E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999224632813103	WITHOUT_CLASSIFICATION	7.753671868969403E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996734539022087	WITHOUT_CLASSIFICATION	3.265460977912618E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999666274154323	WITHOUT_CLASSIFICATION	3.337258456775953E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998090387215146	WITHOUT_CLASSIFICATION	1.9096127848547737E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999238629352045	WITHOUT_CLASSIFICATION	7.613706479541172E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999595366785947	WITHOUT_CLASSIFICATION	4.046332140524666E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996885000159021	WITHOUT_CLASSIFICATION	3.1149998409786675E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999680809113513	WITHOUT_CLASSIFICATION	3.191908864876162E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996885000159021	WITHOUT_CLASSIFICATION	3.1149998409786675E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999604091007419	WITHOUT_CLASSIFICATION	3.959089925813596E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998731824755501	WITHOUT_CLASSIFICATION	1.2681752444995825E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992940230708163	WITHOUT_CLASSIFICATION	7.059769291837088E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999245963917929	WITHOUT_CLASSIFICATION	7.540360820720592E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999503958633539	WITHOUT_CLASSIFICATION	4.960413664626693E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999710741056854	WITHOUT_CLASSIFICATION	2.8925894314651622E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993240496759497	WITHOUT_CLASSIFICATION	6.759503240502847E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990760416205337	WITHOUT_CLASSIFICATION	9.239583794663064E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999098059875655	WITHOUT_CLASSIFICATION	9.019401243449404E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996885000159021	WITHOUT_CLASSIFICATION	3.1149998409786675E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999634448260742	WITHOUT_CLASSIFICATION	3.6555173925828944E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9991655147063967	WITHOUT_CLASSIFICATION	8.34485293603188E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991508897738941	WITHOUT_CLASSIFICATION	8.491102261060072E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999666495838094	WITHOUT_CLASSIFICATION	3.3350416190605475E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.999983948759661	WITHOUT_CLASSIFICATION	1.6051240339018516E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999389560897505	WITHOUT_CLASSIFICATION	6.104391024959528E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999466219333636	WITHOUT_CLASSIFICATION	5.337806663644435E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9998669555494396	WITHOUT_CLASSIFICATION	1.330444505604583E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999860475156725	WITHOUT_CLASSIFICATION	1.3952484327489393E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999197716985063	WITHOUT_CLASSIFICATION	8.022830149364226E-5	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999681100310197	WITHOUT_CLASSIFICATION	3.1889968980290014E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9967873604161417	WITHOUT_CLASSIFICATION	0.0032126395838582684	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999312279280174	WITHOUT_CLASSIFICATION	6.87720719826729E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999443796036038	WITHOUT_CLASSIFICATION	5.5620396396160145E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999895484179338	WITHOUT_CLASSIFICATION	1.0451582066197743E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999910769347893	WITHOUT_CLASSIFICATION	8.923065210654499E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999758224560188	WITHOUT_CLASSIFICATION	2.4177543981190842E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9964499080974079	WITHOUT_CLASSIFICATION	0.003550091902592204	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9986198124043115	WITHOUT_CLASSIFICATION	0.0013801875956884772	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999155909776015	WITHOUT_CLASSIFICATION	8.440902239843064E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9996991908911026	WITHOUT_CLASSIFICATION	3.0080910889746865E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999480722334642	WITHOUT_CLASSIFICATION	5.192776653583733E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999468887802746	WITHOUT_CLASSIFICATION	5.311121972544394E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999769180066067	WITHOUT_CLASSIFICATION	2.308199339330164E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9998567387291609	WITHOUT_CLASSIFICATION	1.4326127083917365E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999284625580415	WITHOUT_CLASSIFICATION	7.153744195855584E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999186947900124	WITHOUT_CLASSIFICATION	8.13052099876158E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.999897129864172	WITHOUT_CLASSIFICATION	1.02870135827984E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9950134658178335	WITHOUT_CLASSIFICATION	0.004986534182166553	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999710741056854	WITHOUT_CLASSIFICATION	2.8925894314651622E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999198104951843	WITHOUT_CLASSIFICATION	8.01895048156589E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999659128193871	WITHOUT_CLASSIFICATION	3.408718061296871E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999659128193871	WITHOUT_CLASSIFICATION	3.408718061296871E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998907183745416	WITHOUT_CLASSIFICATION	1.0928162545841619E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999518285782492	WITHOUT_CLASSIFICATION	4.817142175081419E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999787151059716	WITHOUT_CLASSIFICATION	2.1284894028467057E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999787179519349	WITHOUT_CLASSIFICATION	2.1282048065060287E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999787151059716	WITHOUT_CLASSIFICATION	2.1284894028467057E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999789764720944	WITHOUT_CLASSIFICATION	2.10235279054789E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999544797490416	WITHOUT_CLASSIFICATION	4.5520250958420086E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999709332749006	WITHOUT_CLASSIFICATION	2.9066725099271976E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998558831517261	WITHOUT_CLASSIFICATION	1.4411684827392223E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999959702281363	WITHOUT_CLASSIFICATION	4.029771863686667E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9994316039848548	WITHOUT_CLASSIFICATION	5.683960151452317E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999912480754951	WITHOUT_CLASSIFICATION	8.751924504988201E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.999972974173259	WITHOUT_CLASSIFICATION	2.7025826741070067E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9994325096224003	WITHOUT_CLASSIFICATION	5.67490377599731E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9997927459678365	WITHOUT_CLASSIFICATION	2.0725403216347897E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999986454922579	WITHOUT_CLASSIFICATION	1.3545077421082987E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999000557641656	WITHOUT_CLASSIFICATION	9.994423583441092E-5	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999293281744671	WITHOUT_CLASSIFICATION	7.067182553291476E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9997269849184187	WITHOUT_CLASSIFICATION	2.7301508158129395E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9994487159438992	WITHOUT_CLASSIFICATION	5.512840561008106E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999857876996216	WITHOUT_CLASSIFICATION	1.4212300378399435E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9987960919457235	WITHOUT_CLASSIFICATION	0.0012039080542764987	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9988301939779887	WITHOUT_CLASSIFICATION	0.0011698060220113212	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998447683294781	WITHOUT_CLASSIFICATION	1.5523167052188897E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999699552082671	WITHOUT_CLASSIFICATION	3.0044791732832597E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998644714587271	WITHOUT_CLASSIFICATION	1.3552854127283598E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999984913517619	WITHOUT_CLASSIFICATION	1.5086482381133016E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999864867163177	WITHOUT_CLASSIFICATION	1.3513283682352854E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999596202406486	WITHOUT_CLASSIFICATION	4.037975935145526E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998493868850714	WITHOUT_CLASSIFICATION	1.506131149285531E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999970005014933	WITHOUT_CLASSIFICATION	2.9994985066966048E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.999970005014933	WITHOUT_CLASSIFICATION	2.9994985066966048E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.999999389065735	WITHOUT_CLASSIFICATION	6.109342650172528E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9997153512624906	WITHOUT_CLASSIFICATION	2.84648737509465E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.999552504787134	WITHOUT_CLASSIFICATION	4.474952128659197E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997698171244391	WITHOUT_CLASSIFICATION	2.3018287556083596E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999040419125437	WITHOUT_CLASSIFICATION	9.595808745631603E-5	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9989777150065384	WITHOUT_CLASSIFICATION	0.0010222849934615043	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9996273467170244	WITHOUT_CLASSIFICATION	3.7265328297565563E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999246387730365	WITHOUT_CLASSIFICATION	7.536122696351151E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999414878554327	WITHOUT_CLASSIFICATION	5.8512144567229076E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998493868850714	WITHOUT_CLASSIFICATION	1.506131149285531E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999123585708788	WITHOUT_CLASSIFICATION	8.764142912112578E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999233014721938	WITHOUT_CLASSIFICATION	7.669852780624302E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999798840676773	WITHOUT_CLASSIFICATION	2.011593232264188E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998638497047881	WITHOUT_CLASSIFICATION	1.3615029521185578E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999934866036556	WITHOUT_CLASSIFICATION	6.5133963444756425E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996157930468933	WITHOUT_CLASSIFICATION	3.8420695310680333E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999186041021045	WITHOUT_CLASSIFICATION	8.139589789547428E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999514184731445	WITHOUT_CLASSIFICATION	4.858152685555646E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.999831815631388	WITHOUT_CLASSIFICATION	1.681843686119691E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.984087059857693	WITHOUT_CLASSIFICATION	0.015912940142307125	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999400642582208	WITHOUT_CLASSIFICATION	5.993574177924364E-5	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999575597678737	WITHOUT_CLASSIFICATION	4.244023212628096E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9997412167103621	WITHOUT_CLASSIFICATION	2.5878328963794373E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999656556626356	WITHOUT_CLASSIFICATION	3.434433736435816E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999302800623798	WITHOUT_CLASSIFICATION	6.971993762019257E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.999947943759263	WITHOUT_CLASSIFICATION	5.20562407370532E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999914057054226	WITHOUT_CLASSIFICATION	8.594294577396649E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998570317505412	WITHOUT_CLASSIFICATION	1.4296824945881246E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9994835168097826	WITHOUT_CLASSIFICATION	5.164831902174213E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9984783149590305	WITHOUT_CLASSIFICATION	0.001521685040969571	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999530246908225	WITHOUT_CLASSIFICATION	4.69753091775397E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999909018195131	WITHOUT_CLASSIFICATION	9.09818048690381E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9995424552647827	WITHOUT_CLASSIFICATION	4.5754473521738415E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999082720448424	WITHOUT_CLASSIFICATION	9.172795515756799E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998310245142072	WITHOUT_CLASSIFICATION	1.6897548579280702E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999790111098811	WITHOUT_CLASSIFICATION	2.0988890118930318E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999786218273492	WITHOUT_CLASSIFICATION	2.137817265074723E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997685467346515	WITHOUT_CLASSIFICATION	2.3145326534837357E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997683552381267	WITHOUT_CLASSIFICATION	2.3164476187319898E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999737398426807	WITHOUT_CLASSIFICATION	2.6260157319403658E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9997274594038572	WITHOUT_CLASSIFICATION	2.7254059614276275E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999851277493994	WITHOUT_CLASSIFICATION	1.4872250600689872E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999492991547798	WITHOUT_CLASSIFICATION	5.070084522025121E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999968195875008	WITHOUT_CLASSIFICATION	3.1804124991126746E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999477668005317	WITHOUT_CLASSIFICATION	5.22331994683602E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998816781036527	WITHOUT_CLASSIFICATION	1.1832189634732379E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9975634667689651	WITHOUT_CLASSIFICATION	0.002436533231034907	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999663743185361	WITHOUT_CLASSIFICATION	3.362568146391171E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999921216306001	WITHOUT_CLASSIFICATION	7.878369399903896E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999603847737776	WITHOUT_CLASSIFICATION	3.961522622240659E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999375272193497	WITHOUT_CLASSIFICATION	6.247278065031068E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565024673943	WITHOUT_CLASSIFICATION	4.349753260576376E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999592890631938	WITHOUT_CLASSIFICATION	4.07109368063381E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999652552912548	WITHOUT_CLASSIFICATION	3.474470874507917E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998088364500982	WITHOUT_CLASSIFICATION	1.911635499016909E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999584772170169	WITHOUT_CLASSIFICATION	4.152278298303822E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999094245348607	WITHOUT_CLASSIFICATION	9.057546513930111E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998088404724693	WITHOUT_CLASSIFICATION	1.9115952753060185E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993514013728686	WITHOUT_CLASSIFICATION	6.485986271314899E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999536339136063	WITHOUT_CLASSIFICATION	4.6366086393632316E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999503958633539	WITHOUT_CLASSIFICATION	4.960413664626693E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992086317218902	WITHOUT_CLASSIFICATION	7.913682781098216E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997259922598537	WITHOUT_CLASSIFICATION	2.740077401463517E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992575574759579	WITHOUT_CLASSIFICATION	7.424425240420865E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993281882829318	WITHOUT_CLASSIFICATION	6.71811717068184E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996449232509798	WITHOUT_CLASSIFICATION	3.5507674902031513E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997116807413414	WITHOUT_CLASSIFICATION	2.883192586585486E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993281882829318	WITHOUT_CLASSIFICATION	6.71811717068184E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991375464845599	WITHOUT_CLASSIFICATION	8.624535154401627E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991534092935943	WITHOUT_CLASSIFICATION	8.465907064057202E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998782686277374	WITHOUT_CLASSIFICATION	1.2173137226260459E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9972234377298004	WITHOUT_CLASSIFICATION	0.0027765622701996086	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992572622500484	WITHOUT_CLASSIFICATION	7.42737749951609E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999668458763881	WITHOUT_CLASSIFICATION	3.315412361203053E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993514013728686	WITHOUT_CLASSIFICATION	6.485986271314899E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999120224745109	WITHOUT_CLASSIFICATION	8.797752548905333E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999976748275363	WITHOUT_CLASSIFICATION	2.325172463693637E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989454355969404	WITHOUT_CLASSIFICATION	0.001054564403059655	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993398170850795	WITHOUT_CLASSIFICATION	6.60182914920603E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998798880598327	WITHOUT_CLASSIFICATION	1.2011194016720092E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997182576011204	WITHOUT_CLASSIFICATION	2.817423988796023E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999817575347993	WITHOUT_CLASSIFICATION	1.8242465200681195E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996449232509798	WITHOUT_CLASSIFICATION	3.5507674902031513E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999636142207314	WITHOUT_CLASSIFICATION	3.638577926865896E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999710355717016	WITHOUT_CLASSIFICATION	2.8964428298392745E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999663743185361	WITHOUT_CLASSIFICATION	3.362568146391171E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999663743185361	WITHOUT_CLASSIFICATION	3.362568146391171E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999175072955502	WITHOUT_CLASSIFICATION	8.249270444982063E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991953060395781	WITHOUT_CLASSIFICATION	8.046939604218797E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999710355717016	WITHOUT_CLASSIFICATION	2.8964428298392745E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565292489153	WITHOUT_CLASSIFICATION	4.347075108462521E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9984266255433508	WITHOUT_CLASSIFICATION	0.001573374456649264	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994101704698873	WITHOUT_CLASSIFICATION	5.89829530112592E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999410551581022	WITHOUT_CLASSIFICATION	5.894484189781085E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9941265916904751	WITHOUT_CLASSIFICATION	0.005873408309524818	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994265465297828	WITHOUT_CLASSIFICATION	5.734534702171155E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992572622500484	WITHOUT_CLASSIFICATION	7.42737749951609E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992572622500484	WITHOUT_CLASSIFICATION	7.42737749951609E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996734539022087	WITHOUT_CLASSIFICATION	3.265460977912618E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9975634667689651	WITHOUT_CLASSIFICATION	0.0024365332310349085	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993514013728686	WITHOUT_CLASSIFICATION	6.485986271314901E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992342449258671	WITHOUT_CLASSIFICATION	7.657550741329032E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999586403006759	WITHOUT_CLASSIFICATION	4.1359699324089456E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996292135605018	WITHOUT_CLASSIFICATION	3.707864394981995E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999224632813103	WITHOUT_CLASSIFICATION	7.753671868969403E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996734539022087	WITHOUT_CLASSIFICATION	3.265460977912618E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999666274154323	WITHOUT_CLASSIFICATION	3.337258456775953E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999238629352045	WITHOUT_CLASSIFICATION	7.613706479541172E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999595366785947	WITHOUT_CLASSIFICATION	4.046332140524666E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996885000159021	WITHOUT_CLASSIFICATION	3.1149998409786675E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999680809113513	WITHOUT_CLASSIFICATION	3.191908864876162E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996885000159021	WITHOUT_CLASSIFICATION	3.1149998409786675E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999604091007419	WITHOUT_CLASSIFICATION	3.959089925813596E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998731824755501	WITHOUT_CLASSIFICATION	1.2681752444995825E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992940230708163	WITHOUT_CLASSIFICATION	7.059769291837088E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999245963917929	WITHOUT_CLASSIFICATION	7.540360820720592E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999503958633539	WITHOUT_CLASSIFICATION	4.960413664626693E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999606431383626	WITHOUT_CLASSIFICATION	3.9356861637353894E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999564851588699	WITHOUT_CLASSIFICATION	4.351484113002445E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999634448260742	WITHOUT_CLASSIFICATION	3.6555173925828944E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999098059875655	WITHOUT_CLASSIFICATION	9.019401243449404E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996885000159021	WITHOUT_CLASSIFICATION	3.1149998409786675E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999634448260742	WITHOUT_CLASSIFICATION	3.6555173925828944E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9991655147063967	WITHOUT_CLASSIFICATION	8.34485293603188E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991508897738941	WITHOUT_CLASSIFICATION	8.491102261060072E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998907183745416	WITHOUT_CLASSIFICATION	1.0928162545841619E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999666495838094	WITHOUT_CLASSIFICATION	3.3350416190605475E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.999983948759661	WITHOUT_CLASSIFICATION	1.6051240339018516E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999389560897505	WITHOUT_CLASSIFICATION	6.104391024959528E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999466219333636	WITHOUT_CLASSIFICATION	5.337806663644435E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999710741056854	WITHOUT_CLASSIFICATION	2.8925894314651622E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.999860475156725	WITHOUT_CLASSIFICATION	1.3952484327489393E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999197716985063	WITHOUT_CLASSIFICATION	8.022830149364226E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999518285782492	WITHOUT_CLASSIFICATION	4.817142175081419E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999804050293957	WITHOUT_CLASSIFICATION	1.9594970604339362E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999804050293957	WITHOUT_CLASSIFICATION	1.9594970604339362E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.999965485653388	WITHOUT_CLASSIFICATION	3.451434661197553E-5	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999929685592558	WITHOUT_CLASSIFICATION	7.0314407442467955E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.999689407922065	WITHOUT_CLASSIFICATION	3.1059207793496826E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999612299733717	WITHOUT_CLASSIFICATION	3.8770026628283925E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999738754118321	WITHOUT_CLASSIFICATION	2.6124588167883788E-5	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999397416360142	WITHOUT_CLASSIFICATION	6.0258363985746184E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9997740485108131	WITHOUT_CLASSIFICATION	2.259514891869245E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999569681090635	WITHOUT_CLASSIFICATION	4.303189093645398E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999779606338725	WITHOUT_CLASSIFICATION	2.2039366127603902E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999674743625498	WITHOUT_CLASSIFICATION	3.252563745017327E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999968613147077	WITHOUT_CLASSIFICATION	3.138685292366895E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999746283314833	WITHOUT_CLASSIFICATION	2.5371668516710757E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.999983303969184	WITHOUT_CLASSIFICATION	1.6696030815973536E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999992577638932	WITHOUT_CLASSIFICATION	7.422361068529972E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9997957732074388	WITHOUT_CLASSIFICATION	2.0422679256119618E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.999868875924881	WITHOUT_CLASSIFICATION	1.311240751189053E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998752634350406	WITHOUT_CLASSIFICATION	1.2473656495936422E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9998871704604191	WITHOUT_CLASSIFICATION	1.1282953958092984E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999497882211046	WITHOUT_CLASSIFICATION	5.021177889548751E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999526871724348	WITHOUT_CLASSIFICATION	4.731282756521721E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9992759413283765	WITHOUT_CLASSIFICATION	7.240586716236001E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9998451221629218	WITHOUT_CLASSIFICATION	1.5487783707834795E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9995677464294097	WITHOUT_CLASSIFICATION	4.3225357059034104E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998953104897437	WITHOUT_CLASSIFICATION	1.0468951025641954E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9998021951983486	WITHOUT_CLASSIFICATION	1.9780480165153448E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998221799148163	WITHOUT_CLASSIFICATION	1.778200851837891E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998350591607256	WITHOUT_CLASSIFICATION	1.6494083927440383E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999730582822159	WITHOUT_CLASSIFICATION	2.6941717784053554E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999730582822159	WITHOUT_CLASSIFICATION	2.6941717784053554E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999610144629479	WITHOUT_CLASSIFICATION	3.89855370520681E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999994544446613	WITHOUT_CLASSIFICATION	5.45555338729261E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999477753243866	WITHOUT_CLASSIFICATION	5.2224675613286616E-5	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999379897344202	WITHOUT_CLASSIFICATION	6.201026557984235E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999806830173995	WITHOUT_CLASSIFICATION	1.9316982600455147E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.99998331740704	WITHOUT_CLASSIFICATION	1.668259295994242E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999776714535301	WITHOUT_CLASSIFICATION	2.2328546469843593E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999920817141659	WITHOUT_CLASSIFICATION	7.918285834103176E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999880294380649	WITHOUT_CLASSIFICATION	1.1970561935157962E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999002633978681	WITHOUT_CLASSIFICATION	9.973660213204198E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999002633978681	WITHOUT_CLASSIFICATION	9.973660213204198E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996652439008514	WITHOUT_CLASSIFICATION	3.347560991486061E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996652439008514	WITHOUT_CLASSIFICATION	3.347560991486061E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999809846733497	WITHOUT_CLASSIFICATION	1.9015326650203668E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999894433656326	WITHOUT_CLASSIFICATION	1.055663436746204E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9998940088833032	WITHOUT_CLASSIFICATION	1.0599111669686998E-4	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999908981323113	WITHOUT_CLASSIFICATION	9.10186768868394E-6	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9994124470615398	WITHOUT_CLASSIFICATION	5.875529384603483E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999093698751487	WITHOUT_CLASSIFICATION	9.063012485138473E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999925537914637	WITHOUT_CLASSIFICATION	7.4462085363020515E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999915228911367	WITHOUT_CLASSIFICATION	8.477108863363482E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9956569339595878	WITHOUT_CLASSIFICATION	0.004343066040412251	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999653542783061	WITHOUT_CLASSIFICATION	3.4645721693867066E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998746959080993	WITHOUT_CLASSIFICATION	1.2530409190070343E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999859716680705	WITHOUT_CLASSIFICATION	1.4028331929421676E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.999918928784038	WITHOUT_CLASSIFICATION	8.107121596196672E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999963951721712	WITHOUT_CLASSIFICATION	3.604827828739246E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999991807656152	WITHOUT_CLASSIFICATION	8.192343847949848E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9998711534072411	WITHOUT_CLASSIFICATION	1.2884659275895526E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999305278062314	WITHOUT_CLASSIFICATION	6.947219376869955E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.999868309389876	WITHOUT_CLASSIFICATION	1.3169061012398715E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9988251723529983	WITHOUT_CLASSIFICATION	0.0011748276470016786	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9998383440875338	WITHOUT_CLASSIFICATION	1.6165591246619055E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9997804097467736	WITHOUT_CLASSIFICATION	2.1959025322637222E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9993336297131311	WITHOUT_CLASSIFICATION	6.663702868688698E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.999964985127976	WITHOUT_CLASSIFICATION	3.501487202399414E-5	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9998771659584096	WITHOUT_CLASSIFICATION	1.2283404159043888E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999980235359148	WITHOUT_CLASSIFICATION	1.9764640852164628E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996792637416941	WITHOUT_CLASSIFICATION	3.207362583058978E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999558961208699	WITHOUT_CLASSIFICATION	4.410387913015902E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999132860607708	WITHOUT_CLASSIFICATION	8.67139392292956E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999132860607708	WITHOUT_CLASSIFICATION	8.67139392292956E-5	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999663385836135	WITHOUT_CLASSIFICATION	3.366141638638501E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9997401301111346	WITHOUT_CLASSIFICATION	2.5986988886540476E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9998147544029954	WITHOUT_CLASSIFICATION	1.8524559700469287E-4	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998782976160329	WITHOUT_CLASSIFICATION	1.2170238396720719E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999517811349063	WITHOUT_CLASSIFICATION	4.821886509371937E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9998998584741504	WITHOUT_CLASSIFICATION	1.0014152584962617E-4	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999298505761308	WITHOUT_CLASSIFICATION	7.014942386907724E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999348755108519	WITHOUT_CLASSIFICATION	6.51244891481175E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996792637416941	WITHOUT_CLASSIFICATION	3.207362583058978E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998703636194388	WITHOUT_CLASSIFICATION	1.296363805610773E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999832579332699	WITHOUT_CLASSIFICATION	1.67420667300773E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999224505925242	WITHOUT_CLASSIFICATION	7.754940747589042E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9990148642336927	WITHOUT_CLASSIFICATION	9.851357663072755E-4	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999559831258994	WITHOUT_CLASSIFICATION	4.4016874100514694E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999440913001935	WITHOUT_CLASSIFICATION	5.5908699806577894E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999700577826852	WITHOUT_CLASSIFICATION	2.9942217314791293E-5	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.999932503877023	WITHOUT_CLASSIFICATION	6.749612297698956E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999736188505043	WITHOUT_CLASSIFICATION	2.6381149495636685E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999589858821961	WITHOUT_CLASSIFICATION	4.1014117803766285E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999506622805087	WITHOUT_CLASSIFICATION	4.9337719491261687E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999657802983767	WITHOUT_CLASSIFICATION	3.421970162333832E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999775180458701	WITHOUT_CLASSIFICATION	2.2481954129847237E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999932747034735	WITHOUT_CLASSIFICATION	6.725296526423293E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9962185829919188	WITHOUT_CLASSIFICATION	0.0037814170080812813	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9994472285790763	WITHOUT_CLASSIFICATION	5.527714209236856E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999949172998939	WITHOUT_CLASSIFICATION	5.082700106045214E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999357222714047	WITHOUT_CLASSIFICATION	6.42777285952393E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999426412083019	WITHOUT_CLASSIFICATION	5.7358791698090964E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998970586008004	WITHOUT_CLASSIFICATION	1.0294139919964729E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999873362166973	WITHOUT_CLASSIFICATION	1.2663783302570307E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999430786516114	WITHOUT_CLASSIFICATION	5.6921348388626615E-5	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999504803570449	WITHOUT_CLASSIFICATION	4.951964295500184E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999953168702521	WITHOUT_CLASSIFICATION	4.683129747969497E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999700577826852	WITHOUT_CLASSIFICATION	2.9942217314791293E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999037466075209	WITHOUT_CLASSIFICATION	9.625339247904614E-5	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999142715204054	WITHOUT_CLASSIFICATION	8.57284795945825E-5	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9998982974352081	WITHOUT_CLASSIFICATION	1.0170256479190477E-4	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9916625361176513	WITHOUT_CLASSIFICATION	0.008337463882348758	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.999533523159581	WITHOUT_CLASSIFICATION	4.6647684041906877E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9968659627992821	WITHOUT_CLASSIFICATION	0.003134037200717876	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9998557728754291	WITHOUT_CLASSIFICATION	1.4422712457083962E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999069471660998	WITHOUT_CLASSIFICATION	9.305283390012218E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9996114044279494	WITHOUT_CLASSIFICATION	3.8859557205062E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999703408858445	WITHOUT_CLASSIFICATION	2.9659114155557333E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999499829495628	WITHOUT_CLASSIFICATION	5.00170504370985E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999499829495628	WITHOUT_CLASSIFICATION	5.00170504370985E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999569217418894	WITHOUT_CLASSIFICATION	4.307825811062506E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9997950982301907	WITHOUT_CLASSIFICATION	2.0490176980930385E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999343102557479	WITHOUT_CLASSIFICATION	6.568974425214348E-5	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999482171414052	WITHOUT_CLASSIFICATION	5.1782858594819204E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999777064510313	WITHOUT_CLASSIFICATION	2.2293548968663342E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999648988123369	WITHOUT_CLASSIFICATION	3.510118766313067E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999346950591508	WITHOUT_CLASSIFICATION	6.53049408492268E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.99992829173031	WITHOUT_CLASSIFICATION	7.170826969010904E-5	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9996187434689772	WITHOUT_CLASSIFICATION	3.812565310228569E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999424010488528	WITHOUT_CLASSIFICATION	5.759895114719679E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999877330789435	WITHOUT_CLASSIFICATION	1.2266921056519627E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996652439008514	WITHOUT_CLASSIFICATION	3.347560991486061E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999925537914637	WITHOUT_CLASSIFICATION	7.4462085363020515E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999777064510313	WITHOUT_CLASSIFICATION	2.2293548968663342E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999648988123369	WITHOUT_CLASSIFICATION	3.510118766313067E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999730088776718	WITHOUT_CLASSIFICATION	2.6991122328152033E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999979479693311	WITHOUT_CLASSIFICATION	2.052030668977219E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999311833112146	WITHOUT_CLASSIFICATION	6.881668878541E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9991870075869906	WITHOUT_CLASSIFICATION	8.129924130092693E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9963346311346936	WITHOUT_CLASSIFICATION	0.0036653688653065174	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999137311010031	WITHOUT_CLASSIFICATION	8.626889899682579E-5	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9989789448397124	WITHOUT_CLASSIFICATION	0.0010210551602876095	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9996406292720954	WITHOUT_CLASSIFICATION	3.593707279045222E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.999973205111281	WITHOUT_CLASSIFICATION	2.6794888719130498E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9993042327786631	WITHOUT_CLASSIFICATION	6.957672213369378E-4	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9996007487996011	WITHOUT_CLASSIFICATION	3.992512003988564E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.998985507301296	WITHOUT_CLASSIFICATION	0.001014492698704088	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999695397574596	WITHOUT_CLASSIFICATION	3.0460242540423942E-5	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9996226609836589	WITHOUT_CLASSIFICATION	3.773390163410979E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999909723001538	WITHOUT_CLASSIFICATION	9.02769984627202E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.998985507301296	WITHOUT_CLASSIFICATION	0.001014492698704088	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.998985507301296	WITHOUT_CLASSIFICATION	0.001014492698704088	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.998985507301296	WITHOUT_CLASSIFICATION	0.001014492698704088	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9996994923434821	WITHOUT_CLASSIFICATION	3.005076565178766E-4	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999805761387417	WITHOUT_CLASSIFICATION	1.942386125830625E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999160966454228	WITHOUT_CLASSIFICATION	8.390335457717785E-5	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999897693120516	WITHOUT_CLASSIFICATION	1.0230687948329902E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9998742033816217	WITHOUT_CLASSIFICATION	1.2579661837830468E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.99997892980853	WITHOUT_CLASSIFICATION	2.1070191469979008E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9996185365952938	WITHOUT_CLASSIFICATION	3.8146340470617516E-4	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.999980099196338	WITHOUT_CLASSIFICATION	1.990080366201695E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999936265769162	WITHOUT_CLASSIFICATION	6.373423083876543E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999022932192603	WITHOUT_CLASSIFICATION	9.770678073980708E-5	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9998261440544951	WITHOUT_CLASSIFICATION	1.738559455049504E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9997819170712063	WITHOUT_CLASSIFICATION	2.180829287937057E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999859333835373	WITHOUT_CLASSIFICATION	1.4066616462737303E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999985486001116	WITHOUT_CLASSIFICATION	1.4513998883687624E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999019319727541	WITHOUT_CLASSIFICATION	9.806802724593726E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999834256380966	WITHOUT_CLASSIFICATION	1.6574361903416243E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9992820000792285	WITHOUT_CLASSIFICATION	7.179999207714772E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998753117888536	WITHOUT_CLASSIFICATION	1.246882111464062E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9996815883339041	WITHOUT_CLASSIFICATION	3.1841166609588315E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997791950483896	WITHOUT_CLASSIFICATION	2.20804951610263E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997791950483896	WITHOUT_CLASSIFICATION	2.20804951610263E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9997724839385261	WITHOUT_CLASSIFICATION	2.27516061473873E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9589203784420588	WITHOUT_CLASSIFICATION	0.04107962155794111	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999179453531658	WITHOUT_CLASSIFICATION	8.205464683420238E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9888637301917601	WITHOUT_CLASSIFICATION	0.011136269808239783	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999499319954726	WITHOUT_CLASSIFICATION	5.006800452745085E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999564479491715	WITHOUT_CLASSIFICATION	4.355205082846288E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999619808052153	WITHOUT_CLASSIFICATION	3.8019194784819184E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999463130801601	WITHOUT_CLASSIFICATION	5.368691983995338E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999942831537836	WITHOUT_CLASSIFICATION	5.716846216410831E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9992752895768182	WITHOUT_CLASSIFICATION	7.247104231818702E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999969340724023	WITHOUT_CLASSIFICATION	3.065927597728597E-6	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999840649945388	WITHOUT_CLASSIFICATION	1.5935005461142232E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999845605625356	WITHOUT_CLASSIFICATION	1.5439437464410968E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999413444731222	WITHOUT_CLASSIFICATION	5.865552687764866E-5	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999702729241556	WITHOUT_CLASSIFICATION	2.972707584429506E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.999941992554421	WITHOUT_CLASSIFICATION	5.8007445579052064E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999844139326187	WITHOUT_CLASSIFICATION	1.5586067381348056E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999877330963693	WITHOUT_CLASSIFICATION	1.226690363060828E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999228966349512	WITHOUT_CLASSIFICATION	7.710336504884404E-5	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9998203441914896	WITHOUT_CLASSIFICATION	1.7965580851041967E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999902134738526	WITHOUT_CLASSIFICATION	9.786526147410194E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999947768430841	WITHOUT_CLASSIFICATION	5.223156915838029E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997976600791789	WITHOUT_CLASSIFICATION	2.0233992082111185E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997976600791789	WITHOUT_CLASSIFICATION	2.0233992082111185E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993916051822358	WITHOUT_CLASSIFICATION	6.083948177642542E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993916051822358	WITHOUT_CLASSIFICATION	6.083948177642542E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999973904191743	WITHOUT_CLASSIFICATION	2.6095808256071682E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9997407834151667	WITHOUT_CLASSIFICATION	2.592165848332376E-4	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999938266232908	WITHOUT_CLASSIFICATION	6.173376709160515E-6	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999752262128769	WITHOUT_CLASSIFICATION	2.4773787123032194E-5	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999762932468813	WITHOUT_CLASSIFICATION	2.3706753118759277E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999587935773873	WITHOUT_CLASSIFICATION	4.1206422612694593E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999670725492285	WITHOUT_CLASSIFICATION	3.2927450771592814E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9992417556882139	WITHOUT_CLASSIFICATION	7.582443117860137E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9997207342076687	WITHOUT_CLASSIFICATION	2.7926579233124017E-4	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9998783671423664	WITHOUT_CLASSIFICATION	1.2163285763365053E-4	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.999953864843987	WITHOUT_CLASSIFICATION	4.6135156013173786E-5	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9998512577808831	WITHOUT_CLASSIFICATION	1.487422191168703E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9993727887530733	WITHOUT_CLASSIFICATION	6.272112469267556E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.999997771437114	WITHOUT_CLASSIFICATION	2.228562886020516E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999354726530871	WITHOUT_CLASSIFICATION	6.452734691284409E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9998683832131346	WITHOUT_CLASSIFICATION	1.316167868653477E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999561424094966	WITHOUT_CLASSIFICATION	4.385759050345808E-5	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999776511970729	WITHOUT_CLASSIFICATION	2.23488029270008E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999282560214806	WITHOUT_CLASSIFICATION	7.174397851938913E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999042088254554	WITHOUT_CLASSIFICATION	9.579117454465521E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999247819753776	WITHOUT_CLASSIFICATION	7.52180246223929E-5	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.99991058084127	WITHOUT_CLASSIFICATION	8.941915872986789E-5	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999676593974508	WITHOUT_CLASSIFICATION	3.2340602549241E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.999317686633577	WITHOUT_CLASSIFICATION	6.823133664229387E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.999921880618587	WITHOUT_CLASSIFICATION	7.811938141296544E-5	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999837493527001	WITHOUT_CLASSIFICATION	1.625064729992657E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999778202430603	WITHOUT_CLASSIFICATION	2.2179756939719192E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9995666575106706	WITHOUT_CLASSIFICATION	4.3334248932932427E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9912659814619249	WITHOUT_CLASSIFICATION	0.00873401853807515	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9993694342171192	WITHOUT_CLASSIFICATION	6.305657828807082E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999804050293957	WITHOUT_CLASSIFICATION	1.9594970604339362E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9992084191761504	WITHOUT_CLASSIFICATION	7.91580823849646E-4	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.999999415597225	WITHOUT_CLASSIFICATION	5.844027748197803E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9996620635898982	WITHOUT_CLASSIFICATION	3.379364101018006E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9996441568029584	WITHOUT_CLASSIFICATION	3.5584319704170907E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999372839558618	WITHOUT_CLASSIFICATION	6.271604413829137E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998415735164998	WITHOUT_CLASSIFICATION	1.584264835001273E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999275198302913	WITHOUT_CLASSIFICATION	7.248016970869822E-5	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.99997556014546	WITHOUT_CLASSIFICATION	2.4439854539981902E-5	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9998548839223503	WITHOUT_CLASSIFICATION	1.4511607764970571E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9878280003589682	WITHOUT_CLASSIFICATION	0.012171999641031807	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999908890889501	WITHOUT_CLASSIFICATION	9.110911050056133E-6	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9998496579866988	WITHOUT_CLASSIFICATION	1.5034201330119728E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9583514478392334	WITHOUT_CLASSIFICATION	0.041648552160766586	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9998731350055865	WITHOUT_CLASSIFICATION	1.2686499441342524E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9995522787760425	WITHOUT_CLASSIFICATION	4.4772122395747707E-4	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9996601050019327	WITHOUT_CLASSIFICATION	3.398949980673422E-4	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9997195915567603	WITHOUT_CLASSIFICATION	2.8040844323975865E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9997298513273936	WITHOUT_CLASSIFICATION	2.7014867260639777E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999956104105286	WITHOUT_CLASSIFICATION	4.389589471362861E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999964032986182	WITHOUT_CLASSIFICATION	3.5967013817763214E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999366722465174	WITHOUT_CLASSIFICATION	6.332775348256826E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999146092027562	WITHOUT_CLASSIFICATION	8.539079724377637E-5	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999155392629954	WITHOUT_CLASSIFICATION	8.446073700465388E-5	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999908709736492	WITHOUT_CLASSIFICATION	9.129026350679622E-6	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9997931688112468	WITHOUT_CLASSIFICATION	2.0683118875312637E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999952487046276	WITHOUT_CLASSIFICATION	4.75129537236423E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999990146119372	WITHOUT_CLASSIFICATION	9.85388062833963E-7	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999962928575803	WITHOUT_CLASSIFICATION	3.7071424197432255E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999648569369072	WITHOUT_CLASSIFICATION	3.514306309286918E-5	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.999972677422257	WITHOUT_CLASSIFICATION	2.7322577743011737E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999374660416845	WITHOUT_CLASSIFICATION	6.253395831550672E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999764346370763	WITHOUT_CLASSIFICATION	2.356536292379477E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999394763570285	WITHOUT_CLASSIFICATION	6.0523642971467216E-5	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999941892713108	WITHOUT_CLASSIFICATION	5.810728689211393E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999722295531063	WITHOUT_CLASSIFICATION	2.7770446893727095E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999863358454794	WITHOUT_CLASSIFICATION	1.3664154520541104E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9993581488597577	WITHOUT_CLASSIFICATION	6.418511402422522E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9993581488597577	WITHOUT_CLASSIFICATION	6.418511402422522E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9997987618561078	WITHOUT_CLASSIFICATION	2.012381438921989E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9933087089578155	WITHOUT_CLASSIFICATION	0.006691291042184394	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9998886054990564	WITHOUT_CLASSIFICATION	1.1139450094356519E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999155805574831	WITHOUT_CLASSIFICATION	8.441944251694937E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999529597052109	WITHOUT_CLASSIFICATION	4.704029478899754E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999716335553053	WITHOUT_CLASSIFICATION	2.8366444694645568E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998989418506659	WITHOUT_CLASSIFICATION	1.0105814933415058E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999455531512524	WITHOUT_CLASSIFICATION	5.444684874753185E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999455531512524	WITHOUT_CLASSIFICATION	5.444684874753185E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999378783606253	WITHOUT_CLASSIFICATION	6.212163937474686E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999484998050313	WITHOUT_CLASSIFICATION	5.150019496870244E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999168308415494	WITHOUT_CLASSIFICATION	8.31691584505248E-5	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999512455454027	WITHOUT_CLASSIFICATION	4.8754454597323626E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9996756039949637	WITHOUT_CLASSIFICATION	3.2439600503636387E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999901269479871	WITHOUT_CLASSIFICATION	9.873052012858181E-6	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9998108179711686	WITHOUT_CLASSIFICATION	1.8918202883136682E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.99999992718633	WITHOUT_CLASSIFICATION	7.281366995594574E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999489964021381	WITHOUT_CLASSIFICATION	5.100359786180483E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999876549515548	WITHOUT_CLASSIFICATION	1.2345048445231714E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9998645896516539	WITHOUT_CLASSIFICATION	1.354103483461282E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999537597049656	WITHOUT_CLASSIFICATION	4.624029503441021E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.999061131496449	WITHOUT_CLASSIFICATION	9.388685035510254E-4	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999564545336219	WITHOUT_CLASSIFICATION	4.3545466378200155E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9871004255177923	WITHOUT_CLASSIFICATION	0.012899574482207563	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9998034163210022	WITHOUT_CLASSIFICATION	1.9658367899764195E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999947104656647	WITHOUT_CLASSIFICATION	5.289534335312505E-6	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999915610616501	WITHOUT_CLASSIFICATION	8.438938349922443E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9995504743370788	WITHOUT_CLASSIFICATION	4.4952566292122555E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999835262154069	WITHOUT_CLASSIFICATION	1.6473784593095035E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999811475681545	WITHOUT_CLASSIFICATION	1.8852431845533937E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999851597606384	WITHOUT_CLASSIFICATION	1.4840239361502434E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999942541114947	WITHOUT_CLASSIFICATION	5.745888505430955E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999813178656758	WITHOUT_CLASSIFICATION	1.868213432429924E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999232823376695	WITHOUT_CLASSIFICATION	7.67176623306048E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.999407500166424	WITHOUT_CLASSIFICATION	5.924998335760563E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999942014513928	WITHOUT_CLASSIFICATION	5.798548607074921E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9974665807030212	WITHOUT_CLASSIFICATION	0.002533419296978731	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9998401487667864	WITHOUT_CLASSIFICATION	1.5985123321356434E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999974199584235	WITHOUT_CLASSIFICATION	2.580041576446977E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999793813189412	WITHOUT_CLASSIFICATION	2.061868105885301E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.999975802147094	WITHOUT_CLASSIFICATION	2.4197852905908313E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.99966049028389	WITHOUT_CLASSIFICATION	3.3950971611002067E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999724948376242	WITHOUT_CLASSIFICATION	2.7505162375800382E-5	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999942173834306	WITHOUT_CLASSIFICATION	5.782616569330949E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999809240325316	WITHOUT_CLASSIFICATION	1.907596746847645E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999478955921278	WITHOUT_CLASSIFICATION	5.210440787210378E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999694236547486	WITHOUT_CLASSIFICATION	3.057634525142821E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999695598053688	WITHOUT_CLASSIFICATION	3.0440194631093346E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9905528342962395	WITHOUT_CLASSIFICATION	0.009447165703760394	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997667188899253	WITHOUT_CLASSIFICATION	2.3328111007460872E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.999875794545791	WITHOUT_CLASSIFICATION	1.242054542089408E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999243631871853	WITHOUT_CLASSIFICATION	7.563681281469506E-5	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9998399009952709	WITHOUT_CLASSIFICATION	1.600990047291118E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9998640164422402	WITHOUT_CLASSIFICATION	1.3598355775969976E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9998862021732959	WITHOUT_CLASSIFICATION	1.1379782670405849E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998584173231467	WITHOUT_CLASSIFICATION	1.415826768532929E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998584173231467	WITHOUT_CLASSIFICATION	1.415826768532929E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998612765543292	WITHOUT_CLASSIFICATION	1.3872344567082766E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998612765543292	WITHOUT_CLASSIFICATION	1.3872344567082766E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999909723001538	WITHOUT_CLASSIFICATION	9.02769984627202E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9996815883339041	WITHOUT_CLASSIFICATION	3.1841166609588315E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997791950483896	WITHOUT_CLASSIFICATION	2.20804951610263E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997791950483896	WITHOUT_CLASSIFICATION	2.20804951610263E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999818841253303	WITHOUT_CLASSIFICATION	1.8115874669697197E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999795737668808	WITHOUT_CLASSIFICATION	2.0426233119146427E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9982902118185848	WITHOUT_CLASSIFICATION	0.00170978818141532	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999486099786362	WITHOUT_CLASSIFICATION	5.139002136371945E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9994796175245729	WITHOUT_CLASSIFICATION	5.203824754270855E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999691639226147	WITHOUT_CLASSIFICATION	3.0836077385336055E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999534353180395	WITHOUT_CLASSIFICATION	4.656468196047117E-5	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999953284471862	WITHOUT_CLASSIFICATION	4.671552813709413E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.999958036534911	WITHOUT_CLASSIFICATION	4.196346508903664E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9959615924837056	WITHOUT_CLASSIFICATION	0.004038407516294357	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999154994579235	WITHOUT_CLASSIFICATION	8.450054207645928E-5	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999513285901394	WITHOUT_CLASSIFICATION	4.867140986071238E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999337949453049	WITHOUT_CLASSIFICATION	6.620505469509084E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9998914898750819	WITHOUT_CLASSIFICATION	1.0851012491812333E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999338588357642	WITHOUT_CLASSIFICATION	6.614116423577804E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999057829354994	WITHOUT_CLASSIFICATION	9.421706450062679E-5	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999921279085522	WITHOUT_CLASSIFICATION	7.872091447816007E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999324263532361	WITHOUT_CLASSIFICATION	6.757364676390639E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998222436358408	WITHOUT_CLASSIFICATION	1.7775636415921648E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999641509064044	WITHOUT_CLASSIFICATION	3.584909359556204E-5	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999924122854263	WITHOUT_CLASSIFICATION	7.58771457368886E-6	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999680874342217	WITHOUT_CLASSIFICATION	3.191256577818557E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999969474941737	WITHOUT_CLASSIFICATION	3.0525058263565612E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998913959204567	WITHOUT_CLASSIFICATION	1.0860407954330188E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9998906944735035	WITHOUT_CLASSIFICATION	1.0930552649636233E-4	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999726239569872	WITHOUT_CLASSIFICATION	2.7376043012786153E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9996822749643896	WITHOUT_CLASSIFICATION	3.177250356104254E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9998854769253138	WITHOUT_CLASSIFICATION	1.1452307468620035E-4	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9988585200795134	WITHOUT_CLASSIFICATION	0.0011414799204866287	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999766051871237	WITHOUT_CLASSIFICATION	2.3394812876243473E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9473579497467403	WITHOUT_CLASSIFICATION	0.05264205025325976	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9997128743283435	WITHOUT_CLASSIFICATION	2.8712567165648987E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999504739332555	WITHOUT_CLASSIFICATION	4.952606674442293E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999967303984193	WITHOUT_CLASSIFICATION	3.2696015806975056E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999341031780997	WITHOUT_CLASSIFICATION	6.589682190026075E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9998729483476622	WITHOUT_CLASSIFICATION	1.2705165233786088E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9993731626702366	WITHOUT_CLASSIFICATION	6.268373297634956E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999981983531251	WITHOUT_CLASSIFICATION	1.8016468748805266E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9998462028778913	WITHOUT_CLASSIFICATION	1.537971221086585E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999050730048132	WITHOUT_CLASSIFICATION	9.492699518673531E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999554800812721	WITHOUT_CLASSIFICATION	4.4519918727862374E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999498500614078	WITHOUT_CLASSIFICATION	5.014993859221539E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999342537205178	WITHOUT_CLASSIFICATION	6.574627948214984E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999898372556392	WITHOUT_CLASSIFICATION	1.016274436081457E-5	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999846019189029	WITHOUT_CLASSIFICATION	1.5398081097085045E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999484152782003	WITHOUT_CLASSIFICATION	5.158472179958899E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999824698626537	WITHOUT_CLASSIFICATION	1.7530137346268968E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999610343470402	WITHOUT_CLASSIFICATION	3.8965652959859966E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9990024251221192	WITHOUT_CLASSIFICATION	9.9757487788074E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9998197060658314	WITHOUT_CLASSIFICATION	1.802939341686481E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999948926312044	WITHOUT_CLASSIFICATION	5.1073687955611E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999783391222369	WITHOUT_CLASSIFICATION	2.16608777630357E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9997469841243013	WITHOUT_CLASSIFICATION	2.5301587569873037E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9998380511489793	WITHOUT_CLASSIFICATION	1.6194885102068537E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999100697214581	WITHOUT_CLASSIFICATION	8.993027854182124E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999321046924842	WITHOUT_CLASSIFICATION	6.789530751578142E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9998910403087085	WITHOUT_CLASSIFICATION	1.0895969129158845E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999716306144026	WITHOUT_CLASSIFICATION	2.8369385597249862E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999084660802783	WITHOUT_CLASSIFICATION	9.153391972172812E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998805864129915	WITHOUT_CLASSIFICATION	1.1941358700842424E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999962776653515	WITHOUT_CLASSIFICATION	3.7223346485501617E-6	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9998423966360598	WITHOUT_CLASSIFICATION	1.5760336394021531E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998805864129915	WITHOUT_CLASSIFICATION	1.1941358700842424E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999863725589564	WITHOUT_CLASSIFICATION	1.3627441043667113E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998805864129915	WITHOUT_CLASSIFICATION	1.1941358700842424E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999599494075421	WITHOUT_CLASSIFICATION	4.005059245796431E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999952339151008	WITHOUT_CLASSIFICATION	4.766084899265456E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.999636458411233	WITHOUT_CLASSIFICATION	3.6354158876690366E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.999991801827552	WITHOUT_CLASSIFICATION	8.198172448013003E-6	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9998789278267405	WITHOUT_CLASSIFICATION	1.2107217325953862E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9998327632031577	WITHOUT_CLASSIFICATION	1.672367968422159E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9992134279292204	WITHOUT_CLASSIFICATION	7.865720707796754E-4	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999942986087978	WITHOUT_CLASSIFICATION	5.701391202195887E-6	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999757700794243	WITHOUT_CLASSIFICATION	2.4229920575685422E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.99997245203143	WITHOUT_CLASSIFICATION	2.7547968569915965E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999793735492015	WITHOUT_CLASSIFICATION	2.0626450798504363E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999111786763788	WITHOUT_CLASSIFICATION	8.882132362123736E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.999994911317388	WITHOUT_CLASSIFICATION	5.0886826118844885E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999819184914029	WITHOUT_CLASSIFICATION	1.8081508597092096E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9997607240719197	WITHOUT_CLASSIFICATION	2.3927592808019072E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999796886336254	WITHOUT_CLASSIFICATION	2.031136637453409E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9998436585278118	WITHOUT_CLASSIFICATION	1.5634147218823263E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999482138152821	WITHOUT_CLASSIFICATION	5.178618471797483E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9997938718546175	WITHOUT_CLASSIFICATION	2.061281453825018E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.999264542555579	WITHOUT_CLASSIFICATION	7.354574444210808E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.999996134234191	WITHOUT_CLASSIFICATION	3.8657658089685466E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999321901191475	WITHOUT_CLASSIFICATION	6.780988085248319E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999503060425612	WITHOUT_CLASSIFICATION	4.969395743883007E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.99997054782539	WITHOUT_CLASSIFICATION	2.945217461009625E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9998551694296366	WITHOUT_CLASSIFICATION	1.448305703633958E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999472864991864	WITHOUT_CLASSIFICATION	5.271350081357511E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9997364209061158	WITHOUT_CLASSIFICATION	2.635790938842034E-4	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.999897195065528	WITHOUT_CLASSIFICATION	1.0280493447200504E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998120472782673	WITHOUT_CLASSIFICATION	1.879527217326407E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999392474691958	WITHOUT_CLASSIFICATION	6.075253080417502E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999632425086625	WITHOUT_CLASSIFICATION	3.675749133753571E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999796828571824	WITHOUT_CLASSIFICATION	2.031714281754526E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.999976957333829	WITHOUT_CLASSIFICATION	2.304266617100615E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999894133566135	WITHOUT_CLASSIFICATION	1.0586643386500931E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999844684427882	WITHOUT_CLASSIFICATION	1.553155721171664E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.999992212373566	WITHOUT_CLASSIFICATION	7.787626434072318E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999164659137418	WITHOUT_CLASSIFICATION	8.3534086258091E-5	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9997977088242688	WITHOUT_CLASSIFICATION	2.0229117573121095E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999371695072069	WITHOUT_CLASSIFICATION	6.283049279315828E-5	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9993641773216568	WITHOUT_CLASSIFICATION	6.358226783431174E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.99969683616525	WITHOUT_CLASSIFICATION	3.031638347500366E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999955821943737	WITHOUT_CLASSIFICATION	4.417805626330513E-6	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999885586577957	WITHOUT_CLASSIFICATION	1.1441342204387592E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9998676897286017	WITHOUT_CLASSIFICATION	1.3231027139831489E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998309982339251	WITHOUT_CLASSIFICATION	1.69001766074887E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999847812218347	WITHOUT_CLASSIFICATION	1.5218778165349655E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999878738068658	WITHOUT_CLASSIFICATION	1.2126193134154615E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9998667764825226	WITHOUT_CLASSIFICATION	1.3322351747735678E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999103391541756	WITHOUT_CLASSIFICATION	8.966084582436227E-5	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9998477102254955	WITHOUT_CLASSIFICATION	1.5228977450449963E-4	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999684527241426	WITHOUT_CLASSIFICATION	3.154727585735928E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.999988826214546	WITHOUT_CLASSIFICATION	1.1173785453900145E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999295888391226	WITHOUT_CLASSIFICATION	7.041116087733768E-5	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.999960622984582	WITHOUT_CLASSIFICATION	3.937701541804262E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.999982764570132	WITHOUT_CLASSIFICATION	1.7235429867912635E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.999862570224314	WITHOUT_CLASSIFICATION	1.374297756860529E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9998916296604047	WITHOUT_CLASSIFICATION	1.0837033959534233E-4	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9998756452695245	WITHOUT_CLASSIFICATION	1.2435473047541E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999490402373665	WITHOUT_CLASSIFICATION	5.095976263348608E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999463459765658	WITHOUT_CLASSIFICATION	5.3654023434158644E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9996202006311113	WITHOUT_CLASSIFICATION	3.797993688886563E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.999899115029192	WITHOUT_CLASSIFICATION	1.0088497080789407E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999232431990418	WITHOUT_CLASSIFICATION	7.675680095826185E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999294852196553	WITHOUT_CLASSIFICATION	7.051478034463251E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9997386902228358	WITHOUT_CLASSIFICATION	2.6130977716428853E-4	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9998798491129323	WITHOUT_CLASSIFICATION	1.2015088706771512E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9997851640143294	WITHOUT_CLASSIFICATION	2.1483598567055415E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999490402373665	WITHOUT_CLASSIFICATION	5.095976263348608E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999783840197801	WITHOUT_CLASSIFICATION	2.1615980219853066E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999869831350341	WITHOUT_CLASSIFICATION	1.3016864965977683E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.99996876901339	WITHOUT_CLASSIFICATION	3.123098660998501E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9958789451440261	WITHOUT_CLASSIFICATION	0.004121054855973941	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999822161928261	WITHOUT_CLASSIFICATION	1.7783807173895E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9888321331690962	WITHOUT_CLASSIFICATION	0.011167866830903718	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999622559255652	WITHOUT_CLASSIFICATION	3.774407443479745E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999622559255652	WITHOUT_CLASSIFICATION	3.774407443479745E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9979443272325255	WITHOUT_CLASSIFICATION	0.0020556727674744956	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9979443272325255	WITHOUT_CLASSIFICATION	0.0020556727674744956	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9970050509722473	WITHOUT_CLASSIFICATION	0.0029949490277527183	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9996450500142446	WITHOUT_CLASSIFICATION	3.5494998575543785E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9972913659121095	WITHOUT_CLASSIFICATION	0.002708634087890381	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999746557002569	WITHOUT_CLASSIFICATION	2.534429974309879E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999561455149358	WITHOUT_CLASSIFICATION	4.385448506405543E-5	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9997266067484042	WITHOUT_CLASSIFICATION	2.733932515958151E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.999816395201248	WITHOUT_CLASSIFICATION	1.836047987520222E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999895511140763	WITHOUT_CLASSIFICATION	1.0448885923685614E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999076607386764	WITHOUT_CLASSIFICATION	9.233926132354036E-5	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9998153090370878	WITHOUT_CLASSIFICATION	1.8469096291220797E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996849533595072	WITHOUT_CLASSIFICATION	3.1504664049271163E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9998742819441738	WITHOUT_CLASSIFICATION	1.2571805582613934E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998753117888536	WITHOUT_CLASSIFICATION	1.246882111464062E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998753117888536	WITHOUT_CLASSIFICATION	1.246882111464062E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9972913659121095	WITHOUT_CLASSIFICATION	0.002708634087890381	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996849533595072	WITHOUT_CLASSIFICATION	3.1504664049271163E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9975667513354289	WITHOUT_CLASSIFICATION	0.0024332486645710994	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9996450500142446	WITHOUT_CLASSIFICATION	3.5494998575543785E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999980708541062	WITHOUT_CLASSIFICATION	1.929145893770699E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9997147937857976	WITHOUT_CLASSIFICATION	2.852062142024357E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999688902513268	WITHOUT_CLASSIFICATION	3.110974867310832E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999688902513268	WITHOUT_CLASSIFICATION	3.110974867310832E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999475445508812	WITHOUT_CLASSIFICATION	5.245544911879059E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999969470957881	WITHOUT_CLASSIFICATION	3.0529042118462805E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.999746557002569	WITHOUT_CLASSIFICATION	2.534429974309879E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999703906801122	WITHOUT_CLASSIFICATION	2.9609319887805562E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9997133057900014	WITHOUT_CLASSIFICATION	2.8669420999867133E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999011614410754	WITHOUT_CLASSIFICATION	9.88385589245758E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.999964597597686	WITHOUT_CLASSIFICATION	3.540240231397565E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.999746557002569	WITHOUT_CLASSIFICATION	2.534429974309879E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998471979090774	WITHOUT_CLASSIFICATION	1.5280209092259303E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.999405845720738	WITHOUT_CLASSIFICATION	5.941542792621432E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999685933489998	WITHOUT_CLASSIFICATION	3.140665100032004E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999547392685413	WITHOUT_CLASSIFICATION	4.5260731458663215E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999423298792698	WITHOUT_CLASSIFICATION	5.767012073015741E-5	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999280909895436	WITHOUT_CLASSIFICATION	7.190901045637716E-5	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999617260961485	WITHOUT_CLASSIFICATION	3.827390385149497E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999340286868451	WITHOUT_CLASSIFICATION	6.59713131548832E-5	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999522028031175	WITHOUT_CLASSIFICATION	4.779719688248309E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999173635412287	WITHOUT_CLASSIFICATION	8.26364587712774E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999499301146901	WITHOUT_CLASSIFICATION	5.00698853098077E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999883770125692	WITHOUT_CLASSIFICATION	1.1622987430802988E-5	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9979019832041298	WITHOUT_CLASSIFICATION	0.0020980167958701756	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999809805567637	WITHOUT_CLASSIFICATION	1.9019443236321763E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999340890681913	WITHOUT_CLASSIFICATION	6.591093180879597E-5	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999350875235269	WITHOUT_CLASSIFICATION	6.491247647308126E-5	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9997938566075482	WITHOUT_CLASSIFICATION	2.0614339245192122E-4	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999720231471413	WITHOUT_CLASSIFICATION	2.797685285872066E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999959246967044	WITHOUT_CLASSIFICATION	4.075303295615217E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998480771314581	WITHOUT_CLASSIFICATION	1.519228685419567E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995460979768706	WITHOUT_CLASSIFICATION	4.539020231294941E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999802840132408	WITHOUT_CLASSIFICATION	1.9715986759207676E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999822309329561	WITHOUT_CLASSIFICATION	1.776906704388666E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999261264200914	WITHOUT_CLASSIFICATION	7.387357990863427E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857718304156	WITHOUT_CLASSIFICATION	1.4228169584467178E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999859333835373	WITHOUT_CLASSIFICATION	1.4066616462737303E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999059567966884	WITHOUT_CLASSIFICATION	9.404320331162348E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999989055063259	WITHOUT_CLASSIFICATION	1.0944936740999661E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999898339156663	WITHOUT_CLASSIFICATION	1.0166084333702694E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887150884593	WITHOUT_CLASSIFICATION	1.1284911540604395E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.99980966026991	WITHOUT_CLASSIFICATION	1.9033973009000062E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999695610124703	WITHOUT_CLASSIFICATION	3.0438987529705154E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999340286868451	WITHOUT_CLASSIFICATION	6.59713131548832E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999829384307253	WITHOUT_CLASSIFICATION	1.7061569274789114E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999612033879669	WITHOUT_CLASSIFICATION	3.879661203309371E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999889578393286	WITHOUT_CLASSIFICATION	1.1042160671349142E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999740943015081	WITHOUT_CLASSIFICATION	2.5905698491930677E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999822309329561	WITHOUT_CLASSIFICATION	1.776906704388666E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999261264200914	WITHOUT_CLASSIFICATION	7.387357990863427E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857718304156	WITHOUT_CLASSIFICATION	1.4228169584467178E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999963084968279	WITHOUT_CLASSIFICATION	3.6915031720784E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997876421296	WITHOUT_CLASSIFICATION	2.12357870426366E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999691609293688	WITHOUT_CLASSIFICATION	3.0839070631158603E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999952836692528	WITHOUT_CLASSIFICATION	4.716330747128831E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.998693742735615	WITHOUT_CLASSIFICATION	0.001306257264384979	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995496106545402	WITHOUT_CLASSIFICATION	4.5038934545993257E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9996316563715157	WITHOUT_CLASSIFICATION	3.683436284841658E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999961725633374	WITHOUT_CLASSIFICATION	3.827436662624082E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999423366729234	WITHOUT_CLASSIFICATION	5.7663327076517705E-5	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999705981822898	WITHOUT_CLASSIFICATION	2.940181771013437E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998734816258071	WITHOUT_CLASSIFICATION	1.2651837419286322E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999860840853242	WITHOUT_CLASSIFICATION	1.3915914675723395E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999885027918396	WITHOUT_CLASSIFICATION	1.1497208160443269E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999802840132408	WITHOUT_CLASSIFICATION	1.9715986759207676E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999989055063259	WITHOUT_CLASSIFICATION	1.0944936740999661E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999898339156663	WITHOUT_CLASSIFICATION	1.0166084333702694E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887150884593	WITHOUT_CLASSIFICATION	1.1284911540604395E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997876421296	WITHOUT_CLASSIFICATION	2.12357870426366E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999691609293688	WITHOUT_CLASSIFICATION	3.0839070631158603E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999952836692528	WITHOUT_CLASSIFICATION	4.716330747128831E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.998693742735615	WITHOUT_CLASSIFICATION	0.001306257264384979	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995496106545402	WITHOUT_CLASSIFICATION	4.5038934545993257E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999972712206363	WITHOUT_CLASSIFICATION	2.728779363605249E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9995769034983887	WITHOUT_CLASSIFICATION	4.230965016112964E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999890467503206	WITHOUT_CLASSIFICATION	1.0953249679445625E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998752634350406	WITHOUT_CLASSIFICATION	1.2473656495936422E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998752634350406	WITHOUT_CLASSIFICATION	1.2473656495936422E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998752634350406	WITHOUT_CLASSIFICATION	1.2473656495936422E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998752634350406	WITHOUT_CLASSIFICATION	1.2473656495936422E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998752634350406	WITHOUT_CLASSIFICATION	1.2473656495936422E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9995677464294097	WITHOUT_CLASSIFICATION	4.3225357059034104E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999766390638039	WITHOUT_CLASSIFICATION	2.3360936196211347E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.999932642725668	WITHOUT_CLASSIFICATION	6.735727433202056E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9978309091819405	WITHOUT_CLASSIFICATION	0.0021690908180595596	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999842318063548	WITHOUT_CLASSIFICATION	1.576819364525864E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999603839017492	WITHOUT_CLASSIFICATION	3.9616098250764276E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999892075745344	WITHOUT_CLASSIFICATION	1.0792425465689472E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999351136098964	WITHOUT_CLASSIFICATION	6.488639010349916E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9997300114143056	WITHOUT_CLASSIFICATION	2.699885856943556E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998584173231467	WITHOUT_CLASSIFICATION	1.415826768532929E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998584173231467	WITHOUT_CLASSIFICATION	1.415826768532929E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998584173231467	WITHOUT_CLASSIFICATION	1.415826768532929E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999558961208699	WITHOUT_CLASSIFICATION	4.410387913015902E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9995169810821284	WITHOUT_CLASSIFICATION	4.830189178717034E-4	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999572680429999	WITHOUT_CLASSIFICATION	4.273195700017144E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.999930201654247	WITHOUT_CLASSIFICATION	6.979834575304788E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.999930201654247	WITHOUT_CLASSIFICATION	6.979834575304788E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999269152220223	WITHOUT_CLASSIFICATION	7.308477797775544E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.999930201654247	WITHOUT_CLASSIFICATION	6.979834575304788E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999426412083019	WITHOUT_CLASSIFICATION	5.7358791698090964E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998970586008004	WITHOUT_CLASSIFICATION	1.0294139919964729E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999873362166973	WITHOUT_CLASSIFICATION	1.2663783302570307E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999816066441828	WITHOUT_CLASSIFICATION	1.8393355817222547E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999816066441828	WITHOUT_CLASSIFICATION	1.8393355817222547E-5	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.999774000665577	WITHOUT_CLASSIFICATION	2.2599933442301736E-4	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999315787790295	WITHOUT_CLASSIFICATION	6.84212209705778E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9964737104998906	WITHOUT_CLASSIFICATION	0.0035262895001093504	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9897147032882523	WITHOUT_CLASSIFICATION	0.010285296711747815	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999866882254759	WITHOUT_CLASSIFICATION	1.331177452409834E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999920880990988	WITHOUT_CLASSIFICATION	7.91190090117543E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9997641310806928	WITHOUT_CLASSIFICATION	2.3586891930712662E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999953166715921	WITHOUT_CLASSIFICATION	4.683328407854672E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997436658586807	WITHOUT_CLASSIFICATION	2.563341413193306E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999281042928636	WITHOUT_CLASSIFICATION	7.189570713633063E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997436658586807	WITHOUT_CLASSIFICATION	2.563341413193306E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999695610124703	WITHOUT_CLASSIFICATION	3.0438987529705154E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999961993626739	WITHOUT_CLASSIFICATION	3.8006373260037834E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999524472847195	WITHOUT_CLASSIFICATION	4.755271528048685E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997390113003718	WITHOUT_CLASSIFICATION	2.609886996282249E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995577156005182	WITHOUT_CLASSIFICATION	4.42284399481841E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999695610124703	WITHOUT_CLASSIFICATION	3.0438987529705154E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999524472847195	WITHOUT_CLASSIFICATION	4.755271528048685E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.99995887619903	WITHOUT_CLASSIFICATION	4.1123800970028705E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999186806632246	WITHOUT_CLASSIFICATION	8.131933677542122E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999564479491715	WITHOUT_CLASSIFICATION	4.355205082846288E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9949376918713977	WITHOUT_CLASSIFICATION	0.005062308128602261	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9949376918713977	WITHOUT_CLASSIFICATION	0.005062308128602261	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.995537349431375	WITHOUT_CLASSIFICATION	0.004462650568625104	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999975136565125	WITHOUT_CLASSIFICATION	2.486343487576577E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999887295715256	WITHOUT_CLASSIFICATION	1.12704284744355E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999774122603954	WITHOUT_CLASSIFICATION	2.2587739604614253E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.999957586477291	WITHOUT_CLASSIFICATION	4.2413522708822896E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999974948629052	WITHOUT_CLASSIFICATION	2.5051370947541995E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999957586477291	WITHOUT_CLASSIFICATION	4.2413522708822896E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999975091698672	WITHOUT_CLASSIFICATION	2.490830132724298E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999975091698672	WITHOUT_CLASSIFICATION	2.490830132724298E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999975091698672	WITHOUT_CLASSIFICATION	2.490830132724298E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999975091698672	WITHOUT_CLASSIFICATION	2.490830132724298E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999975136565125	WITHOUT_CLASSIFICATION	2.486343487576577E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999975091698672	WITHOUT_CLASSIFICATION	2.490830132724298E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997781923677628	WITHOUT_CLASSIFICATION	2.218076322372439E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997781923677628	WITHOUT_CLASSIFICATION	2.218076322372439E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999774122603954	WITHOUT_CLASSIFICATION	2.2587739604614253E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999844299955432	WITHOUT_CLASSIFICATION	1.5570004456842042E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999844299955432	WITHOUT_CLASSIFICATION	1.5570004456842042E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999957586477291	WITHOUT_CLASSIFICATION	4.2413522708822896E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999974948629052	WITHOUT_CLASSIFICATION	2.5051370947541995E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.999957586477291	WITHOUT_CLASSIFICATION	4.2413522708822896E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999931359093932	WITHOUT_CLASSIFICATION	6.864090606894342E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999774122603954	WITHOUT_CLASSIFICATION	2.2587739604614253E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999975136565125	WITHOUT_CLASSIFICATION	2.486343487576577E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999975253124888	WITHOUT_CLASSIFICATION	2.4746875112497264E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999974887737219	WITHOUT_CLASSIFICATION	2.511226278171024E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998290977038495	WITHOUT_CLASSIFICATION	1.709022961504417E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999995205534306	WITHOUT_CLASSIFICATION	4.794465694091182E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.999947575932191	WITHOUT_CLASSIFICATION	5.242406780898152E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999455578265307	WITHOUT_CLASSIFICATION	5.444217346932455E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9998582979388055	WITHOUT_CLASSIFICATION	1.417020611944154E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999964703310695	WITHOUT_CLASSIFICATION	3.5296689304259526E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9995037623806708	WITHOUT_CLASSIFICATION	4.962376193290294E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999908890889501	WITHOUT_CLASSIFICATION	9.110911050056133E-6	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9996936431777856	WITHOUT_CLASSIFICATION	3.0635682221434596E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9783043576636212	WITHOUT_CLASSIFICATION	0.021695642336378707	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999318381599098	WITHOUT_CLASSIFICATION	6.81618400902396E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999954372451925	WITHOUT_CLASSIFICATION	4.562754807438224E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997780722774607	WITHOUT_CLASSIFICATION	2.219277225392995E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.999992680494133	WITHOUT_CLASSIFICATION	7.319505866891269E-6	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.999954528198732	WITHOUT_CLASSIFICATION	4.547180126803959E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999304026093883	WITHOUT_CLASSIFICATION	6.95973906117976E-5	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999300819099597	WITHOUT_CLASSIFICATION	6.991809004031794E-5	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999886169445373	WITHOUT_CLASSIFICATION	1.138305546264838E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895571515	WITHOUT_CLASSIFICATION	1.0442848432817794E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895571515	WITHOUT_CLASSIFICATION	1.0442848432817794E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895571515	WITHOUT_CLASSIFICATION	1.0442848432817794E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999851597606384	WITHOUT_CLASSIFICATION	1.4840239361502434E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895671495	WITHOUT_CLASSIFICATION	1.0432850543595724E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9991675894344264	WITHOUT_CLASSIFICATION	8.324105655735644E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999988928917886	WITHOUT_CLASSIFICATION	1.1071082113858886E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9984074383413806	WITHOUT_CLASSIFICATION	0.0015925616586194723	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999462140792837	WITHOUT_CLASSIFICATION	5.378592071624657E-5	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999987361748969	WITHOUT_CLASSIFICATION	1.263825103181755E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998806669330835	WITHOUT_CLASSIFICATION	1.1933306691639615E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9996822749643896	WITHOUT_CLASSIFICATION	3.177250356104254E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999767173832368	WITHOUT_CLASSIFICATION	2.3282616763249107E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999680419406995	WITHOUT_CLASSIFICATION	3.1958059300417835E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999642199198006	WITHOUT_CLASSIFICATION	3.578008019950464E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999677710893339	WITHOUT_CLASSIFICATION	3.2228910666201015E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997436658586807	WITHOUT_CLASSIFICATION	2.563341413193306E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997436658586807	WITHOUT_CLASSIFICATION	2.563341413193306E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9997390113003718	WITHOUT_CLASSIFICATION	2.609886996282249E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9992993079837879	WITHOUT_CLASSIFICATION	7.006920162120476E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999341031780997	WITHOUT_CLASSIFICATION	6.589682190026075E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999952359768482	WITHOUT_CLASSIFICATION	4.7640231518054244E-5	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999868044151401	WITHOUT_CLASSIFICATION	1.3195584859982032E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999385696370094	WITHOUT_CLASSIFICATION	6.143036299051819E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999190443851792	WITHOUT_CLASSIFICATION	8.09556148209034E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998390197248359	WITHOUT_CLASSIFICATION	1.6098027516411046E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999989521186099	WITHOUT_CLASSIFICATION	1.047881390164064E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997436658586807	WITHOUT_CLASSIFICATION	2.563341413193306E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998697417591422	WITHOUT_CLASSIFICATION	1.302582408577627E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999502477484834	WITHOUT_CLASSIFICATION	4.975225151657083E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999885597369138	WITHOUT_CLASSIFICATION	1.1440263086212126E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999487769621579	WITHOUT_CLASSIFICATION	5.1223037842112304E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9998987351787086	WITHOUT_CLASSIFICATION	1.012648212914656E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999114170427639	WITHOUT_CLASSIFICATION	8.858295723604585E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999114170427639	WITHOUT_CLASSIFICATION	8.858295723604585E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999825593795493	WITHOUT_CLASSIFICATION	1.7440620450668144E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9995341216332005	WITHOUT_CLASSIFICATION	4.658783667994707E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9998828910805201	WITHOUT_CLASSIFICATION	1.1710891947998867E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999741957756442	WITHOUT_CLASSIFICATION	2.5804224355821033E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996680153690818	WITHOUT_CLASSIFICATION	3.3198463091817313E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996680153690818	WITHOUT_CLASSIFICATION	3.3198463091817313E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999705353538435	WITHOUT_CLASSIFICATION	2.946464615649264E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999462712457637	WITHOUT_CLASSIFICATION	5.3728754236144526E-5	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9991893145022273	WITHOUT_CLASSIFICATION	8.106854977726808E-4	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.999961953863233	WITHOUT_CLASSIFICATION	3.804613676698819E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999824059945623	WITHOUT_CLASSIFICATION	1.7594005437653245E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9893929477734638	WITHOUT_CLASSIFICATION	0.01060705222653621	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9893929477734638	WITHOUT_CLASSIFICATION	0.01060705222653621	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9997483106217818	WITHOUT_CLASSIFICATION	2.516893782182012E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999149047459761	WITHOUT_CLASSIFICATION	8.509525402388996E-5	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9998916003966878	WITHOUT_CLASSIFICATION	1.0839960331222935E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9991134954297475	WITHOUT_CLASSIFICATION	8.865045702525721E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999490402373665	WITHOUT_CLASSIFICATION	5.095976263348608E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9971034855966981	WITHOUT_CLASSIFICATION	0.002896514403301851	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9997549358851128	WITHOUT_CLASSIFICATION	2.45064114887251E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999003610953446	WITHOUT_CLASSIFICATION	9.963890465534063E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9970050509722473	WITHOUT_CLASSIFICATION	0.0029949490277527183	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9995298570318076	WITHOUT_CLASSIFICATION	4.7014296819234845E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999516308156277	WITHOUT_CLASSIFICATION	4.836918437242309E-5	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999821603327801	WITHOUT_CLASSIFICATION	1.783966721992013E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9938345778926057	WITHOUT_CLASSIFICATION	0.006165422107394321	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997864511753303	WITHOUT_CLASSIFICATION	2.1354882466979478E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9996582893698251	WITHOUT_CLASSIFICATION	3.417106301747648E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999746557002569	WITHOUT_CLASSIFICATION	2.534429974309879E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999853612649402	WITHOUT_CLASSIFICATION	1.4638735059749211E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9975667513354289	WITHOUT_CLASSIFICATION	0.0024332486645710994	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999293662204236	WITHOUT_CLASSIFICATION	7.063377957643192E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999921844830806	WITHOUT_CLASSIFICATION	7.81551691942855E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999921844830806	WITHOUT_CLASSIFICATION	7.81551691942855E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999975922757555	WITHOUT_CLASSIFICATION	2.407724244497056E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999094205722471	WITHOUT_CLASSIFICATION	9.057942775289727E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9986135741022084	WITHOUT_CLASSIFICATION	0.001386425897791619	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9998889362597335	WITHOUT_CLASSIFICATION	1.1106374026656772E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999987947834567	WITHOUT_CLASSIFICATION	1.2052165433333518E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.999906987870424	WITHOUT_CLASSIFICATION	9.301212957604228E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9998822006333754	WITHOUT_CLASSIFICATION	1.1779936662454792E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999462028861632	WITHOUT_CLASSIFICATION	5.379711383678139E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9998099642803688	WITHOUT_CLASSIFICATION	1.9003571963124936E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999941758395852	WITHOUT_CLASSIFICATION	5.824160414788756E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9998263409604419	WITHOUT_CLASSIFICATION	1.7365903955803182E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9993507911466551	WITHOUT_CLASSIFICATION	6.492088533447937E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.993480716645021	WITHOUT_CLASSIFICATION	0.006519283354978875	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9994634860940482	WITHOUT_CLASSIFICATION	5.365139059517721E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9945739354045456	WITHOUT_CLASSIFICATION	0.005426064595454375	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9995819388494152	WITHOUT_CLASSIFICATION	4.1806115058487026E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998340908079069	WITHOUT_CLASSIFICATION	1.6590919209320042E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997823594778366	WITHOUT_CLASSIFICATION	2.1764052216340736E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999145235482114	WITHOUT_CLASSIFICATION	8.547645178858067E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999390288980524	WITHOUT_CLASSIFICATION	6.097110194765046E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999390288980524	WITHOUT_CLASSIFICATION	6.097110194765046E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9991934487662729	WITHOUT_CLASSIFICATION	8.065512337270932E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9995424552647827	WITHOUT_CLASSIFICATION	4.5754473521738415E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999082720448424	WITHOUT_CLASSIFICATION	9.172795515756799E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999790111098811	WITHOUT_CLASSIFICATION	2.0988890118930318E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998187214550103	WITHOUT_CLASSIFICATION	1.812785449896925E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998890011601845	WITHOUT_CLASSIFICATION	1.1099883981544177E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9991210386039625	WITHOUT_CLASSIFICATION	8.789613960375456E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998753117888536	WITHOUT_CLASSIFICATION	1.246882111464062E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998753117888536	WITHOUT_CLASSIFICATION	1.246882111464062E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998753117888536	WITHOUT_CLASSIFICATION	1.246882111464062E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9998860907213877	WITHOUT_CLASSIFICATION	1.1390927861231669E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998499645181765	WITHOUT_CLASSIFICATION	1.500354818234865E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9966781158096424	WITHOUT_CLASSIFICATION	0.0033218841903575155	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999202822712868	WITHOUT_CLASSIFICATION	7.971772871324053E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999202822712868	WITHOUT_CLASSIFICATION	7.971772871324053E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999402902332643	WITHOUT_CLASSIFICATION	5.9709766735765624E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996830858054387	WITHOUT_CLASSIFICATION	3.1691419456121605E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999199186692422	WITHOUT_CLASSIFICATION	8.008133075775561E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9985949932085556	WITHOUT_CLASSIFICATION	0.001405006791444389	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999975985346832	WITHOUT_CLASSIFICATION	2.401465316952116E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999842631579291	WITHOUT_CLASSIFICATION	1.573684207087553E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.999853557089792	WITHOUT_CLASSIFICATION	1.4644291020794468E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999430720646367	WITHOUT_CLASSIFICATION	5.6927935363215144E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999964949539123	WITHOUT_CLASSIFICATION	3.5050460877003483E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997041691182708	WITHOUT_CLASSIFICATION	2.958308817291807E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9997945899138776	WITHOUT_CLASSIFICATION	2.0541008612246701E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997866741180923	WITHOUT_CLASSIFICATION	2.1332588190774632E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997866741180923	WITHOUT_CLASSIFICATION	2.1332588190774632E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998005291047155	WITHOUT_CLASSIFICATION	1.9947089528441321E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999290224545698	WITHOUT_CLASSIFICATION	7.097754543016532E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999290224545698	WITHOUT_CLASSIFICATION	7.097754543016532E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997465036400275	WITHOUT_CLASSIFICATION	2.5349635997247585E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.999890326540614	WITHOUT_CLASSIFICATION	1.0967345938594822E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9998294417313239	WITHOUT_CLASSIFICATION	1.7055826867596317E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998480771314581	WITHOUT_CLASSIFICATION	1.519228685419567E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998480771314581	WITHOUT_CLASSIFICATION	1.519228685419567E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999888310573799	WITHOUT_CLASSIFICATION	1.1168942620101024E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999937946565817	WITHOUT_CLASSIFICATION	6.2053434184031626E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9995913895219509	WITHOUT_CLASSIFICATION	4.086104780490798E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9799480679547083	WITHOUT_CLASSIFICATION	0.020051932045291716	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9988400604352042	WITHOUT_CLASSIFICATION	0.0011599395647957235	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9988400604352042	WITHOUT_CLASSIFICATION	0.0011599395647957235	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.5743093713109623	DEFECT	0.42569062868903784	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9996654691944775	WITHOUT_CLASSIFICATION	3.345308055224924E-4	DEFECT
// is this an error???	DEFECT	0.9996654691944775	WITHOUT_CLASSIFICATION	3.345308055224924E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9997900082056805	WITHOUT_CLASSIFICATION	2.099917943195372E-4	DEFECT
