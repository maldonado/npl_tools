// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9997914827599557	WITHOUT_CLASSIFICATION	2.085172400443369E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9997824899079361	WITHOUT_CLASSIFICATION	2.1751009206389237E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999404308288166	WITHOUT_CLASSIFICATION	5.9569171183372685E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9998403475955244	WITHOUT_CLASSIFICATION	1.5965240447558183E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999306057199941	WITHOUT_CLASSIFICATION	6.939428000577266E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999720259742651	WITHOUT_CLASSIFICATION	2.797402573490066E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999418029608146	WITHOUT_CLASSIFICATION	5.819703918549266E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999671610424109	WITHOUT_CLASSIFICATION	3.283895758911712E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999720064542376	WITHOUT_CLASSIFICATION	2.799354576244639E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9993251609372227	WITHOUT_CLASSIFICATION	6.748390627772873E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998983393534766	WITHOUT_CLASSIFICATION	1.016606465233184E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999491869405271	WITHOUT_CLASSIFICATION	5.0813059472777705E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998726329123292	WITHOUT_CLASSIFICATION	1.273670876708438E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999271954127152	WITHOUT_CLASSIFICATION	7.280458728478179E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999349569245006	WITHOUT_CLASSIFICATION	6.504307549939182E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998421320896518	WITHOUT_CLASSIFICATION	1.5786791034830912E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999536989547603	WITHOUT_CLASSIFICATION	4.6301045239653816E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999022978890564	WITHOUT_CLASSIFICATION	9.77021109435969E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9996127231760862	WITHOUT_CLASSIFICATION	3.872768239138805E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998630871644077	WITHOUT_CLASSIFICATION	1.3691283559218384E-4	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.998322308762571	WITHOUT_CLASSIFICATION	0.0016776912374290623	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9782393807904185	WITHOUT_CLASSIFICATION	0.021760619209581455	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9981324389294036	WITHOUT_CLASSIFICATION	0.0018675610705964044	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9868868734725267	WITHOUT_CLASSIFICATION	0.013113126527473406	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999340564610645	WITHOUT_CLASSIFICATION	6.594353893551654E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998091539619303	WITHOUT_CLASSIFICATION	1.908460380696208E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999512807431006	WITHOUT_CLASSIFICATION	4.871925689938906E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999661868186378	WITHOUT_CLASSIFICATION	3.381318136220616E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9996731722909252	WITHOUT_CLASSIFICATION	3.268277090746865E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9947004173871706	WITHOUT_CLASSIFICATION	0.005299582612829369	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999849692674267	WITHOUT_CLASSIFICATION	1.5030732573221518E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9995964390948608	WITHOUT_CLASSIFICATION	4.03560905139106E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998786384701402	WITHOUT_CLASSIFICATION	1.2136152985970466E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9992356802050418	WITHOUT_CLASSIFICATION	7.643197949581416E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999057524914419	WITHOUT_CLASSIFICATION	9.4247508558053E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.99998885911701	WITHOUT_CLASSIFICATION	1.1140882989973987E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9945322053214966	WITHOUT_CLASSIFICATION	0.005467794678503424	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999911257542583	WITHOUT_CLASSIFICATION	8.874245741681194E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999897934814127	WITHOUT_CLASSIFICATION	1.0206518587324413E-5	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9998036508978793	WITHOUT_CLASSIFICATION	1.963491021207498E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999158078179202	WITHOUT_CLASSIFICATION	8.41921820798301E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9995931067900298	WITHOUT_CLASSIFICATION	4.0689320997027844E-4	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.999933757175632	WITHOUT_CLASSIFICATION	6.624282436790363E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.998659140619183	WITHOUT_CLASSIFICATION	0.0013408593808169713	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9998532934320683	WITHOUT_CLASSIFICATION	1.4670656793164282E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9993251609372227	WITHOUT_CLASSIFICATION	6.748390627772873E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998983393534766	WITHOUT_CLASSIFICATION	1.016606465233184E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999491869405271	WITHOUT_CLASSIFICATION	5.0813059472777705E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9996143211668059	WITHOUT_CLASSIFICATION	3.8567883319406797E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998726329123292	WITHOUT_CLASSIFICATION	1.273670876708438E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999271954127152	WITHOUT_CLASSIFICATION	7.280458728478179E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999349569245006	WITHOUT_CLASSIFICATION	6.504307549939182E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996706851294432	WITHOUT_CLASSIFICATION	3.293148705567393E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996706851294432	WITHOUT_CLASSIFICATION	3.293148705567393E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996706851294432	WITHOUT_CLASSIFICATION	3.293148705567393E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999306057199941	WITHOUT_CLASSIFICATION	6.939428000577266E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999200294601865	WITHOUT_CLASSIFICATION	7.99705398135332E-5	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.999273770604573	WITHOUT_CLASSIFICATION	7.262293954269731E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999338721878561	WITHOUT_CLASSIFICATION	6.612781214394639E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999022978890564	WITHOUT_CLASSIFICATION	9.77021109435969E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9998738837940392	WITHOUT_CLASSIFICATION	1.2611620596086022E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999340564610645	WITHOUT_CLASSIFICATION	6.594353893551654E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998091539619303	WITHOUT_CLASSIFICATION	1.908460380696208E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999661868186378	WITHOUT_CLASSIFICATION	3.381318136220616E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999849692674267	WITHOUT_CLASSIFICATION	1.5030732573221518E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9988842766545565	WITHOUT_CLASSIFICATION	0.001115723345443491	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9992195095787348	WITHOUT_CLASSIFICATION	7.804904212651632E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9998753682899507	WITHOUT_CLASSIFICATION	1.2463171004926225E-4	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.999768255605662	WITHOUT_CLASSIFICATION	2.3174439433790075E-4	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9998625281556224	WITHOUT_CLASSIFICATION	1.3747184437753598E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999057524914419	WITHOUT_CLASSIFICATION	9.4247508558053E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9945322053214966	WITHOUT_CLASSIFICATION	0.005467794678503424	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999758476388759	WITHOUT_CLASSIFICATION	2.4152361124113372E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9998836452198319	WITHOUT_CLASSIFICATION	1.1635478016811021E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999477032023255	WITHOUT_CLASSIFICATION	5.2296797674464454E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.999902897512059	WITHOUT_CLASSIFICATION	9.710248794101945E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9998993897087394	WITHOUT_CLASSIFICATION	1.006102912606658E-4	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.996860889217111	WITHOUT_CLASSIFICATION	0.003139110782888936	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.5413155916106325	WITHOUT_CLASSIFICATION	0.45868440838936747	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9979343488674567	WITHOUT_CLASSIFICATION	0.0020656511325432814	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.99998155423509	WITHOUT_CLASSIFICATION	1.84457649099016E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9991728787381229	WITHOUT_CLASSIFICATION	8.271212618771382E-4	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999696174210017	WITHOUT_CLASSIFICATION	3.0382578998329324E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9998593614252108	WITHOUT_CLASSIFICATION	1.4063857478913784E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9984702053512111	WITHOUT_CLASSIFICATION	0.001529794648788895	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.99998155423509	WITHOUT_CLASSIFICATION	1.84457649099016E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9991728787381229	WITHOUT_CLASSIFICATION	8.271212618771382E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9972230666238877	WITHOUT_CLASSIFICATION	0.0027769333761122816	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9972230666238877	WITHOUT_CLASSIFICATION	0.0027769333761122816	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999442183582806	WITHOUT_CLASSIFICATION	5.578164171930962E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999543816964849	WITHOUT_CLASSIFICATION	4.5618303515171386E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999321716378227	WITHOUT_CLASSIFICATION	6.782836217739227E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999442183582806	WITHOUT_CLASSIFICATION	5.578164171930962E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999543816964849	WITHOUT_CLASSIFICATION	4.5618303515171386E-5	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999116966605945	WITHOUT_CLASSIFICATION	8.830333940553086E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999177466019904	WITHOUT_CLASSIFICATION	8.225339800955988E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999400365130898	WITHOUT_CLASSIFICATION	5.996348691013287E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999400365130898	WITHOUT_CLASSIFICATION	5.996348691013287E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999695743050601	WITHOUT_CLASSIFICATION	3.0425694940021104E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999004255386164	WITHOUT_CLASSIFICATION	9.95744613836161E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999004255386164	WITHOUT_CLASSIFICATION	9.95744613836161E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999346054167974	WITHOUT_CLASSIFICATION	6.539458320257685E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9997621439807985	WITHOUT_CLASSIFICATION	2.3785601920137125E-4	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999519032473788	WITHOUT_CLASSIFICATION	4.8096752621197984E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999704767474192	WITHOUT_CLASSIFICATION	2.952325258074227E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9996306940570718	WITHOUT_CLASSIFICATION	3.693059429282351E-4	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999823619614905	WITHOUT_CLASSIFICATION	1.7638038509593205E-5	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9998852658196303	WITHOUT_CLASSIFICATION	1.1473418036966929E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9998570406174194	WITHOUT_CLASSIFICATION	1.4295938258046225E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999851523035332	WITHOUT_CLASSIFICATION	1.4847696466838305E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9997354517280614	WITHOUT_CLASSIFICATION	2.645482719385717E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999712407754482	WITHOUT_CLASSIFICATION	2.8759224551836666E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999419447970594	WITHOUT_CLASSIFICATION	5.805520294049327E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9998977833757801	WITHOUT_CLASSIFICATION	1.0221662421994678E-4	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9988130250253358	WITHOUT_CLASSIFICATION	0.0011869749746641878	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9985510902661778	WITHOUT_CLASSIFICATION	0.0014489097338222128	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999292745330468	WITHOUT_CLASSIFICATION	7.072546695309536E-5	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9997562783763997	WITHOUT_CLASSIFICATION	2.4372162360026587E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999995748862722	WITHOUT_CLASSIFICATION	4.251137277245047E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999995748862722	WITHOUT_CLASSIFICATION	4.251137277245047E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9986615418063498	WITHOUT_CLASSIFICATION	0.0013384581936501827	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9986615418063498	WITHOUT_CLASSIFICATION	0.0013384581936501827	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9998531409325252	WITHOUT_CLASSIFICATION	1.4685906747471437E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999621744466636	WITHOUT_CLASSIFICATION	3.782555333649258E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9989592816527086	WITHOUT_CLASSIFICATION	0.0010407183472914334	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999796441189294	WITHOUT_CLASSIFICATION	2.0355881070603148E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9988130250253358	WITHOUT_CLASSIFICATION	0.0011869749746641878	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9996756268183618	WITHOUT_CLASSIFICATION	3.2437318163817686E-4	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999167086694243	WITHOUT_CLASSIFICATION	8.329133057570488E-5	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999831664653329	WITHOUT_CLASSIFICATION	1.683353466702888E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999875922677695	WITHOUT_CLASSIFICATION	1.2407732230529945E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.994640673814631	WITHOUT_CLASSIFICATION	0.005359326185369065	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.999589888911516	WITHOUT_CLASSIFICATION	4.1011108848397753E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999849224524222	WITHOUT_CLASSIFICATION	1.5077547577863974E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999064225669996	WITHOUT_CLASSIFICATION	9.35774330003996E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9995842809842256	WITHOUT_CLASSIFICATION	4.157190157744019E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998656723422069	WITHOUT_CLASSIFICATION	0.001343276577931024	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999905923178601	WITHOUT_CLASSIFICATION	9.40768213988621E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9998066380988305	WITHOUT_CLASSIFICATION	1.933619011695451E-4	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9998066380988305	WITHOUT_CLASSIFICATION	1.933619011695451E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9962159728121417	WITHOUT_CLASSIFICATION	0.003784027187858391	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999904112322036	WITHOUT_CLASSIFICATION	9.588767796356486E-6	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9998129420858877	WITHOUT_CLASSIFICATION	1.8705791411234812E-4	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999464805574038	WITHOUT_CLASSIFICATION	5.351944259632573E-5	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.999996880341098	WITHOUT_CLASSIFICATION	3.119658901877814E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999864275347816	WITHOUT_CLASSIFICATION	1.3572465218294512E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9998618985659787	WITHOUT_CLASSIFICATION	1.3810143402124932E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.999961571420233	WITHOUT_CLASSIFICATION	3.84285797668741E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9997582867831277	WITHOUT_CLASSIFICATION	2.4171321687227413E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9984347930314166	WITHOUT_CLASSIFICATION	0.0015652069685834263	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9997115493294106	WITHOUT_CLASSIFICATION	2.884506705893406E-4	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9992981798474989	WITHOUT_CLASSIFICATION	7.018201525010585E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9995038112095809	WITHOUT_CLASSIFICATION	4.961887904190731E-4	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.99898188225277	WITHOUT_CLASSIFICATION	0.0010181177472300042	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.999637046243837	WITHOUT_CLASSIFICATION	3.629537561629977E-4	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9995604103560977	WITHOUT_CLASSIFICATION	4.3958964390239326E-4	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.999993442897234	WITHOUT_CLASSIFICATION	6.5571027659290664E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.999985056202628	WITHOUT_CLASSIFICATION	1.4943797371959832E-5	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9996716332006115	WITHOUT_CLASSIFICATION	3.283667993884891E-4	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999901895696356	WITHOUT_CLASSIFICATION	9.81043036443233E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999983160649913	WITHOUT_CLASSIFICATION	1.6839350086472243E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999515765020857	WITHOUT_CLASSIFICATION	4.842349791427721E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999978057904635	WITHOUT_CLASSIFICATION	2.1942095365631947E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9997626779390946	WITHOUT_CLASSIFICATION	2.373220609053892E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9996855898948117	WITHOUT_CLASSIFICATION	3.1441010518826586E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999885625440472	WITHOUT_CLASSIFICATION	1.1437455952841842E-5	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9995052576027401	WITHOUT_CLASSIFICATION	4.947423972598142E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9997004272390038	WITHOUT_CLASSIFICATION	2.995727609961773E-4	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9981826470280482	WITHOUT_CLASSIFICATION	0.0018173529719518913	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999760017095267	WITHOUT_CLASSIFICATION	2.399829047316581E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999804872451374	WITHOUT_CLASSIFICATION	1.9512754862497477E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999804872451374	WITHOUT_CLASSIFICATION	1.9512754862497477E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.999958500447829	WITHOUT_CLASSIFICATION	4.149955217093835E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.999958500447829	WITHOUT_CLASSIFICATION	4.149955217093835E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.996964889373273	WITHOUT_CLASSIFICATION	0.0030351106267270393	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.99998850946076	WITHOUT_CLASSIFICATION	1.1490539240032997E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999426545471767	WITHOUT_CLASSIFICATION	5.734545282330141E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999426545471767	WITHOUT_CLASSIFICATION	5.734545282330141E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9992145655472493	WITHOUT_CLASSIFICATION	7.85434452750745E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999912274537749	WITHOUT_CLASSIFICATION	8.772546225104192E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999419447970594	WITHOUT_CLASSIFICATION	5.805520294049327E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999314757720406	WITHOUT_CLASSIFICATION	6.852422795936704E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999314757720406	WITHOUT_CLASSIFICATION	6.852422795936704E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999314757720406	WITHOUT_CLASSIFICATION	6.852422795936704E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999912274537749	WITHOUT_CLASSIFICATION	8.772546225104192E-5	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9998704665583118	WITHOUT_CLASSIFICATION	1.295334416882393E-4	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999442640895642	WITHOUT_CLASSIFICATION	5.5735910435774216E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9995422929511336	WITHOUT_CLASSIFICATION	4.5770704886641744E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999239992564162	WITHOUT_CLASSIFICATION	7.60007435838271E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9994367222607475	WITHOUT_CLASSIFICATION	5.632777392524151E-4	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9998081290813255	WITHOUT_CLASSIFICATION	1.9187091867437094E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9997824899079361	WITHOUT_CLASSIFICATION	2.1751009206389237E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999404308288166	WITHOUT_CLASSIFICATION	5.9569171183372685E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9998403475955244	WITHOUT_CLASSIFICATION	1.5965240447558183E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999306057199941	WITHOUT_CLASSIFICATION	6.939428000577266E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999720259742651	WITHOUT_CLASSIFICATION	2.797402573490066E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999418029608146	WITHOUT_CLASSIFICATION	5.819703918549266E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999671610424109	WITHOUT_CLASSIFICATION	3.283895758911712E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9993251609372227	WITHOUT_CLASSIFICATION	6.748390627772873E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998983393534766	WITHOUT_CLASSIFICATION	1.016606465233184E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999491869405271	WITHOUT_CLASSIFICATION	5.0813059472777705E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997009702132422	WITHOUT_CLASSIFICATION	2.9902978675782265E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998726329123292	WITHOUT_CLASSIFICATION	1.273670876708438E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999271954127152	WITHOUT_CLASSIFICATION	7.280458728478179E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999349569245006	WITHOUT_CLASSIFICATION	6.504307549939182E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998421320896518	WITHOUT_CLASSIFICATION	1.5786791034830912E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999536989547603	WITHOUT_CLASSIFICATION	4.6301045239653816E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998339087569418	WITHOUT_CLASSIFICATION	1.6609124305814598E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999971507186126	WITHOUT_CLASSIFICATION	2.849281387387591E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999022978890564	WITHOUT_CLASSIFICATION	9.77021109435969E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9996127231760862	WITHOUT_CLASSIFICATION	3.872768239138805E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998630871644077	WITHOUT_CLASSIFICATION	1.3691283559218384E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9998738837940392	WITHOUT_CLASSIFICATION	1.2611620596086022E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999340564610645	WITHOUT_CLASSIFICATION	6.594353893551654E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998091539619303	WITHOUT_CLASSIFICATION	1.908460380696208E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999512807431006	WITHOUT_CLASSIFICATION	4.871925689938906E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999661868186378	WITHOUT_CLASSIFICATION	3.381318136220616E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999869861266422	WITHOUT_CLASSIFICATION	1.3013873357829374E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999677484766349	WITHOUT_CLASSIFICATION	3.2251523365151076E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998786384701402	WITHOUT_CLASSIFICATION	1.2136152985970466E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9996731722909252	WITHOUT_CLASSIFICATION	3.268277090746865E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999849692674267	WITHOUT_CLASSIFICATION	1.5030732573221518E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9947004173871706	WITHOUT_CLASSIFICATION	0.005299582612829369	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990602080005497	WITHOUT_CLASSIFICATION	9.397919994503708E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9997124500754511	WITHOUT_CLASSIFICATION	2.8754992454891085E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999849692674267	WITHOUT_CLASSIFICATION	1.5030732573221518E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999057524914419	WITHOUT_CLASSIFICATION	9.4247508558053E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9992356802050418	WITHOUT_CLASSIFICATION	7.643197949581416E-4	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999918195037237	WITHOUT_CLASSIFICATION	8.180496276180527E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9945322053214966	WITHOUT_CLASSIFICATION	0.005467794678503424	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999500352161051	WITHOUT_CLASSIFICATION	4.996478389482315E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990602080005497	WITHOUT_CLASSIFICATION	9.397919994503708E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9945322053214966	WITHOUT_CLASSIFICATION	0.005467794678503424	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.99972622180965	WITHOUT_CLASSIFICATION	2.7377819034994844E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9997193436544128	WITHOUT_CLASSIFICATION	2.806563455871613E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9998845277893523	WITHOUT_CLASSIFICATION	1.1547221064767016E-4	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999349434145905	WITHOUT_CLASSIFICATION	6.505658540935673E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9993373011318417	WITHOUT_CLASSIFICATION	6.626988681583102E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9992901410473903	WITHOUT_CLASSIFICATION	7.098589526097027E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9993373011318417	WITHOUT_CLASSIFICATION	6.626988681583102E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9996943795645822	WITHOUT_CLASSIFICATION	3.0562043541776434E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.99644843503816	WITHOUT_CLASSIFICATION	0.0035515649618400136	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9989039069902246	WITHOUT_CLASSIFICATION	0.0010960930097754507	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999332001130063	WITHOUT_CLASSIFICATION	6.679988699360753E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9996126471270385	WITHOUT_CLASSIFICATION	3.873528729614844E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9998885660521483	WITHOUT_CLASSIFICATION	1.1143394785162998E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999819172149725	WITHOUT_CLASSIFICATION	1.8082785027476764E-5	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9998169247331754	WITHOUT_CLASSIFICATION	1.830752668245895E-4	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9995961659518695	WITHOUT_CLASSIFICATION	4.0383404813056577E-4	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9998412972317787	WITHOUT_CLASSIFICATION	1.587027682212535E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999464268899272	WITHOUT_CLASSIFICATION	5.35731100727025E-5	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999336411460704	WITHOUT_CLASSIFICATION	6.635885392964594E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.999788636180503	WITHOUT_CLASSIFICATION	2.113638194969827E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999122739476558	WITHOUT_CLASSIFICATION	8.772605234413252E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999915467044465	WITHOUT_CLASSIFICATION	8.453295553575388E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999683557235661	WITHOUT_CLASSIFICATION	3.164427643385408E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9967170555775077	WITHOUT_CLASSIFICATION	0.0032829444224922815	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9998333027700487	WITHOUT_CLASSIFICATION	1.6669722995134038E-4	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9998962226398509	WITHOUT_CLASSIFICATION	1.0377736014908373E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999764100467593	WITHOUT_CLASSIFICATION	2.3589953240704542E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999403889322905	WITHOUT_CLASSIFICATION	5.961106770959045E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999761118905459	WITHOUT_CLASSIFICATION	2.3888109454074577E-5	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.999927835147138	WITHOUT_CLASSIFICATION	7.21648528619322E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999911257542583	WITHOUT_CLASSIFICATION	8.874245741681194E-6	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9996712905399828	WITHOUT_CLASSIFICATION	3.2870946001719214E-4	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.999939078840107	WITHOUT_CLASSIFICATION	6.092115989306767E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9998120503161657	WITHOUT_CLASSIFICATION	1.87949683834328E-4	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999541938543315	WITHOUT_CLASSIFICATION	4.580614566847507E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999765614214429	WITHOUT_CLASSIFICATION	2.3438578557130994E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999447334576638	WITHOUT_CLASSIFICATION	5.526654233626987E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.999980383776216	WITHOUT_CLASSIFICATION	1.961622378401033E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9998812982744454	WITHOUT_CLASSIFICATION	1.1870172555461127E-4	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999820146771587	WITHOUT_CLASSIFICATION	1.7985322841216262E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999940759010691	WITHOUT_CLASSIFICATION	5.924098930905461E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999787258089763	WITHOUT_CLASSIFICATION	2.12741910236489E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9993005908322682	WITHOUT_CLASSIFICATION	6.994091677318481E-4	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999360535518218	WITHOUT_CLASSIFICATION	6.39464481782222E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999825735215983	WITHOUT_CLASSIFICATION	1.7426478401732002E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999758476388759	WITHOUT_CLASSIFICATION	2.4152361124113372E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999420123195192	WITHOUT_CLASSIFICATION	5.798768048088874E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.999965286719999	WITHOUT_CLASSIFICATION	3.471328000096967E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999492492860538	WITHOUT_CLASSIFICATION	5.0750713946142704E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.999985052477253	WITHOUT_CLASSIFICATION	1.4947522746959636E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.997772927872922	WITHOUT_CLASSIFICATION	0.00222707212707793	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9864499072205409	WITHOUT_CLASSIFICATION	0.013550092779459118	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999793110443124	WITHOUT_CLASSIFICATION	2.0688955687717635E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999900990529635	WITHOUT_CLASSIFICATION	9.900947036357858E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9997621439807985	WITHOUT_CLASSIFICATION	2.3785601920137125E-4	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9997159412347756	WITHOUT_CLASSIFICATION	2.8405876522431475E-4	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999650432418667	WITHOUT_CLASSIFICATION	3.495675813323917E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999930134429801	WITHOUT_CLASSIFICATION	6.986557019997252E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999845178905915	WITHOUT_CLASSIFICATION	1.5482109408437227E-5	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999870499423907	WITHOUT_CLASSIFICATION	1.2950057609260517E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.999841097342103	WITHOUT_CLASSIFICATION	1.589026578970774E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.999644156470611	WITHOUT_CLASSIFICATION	3.5584352938901624E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9996975458786029	WITHOUT_CLASSIFICATION	3.024541213971123E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999668193817216	WITHOUT_CLASSIFICATION	3.318061827843006E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999133066830308	WITHOUT_CLASSIFICATION	8.66933169691226E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999461089044568	WITHOUT_CLASSIFICATION	5.389109554314597E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999292745330468	WITHOUT_CLASSIFICATION	7.072546695309536E-5	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9997562783763997	WITHOUT_CLASSIFICATION	2.4372162360026587E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999796441189294	WITHOUT_CLASSIFICATION	2.0355881070603148E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.999841097342103	WITHOUT_CLASSIFICATION	1.589026578970774E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999133066830308	WITHOUT_CLASSIFICATION	8.66933169691226E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999461089044568	WITHOUT_CLASSIFICATION	5.389109554314597E-5	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9994941356932686	WITHOUT_CLASSIFICATION	5.05864306731467E-4	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999971271597435	WITHOUT_CLASSIFICATION	2.8728402563776684E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.999951253898551	WITHOUT_CLASSIFICATION	4.8746101448909105E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9998381928902713	WITHOUT_CLASSIFICATION	1.6180710972866884E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999845178905915	WITHOUT_CLASSIFICATION	1.5482109408437227E-5	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999870499423907	WITHOUT_CLASSIFICATION	1.2950057609260517E-5	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9998844118557703	WITHOUT_CLASSIFICATION	1.1558814422970455E-4	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9998236840581771	WITHOUT_CLASSIFICATION	1.7631594182301774E-4	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999629795001331	WITHOUT_CLASSIFICATION	3.7020499866900504E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999867386130679	WITHOUT_CLASSIFICATION	1.3261386932157578E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999341131614166	WITHOUT_CLASSIFICATION	6.588683858351369E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999246406179649	WITHOUT_CLASSIFICATION	7.535938203507441E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9994411149107333	WITHOUT_CLASSIFICATION	5.588850892667376E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.999837434798224	WITHOUT_CLASSIFICATION	1.6256520177613897E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999097219585954	WITHOUT_CLASSIFICATION	9.027804140462022E-5	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999949643633885	WITHOUT_CLASSIFICATION	5.035636611527301E-6	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9991904422582435	WITHOUT_CLASSIFICATION	8.095577417566476E-4	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9996998527526229	WITHOUT_CLASSIFICATION	3.0014724737717014E-4	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999339310056258	WITHOUT_CLASSIFICATION	6.606899437428566E-5	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.999980142276216	WITHOUT_CLASSIFICATION	1.9857723784023506E-5	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999048430290184	WITHOUT_CLASSIFICATION	9.515697098158671E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.999986774646062	WITHOUT_CLASSIFICATION	1.3225353937943772E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999845178905915	WITHOUT_CLASSIFICATION	1.5482109408437227E-5	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999870499423907	WITHOUT_CLASSIFICATION	1.2950057609260517E-5	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999128947970511	WITHOUT_CLASSIFICATION	8.71052029488541E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9998678180089853	WITHOUT_CLASSIFICATION	1.321819910147569E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999968959144224	WITHOUT_CLASSIFICATION	3.104085577604276E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999773262586468	WITHOUT_CLASSIFICATION	2.267374135321935E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999546796784831	WITHOUT_CLASSIFICATION	4.5320321517000753E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.999891036956568	WITHOUT_CLASSIFICATION	1.0896304343204764E-4	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9958174180527989	WITHOUT_CLASSIFICATION	0.004182581947201125	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9983193603168735	WITHOUT_CLASSIFICATION	0.0016806396831264528	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999535870202824	WITHOUT_CLASSIFICATION	4.641297971768367E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999535870202824	WITHOUT_CLASSIFICATION	4.641297971768367E-5	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9935419014842871	WITHOUT_CLASSIFICATION	0.006458098515712882	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9998963077725249	WITHOUT_CLASSIFICATION	1.0369222747507534E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9953298571783563	WITHOUT_CLASSIFICATION	0.004670142821643619	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9992394171426575	WITHOUT_CLASSIFICATION	7.605828573424011E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.999819634852552	WITHOUT_CLASSIFICATION	1.803651474480343E-4	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999793345982634	WITHOUT_CLASSIFICATION	2.0665401736655274E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9967816491118218	WITHOUT_CLASSIFICATION	0.0032183508881782614	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9967816491118218	WITHOUT_CLASSIFICATION	0.0032183508881782614	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.999844578694106	WITHOUT_CLASSIFICATION	1.554213058939443E-4	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9998575973962672	WITHOUT_CLASSIFICATION	1.424026037327746E-4	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999051812905986	WITHOUT_CLASSIFICATION	9.481870940130624E-5	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999023371435921	WITHOUT_CLASSIFICATION	9.766285640798584E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.999907407476808	WITHOUT_CLASSIFICATION	9.259252319209843E-5	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9995521059486971	WITHOUT_CLASSIFICATION	4.478940513027816E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999472676396813	WITHOUT_CLASSIFICATION	5.2732360318567344E-5	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9976329662378184	WITHOUT_CLASSIFICATION	0.0023670337621814913	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999807724860375	WITHOUT_CLASSIFICATION	1.9227513962607E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999898969277395	WITHOUT_CLASSIFICATION	1.010307226044071E-5	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.999634734409131	WITHOUT_CLASSIFICATION	3.652655908690514E-4	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999939785006787	WITHOUT_CLASSIFICATION	6.021499321293947E-5	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9998084320793271	WITHOUT_CLASSIFICATION	1.9156792067290038E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9997223725739525	WITHOUT_CLASSIFICATION	2.7762742604743254E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998107222138504	WITHOUT_CLASSIFICATION	1.892777861495894E-4	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999815725432448	WITHOUT_CLASSIFICATION	1.8427456755117755E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999681521990579	WITHOUT_CLASSIFICATION	3.184780094222125E-5	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999654868452916	WITHOUT_CLASSIFICATION	3.451315470838965E-5	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9998647716738348	WITHOUT_CLASSIFICATION	1.3522832616514306E-4	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999173057832824	WITHOUT_CLASSIFICATION	8.269421671769494E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9996595660209457	WITHOUT_CLASSIFICATION	3.4043397905418496E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.999999522473925	WITHOUT_CLASSIFICATION	4.775260751137514E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999724001944886	WITHOUT_CLASSIFICATION	2.7599805511262643E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9997782727476267	WITHOUT_CLASSIFICATION	2.2172725237336484E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999876280290595	WITHOUT_CLASSIFICATION	1.237197094056458E-5	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999345846803697	WITHOUT_CLASSIFICATION	6.541531963034642E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999625935704365	WITHOUT_CLASSIFICATION	3.740642956340515E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999946964515802	WITHOUT_CLASSIFICATION	5.303548419769485E-6	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9988303938871822	WITHOUT_CLASSIFICATION	0.001169606112817857	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999967517068978	WITHOUT_CLASSIFICATION	3.248293102087993E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9998323425860949	WITHOUT_CLASSIFICATION	1.6765741390500232E-4	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999867719062184	WITHOUT_CLASSIFICATION	1.3228093781527031E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9995705863030141	WITHOUT_CLASSIFICATION	4.2941369698583636E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9998878418717945	WITHOUT_CLASSIFICATION	1.121581282055141E-4	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9970773833257232	WITHOUT_CLASSIFICATION	0.002922616674276926	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9998967410059569	WITHOUT_CLASSIFICATION	1.0325899404295994E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999906328242151	WITHOUT_CLASSIFICATION	9.367175784957132E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9939083603870491	WITHOUT_CLASSIFICATION	0.0060916396129508926	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9997736008449228	WITHOUT_CLASSIFICATION	2.2639915507703998E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998828375068414	WITHOUT_CLASSIFICATION	1.1716249315866205E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999209752969116	WITHOUT_CLASSIFICATION	7.902470308837998E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9996943764632792	WITHOUT_CLASSIFICATION	3.056235367208515E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999949026036375	WITHOUT_CLASSIFICATION	5.097396362507211E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9998585751132915	WITHOUT_CLASSIFICATION	1.4142488670862086E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999291718955435	WITHOUT_CLASSIFICATION	7.082810445644413E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999209752969116	WITHOUT_CLASSIFICATION	7.902470308837998E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999949026036375	WITHOUT_CLASSIFICATION	5.097396362507211E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.994843538290439	WITHOUT_CLASSIFICATION	0.005156461709560924	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999714442137165	WITHOUT_CLASSIFICATION	2.8555786283545377E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9998510537943679	WITHOUT_CLASSIFICATION	1.4894620563209472E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.999994252000502	WITHOUT_CLASSIFICATION	5.7479994980564195E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998828375068414	WITHOUT_CLASSIFICATION	1.1716249315866205E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998828375068414	WITHOUT_CLASSIFICATION	1.1716249315866205E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999209752969116	WITHOUT_CLASSIFICATION	7.902470308837998E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9998963970865029	WITHOUT_CLASSIFICATION	1.0360291349712701E-4	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9996404526896616	WITHOUT_CLASSIFICATION	3.595473103383545E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9998529814941872	WITHOUT_CLASSIFICATION	1.4701850581280883E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9998529814941872	WITHOUT_CLASSIFICATION	1.4701850581280883E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999428804399274	WITHOUT_CLASSIFICATION	5.711956007248682E-5	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998745849759438	WITHOUT_CLASSIFICATION	1.2541502405617887E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9997302610130745	WITHOUT_CLASSIFICATION	2.6973898692556736E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9997302610130745	WITHOUT_CLASSIFICATION	2.6973898692556736E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9998001142800447	WITHOUT_CLASSIFICATION	1.99885719955301E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998745849759438	WITHOUT_CLASSIFICATION	1.2541502405617887E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9997302610130745	WITHOUT_CLASSIFICATION	2.6973898692556736E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9998001142800447	WITHOUT_CLASSIFICATION	1.99885719955301E-4	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9998741622281572	WITHOUT_CLASSIFICATION	1.2583777184282957E-4	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9996020902569293	WITHOUT_CLASSIFICATION	3.9790974307076665E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9998219084860672	WITHOUT_CLASSIFICATION	1.78091513932799E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9997924351196399	WITHOUT_CLASSIFICATION	2.0756488036011026E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9997822186029408	WITHOUT_CLASSIFICATION	2.1778139705917694E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999862568060789	WITHOUT_CLASSIFICATION	1.3743193921170417E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998488896083535	WITHOUT_CLASSIFICATION	1.5111039164643795E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9998651135064409	WITHOUT_CLASSIFICATION	1.3488649355911567E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999090575473301	WITHOUT_CLASSIFICATION	9.094245266991204E-5	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9990377441302346	WITHOUT_CLASSIFICATION	9.622558697653577E-4	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999879123782951	WITHOUT_CLASSIFICATION	1.2087621704878925E-5	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999899282189478	WITHOUT_CLASSIFICATION	1.0071781052059233E-5	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999608816722102	WITHOUT_CLASSIFICATION	3.9118327789806224E-5	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999852999390678	WITHOUT_CLASSIFICATION	1.4700060932128673E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999402933722075	WITHOUT_CLASSIFICATION	5.970662779259784E-5	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9997870290919199	WITHOUT_CLASSIFICATION	2.129709080802514E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9990273682609344	WITHOUT_CLASSIFICATION	9.726317390654529E-4	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.999693928797197	WITHOUT_CLASSIFICATION	3.0607120280302583E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9997425389506723	WITHOUT_CLASSIFICATION	2.5746104932768696E-4	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9997600201443001	WITHOUT_CLASSIFICATION	2.3997985569993374E-4	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.999966947285817	WITHOUT_CLASSIFICATION	3.305271418292198E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999662868333082	WITHOUT_CLASSIFICATION	3.371316669165659E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9998919214185937	WITHOUT_CLASSIFICATION	1.0807858140621505E-4	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.999980940030791	WITHOUT_CLASSIFICATION	1.9059969209081364E-5	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9998026057547152	WITHOUT_CLASSIFICATION	1.973942452847427E-4	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999818155138291	WITHOUT_CLASSIFICATION	1.818448617088858E-5	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999106842609894	WITHOUT_CLASSIFICATION	8.9315739010606E-5	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999214168619097	WITHOUT_CLASSIFICATION	7.858313809026365E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.999255031795992	WITHOUT_CLASSIFICATION	7.44968204008011E-4	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9997718872847975	WITHOUT_CLASSIFICATION	2.2811271520257155E-4	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9996208978354684	WITHOUT_CLASSIFICATION	3.791021645317382E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999143715754593	WITHOUT_CLASSIFICATION	8.562842454078935E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999419735435247	WITHOUT_CLASSIFICATION	5.8026456475275E-5	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.999337998858928	WITHOUT_CLASSIFICATION	6.620011410720284E-4	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999429007711551	WITHOUT_CLASSIFICATION	5.709922884481219E-5	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999389914173451	WITHOUT_CLASSIFICATION	6.1008582654803605E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999512623491279	WITHOUT_CLASSIFICATION	4.873765087213439E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999512623491279	WITHOUT_CLASSIFICATION	4.873765087213439E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999512623491279	WITHOUT_CLASSIFICATION	4.873765087213439E-5	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999993442998043	WITHOUT_CLASSIFICATION	6.557001957414361E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9998353649368699	WITHOUT_CLASSIFICATION	1.646350631301267E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9975695962880202	WITHOUT_CLASSIFICATION	0.002430403711979764	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9997854904463539	WITHOUT_CLASSIFICATION	2.1450955364604203E-4	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9998970315013971	WITHOUT_CLASSIFICATION	1.0296849860299039E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999991095573779	WITHOUT_CLASSIFICATION	8.904426220731738E-7	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999761357408146	WITHOUT_CLASSIFICATION	2.3864259185528305E-5	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9993843786928602	WITHOUT_CLASSIFICATION	6.156213071397285E-4	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9996751656821496	WITHOUT_CLASSIFICATION	3.248343178503519E-4	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9998785820774262	WITHOUT_CLASSIFICATION	1.2141792257372299E-4	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9948369723211675	WITHOUT_CLASSIFICATION	0.005163027678832491	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999905448338668	WITHOUT_CLASSIFICATION	9.4551661332038E-6	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999871599358962	WITHOUT_CLASSIFICATION	1.284006410390136E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9962316363610951	WITHOUT_CLASSIFICATION	0.0037683636389048295	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9998572605288656	WITHOUT_CLASSIFICATION	1.4273947113451334E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999947492375121	WITHOUT_CLASSIFICATION	5.250762487983824E-6	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999025408243353	WITHOUT_CLASSIFICATION	9.745917566479436E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999879425326552	WITHOUT_CLASSIFICATION	1.2057467344801432E-5	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9996920912095756	WITHOUT_CLASSIFICATION	3.0790879042441144E-4	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9995734621114701	WITHOUT_CLASSIFICATION	4.265378885299028E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999878458273808	WITHOUT_CLASSIFICATION	1.2154172619164653E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9997743739025072	WITHOUT_CLASSIFICATION	2.2562609749267833E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999922745931069	WITHOUT_CLASSIFICATION	7.725406893066911E-6	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.8832109452165873	WITHOUT_CLASSIFICATION	0.11678905478341277	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999834362788987	WITHOUT_CLASSIFICATION	1.6563721101253962E-5	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999788849695743	WITHOUT_CLASSIFICATION	2.111503042569157E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9997203757772972	WITHOUT_CLASSIFICATION	2.7962422270281525E-4	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999454145491652	WITHOUT_CLASSIFICATION	5.4585450834874946E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9993007024509367	WITHOUT_CLASSIFICATION	6.992975490633887E-4	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.999991921573273	WITHOUT_CLASSIFICATION	8.078426727085853E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9997455232377648	WITHOUT_CLASSIFICATION	2.544767622351233E-4	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.8669810642180897	WITHOUT_CLASSIFICATION	0.13301893578191032	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9984006025920029	WITHOUT_CLASSIFICATION	0.0015993974079970537	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9998764480492639	WITHOUT_CLASSIFICATION	1.2355195073614472E-4	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9986888952328703	WITHOUT_CLASSIFICATION	0.0013111047671296	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9993428836163212	WITHOUT_CLASSIFICATION	6.571163836787507E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999995017620511	WITHOUT_CLASSIFICATION	4.982379489306159E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.999969656076806	WITHOUT_CLASSIFICATION	3.0343923193969673E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999916816987583	WITHOUT_CLASSIFICATION	8.318301241690266E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9998209263294285	WITHOUT_CLASSIFICATION	1.7907367057140675E-4	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.999961517856686	WITHOUT_CLASSIFICATION	3.848214331405812E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9998760445364697	WITHOUT_CLASSIFICATION	1.2395546353017141E-4	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.999891036956568	WITHOUT_CLASSIFICATION	1.0896304343204764E-4	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999618979617333	WITHOUT_CLASSIFICATION	3.810203826670802E-5	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999397941164567	WITHOUT_CLASSIFICATION	6.0205883543225356E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9997747021939489	WITHOUT_CLASSIFICATION	2.252978060511112E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9981672454937088	WITHOUT_CLASSIFICATION	0.0018327545062911993	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9963738518390574	WITHOUT_CLASSIFICATION	0.0036261481609425055	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999733370989079	WITHOUT_CLASSIFICATION	2.66629010920237E-5	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9996024987777397	WITHOUT_CLASSIFICATION	3.9750122226043724E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.99995913680027	WITHOUT_CLASSIFICATION	4.0863199729939386E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9995505904374253	WITHOUT_CLASSIFICATION	4.4940956257465776E-4	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9991632542884425	WITHOUT_CLASSIFICATION	8.367457115575609E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9997620723288952	WITHOUT_CLASSIFICATION	2.3792767110467972E-4	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.999981962979665	WITHOUT_CLASSIFICATION	1.8037020334927488E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999347709271831	WITHOUT_CLASSIFICATION	6.522907281697089E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9991652331253827	WITHOUT_CLASSIFICATION	8.347668746173608E-4	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.999980136569474	WITHOUT_CLASSIFICATION	1.9863430525980483E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.999964814948666	WITHOUT_CLASSIFICATION	3.5185051334146883E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.999456514981729	WITHOUT_CLASSIFICATION	5.434850182709184E-4	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998675121183147	WITHOUT_CLASSIFICATION	1.3248788168537435E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9997381634516627	WITHOUT_CLASSIFICATION	2.618365483374065E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999332012866846	WITHOUT_CLASSIFICATION	6.679871331546666E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9993058421508324	WITHOUT_CLASSIFICATION	6.941578491675601E-4	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9995295555134853	WITHOUT_CLASSIFICATION	4.704444865147154E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999193034864555	WITHOUT_CLASSIFICATION	8.06965135444114E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9998868971045326	WITHOUT_CLASSIFICATION	1.1310289546742021E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999803114685595	WITHOUT_CLASSIFICATION	1.968853144054678E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999803114685595	WITHOUT_CLASSIFICATION	1.968853144054678E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999193034864555	WITHOUT_CLASSIFICATION	8.06965135444114E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999427596911915	WITHOUT_CLASSIFICATION	5.7240308808452355E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9994793840543852	WITHOUT_CLASSIFICATION	5.206159456147999E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9994793840543852	WITHOUT_CLASSIFICATION	5.206159456147999E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999704889725273	WITHOUT_CLASSIFICATION	2.951102747264541E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9995478168761085	WITHOUT_CLASSIFICATION	4.5218312389149487E-4	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9906325812922484	WITHOUT_CLASSIFICATION	0.009367418707751478	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9960385499115718	WITHOUT_CLASSIFICATION	0.0039614500884280895	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9998902716677127	WITHOUT_CLASSIFICATION	1.0972833228726208E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999853322980372	WITHOUT_CLASSIFICATION	1.4667701962749038E-5	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.999301795694977	WITHOUT_CLASSIFICATION	6.982043050231184E-4	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9993380122164501	WITHOUT_CLASSIFICATION	6.619877835497413E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9983263133620107	WITHOUT_CLASSIFICATION	0.0016736866379892768	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999410935123165	WITHOUT_CLASSIFICATION	5.890648768349602E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999959363971982	WITHOUT_CLASSIFICATION	4.0636028017252625E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999862965513066	WITHOUT_CLASSIFICATION	1.3703448693531205E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9998342539140291	WITHOUT_CLASSIFICATION	1.6574608597090532E-4	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999709391512505	WITHOUT_CLASSIFICATION	2.906084874951752E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.999832462456509	WITHOUT_CLASSIFICATION	1.675375434909202E-4	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999873504802644	WITHOUT_CLASSIFICATION	1.2649519735627717E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9885262478610298	WITHOUT_CLASSIFICATION	0.011473752138970183	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9921342998510286	WITHOUT_CLASSIFICATION	0.007865700148971316	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9996107835052822	WITHOUT_CLASSIFICATION	3.8921649471773234E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999512002189759	WITHOUT_CLASSIFICATION	4.8799781024136944E-5	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9968445206260707	WITHOUT_CLASSIFICATION	0.0031554793739293338	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9997909652597838	WITHOUT_CLASSIFICATION	2.0903474021612565E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999266920138467	WITHOUT_CLASSIFICATION	7.33079861533611E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999266920138467	WITHOUT_CLASSIFICATION	7.33079861533611E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.997546587867942	WITHOUT_CLASSIFICATION	0.002453412132057909	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9975336915126893	WITHOUT_CLASSIFICATION	0.002466308487310696	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9998964765863078	WITHOUT_CLASSIFICATION	1.0352341369222043E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998714970045536	WITHOUT_CLASSIFICATION	1.2850299544635256E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9904144649419879	WITHOUT_CLASSIFICATION	0.009585535058012021	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999773150006831	WITHOUT_CLASSIFICATION	2.2684999316891056E-5	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999529485114919	WITHOUT_CLASSIFICATION	4.705148850820651E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9998185959496033	WITHOUT_CLASSIFICATION	1.8140405039672583E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997583071505179	WITHOUT_CLASSIFICATION	2.4169284948196635E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999094507937457	WITHOUT_CLASSIFICATION	9.054920625427739E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999746884358686	WITHOUT_CLASSIFICATION	2.5311564131490564E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9995028148609698	WITHOUT_CLASSIFICATION	4.971851390301488E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9998288072545735	WITHOUT_CLASSIFICATION	1.7119274542649502E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998879860908934	WITHOUT_CLASSIFICATION	1.1201390910665505E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999359556233539	WITHOUT_CLASSIFICATION	6.404437664611886E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999823732382348	WITHOUT_CLASSIFICATION	1.7626761765159233E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9893514639259522	WITHOUT_CLASSIFICATION	0.010648536074047858	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999823732382348	WITHOUT_CLASSIFICATION	1.7626761765159233E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999829317238333	WITHOUT_CLASSIFICATION	1.706827616663666E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999892931566907	WITHOUT_CLASSIFICATION	1.0706843309227395E-5	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999923386026421	WITHOUT_CLASSIFICATION	7.66139735778793E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9998081313872182	WITHOUT_CLASSIFICATION	1.9186861278188162E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999462133534621	WITHOUT_CLASSIFICATION	5.378664653788677E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999510713767894	WITHOUT_CLASSIFICATION	4.892862321063577E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9997968506978506	WITHOUT_CLASSIFICATION	2.0314930214929415E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999910116659257	WITHOUT_CLASSIFICATION	8.98833407433086E-6	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9997001601898085	WITHOUT_CLASSIFICATION	2.998398101915288E-4	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999915757372055	WITHOUT_CLASSIFICATION	8.424262794492596E-6	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.999937144627963	WITHOUT_CLASSIFICATION	6.285537203688991E-5	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999706786673699	WITHOUT_CLASSIFICATION	2.932133263003862E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999986493676298	WITHOUT_CLASSIFICATION	1.350632370238937E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999797903042248	WITHOUT_CLASSIFICATION	2.0209695775207762E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999180945430665	WITHOUT_CLASSIFICATION	8.190545693354124E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9998102004195345	WITHOUT_CLASSIFICATION	1.897995804654099E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9998902103126214	WITHOUT_CLASSIFICATION	1.097896873786866E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999788990340545	WITHOUT_CLASSIFICATION	2.1100965945489046E-5	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999184521756769	WITHOUT_CLASSIFICATION	8.15478243230875E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9998442475571542	WITHOUT_CLASSIFICATION	1.5575244284579584E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9977188559598904	WITHOUT_CLASSIFICATION	0.002281144040109573	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999950652253773	WITHOUT_CLASSIFICATION	4.934774622706198E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9998472744392547	WITHOUT_CLASSIFICATION	1.5272556074527122E-4	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9997432539122084	WITHOUT_CLASSIFICATION	2.567460877916111E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9997824899079361	WITHOUT_CLASSIFICATION	2.1751009206389237E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999404308288166	WITHOUT_CLASSIFICATION	5.9569171183372685E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997583071505179	WITHOUT_CLASSIFICATION	2.4169284948196635E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999094507937457	WITHOUT_CLASSIFICATION	9.054920625427739E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999746884358686	WITHOUT_CLASSIFICATION	2.5311564131490564E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999718755234446	WITHOUT_CLASSIFICATION	2.812447655539272E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9996357920870795	WITHOUT_CLASSIFICATION	3.6420791292039707E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999327041402558	WITHOUT_CLASSIFICATION	6.72958597441849E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9998188188938404	WITHOUT_CLASSIFICATION	1.8118110615971637E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999369323798807	WITHOUT_CLASSIFICATION	6.306762011930276E-5	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9997361483058397	WITHOUT_CLASSIFICATION	2.6385169416028216E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9998223974401792	WITHOUT_CLASSIFICATION	1.7760255982080892E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999040178104839	WITHOUT_CLASSIFICATION	9.598218951609976E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9998661740226354	WITHOUT_CLASSIFICATION	1.3382597736457047E-4	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999007648957303	WITHOUT_CLASSIFICATION	9.923510426961977E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999689097218725	WITHOUT_CLASSIFICATION	3.109027812760457E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999689097218725	WITHOUT_CLASSIFICATION	3.109027812760457E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999980473870916	WITHOUT_CLASSIFICATION	1.9526129084032345E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998733115631869	WITHOUT_CLASSIFICATION	1.266884368130912E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999886507520171	WITHOUT_CLASSIFICATION	1.1349247982891789E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999321875116529	WITHOUT_CLASSIFICATION	6.781248834701954E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9998819078976855	WITHOUT_CLASSIFICATION	1.1809210231450956E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999297202015206	WITHOUT_CLASSIFICATION	7.027979847947217E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999191584328969	WITHOUT_CLASSIFICATION	8.084156710299422E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999806594686221	WITHOUT_CLASSIFICATION	1.9340531377894883E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999469455035793	WITHOUT_CLASSIFICATION	5.3054496420681353E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999978448585961	WITHOUT_CLASSIFICATION	2.1551414038262326E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999838259258614	WITHOUT_CLASSIFICATION	1.617407413851252E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999842174958183	WITHOUT_CLASSIFICATION	1.5782504181718892E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999808710761895	WITHOUT_CLASSIFICATION	1.9128923810567446E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9961047724705048	WITHOUT_CLASSIFICATION	0.00389522752949517	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9998037853876691	WITHOUT_CLASSIFICATION	1.962146123308921E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998707599969648	WITHOUT_CLASSIFICATION	1.292400030350555E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999720064542376	WITHOUT_CLASSIFICATION	2.799354576244639E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9998403475955244	WITHOUT_CLASSIFICATION	1.5965240447558183E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999306057199941	WITHOUT_CLASSIFICATION	6.939428000577266E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999720259742651	WITHOUT_CLASSIFICATION	2.797402573490066E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999418029608146	WITHOUT_CLASSIFICATION	5.819703918549266E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999671610424109	WITHOUT_CLASSIFICATION	3.283895758911712E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9993251609372227	WITHOUT_CLASSIFICATION	6.748390627772873E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998983393534766	WITHOUT_CLASSIFICATION	1.016606465233184E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999491869405271	WITHOUT_CLASSIFICATION	5.0813059472777705E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997009702132422	WITHOUT_CLASSIFICATION	2.9902978675782265E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998726329123292	WITHOUT_CLASSIFICATION	1.273670876708438E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999271954127152	WITHOUT_CLASSIFICATION	7.280458728478179E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999349569245006	WITHOUT_CLASSIFICATION	6.504307549939182E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998421320896518	WITHOUT_CLASSIFICATION	1.5786791034830912E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999536989547603	WITHOUT_CLASSIFICATION	4.6301045239653816E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.999022978890564	WITHOUT_CLASSIFICATION	9.77021109435969E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9996127231760862	WITHOUT_CLASSIFICATION	3.872768239138805E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998630871644077	WITHOUT_CLASSIFICATION	1.3691283559218384E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9998738837940392	WITHOUT_CLASSIFICATION	1.2611620596086022E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999340564610645	WITHOUT_CLASSIFICATION	6.594353893551654E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998091539619303	WITHOUT_CLASSIFICATION	1.908460380696208E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999512807431006	WITHOUT_CLASSIFICATION	4.871925689938906E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999869861266422	WITHOUT_CLASSIFICATION	1.3013873357829374E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9996731722909252	WITHOUT_CLASSIFICATION	3.268277090746865E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9947004173871706	WITHOUT_CLASSIFICATION	0.005299582612829369	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990602080005497	WITHOUT_CLASSIFICATION	9.397919994503708E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998786384701402	WITHOUT_CLASSIFICATION	1.2136152985970466E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9992356802050418	WITHOUT_CLASSIFICATION	7.643197949581416E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999057524914419	WITHOUT_CLASSIFICATION	9.4247508558053E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9945322053214966	WITHOUT_CLASSIFICATION	0.005467794678503424	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999980473870916	WITHOUT_CLASSIFICATION	1.9526129084032345E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998733115631869	WITHOUT_CLASSIFICATION	1.266884368130912E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999886507520171	WITHOUT_CLASSIFICATION	1.1349247982891789E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999321875116529	WITHOUT_CLASSIFICATION	6.781248834701954E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999191584328969	WITHOUT_CLASSIFICATION	8.084156710299422E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999806594686221	WITHOUT_CLASSIFICATION	1.9340531377894883E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9980690582647098	WITHOUT_CLASSIFICATION	0.0019309417352901268	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9998845277893523	WITHOUT_CLASSIFICATION	1.1547221064767016E-4	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999349434145905	WITHOUT_CLASSIFICATION	6.505658540935673E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999838259258614	WITHOUT_CLASSIFICATION	1.617407413851252E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999842174958183	WITHOUT_CLASSIFICATION	1.5782504181718892E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999808710761895	WITHOUT_CLASSIFICATION	1.9128923810567446E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9961047724705048	WITHOUT_CLASSIFICATION	0.00389522752949517	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998707599969648	WITHOUT_CLASSIFICATION	1.292400030350555E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9997608113596171	WITHOUT_CLASSIFICATION	2.391886403828353E-4	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9997608113596171	WITHOUT_CLASSIFICATION	2.391886403828353E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999922210367456	WITHOUT_CLASSIFICATION	7.778963254340797E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9998549454843952	WITHOUT_CLASSIFICATION	1.450545156047344E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999426931682243	WITHOUT_CLASSIFICATION	5.730683177562765E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999000475040337	WITHOUT_CLASSIFICATION	9.995249596629113E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997915203070623	WITHOUT_CLASSIFICATION	2.08479692937765E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9997914827599557	WITHOUT_CLASSIFICATION	2.085172400443369E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999162701399354	WITHOUT_CLASSIFICATION	8.372986006459815E-5	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999123846560699	WITHOUT_CLASSIFICATION	8.761534393016541E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999162701399354	WITHOUT_CLASSIFICATION	8.372986006459815E-5	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9999880706483676	WITHOUT_CLASSIFICATION	1.1929351632365026E-5	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999354909548591	WITHOUT_CLASSIFICATION	6.450904514085998E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999392841277244	WITHOUT_CLASSIFICATION	6.071587227551925E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999392841277244	WITHOUT_CLASSIFICATION	6.071587227551925E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9995119617440157	WITHOUT_CLASSIFICATION	4.880382559842087E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9990707487468055	WITHOUT_CLASSIFICATION	9.292512531944983E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9998453650993298	WITHOUT_CLASSIFICATION	1.5463490067026478E-4	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.999700362022264	WITHOUT_CLASSIFICATION	2.9963797773601515E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999660121715582	WITHOUT_CLASSIFICATION	3.398782844167777E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999196692834528	WITHOUT_CLASSIFICATION	8.033071654728563E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9967611370141987	WITHOUT_CLASSIFICATION	0.0032388629858013246	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999893892167054	WITHOUT_CLASSIFICATION	1.0610783294483112E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.999822810511658	WITHOUT_CLASSIFICATION	1.7718948834208561E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999531116909761	WITHOUT_CLASSIFICATION	4.6888309023852374E-5	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999777322267672	WITHOUT_CLASSIFICATION	2.226777323277276E-5	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999609734943872	WITHOUT_CLASSIFICATION	3.902650561290112E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.999979866243488	WITHOUT_CLASSIFICATION	2.013375651190888E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.999979866243488	WITHOUT_CLASSIFICATION	2.013375651190888E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999924676777863	WITHOUT_CLASSIFICATION	7.532322213752384E-6	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999723957442697	WITHOUT_CLASSIFICATION	2.7604255730343272E-5	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9940262521146693	WITHOUT_CLASSIFICATION	0.005973747885330598	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9828229032710367	WITHOUT_CLASSIFICATION	0.017177096728963337	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9994726950597527	WITHOUT_CLASSIFICATION	5.273049402473678E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999547337427946	WITHOUT_CLASSIFICATION	4.5266257205214324E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.999965378199382	WITHOUT_CLASSIFICATION	3.4621800617980454E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9998827954870018	WITHOUT_CLASSIFICATION	1.1720451299830196E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999473028419968	WITHOUT_CLASSIFICATION	5.269715800310398E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.999984264048421	WITHOUT_CLASSIFICATION	1.5735951579045224E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999977631042481	WITHOUT_CLASSIFICATION	2.236895751815169E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999375473751854	WITHOUT_CLASSIFICATION	6.245262481467015E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999743953688642	WITHOUT_CLASSIFICATION	2.560463113567093E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9650532989463962	WITHOUT_CLASSIFICATION	0.034946701053603695	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998714970045536	WITHOUT_CLASSIFICATION	1.2850299544635256E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9996390448503302	WITHOUT_CLASSIFICATION	3.609551496699027E-4	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999773936886419	WITHOUT_CLASSIFICATION	2.2606311358141228E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9998992787455012	WITHOUT_CLASSIFICATION	1.0072125449872032E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9993559000450398	WITHOUT_CLASSIFICATION	6.44099954960158E-4	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9996281282398789	WITHOUT_CLASSIFICATION	3.7187176012104214E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.999943161302504	WITHOUT_CLASSIFICATION	5.68386974960613E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9998483877820258	WITHOUT_CLASSIFICATION	1.516122179742023E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9998340267789695	WITHOUT_CLASSIFICATION	1.659732210304148E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999073463951567	WITHOUT_CLASSIFICATION	9.265360484337461E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9998642879741395	WITHOUT_CLASSIFICATION	1.3571202586057105E-4	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9998642879741395	WITHOUT_CLASSIFICATION	1.3571202586057105E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9944021254253007	WITHOUT_CLASSIFICATION	0.0055978745746993715	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9988668098128537	WITHOUT_CLASSIFICATION	0.0011331901871463289	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998951477157024	WITHOUT_CLASSIFICATION	1.0485228429754833E-4	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9935639187699383	WITHOUT_CLASSIFICATION	0.006436081230061737	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9995570845127774	WITHOUT_CLASSIFICATION	4.429154872227261E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999791977144317	WITHOUT_CLASSIFICATION	2.0802285568250726E-5	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9994710314745994	WITHOUT_CLASSIFICATION	5.289685254006132E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9998491764588525	WITHOUT_CLASSIFICATION	1.5082354114757785E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997395642990557	WITHOUT_CLASSIFICATION	2.6043570094423223E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999751320811553	WITHOUT_CLASSIFICATION	2.48679188446472E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9996596789128334	WITHOUT_CLASSIFICATION	3.4032108716670407E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999284302035993	WITHOUT_CLASSIFICATION	7.15697964007083E-5	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.997286621536681	WITHOUT_CLASSIFICATION	0.002713378463319077	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9993729613447482	WITHOUT_CLASSIFICATION	6.270386552518143E-4	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999701256079934	WITHOUT_CLASSIFICATION	2.9874392006729783E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999992456643985	WITHOUT_CLASSIFICATION	7.543356014989197E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9896797550009218	WITHOUT_CLASSIFICATION	0.010320244999078177	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.5837159695210817	WITHOUT_CLASSIFICATION	0.41628403047891827	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9990153896699732	WITHOUT_CLASSIFICATION	9.846103300267806E-4	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999823394020714	WITHOUT_CLASSIFICATION	1.7660597928632185E-5	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999236784847381	WITHOUT_CLASSIFICATION	7.632151526197193E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997009702132422	WITHOUT_CLASSIFICATION	2.9902978675782265E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998339087569418	WITHOUT_CLASSIFICATION	1.6609124305814598E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990602080005497	WITHOUT_CLASSIFICATION	9.397919994503708E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999000475040337	WITHOUT_CLASSIFICATION	9.995249596629113E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.99992790682726	WITHOUT_CLASSIFICATION	7.209317273994709E-5	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9987448008656018	WITHOUT_CLASSIFICATION	0.0012551991343981682	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999671610424109	WITHOUT_CLASSIFICATION	3.283895758911712E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9989336846322793	WITHOUT_CLASSIFICATION	0.0010663153677207134	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9995801279572603	WITHOUT_CLASSIFICATION	4.1987204273983414E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998422906629871	WITHOUT_CLASSIFICATION	1.5770933701287777E-4	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999544138598063	WITHOUT_CLASSIFICATION	4.558614019362511E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9990602080005497	WITHOUT_CLASSIFICATION	9.397919994503708E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9979151060864475	WITHOUT_CLASSIFICATION	0.0020848939135524494	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9983193603168735	WITHOUT_CLASSIFICATION	0.0016806396831264528	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9998663578839703	WITHOUT_CLASSIFICATION	1.3364211602970183E-4	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999322088239961	WITHOUT_CLASSIFICATION	6.779117600380826E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999403995080243	WITHOUT_CLASSIFICATION	5.960049197571233E-5	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999552674566665	WITHOUT_CLASSIFICATION	4.473254333349516E-5	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999584282590714	WITHOUT_CLASSIFICATION	4.15717409285798E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998828375068414	WITHOUT_CLASSIFICATION	1.1716249315866205E-4	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9976937927763299	WITHOUT_CLASSIFICATION	0.002306207223670055	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999428804399274	WITHOUT_CLASSIFICATION	5.711956007248682E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999428804399274	WITHOUT_CLASSIFICATION	5.711956007248682E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999428804399274	WITHOUT_CLASSIFICATION	5.711956007248682E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9997302610130745	WITHOUT_CLASSIFICATION	2.6973898692556736E-4	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998337596342075	WITHOUT_CLASSIFICATION	1.6624036579236922E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9995963616122576	WITHOUT_CLASSIFICATION	4.036383877424793E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999862568060789	WITHOUT_CLASSIFICATION	1.3743193921170417E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999926489998537	WITHOUT_CLASSIFICATION	7.351000146230918E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999878078280966	WITHOUT_CLASSIFICATION	1.2192171903407082E-4	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9871489877385694	WITHOUT_CLASSIFICATION	0.012851012261430554	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.999703724180022	WITHOUT_CLASSIFICATION	2.962758199780186E-4	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999735131633954	WITHOUT_CLASSIFICATION	2.6486836604527323E-5	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999998826688246	WITHOUT_CLASSIFICATION	1.1733117549588236E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999577460992528	WITHOUT_CLASSIFICATION	4.225390074727182E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9994692987800501	WITHOUT_CLASSIFICATION	5.307012199499125E-4	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9998911081081827	WITHOUT_CLASSIFICATION	1.0889189181730758E-4	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9997549208651311	WITHOUT_CLASSIFICATION	2.450791348689789E-4	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.999503589241874	WITHOUT_CLASSIFICATION	4.964107581259571E-4	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9998775016233614	WITHOUT_CLASSIFICATION	1.224983766385038E-4	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9992558947286598	WITHOUT_CLASSIFICATION	7.441052713401949E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999843152574822	WITHOUT_CLASSIFICATION	1.56847425178001E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9995320214544822	WITHOUT_CLASSIFICATION	4.6797854551779703E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9983491883211062	WITHOUT_CLASSIFICATION	0.0016508116788938084	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999512623491279	WITHOUT_CLASSIFICATION	4.873765087213439E-5	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999243858689086	WITHOUT_CLASSIFICATION	7.561413109139106E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999410675224962	WITHOUT_CLASSIFICATION	5.8932477503758916E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999410675224962	WITHOUT_CLASSIFICATION	5.8932477503758916E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999882468573731	WITHOUT_CLASSIFICATION	1.1753142627040641E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999298384421711	WITHOUT_CLASSIFICATION	7.016155782890748E-5	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9996242376440627	WITHOUT_CLASSIFICATION	3.757623559373545E-4	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999859459018159	WITHOUT_CLASSIFICATION	1.4054098183981087E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999917373529612	WITHOUT_CLASSIFICATION	8.262647038759606E-6	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999262161179381	WITHOUT_CLASSIFICATION	7.378388206196029E-5	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9991570335453713	WITHOUT_CLASSIFICATION	8.429664546286401E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999841062383146	WITHOUT_CLASSIFICATION	1.589376168539847E-5	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9990068800207809	WITHOUT_CLASSIFICATION	9.93119979219112E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9997682924543885	WITHOUT_CLASSIFICATION	2.3170754561165945E-4	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9976708565784278	WITHOUT_CLASSIFICATION	0.0023291434215723323	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998726872285008	WITHOUT_CLASSIFICATION	1.2731277149931732E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999329721443024	WITHOUT_CLASSIFICATION	6.702785569752643E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999862965513066	WITHOUT_CLASSIFICATION	1.3703448693531205E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999862965513066	WITHOUT_CLASSIFICATION	1.3703448693531205E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9994782885316791	WITHOUT_CLASSIFICATION	5.217114683208656E-4	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9967230003629056	WITHOUT_CLASSIFICATION	0.0032769996370943535	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9996050434643666	WITHOUT_CLASSIFICATION	3.9495653563334575E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999878328388357	WITHOUT_CLASSIFICATION	1.2167161164379333E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999878328388357	WITHOUT_CLASSIFICATION	1.2167161164379333E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999878328388357	WITHOUT_CLASSIFICATION	1.2167161164379333E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999241329367872	WITHOUT_CLASSIFICATION	7.58670632128541E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999786539719281	WITHOUT_CLASSIFICATION	2.1346028071883592E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9995028148609698	WITHOUT_CLASSIFICATION	4.971851390301488E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998144499476885	WITHOUT_CLASSIFICATION	1.8555005231145154E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999887682234166	WITHOUT_CLASSIFICATION	1.1231776583240598E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9994832543428981	WITHOUT_CLASSIFICATION	5.167456571019578E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999597702266501	WITHOUT_CLASSIFICATION	4.022977334997247E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999706300216619	WITHOUT_CLASSIFICATION	2.9369978338068052E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999706300216619	WITHOUT_CLASSIFICATION	2.9369978338068052E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999855266815303	WITHOUT_CLASSIFICATION	1.4473318469731904E-5	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.999983935005039	WITHOUT_CLASSIFICATION	1.606499496099065E-5	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9986522484578166	WITHOUT_CLASSIFICATION	0.0013477515421834205	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9981889167381152	WITHOUT_CLASSIFICATION	0.0018110832618848498	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999832811984806	WITHOUT_CLASSIFICATION	1.67188015193388E-5	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9994387095029711	WITHOUT_CLASSIFICATION	5.612904970288209E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999689097218725	WITHOUT_CLASSIFICATION	3.109027812760457E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9998819078976855	WITHOUT_CLASSIFICATION	1.1809210231450956E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999297202015206	WITHOUT_CLASSIFICATION	7.027979847947217E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999978448585961	WITHOUT_CLASSIFICATION	2.1551414038262326E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9998037853876691	WITHOUT_CLASSIFICATION	1.962146123308921E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999459240842344	WITHOUT_CLASSIFICATION	5.407591576556026E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999883890799722	WITHOUT_CLASSIFICATION	1.161092002777888E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9998841953944364	WITHOUT_CLASSIFICATION	1.1580460556361334E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997915203070623	WITHOUT_CLASSIFICATION	2.08479692937765E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999924676777863	WITHOUT_CLASSIFICATION	7.532322213752384E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.999873924658854	WITHOUT_CLASSIFICATION	1.2607534114591625E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.999729650945814	WITHOUT_CLASSIFICATION	2.703490541860716E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999992722828902	WITHOUT_CLASSIFICATION	7.277171098335645E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.999844851370513	WITHOUT_CLASSIFICATION	1.551486294870657E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9797006238642569	WITHOUT_CLASSIFICATION	0.020299376135743105	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999231433873094	WITHOUT_CLASSIFICATION	7.68566126906525E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999809294300026	WITHOUT_CLASSIFICATION	1.9070569997353132E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.999516943700474	WITHOUT_CLASSIFICATION	4.830562995260444E-4	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.999997806364236	WITHOUT_CLASSIFICATION	2.1936357641039565E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999228894487251	WITHOUT_CLASSIFICATION	7.711055127490367E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999228894487251	WITHOUT_CLASSIFICATION	7.711055127490367E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9997967029044174	WITHOUT_CLASSIFICATION	2.0329709558272694E-4	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9998924865441103	WITHOUT_CLASSIFICATION	1.075134558896374E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999710272799609	WITHOUT_CLASSIFICATION	2.8972720039121524E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9998181104256586	WITHOUT_CLASSIFICATION	1.8188957434143676E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9998181104256586	WITHOUT_CLASSIFICATION	1.8188957434143676E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999615218584861	WITHOUT_CLASSIFICATION	3.847814151385942E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9993957736747077	WITHOUT_CLASSIFICATION	6.042263252923936E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999906506103327	WITHOUT_CLASSIFICATION	9.349389667367748E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999957761200703	WITHOUT_CLASSIFICATION	4.223879929697289E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.997390572991034	WITHOUT_CLASSIFICATION	0.002609427008966082	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999550907392023	WITHOUT_CLASSIFICATION	4.490926079764583E-5	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999423851380479	WITHOUT_CLASSIFICATION	5.76148619521548E-5	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.999637059402367	WITHOUT_CLASSIFICATION	3.629405976329031E-4	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9969826773911141	WITHOUT_CLASSIFICATION	0.0030173226088859367	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999998694454516	WITHOUT_CLASSIFICATION	1.305545484540544E-7	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999908024519222	WITHOUT_CLASSIFICATION	9.197548077787809E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999541259146153	WITHOUT_CLASSIFICATION	4.587408538460992E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999996414906678	WITHOUT_CLASSIFICATION	3.585093322510292E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9998569371357517	WITHOUT_CLASSIFICATION	1.4306286424821713E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.999948750612267	WITHOUT_CLASSIFICATION	5.1249387733072615E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999712141864835	WITHOUT_CLASSIFICATION	2.8785813516523988E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9996272237025927	WITHOUT_CLASSIFICATION	3.727762974073378E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999676769161309	WITHOUT_CLASSIFICATION	3.232308386902824E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9991973150166726	WITHOUT_CLASSIFICATION	8.026849833273591E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999205278373845	WITHOUT_CLASSIFICATION	7.947216261548477E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999765340859663	WITHOUT_CLASSIFICATION	2.3465914033616847E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9992025944807775	WITHOUT_CLASSIFICATION	7.974055192224676E-4	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999209323208156	WITHOUT_CLASSIFICATION	7.906767918443766E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999329898037599	WITHOUT_CLASSIFICATION	6.701019624009496E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999329898037599	WITHOUT_CLASSIFICATION	6.701019624009496E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999329898037599	WITHOUT_CLASSIFICATION	6.701019624009496E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999329898037599	WITHOUT_CLASSIFICATION	6.701019624009496E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999911433411189	WITHOUT_CLASSIFICATION	8.856658881086782E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999334492102264	WITHOUT_CLASSIFICATION	6.655078977355445E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999707719456771	WITHOUT_CLASSIFICATION	2.9228054322968065E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999707719456771	WITHOUT_CLASSIFICATION	2.9228054322968065E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999707719456771	WITHOUT_CLASSIFICATION	2.9228054322968065E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999021090323927	WITHOUT_CLASSIFICATION	9.789096760722676E-5	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9996955293978613	WITHOUT_CLASSIFICATION	3.044706021387335E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9994340062030014	WITHOUT_CLASSIFICATION	5.659937969984954E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9994340062030014	WITHOUT_CLASSIFICATION	5.659937969984954E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9993559000450398	WITHOUT_CLASSIFICATION	6.44099954960158E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9993559000450398	WITHOUT_CLASSIFICATION	6.44099954960158E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.999083238485592	WITHOUT_CLASSIFICATION	9.167615144079287E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.999083238485592	WITHOUT_CLASSIFICATION	9.167615144079287E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999718927617659	WITHOUT_CLASSIFICATION	2.8107238234058844E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9994897830502145	WITHOUT_CLASSIFICATION	5.102169497855047E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999258903670847	WITHOUT_CLASSIFICATION	7.410963291533893E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.999625800583892	WITHOUT_CLASSIFICATION	3.741994161080623E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997870535388217	WITHOUT_CLASSIFICATION	2.1294646117822394E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9996281282398789	WITHOUT_CLASSIFICATION	3.7187176012104214E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999938131008088	WITHOUT_CLASSIFICATION	6.186899191164764E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9994845505843211	WITHOUT_CLASSIFICATION	5.154494156789554E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999379474049027	WITHOUT_CLASSIFICATION	6.205259509730555E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.999620801755201	WITHOUT_CLASSIFICATION	3.79198244799049E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999465680213787	WITHOUT_CLASSIFICATION	5.343197862136575E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9996760783464127	WITHOUT_CLASSIFICATION	3.239216535872677E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9998475147076927	WITHOUT_CLASSIFICATION	1.52485292307387E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9998296817607063	WITHOUT_CLASSIFICATION	1.7031823929373755E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.999419037225797	WITHOUT_CLASSIFICATION	5.809627742031206E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999873378941955	WITHOUT_CLASSIFICATION	1.266210580461869E-5	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999601766443638	WITHOUT_CLASSIFICATION	3.982335563629683E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999643447450793	WITHOUT_CLASSIFICATION	3.56552549206372E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999643447450793	WITHOUT_CLASSIFICATION	3.56552549206372E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999796088646487	WITHOUT_CLASSIFICATION	2.0391135351298482E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9978562302792091	WITHOUT_CLASSIFICATION	0.0021437697207908973	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9978562302792091	WITHOUT_CLASSIFICATION	0.0021437697207908973	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999766981308505	WITHOUT_CLASSIFICATION	2.330186914946646E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999792128201905	WITHOUT_CLASSIFICATION	2.0787179809487652E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999600425379237	WITHOUT_CLASSIFICATION	3.995746207629177E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9997421451815859	WITHOUT_CLASSIFICATION	2.5785481841414447E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998493558452283	WITHOUT_CLASSIFICATION	1.5064415477167114E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9998493558452283	WITHOUT_CLASSIFICATION	1.5064415477167114E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9998105566204822	WITHOUT_CLASSIFICATION	1.8944337951782957E-4	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999638260720207	WITHOUT_CLASSIFICATION	3.61739279792826E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999538234311898	WITHOUT_CLASSIFICATION	4.617656881019971E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999993636075687	WITHOUT_CLASSIFICATION	6.363924313733149E-7	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999750677193717	WITHOUT_CLASSIFICATION	2.4932280628226567E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9998841038253512	WITHOUT_CLASSIFICATION	1.1589617464877788E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9998841038253512	WITHOUT_CLASSIFICATION	1.1589617464877788E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9998841038253512	WITHOUT_CLASSIFICATION	1.1589617464877788E-4	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999720787725266	WITHOUT_CLASSIFICATION	2.7921227473481457E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999720787725266	WITHOUT_CLASSIFICATION	2.7921227473481457E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9996590325348627	WITHOUT_CLASSIFICATION	3.409674651373149E-4	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999033258684561	WITHOUT_CLASSIFICATION	9.667413154389328E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999033258684561	WITHOUT_CLASSIFICATION	9.667413154389328E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.998593179252342	WITHOUT_CLASSIFICATION	0.0014068207476579289	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999626759223009	WITHOUT_CLASSIFICATION	3.7324077699115314E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9935639187699383	WITHOUT_CLASSIFICATION	0.006436081230061737	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992505725798709	WITHOUT_CLASSIFICATION	7.494274201289636E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9968878864987026	WITHOUT_CLASSIFICATION	0.003112113501297374	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9968878864987026	WITHOUT_CLASSIFICATION	0.003112113501297374	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.997092659406207	WITHOUT_CLASSIFICATION	0.002907340593793152	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995073507339451	WITHOUT_CLASSIFICATION	4.926492660548527E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999608338915594	WITHOUT_CLASSIFICATION	3.916610844059502E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9975756829636452	WITHOUT_CLASSIFICATION	0.0024243170363548007	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988653995574619	WITHOUT_CLASSIFICATION	0.0011346004425381968	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997107281371368	WITHOUT_CLASSIFICATION	2.8927186286315854E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9943718508393005	WITHOUT_CLASSIFICATION	0.005628149160699639	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980964838389527	WITHOUT_CLASSIFICATION	0.0019035161610473379	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995628633303226	WITHOUT_CLASSIFICATION	4.371366696772551E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99985923190205	WITHOUT_CLASSIFICATION	1.4076809795016446E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994416199693299	WITHOUT_CLASSIFICATION	5.583800306700839E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9998735485892694	WITHOUT_CLASSIFICATION	1.2645141073055978E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999321716378227	WITHOUT_CLASSIFICATION	6.782836217739227E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999635681719169	WITHOUT_CLASSIFICATION	3.643182808300499E-5	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999570045131847	WITHOUT_CLASSIFICATION	4.299548681530216E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.996964889373273	WITHOUT_CLASSIFICATION	0.0030351106267270393	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999153925804657	WITHOUT_CLASSIFICATION	8.460741953435193E-5	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999644583924384	WITHOUT_CLASSIFICATION	3.5541607561542584E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.999793204455408	WITHOUT_CLASSIFICATION	2.0679554459193206E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.999887198138382	WITHOUT_CLASSIFICATION	1.128018616180073E-4	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9991901818356551	WITHOUT_CLASSIFICATION	8.098181643449194E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9998457648453846	WITHOUT_CLASSIFICATION	1.542351546155407E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9994034048446638	WITHOUT_CLASSIFICATION	5.96595155336094E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9996357703647264	WITHOUT_CLASSIFICATION	3.6422963527361224E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.999948494039696	WITHOUT_CLASSIFICATION	5.150596030400933E-5	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9997616905702956	WITHOUT_CLASSIFICATION	2.3830942970438682E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9983240302525545	WITHOUT_CLASSIFICATION	0.001675969747445649	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9983240302525545	WITHOUT_CLASSIFICATION	0.001675969747445649	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999186160236677	WITHOUT_CLASSIFICATION	8.138397633231047E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990073652334714	WITHOUT_CLASSIFICATION	9.92634766528538E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999612180278541	WITHOUT_CLASSIFICATION	3.878197214586896E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9998849213875952	WITHOUT_CLASSIFICATION	1.150786124048211E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999337731214647	WITHOUT_CLASSIFICATION	6.622687853528123E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999476809011835	WITHOUT_CLASSIFICATION	5.231909881650648E-5	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.999926227301811	WITHOUT_CLASSIFICATION	7.377269818894965E-5	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999745557907534	WITHOUT_CLASSIFICATION	2.5444209246522553E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999733309650298	WITHOUT_CLASSIFICATION	2.6669034970172928E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9989816945987979	WITHOUT_CLASSIFICATION	0.001018305401202081	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9989816945987979	WITHOUT_CLASSIFICATION	0.001018305401202081	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998276128154342	WITHOUT_CLASSIFICATION	1.7238718456575005E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999095579414894	WITHOUT_CLASSIFICATION	9.044205851063376E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9991970483037355	WITHOUT_CLASSIFICATION	8.029516962645304E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999823394020714	WITHOUT_CLASSIFICATION	1.7660597928632185E-5	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999925194885816	WITHOUT_CLASSIFICATION	7.48051141835762E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.999632380039541	WITHOUT_CLASSIFICATION	3.6761996045893533E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999153925804657	WITHOUT_CLASSIFICATION	8.460741953435193E-5	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9997737665587215	WITHOUT_CLASSIFICATION	2.2623344127841374E-4	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.99998774346835	WITHOUT_CLASSIFICATION	1.2256531650024834E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999307701336717	WITHOUT_CLASSIFICATION	6.922986632838565E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999536901886381	WITHOUT_CLASSIFICATION	4.6309811361747726E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999669833680365	WITHOUT_CLASSIFICATION	3.301663196355632E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9998665782876578	WITHOUT_CLASSIFICATION	1.334217123421127E-4	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999289088849376	WITHOUT_CLASSIFICATION	7.109111506239524E-5	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9981621839445721	WITHOUT_CLASSIFICATION	0.0018378160554279475	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9990713473379227	WITHOUT_CLASSIFICATION	9.286526620772742E-4	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999586866772637	WITHOUT_CLASSIFICATION	4.13133227363046E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999617983088432	WITHOUT_CLASSIFICATION	3.820169115682273E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999586866772637	WITHOUT_CLASSIFICATION	4.13133227363046E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999617983088432	WITHOUT_CLASSIFICATION	3.820169115682273E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999663169445536	WITHOUT_CLASSIFICATION	3.368305544647523E-5	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.999771617575558	WITHOUT_CLASSIFICATION	2.283824244421232E-4	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9995905722681142	WITHOUT_CLASSIFICATION	4.0942773188580204E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9998532934320683	WITHOUT_CLASSIFICATION	1.4670656793164282E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999179884143005	WITHOUT_CLASSIFICATION	8.20115856995581E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999830638174615	WITHOUT_CLASSIFICATION	1.6936182538491726E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999887682234166	WITHOUT_CLASSIFICATION	1.1231776583240598E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9996996308527732	WITHOUT_CLASSIFICATION	3.0036914722672396E-4	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999368019543899	WITHOUT_CLASSIFICATION	6.319804561002625E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999363700791861	WITHOUT_CLASSIFICATION	6.362992081394865E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999497220685492	WITHOUT_CLASSIFICATION	5.027793145093178E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9993884357288466	WITHOUT_CLASSIFICATION	6.115642711533368E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9986639677272895	WITHOUT_CLASSIFICATION	0.001336032272710474	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999830638174615	WITHOUT_CLASSIFICATION	1.6936182538491726E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999202953760766	WITHOUT_CLASSIFICATION	7.970462392332191E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999290837473841	WITHOUT_CLASSIFICATION	7.091625261587831E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999825735215983	WITHOUT_CLASSIFICATION	1.7426478401732002E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999428086411775	WITHOUT_CLASSIFICATION	5.719135882255037E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998656723422069	WITHOUT_CLASSIFICATION	0.001343276577931024	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9998149939028721	WITHOUT_CLASSIFICATION	1.8500609712784048E-4	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998656723422069	WITHOUT_CLASSIFICATION	0.001343276577931024	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998656723422069	WITHOUT_CLASSIFICATION	0.001343276577931024	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998656723422069	WITHOUT_CLASSIFICATION	0.001343276577931024	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9986834855660122	WITHOUT_CLASSIFICATION	0.0013165144339878818	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.99990830250911	WITHOUT_CLASSIFICATION	9.169749089010817E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999563790369972	WITHOUT_CLASSIFICATION	4.3620963002788676E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998656723422069	WITHOUT_CLASSIFICATION	0.001343276577931024	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999904112322036	WITHOUT_CLASSIFICATION	9.588767796356486E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999626287573256	WITHOUT_CLASSIFICATION	3.737124267449536E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999613482738854	WITHOUT_CLASSIFICATION	3.865172611462498E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999235563380975	WITHOUT_CLASSIFICATION	7.644366190252517E-5	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999549417162924	WITHOUT_CLASSIFICATION	4.5058283707547026E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.99994707535053	WITHOUT_CLASSIFICATION	5.292464946996028E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9997904230608091	WITHOUT_CLASSIFICATION	2.095769391907547E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999779852510884	WITHOUT_CLASSIFICATION	2.2014748911547407E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9991004788123893	WITHOUT_CLASSIFICATION	8.995211876107576E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999626287573256	WITHOUT_CLASSIFICATION	3.737124267449536E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999613482738854	WITHOUT_CLASSIFICATION	3.865172611462498E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999235563380975	WITHOUT_CLASSIFICATION	7.644366190252517E-5	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.999790704650892	WITHOUT_CLASSIFICATION	2.0929534910808258E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9994519090911838	WITHOUT_CLASSIFICATION	5.480909088162761E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.999912274537749	WITHOUT_CLASSIFICATION	8.772546225104192E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.999868438064924	WITHOUT_CLASSIFICATION	1.31561935076116E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999505945085282	WITHOUT_CLASSIFICATION	4.940549147183052E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9976951342155252	WITHOUT_CLASSIFICATION	0.002304865784474695	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9996181591750035	WITHOUT_CLASSIFICATION	3.818408249965091E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999485159655038	WITHOUT_CLASSIFICATION	5.148403449630024E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9995788991935824	WITHOUT_CLASSIFICATION	4.2110080641759854E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9994019996404412	WITHOUT_CLASSIFICATION	5.980003595587431E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9998338761253787	WITHOUT_CLASSIFICATION	1.6612387462134907E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999677484766349	WITHOUT_CLASSIFICATION	3.2251523365151076E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9985838364466368	WITHOUT_CLASSIFICATION	0.0014161635533632001	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9998772105830342	WITHOUT_CLASSIFICATION	1.2278941696578074E-4	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.999966804864669	WITHOUT_CLASSIFICATION	3.3195135330954176E-5	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9990547202646332	WITHOUT_CLASSIFICATION	9.452797353668137E-4	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9993085675243469	WITHOUT_CLASSIFICATION	6.914324756531153E-4	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999464595047579	WITHOUT_CLASSIFICATION	5.354049524203689E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9998560465330911	WITHOUT_CLASSIFICATION	1.4395346690893092E-4	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9831570068038352	WITHOUT_CLASSIFICATION	0.016842993196164772	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9826292821425628	WITHOUT_CLASSIFICATION	0.01737071785743717	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9962816779382833	WITHOUT_CLASSIFICATION	0.003718322061716667	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9993188142773772	WITHOUT_CLASSIFICATION	6.81185722622704E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999610659019744	WITHOUT_CLASSIFICATION	3.893409802560101E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9994099306878423	WITHOUT_CLASSIFICATION	5.900693121577266E-4	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999754443780934	WITHOUT_CLASSIFICATION	2.455562190653748E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999599813940891	WITHOUT_CLASSIFICATION	4.001860591095847E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9998592013124369	WITHOUT_CLASSIFICATION	1.407986875631207E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9989039069902246	WITHOUT_CLASSIFICATION	0.0010960930097754507	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9998659760593949	WITHOUT_CLASSIFICATION	1.3402394060511752E-4	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999354331281496	WITHOUT_CLASSIFICATION	6.456687185038456E-5	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9994480208066275	WITHOUT_CLASSIFICATION	5.51979193372424E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9996534908576094	WITHOUT_CLASSIFICATION	3.4650914239063623E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.999902124949227	WITHOUT_CLASSIFICATION	9.787505077293059E-5	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9984182139170825	WITHOUT_CLASSIFICATION	0.0015817860829174795	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9998398464034668	WITHOUT_CLASSIFICATION	1.6015359653317148E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9964511298851695	WITHOUT_CLASSIFICATION	0.00354887011483053	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9949026608056584	WITHOUT_CLASSIFICATION	0.005097339194341667	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9993603737699123	WITHOUT_CLASSIFICATION	6.396262300878441E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9998457648453846	WITHOUT_CLASSIFICATION	1.542351546155407E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.99991069542315	WITHOUT_CLASSIFICATION	8.930457684995837E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999054322385258	WITHOUT_CLASSIFICATION	9.456776147409887E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9998901293215099	WITHOUT_CLASSIFICATION	1.0987067849008747E-4	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.999877263353091	WITHOUT_CLASSIFICATION	1.2273664690905136E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9963247433944054	WITHOUT_CLASSIFICATION	0.003675256605594648	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999624891107171	WITHOUT_CLASSIFICATION	3.751088928296761E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9963247433944054	WITHOUT_CLASSIFICATION	0.003675256605594648	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999082081989349	WITHOUT_CLASSIFICATION	9.179180106510391E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999066485583953	WITHOUT_CLASSIFICATION	9.335144160466742E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9996995274617773	WITHOUT_CLASSIFICATION	3.0047253822275324E-4	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999890535187806	WITHOUT_CLASSIFICATION	1.0946481219339726E-5	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9997627720106822	WITHOUT_CLASSIFICATION	2.3722798931775533E-4	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9998306542561013	WITHOUT_CLASSIFICATION	1.693457438988323E-4	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999586644435654	WITHOUT_CLASSIFICATION	4.133555643458163E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999226478173507	WITHOUT_CLASSIFICATION	7.735218264929331E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999471599300507	WITHOUT_CLASSIFICATION	5.2840069949209635E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999409768537493	WITHOUT_CLASSIFICATION	5.9023146250653E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.999969092049497	WITHOUT_CLASSIFICATION	3.090795050299051E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9970880544614464	WITHOUT_CLASSIFICATION	0.002911945538553566	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999221642807888	WITHOUT_CLASSIFICATION	7.783571921117148E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999810356247789	WITHOUT_CLASSIFICATION	1.8964375221040037E-5	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999776892266523	WITHOUT_CLASSIFICATION	2.2310773347689023E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.999978570046845	WITHOUT_CLASSIFICATION	2.1429953154960346E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999174419349134	WITHOUT_CLASSIFICATION	8.255806508666475E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999831258286049	WITHOUT_CLASSIFICATION	1.687417139514306E-5	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999951995257652	WITHOUT_CLASSIFICATION	4.800474234765686E-6	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9816220634616687	WITHOUT_CLASSIFICATION	0.018377936538331262	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999497815935384	WITHOUT_CLASSIFICATION	5.021840646153756E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999439166298363	WITHOUT_CLASSIFICATION	5.608337016379901E-5	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999454145491652	WITHOUT_CLASSIFICATION	5.4585450834874946E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9998837479393157	WITHOUT_CLASSIFICATION	1.1625206068433815E-4	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9993802921994402	WITHOUT_CLASSIFICATION	6.197078005597464E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999908330394494	WITHOUT_CLASSIFICATION	9.166960550727181E-6	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999134658200923	WITHOUT_CLASSIFICATION	8.653417990763315E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999660261352598	WITHOUT_CLASSIFICATION	3.3973864740142084E-5	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999627056635227	WITHOUT_CLASSIFICATION	3.729433647723287E-5	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999660758660506	WITHOUT_CLASSIFICATION	3.392413394939275E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9997455232377648	WITHOUT_CLASSIFICATION	2.544767622351233E-4	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999891081348025	WITHOUT_CLASSIFICATION	1.0891865197500195E-5	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999814770853305	WITHOUT_CLASSIFICATION	1.8522914669521913E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999657017667032	WITHOUT_CLASSIFICATION	3.4298233296801544E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999535940146791	WITHOUT_CLASSIFICATION	4.6405985321011983E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999489186614975	WITHOUT_CLASSIFICATION	5.1081338502606954E-5	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9998548750538578	WITHOUT_CLASSIFICATION	1.451249461421799E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9998901293215099	WITHOUT_CLASSIFICATION	1.0987067849008747E-4	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9995488250002084	WITHOUT_CLASSIFICATION	4.511749997915829E-4	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999782257511471	WITHOUT_CLASSIFICATION	2.177424885282764E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999470054882486	WITHOUT_CLASSIFICATION	5.2994511751478224E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9998783030980462	WITHOUT_CLASSIFICATION	1.2169690195383181E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999624891107171	WITHOUT_CLASSIFICATION	3.751088928296761E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.999969656076806	WITHOUT_CLASSIFICATION	3.0343923193969673E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999653123957405	WITHOUT_CLASSIFICATION	3.468760425954787E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999662348078019	WITHOUT_CLASSIFICATION	3.3765192198149146E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999604133631277	WITHOUT_CLASSIFICATION	3.958663687225467E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.99973082380878	WITHOUT_CLASSIFICATION	2.691761912199354E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9997146581045112	WITHOUT_CLASSIFICATION	2.8534189548889337E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9990139442400855	WITHOUT_CLASSIFICATION	9.86055759914464E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999751468878886	WITHOUT_CLASSIFICATION	2.4853112111448943E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999921733882526	WITHOUT_CLASSIFICATION	7.826611747343621E-6	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9943055907311003	WITHOUT_CLASSIFICATION	0.005694409268899705	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9994034048446638	WITHOUT_CLASSIFICATION	5.96595155336094E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9998760445364697	WITHOUT_CLASSIFICATION	1.2395546353017141E-4	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9993458912993035	WITHOUT_CLASSIFICATION	6.541087006965541E-4	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.999854877830056	WITHOUT_CLASSIFICATION	1.4512216994399626E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999680461392564	WITHOUT_CLASSIFICATION	3.1953860743630184E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9997754382438131	WITHOUT_CLASSIFICATION	2.2456175618685924E-4	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9998677204216949	WITHOUT_CLASSIFICATION	1.3227957830509298E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999855251115347	WITHOUT_CLASSIFICATION	1.4474888465281037E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999730749854052	WITHOUT_CLASSIFICATION	2.692501459478876E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9998253540074324	WITHOUT_CLASSIFICATION	1.746459925675152E-4	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999910724080169	WITHOUT_CLASSIFICATION	8.927591983064754E-6	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999730749854052	WITHOUT_CLASSIFICATION	2.692501459478876E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9995407802750316	WITHOUT_CLASSIFICATION	4.592197249683271E-4	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999832488995457	WITHOUT_CLASSIFICATION	1.675110045428103E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999121389445542	WITHOUT_CLASSIFICATION	8.786105544580355E-5	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999851369638871	WITHOUT_CLASSIFICATION	1.4863036112746496E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999452457906871	WITHOUT_CLASSIFICATION	5.475420931287526E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999935497666214	WITHOUT_CLASSIFICATION	6.45023337858994E-6	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999817439290776	WITHOUT_CLASSIFICATION	1.8256070922346825E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999735751153312	WITHOUT_CLASSIFICATION	2.6424884668716447E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999872760934362	WITHOUT_CLASSIFICATION	1.2723906563770412E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999513029270921	WITHOUT_CLASSIFICATION	4.869707290792509E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999869445957744	WITHOUT_CLASSIFICATION	1.3055404225585236E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999898646345425	WITHOUT_CLASSIFICATION	1.0135365457561903E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999982872940657	WITHOUT_CLASSIFICATION	1.712705934330118E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9997699695177901	WITHOUT_CLASSIFICATION	2.300304822099092E-4	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9996800479113851	WITHOUT_CLASSIFICATION	3.1995208861499086E-4	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9976271145323445	WITHOUT_CLASSIFICATION	0.0023728854676555453	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9998674160469622	WITHOUT_CLASSIFICATION	1.3258395303775898E-4	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.999803767423387	WITHOUT_CLASSIFICATION	1.9623257661310548E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999819358174039	WITHOUT_CLASSIFICATION	1.8064182596061594E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999810584462723	WITHOUT_CLASSIFICATION	1.8941553727729512E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999951801418678	WITHOUT_CLASSIFICATION	4.819858132237017E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.999883617875696	WITHOUT_CLASSIFICATION	1.1638212430396042E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9997945979818426	WITHOUT_CLASSIFICATION	2.0540201815744195E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9997945979818426	WITHOUT_CLASSIFICATION	2.0540201815744195E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9997909652597838	WITHOUT_CLASSIFICATION	2.0903474021612565E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999681761816926	WITHOUT_CLASSIFICATION	3.182381830736284E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999826870442773	WITHOUT_CLASSIFICATION	1.731295572267839E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9998167896827292	WITHOUT_CLASSIFICATION	1.8321031727087432E-4	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.999937839573333	WITHOUT_CLASSIFICATION	6.216042666696296E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9981899818021684	WITHOUT_CLASSIFICATION	0.001810018197831552	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9998209263294285	WITHOUT_CLASSIFICATION	1.7907367057140675E-4	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999773647114961	WITHOUT_CLASSIFICATION	2.2635288503891563E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999324908562037	WITHOUT_CLASSIFICATION	6.750914379622881E-5	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9977094894082763	WITHOUT_CLASSIFICATION	0.0022905105917236865	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999932449130035	WITHOUT_CLASSIFICATION	6.755086996633432E-6	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999754969424689	WITHOUT_CLASSIFICATION	2.4503057531160228E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999087249131308	WITHOUT_CLASSIFICATION	9.127508686925897E-5	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999666003447147	WITHOUT_CLASSIFICATION	3.339965528522746E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999154634375034	WITHOUT_CLASSIFICATION	8.453656249669238E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999645864388528	WITHOUT_CLASSIFICATION	3.541356114712749E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.999999738136715	WITHOUT_CLASSIFICATION	2.6186328492449664E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9991941476081527	WITHOUT_CLASSIFICATION	8.058523918473866E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9991941476081527	WITHOUT_CLASSIFICATION	8.058523918473866E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999823188156642	WITHOUT_CLASSIFICATION	1.7681184335826472E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999823188156642	WITHOUT_CLASSIFICATION	1.7681184335826472E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999706236624843	WITHOUT_CLASSIFICATION	2.9376337515690894E-5	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998459378827618	WITHOUT_CLASSIFICATION	1.540621172382656E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999970965699571	WITHOUT_CLASSIFICATION	2.9034300428981744E-5	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999596112053916	WITHOUT_CLASSIFICATION	4.038879460848589E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.999944894340301	WITHOUT_CLASSIFICATION	5.5105659699004336E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9995963616122576	WITHOUT_CLASSIFICATION	4.036383877424793E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999508918067637	WITHOUT_CLASSIFICATION	4.910819323628958E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999120592960423	WITHOUT_CLASSIFICATION	8.794070395770268E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999530055482968	WITHOUT_CLASSIFICATION	4.699445170323127E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999530055482968	WITHOUT_CLASSIFICATION	4.699445170323127E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999530055482968	WITHOUT_CLASSIFICATION	4.699445170323127E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9998971026997665	WITHOUT_CLASSIFICATION	1.0289730023344316E-4	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9998646808696486	WITHOUT_CLASSIFICATION	1.353191303513565E-4	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9998917303004659	WITHOUT_CLASSIFICATION	1.0826969953418117E-4	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999723790764955	WITHOUT_CLASSIFICATION	2.7620923504396626E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999723790764955	WITHOUT_CLASSIFICATION	2.7620923504396626E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9997653357155598	WITHOUT_CLASSIFICATION	2.3466428444027484E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.999960915814757	WITHOUT_CLASSIFICATION	3.908418524301256E-5	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9981250060095843	WITHOUT_CLASSIFICATION	0.0018749939904157732	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999048823081341	WITHOUT_CLASSIFICATION	9.511769186576831E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998405903183094	WITHOUT_CLASSIFICATION	1.5940968169050274E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9994278626421225	WITHOUT_CLASSIFICATION	5.72137357877567E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9989575411678444	WITHOUT_CLASSIFICATION	0.0010424588321556664	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999577460992528	WITHOUT_CLASSIFICATION	4.225390074727182E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9997747293961082	WITHOUT_CLASSIFICATION	2.2527060389192005E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999353140190399	WITHOUT_CLASSIFICATION	6.468598096013095E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.999934021518833	WITHOUT_CLASSIFICATION	6.597848116700709E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9998584587620989	WITHOUT_CLASSIFICATION	1.4154123790109042E-4	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.999815614647712	WITHOUT_CLASSIFICATION	1.8438535228800372E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9998866859842594	WITHOUT_CLASSIFICATION	1.1331401574061522E-4	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9998155850429172	WITHOUT_CLASSIFICATION	1.844149570827619E-4	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.999714535698039	WITHOUT_CLASSIFICATION	2.854643019609743E-4	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9992558947286598	WITHOUT_CLASSIFICATION	7.441052713401949E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9992558947286598	WITHOUT_CLASSIFICATION	7.441052713401949E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9992558947286598	WITHOUT_CLASSIFICATION	7.441052713401949E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9992558947286598	WITHOUT_CLASSIFICATION	7.441052713401949E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9997705553929742	WITHOUT_CLASSIFICATION	2.2944460702569385E-4	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9995320214544822	WITHOUT_CLASSIFICATION	4.6797854551779703E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999815493963505	WITHOUT_CLASSIFICATION	1.845060364943855E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9991301803423328	WITHOUT_CLASSIFICATION	8.698196576671805E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9995320214544822	WITHOUT_CLASSIFICATION	4.6797854551779703E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9998448503909775	WITHOUT_CLASSIFICATION	1.5514960902241693E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999012335715336	WITHOUT_CLASSIFICATION	9.8766428466348E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999015365735364	WITHOUT_CLASSIFICATION	9.846342646364873E-5	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9998974379316165	WITHOUT_CLASSIFICATION	1.0256206838362556E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999016859719786	WITHOUT_CLASSIFICATION	9.831402802139978E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.999972068871022	WITHOUT_CLASSIFICATION	2.793112897808587E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9998974379316165	WITHOUT_CLASSIFICATION	1.0256206838362556E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999811704625171	WITHOUT_CLASSIFICATION	1.8829537482838922E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999811704625171	WITHOUT_CLASSIFICATION	1.8829537482838922E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999410675224962	WITHOUT_CLASSIFICATION	5.8932477503758916E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999230663157929	WITHOUT_CLASSIFICATION	7.6933684207172E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999410675224962	WITHOUT_CLASSIFICATION	5.8932477503758916E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999216163730381	WITHOUT_CLASSIFICATION	7.838362696188457E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999137541570132	WITHOUT_CLASSIFICATION	8.624584298676675E-5	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999285529964131	WITHOUT_CLASSIFICATION	7.144700358685723E-5	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999421178133707	WITHOUT_CLASSIFICATION	5.788218662935768E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.999946238895048	WITHOUT_CLASSIFICATION	5.376110495207043E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999587409845142	WITHOUT_CLASSIFICATION	4.125901548570395E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999877480234057	WITHOUT_CLASSIFICATION	1.225197659423092E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999707127685526	WITHOUT_CLASSIFICATION	2.9287231447317006E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999382105560879	WITHOUT_CLASSIFICATION	6.178944391212528E-5	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9992263068623627	WITHOUT_CLASSIFICATION	7.736931376372241E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999555303252188	WITHOUT_CLASSIFICATION	4.446967478135547E-5	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999961045099469	WITHOUT_CLASSIFICATION	3.895490053129618E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.999746127849002	WITHOUT_CLASSIFICATION	2.5387215099806034E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9997377687581245	WITHOUT_CLASSIFICATION	2.6223124187558415E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999216163730381	WITHOUT_CLASSIFICATION	7.838362696188457E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999216163730381	WITHOUT_CLASSIFICATION	7.838362696188457E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999468662354584	WITHOUT_CLASSIFICATION	5.313376454167279E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9987379319416354	WITHOUT_CLASSIFICATION	0.0012620680583646578	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999841062383146	WITHOUT_CLASSIFICATION	1.589376168539847E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999336951696466	WITHOUT_CLASSIFICATION	6.630483035339746E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999336951696466	WITHOUT_CLASSIFICATION	6.630483035339746E-5	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999609211320564	WITHOUT_CLASSIFICATION	3.907886794363856E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999738558272824	WITHOUT_CLASSIFICATION	2.6144172717601345E-5	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9995289720648467	WITHOUT_CLASSIFICATION	4.7102793515331796E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9998406080023233	WITHOUT_CLASSIFICATION	1.5939199767676414E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9973087440831581	WITHOUT_CLASSIFICATION	0.002691255916841908	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9989291891260901	WITHOUT_CLASSIFICATION	0.0010708108739099023	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999191420648922	WITHOUT_CLASSIFICATION	8.085793510775761E-5	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9994957999801879	WITHOUT_CLASSIFICATION	5.04200019812065E-4	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9991123062012461	WITHOUT_CLASSIFICATION	8.876937987539905E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.999705677591799	WITHOUT_CLASSIFICATION	2.9432240820098085E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999145533774035	WITHOUT_CLASSIFICATION	8.544662259647474E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999732102232466	WITHOUT_CLASSIFICATION	2.6789776753370307E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9973087440831581	WITHOUT_CLASSIFICATION	0.002691255916841908	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999572574981771	WITHOUT_CLASSIFICATION	4.2742501822794126E-5	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999532006329827	WITHOUT_CLASSIFICATION	4.679936701720726E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9998688682972176	WITHOUT_CLASSIFICATION	1.3113170278247798E-4	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9985303890807131	WITHOUT_CLASSIFICATION	0.0014696109192868594	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9985303890807131	WITHOUT_CLASSIFICATION	0.0014696109192868594	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994830606113498	WITHOUT_CLASSIFICATION	5.169393886501837E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999612180278541	WITHOUT_CLASSIFICATION	3.878197214586896E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9998849213875952	WITHOUT_CLASSIFICATION	1.150786124048211E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999428458780478	WITHOUT_CLASSIFICATION	5.71541219521056E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999428458780478	WITHOUT_CLASSIFICATION	5.71541219521056E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9994782885316791	WITHOUT_CLASSIFICATION	5.217114683208656E-4	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999462411569571	WITHOUT_CLASSIFICATION	5.375884304297931E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999763989580619	WITHOUT_CLASSIFICATION	2.3601041938132742E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9995045238302881	WITHOUT_CLASSIFICATION	4.954761697119443E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999878328388357	WITHOUT_CLASSIFICATION	1.2167161164379333E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999639232966415	WITHOUT_CLASSIFICATION	3.607670335859111E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999823188156642	WITHOUT_CLASSIFICATION	1.7681184335826472E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999946240414487	WITHOUT_CLASSIFICATION	5.375958551327248E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999565329172312	WITHOUT_CLASSIFICATION	4.346708276867492E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999210418500907	WITHOUT_CLASSIFICATION	7.895814990939567E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999002763216498	WITHOUT_CLASSIFICATION	9.972367835009888E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9998051462206139	WITHOUT_CLASSIFICATION	1.948537793861081E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999501220001079	WITHOUT_CLASSIFICATION	4.987799989210995E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999727464362128	WITHOUT_CLASSIFICATION	2.7253563787228005E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998144499476885	WITHOUT_CLASSIFICATION	1.8555005231145154E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9998438161206589	WITHOUT_CLASSIFICATION	1.5618387934123086E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9998438161206589	WITHOUT_CLASSIFICATION	1.5618387934123086E-4	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9997953536786148	WITHOUT_CLASSIFICATION	2.0464632138507963E-4	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999706300216619	WITHOUT_CLASSIFICATION	2.9369978338068052E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999706300216619	WITHOUT_CLASSIFICATION	2.9369978338068052E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.99986127378713	WITHOUT_CLASSIFICATION	1.3872621287002143E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999586866772637	WITHOUT_CLASSIFICATION	4.13133227363046E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9997724846622511	WITHOUT_CLASSIFICATION	2.2751533774883074E-4	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999887682234166	WITHOUT_CLASSIFICATION	1.1231776583240598E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.999942541132393	WITHOUT_CLASSIFICATION	5.7458867607012456E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999887682234166	WITHOUT_CLASSIFICATION	1.1231776583240598E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999842362952208	WITHOUT_CLASSIFICATION	1.576370477909343E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999926485708427	WITHOUT_CLASSIFICATION	7.351429157413842E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9998179393697	WITHOUT_CLASSIFICATION	1.820606303001098E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999501220001079	WITHOUT_CLASSIFICATION	4.987799989210995E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9998933082634657	WITHOUT_CLASSIFICATION	1.0669173653435534E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999830638174615	WITHOUT_CLASSIFICATION	1.6936182538491726E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9992340295640029	WITHOUT_CLASSIFICATION	7.659704359971723E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9994101336353687	WITHOUT_CLASSIFICATION	5.898663646313961E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999771248875751	WITHOUT_CLASSIFICATION	2.2875112424976657E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999648596295574	WITHOUT_CLASSIFICATION	3.514037044254327E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9962027602419724	WITHOUT_CLASSIFICATION	0.0037972397580275474	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9962027602419724	WITHOUT_CLASSIFICATION	0.0037972397580275474	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999677224009927	WITHOUT_CLASSIFICATION	3.2277599007264054E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999145803537753	WITHOUT_CLASSIFICATION	8.541964622460215E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999842362952208	WITHOUT_CLASSIFICATION	1.576370477909343E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999842362952208	WITHOUT_CLASSIFICATION	1.576370477909343E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999595447280839	WITHOUT_CLASSIFICATION	4.0455271916137886E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9983848670752384	WITHOUT_CLASSIFICATION	0.0016151329247614912	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9991352650957943	WITHOUT_CLASSIFICATION	8.647349042058195E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9998753727946065	WITHOUT_CLASSIFICATION	1.2462720539361998E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999510400551039	WITHOUT_CLASSIFICATION	4.895994489603543E-5	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999526607611409	WITHOUT_CLASSIFICATION	4.7339238859212535E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9998406369185218	WITHOUT_CLASSIFICATION	1.5936308147819234E-4	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999766622846075	WITHOUT_CLASSIFICATION	2.3337715392524466E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999000923180978	WITHOUT_CLASSIFICATION	9.99076819021014E-5	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9998614639832302	WITHOUT_CLASSIFICATION	1.385360167698821E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999526607611409	WITHOUT_CLASSIFICATION	4.7339238859212535E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999625476131022	WITHOUT_CLASSIFICATION	3.7452386897766944E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999625476131022	WITHOUT_CLASSIFICATION	3.7452386897766944E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.999974770507676	WITHOUT_CLASSIFICATION	2.522949232388514E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.999766862048358	WITHOUT_CLASSIFICATION	2.3313795164208153E-4	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999649555060764	WITHOUT_CLASSIFICATION	3.504449392355155E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999649555060764	WITHOUT_CLASSIFICATION	3.504449392355155E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999731008739071	WITHOUT_CLASSIFICATION	2.6899126092958707E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999360992735956	WITHOUT_CLASSIFICATION	6.390072640439092E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999179884143005	WITHOUT_CLASSIFICATION	8.20115856995581E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999547337427946	WITHOUT_CLASSIFICATION	4.5266257205214324E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.999873924658854	WITHOUT_CLASSIFICATION	1.2607534114591625E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999323109129931	WITHOUT_CLASSIFICATION	6.7689087007021E-5	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.999729650945814	WITHOUT_CLASSIFICATION	2.703490541860716E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999202216061037	WITHOUT_CLASSIFICATION	7.977839389629605E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9998583939969323	WITHOUT_CLASSIFICATION	1.416060030677305E-4	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999981702631565	WITHOUT_CLASSIFICATION	1.8297368434638068E-6	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999388616589207	WITHOUT_CLASSIFICATION	6.113834107932822E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999360992735956	WITHOUT_CLASSIFICATION	6.390072640439092E-5	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9998129474194081	WITHOUT_CLASSIFICATION	1.8705258059189755E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999992722828902	WITHOUT_CLASSIFICATION	7.277171098335645E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9998644800733493	WITHOUT_CLASSIFICATION	1.35519926650802E-4	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9982879293596137	WITHOUT_CLASSIFICATION	0.001712070640386282	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.999913054955877	WITHOUT_CLASSIFICATION	8.694504412298889E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998363839531784	WITHOUT_CLASSIFICATION	1.6361604682158017E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9998290948579859	WITHOUT_CLASSIFICATION	1.7090514201416053E-4	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999511518331146	WITHOUT_CLASSIFICATION	4.884816688531864E-5	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999991468459598	WITHOUT_CLASSIFICATION	8.531540403231002E-7	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9998640754898369	WITHOUT_CLASSIFICATION	1.3592451016302887E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9993877867604588	WITHOUT_CLASSIFICATION	6.122132395411864E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9990927619873177	WITHOUT_CLASSIFICATION	9.072380126822537E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999760593849601	WITHOUT_CLASSIFICATION	2.3940615039881046E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9950787767475971	WITHOUT_CLASSIFICATION	0.004921223252402789	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9989753077940808	WITHOUT_CLASSIFICATION	0.0010246922059192005	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9995204321092283	WITHOUT_CLASSIFICATION	4.7956789077170756E-4	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9998738516452723	WITHOUT_CLASSIFICATION	1.2614835472772479E-4	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999374772491091	WITHOUT_CLASSIFICATION	6.252275089084105E-5	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999822136245744	WITHOUT_CLASSIFICATION	1.778637542562444E-5	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9998321791857631	WITHOUT_CLASSIFICATION	1.6782081423684974E-4	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9998301887070489	WITHOUT_CLASSIFICATION	1.6981129295104102E-4	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9991816120240318	WITHOUT_CLASSIFICATION	8.18387975968114E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999809294300026	WITHOUT_CLASSIFICATION	1.9070569997353132E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999771412222791	WITHOUT_CLASSIFICATION	2.285877772097646E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9998945587768012	WITHOUT_CLASSIFICATION	1.0544122319881049E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9997171581942423	WITHOUT_CLASSIFICATION	2.828418057577098E-4	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999360991631422	WITHOUT_CLASSIFICATION	6.390083685777745E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9998734838078246	WITHOUT_CLASSIFICATION	1.2651619217540503E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999439878822581	WITHOUT_CLASSIFICATION	5.601211774193596E-5	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999262498645716	WITHOUT_CLASSIFICATION	7.375013542845876E-5	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9997783636450505	WITHOUT_CLASSIFICATION	2.2163635494948117E-4	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.999987959095388	WITHOUT_CLASSIFICATION	1.2040904612051562E-5	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999377268986589	WITHOUT_CLASSIFICATION	6.227310134112411E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9998901452022911	WITHOUT_CLASSIFICATION	1.0985479770884934E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.99998083777415	WITHOUT_CLASSIFICATION	1.9162225850035946E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9996378302982436	WITHOUT_CLASSIFICATION	3.6216970175633655E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.999987587424093	WITHOUT_CLASSIFICATION	1.241257590709732E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999771412222791	WITHOUT_CLASSIFICATION	2.285877772097646E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999473028419968	WITHOUT_CLASSIFICATION	5.269715800310398E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999979083695846	WITHOUT_CLASSIFICATION	2.0916304154845214E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999979083695846	WITHOUT_CLASSIFICATION	2.0916304154845214E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999972337377535	WITHOUT_CLASSIFICATION	2.7662622465857853E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999972337377535	WITHOUT_CLASSIFICATION	2.7662622465857853E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9997753788037235	WITHOUT_CLASSIFICATION	2.2462119627643113E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999700087490948	WITHOUT_CLASSIFICATION	2.9991250905245526E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999901389748472	WITHOUT_CLASSIFICATION	9.861025152662884E-6	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9997781618191376	WITHOUT_CLASSIFICATION	2.2183818086230758E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.999990214983829	WITHOUT_CLASSIFICATION	9.78501617104576E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999315226727982	WITHOUT_CLASSIFICATION	6.847732720176235E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9998127162005552	WITHOUT_CLASSIFICATION	1.872837994448043E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999285791636635	WITHOUT_CLASSIFICATION	7.14208363364369E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999867481912275	WITHOUT_CLASSIFICATION	1.3251808772488813E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999803056847212	WITHOUT_CLASSIFICATION	1.9694315278899492E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999161771884134	WITHOUT_CLASSIFICATION	8.382281158657904E-5	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9992768475848585	WITHOUT_CLASSIFICATION	7.231524151415377E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999698215341765	WITHOUT_CLASSIFICATION	3.0178465823544453E-5	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999230716982852	WITHOUT_CLASSIFICATION	7.69283017147486E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9996341192493844	WITHOUT_CLASSIFICATION	3.658807506155544E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9992340295640029	WITHOUT_CLASSIFICATION	7.659704359971723E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9963104063069212	WITHOUT_CLASSIFICATION	0.0036895936930787902	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9995656880844326	WITHOUT_CLASSIFICATION	4.3431191556751324E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9995656880844326	WITHOUT_CLASSIFICATION	4.3431191556751324E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9991242283826236	WITHOUT_CLASSIFICATION	8.757716173763197E-4	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999656142926736	WITHOUT_CLASSIFICATION	3.438570732644298E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999710272799609	WITHOUT_CLASSIFICATION	2.8972720039121524E-5	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999883656148106	WITHOUT_CLASSIFICATION	1.1634385189371961E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998944391491714	WITHOUT_CLASSIFICATION	1.0556085082863167E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998944391491714	WITHOUT_CLASSIFICATION	1.0556085082863167E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9997916498621047	WITHOUT_CLASSIFICATION	2.0835013789528625E-4	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999729283866006	WITHOUT_CLASSIFICATION	2.707161339941962E-5	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999806039551917	WITHOUT_CLASSIFICATION	1.9396044808223743E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999314757104504	WITHOUT_CLASSIFICATION	6.852428954955157E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9988721555163061	WITHOUT_CLASSIFICATION	0.0011278444836938057	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999883656148106	WITHOUT_CLASSIFICATION	1.1634385189371961E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998944391491714	WITHOUT_CLASSIFICATION	1.0556085082863167E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998944391491714	WITHOUT_CLASSIFICATION	1.0556085082863167E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9997916498621047	WITHOUT_CLASSIFICATION	2.0835013789528625E-4	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999666111605884	WITHOUT_CLASSIFICATION	3.33888394116659E-5	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999666077975268	WITHOUT_CLASSIFICATION	3.339220247324894E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9996288069772555	WITHOUT_CLASSIFICATION	3.711930227445017E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999945702975592	WITHOUT_CLASSIFICATION	5.4297024407906576E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9963738518390574	WITHOUT_CLASSIFICATION	0.0036261481609425055	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999451483785456	WITHOUT_CLASSIFICATION	5.4851621454276705E-5	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999366777164771	WITHOUT_CLASSIFICATION	6.332228352283317E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999704764945804	WITHOUT_CLASSIFICATION	2.9523505419591187E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999704764945804	WITHOUT_CLASSIFICATION	2.9523505419591187E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.999739832668036	WITHOUT_CLASSIFICATION	2.6016733196393204E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9997525866421734	WITHOUT_CLASSIFICATION	2.4741335782666845E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999042581722815	WITHOUT_CLASSIFICATION	9.574182771846671E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9998089737357356	WITHOUT_CLASSIFICATION	1.9102626426449352E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9998332659166875	WITHOUT_CLASSIFICATION	1.6673408331243844E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9995034565855678	WITHOUT_CLASSIFICATION	4.96543414432219E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999599034266685	WITHOUT_CLASSIFICATION	4.0096573331423065E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999770271472592	WITHOUT_CLASSIFICATION	2.2972852740775883E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9973799302751214	WITHOUT_CLASSIFICATION	0.002620069724878652	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.999921053403155	WITHOUT_CLASSIFICATION	7.894659684498954E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999872223232692	WITHOUT_CLASSIFICATION	1.277767673077821E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9995796982041076	WITHOUT_CLASSIFICATION	4.2030179589228143E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999614183476375	WITHOUT_CLASSIFICATION	3.8581652362378034E-5	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.999608822896459	WITHOUT_CLASSIFICATION	3.911771035410709E-4	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9996560113541925	WITHOUT_CLASSIFICATION	3.439886458075064E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999736358594634	WITHOUT_CLASSIFICATION	2.6364140536571062E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9990272678126405	WITHOUT_CLASSIFICATION	9.727321873595737E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9997409468447789	WITHOUT_CLASSIFICATION	2.590531552212028E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999679886087925	WITHOUT_CLASSIFICATION	3.2011391207496196E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999821929649045	WITHOUT_CLASSIFICATION	1.7807035095498687E-4	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999864132689225	WITHOUT_CLASSIFICATION	1.3586731077534619E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9998642592753529	WITHOUT_CLASSIFICATION	1.3574072464698665E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9994423524405652	WITHOUT_CLASSIFICATION	5.576475594347192E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9998495850891204	WITHOUT_CLASSIFICATION	1.5041491087972047E-4	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9998914835875261	WITHOUT_CLASSIFICATION	1.0851641247389578E-4	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999576459310136	WITHOUT_CLASSIFICATION	4.2354068986522456E-5	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9484265307482431	WITHOUT_CLASSIFICATION	0.0515734692517569	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999203358320536	WITHOUT_CLASSIFICATION	7.966416794630067E-5	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999722425611904	WITHOUT_CLASSIFICATION	2.7757438809497075E-5	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9982312452199857	WITHOUT_CLASSIFICATION	0.0017687547800142535	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999949819088341	WITHOUT_CLASSIFICATION	5.018091166010326E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999600578057516	WITHOUT_CLASSIFICATION	3.9942194248425116E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999600578057516	WITHOUT_CLASSIFICATION	3.9942194248425116E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9998736231588126	WITHOUT_CLASSIFICATION	1.2637684118734725E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999849598476397	WITHOUT_CLASSIFICATION	1.5040152360286954E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999578704298879	WITHOUT_CLASSIFICATION	4.212957011196165E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995319082015806	WITHOUT_CLASSIFICATION	4.680917984194289E-4	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999519018475682	WITHOUT_CLASSIFICATION	4.809815243177245E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9998789968355939	WITHOUT_CLASSIFICATION	1.2100316440613975E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9990476910796228	WITHOUT_CLASSIFICATION	9.523089203770978E-4	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999756238555044	WITHOUT_CLASSIFICATION	2.437614449555557E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9891785362502703	WITHOUT_CLASSIFICATION	0.010821463749729771	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9997811583933681	WITHOUT_CLASSIFICATION	2.1884160663199578E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999575532999251	WITHOUT_CLASSIFICATION	4.244670007482092E-5	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999893135918598	WITHOUT_CLASSIFICATION	1.068640814009402E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9995624179029953	WITHOUT_CLASSIFICATION	4.3758209700463604E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999619768077104	WITHOUT_CLASSIFICATION	3.8023192289712336E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999998694454516	WITHOUT_CLASSIFICATION	1.305545484540544E-7	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9998962782688213	WITHOUT_CLASSIFICATION	1.037217311785798E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9998962782688213	WITHOUT_CLASSIFICATION	1.037217311785798E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9998962782688213	WITHOUT_CLASSIFICATION	1.037217311785798E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9998962782688213	WITHOUT_CLASSIFICATION	1.037217311785798E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999393081347533	WITHOUT_CLASSIFICATION	6.069186524667468E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9998689941925888	WITHOUT_CLASSIFICATION	1.310058074111608E-4	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9997715885705031	WITHOUT_CLASSIFICATION	2.284114294970215E-4	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9998669433544036	WITHOUT_CLASSIFICATION	1.3305664559642335E-4	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.999969861070207	WITHOUT_CLASSIFICATION	3.0138929792974203E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9990795487244366	WITHOUT_CLASSIFICATION	9.204512755632817E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999475881230362	WITHOUT_CLASSIFICATION	5.241187696378968E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9992863216739742	WITHOUT_CLASSIFICATION	7.136783260257803E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9997715885705031	WITHOUT_CLASSIFICATION	2.284114294970215E-4	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999918823963281	WITHOUT_CLASSIFICATION	8.117603671827142E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999642107231064	WITHOUT_CLASSIFICATION	3.57892768936586E-5	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9998158481533781	WITHOUT_CLASSIFICATION	1.8415184662189183E-4	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999507350427491	WITHOUT_CLASSIFICATION	4.926495725079969E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9990848818279142	WITHOUT_CLASSIFICATION	9.151181720858134E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9983049443783985	WITHOUT_CLASSIFICATION	0.0016950556216015075	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999748338303155	WITHOUT_CLASSIFICATION	2.5166169684507838E-5	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9998702496645542	WITHOUT_CLASSIFICATION	1.297503354459197E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999888105445042	WITHOUT_CLASSIFICATION	1.1189455495802811E-4	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9998162190287829	WITHOUT_CLASSIFICATION	1.8378097121701852E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999888105445042	WITHOUT_CLASSIFICATION	1.1189455495802811E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998514753776128	WITHOUT_CLASSIFICATION	1.4852462238728473E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9952110064234552	WITHOUT_CLASSIFICATION	0.00478899357654491	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999582725920553	WITHOUT_CLASSIFICATION	4.1727407944787504E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999411867921373	WITHOUT_CLASSIFICATION	5.88132078627835E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9998262961129405	WITHOUT_CLASSIFICATION	1.7370388705944918E-4	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999864759558925	WITHOUT_CLASSIFICATION	1.3524044107631575E-5	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9983308813121187	WITHOUT_CLASSIFICATION	0.0016691186878813652	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9987125398661231	WITHOUT_CLASSIFICATION	0.001287460133876982	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9985876082148235	WITHOUT_CLASSIFICATION	0.0014123917851764675	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9996904614811687	WITHOUT_CLASSIFICATION	3.0953851883127963E-4	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9981025587723665	WITHOUT_CLASSIFICATION	0.0018974412276334203	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9992741731195574	WITHOUT_CLASSIFICATION	7.258268804426084E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9998198393674562	WITHOUT_CLASSIFICATION	1.8016063254376109E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9917256642088711	WITHOUT_CLASSIFICATION	0.008274335791128944	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9998740006849686	WITHOUT_CLASSIFICATION	1.2599931503146E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9998569371357517	WITHOUT_CLASSIFICATION	1.4306286424821713E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9993071555514402	WITHOUT_CLASSIFICATION	6.928444485597968E-4	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.997286729382619	WITHOUT_CLASSIFICATION	0.0027132706173810194	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999422113821808	WITHOUT_CLASSIFICATION	5.7788617819261235E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.999866347574376	WITHOUT_CLASSIFICATION	1.3365242562399417E-4	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999357898954693	WITHOUT_CLASSIFICATION	6.421010453064955E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9997268407630482	WITHOUT_CLASSIFICATION	2.7315923695184576E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999651412794093	WITHOUT_CLASSIFICATION	3.485872059069471E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9983308813121187	WITHOUT_CLASSIFICATION	0.0016691186878813652	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9996870457020596	WITHOUT_CLASSIFICATION	3.129542979404154E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9996870457020596	WITHOUT_CLASSIFICATION	3.129542979404154E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999712141864835	WITHOUT_CLASSIFICATION	2.8785813516523988E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999845312821117	WITHOUT_CLASSIFICATION	1.5468717888288296E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999845312821117	WITHOUT_CLASSIFICATION	1.5468717888288296E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9994798236272364	WITHOUT_CLASSIFICATION	5.201763727634887E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9994798236272364	WITHOUT_CLASSIFICATION	5.201763727634887E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9996877926866882	WITHOUT_CLASSIFICATION	3.122073133118317E-4	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999658009287691	WITHOUT_CLASSIFICATION	3.419907123093599E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9996272237025927	WITHOUT_CLASSIFICATION	3.727762974073378E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997618770385382	WITHOUT_CLASSIFICATION	2.3812296146161926E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999630651279628	WITHOUT_CLASSIFICATION	3.693487203715155E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999463697873798	WITHOUT_CLASSIFICATION	5.363021262022957E-5	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999520576204853	WITHOUT_CLASSIFICATION	4.794237951459663E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9997941384144228	WITHOUT_CLASSIFICATION	2.0586158557726428E-4	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999443848390582	WITHOUT_CLASSIFICATION	5.561516094174192E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999676769161309	WITHOUT_CLASSIFICATION	3.232308386902824E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9998158449350423	WITHOUT_CLASSIFICATION	1.8415506495772374E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999137370027286	WITHOUT_CLASSIFICATION	8.62629972714153E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9997928456939422	WITHOUT_CLASSIFICATION	2.0715430605763033E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9997928456939422	WITHOUT_CLASSIFICATION	2.0715430605763033E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9991973150166726	WITHOUT_CLASSIFICATION	8.026849833273591E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9996384875902102	WITHOUT_CLASSIFICATION	3.615124097897197E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999970316607333	WITHOUT_CLASSIFICATION	2.968339266729926E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9998008318257451	WITHOUT_CLASSIFICATION	1.9916817425493042E-4	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999371529504584	WITHOUT_CLASSIFICATION	6.284704954156236E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999806929238398	WITHOUT_CLASSIFICATION	1.9307076160157696E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999908606242899	WITHOUT_CLASSIFICATION	9.139375710175788E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999574120555502	WITHOUT_CLASSIFICATION	4.25879444497852E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9998532544189388	WITHOUT_CLASSIFICATION	1.467455810611564E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999851566107596	WITHOUT_CLASSIFICATION	1.4843389240467837E-5	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.999990691178893	WITHOUT_CLASSIFICATION	9.308821107065433E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999179831764369	WITHOUT_CLASSIFICATION	8.201682356308991E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999543917248772	WITHOUT_CLASSIFICATION	4.560827512284499E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999538090775474	WITHOUT_CLASSIFICATION	4.619092245256964E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9997800476695832	WITHOUT_CLASSIFICATION	2.199523304167712E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999755969881293	WITHOUT_CLASSIFICATION	2.4403011870732214E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.999025203364198	WITHOUT_CLASSIFICATION	9.747966358018658E-4	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9996509853586384	WITHOUT_CLASSIFICATION	3.490146413616348E-4	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9997177257869386	WITHOUT_CLASSIFICATION	2.822742130613695E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.999902392770211	WITHOUT_CLASSIFICATION	9.760722978903329E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9997096969602713	WITHOUT_CLASSIFICATION	2.90303039728583E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999011296360723	WITHOUT_CLASSIFICATION	9.887036392781506E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.99997727495798	WITHOUT_CLASSIFICATION	2.2725042020079954E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9998640815755383	WITHOUT_CLASSIFICATION	1.3591842446177116E-4	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9998640815755383	WITHOUT_CLASSIFICATION	1.3591842446177116E-4	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9998758945318784	WITHOUT_CLASSIFICATION	1.2410546812152966E-4	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.999981528612463	WITHOUT_CLASSIFICATION	1.8471387537019436E-5	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999930579191809	WITHOUT_CLASSIFICATION	6.942080819034433E-6	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9995482839690283	WITHOUT_CLASSIFICATION	4.5171603097171983E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999456103180175	WITHOUT_CLASSIFICATION	5.438968198259842E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9995607534531407	WITHOUT_CLASSIFICATION	4.392465468593972E-4	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9998059871059447	WITHOUT_CLASSIFICATION	1.940128940553269E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999886942606051	WITHOUT_CLASSIFICATION	1.130573939496727E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9995770379071564	WITHOUT_CLASSIFICATION	4.2296209284364616E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999374742078422	WITHOUT_CLASSIFICATION	6.252579215782205E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.999958824907187	WITHOUT_CLASSIFICATION	4.1175092812967996E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999329898037599	WITHOUT_CLASSIFICATION	6.701019624009496E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9997559302066978	WITHOUT_CLASSIFICATION	2.440697933021456E-4	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999674009540412	WITHOUT_CLASSIFICATION	3.2599045958740466E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.999754152463941	WITHOUT_CLASSIFICATION	2.458475360590265E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9997249415103981	WITHOUT_CLASSIFICATION	2.750584896018818E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999911433411189	WITHOUT_CLASSIFICATION	8.856658881086782E-6	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999816484073782	WITHOUT_CLASSIFICATION	1.8351592621741564E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9998693606890662	WITHOUT_CLASSIFICATION	1.306393109338321E-4	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999880808386424	WITHOUT_CLASSIFICATION	1.1919161357665663E-5	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999881621221278	WITHOUT_CLASSIFICATION	1.1837877872204313E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9996995186381712	WITHOUT_CLASSIFICATION	3.0048136182878504E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9997249415103981	WITHOUT_CLASSIFICATION	2.750584896018818E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999816484073782	WITHOUT_CLASSIFICATION	1.8351592621741564E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9997992723753293	WITHOUT_CLASSIFICATION	2.0072762467079514E-4	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999334492102264	WITHOUT_CLASSIFICATION	6.655078977355445E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9997311625644476	WITHOUT_CLASSIFICATION	2.688374355524772E-4	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999412381193212	WITHOUT_CLASSIFICATION	5.876188067868055E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998175488234577	WITHOUT_CLASSIFICATION	0.0018245117654229377	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999567672722588	WITHOUT_CLASSIFICATION	4.323272774107064E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999519695053674	WITHOUT_CLASSIFICATION	4.803049463250555E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9998695456970315	WITHOUT_CLASSIFICATION	1.3045430296853902E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999707719456771	WITHOUT_CLASSIFICATION	2.9228054322968065E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999707719456771	WITHOUT_CLASSIFICATION	2.9228054322968065E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9996563828436225	WITHOUT_CLASSIFICATION	3.4361715637759837E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9994690987917477	WITHOUT_CLASSIFICATION	5.309012082523121E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9998835976607406	WITHOUT_CLASSIFICATION	1.1640233925930616E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999639232966415	WITHOUT_CLASSIFICATION	3.607670335859111E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999639232966415	WITHOUT_CLASSIFICATION	3.607670335859111E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999612180278541	WITHOUT_CLASSIFICATION	3.878197214586896E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9998849213875952	WITHOUT_CLASSIFICATION	1.150786124048211E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999210418500907	WITHOUT_CLASSIFICATION	7.895814990939567E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999002763216498	WITHOUT_CLASSIFICATION	9.972367835009888E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9998976208201155	WITHOUT_CLASSIFICATION	1.0237917988451549E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999032806441011	WITHOUT_CLASSIFICATION	9.671935589886528E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999737040268353	WITHOUT_CLASSIFICATION	2.62959731646812E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9996453598437255	WITHOUT_CLASSIFICATION	3.5464015627449663E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999891253137481	WITHOUT_CLASSIFICATION	1.0874686251968318E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999967971932632	WITHOUT_CLASSIFICATION	3.2028067368202577E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999670526180002	WITHOUT_CLASSIFICATION	3.2947381999812114E-5	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998424951470394	WITHOUT_CLASSIFICATION	1.5750485296063093E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999210418500907	WITHOUT_CLASSIFICATION	7.895814990939567E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999002763216498	WITHOUT_CLASSIFICATION	9.972367835009888E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999704764945804	WITHOUT_CLASSIFICATION	2.9523505419591187E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998714970045536	WITHOUT_CLASSIFICATION	1.2850299544635256E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999830000953173	WITHOUT_CLASSIFICATION	1.6999904682782346E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9994561232953594	WITHOUT_CLASSIFICATION	5.438767046406915E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9994561232953594	WITHOUT_CLASSIFICATION	5.438767046406915E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9996276190076446	WITHOUT_CLASSIFICATION	3.7238099235534396E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9996276190076446	WITHOUT_CLASSIFICATION	3.7238099235534396E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999959418349437	WITHOUT_CLASSIFICATION	4.058165056306663E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9997559409474884	WITHOUT_CLASSIFICATION	2.4405905251154996E-4	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.999948433658526	WITHOUT_CLASSIFICATION	5.1566341473941904E-5	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999542803697281	WITHOUT_CLASSIFICATION	4.5719630271751795E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999714993542502	WITHOUT_CLASSIFICATION	2.8500645749713503E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999305185597666	WITHOUT_CLASSIFICATION	6.948144023347068E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999740073347654	WITHOUT_CLASSIFICATION	2.5992665234597766E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.999083238485592	WITHOUT_CLASSIFICATION	9.167615144079287E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999718927617659	WITHOUT_CLASSIFICATION	2.8107238234058844E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999718927617659	WITHOUT_CLASSIFICATION	2.8107238234058844E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9988416921484895	WITHOUT_CLASSIFICATION	0.0011583078515104794	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9988416921484895	WITHOUT_CLASSIFICATION	0.0011583078515104794	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9988416921484895	WITHOUT_CLASSIFICATION	0.0011583078515104794	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999825652600786	WITHOUT_CLASSIFICATION	1.7434739921347404E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999825652600786	WITHOUT_CLASSIFICATION	1.7434739921347404E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999825652600786	WITHOUT_CLASSIFICATION	1.7434739921347404E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999983911412961	WITHOUT_CLASSIFICATION	1.6088587039135092E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999983911412961	WITHOUT_CLASSIFICATION	1.6088587039135092E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9994570189699821	WITHOUT_CLASSIFICATION	5.42981030017856E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9994570189699821	WITHOUT_CLASSIFICATION	5.42981030017856E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.999934965243299	WITHOUT_CLASSIFICATION	6.503475670100432E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.999934965243299	WITHOUT_CLASSIFICATION	6.503475670100432E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9996390448503302	WITHOUT_CLASSIFICATION	3.609551496699027E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9996390448503302	WITHOUT_CLASSIFICATION	3.609551496699027E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999778619946499	WITHOUT_CLASSIFICATION	2.213800535020745E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999778619946499	WITHOUT_CLASSIFICATION	2.213800535020745E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999933480731517	WITHOUT_CLASSIFICATION	6.651926848299936E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999933480731517	WITHOUT_CLASSIFICATION	6.651926848299936E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999983911412961	WITHOUT_CLASSIFICATION	1.6088587039135092E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9994570189699821	WITHOUT_CLASSIFICATION	5.42981030017856E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.999934965243299	WITHOUT_CLASSIFICATION	6.503475670100432E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999778619946499	WITHOUT_CLASSIFICATION	2.213800535020745E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999933480731517	WITHOUT_CLASSIFICATION	6.651926848299936E-5	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999588273313175	WITHOUT_CLASSIFICATION	4.117266868245959E-5	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.949262061377363	WITHOUT_CLASSIFICATION	0.050737938622636924	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999049561066169	WITHOUT_CLASSIFICATION	9.504389338315034E-5	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998206836174357	WITHOUT_CLASSIFICATION	1.7931638256434604E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999799631891131	WITHOUT_CLASSIFICATION	2.0036810886977607E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999513208508612	WITHOUT_CLASSIFICATION	4.867914913883264E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999313779044021	WITHOUT_CLASSIFICATION	6.86220955978479E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9983097081431392	WITHOUT_CLASSIFICATION	0.0016902918568608455	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999258903670847	WITHOUT_CLASSIFICATION	7.410963291533893E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.999696252567524	WITHOUT_CLASSIFICATION	3.037474324760043E-4	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9991376798374864	WITHOUT_CLASSIFICATION	8.623201625136116E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9998096959953559	WITHOUT_CLASSIFICATION	1.9030400464418743E-4	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9996281282398789	WITHOUT_CLASSIFICATION	3.7187176012104214E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9996332320883841	WITHOUT_CLASSIFICATION	3.6676791161596793E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9991202162186935	WITHOUT_CLASSIFICATION	8.797837813065146E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997870535388217	WITHOUT_CLASSIFICATION	2.1294646117822394E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9995462359222528	WITHOUT_CLASSIFICATION	4.5376407774717616E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.999625800583892	WITHOUT_CLASSIFICATION	3.741994161080623E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9996281282398789	WITHOUT_CLASSIFICATION	3.7187176012104214E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9995172244557247	WITHOUT_CLASSIFICATION	4.8277554427534144E-4	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9995172244557247	WITHOUT_CLASSIFICATION	4.8277554427534144E-4	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9991202162186935	WITHOUT_CLASSIFICATION	8.797837813065146E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9984704015831726	WITHOUT_CLASSIFICATION	0.001529598416827436	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9998492431093366	WITHOUT_CLASSIFICATION	1.5075689066332805E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9998386880013763	WITHOUT_CLASSIFICATION	1.6131199862359937E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9994066116714176	WITHOUT_CLASSIFICATION	5.93388328582466E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999543681876037	WITHOUT_CLASSIFICATION	4.563181239627885E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9980010591769474	WITHOUT_CLASSIFICATION	0.0019989408230526775	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999711090723887	WITHOUT_CLASSIFICATION	2.8890927611304202E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999711090723887	WITHOUT_CLASSIFICATION	2.8890927611304202E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9979737597582621	WITHOUT_CLASSIFICATION	0.0020262402417379225	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999524865435696	WITHOUT_CLASSIFICATION	4.7513456430490616E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9979747608353151	WITHOUT_CLASSIFICATION	0.0020252391646848706	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999399373712893	WITHOUT_CLASSIFICATION	6.00626287107444E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999809284055554	WITHOUT_CLASSIFICATION	1.907159444462555E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.999910473875216	WITHOUT_CLASSIFICATION	8.952612478399245E-5	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999612399245883	WITHOUT_CLASSIFICATION	3.876007541178048E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9994291249639309	WITHOUT_CLASSIFICATION	5.708750360691511E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999297694301698	WITHOUT_CLASSIFICATION	7.023056983021509E-5	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9998579709273974	WITHOUT_CLASSIFICATION	1.4202907260272484E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999489497329562	WITHOUT_CLASSIFICATION	5.1050267043805594E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999772542943578	WITHOUT_CLASSIFICATION	2.2745705642245634E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9996353749679763	WITHOUT_CLASSIFICATION	3.646250320236684E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9997496116367064	WITHOUT_CLASSIFICATION	2.5038836329362325E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9993172114941904	WITHOUT_CLASSIFICATION	6.827885058094985E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9996025412048078	WITHOUT_CLASSIFICATION	3.974587951921471E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.99996640780578	WITHOUT_CLASSIFICATION	3.3592194220000386E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9984846317928278	WITHOUT_CLASSIFICATION	0.0015153682071722522	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9984846317928278	WITHOUT_CLASSIFICATION	0.0015153682071722522	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9983734443233694	WITHOUT_CLASSIFICATION	0.0016265556766306383	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9945359096571647	WITHOUT_CLASSIFICATION	0.0054640903428353855	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999165861627638	WITHOUT_CLASSIFICATION	8.341383723622976E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999165861627638	WITHOUT_CLASSIFICATION	8.341383723622976E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999327459727765	WITHOUT_CLASSIFICATION	6.72540272235493E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999530679477213	WITHOUT_CLASSIFICATION	4.693205227875195E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999711090723887	WITHOUT_CLASSIFICATION	2.8890927611304202E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999711090723887	WITHOUT_CLASSIFICATION	2.8890927611304202E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999237266915627	WITHOUT_CLASSIFICATION	7.62733084372256E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999530865351257	WITHOUT_CLASSIFICATION	4.6913464874379154E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999704360256343	WITHOUT_CLASSIFICATION	2.9563974365803785E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9998556529337477	WITHOUT_CLASSIFICATION	1.4434706625231125E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9983097081431392	WITHOUT_CLASSIFICATION	0.0016902918568608455	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9993878424407447	WITHOUT_CLASSIFICATION	6.121575592553508E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9994793817201929	WITHOUT_CLASSIFICATION	5.206182798070919E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999140922401564	WITHOUT_CLASSIFICATION	8.590775984363952E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999593562610842	WITHOUT_CLASSIFICATION	4.0643738915800614E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9997370841832787	WITHOUT_CLASSIFICATION	2.629158167212466E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999855180915105	WITHOUT_CLASSIFICATION	1.448190848947867E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9998928978492098	WITHOUT_CLASSIFICATION	1.0710215079015687E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999254550573708	WITHOUT_CLASSIFICATION	7.454494262916332E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999898579270696	WITHOUT_CLASSIFICATION	1.0142072930372587E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999558944461255	WITHOUT_CLASSIFICATION	4.410555387451599E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9993622741889499	WITHOUT_CLASSIFICATION	6.377258110501499E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9763457774877589	WITHOUT_CLASSIFICATION	0.02365422251224104	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9989833810351721	WITHOUT_CLASSIFICATION	0.001016618964827946	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999692713101447	WITHOUT_CLASSIFICATION	3.072868985527703E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998247325415234	WITHOUT_CLASSIFICATION	1.7526745847657422E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999873378941955	WITHOUT_CLASSIFICATION	1.266210580461869E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999873378941955	WITHOUT_CLASSIFICATION	1.266210580461869E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9998340267789695	WITHOUT_CLASSIFICATION	1.659732210304148E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9993382726143645	WITHOUT_CLASSIFICATION	6.617273856356295E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9966560829086966	WITHOUT_CLASSIFICATION	0.0033439170913033447	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9965509089016021	WITHOUT_CLASSIFICATION	0.003449091098397914	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999799792531551	WITHOUT_CLASSIFICATION	2.0020746844890438E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9974110611179959	WITHOUT_CLASSIFICATION	0.0025889388820040946	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9996451034114745	WITHOUT_CLASSIFICATION	3.548965885255412E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999796088646487	WITHOUT_CLASSIFICATION	2.0391135351298482E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9992851829104956	WITHOUT_CLASSIFICATION	7.148170895043302E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9998128986660347	WITHOUT_CLASSIFICATION	1.8710133396538303E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9993978172564428	WITHOUT_CLASSIFICATION	6.021827435571214E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9998725948418044	WITHOUT_CLASSIFICATION	1.274051581956771E-4	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998066870792777	WITHOUT_CLASSIFICATION	1.9331292072226737E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9997930555549803	WITHOUT_CLASSIFICATION	2.06944445019582E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999769728344363	WITHOUT_CLASSIFICATION	2.302716556377358E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999403900368942	WITHOUT_CLASSIFICATION	5.9609963105818334E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9997866359935614	WITHOUT_CLASSIFICATION	2.1336400643865458E-4	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999396132264431	WITHOUT_CLASSIFICATION	6.038677355687981E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999396132264431	WITHOUT_CLASSIFICATION	6.038677355687981E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999766981308505	WITHOUT_CLASSIFICATION	2.330186914946646E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999792128201905	WITHOUT_CLASSIFICATION	2.0787179809487652E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999440309262716	WITHOUT_CLASSIFICATION	5.596907372848457E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999600425379237	WITHOUT_CLASSIFICATION	3.995746207629177E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.999751736317469	WITHOUT_CLASSIFICATION	2.4826368253092786E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999269699217743	WITHOUT_CLASSIFICATION	7.303007822562973E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9995176794863855	WITHOUT_CLASSIFICATION	4.8232051361448325E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.999979691400144	WITHOUT_CLASSIFICATION	2.030859985598241E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9992220308548584	WITHOUT_CLASSIFICATION	7.779691451415887E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998989808712294	WITHOUT_CLASSIFICATION	1.0101912877058912E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9996926938189172	WITHOUT_CLASSIFICATION	3.073061810827494E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999993636075687	WITHOUT_CLASSIFICATION	6.363924313733149E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999985721031553	WITHOUT_CLASSIFICATION	1.4278968447078147E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999750677193717	WITHOUT_CLASSIFICATION	2.4932280628226567E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999370732662904	WITHOUT_CLASSIFICATION	6.292673370959976E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999675085255451	WITHOUT_CLASSIFICATION	3.24914744548984E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999572722376641	WITHOUT_CLASSIFICATION	4.2727762335908836E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9996807346518347	WITHOUT_CLASSIFICATION	3.1926534816538373E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9997247333736404	WITHOUT_CLASSIFICATION	2.7526662635958836E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9997838189089877	WITHOUT_CLASSIFICATION	2.161810910121906E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999967004060486	WITHOUT_CLASSIFICATION	3.299593951401684E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999711054530891	WITHOUT_CLASSIFICATION	2.8894546910834337E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999924652547557	WITHOUT_CLASSIFICATION	7.534745244300247E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999520214272161	WITHOUT_CLASSIFICATION	4.797857278403486E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998951477157024	WITHOUT_CLASSIFICATION	1.0485228429754833E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9998841038253512	WITHOUT_CLASSIFICATION	1.1589617464877788E-4	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999953559001872	WITHOUT_CLASSIFICATION	4.64409981281301E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9997551858310515	WITHOUT_CLASSIFICATION	2.44814168948574E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9991648138662771	WITHOUT_CLASSIFICATION	8.351861337227895E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.999662839013352	WITHOUT_CLASSIFICATION	3.3716098664806525E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999073463951567	WITHOUT_CLASSIFICATION	9.265360484337461E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9997891307283897	WITHOUT_CLASSIFICATION	2.108692716104241E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999282961808305	WITHOUT_CLASSIFICATION	7.170381916957931E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999556845393373	WITHOUT_CLASSIFICATION	4.4315460662857806E-5	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.999942991088457	WITHOUT_CLASSIFICATION	5.700891154294101E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9998209634633738	WITHOUT_CLASSIFICATION	1.790365366262051E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999942991088457	WITHOUT_CLASSIFICATION	5.700891154294101E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9996713799745157	WITHOUT_CLASSIFICATION	3.286200254843042E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9997083088795864	WITHOUT_CLASSIFICATION	2.9169112041363735E-4	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999743442840882	WITHOUT_CLASSIFICATION	2.565571591185992E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9997527141539714	WITHOUT_CLASSIFICATION	2.4728584602862804E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9998393728718611	WITHOUT_CLASSIFICATION	1.6062712813887732E-4	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9996590325348627	WITHOUT_CLASSIFICATION	3.409674651373149E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999616331355106	WITHOUT_CLASSIFICATION	3.8366864489413786E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9998707886247078	WITHOUT_CLASSIFICATION	1.292113752920877E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9998048727885931	WITHOUT_CLASSIFICATION	1.951272114068687E-4	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999820083528252	WITHOUT_CLASSIFICATION	1.7991647174747367E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.996186782402817	WITHOUT_CLASSIFICATION	0.0038132175971830958	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.999831562226073	WITHOUT_CLASSIFICATION	1.6843777392691904E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9990658092149396	WITHOUT_CLASSIFICATION	9.341907850604572E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9994682018319105	WITHOUT_CLASSIFICATION	5.317981680894354E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9998310750336131	WITHOUT_CLASSIFICATION	1.6892496638688874E-4	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998900175045908	WITHOUT_CLASSIFICATION	1.0998249540918966E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9996535246930194	WITHOUT_CLASSIFICATION	3.464753069805461E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9988668098128537	WITHOUT_CLASSIFICATION	0.0011331901871463289	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999252832648349	WITHOUT_CLASSIFICATION	7.471673516506153E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.998593179252342	WITHOUT_CLASSIFICATION	0.0014068207476579289	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.999988394727599	WITHOUT_CLASSIFICATION	1.1605272400871738E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999817171956546	WITHOUT_CLASSIFICATION	1.8282804345405172E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999215297779074	WITHOUT_CLASSIFICATION	7.847022209258186E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9997707474805242	WITHOUT_CLASSIFICATION	2.292525194757337E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999643447450793	WITHOUT_CLASSIFICATION	3.56552549206372E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999664926354026	WITHOUT_CLASSIFICATION	3.350736459740154E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999647715919293	WITHOUT_CLASSIFICATION	3.522840807066367E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9991748310673845	WITHOUT_CLASSIFICATION	8.251689326155162E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9994368839832322	WITHOUT_CLASSIFICATION	5.631160167679256E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9988297332687768	WITHOUT_CLASSIFICATION	0.0011702667312231821	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9994015876062401	WITHOUT_CLASSIFICATION	5.984123937598058E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9998925870479187	WITHOUT_CLASSIFICATION	1.0741295208129891E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999882167580973	WITHOUT_CLASSIFICATION	1.1783241902660215E-5	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999441957228581	WITHOUT_CLASSIFICATION	5.5804277141904E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999914171773151	WITHOUT_CLASSIFICATION	8.582822684907771E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9957818736567298	WITHOUT_CLASSIFICATION	0.00421812634327019	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.99985923190205	WITHOUT_CLASSIFICATION	1.4076809795016446E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992505725798709	WITHOUT_CLASSIFICATION	7.494274201289636E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993795170534815	WITHOUT_CLASSIFICATION	6.204829465184833E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.995016300527357	WITHOUT_CLASSIFICATION	0.004983699472642944	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997969191458583	WITHOUT_CLASSIFICATION	2.0308085414173088E-4	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995544744976121	WITHOUT_CLASSIFICATION	4.455255023878721E-4	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999351146997815	WITHOUT_CLASSIFICATION	6.488530021849399E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998090201551563	WITHOUT_CLASSIFICATION	1.9097984484378624E-4	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995073507339451	WITHOUT_CLASSIFICATION	4.926492660548527E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999608338915594	WITHOUT_CLASSIFICATION	3.916610844059502E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997400025966044	WITHOUT_CLASSIFICATION	2.5999740339559024E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9942248042344702	WITHOUT_CLASSIFICATION	0.0057751957655297415	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998091868985779	WITHOUT_CLASSIFICATION	1.9081310142212292E-4	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998218794006909	WITHOUT_CLASSIFICATION	1.7812059930913127E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9939731416714014	WITHOUT_CLASSIFICATION	0.006026858328598655	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9946660708665299	WITHOUT_CLASSIFICATION	0.005333929133470015	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9946660708665299	WITHOUT_CLASSIFICATION	0.005333929133470015	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988653995574619	WITHOUT_CLASSIFICATION	0.0011346004425381968	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.996481938212723	WITHOUT_CLASSIFICATION	0.0035180617872769306	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.996169864808208	WITHOUT_CLASSIFICATION	0.003830135191791939	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9943718508393005	WITHOUT_CLASSIFICATION	0.005628149160699639	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987003032581273	WITHOUT_CLASSIFICATION	0.0012996967418727346	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9963163213013588	WITHOUT_CLASSIFICATION	0.003683678698641032	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9970549051363033	WITHOUT_CLASSIFICATION	0.0029450948636966286	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995830412566499	WITHOUT_CLASSIFICATION	4.1695874335010227E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9942248042344702	WITHOUT_CLASSIFICATION	0.0057751957655297415	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995347103211333	WITHOUT_CLASSIFICATION	4.652896788667998E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9943718508393005	WITHOUT_CLASSIFICATION	0.005628149160699639	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9975852164621672	WITHOUT_CLASSIFICATION	0.002414783537832667	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996941776280177	WITHOUT_CLASSIFICATION	3.0582237198226815E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.996481938212723	WITHOUT_CLASSIFICATION	0.0035180617872769306	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9966662200485974	WITHOUT_CLASSIFICATION	0.003333779951402731	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996339849173219	WITHOUT_CLASSIFICATION	3.6601508267818756E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993459571888496	WITHOUT_CLASSIFICATION	6.540428111504365E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995628633303226	WITHOUT_CLASSIFICATION	4.371366696772551E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99985923190205	WITHOUT_CLASSIFICATION	1.4076809795016446E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994416199693299	WITHOUT_CLASSIFICATION	5.583800306700839E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993459571888496	WITHOUT_CLASSIFICATION	6.540428111504365E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994416199693299	WITHOUT_CLASSIFICATION	5.583800306700839E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9946418454571753	WITHOUT_CLASSIFICATION	0.005358154542824775	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9961342938377794	WITHOUT_CLASSIFICATION	0.0038657061622206475	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9989254323321276	WITHOUT_CLASSIFICATION	0.0010745676678724258	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9967818802290349	WITHOUT_CLASSIFICATION	0.0032181197709651166	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9964061327426772	WITHOUT_CLASSIFICATION	0.0035938672573227384	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9955470028546598	WITHOUT_CLASSIFICATION	0.004452997145340203	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995721139794627	WITHOUT_CLASSIFICATION	4.278860205373963E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9957818736567298	WITHOUT_CLASSIFICATION	0.00421812634327019	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9942248042344702	WITHOUT_CLASSIFICATION	0.0057751957655297415	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9953412322203464	WITHOUT_CLASSIFICATION	0.004658767779653496	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992893840894765	WITHOUT_CLASSIFICATION	7.106159105233762E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995721139794627	WITHOUT_CLASSIFICATION	4.278860205373963E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995614848614027	WITHOUT_CLASSIFICATION	4.3851513859722685E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994830606113498	WITHOUT_CLASSIFICATION	5.169393886501837E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993279221119459	WITHOUT_CLASSIFICATION	6.720778880541147E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998093963085447	WITHOUT_CLASSIFICATION	1.9060369145538125E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9959714219891516	WITHOUT_CLASSIFICATION	0.004028578010848492	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995806789236663	WITHOUT_CLASSIFICATION	4.193210763336915E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9959714219891516	WITHOUT_CLASSIFICATION	0.004028578010848492	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998045209110402	WITHOUT_CLASSIFICATION	1.954790889599051E-4	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997961935469428	WITHOUT_CLASSIFICATION	2.038064530572024E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9938659517020291	WITHOUT_CLASSIFICATION	0.00613404829797089	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993159710155468	WITHOUT_CLASSIFICATION	6.840289844530948E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998218794006909	WITHOUT_CLASSIFICATION	1.7812059930913127E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999769728344363	WITHOUT_CLASSIFICATION	2.302716556377358E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998175488234577	WITHOUT_CLASSIFICATION	0.0018245117654229377	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994205205310693	WITHOUT_CLASSIFICATION	5.794794689306729E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9959714219891516	WITHOUT_CLASSIFICATION	0.004028578010848492	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995319082015806	WITHOUT_CLASSIFICATION	4.680917984194289E-4	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999510428377623	WITHOUT_CLASSIFICATION	4.895716223768866E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9941310543166213	WITHOUT_CLASSIFICATION	0.0058689456833787785	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999460941470196	WITHOUT_CLASSIFICATION	5.3905852980287876E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999747950859074	WITHOUT_CLASSIFICATION	2.5204914092589136E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.999934965243299	WITHOUT_CLASSIFICATION	6.503475670100432E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999441553240558	WITHOUT_CLASSIFICATION	5.58446759442025E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999403900368942	WITHOUT_CLASSIFICATION	5.9609963105818334E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9995964874974399	WITHOUT_CLASSIFICATION	4.035125025600252E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999101866463799	WITHOUT_CLASSIFICATION	8.981335362010817E-5	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999621848581197	WITHOUT_CLASSIFICATION	3.78151418802751E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9763457774877589	WITHOUT_CLASSIFICATION	0.02365422251224104	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9989833810351721	WITHOUT_CLASSIFICATION	0.001016618964827946	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999692713101447	WITHOUT_CLASSIFICATION	3.072868985527703E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998247325415234	WITHOUT_CLASSIFICATION	1.7526745847657422E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999873378941955	WITHOUT_CLASSIFICATION	1.266210580461869E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9993382726143645	WITHOUT_CLASSIFICATION	6.617273856356295E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9966560829086966	WITHOUT_CLASSIFICATION	0.0033439170913033447	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9965509089016021	WITHOUT_CLASSIFICATION	0.003449091098397914	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999799792531551	WITHOUT_CLASSIFICATION	2.0020746844890438E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9974110611179959	WITHOUT_CLASSIFICATION	0.0025889388820040946	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999643447450793	WITHOUT_CLASSIFICATION	3.56552549206372E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9998128986660347	WITHOUT_CLASSIFICATION	1.8710133396538303E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9993978172564428	WITHOUT_CLASSIFICATION	6.021827435571214E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9998725948418044	WITHOUT_CLASSIFICATION	1.274051581956771E-4	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998066870792777	WITHOUT_CLASSIFICATION	1.9331292072226737E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9997930555549803	WITHOUT_CLASSIFICATION	2.06944445019582E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9992851829104956	WITHOUT_CLASSIFICATION	7.148170895043302E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999769728344363	WITHOUT_CLASSIFICATION	2.302716556377358E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9997866359935614	WITHOUT_CLASSIFICATION	2.1336400643865458E-4	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999396132264431	WITHOUT_CLASSIFICATION	6.038677355687981E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999396132264431	WITHOUT_CLASSIFICATION	6.038677355687981E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997070471869905	WITHOUT_CLASSIFICATION	2.929528130094293E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999725138258689	WITHOUT_CLASSIFICATION	2.74861741311059E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999787765405231	WITHOUT_CLASSIFICATION	2.1223459476844945E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999440309262716	WITHOUT_CLASSIFICATION	5.596907372848457E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.999751736317469	WITHOUT_CLASSIFICATION	2.4826368253092786E-4	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9997421451815859	WITHOUT_CLASSIFICATION	2.5785481841414447E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999269699217743	WITHOUT_CLASSIFICATION	7.303007822562973E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9995176794863855	WITHOUT_CLASSIFICATION	4.8232051361448325E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.999979691400144	WITHOUT_CLASSIFICATION	2.030859985598241E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9998105566204822	WITHOUT_CLASSIFICATION	1.8944337951782957E-4	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9992220308548584	WITHOUT_CLASSIFICATION	7.779691451415887E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999538234311898	WITHOUT_CLASSIFICATION	4.617656881019971E-5	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999985721031553	WITHOUT_CLASSIFICATION	1.4278968447078147E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998989808712294	WITHOUT_CLASSIFICATION	1.0101912877058912E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9996926938189172	WITHOUT_CLASSIFICATION	3.073061810827494E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999370732662904	WITHOUT_CLASSIFICATION	6.292673370959976E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.999675085255451	WITHOUT_CLASSIFICATION	3.24914744548984E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999572722376641	WITHOUT_CLASSIFICATION	4.2727762335908836E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9944021254253007	WITHOUT_CLASSIFICATION	0.0055978745746993715	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9996807346518347	WITHOUT_CLASSIFICATION	3.1926534816538373E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9997247333736404	WITHOUT_CLASSIFICATION	2.7526662635958836E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9997838189089877	WITHOUT_CLASSIFICATION	2.161810910121906E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999967004060486	WITHOUT_CLASSIFICATION	3.299593951401684E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999711054530891	WITHOUT_CLASSIFICATION	2.8894546910834337E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999924652547557	WITHOUT_CLASSIFICATION	7.534745244300247E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999520214272161	WITHOUT_CLASSIFICATION	4.797857278403486E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998951477157024	WITHOUT_CLASSIFICATION	1.0485228429754833E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9998841038253512	WITHOUT_CLASSIFICATION	1.1589617464877788E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9998841038253512	WITHOUT_CLASSIFICATION	1.1589617464877788E-4	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999953559001872	WITHOUT_CLASSIFICATION	4.64409981281301E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9997551858310515	WITHOUT_CLASSIFICATION	2.44814168948574E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9991648138662771	WITHOUT_CLASSIFICATION	8.351861337227895E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.999662839013352	WITHOUT_CLASSIFICATION	3.3716098664806525E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9997891307283897	WITHOUT_CLASSIFICATION	2.108692716104241E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999282961808305	WITHOUT_CLASSIFICATION	7.170381916957931E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999556845393373	WITHOUT_CLASSIFICATION	4.4315460662857806E-5	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.999942991088457	WITHOUT_CLASSIFICATION	5.700891154294101E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999942991088457	WITHOUT_CLASSIFICATION	5.700891154294101E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998951477157024	WITHOUT_CLASSIFICATION	1.0485228429754833E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9996713799745157	WITHOUT_CLASSIFICATION	3.286200254843042E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9997083088795864	WITHOUT_CLASSIFICATION	2.9169112041363735E-4	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999743442840882	WITHOUT_CLASSIFICATION	2.565571591185992E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9997527141539714	WITHOUT_CLASSIFICATION	2.4728584602862804E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9998393728718611	WITHOUT_CLASSIFICATION	1.6062712813887732E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999616331355106	WITHOUT_CLASSIFICATION	3.8366864489413786E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9998707886247078	WITHOUT_CLASSIFICATION	1.292113752920877E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9998048727885931	WITHOUT_CLASSIFICATION	1.951272114068687E-4	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999820083528252	WITHOUT_CLASSIFICATION	1.7991647174747367E-5	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.996186782402817	WITHOUT_CLASSIFICATION	0.0038132175971830958	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.999831562226073	WITHOUT_CLASSIFICATION	1.6843777392691904E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9990658092149396	WITHOUT_CLASSIFICATION	9.341907850604572E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9994682018319105	WITHOUT_CLASSIFICATION	5.317981680894354E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9998310750336131	WITHOUT_CLASSIFICATION	1.6892496638688874E-4	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998900175045908	WITHOUT_CLASSIFICATION	1.0998249540918966E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9996535246930194	WITHOUT_CLASSIFICATION	3.464753069805461E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999252832648349	WITHOUT_CLASSIFICATION	7.471673516506153E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.999988394727599	WITHOUT_CLASSIFICATION	1.1605272400871738E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999817171956546	WITHOUT_CLASSIFICATION	1.8282804345405172E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999215297779074	WITHOUT_CLASSIFICATION	7.847022209258186E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9997707474805242	WITHOUT_CLASSIFICATION	2.292525194757337E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9995570845127774	WITHOUT_CLASSIFICATION	4.429154872227261E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999253945505692	WITHOUT_CLASSIFICATION	7.46054494308386E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9994792361322392	WITHOUT_CLASSIFICATION	5.207638677608773E-4	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999664926354026	WITHOUT_CLASSIFICATION	3.350736459740154E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998818239228927	WITHOUT_CLASSIFICATION	1.181760771072458E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999647715919293	WITHOUT_CLASSIFICATION	3.522840807066367E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9991748310673845	WITHOUT_CLASSIFICATION	8.251689326155162E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9994368839832322	WITHOUT_CLASSIFICATION	5.631160167679256E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999626759223009	WITHOUT_CLASSIFICATION	3.7324077699115314E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9988297332687768	WITHOUT_CLASSIFICATION	0.0011702667312231821	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9994015876062401	WITHOUT_CLASSIFICATION	5.984123937598058E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9998925870479187	WITHOUT_CLASSIFICATION	1.0741295208129891E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999882167580973	WITHOUT_CLASSIFICATION	1.1783241902660215E-5	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999441957228581	WITHOUT_CLASSIFICATION	5.5804277141904E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999914171773151	WITHOUT_CLASSIFICATION	8.582822684907771E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9957818736567298	WITHOUT_CLASSIFICATION	0.00421812634327019	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.99985923190205	WITHOUT_CLASSIFICATION	1.4076809795016446E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993795170534815	WITHOUT_CLASSIFICATION	6.204829465184833E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.995016300527357	WITHOUT_CLASSIFICATION	0.004983699472642944	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997969191458583	WITHOUT_CLASSIFICATION	2.0308085414173088E-4	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995544744976121	WITHOUT_CLASSIFICATION	4.455255023878721E-4	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999351146997815	WITHOUT_CLASSIFICATION	6.488530021849399E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998090201551563	WITHOUT_CLASSIFICATION	1.9097984484378624E-4	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.997092659406207	WITHOUT_CLASSIFICATION	0.002907340593793152	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997400025966044	WITHOUT_CLASSIFICATION	2.5999740339559024E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9942248042344702	WITHOUT_CLASSIFICATION	0.0057751957655297415	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998091868985779	WITHOUT_CLASSIFICATION	1.9081310142212292E-4	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998218794006909	WITHOUT_CLASSIFICATION	1.7812059930913127E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9939731416714014	WITHOUT_CLASSIFICATION	0.006026858328598655	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9975756829636452	WITHOUT_CLASSIFICATION	0.0024243170363548007	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9946660708665299	WITHOUT_CLASSIFICATION	0.005333929133470015	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.996481938212723	WITHOUT_CLASSIFICATION	0.0035180617872769306	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9970549051363033	WITHOUT_CLASSIFICATION	0.0029450948636966286	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9946660708665299	WITHOUT_CLASSIFICATION	0.005333929133470015	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.996169864808208	WITHOUT_CLASSIFICATION	0.003830135191791939	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9943718508393005	WITHOUT_CLASSIFICATION	0.005628149160699639	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987003032581273	WITHOUT_CLASSIFICATION	0.0012996967418727346	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9963163213013588	WITHOUT_CLASSIFICATION	0.003683678698641032	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995830412566499	WITHOUT_CLASSIFICATION	4.1695874335010227E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9942248042344702	WITHOUT_CLASSIFICATION	0.0057751957655297415	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995347103211333	WITHOUT_CLASSIFICATION	4.652896788667998E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997107281371368	WITHOUT_CLASSIFICATION	2.8927186286315854E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980964838389527	WITHOUT_CLASSIFICATION	0.0019035161610473379	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9975852164621672	WITHOUT_CLASSIFICATION	0.002414783537832667	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996941776280177	WITHOUT_CLASSIFICATION	3.0582237198226815E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9966662200485974	WITHOUT_CLASSIFICATION	0.003333779951402731	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999872701189313	WITHOUT_CLASSIFICATION	1.272988106869467E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.996481938212723	WITHOUT_CLASSIFICATION	0.0035180617872769306	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996339849173219	WITHOUT_CLASSIFICATION	3.6601508267818756E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993459571888496	WITHOUT_CLASSIFICATION	6.540428111504365E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99985923190205	WITHOUT_CLASSIFICATION	1.4076809795016446E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99985923190205	WITHOUT_CLASSIFICATION	1.4076809795016446E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994416199693299	WITHOUT_CLASSIFICATION	5.583800306700839E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9946418454571753	WITHOUT_CLASSIFICATION	0.005358154542824775	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993459571888496	WITHOUT_CLASSIFICATION	6.540428111504365E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9961342938377794	WITHOUT_CLASSIFICATION	0.0038657061622206475	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9989254323321276	WITHOUT_CLASSIFICATION	0.0010745676678724258	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9967818802290349	WITHOUT_CLASSIFICATION	0.0032181197709651166	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9964061327426772	WITHOUT_CLASSIFICATION	0.0035938672573227384	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9955470028546598	WITHOUT_CLASSIFICATION	0.004452997145340203	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9935571134555249	WITHOUT_CLASSIFICATION	0.006442886544475139	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995721139794627	WITHOUT_CLASSIFICATION	4.278860205373963E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9957818736567298	WITHOUT_CLASSIFICATION	0.00421812634327019	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9942248042344702	WITHOUT_CLASSIFICATION	0.0057751957655297415	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9953412322203464	WITHOUT_CLASSIFICATION	0.004658767779653496	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998057729326533	WITHOUT_CLASSIFICATION	1.942270673465966E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982401811729518	WITHOUT_CLASSIFICATION	0.0017598188270482246	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992893840894765	WITHOUT_CLASSIFICATION	7.106159105233762E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995721139794627	WITHOUT_CLASSIFICATION	4.278860205373963E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995614848614027	WITHOUT_CLASSIFICATION	4.3851513859722685E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993279221119459	WITHOUT_CLASSIFICATION	6.720778880541147E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998093963085447	WITHOUT_CLASSIFICATION	1.9060369145538125E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9959714219891516	WITHOUT_CLASSIFICATION	0.004028578010848492	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995806789236663	WITHOUT_CLASSIFICATION	4.193210763336915E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9959714219891516	WITHOUT_CLASSIFICATION	0.004028578010848492	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998045209110402	WITHOUT_CLASSIFICATION	1.954790889599051E-4	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997961935469428	WITHOUT_CLASSIFICATION	2.038064530572024E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9938659517020291	WITHOUT_CLASSIFICATION	0.00613404829797089	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993159710155468	WITHOUT_CLASSIFICATION	6.840289844530948E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998218794006909	WITHOUT_CLASSIFICATION	1.7812059930913127E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998312392784793	WITHOUT_CLASSIFICATION	1.687607215207442E-4	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997959325458913	WITHOUT_CLASSIFICATION	2.0406745410873667E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995319082015806	WITHOUT_CLASSIFICATION	4.680917984194289E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994205205310693	WITHOUT_CLASSIFICATION	5.794794689306729E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9959714219891516	WITHOUT_CLASSIFICATION	0.004028578010848492	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995319082015806	WITHOUT_CLASSIFICATION	4.680917984194289E-4	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999510428377623	WITHOUT_CLASSIFICATION	4.895716223768866E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9941310543166213	WITHOUT_CLASSIFICATION	0.0058689456833787785	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997070471869905	WITHOUT_CLASSIFICATION	2.929528130094293E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999460941470196	WITHOUT_CLASSIFICATION	5.3905852980287876E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999747950859074	WITHOUT_CLASSIFICATION	2.5204914092589136E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.999934965243299	WITHOUT_CLASSIFICATION	6.503475670100432E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999441553240558	WITHOUT_CLASSIFICATION	5.58446759442025E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999769728344363	WITHOUT_CLASSIFICATION	2.302716556377358E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9995964874974399	WITHOUT_CLASSIFICATION	4.035125025600252E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999101866463799	WITHOUT_CLASSIFICATION	8.981335362010817E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999725138258689	WITHOUT_CLASSIFICATION	2.74861741311059E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9998953040909963	WITHOUT_CLASSIFICATION	1.0469590900369371E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9998953040909963	WITHOUT_CLASSIFICATION	1.0469590900369371E-4	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9994773999233735	WITHOUT_CLASSIFICATION	5.226000766266011E-4	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999997171092555	WITHOUT_CLASSIFICATION	2.8289074459257023E-7	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.999961903354948	WITHOUT_CLASSIFICATION	3.809664505199425E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999484525958254	WITHOUT_CLASSIFICATION	5.15474041746041E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.999976601499448	WITHOUT_CLASSIFICATION	2.3398500552015376E-5	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999860599828467	WITHOUT_CLASSIFICATION	1.3940017153218269E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999991987828478	WITHOUT_CLASSIFICATION	8.012171522710536E-7	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9997149665293087	WITHOUT_CLASSIFICATION	2.8503347069129233E-4	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9998666021015824	WITHOUT_CLASSIFICATION	1.3339789841766407E-4	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999174194980232	WITHOUT_CLASSIFICATION	8.258050197686239E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9998803434658307	WITHOUT_CLASSIFICATION	1.1965653416942907E-4	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9993807649565456	WITHOUT_CLASSIFICATION	6.192350434544146E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.999978791200454	WITHOUT_CLASSIFICATION	2.1208799546105387E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999950758454028	WITHOUT_CLASSIFICATION	4.9241545972217665E-6	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9983827533288768	WITHOUT_CLASSIFICATION	0.0016172466711231004	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.999960982889647	WITHOUT_CLASSIFICATION	3.9017110353094375E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996736719899244	WITHOUT_CLASSIFICATION	3.263280100755354E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.999985467709974	WITHOUT_CLASSIFICATION	1.4532290026049267E-5	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999447405494062	WITHOUT_CLASSIFICATION	5.5259450593773015E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9996436910384231	WITHOUT_CLASSIFICATION	3.563089615768948E-4	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9998305137262591	WITHOUT_CLASSIFICATION	1.6948627374089686E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999903567449151	WITHOUT_CLASSIFICATION	9.643255084913842E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999867674500953	WITHOUT_CLASSIFICATION	1.3232549904697722E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9997886778765763	WITHOUT_CLASSIFICATION	2.113221234236835E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9965807115894708	WITHOUT_CLASSIFICATION	0.003419288410529162	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999124617478401	WITHOUT_CLASSIFICATION	8.75382521599915E-5	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998706726425993	WITHOUT_CLASSIFICATION	1.2932735740064718E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999611268665397	WITHOUT_CLASSIFICATION	3.887313346023829E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999611268665397	WITHOUT_CLASSIFICATION	3.887313346023829E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999767939003925	WITHOUT_CLASSIFICATION	2.3206099607574936E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999854839666674	WITHOUT_CLASSIFICATION	1.4516033332500618E-5	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.999841312468193	WITHOUT_CLASSIFICATION	1.5868753180699923E-4	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9997916548881127	WITHOUT_CLASSIFICATION	2.08345111887193E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999711298259305	WITHOUT_CLASSIFICATION	2.8870174069467658E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999830851670495	WITHOUT_CLASSIFICATION	1.6914832950528996E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999524288934997	WITHOUT_CLASSIFICATION	4.757110650038821E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9996984554283522	WITHOUT_CLASSIFICATION	3.015445716478092E-4	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9997368594330709	WITHOUT_CLASSIFICATION	2.631405669291087E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9998292018106356	WITHOUT_CLASSIFICATION	1.7079818936452344E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9998292018106356	WITHOUT_CLASSIFICATION	1.7079818936452344E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995167484540831	WITHOUT_CLASSIFICATION	4.832515459168162E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995167484540831	WITHOUT_CLASSIFICATION	4.832515459168162E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999356778585273	WITHOUT_CLASSIFICATION	6.432214147260637E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999899851332102	WITHOUT_CLASSIFICATION	1.0014866789667848E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.999908714287352	WITHOUT_CLASSIFICATION	9.128571264801144E-5	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999431276746731	WITHOUT_CLASSIFICATION	5.687232532692059E-5	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9997528670136809	WITHOUT_CLASSIFICATION	2.471329863190339E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9998968842645958	WITHOUT_CLASSIFICATION	1.0311573540420238E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9997403350909875	WITHOUT_CLASSIFICATION	2.596649090125905E-4	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999951426279126	WITHOUT_CLASSIFICATION	4.857372087370545E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.998229868108006	WITHOUT_CLASSIFICATION	0.001770131891994123	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9996564797300641	WITHOUT_CLASSIFICATION	3.435202699358742E-4	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999869525025659	WITHOUT_CLASSIFICATION	1.3047497434147422E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999817745934546	WITHOUT_CLASSIFICATION	1.822540654543193E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9998432069110255	WITHOUT_CLASSIFICATION	1.5679308897448944E-4	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999888566786214	WITHOUT_CLASSIFICATION	1.114332137855949E-5	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999672949692389	WITHOUT_CLASSIFICATION	3.270503076114207E-5	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999593880393506	WITHOUT_CLASSIFICATION	4.061196064936626E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999701838987489	WITHOUT_CLASSIFICATION	2.981610125100733E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9998710500766229	WITHOUT_CLASSIFICATION	1.2894992337701637E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9690297780784632	WITHOUT_CLASSIFICATION	0.030970221921536714	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999134437405093	WITHOUT_CLASSIFICATION	8.655625949063975E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999540032031561	WITHOUT_CLASSIFICATION	4.599679684386794E-5	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9997795417129863	WITHOUT_CLASSIFICATION	2.2045828701359758E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.999836797235901	WITHOUT_CLASSIFICATION	1.6320276409899137E-4	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9998861269991551	WITHOUT_CLASSIFICATION	1.1387300084487277E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999310727990844	WITHOUT_CLASSIFICATION	6.89272009155313E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9995804899264794	WITHOUT_CLASSIFICATION	4.195100735204854E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999559723194164	WITHOUT_CLASSIFICATION	4.4027680583680576E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998573968701059	WITHOUT_CLASSIFICATION	1.4260312989411832E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998573968701059	WITHOUT_CLASSIFICATION	1.4260312989411832E-4	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9996059018310418	WITHOUT_CLASSIFICATION	3.940981689582489E-4	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9998248903280831	WITHOUT_CLASSIFICATION	1.7510967191701067E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999499985349113	WITHOUT_CLASSIFICATION	5.000146508864521E-5	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.998877666299034	WITHOUT_CLASSIFICATION	0.0011223337009660184	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999778986452119	WITHOUT_CLASSIFICATION	2.2101354788112772E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999759416126476	WITHOUT_CLASSIFICATION	2.4058387352473653E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999320376622838	WITHOUT_CLASSIFICATION	6.79623377162434E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9991828963853921	WITHOUT_CLASSIFICATION	8.171036146077491E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9995804899264794	WITHOUT_CLASSIFICATION	4.195100735204854E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997395642990557	WITHOUT_CLASSIFICATION	2.6043570094423223E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999897931807583	WITHOUT_CLASSIFICATION	1.0206819241663434E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999466333070782	WITHOUT_CLASSIFICATION	5.3366692921702855E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9901735753335531	WITHOUT_CLASSIFICATION	0.009826424666446789	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.999875083068464	WITHOUT_CLASSIFICATION	1.249169315360205E-4	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.999878884950515	WITHOUT_CLASSIFICATION	1.2111504948501391E-4	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9998884388899574	WITHOUT_CLASSIFICATION	1.1156111004262674E-4	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999233193296923	WITHOUT_CLASSIFICATION	7.668067030773242E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999805512990869	WITHOUT_CLASSIFICATION	1.9448700913068722E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999290665055025	WITHOUT_CLASSIFICATION	7.093349449743504E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999674568742081	WITHOUT_CLASSIFICATION	3.254312579193355E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999737372703171	WITHOUT_CLASSIFICATION	2.6262729682822754E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999790176312273	WITHOUT_CLASSIFICATION	2.0982368772686775E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.999996131042073	WITHOUT_CLASSIFICATION	3.86895792700461E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9813242032480665	WITHOUT_CLASSIFICATION	0.018675796751933614	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9997316583786565	WITHOUT_CLASSIFICATION	2.683416213434417E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999066962664681	WITHOUT_CLASSIFICATION	9.330373353184178E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9987746573266403	WITHOUT_CLASSIFICATION	0.0012253426733597555	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9996959367425784	WITHOUT_CLASSIFICATION	3.040632574215393E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999049255686848	WITHOUT_CLASSIFICATION	9.507443131517726E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999735648842922	WITHOUT_CLASSIFICATION	2.643511570782599E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9998229721739984	WITHOUT_CLASSIFICATION	1.7702782600155495E-4	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9994498971948339	WITHOUT_CLASSIFICATION	5.50102805166191E-4	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999975549277083	WITHOUT_CLASSIFICATION	2.4450722917439745E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9998884388899574	WITHOUT_CLASSIFICATION	1.1156111004262674E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.999866282253604	WITHOUT_CLASSIFICATION	1.3371774639591943E-4	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9995270564970413	WITHOUT_CLASSIFICATION	4.7294350295872927E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999666149139778	WITHOUT_CLASSIFICATION	3.338508602221695E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9968509049477425	WITHOUT_CLASSIFICATION	0.003149095052257371	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9984507982812506	WITHOUT_CLASSIFICATION	0.001549201718749387	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9705549618599956	WITHOUT_CLASSIFICATION	0.029445038140004386	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9991749079221242	WITHOUT_CLASSIFICATION	8.250920778757486E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9995124010036346	WITHOUT_CLASSIFICATION	4.8759899636541135E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9996869347647933	WITHOUT_CLASSIFICATION	3.1306523520659916E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9997548902724693	WITHOUT_CLASSIFICATION	2.4510972753068134E-4	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999701251717076	WITHOUT_CLASSIFICATION	2.9874828292379484E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999701251717076	WITHOUT_CLASSIFICATION	2.9874828292379484E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9997652040945073	WITHOUT_CLASSIFICATION	2.3479590549281792E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9995167558151721	WITHOUT_CLASSIFICATION	4.832441848279111E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9994671597485274	WITHOUT_CLASSIFICATION	5.328402514726329E-4	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999696174210017	WITHOUT_CLASSIFICATION	3.0382578998329324E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9997615710295815	WITHOUT_CLASSIFICATION	2.384289704185237E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999753220786517	WITHOUT_CLASSIFICATION	2.4677921348278583E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.999921775485956	WITHOUT_CLASSIFICATION	7.822451404403087E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9998358612124802	WITHOUT_CLASSIFICATION	1.641387875197461E-4	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9994928007908298	WITHOUT_CLASSIFICATION	5.071992091701177E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999443442661804	WITHOUT_CLASSIFICATION	5.565573381957249E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999501146824721	WITHOUT_CLASSIFICATION	4.988531752799374E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995167484540831	WITHOUT_CLASSIFICATION	4.832515459168162E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9997403350909875	WITHOUT_CLASSIFICATION	2.596649090125905E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9997615710295815	WITHOUT_CLASSIFICATION	2.384289704185237E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999753220786517	WITHOUT_CLASSIFICATION	2.4677921348278583E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9998454323525189	WITHOUT_CLASSIFICATION	1.545676474810583E-4	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999574657591629	WITHOUT_CLASSIFICATION	4.253424083711821E-5	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999132597879528	WITHOUT_CLASSIFICATION	8.674021204729937E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9977481413311862	WITHOUT_CLASSIFICATION	0.0022518586688137546	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9987873786855854	WITHOUT_CLASSIFICATION	0.001212621314414568	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999023434187762	WITHOUT_CLASSIFICATION	9.765658122388775E-5	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9993844882234454	WITHOUT_CLASSIFICATION	6.155117765546067E-4	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9991930991993965	WITHOUT_CLASSIFICATION	8.06900800603648E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9992161391139854	WITHOUT_CLASSIFICATION	7.83860886014601E-4	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9980323004421267	WITHOUT_CLASSIFICATION	0.001967699557873261	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9996006391960139	WITHOUT_CLASSIFICATION	3.993608039860519E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999351447024913	WITHOUT_CLASSIFICATION	6.485529750872908E-5	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9998081178245445	WITHOUT_CLASSIFICATION	1.9188217545564284E-4	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9995899679589911	WITHOUT_CLASSIFICATION	4.1003204100885355E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999011554161455	WITHOUT_CLASSIFICATION	9.88445838544583E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999351447024913	WITHOUT_CLASSIFICATION	6.485529750872908E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999351447024913	WITHOUT_CLASSIFICATION	6.485529750872908E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999351447024913	WITHOUT_CLASSIFICATION	6.485529750872908E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999401125724114	WITHOUT_CLASSIFICATION	5.988742758847058E-5	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999627248768509	WITHOUT_CLASSIFICATION	3.727512314913633E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9998930164848542	WITHOUT_CLASSIFICATION	1.0698351514584254E-4	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999809797203467	WITHOUT_CLASSIFICATION	1.9020279653294504E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9998376681865255	WITHOUT_CLASSIFICATION	1.6233181347446678E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999673182520945	WITHOUT_CLASSIFICATION	3.268174790543091E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9992370767838216	WITHOUT_CLASSIFICATION	7.629232161785076E-4	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.999782551113449	WITHOUT_CLASSIFICATION	2.174488865510288E-4	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.999975078294168	WITHOUT_CLASSIFICATION	2.4921705832088226E-5	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9997956856678396	WITHOUT_CLASSIFICATION	2.0431433216040818E-4	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9993554505321038	WITHOUT_CLASSIFICATION	6.445494678960973E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9996937313033967	WITHOUT_CLASSIFICATION	3.062686966033764E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999321875116529	WITHOUT_CLASSIFICATION	6.781248834701954E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.999989631232022	WITHOUT_CLASSIFICATION	1.036876797800973E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999022557212212	WITHOUT_CLASSIFICATION	9.774427877895277E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.999690128734876	WITHOUT_CLASSIFICATION	3.0987126512402443E-4	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999383202124638	WITHOUT_CLASSIFICATION	6.16797875361638E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999638155534959	WITHOUT_CLASSIFICATION	3.618444650407419E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9995767097841125	WITHOUT_CLASSIFICATION	4.232902158875008E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997446424573553	WITHOUT_CLASSIFICATION	2.5535754264469974E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997446424573553	WITHOUT_CLASSIFICATION	2.5535754264469974E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9995333835169492	WITHOUT_CLASSIFICATION	4.6661648305074165E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9996572716049834	WITHOUT_CLASSIFICATION	3.4272839501660926E-4	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999840151971087	WITHOUT_CLASSIFICATION	1.5984802891365475E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9997483559217829	WITHOUT_CLASSIFICATION	2.5164407821708724E-4	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9996310470201136	WITHOUT_CLASSIFICATION	3.6895297988629485E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9997768269416536	WITHOUT_CLASSIFICATION	2.23173058346468E-4	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999799415870676	WITHOUT_CLASSIFICATION	2.0058412932390928E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.999965514057405	WITHOUT_CLASSIFICATION	3.448594259504459E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9998699999327529	WITHOUT_CLASSIFICATION	1.3000006724712263E-4	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9997992836758783	WITHOUT_CLASSIFICATION	2.0071632412164606E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999259085308893	WITHOUT_CLASSIFICATION	7.40914691107573E-5	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999414747151152	WITHOUT_CLASSIFICATION	5.8525284884846954E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.999950386533788	WITHOUT_CLASSIFICATION	4.96134662121673E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9998386206447238	WITHOUT_CLASSIFICATION	1.6137935527613361E-4	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9998921642384339	WITHOUT_CLASSIFICATION	1.0783576156624587E-4	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999372086208853	WITHOUT_CLASSIFICATION	6.279137911473619E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999377324831763	WITHOUT_CLASSIFICATION	6.226751682366765E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9997855293220003	WITHOUT_CLASSIFICATION	2.1447067799968124E-4	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9997515654436795	WITHOUT_CLASSIFICATION	2.484345563205471E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9997092394555608	WITHOUT_CLASSIFICATION	2.9076054443912214E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999763560478947	WITHOUT_CLASSIFICATION	2.364395210525977E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9998662471211095	WITHOUT_CLASSIFICATION	1.3375287889060396E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999346055637532	WITHOUT_CLASSIFICATION	6.539443624675349E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999346055637532	WITHOUT_CLASSIFICATION	6.539443624675349E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9991258242990226	WITHOUT_CLASSIFICATION	8.741757009773531E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9991258242990226	WITHOUT_CLASSIFICATION	8.741757009773531E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999284302035993	WITHOUT_CLASSIFICATION	7.15697964007083E-5	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9989379663423413	WITHOUT_CLASSIFICATION	0.0010620336576586409	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999703034062319	WITHOUT_CLASSIFICATION	2.969659376812176E-5	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9998983387955267	WITHOUT_CLASSIFICATION	1.016612044732859E-4	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999892841988332	WITHOUT_CLASSIFICATION	1.0715801166899663E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999540428305823	WITHOUT_CLASSIFICATION	4.5957169417736276E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9997875926849955	WITHOUT_CLASSIFICATION	2.1240731500438145E-4	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9994607144477762	WITHOUT_CLASSIFICATION	5.392855522237475E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9993281035494919	WITHOUT_CLASSIFICATION	6.718964505082161E-4	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999763794509297	WITHOUT_CLASSIFICATION	2.3620549070353157E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999474921159068	WITHOUT_CLASSIFICATION	5.250788409306531E-5	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9996676299624198	WITHOUT_CLASSIFICATION	3.323700375801468E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9981779451350448	WITHOUT_CLASSIFICATION	0.0018220548649552739	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999921196100848	WITHOUT_CLASSIFICATION	7.88038991512929E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999245323209164	WITHOUT_CLASSIFICATION	7.546767908367169E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999706198658941	WITHOUT_CLASSIFICATION	2.938013410580737E-5	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9998137765407801	WITHOUT_CLASSIFICATION	1.862234592199591E-4	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9996621505900312	WITHOUT_CLASSIFICATION	3.37849409968853E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999497696867655	WITHOUT_CLASSIFICATION	5.0230313234362586E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998500765801118	WITHOUT_CLASSIFICATION	1.4992341988810646E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999411739873306	WITHOUT_CLASSIFICATION	5.882601266934302E-5	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.999787219659188	WITHOUT_CLASSIFICATION	2.127803408119724E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999582490820912	WITHOUT_CLASSIFICATION	4.175091790882577E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.999273277728515	WITHOUT_CLASSIFICATION	7.267222714848454E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9998736724929902	WITHOUT_CLASSIFICATION	1.2632750700975528E-4	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9998274107250097	WITHOUT_CLASSIFICATION	1.7258927499039448E-4	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.999774245397077	WITHOUT_CLASSIFICATION	2.2575460292301842E-4	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9998553351037941	WITHOUT_CLASSIFICATION	1.4466489620589378E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9992399340297401	WITHOUT_CLASSIFICATION	7.600659702598114E-4	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999787701496478	WITHOUT_CLASSIFICATION	2.122985035227862E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9998953040909963	WITHOUT_CLASSIFICATION	1.0469590900369371E-4	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999227228401345	WITHOUT_CLASSIFICATION	7.727715986547626E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999416671899632	WITHOUT_CLASSIFICATION	5.8332810036668116E-5	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9998085934561302	WITHOUT_CLASSIFICATION	1.9140654386997518E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9997586598925453	WITHOUT_CLASSIFICATION	2.4134010745466622E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999599592848071	WITHOUT_CLASSIFICATION	4.004071519300119E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999979110876923	WITHOUT_CLASSIFICATION	2.0889123077071513E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9997891493723152	WITHOUT_CLASSIFICATION	2.1085062768480436E-4	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999384887152973	WITHOUT_CLASSIFICATION	6.151128470270618E-5	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9998638195604997	WITHOUT_CLASSIFICATION	1.361804395001629E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9993342775870303	WITHOUT_CLASSIFICATION	6.657224129697231E-4	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9996747809079279	WITHOUT_CLASSIFICATION	3.252190920720886E-4	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.999974349309628	WITHOUT_CLASSIFICATION	2.565069037184643E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9403116273682983	WITHOUT_CLASSIFICATION	0.05968837263170175	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9998934024123276	WITHOUT_CLASSIFICATION	1.0659758767244926E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9970454101167131	WITHOUT_CLASSIFICATION	0.0029545898832870226	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9941579057478481	WITHOUT_CLASSIFICATION	0.005842094252151866	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.999840754600667	WITHOUT_CLASSIFICATION	1.5924539933301644E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9997952499431592	WITHOUT_CLASSIFICATION	2.0475005684080647E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999932540292892	WITHOUT_CLASSIFICATION	6.745970710895318E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999882952158103	WITHOUT_CLASSIFICATION	1.1704784189727555E-5	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999001362109515	WITHOUT_CLASSIFICATION	9.98637890484683E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9997963323951581	WITHOUT_CLASSIFICATION	2.0366760484185736E-4	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999009220094753	WITHOUT_CLASSIFICATION	9.907799052461247E-5	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999564003777328	WITHOUT_CLASSIFICATION	4.359962226713748E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9996764485541861	WITHOUT_CLASSIFICATION	3.235514458138013E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9997288828691132	WITHOUT_CLASSIFICATION	2.711171308867611E-4	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.999975359568959	WITHOUT_CLASSIFICATION	2.464043104096645E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999954380462006	WITHOUT_CLASSIFICATION	4.561953799472852E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999641020969255	WITHOUT_CLASSIFICATION	3.5897903074480856E-5	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999763338014076	WITHOUT_CLASSIFICATION	2.366619859236564E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.999955728003118	WITHOUT_CLASSIFICATION	4.427199688190841E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.999912611321115	WITHOUT_CLASSIFICATION	8.738867888510078E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999121639111799	WITHOUT_CLASSIFICATION	8.783608882009218E-5	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999774190267399	WITHOUT_CLASSIFICATION	2.2580973260092297E-5	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999573845323283	WITHOUT_CLASSIFICATION	4.261546767174543E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.999552038138385	WITHOUT_CLASSIFICATION	4.479618616149247E-4	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9998100906367058	WITHOUT_CLASSIFICATION	1.8990936329416335E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9998100906367058	WITHOUT_CLASSIFICATION	1.8990936329416335E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.999747204565583	WITHOUT_CLASSIFICATION	2.5279543441708704E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9917193218487326	WITHOUT_CLASSIFICATION	0.008280678151267554	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9998869630573898	WITHOUT_CLASSIFICATION	1.1303694261012713E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999611752405805	WITHOUT_CLASSIFICATION	3.882475941948155E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999727931372409	WITHOUT_CLASSIFICATION	2.7206862759209927E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999729417513523	WITHOUT_CLASSIFICATION	2.7058248647673107E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9997902971796943	WITHOUT_CLASSIFICATION	2.0970282030577194E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999329017944413	WITHOUT_CLASSIFICATION	6.709820555875494E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999329017944413	WITHOUT_CLASSIFICATION	6.709820555875494E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.99964693009114	WITHOUT_CLASSIFICATION	3.530699088599474E-4	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999280725247812	WITHOUT_CLASSIFICATION	7.192747521879408E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999118352330157	WITHOUT_CLASSIFICATION	8.816476698425495E-5	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999499129406677	WITHOUT_CLASSIFICATION	5.008705933227052E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9996689103950267	WITHOUT_CLASSIFICATION	3.3108960497329055E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9996130110414878	WITHOUT_CLASSIFICATION	3.8698895851214184E-4	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9998917801030256	WITHOUT_CLASSIFICATION	1.0821989697439865E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999597812762263	WITHOUT_CLASSIFICATION	4.0218723773656155E-5	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999696521685899	WITHOUT_CLASSIFICATION	3.0347831410062774E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999864866733139	WITHOUT_CLASSIFICATION	1.3513326686197733E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9997198214786808	WITHOUT_CLASSIFICATION	2.8017852131919464E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999327756775052	WITHOUT_CLASSIFICATION	6.722432249473927E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999619296532083	WITHOUT_CLASSIFICATION	3.8070346791715014E-5	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999868911583083	WITHOUT_CLASSIFICATION	1.3108841691631652E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999703215397322	WITHOUT_CLASSIFICATION	2.9678460267858565E-5	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9995392890724173	WITHOUT_CLASSIFICATION	4.607109275827346E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9998779200206063	WITHOUT_CLASSIFICATION	1.2207997939372574E-4	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999881386840174	WITHOUT_CLASSIFICATION	1.1861315982658349E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9989450919579634	WITHOUT_CLASSIFICATION	0.0010549080420366502	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999052758640157	WITHOUT_CLASSIFICATION	9.472413598430057E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.999627996147592	WITHOUT_CLASSIFICATION	3.7200385240796207E-4	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999916234274628	WITHOUT_CLASSIFICATION	8.376572537210457E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999836416120224	WITHOUT_CLASSIFICATION	1.6358387977592756E-5	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.999967274131385	WITHOUT_CLASSIFICATION	3.272586861498066E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999608353077672	WITHOUT_CLASSIFICATION	3.916469223284189E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9997636620238515	WITHOUT_CLASSIFICATION	2.3633797614855452E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999734150406018	WITHOUT_CLASSIFICATION	2.6584959398131057E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9997971974905326	WITHOUT_CLASSIFICATION	2.0280250946740807E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999468707353785	WITHOUT_CLASSIFICATION	5.312926462165688E-5	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.999992591536613	WITHOUT_CLASSIFICATION	7.408463387040626E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999679004836279	WITHOUT_CLASSIFICATION	3.209951637204748E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999818736615287	WITHOUT_CLASSIFICATION	1.81263384713269E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9998204189008748	WITHOUT_CLASSIFICATION	1.795810991252539E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9998211344387764	WITHOUT_CLASSIFICATION	1.7886556122351794E-4	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9993499707278641	WITHOUT_CLASSIFICATION	6.500292721358494E-4	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999413743186246	WITHOUT_CLASSIFICATION	5.8625681375345674E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.999972538450623	WITHOUT_CLASSIFICATION	2.7461549377077484E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999003095019957	WITHOUT_CLASSIFICATION	9.969049800429686E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999988597724889	WITHOUT_CLASSIFICATION	1.1402275110753115E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9934853748708131	WITHOUT_CLASSIFICATION	0.0065146251291869324	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9996596789128334	WITHOUT_CLASSIFICATION	3.4032108716670407E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9996265849066617	WITHOUT_CLASSIFICATION	3.734150933383767E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9997973984142213	WITHOUT_CLASSIFICATION	2.026015857786366E-4	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999587047824801	WITHOUT_CLASSIFICATION	4.1295217519918314E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999251288272981	WITHOUT_CLASSIFICATION	7.487117270182301E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9988626420988383	WITHOUT_CLASSIFICATION	0.0011373579011616562	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990073652334714	WITHOUT_CLASSIFICATION	9.92634766528538E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990073652334714	WITHOUT_CLASSIFICATION	9.92634766528538E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999625476131022	WITHOUT_CLASSIFICATION	3.7452386897766944E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999625476131022	WITHOUT_CLASSIFICATION	3.7452386897766944E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999011554161455	WITHOUT_CLASSIFICATION	9.88445838544583E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9995767097841125	WITHOUT_CLASSIFICATION	4.232902158875008E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997446424573553	WITHOUT_CLASSIFICATION	2.5535754264469974E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997446424573553	WITHOUT_CLASSIFICATION	2.5535754264469974E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999938988039537	WITHOUT_CLASSIFICATION	6.101196046187892E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999933001402068	WITHOUT_CLASSIFICATION	6.699859793255258E-6	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9983642399943885	WITHOUT_CLASSIFICATION	0.0016357600056115791	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999568757977296	WITHOUT_CLASSIFICATION	4.3124202270432455E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9997859140366744	WITHOUT_CLASSIFICATION	2.1408596332560747E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9656963936931616	WITHOUT_CLASSIFICATION	0.03430360630683848	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9998828670550011	WITHOUT_CLASSIFICATION	1.1713294499898894E-4	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999954808421228	WITHOUT_CLASSIFICATION	4.519157877192915E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999758886071527	WITHOUT_CLASSIFICATION	2.4111392847242994E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9946946793526842	WITHOUT_CLASSIFICATION	0.005305320647315744	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9998754220516034	WITHOUT_CLASSIFICATION	1.2457794839667113E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9998662393433844	WITHOUT_CLASSIFICATION	1.337606566156565E-4	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9998666295401549	WITHOUT_CLASSIFICATION	1.3337045984502955E-4	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9995131388608693	WITHOUT_CLASSIFICATION	4.8686113913058157E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999474185045161	WITHOUT_CLASSIFICATION	5.2581495483935636E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9998681781606276	WITHOUT_CLASSIFICATION	1.3182183937241214E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999597736201133	WITHOUT_CLASSIFICATION	4.022637988669712E-5	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.999608315777086	WITHOUT_CLASSIFICATION	3.916842229140658E-4	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998630831397654	WITHOUT_CLASSIFICATION	1.3691686023467129E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999366784334139	WITHOUT_CLASSIFICATION	6.332156658611885E-5	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999827595000921	WITHOUT_CLASSIFICATION	1.72404999079506E-5	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999370584705878	WITHOUT_CLASSIFICATION	6.294152941218257E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999967599716161	WITHOUT_CLASSIFICATION	3.2400283839415437E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.999951092659199	WITHOUT_CLASSIFICATION	4.8907340800983284E-5	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9998500754086578	WITHOUT_CLASSIFICATION	1.4992459134219937E-4	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999314173231739	WITHOUT_CLASSIFICATION	6.858267682606475E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998765342077576	WITHOUT_CLASSIFICATION	1.234657922424633E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999721057521707	WITHOUT_CLASSIFICATION	2.7894247829418307E-5	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9996063906573903	WITHOUT_CLASSIFICATION	3.9360934260975573E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999514016450592	WITHOUT_CLASSIFICATION	4.859835494064607E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9987213641806694	WITHOUT_CLASSIFICATION	0.0012786358193306925	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9996085961730231	WITHOUT_CLASSIFICATION	3.914038269768753E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999707101245668	WITHOUT_CLASSIFICATION	2.9289875433248073E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999631712247484	WITHOUT_CLASSIFICATION	3.682877525159044E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999657360938783	WITHOUT_CLASSIFICATION	3.426390612165798E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.999898192250423	WITHOUT_CLASSIFICATION	1.0180774957694217E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999509374210284	WITHOUT_CLASSIFICATION	4.906257897166942E-5	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999967505963308	WITHOUT_CLASSIFICATION	3.2494036691439522E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.999920650232024	WITHOUT_CLASSIFICATION	7.934976797590699E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999978224755115	WITHOUT_CLASSIFICATION	2.177524488551637E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999931264124562	WITHOUT_CLASSIFICATION	6.873587543724295E-6	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999453606258584	WITHOUT_CLASSIFICATION	5.463937414163065E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999662107897405	WITHOUT_CLASSIFICATION	3.37892102595232E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999559153288922	WITHOUT_CLASSIFICATION	4.4084671107827296E-5	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999814136490615	WITHOUT_CLASSIFICATION	1.8586350938529397E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999626516950146	WITHOUT_CLASSIFICATION	3.734830498538306E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999808648817313	WITHOUT_CLASSIFICATION	1.913511826874456E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9998907566785685	WITHOUT_CLASSIFICATION	1.0924332143147276E-4	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.990245971219078	WITHOUT_CLASSIFICATION	0.009754028780921964	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999490300525349	WITHOUT_CLASSIFICATION	5.09699474651587E-5	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999412779203405	WITHOUT_CLASSIFICATION	5.8722079659471095E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999572817103398	WITHOUT_CLASSIFICATION	4.2718289660223914E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9996357224122776	WITHOUT_CLASSIFICATION	3.6427758772230136E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9997865435591667	WITHOUT_CLASSIFICATION	2.1345644083321932E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9995950741060351	WITHOUT_CLASSIFICATION	4.049258939648858E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9995324396572787	WITHOUT_CLASSIFICATION	4.675603427212469E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999871651965198	WITHOUT_CLASSIFICATION	1.2834803480236996E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9997028974903364	WITHOUT_CLASSIFICATION	2.971025096636333E-4	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9996551894562361	WITHOUT_CLASSIFICATION	3.448105437638772E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998643758698089	WITHOUT_CLASSIFICATION	1.356241301910122E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999518182901899	WITHOUT_CLASSIFICATION	4.8181709810035705E-5	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9998184265574226	WITHOUT_CLASSIFICATION	1.8157344257751018E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998643758698089	WITHOUT_CLASSIFICATION	1.356241301910122E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999373569037647	WITHOUT_CLASSIFICATION	6.264309623524884E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998643758698089	WITHOUT_CLASSIFICATION	1.356241301910122E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.999970690914756	WITHOUT_CLASSIFICATION	2.93090852439543E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999969178817689	WITHOUT_CLASSIFICATION	3.0821182312169805E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9982397909755861	WITHOUT_CLASSIFICATION	0.001760209024413876	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999499097386042	WITHOUT_CLASSIFICATION	5.009026139589913E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.999293965538479	WITHOUT_CLASSIFICATION	7.060344615210314E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9977993690557102	WITHOUT_CLASSIFICATION	0.002200630944289787	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9996031734935056	WITHOUT_CLASSIFICATION	3.968265064943618E-4	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999931818381642	WITHOUT_CLASSIFICATION	6.818161835757941E-6	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999577135716535	WITHOUT_CLASSIFICATION	4.228642834656149E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999752753100009	WITHOUT_CLASSIFICATION	2.4724689999231036E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999787837674221	WITHOUT_CLASSIFICATION	2.121623257799487E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999281693878888	WITHOUT_CLASSIFICATION	7.183061211124232E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.99998041779213	WITHOUT_CLASSIFICATION	1.9582207870016966E-5	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.999985931270295	WITHOUT_CLASSIFICATION	1.4068729705040612E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999462153194182	WITHOUT_CLASSIFICATION	5.3784680581909973E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999847997818903	WITHOUT_CLASSIFICATION	1.5200218109815302E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9997502405850696	WITHOUT_CLASSIFICATION	2.4975941493041463E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999474423792969	WITHOUT_CLASSIFICATION	5.255762070314377E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9995802819804933	WITHOUT_CLASSIFICATION	4.1971801950674466E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9974990629920714	WITHOUT_CLASSIFICATION	0.002500937007928529	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999642113134316	WITHOUT_CLASSIFICATION	3.5788686568479325E-5	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.999936948206535	WITHOUT_CLASSIFICATION	6.305179346498487E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999056967262883	WITHOUT_CLASSIFICATION	9.430327371164289E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999674639183112	WITHOUT_CLASSIFICATION	3.253608168886175E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999035553136454	WITHOUT_CLASSIFICATION	9.644468635453506E-5	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999628285487825	WITHOUT_CLASSIFICATION	3.7171451217554924E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9941792661428919	WITHOUT_CLASSIFICATION	0.0058207338571081065	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9996465900324961	WITHOUT_CLASSIFICATION	3.534099675037857E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9973601551524554	WITHOUT_CLASSIFICATION	0.002639844847544676	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9989836244792781	WITHOUT_CLASSIFICATION	0.0010163755207217794	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.999980551976363	WITHOUT_CLASSIFICATION	1.9448023637069916E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999473381992204	WITHOUT_CLASSIFICATION	5.266180077941514E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999295909051547	WITHOUT_CLASSIFICATION	7.040909484529985E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999827632636414	WITHOUT_CLASSIFICATION	1.7236736358573186E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999437056841871	WITHOUT_CLASSIFICATION	5.629431581285625E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999343921569553	WITHOUT_CLASSIFICATION	6.5607843044682E-5	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9995331321926312	WITHOUT_CLASSIFICATION	4.668678073687942E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9998375061996249	WITHOUT_CLASSIFICATION	1.6249380037516707E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9998569814384894	WITHOUT_CLASSIFICATION	1.43018561510568E-4	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9991110146407405	WITHOUT_CLASSIFICATION	8.889853592594443E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9997567729862185	WITHOUT_CLASSIFICATION	2.432270137814975E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9998905192784403	WITHOUT_CLASSIFICATION	1.0948072155975933E-4	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999396590979741	WITHOUT_CLASSIFICATION	6.0340902025814856E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9998956276819163	WITHOUT_CLASSIFICATION	1.0437231808378816E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.999834525512511	WITHOUT_CLASSIFICATION	1.6547448748895503E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.999980454001644	WITHOUT_CLASSIFICATION	1.954599835594014E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9994582206594042	WITHOUT_CLASSIFICATION	5.417793405958025E-4	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9998168005320581	WITHOUT_CLASSIFICATION	1.8319946794192262E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9998174705882505	WITHOUT_CLASSIFICATION	1.8252941174940664E-4	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999402307507845	WITHOUT_CLASSIFICATION	5.976924921537756E-5	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9998033073201456	WITHOUT_CLASSIFICATION	1.9669267985441925E-4	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999762178826187	WITHOUT_CLASSIFICATION	2.3782117381317106E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999401065009211	WITHOUT_CLASSIFICATION	5.989349907888357E-5	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999652133185887	WITHOUT_CLASSIFICATION	3.478668141134457E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999719003231304	WITHOUT_CLASSIFICATION	2.809967686960158E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9997906151343952	WITHOUT_CLASSIFICATION	2.0938486560495505E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999480468727662	WITHOUT_CLASSIFICATION	5.1953127233914894E-5	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.999891828698347	WITHOUT_CLASSIFICATION	1.081713016528765E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.999766331561641	WITHOUT_CLASSIFICATION	2.3366843835914344E-4	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9997368249295318	WITHOUT_CLASSIFICATION	2.6317507046830387E-4	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9993894689299755	WITHOUT_CLASSIFICATION	6.105310700245391E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9998868971045326	WITHOUT_CLASSIFICATION	1.1310289546742021E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999460133013769	WITHOUT_CLASSIFICATION	5.39866986229814E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999491898019183	WITHOUT_CLASSIFICATION	5.081019808169492E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999643002036935	WITHOUT_CLASSIFICATION	3.5699796306535385E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999465231136382	WITHOUT_CLASSIFICATION	5.347688636183164E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999806939289843	WITHOUT_CLASSIFICATION	1.9306071015712002E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.999766331561641	WITHOUT_CLASSIFICATION	2.3366843835914344E-4	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999330168041349	WITHOUT_CLASSIFICATION	6.698319586509795E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999249439143922	WITHOUT_CLASSIFICATION	7.505608560776E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9995495230019679	WITHOUT_CLASSIFICATION	4.5047699803214407E-4	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9987179457386558	WITHOUT_CLASSIFICATION	0.001282054261344289	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999672647932693	WITHOUT_CLASSIFICATION	3.273520673084483E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9628708596164864	WITHOUT_CLASSIFICATION	0.037129140383513545	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9998984065335788	WITHOUT_CLASSIFICATION	1.0159346642129792E-4	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9998984065335788	WITHOUT_CLASSIFICATION	1.0159346642129792E-4	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9982102554731085	WITHOUT_CLASSIFICATION	0.001789744526891421	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9982102554731085	WITHOUT_CLASSIFICATION	0.001789744526891421	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9939132003479657	WITHOUT_CLASSIFICATION	0.006086799652034199	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9997586264449164	WITHOUT_CLASSIFICATION	2.4137355508364606E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9987074821213092	WITHOUT_CLASSIFICATION	0.001292517878690731	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9953657573346893	WITHOUT_CLASSIFICATION	0.004634242665310644	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.999841014820593	WITHOUT_CLASSIFICATION	1.5898517940701103E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9994387593996926	WITHOUT_CLASSIFICATION	5.612406003072973E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999916287432413	WITHOUT_CLASSIFICATION	8.37125675877147E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9997947833140652	WITHOUT_CLASSIFICATION	2.0521668593475256E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9998918991652598	WITHOUT_CLASSIFICATION	1.081008347402502E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9998242421637789	WITHOUT_CLASSIFICATION	1.7575783622117866E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9992427817679608	WITHOUT_CLASSIFICATION	7.572182320391541E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999638155534959	WITHOUT_CLASSIFICATION	3.618444650407419E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999638155534959	WITHOUT_CLASSIFICATION	3.618444650407419E-5	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9987074821213092	WITHOUT_CLASSIFICATION	0.001292517878690731	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9998242421637789	WITHOUT_CLASSIFICATION	1.7575783622117866E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.7858184195514516	WITHOUT_CLASSIFICATION	0.21418158044854843	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9997586264449164	WITHOUT_CLASSIFICATION	2.4137355508364606E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999948765335357	WITHOUT_CLASSIFICATION	5.123466464335887E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999332772513633	WITHOUT_CLASSIFICATION	6.672274863677025E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998550128303701	WITHOUT_CLASSIFICATION	1.4498716962994373E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998550128303701	WITHOUT_CLASSIFICATION	1.4498716962994373E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999684698051282	WITHOUT_CLASSIFICATION	3.153019487178964E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.99999090843192	WITHOUT_CLASSIFICATION	9.09156808006888E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.999947152270627	WITHOUT_CLASSIFICATION	5.2847729372947466E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9998272394165746	WITHOUT_CLASSIFICATION	1.727605834254075E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9998671013746394	WITHOUT_CLASSIFICATION	1.3289862536051866E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9998704941124469	WITHOUT_CLASSIFICATION	1.2950588755304823E-4	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998444805582164	WITHOUT_CLASSIFICATION	1.555194417835472E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999293221258964	WITHOUT_CLASSIFICATION	7.067787410370261E-5	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999802493591861	WITHOUT_CLASSIFICATION	1.9750640813989558E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999893765290262	WITHOUT_CLASSIFICATION	1.062347097379698E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9997837297331403	WITHOUT_CLASSIFICATION	2.1627026685966367E-4	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9998390461244445	WITHOUT_CLASSIFICATION	1.6095387555537465E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9993887161936268	WITHOUT_CLASSIFICATION	6.112838063732327E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999651412794093	WITHOUT_CLASSIFICATION	3.485872059069471E-5	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999830846243447	WITHOUT_CLASSIFICATION	1.691537565526765E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999890650235894	WITHOUT_CLASSIFICATION	1.0934976410636947E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999973964875561	WITHOUT_CLASSIFICATION	2.603512443899742E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999421861780166	WITHOUT_CLASSIFICATION	5.781382198340339E-4	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9977361747679997	WITHOUT_CLASSIFICATION	0.0022638252320003106	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999167734925656	WITHOUT_CLASSIFICATION	8.322650743441032E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9998702463961688	WITHOUT_CLASSIFICATION	1.297536038310941E-4	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9998846574284607	WITHOUT_CLASSIFICATION	1.1534257153940752E-4	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.999742185697962	WITHOUT_CLASSIFICATION	2.57814302037923E-4	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999500774334625	WITHOUT_CLASSIFICATION	4.9922566537483926E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.999989223264162	WITHOUT_CLASSIFICATION	1.0776735838093874E-5	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998646227703051	WITHOUT_CLASSIFICATION	1.3537722969494335E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999862965513066	WITHOUT_CLASSIFICATION	1.3703448693531205E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999980473870916	WITHOUT_CLASSIFICATION	1.9526129084032345E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998733115631869	WITHOUT_CLASSIFICATION	1.266884368130912E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999886507520171	WITHOUT_CLASSIFICATION	1.1349247982891789E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999321875116529	WITHOUT_CLASSIFICATION	6.781248834701954E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9998819078976855	WITHOUT_CLASSIFICATION	1.1809210231450956E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999297202015206	WITHOUT_CLASSIFICATION	7.027979847947217E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999191584328969	WITHOUT_CLASSIFICATION	8.084156710299422E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999806594686221	WITHOUT_CLASSIFICATION	1.9340531377894883E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999457256196916	WITHOUT_CLASSIFICATION	5.427438030847096E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999651412794093	WITHOUT_CLASSIFICATION	3.485872059069471E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999756794734543	WITHOUT_CLASSIFICATION	2.4320526545679617E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999640260469081	WITHOUT_CLASSIFICATION	3.5973953091920317E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999766255076267	WITHOUT_CLASSIFICATION	2.3374492373318356E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999611930246566	WITHOUT_CLASSIFICATION	3.880697534336265E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999980473870916	WITHOUT_CLASSIFICATION	1.9526129084032345E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998733115631869	WITHOUT_CLASSIFICATION	1.266884368130912E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999886507520171	WITHOUT_CLASSIFICATION	1.1349247982891789E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999978448585961	WITHOUT_CLASSIFICATION	2.1551414038262326E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999838259258614	WITHOUT_CLASSIFICATION	1.617407413851252E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999842174958183	WITHOUT_CLASSIFICATION	1.5782504181718892E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999808710761895	WITHOUT_CLASSIFICATION	1.9128923810567446E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9961047724705048	WITHOUT_CLASSIFICATION	0.00389522752949517	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9998037853876691	WITHOUT_CLASSIFICATION	1.962146123308921E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998707599969648	WITHOUT_CLASSIFICATION	1.292400030350555E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999561739971924	WITHOUT_CLASSIFICATION	4.382600280754057E-5	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9998587638803378	WITHOUT_CLASSIFICATION	1.412361196623006E-4	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999589448807927	WITHOUT_CLASSIFICATION	4.105511920737287E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998192043641388	WITHOUT_CLASSIFICATION	1.8079563586112244E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9998845277893523	WITHOUT_CLASSIFICATION	1.1547221064767016E-4	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999349434145905	WITHOUT_CLASSIFICATION	6.505658540935673E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999862965513066	WITHOUT_CLASSIFICATION	1.3703448693531205E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999297202015206	WITHOUT_CLASSIFICATION	7.027979847947217E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999191584328969	WITHOUT_CLASSIFICATION	8.084156710299422E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999806594686221	WITHOUT_CLASSIFICATION	1.9340531377894883E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999838259258614	WITHOUT_CLASSIFICATION	1.617407413851252E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999842174958183	WITHOUT_CLASSIFICATION	1.5782504181718892E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999808710761895	WITHOUT_CLASSIFICATION	1.9128923810567446E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9961047724705048	WITHOUT_CLASSIFICATION	0.00389522752949517	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9998037853876691	WITHOUT_CLASSIFICATION	1.962146123308921E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999922210367456	WITHOUT_CLASSIFICATION	7.778963254340797E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9998549454843952	WITHOUT_CLASSIFICATION	1.450545156047344E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999426931682243	WITHOUT_CLASSIFICATION	5.730683177562765E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996736719899244	WITHOUT_CLASSIFICATION	3.263280100755354E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996736719899244	WITHOUT_CLASSIFICATION	3.263280100755354E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996736719899244	WITHOUT_CLASSIFICATION	3.263280100755354E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996736719899244	WITHOUT_CLASSIFICATION	3.263280100755354E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996736719899244	WITHOUT_CLASSIFICATION	3.263280100755354E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999867674500953	WITHOUT_CLASSIFICATION	1.3232549904697722E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999619628761457	WITHOUT_CLASSIFICATION	3.8037123854348295E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999709728184252	WITHOUT_CLASSIFICATION	2.902718157484596E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9992664679895193	WITHOUT_CLASSIFICATION	7.335320104807164E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999494094526491	WITHOUT_CLASSIFICATION	5.0590547350919555E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999198681207127	WITHOUT_CLASSIFICATION	8.013187928742852E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999694435353578	WITHOUT_CLASSIFICATION	3.0556464642210886E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999611507923454	WITHOUT_CLASSIFICATION	3.884920765454724E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9997487810490985	WITHOUT_CLASSIFICATION	2.5121895090150586E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990073652334714	WITHOUT_CLASSIFICATION	9.92634766528538E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990073652334714	WITHOUT_CLASSIFICATION	9.92634766528538E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9990073652334714	WITHOUT_CLASSIFICATION	9.92634766528538E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999559723194164	WITHOUT_CLASSIFICATION	4.4027680583680576E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9984702053512111	WITHOUT_CLASSIFICATION	0.001529794648788895	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9998693078704731	WITHOUT_CLASSIFICATION	1.3069212952687294E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999177466019904	WITHOUT_CLASSIFICATION	8.225339800955988E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999177466019904	WITHOUT_CLASSIFICATION	8.225339800955988E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999496776342343	WITHOUT_CLASSIFICATION	5.0322365765625114E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999177466019904	WITHOUT_CLASSIFICATION	8.225339800955988E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9996959367425784	WITHOUT_CLASSIFICATION	3.040632574215393E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999049255686848	WITHOUT_CLASSIFICATION	9.507443131517726E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999735648842922	WITHOUT_CLASSIFICATION	2.643511570782599E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.999469910680439	WITHOUT_CLASSIFICATION	5.300893195609778E-4	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.999469910680439	WITHOUT_CLASSIFICATION	5.300893195609778E-4	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.998851772538738	WITHOUT_CLASSIFICATION	0.0011482274612619476	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9998373242034209	WITHOUT_CLASSIFICATION	1.6267579657910136E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9761352207223328	WITHOUT_CLASSIFICATION	0.023864779277667118	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9969509870440524	WITHOUT_CLASSIFICATION	0.0030490129559475753	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999336942686811	WITHOUT_CLASSIFICATION	6.630573131895323E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999620108024511	WITHOUT_CLASSIFICATION	3.7989197548889876E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9997036905359843	WITHOUT_CLASSIFICATION	2.963094640157296E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999808262066716	WITHOUT_CLASSIFICATION	1.917379332841716E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999028344571128	WITHOUT_CLASSIFICATION	9.716554288717225E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999951937288679	WITHOUT_CLASSIFICATION	4.806271132104344E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994667308860433	WITHOUT_CLASSIFICATION	5.33269113956746E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997118215065908	WITHOUT_CLASSIFICATION	2.881784934092517E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994667308860433	WITHOUT_CLASSIFICATION	5.33269113956746E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999723838539939	WITHOUT_CLASSIFICATION	2.7616146006069832E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999888598711416	WITHOUT_CLASSIFICATION	1.1140128858368962E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9997768269416536	WITHOUT_CLASSIFICATION	2.23173058346468E-4	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9992515831294998	WITHOUT_CLASSIFICATION	7.484168705001832E-4	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9992515831294998	WITHOUT_CLASSIFICATION	7.484168705001832E-4	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9965563167106344	WITHOUT_CLASSIFICATION	0.003443683289365638	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999850279936889	WITHOUT_CLASSIFICATION	1.4972006311164228E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999815311334368	WITHOUT_CLASSIFICATION	1.8468866563147174E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999981596597605	WITHOUT_CLASSIFICATION	1.8403402396097751E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999962784375223	WITHOUT_CLASSIFICATION	3.721562477730291E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999849212749412	WITHOUT_CLASSIFICATION	1.5078725058871277E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999962784375223	WITHOUT_CLASSIFICATION	3.721562477730291E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999849448909462	WITHOUT_CLASSIFICATION	1.505510905368193E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999849448909462	WITHOUT_CLASSIFICATION	1.505510905368193E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999849448909462	WITHOUT_CLASSIFICATION	1.505510905368193E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999849448909462	WITHOUT_CLASSIFICATION	1.505510905368193E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999850279936889	WITHOUT_CLASSIFICATION	1.4972006311164228E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999849448909462	WITHOUT_CLASSIFICATION	1.505510905368193E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999157088136216	WITHOUT_CLASSIFICATION	8.429118637849492E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999157088136216	WITHOUT_CLASSIFICATION	8.429118637849492E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999981596597605	WITHOUT_CLASSIFICATION	1.8403402396097751E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999962784375223	WITHOUT_CLASSIFICATION	3.721562477730291E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999849212749412	WITHOUT_CLASSIFICATION	1.5078725058871277E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999962784375223	WITHOUT_CLASSIFICATION	3.721562477730291E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999984858446336	WITHOUT_CLASSIFICATION	1.5141553664153072E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999981596597605	WITHOUT_CLASSIFICATION	1.8403402396097751E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999850279936889	WITHOUT_CLASSIFICATION	1.4972006311164228E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999850881071638	WITHOUT_CLASSIFICATION	1.491189283619508E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999848858676063	WITHOUT_CLASSIFICATION	1.5114132393842112E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999907112196756	WITHOUT_CLASSIFICATION	9.28878032433066E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999447900952801	WITHOUT_CLASSIFICATION	5.520990471977769E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999582906569198	WITHOUT_CLASSIFICATION	4.1709343080198924E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999580391366417	WITHOUT_CLASSIFICATION	4.1960863358273346E-5	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9998162094125176	WITHOUT_CLASSIFICATION	1.8379058748249231E-4	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9992872952411139	WITHOUT_CLASSIFICATION	7.127047588860386E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9996747809079279	WITHOUT_CLASSIFICATION	3.252190920720886E-4	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.999793204455408	WITHOUT_CLASSIFICATION	2.0679554459193206E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9926494219918808	WITHOUT_CLASSIFICATION	0.007350578008119225	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999504135754593	WITHOUT_CLASSIFICATION	4.958642454069872E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9998316109464912	WITHOUT_CLASSIFICATION	1.6838905350888538E-4	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9988130250253358	WITHOUT_CLASSIFICATION	0.0011869749746641878	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999445125715236	WITHOUT_CLASSIFICATION	5.548742847637981E-5	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999733634108234	WITHOUT_CLASSIFICATION	2.663658917649368E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999512249428871	WITHOUT_CLASSIFICATION	4.877505711275377E-5	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9983998402427421	WITHOUT_CLASSIFICATION	0.0016001597572579181	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9997060649479794	WITHOUT_CLASSIFICATION	2.939350520205852E-4	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999995748862722	WITHOUT_CLASSIFICATION	4.251137277245047E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999995748862722	WITHOUT_CLASSIFICATION	4.251137277245047E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999995748862722	WITHOUT_CLASSIFICATION	4.251137277245047E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.999916234274628	WITHOUT_CLASSIFICATION	8.376572537210457E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999995748862722	WITHOUT_CLASSIFICATION	4.251137277245047E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9998279871598955	WITHOUT_CLASSIFICATION	1.7201284010452312E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.99993533476212	WITHOUT_CLASSIFICATION	6.466523788000318E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9992693104455719	WITHOUT_CLASSIFICATION	7.306895544281032E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998564991251925	WITHOUT_CLASSIFICATION	1.4350087480761558E-4	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999832996684747	WITHOUT_CLASSIFICATION	1.6700331525411174E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998301855932143	WITHOUT_CLASSIFICATION	1.698144067856574E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998765342077576	WITHOUT_CLASSIFICATION	1.234657922424633E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999317404029339	WITHOUT_CLASSIFICATION	6.82595970661028E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9998578589572955	WITHOUT_CLASSIFICATION	1.4214104270442938E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999639232966415	WITHOUT_CLASSIFICATION	3.607670335859111E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9997402756531091	WITHOUT_CLASSIFICATION	2.597243468909021E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9989426527487034	WITHOUT_CLASSIFICATION	0.0010573472512966677	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999657360938783	WITHOUT_CLASSIFICATION	3.426390612165798E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999844524777811	WITHOUT_CLASSIFICATION	1.5547522218887616E-4	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.999862041931767	WITHOUT_CLASSIFICATION	1.3795806823294228E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999896722543464	WITHOUT_CLASSIFICATION	1.0327745653584387E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9997618242909753	WITHOUT_CLASSIFICATION	2.381757090247403E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.999925855364151	WITHOUT_CLASSIFICATION	7.41446358489855E-5	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.999973150133306	WITHOUT_CLASSIFICATION	2.6849866693993523E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9985188088777258	WITHOUT_CLASSIFICATION	0.0014811911222742029	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999315693845521	WITHOUT_CLASSIFICATION	6.843061544794877E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999195856461697	WITHOUT_CLASSIFICATION	8.041435383023839E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998474024586947	WITHOUT_CLASSIFICATION	1.52597541305339E-4	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9998714970045536	WITHOUT_CLASSIFICATION	1.2850299544635256E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.999974617097394	WITHOUT_CLASSIFICATION	2.5382902606073327E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.999974617097394	WITHOUT_CLASSIFICATION	2.5382902606073327E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9998960816686474	WITHOUT_CLASSIFICATION	1.039183313525397E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999621744466636	WITHOUT_CLASSIFICATION	3.782555333649258E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9998633625875581	WITHOUT_CLASSIFICATION	1.3663741244184486E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.998816644845007	WITHOUT_CLASSIFICATION	0.001183355154993038	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9989816945987979	WITHOUT_CLASSIFICATION	0.001018305401202081	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9989816945987979	WITHOUT_CLASSIFICATION	0.001018305401202081	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999615670442387	WITHOUT_CLASSIFICATION	3.843295576137706E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999440666869185	WITHOUT_CLASSIFICATION	5.5933313081453234E-5	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9975834136980843	WITHOUT_CLASSIFICATION	0.0024165863019157538	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999620258314074	WITHOUT_CLASSIFICATION	3.7974168592582426E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999652858931486	WITHOUT_CLASSIFICATION	3.471410685129616E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999186046014478	WITHOUT_CLASSIFICATION	8.139539855227536E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999186046014478	WITHOUT_CLASSIFICATION	8.139539855227536E-5	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9995337340729493	WITHOUT_CLASSIFICATION	4.6626592705059877E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9994601899729669	WITHOUT_CLASSIFICATION	5.398100270331267E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9998405328051502	WITHOUT_CLASSIFICATION	1.5946719484985736E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999687090316979	WITHOUT_CLASSIFICATION	3.129096830222949E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.999766331561641	WITHOUT_CLASSIFICATION	2.3366843835914344E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9962159728121417	WITHOUT_CLASSIFICATION	0.003784027187858391	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.999616920397286	WITHOUT_CLASSIFICATION	3.8307960271401074E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999903587748373	WITHOUT_CLASSIFICATION	9.64122516268446E-6	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9939132003479657	WITHOUT_CLASSIFICATION	0.006086799652034199	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9998972113938075	WITHOUT_CLASSIFICATION	1.0278860619251076E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9996796095146293	WITHOUT_CLASSIFICATION	3.2039048537072445E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999955812186876	WITHOUT_CLASSIFICATION	4.41878131251552E-6	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9999329791185542	WITHOUT_CLASSIFICATION	6.702088144580865E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999594601675981	WITHOUT_CLASSIFICATION	4.0539832401949336E-5	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.999960287107267	WITHOUT_CLASSIFICATION	3.971289273286804E-5	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999732102232466	WITHOUT_CLASSIFICATION	2.6789776753370307E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.7858184195514516	WITHOUT_CLASSIFICATION	0.21418158044854843	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9996589642563283	WITHOUT_CLASSIFICATION	3.4103574367172425E-4	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999994866468468	WITHOUT_CLASSIFICATION	5.133531532224678E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999994866468468	WITHOUT_CLASSIFICATION	5.133531532224678E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999307492279667	WITHOUT_CLASSIFICATION	6.925077203330833E-5	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999841349005357	WITHOUT_CLASSIFICATION	1.586509946431154E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9990713473379227	WITHOUT_CLASSIFICATION	9.286526620772742E-4	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999523464977281	WITHOUT_CLASSIFICATION	4.765350227185818E-5	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9997017464849282	WITHOUT_CLASSIFICATION	2.9825351507179756E-4	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9997990485615915	WITHOUT_CLASSIFICATION	2.0095143840848974E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9998426260256063	WITHOUT_CLASSIFICATION	1.5737397439373655E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.999976946137029	WITHOUT_CLASSIFICATION	2.3053862970861577E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999387521767439	WITHOUT_CLASSIFICATION	6.124782325612114E-5	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999953051524868	WITHOUT_CLASSIFICATION	4.694847513174072E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999445218528442	WITHOUT_CLASSIFICATION	5.547814715574917E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999426545471767	WITHOUT_CLASSIFICATION	5.734545282330141E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9996706851294432	WITHOUT_CLASSIFICATION	3.293148705567393E-4	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9994008443389526	WITHOUT_CLASSIFICATION	5.991556610473061E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9990318364476539	WITHOUT_CLASSIFICATION	9.681635523461344E-4	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999413042708798	WITHOUT_CLASSIFICATION	5.869572912011705E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999582643698098	WITHOUT_CLASSIFICATION	4.173563019013654E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999603533306106	WITHOUT_CLASSIFICATION	3.964666938937304E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999868190481446	WITHOUT_CLASSIFICATION	1.3180951855484277E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999276851345691	WITHOUT_CLASSIFICATION	7.231486543097642E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999276851345691	WITHOUT_CLASSIFICATION	7.231486543097642E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9998209634633738	WITHOUT_CLASSIFICATION	1.790365366262051E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999253945505692	WITHOUT_CLASSIFICATION	7.46054494308386E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9994792361322392	WITHOUT_CLASSIFICATION	5.207638677608773E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998818239228927	WITHOUT_CLASSIFICATION	1.181760771072458E-4	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9992410894342479	WITHOUT_CLASSIFICATION	7.589105657521086E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999720259742651	WITHOUT_CLASSIFICATION	2.797402573490066E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9994019996404412	WITHOUT_CLASSIFICATION	5.980003595587431E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999638155534959	WITHOUT_CLASSIFICATION	3.618444650407419E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999638155534959	WITHOUT_CLASSIFICATION	3.618444650407419E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999638155534959	WITHOUT_CLASSIFICATION	3.618444650407419E-5	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9998266320389172	WITHOUT_CLASSIFICATION	1.7336796108282388E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998339087569418	WITHOUT_CLASSIFICATION	1.6609124305814598E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9996705693931646	WITHOUT_CLASSIFICATION	3.294306068354591E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999971507186126	WITHOUT_CLASSIFICATION	2.849281387387591E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999971507186126	WITHOUT_CLASSIFICATION	2.849281387387591E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998630871644077	WITHOUT_CLASSIFICATION	1.3691283559218384E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9998738837940392	WITHOUT_CLASSIFICATION	1.2611620596086022E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998091539619303	WITHOUT_CLASSIFICATION	1.908460380696208E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999661868186378	WITHOUT_CLASSIFICATION	3.381318136220616E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999869861266422	WITHOUT_CLASSIFICATION	1.3013873357829374E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999849692674267	WITHOUT_CLASSIFICATION	1.5030732573221518E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.999814920953561	WITHOUT_CLASSIFICATION	1.8507904643899078E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999202015353847	WITHOUT_CLASSIFICATION	7.979846461517408E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9997660395146266	WITHOUT_CLASSIFICATION	2.3396048537343365E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998500510123935	WITHOUT_CLASSIFICATION	1.4994898760639034E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999976869435444	WITHOUT_CLASSIFICATION	2.3130564555987185E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999179884143005	WITHOUT_CLASSIFICATION	8.20115856995581E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999179884143005	WITHOUT_CLASSIFICATION	8.20115856995581E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996849931034835	WITHOUT_CLASSIFICATION	3.150068965164755E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999498379358379	WITHOUT_CLASSIFICATION	5.016206416204736E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999498379358379	WITHOUT_CLASSIFICATION	5.016206416204736E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999335289671795	WITHOUT_CLASSIFICATION	6.647103282050214E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.999860411433884	WITHOUT_CLASSIFICATION	1.3958856611602687E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9998905356390196	WITHOUT_CLASSIFICATION	1.0946436098034212E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995968886633984	WITHOUT_CLASSIFICATION	4.0311133660158536E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995519593460782	WITHOUT_CLASSIFICATION	4.480406539218662E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999961927176336	WITHOUT_CLASSIFICATION	3.80728236639624E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999536446200054	WITHOUT_CLASSIFICATION	4.635537999469172E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9986443603920605	WITHOUT_CLASSIFICATION	0.0013556396079394835	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9995843096991569	WITHOUT_CLASSIFICATION	4.156903008429996E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9995843096991569	WITHOUT_CLASSIFICATION	4.156903008429996E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9983203341827797	WITHOUT_CLASSIFICATION	0.0016796658172203562	DEFECT
// is this an error???	DEFECT	0.9999740349725231	WITHOUT_CLASSIFICATION	2.596502747688971E-5	DEFECT
// is this an error???	DEFECT	0.9999740349725231	WITHOUT_CLASSIFICATION	2.596502747688971E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9985994971594426	WITHOUT_CLASSIFICATION	0.0014005028405573818	DEFECT
