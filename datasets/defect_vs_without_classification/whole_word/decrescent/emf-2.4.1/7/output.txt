// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9995700953916138	WITHOUT_CLASSIFICATION	4.2990460838629235E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999314739738849	WITHOUT_CLASSIFICATION	6.852602611508529E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999195930480015	WITHOUT_CLASSIFICATION	8.040695199849314E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9989661955229291	WITHOUT_CLASSIFICATION	0.001033804477070934	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999981164631824	WITHOUT_CLASSIFICATION	1.8835368176018375E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998288342975271	WITHOUT_CLASSIFICATION	1.7116570247288274E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998633530707409	WITHOUT_CLASSIFICATION	1.3664692925904014E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999577657736687	WITHOUT_CLASSIFICATION	4.223422633125405E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999611304775295	WITHOUT_CLASSIFICATION	3.886952247042721E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999967560979702	WITHOUT_CLASSIFICATION	3.243902029802611E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999325692086335	WITHOUT_CLASSIFICATION	6.743079136649052E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999801932800318	WITHOUT_CLASSIFICATION	1.9806719968199087E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999905616695003	WITHOUT_CLASSIFICATION	9.438330499702803E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998519607363354	WITHOUT_CLASSIFICATION	1.4803926366455962E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999703905539741	WITHOUT_CLASSIFICATION	2.960944602588522E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999477904522047	WITHOUT_CLASSIFICATION	5.220954779520068E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998288342975271	WITHOUT_CLASSIFICATION	1.7116570247288274E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999549116111373	WITHOUT_CLASSIFICATION	4.508838886266326E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999625244677874	WITHOUT_CLASSIFICATION	3.747553221259429E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9994126130254356	WITHOUT_CLASSIFICATION	5.873869745644057E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9845497158492232	WITHOUT_CLASSIFICATION	0.015450284150776648	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999209174738409	WITHOUT_CLASSIFICATION	7.908252615898411E-5	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9990099067867398	WITHOUT_CLASSIFICATION	9.900932132602585E-4	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9820911963818321	WITHOUT_CLASSIFICATION	0.017908803618167927	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9985414138662498	WITHOUT_CLASSIFICATION	0.0014585861337502355	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9902584658408129	WITHOUT_CLASSIFICATION	0.009741534159187168	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999834670674271	WITHOUT_CLASSIFICATION	1.653293257290793E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999030099421516	WITHOUT_CLASSIFICATION	9.699005784834415E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999865166829044	WITHOUT_CLASSIFICATION	1.3483317095688936E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9973332637661175	WITHOUT_CLASSIFICATION	0.002666736233882391	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999939914410821	WITHOUT_CLASSIFICATION	6.008558917897363E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9987338000253826	WITHOUT_CLASSIFICATION	0.001266199974617326	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999812539028253	WITHOUT_CLASSIFICATION	1.8746097174673618E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9998896122403202	WITHOUT_CLASSIFICATION	1.1038775967971484E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999699413520339	WITHOUT_CLASSIFICATION	3.0058647966123102E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9971773557968976	WITHOUT_CLASSIFICATION	0.0028226442031024567	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999439643314605	WITHOUT_CLASSIFICATION	5.603566853957876E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999863870695458	WITHOUT_CLASSIFICATION	1.3612930454152138E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9920711831002601	WITHOUT_CLASSIFICATION	0.007928816899739958	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999863094156395	WITHOUT_CLASSIFICATION	1.3690584360439978E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999946585366044	WITHOUT_CLASSIFICATION	5.341463395603061E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9993380291732448	WITHOUT_CLASSIFICATION	6.619708267551915E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999049171932689	WITHOUT_CLASSIFICATION	9.508280673112062E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9148029997954582	WITHOUT_CLASSIFICATION	0.08519700020454175	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999318640232334	WITHOUT_CLASSIFICATION	6.813597676666866E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999948044417242	WITHOUT_CLASSIFICATION	5.195558275764365E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9799039904907273	WITHOUT_CLASSIFICATION	0.020096009509272747	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999325692086335	WITHOUT_CLASSIFICATION	6.743079136649052E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999801932800318	WITHOUT_CLASSIFICATION	1.9806719968199087E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999905616695003	WITHOUT_CLASSIFICATION	9.438330499702803E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9997000329972454	WITHOUT_CLASSIFICATION	2.9996700275466916E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998519607363354	WITHOUT_CLASSIFICATION	1.4803926366455962E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999703905539741	WITHOUT_CLASSIFICATION	2.960944602588522E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999477904522047	WITHOUT_CLASSIFICATION	5.220954779520068E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9910557241832469	WITHOUT_CLASSIFICATION	0.00894427581675305	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9910557241832469	WITHOUT_CLASSIFICATION	0.00894427581675305	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9910557241832469	WITHOUT_CLASSIFICATION	0.00894427581675305	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999981164631824	WITHOUT_CLASSIFICATION	1.8835368176018375E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9996725819620346	WITHOUT_CLASSIFICATION	3.274180379654718E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.999858837752667	WITHOUT_CLASSIFICATION	1.4116224733289558E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999719485663978	WITHOUT_CLASSIFICATION	2.805143360214394E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9994126130254356	WITHOUT_CLASSIFICATION	5.873869745644057E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996254971427735	WITHOUT_CLASSIFICATION	3.7450285722649636E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999834670674271	WITHOUT_CLASSIFICATION	1.653293257290793E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999030099421516	WITHOUT_CLASSIFICATION	9.699005784834415E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9973332637661175	WITHOUT_CLASSIFICATION	0.002666736233882391	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999812539028253	WITHOUT_CLASSIFICATION	1.8746097174673618E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9997975255703223	WITHOUT_CLASSIFICATION	2.024744296776719E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9998095908701223	WITHOUT_CLASSIFICATION	1.9040912987767136E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999746886212662	WITHOUT_CLASSIFICATION	2.5311378733938442E-5	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999568543050394	WITHOUT_CLASSIFICATION	4.314569496057554E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999700109151424	WITHOUT_CLASSIFICATION	2.998908485766652E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999439643314605	WITHOUT_CLASSIFICATION	5.603566853957876E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9920711831002601	WITHOUT_CLASSIFICATION	0.007928816899739958	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999636539904257	WITHOUT_CLASSIFICATION	3.6346009574338745E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9996265486117437	WITHOUT_CLASSIFICATION	3.734513882562403E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999759564339258	WITHOUT_CLASSIFICATION	2.4043566074238865E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999812359325537	WITHOUT_CLASSIFICATION	1.876406744627866E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999125112125695	WITHOUT_CLASSIFICATION	8.748878743045534E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9981859966948889	WITHOUT_CLASSIFICATION	0.0018140033051110393	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998809643877071	WITHOUT_CLASSIFICATION	1.1903561229284672E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9483805217443897	WITHOUT_CLASSIFICATION	0.05161947825561038	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9988966470052907	WITHOUT_CLASSIFICATION	0.0011033529947092962	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999866423228542	WITHOUT_CLASSIFICATION	1.3357677145849347E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999262327980071	WITHOUT_CLASSIFICATION	7.37672019929354E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999483285293987	WITHOUT_CLASSIFICATION	5.1671470601382455E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9994123083657342	WITHOUT_CLASSIFICATION	5.876916342657671E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9994773086759369	WITHOUT_CLASSIFICATION	5.226913240630685E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999866423228542	WITHOUT_CLASSIFICATION	1.3357677145849347E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999262327980071	WITHOUT_CLASSIFICATION	7.37672019929354E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.999756436043917	WITHOUT_CLASSIFICATION	2.4356395608309873E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.999756436043917	WITHOUT_CLASSIFICATION	2.4356395608309873E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9996903945878496	WITHOUT_CLASSIFICATION	3.0960541215042253E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.99985297242844	WITHOUT_CLASSIFICATION	1.4702757156002564E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999863730012956	WITHOUT_CLASSIFICATION	1.362699870444737E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9996903945878496	WITHOUT_CLASSIFICATION	3.0960541215042253E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.99985297242844	WITHOUT_CLASSIFICATION	1.4702757156002564E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999619412824048	WITHOUT_CLASSIFICATION	3.8058717595190925E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999221521528245	WITHOUT_CLASSIFICATION	7.784784717549274E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999738127429052	WITHOUT_CLASSIFICATION	2.6187257094869846E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.999925199211405	WITHOUT_CLASSIFICATION	7.480078859498848E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999738127429052	WITHOUT_CLASSIFICATION	2.6187257094869846E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999623851195351	WITHOUT_CLASSIFICATION	3.761488046502972E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9998890295133693	WITHOUT_CLASSIFICATION	1.1097048663063126E-4	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9998890295133693	WITHOUT_CLASSIFICATION	1.1097048663063126E-4	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9998903753541493	WITHOUT_CLASSIFICATION	1.0962464585070247E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999197816945378	WITHOUT_CLASSIFICATION	8.021830546225965E-5	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999289778878324	WITHOUT_CLASSIFICATION	7.102211216760356E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999749646456105	WITHOUT_CLASSIFICATION	2.503535438934652E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999873214628047	WITHOUT_CLASSIFICATION	1.2678537195301852E-5	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9998854555053831	WITHOUT_CLASSIFICATION	1.1454449461683507E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9998337771992246	WITHOUT_CLASSIFICATION	1.6622280077537117E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999446158120158	WITHOUT_CLASSIFICATION	5.538418798411088E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999929479392176	WITHOUT_CLASSIFICATION	7.052060782422025E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9997970930803143	WITHOUT_CLASSIFICATION	2.0290691968581238E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999885084816059	WITHOUT_CLASSIFICATION	1.149151839396999E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999258549300771	WITHOUT_CLASSIFICATION	7.41450699229055E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999074628687618	WITHOUT_CLASSIFICATION	9.253713123822714E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997968027448587	WITHOUT_CLASSIFICATION	2.0319725514127848E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9995891938527605	WITHOUT_CLASSIFICATION	4.108061472395863E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998325127117529	WITHOUT_CLASSIFICATION	1.6748728824723795E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9995276559858859	WITHOUT_CLASSIFICATION	4.7234401411420143E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895713697	WITHOUT_CLASSIFICATION	1.0428630299143471E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895713697	WITHOUT_CLASSIFICATION	1.0428630299143471E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999900217995695	WITHOUT_CLASSIFICATION	9.978200430507866E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999003268661746	WITHOUT_CLASSIFICATION	9.967313382549063E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999338157022969	WITHOUT_CLASSIFICATION	6.618429770304965E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9997682082596007	WITHOUT_CLASSIFICATION	2.3179174039943717E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9990299281495825	WITHOUT_CLASSIFICATION	9.700718504176259E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999740945242931	WITHOUT_CLASSIFICATION	2.5905475706846195E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997968027448587	WITHOUT_CLASSIFICATION	2.0319725514127848E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9954940066240885	WITHOUT_CLASSIFICATION	0.0045059933759114875	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9998121482094507	WITHOUT_CLASSIFICATION	1.878517905493038E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999692122138659	WITHOUT_CLASSIFICATION	3.07877861340118E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999934006438788	WITHOUT_CLASSIFICATION	6.59935612120724E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9995238612381878	WITHOUT_CLASSIFICATION	4.7613876181226656E-4	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9997373671762009	WITHOUT_CLASSIFICATION	2.626328237990624E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999731806020742	WITHOUT_CLASSIFICATION	2.6819397925711027E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999108419181931	WITHOUT_CLASSIFICATION	8.915808180690439E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9997958538626747	WITHOUT_CLASSIFICATION	2.041461373253653E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995478025261819	WITHOUT_CLASSIFICATION	4.521974738181248E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999993269810732	WITHOUT_CLASSIFICATION	6.730189267602041E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999937917409337	WITHOUT_CLASSIFICATION	6.208259066299001E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.999937917409337	WITHOUT_CLASSIFICATION	6.208259066299001E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9964923230386293	WITHOUT_CLASSIFICATION	0.0035076769613706497	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999742502551836	WITHOUT_CLASSIFICATION	2.5749744816490222E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999409054265437	WITHOUT_CLASSIFICATION	5.9094573456236456E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999934125912814	WITHOUT_CLASSIFICATION	6.5874087186327754E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999950109153732	WITHOUT_CLASSIFICATION	4.989084626807147E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999917419886445	WITHOUT_CLASSIFICATION	8.258011355488384E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9969939124599962	WITHOUT_CLASSIFICATION	0.003006087540003688	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.999946698151184	WITHOUT_CLASSIFICATION	5.330184881596329E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9998561511661201	WITHOUT_CLASSIFICATION	1.438488338799236E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9753888101231194	WITHOUT_CLASSIFICATION	0.02461118987688055	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999252988908356	WITHOUT_CLASSIFICATION	7.470110916448545E-5	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9991660044938606	WITHOUT_CLASSIFICATION	8.339955061394714E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9993164203468439	WITHOUT_CLASSIFICATION	6.835796531560394E-4	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9998998966202984	WITHOUT_CLASSIFICATION	1.0010337970165009E-4	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9809282610657447	WITHOUT_CLASSIFICATION	0.01907173893425521	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999609784565263	WITHOUT_CLASSIFICATION	3.9021543473706405E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999190097827017	WITHOUT_CLASSIFICATION	8.099021729841962E-5	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999954746912477	WITHOUT_CLASSIFICATION	4.52530875224422E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9989113726582634	WITHOUT_CLASSIFICATION	0.0010886273417366084	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999984440579693	WITHOUT_CLASSIFICATION	1.555942030602507E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999988608380429	WITHOUT_CLASSIFICATION	1.1391619571387446E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999752542961985	WITHOUT_CLASSIFICATION	2.474570380156975E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999873442473639	WITHOUT_CLASSIFICATION	1.2655752636122349E-5	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9998996435784372	WITHOUT_CLASSIFICATION	1.0035642156277888E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9996312176719407	WITHOUT_CLASSIFICATION	3.6878232805921034E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999931116181792	WITHOUT_CLASSIFICATION	6.88838182080327E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.999212932221662	WITHOUT_CLASSIFICATION	7.870677783380309E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9989779283219937	WITHOUT_CLASSIFICATION	0.0010220716780062987	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9949000940722313	WITHOUT_CLASSIFICATION	0.005099905927768651	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999493936154885	WITHOUT_CLASSIFICATION	5.060638451147908E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999896738579361	WITHOUT_CLASSIFICATION	1.03261420638964E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999896738579361	WITHOUT_CLASSIFICATION	1.03261420638964E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999780628445664	WITHOUT_CLASSIFICATION	2.1937155433702476E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999780628445664	WITHOUT_CLASSIFICATION	2.1937155433702476E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9983814067784478	WITHOUT_CLASSIFICATION	0.0016185932215522644	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.999956539818498	WITHOUT_CLASSIFICATION	4.346018150215482E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9992788475169867	WITHOUT_CLASSIFICATION	7.211524830133666E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9992788475169867	WITHOUT_CLASSIFICATION	7.211524830133666E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999029965408835	WITHOUT_CLASSIFICATION	9.700345911643025E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9996009435433544	WITHOUT_CLASSIFICATION	3.990564566456083E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999258549300771	WITHOUT_CLASSIFICATION	7.41450699229055E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999763298575289	WITHOUT_CLASSIFICATION	2.3670142470961337E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999763298575289	WITHOUT_CLASSIFICATION	2.3670142470961337E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999763298575289	WITHOUT_CLASSIFICATION	2.3670142470961337E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9996009435433544	WITHOUT_CLASSIFICATION	3.990564566456083E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9998760535253064	WITHOUT_CLASSIFICATION	1.239464746936271E-4	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999302521315703	WITHOUT_CLASSIFICATION	6.97478684297035E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9986384744349668	WITHOUT_CLASSIFICATION	0.0013615255650331602	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998933486586606	WITHOUT_CLASSIFICATION	1.0665134133925408E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999137350059147	WITHOUT_CLASSIFICATION	8.626499408536432E-5	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9994400827939609	WITHOUT_CLASSIFICATION	5.59917206039067E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999314739738849	WITHOUT_CLASSIFICATION	6.852602611508529E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999195930480015	WITHOUT_CLASSIFICATION	8.040695199849314E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9989661955229291	WITHOUT_CLASSIFICATION	0.001033804477070934	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999981164631824	WITHOUT_CLASSIFICATION	1.8835368176018375E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998633530707409	WITHOUT_CLASSIFICATION	1.3664692925904014E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999577657736687	WITHOUT_CLASSIFICATION	4.223422633125405E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999611304775295	WITHOUT_CLASSIFICATION	3.886952247042721E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999325692086335	WITHOUT_CLASSIFICATION	6.743079136649052E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999801932800318	WITHOUT_CLASSIFICATION	1.9806719968199087E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999905616695003	WITHOUT_CLASSIFICATION	9.438330499702803E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997825018468509	WITHOUT_CLASSIFICATION	2.1749815314899104E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998519607363354	WITHOUT_CLASSIFICATION	1.4803926366455962E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999703905539741	WITHOUT_CLASSIFICATION	2.960944602588522E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999477904522047	WITHOUT_CLASSIFICATION	5.220954779520068E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999549116111373	WITHOUT_CLASSIFICATION	4.508838886266326E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999625244677874	WITHOUT_CLASSIFICATION	3.747553221259429E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997865408080143	WITHOUT_CLASSIFICATION	2.1345919198569735E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998948706707478	WITHOUT_CLASSIFICATION	1.0512932925222464E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9994126130254356	WITHOUT_CLASSIFICATION	5.873869745644057E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9845497158492232	WITHOUT_CLASSIFICATION	0.015450284150776648	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999209174738409	WITHOUT_CLASSIFICATION	7.908252615898411E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996254971427735	WITHOUT_CLASSIFICATION	3.7450285722649636E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999834670674271	WITHOUT_CLASSIFICATION	1.653293257290793E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999030099421516	WITHOUT_CLASSIFICATION	9.699005784834415E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999865166829044	WITHOUT_CLASSIFICATION	1.3483317095688936E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9973332637661175	WITHOUT_CLASSIFICATION	0.002666736233882391	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999969604066368	WITHOUT_CLASSIFICATION	3.0395933632630963E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999830910391199	WITHOUT_CLASSIFICATION	1.6908960880140864E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999699413520339	WITHOUT_CLASSIFICATION	3.0058647966123102E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999939914410821	WITHOUT_CLASSIFICATION	6.008558917897363E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999812539028253	WITHOUT_CLASSIFICATION	1.8746097174673618E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9987338000253826	WITHOUT_CLASSIFICATION	0.001266199974617326	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995726668681592	WITHOUT_CLASSIFICATION	4.2733313184085617E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999176706529007	WITHOUT_CLASSIFICATION	8.232934709930567E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999812539028253	WITHOUT_CLASSIFICATION	1.8746097174673618E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999439643314605	WITHOUT_CLASSIFICATION	5.603566853957876E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9971773557968976	WITHOUT_CLASSIFICATION	0.0028226442031024567	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999766662136427	WITHOUT_CLASSIFICATION	2.3333786357311262E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9920711831002601	WITHOUT_CLASSIFICATION	0.007928816899739958	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.999980385982104	WITHOUT_CLASSIFICATION	1.961401789591555E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995726668681592	WITHOUT_CLASSIFICATION	4.2733313184085617E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9920711831002601	WITHOUT_CLASSIFICATION	0.007928816899739958	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.999770590566565	WITHOUT_CLASSIFICATION	2.2940943343501875E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999213118032175	WITHOUT_CLASSIFICATION	7.868819678249674E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999823534406843	WITHOUT_CLASSIFICATION	1.764655931578073E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999814113305943	WITHOUT_CLASSIFICATION	1.8588669405719745E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999388423378906	WITHOUT_CLASSIFICATION	6.115766210940283E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9998837395948463	WITHOUT_CLASSIFICATION	1.1626040515358416E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999388423378906	WITHOUT_CLASSIFICATION	6.115766210940283E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9996244850382433	WITHOUT_CLASSIFICATION	3.755149617566614E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9991440280115823	WITHOUT_CLASSIFICATION	8.559719884176556E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9927461665767268	WITHOUT_CLASSIFICATION	0.007253833423273179	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999865463018698	WITHOUT_CLASSIFICATION	1.3453698130222904E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998737699660915	WITHOUT_CLASSIFICATION	1.2623003390856865E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9998846143799786	WITHOUT_CLASSIFICATION	1.1538562002144014E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9992609285472506	WITHOUT_CLASSIFICATION	7.39071452749555E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.998396307298997	WITHOUT_CLASSIFICATION	0.0016036927010030313	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999814580442149	WITHOUT_CLASSIFICATION	1.8541955785102052E-5	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.999414972292296	WITHOUT_CLASSIFICATION	5.850277077040955E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9991750605591327	WITHOUT_CLASSIFICATION	8.249394408671917E-4	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.999941070901053	WITHOUT_CLASSIFICATION	5.8929098947037254E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9995663570898133	WITHOUT_CLASSIFICATION	4.336429101866578E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999372547601328	WITHOUT_CLASSIFICATION	6.274523986713536E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999928128569291	WITHOUT_CLASSIFICATION	7.187143070896423E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999813700738059	WITHOUT_CLASSIFICATION	1.8629926194052037E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9949983421806762	WITHOUT_CLASSIFICATION	0.005001657819323884	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9988223032607233	WITHOUT_CLASSIFICATION	0.001177696739276682	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9998273850575791	WITHOUT_CLASSIFICATION	1.7261494242095112E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.999980787661801	WITHOUT_CLASSIFICATION	1.9212338199005417E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999539161535518	WITHOUT_CLASSIFICATION	4.608384644822108E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9998276195655685	WITHOUT_CLASSIFICATION	1.7238043443152152E-4	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999529512310299	WITHOUT_CLASSIFICATION	4.704876897002649E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999863094156395	WITHOUT_CLASSIFICATION	1.3690584360439978E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999589485353492	WITHOUT_CLASSIFICATION	4.1051464650871026E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999325989356397	WITHOUT_CLASSIFICATION	6.740106436027209E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999945122319553	WITHOUT_CLASSIFICATION	5.487768044678227E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999883811451296	WITHOUT_CLASSIFICATION	1.16188548704147E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999653270584955	WITHOUT_CLASSIFICATION	3.467294150445857E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9998886684978493	WITHOUT_CLASSIFICATION	1.1133150215071708E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999765712574674	WITHOUT_CLASSIFICATION	2.3428742532522712E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999811152415113	WITHOUT_CLASSIFICATION	1.8884758488650994E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999755272264578	WITHOUT_CLASSIFICATION	2.4472773542261565E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999932913834692	WITHOUT_CLASSIFICATION	6.708616530839423E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.999967592320748	WITHOUT_CLASSIFICATION	3.240767925198662E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9985915140889662	WITHOUT_CLASSIFICATION	0.0014084859110337264	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999708918267507	WITHOUT_CLASSIFICATION	2.9108173249374824E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999871448272658	WITHOUT_CLASSIFICATION	1.2855172734218181E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999636539904257	WITHOUT_CLASSIFICATION	3.6346009574338745E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999412154178048	WITHOUT_CLASSIFICATION	5.878458219523554E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999576372880888	WITHOUT_CLASSIFICATION	4.2362711911159884E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999830168293917	WITHOUT_CLASSIFICATION	1.6983170608336767E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999899665633989	WITHOUT_CLASSIFICATION	1.0033436601213908E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999907701924077	WITHOUT_CLASSIFICATION	9.229807592324856E-6	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9990415864064218	WITHOUT_CLASSIFICATION	9.58413593578217E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9891357419764777	WITHOUT_CLASSIFICATION	0.01086425802352236	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999302057605968	WITHOUT_CLASSIFICATION	6.979423940317583E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.999873374585584	WITHOUT_CLASSIFICATION	1.266254144160077E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999197816945378	WITHOUT_CLASSIFICATION	8.021830546225965E-5	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9989509611068611	WITHOUT_CLASSIFICATION	0.0010490388931389202	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999304850075217	WITHOUT_CLASSIFICATION	6.951499247840308E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999693131908463	WITHOUT_CLASSIFICATION	3.068680915371953E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999943693348544	WITHOUT_CLASSIFICATION	5.63066514555736E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999949210182051	WITHOUT_CLASSIFICATION	5.07898179483409E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.999775103907573	WITHOUT_CLASSIFICATION	2.2489609242701082E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.999569374040085	WITHOUT_CLASSIFICATION	4.3062595991507984E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9998099960051703	WITHOUT_CLASSIFICATION	1.9000399482959831E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999406041480684	WITHOUT_CLASSIFICATION	5.939585193166175E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999950927842725	WITHOUT_CLASSIFICATION	4.907215727546275E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999993467846449	WITHOUT_CLASSIFICATION	6.532153550951022E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998325127117529	WITHOUT_CLASSIFICATION	1.6748728824723795E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9995276559858859	WITHOUT_CLASSIFICATION	4.7234401411420143E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999740945242931	WITHOUT_CLASSIFICATION	2.5905475706846195E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.999775103907573	WITHOUT_CLASSIFICATION	2.2489609242701082E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999950927842725	WITHOUT_CLASSIFICATION	4.907215727546275E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.999993467846449	WITHOUT_CLASSIFICATION	6.532153550951022E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999170088800059	WITHOUT_CLASSIFICATION	8.299111999406996E-5	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.999975763014637	WITHOUT_CLASSIFICATION	2.4236985362945934E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9998959312546449	WITHOUT_CLASSIFICATION	1.040687453550577E-4	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9995021981143037	WITHOUT_CLASSIFICATION	4.978018856963116E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999943693348544	WITHOUT_CLASSIFICATION	5.63066514555736E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999949210182051	WITHOUT_CLASSIFICATION	5.07898179483409E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999544769101109	WITHOUT_CLASSIFICATION	4.55230898891245E-5	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.999974674811438	WITHOUT_CLASSIFICATION	2.5325188562032473E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999790445921579	WITHOUT_CLASSIFICATION	2.0955407842070457E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9995826587585137	WITHOUT_CLASSIFICATION	4.1734124148620197E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999713473966566	WITHOUT_CLASSIFICATION	2.8652603343425235E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9981836686533767	WITHOUT_CLASSIFICATION	0.001816331346623238	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999693647497754	WITHOUT_CLASSIFICATION	3.063525022451486E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.99981085087759	WITHOUT_CLASSIFICATION	1.8914912241003903E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9998956201578797	WITHOUT_CLASSIFICATION	1.0437984212031853E-4	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999711298232811	WITHOUT_CLASSIFICATION	2.8870176718891307E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9778729515794624	WITHOUT_CLASSIFICATION	0.02212704842053759	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999515581702139	WITHOUT_CLASSIFICATION	4.8441829786078844E-5	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999920540956446	WITHOUT_CLASSIFICATION	7.945904355361095E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999969299083986	WITHOUT_CLASSIFICATION	3.0700916012774172E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999644600754863	WITHOUT_CLASSIFICATION	3.5539924513593766E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999997630507665	WITHOUT_CLASSIFICATION	2.3694923343470515E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999943693348544	WITHOUT_CLASSIFICATION	5.63066514555736E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999949210182051	WITHOUT_CLASSIFICATION	5.07898179483409E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999725402806087	WITHOUT_CLASSIFICATION	2.7459719391331725E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9996529383480602	WITHOUT_CLASSIFICATION	3.470616519397792E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.999988719786736	WITHOUT_CLASSIFICATION	1.1280213263993662E-5	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999102746594528	WITHOUT_CLASSIFICATION	8.972534054726274E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999927239491058	WITHOUT_CLASSIFICATION	7.276050894140511E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999088311140394	WITHOUT_CLASSIFICATION	9.116888596065786E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9762505926684781	WITHOUT_CLASSIFICATION	0.023749407331521862	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9995653267717279	WITHOUT_CLASSIFICATION	4.3467322827211167E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998193059499225	WITHOUT_CLASSIFICATION	1.806940500776109E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998193059499225	WITHOUT_CLASSIFICATION	1.806940500776109E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9985991567452334	WITHOUT_CLASSIFICATION	0.0014008432547665908	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9996771356682237	WITHOUT_CLASSIFICATION	3.2286433177636687E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9973779611352286	WITHOUT_CLASSIFICATION	0.0026220388647713107	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9996771962010658	WITHOUT_CLASSIFICATION	3.2280379893425245E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999772816730965	WITHOUT_CLASSIFICATION	2.2718326903440425E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999642364981507	WITHOUT_CLASSIFICATION	3.576350184935262E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9997691044771224	WITHOUT_CLASSIFICATION	2.3089552287761285E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9997691044771224	WITHOUT_CLASSIFICATION	2.3089552287761285E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999739109068047	WITHOUT_CLASSIFICATION	2.6089093195369445E-5	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.999926030199992	WITHOUT_CLASSIFICATION	7.39698000079577E-5	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999863477995643	WITHOUT_CLASSIFICATION	1.3652200435710727E-5	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.999966289981897	WITHOUT_CLASSIFICATION	3.371001810307009E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999380225393286	WITHOUT_CLASSIFICATION	6.197746067140085E-5	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9998120211305555	WITHOUT_CLASSIFICATION	1.8797886944449415E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999875762589926	WITHOUT_CLASSIFICATION	1.2423741007418292E-5	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9997343637354834	WITHOUT_CLASSIFICATION	2.6563626451655626E-4	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999378691085241	WITHOUT_CLASSIFICATION	6.213089147584939E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999977926364997	WITHOUT_CLASSIFICATION	2.2073635003334544E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.999985627813299	WITHOUT_CLASSIFICATION	1.4372186700987971E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999996381563043	WITHOUT_CLASSIFICATION	3.618436957022112E-6	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9997445095136019	WITHOUT_CLASSIFICATION	2.554904863980213E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9998811908098195	WITHOUT_CLASSIFICATION	1.188091901804727E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9995433451559917	WITHOUT_CLASSIFICATION	4.5665484400819E-4	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999815476925462	WITHOUT_CLASSIFICATION	1.845230745384564E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999982012821448	WITHOUT_CLASSIFICATION	1.798717855195604E-5	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999907180329172	WITHOUT_CLASSIFICATION	9.281967082869783E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999534333291944	WITHOUT_CLASSIFICATION	4.656667080564928E-5	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999605594336387	WITHOUT_CLASSIFICATION	3.944056636130383E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9993645574182087	WITHOUT_CLASSIFICATION	6.354425817912331E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999990746247177	WITHOUT_CLASSIFICATION	9.253752822924042E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999839797495753	WITHOUT_CLASSIFICATION	1.6020250424683414E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.99916623821541	WITHOUT_CLASSIFICATION	8.337617845901078E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9997892197159027	WITHOUT_CLASSIFICATION	2.1078028409720787E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999858883921905	WITHOUT_CLASSIFICATION	1.4111607809507366E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999897827507753	WITHOUT_CLASSIFICATION	1.021724922470421E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9996578869423054	WITHOUT_CLASSIFICATION	3.421130576946722E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999047796973408	WITHOUT_CLASSIFICATION	9.522030265919447E-5	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.999996165075032	WITHOUT_CLASSIFICATION	3.834924968052732E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999846372792199	WITHOUT_CLASSIFICATION	1.536272078011007E-5	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999346987402117	WITHOUT_CLASSIFICATION	6.530125978831844E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9996609938191793	WITHOUT_CLASSIFICATION	3.390061808207614E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.999993778669467	WITHOUT_CLASSIFICATION	6.221330532974608E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9993631990991615	WITHOUT_CLASSIFICATION	6.368009008384608E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9995095171248907	WITHOUT_CLASSIFICATION	4.904828751092932E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999944858545383	WITHOUT_CLASSIFICATION	5.514145461684899E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9998296154960811	WITHOUT_CLASSIFICATION	1.70384503918866E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999868472167863	WITHOUT_CLASSIFICATION	1.3152783213787054E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569008990349	WITHOUT_CLASSIFICATION	4.309910096506973E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999872558786552	WITHOUT_CLASSIFICATION	1.2744121344812325E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.999889304183373	WITHOUT_CLASSIFICATION	1.1069581662706619E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999960212558879	WITHOUT_CLASSIFICATION	3.9787441120974286E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.999866845379111	WITHOUT_CLASSIFICATION	1.331546208889884E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9996976601943075	WITHOUT_CLASSIFICATION	3.023398056924431E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999872558786552	WITHOUT_CLASSIFICATION	1.2744121344812325E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999960212558879	WITHOUT_CLASSIFICATION	3.9787441120974286E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9984823891221919	WITHOUT_CLASSIFICATION	0.0015176108778081254	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.999963956069186	WITHOUT_CLASSIFICATION	3.6043930814115645E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9998549505185648	WITHOUT_CLASSIFICATION	1.450494814352062E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999911486525364	WITHOUT_CLASSIFICATION	8.851347463666262E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569008990349	WITHOUT_CLASSIFICATION	4.309910096506973E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569008990349	WITHOUT_CLASSIFICATION	4.309910096506973E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999872558786552	WITHOUT_CLASSIFICATION	1.2744121344812325E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.999978854718644	WITHOUT_CLASSIFICATION	2.114528135601991E-5	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999023511062161	WITHOUT_CLASSIFICATION	9.764889378397066E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999677099582536	WITHOUT_CLASSIFICATION	3.2290041746437095E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999677099582536	WITHOUT_CLASSIFICATION	3.2290041746437095E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998357848764792	WITHOUT_CLASSIFICATION	1.6421512352077979E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998312230457902	WITHOUT_CLASSIFICATION	1.6877695420969364E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999186650133853	WITHOUT_CLASSIFICATION	8.133498661464508E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999186650133853	WITHOUT_CLASSIFICATION	8.133498661464508E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9990458092080392	WITHOUT_CLASSIFICATION	9.541907919607808E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998312230457902	WITHOUT_CLASSIFICATION	1.6877695420969364E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999186650133853	WITHOUT_CLASSIFICATION	8.133498661464508E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9990458092080392	WITHOUT_CLASSIFICATION	9.541907919607808E-4	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9998922297036186	WITHOUT_CLASSIFICATION	1.0777029638142691E-4	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.999332258876093	WITHOUT_CLASSIFICATION	6.677411239069218E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9998374360218268	WITHOUT_CLASSIFICATION	1.6256397817317224E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9997655512731733	WITHOUT_CLASSIFICATION	2.344487268266956E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9997368509196076	WITHOUT_CLASSIFICATION	2.631490803924757E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999798067770118	WITHOUT_CLASSIFICATION	2.0193222988235276E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998625827493585	WITHOUT_CLASSIFICATION	1.3741725064153075E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9997551597921611	WITHOUT_CLASSIFICATION	2.4484020783883156E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9996876495770111	WITHOUT_CLASSIFICATION	3.1235042298895894E-4	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9998520950500664	WITHOUT_CLASSIFICATION	1.47904949933554E-4	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999882398982382	WITHOUT_CLASSIFICATION	1.1760101761874708E-5	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999947386955504	WITHOUT_CLASSIFICATION	5.2613044495118115E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999945021179409	WITHOUT_CLASSIFICATION	5.497882059004487E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999892226308779	WITHOUT_CLASSIFICATION	1.0777369122003044E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9998300251741158	WITHOUT_CLASSIFICATION	1.6997482588413241E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9997363183858147	WITHOUT_CLASSIFICATION	2.6368161418535507E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9991893061185134	WITHOUT_CLASSIFICATION	8.106938814866641E-4	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9998472579815588	WITHOUT_CLASSIFICATION	1.5274201844122745E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.999995802327453	WITHOUT_CLASSIFICATION	4.197672547048496E-6	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999634307425754	WITHOUT_CLASSIFICATION	3.656925742450044E-5	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999768967164527	WITHOUT_CLASSIFICATION	2.3103283547262468E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999753276226363	WITHOUT_CLASSIFICATION	2.467237736371403E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.999974884052826	WITHOUT_CLASSIFICATION	2.511594717395657E-5	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999936074423299	WITHOUT_CLASSIFICATION	6.39255767009727E-6	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999152914053607	WITHOUT_CLASSIFICATION	8.470859463926181E-5	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999367262071763	WITHOUT_CLASSIFICATION	6.327379282358872E-5	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999797363269584	WITHOUT_CLASSIFICATION	2.0263673041688675E-5	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.99988443435303	WITHOUT_CLASSIFICATION	1.1556564696993202E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9996293430864273	WITHOUT_CLASSIFICATION	3.706569135727088E-4	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999809007174071	WITHOUT_CLASSIFICATION	1.9099282592906667E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998758994103085	WITHOUT_CLASSIFICATION	1.2410058969144E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999470734064491	WITHOUT_CLASSIFICATION	5.2926593550991446E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999615310906235	WITHOUT_CLASSIFICATION	3.8468909376466265E-5	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999027311160912	WITHOUT_CLASSIFICATION	9.726888390874731E-5	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.999994542519677	WITHOUT_CLASSIFICATION	5.457480323041798E-6	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998679280488639	WITHOUT_CLASSIFICATION	1.3207195113602084E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998256002588232	WITHOUT_CLASSIFICATION	1.74399741176926E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998256002588232	WITHOUT_CLASSIFICATION	1.74399741176926E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998256002588232	WITHOUT_CLASSIFICATION	1.74399741176926E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999991376439137	WITHOUT_CLASSIFICATION	8.62356086365424E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.99977646468532	WITHOUT_CLASSIFICATION	2.2353531468006336E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9961971147077908	WITHOUT_CLASSIFICATION	0.0038028852922091594	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9989041420859652	WITHOUT_CLASSIFICATION	0.0010958579140347602	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999436182349647	WITHOUT_CLASSIFICATION	5.638176503517542E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999463792559926	WITHOUT_CLASSIFICATION	5.362074400727843E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999964693118647	WITHOUT_CLASSIFICATION	3.530688135342318E-6	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9998316131314863	WITHOUT_CLASSIFICATION	1.6838686851376733E-4	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999295205614075	WITHOUT_CLASSIFICATION	7.04794385924888E-5	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999695375855955	WITHOUT_CLASSIFICATION	3.0462414404491327E-5	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9947252323503589	WITHOUT_CLASSIFICATION	0.005274767649641111	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.999942298004485	WITHOUT_CLASSIFICATION	5.770199551506289E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999847099556973	WITHOUT_CLASSIFICATION	1.529004430266396E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9998293460993712	WITHOUT_CLASSIFICATION	1.706539006287169E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9993338643033746	WITHOUT_CLASSIFICATION	6.661356966253812E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.999999329257834	WITHOUT_CLASSIFICATION	6.707421659302584E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999699956633387	WITHOUT_CLASSIFICATION	3.000433666135376E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.999992537904944	WITHOUT_CLASSIFICATION	7.462095056008166E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999540378151053	WITHOUT_CLASSIFICATION	4.596218489480685E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9997895937137583	WITHOUT_CLASSIFICATION	2.104062862417849E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.999917845138237	WITHOUT_CLASSIFICATION	8.215486176299991E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9996657179487216	WITHOUT_CLASSIFICATION	3.3428205127833226E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9997736301669078	WITHOUT_CLASSIFICATION	2.2636983309223677E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9975510367497838	WITHOUT_CLASSIFICATION	0.002448963250216242	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999982880233587	WITHOUT_CLASSIFICATION	1.7119766412894101E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999813451706507	WITHOUT_CLASSIFICATION	1.865482934923623E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999931181013163	WITHOUT_CLASSIFICATION	6.881898683783605E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999891481929791	WITHOUT_CLASSIFICATION	1.0851807020923514E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999504927990727	WITHOUT_CLASSIFICATION	4.950720092732958E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999383118834262	WITHOUT_CLASSIFICATION	6.16881165738092E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999498148256794	WITHOUT_CLASSIFICATION	5.018517432065557E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.994687466380214	WITHOUT_CLASSIFICATION	0.005312533619785951	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9993007679956389	WITHOUT_CLASSIFICATION	6.992320043611982E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999539526809486	WITHOUT_CLASSIFICATION	4.6047319051359105E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9998211312067149	WITHOUT_CLASSIFICATION	1.7886879328495638E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9997583371405921	WITHOUT_CLASSIFICATION	2.4166285940786135E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999927086621708	WITHOUT_CLASSIFICATION	7.291337829246816E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9998237804012207	WITHOUT_CLASSIFICATION	1.7621959877944793E-4	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999500677036509	WITHOUT_CLASSIFICATION	4.9932296349059024E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999524047881728	WITHOUT_CLASSIFICATION	4.759521182728719E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999801461093721	WITHOUT_CLASSIFICATION	1.9853890627778034E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999505917951024	WITHOUT_CLASSIFICATION	4.940820489762105E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999088311140394	WITHOUT_CLASSIFICATION	9.116888596065786E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999917287084539	WITHOUT_CLASSIFICATION	8.271291546132994E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999312369346488	WITHOUT_CLASSIFICATION	6.876306535113523E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999708463268071	WITHOUT_CLASSIFICATION	2.915367319291075E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9953592215533287	WITHOUT_CLASSIFICATION	0.004640778446671324	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9941308688510955	WITHOUT_CLASSIFICATION	0.005869131148904546	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9975736805042866	WITHOUT_CLASSIFICATION	0.002426319495713356	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998762639445951	WITHOUT_CLASSIFICATION	1.2373605540497918E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999836050956923	WITHOUT_CLASSIFICATION	1.6394904307745076E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9989935302920688	WITHOUT_CLASSIFICATION	0.0010064697079312515	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998546480937969	WITHOUT_CLASSIFICATION	1.453519062030946E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999351384458688	WITHOUT_CLASSIFICATION	6.486155413112432E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999877787198939	WITHOUT_CLASSIFICATION	1.2221280106134153E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999354064647512	WITHOUT_CLASSIFICATION	6.459353524875749E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9980512349393431	WITHOUT_CLASSIFICATION	0.0019487650606568746	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999584488874883	WITHOUT_CLASSIFICATION	4.155111251176294E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999485019843033	WITHOUT_CLASSIFICATION	5.1498015696656466E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9998755149732258	WITHOUT_CLASSIFICATION	1.2448502677413366E-4	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9997810593343921	WITHOUT_CLASSIFICATION	2.1894066560800655E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.999827330271754	WITHOUT_CLASSIFICATION	1.7266972824605279E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9996382010557466	WITHOUT_CLASSIFICATION	3.6179894425333235E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999124956909875	WITHOUT_CLASSIFICATION	8.750430901247932E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9885334220329507	WITHOUT_CLASSIFICATION	0.011466577967049389	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999490976217512	WITHOUT_CLASSIFICATION	5.090237824888258E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999011975176805	WITHOUT_CLASSIFICATION	9.880248231962209E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999884964765722	WITHOUT_CLASSIFICATION	1.15035234278394E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999884964765722	WITHOUT_CLASSIFICATION	1.15035234278394E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999490976217512	WITHOUT_CLASSIFICATION	5.090237824888258E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999381585808172	WITHOUT_CLASSIFICATION	6.184141918277534E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9998982002861749	WITHOUT_CLASSIFICATION	1.0179971382501165E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9998982002861749	WITHOUT_CLASSIFICATION	1.0179971382501165E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999482688057216	WITHOUT_CLASSIFICATION	5.173119427836694E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999727874276647	WITHOUT_CLASSIFICATION	2.7212572335252484E-5	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9998969077235432	WITHOUT_CLASSIFICATION	1.030922764567506E-4	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9972573132623884	WITHOUT_CLASSIFICATION	0.0027426867376115923	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9997795801046887	WITHOUT_CLASSIFICATION	2.2041989531132079E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999559457375485	WITHOUT_CLASSIFICATION	4.4054262451547124E-5	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9998754360568967	WITHOUT_CLASSIFICATION	1.245639431032343E-4	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9997305529324869	WITHOUT_CLASSIFICATION	2.6944706751301544E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9997332945945858	WITHOUT_CLASSIFICATION	2.667054054141573E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9998571600227083	WITHOUT_CLASSIFICATION	1.4283997729179864E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999778867069369	WITHOUT_CLASSIFICATION	2.211329306312868E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999980458319074	WITHOUT_CLASSIFICATION	1.9541680926083456E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999961299285159	WITHOUT_CLASSIFICATION	3.8700714841029535E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999523910605903	WITHOUT_CLASSIFICATION	4.760893940964664E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999472662165269	WITHOUT_CLASSIFICATION	5.2733783473200404E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999799818418234	WITHOUT_CLASSIFICATION	2.0018158176736788E-5	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999880059365679	WITHOUT_CLASSIFICATION	1.1994063432040403E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9999118678078202	WITHOUT_CLASSIFICATION	8.81321921799265E-5	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9953155012228246	WITHOUT_CLASSIFICATION	0.004684498777175357	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9998419771747044	WITHOUT_CLASSIFICATION	1.5802282529562336E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999984549928006	WITHOUT_CLASSIFICATION	1.5450071994260504E-6	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.999615973304511	WITHOUT_CLASSIFICATION	3.8402669548893737E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998355542473076	WITHOUT_CLASSIFICATION	1.644457526923721E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999790854614998	WITHOUT_CLASSIFICATION	2.091453850028355E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999790854614998	WITHOUT_CLASSIFICATION	2.091453850028355E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.999716096480957	WITHOUT_CLASSIFICATION	2.839035190429716E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9990579661870685	WITHOUT_CLASSIFICATION	9.420338129315524E-4	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9997877591629161	WITHOUT_CLASSIFICATION	2.122408370839407E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999882310789584	WITHOUT_CLASSIFICATION	1.1768921041594116E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999728497789088	WITHOUT_CLASSIFICATION	2.7150221091209643E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999767362083134	WITHOUT_CLASSIFICATION	2.326379168664322E-5	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999549739878872	WITHOUT_CLASSIFICATION	4.502601211263821E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9998473466834829	WITHOUT_CLASSIFICATION	1.5265331651722312E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997423109202542	WITHOUT_CLASSIFICATION	2.576890797458171E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9991525411540086	WITHOUT_CLASSIFICATION	8.474588459913366E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999451101235162	WITHOUT_CLASSIFICATION	5.488987648368879E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9997368570028203	WITHOUT_CLASSIFICATION	2.631429971797071E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9997270063636478	WITHOUT_CLASSIFICATION	2.7299363635221026E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999053094369047	WITHOUT_CLASSIFICATION	9.469056309528742E-5	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999878636073496	WITHOUT_CLASSIFICATION	1.2136392650438285E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999858559750454	WITHOUT_CLASSIFICATION	1.4144024954547379E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9993227543949201	WITHOUT_CLASSIFICATION	6.772456050798961E-4	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999858559750454	WITHOUT_CLASSIFICATION	1.4144024954547379E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998809643877071	WITHOUT_CLASSIFICATION	1.1903561229284672E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999299971105463	WITHOUT_CLASSIFICATION	7.000288945370033E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999045098927135	WITHOUT_CLASSIFICATION	9.54901072864276E-5	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999939473509888	WITHOUT_CLASSIFICATION	6.052649011284072E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9995897281365548	WITHOUT_CLASSIFICATION	4.102718634451878E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9995357903028421	WITHOUT_CLASSIFICATION	4.6420969715796047E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999781312339262	WITHOUT_CLASSIFICATION	2.186876607380623E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999675011126611	WITHOUT_CLASSIFICATION	3.2498887338943614E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999856545949832	WITHOUT_CLASSIFICATION	1.4345405016721677E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999519890366374	WITHOUT_CLASSIFICATION	4.8010963362600206E-5	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999394108690349	WITHOUT_CLASSIFICATION	6.058913096494257E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.99987183045798	WITHOUT_CLASSIFICATION	1.281695420199035E-4	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999559164068622	WITHOUT_CLASSIFICATION	4.408359313778698E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999946081971366	WITHOUT_CLASSIFICATION	5.391802863380654E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9998844511546754	WITHOUT_CLASSIFICATION	1.1554884532467174E-4	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999332848000702	WITHOUT_CLASSIFICATION	6.671519992988691E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.999795040531564	WITHOUT_CLASSIFICATION	2.0495946843594235E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9998537300245569	WITHOUT_CLASSIFICATION	1.462699754430701E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9998063845270889	WITHOUT_CLASSIFICATION	1.936154729111408E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999820192791614	WITHOUT_CLASSIFICATION	1.7980720838532084E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9995201067825781	WITHOUT_CLASSIFICATION	4.7989321742194547E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9993715231937383	WITHOUT_CLASSIFICATION	6.284768062615511E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999949323484467	WITHOUT_CLASSIFICATION	5.067651553332253E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999786722032602	WITHOUT_CLASSIFICATION	2.1327796739796562E-5	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.999984316757295	WITHOUT_CLASSIFICATION	1.5683242705025564E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999314739738849	WITHOUT_CLASSIFICATION	6.852602611508529E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999195930480015	WITHOUT_CLASSIFICATION	8.040695199849314E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997423109202542	WITHOUT_CLASSIFICATION	2.576890797458171E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9991525411540086	WITHOUT_CLASSIFICATION	8.474588459913366E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999451101235162	WITHOUT_CLASSIFICATION	5.488987648368879E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999560559590511	WITHOUT_CLASSIFICATION	4.394404094889255E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9997226883304889	WITHOUT_CLASSIFICATION	2.7731166951110034E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999812019500631	WITHOUT_CLASSIFICATION	1.8798049936861E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9997527712046534	WITHOUT_CLASSIFICATION	2.472287953464992E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9998148481635287	WITHOUT_CLASSIFICATION	1.8515183647132915E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9997840772203697	WITHOUT_CLASSIFICATION	2.1592277963029843E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9995991700118366	WITHOUT_CLASSIFICATION	4.0082998816328016E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9998726350574069	WITHOUT_CLASSIFICATION	1.2736494259313512E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9998972449402385	WITHOUT_CLASSIFICATION	1.0275505976160796E-4	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999747537007985	WITHOUT_CLASSIFICATION	2.5246299201525174E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.999795139297444	WITHOUT_CLASSIFICATION	2.04860702555977E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.999795139297444	WITHOUT_CLASSIFICATION	2.04860702555977E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999974236798554	WITHOUT_CLASSIFICATION	2.5763201445909318E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999266944989981	WITHOUT_CLASSIFICATION	7.33055010019084E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999863805481058	WITHOUT_CLASSIFICATION	1.3619451894272949E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999766206043532	WITHOUT_CLASSIFICATION	2.3379395646706784E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9998373304469732	WITHOUT_CLASSIFICATION	1.626695530267396E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999871507034648	WITHOUT_CLASSIFICATION	1.2849296535218638E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999933537461975	WITHOUT_CLASSIFICATION	6.646253802585865E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999926853924225	WITHOUT_CLASSIFICATION	7.314607577581502E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999795008964326	WITHOUT_CLASSIFICATION	2.0499103567422658E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999979104955644	WITHOUT_CLASSIFICATION	2.0895044356225232E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998584125923	WITHOUT_CLASSIFICATION	1.4158740764300786E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999662628502166	WITHOUT_CLASSIFICATION	3.37371497833988E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999921950604075	WITHOUT_CLASSIFICATION	7.804939592458646E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985950302585038	WITHOUT_CLASSIFICATION	0.001404969741496145	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994705916269556	WITHOUT_CLASSIFICATION	5.29408373044316E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9994983405021118	WITHOUT_CLASSIFICATION	5.01659497888087E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999967560979702	WITHOUT_CLASSIFICATION	3.243902029802611E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9989661955229291	WITHOUT_CLASSIFICATION	0.001033804477070934	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999981164631824	WITHOUT_CLASSIFICATION	1.8835368176018375E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998633530707409	WITHOUT_CLASSIFICATION	1.3664692925904014E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999577657736687	WITHOUT_CLASSIFICATION	4.223422633125405E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999611304775295	WITHOUT_CLASSIFICATION	3.886952247042721E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999325692086335	WITHOUT_CLASSIFICATION	6.743079136649052E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999801932800318	WITHOUT_CLASSIFICATION	1.9806719968199087E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999905616695003	WITHOUT_CLASSIFICATION	9.438330499702803E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997825018468509	WITHOUT_CLASSIFICATION	2.1749815314899104E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998519607363354	WITHOUT_CLASSIFICATION	1.4803926366455962E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999703905539741	WITHOUT_CLASSIFICATION	2.960944602588522E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999477904522047	WITHOUT_CLASSIFICATION	5.220954779520068E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999549116111373	WITHOUT_CLASSIFICATION	4.508838886266326E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999625244677874	WITHOUT_CLASSIFICATION	3.747553221259429E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9994126130254356	WITHOUT_CLASSIFICATION	5.873869745644057E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9845497158492232	WITHOUT_CLASSIFICATION	0.015450284150776648	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999209174738409	WITHOUT_CLASSIFICATION	7.908252615898411E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996254971427735	WITHOUT_CLASSIFICATION	3.7450285722649636E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999834670674271	WITHOUT_CLASSIFICATION	1.653293257290793E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999030099421516	WITHOUT_CLASSIFICATION	9.699005784834415E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999865166829044	WITHOUT_CLASSIFICATION	1.3483317095688936E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999969604066368	WITHOUT_CLASSIFICATION	3.0395933632630963E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999939914410821	WITHOUT_CLASSIFICATION	6.008558917897363E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9987338000253826	WITHOUT_CLASSIFICATION	0.001266199974617326	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995726668681592	WITHOUT_CLASSIFICATION	4.2733313184085617E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999699413520339	WITHOUT_CLASSIFICATION	3.0058647966123102E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9971773557968976	WITHOUT_CLASSIFICATION	0.0028226442031024567	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999439643314605	WITHOUT_CLASSIFICATION	5.603566853957876E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9920711831002601	WITHOUT_CLASSIFICATION	0.007928816899739958	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999974236798554	WITHOUT_CLASSIFICATION	2.5763201445909318E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999266944989981	WITHOUT_CLASSIFICATION	7.33055010019084E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999863805481058	WITHOUT_CLASSIFICATION	1.3619451894272949E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999766206043532	WITHOUT_CLASSIFICATION	2.3379395646706784E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999933537461975	WITHOUT_CLASSIFICATION	6.646253802585865E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999926853924225	WITHOUT_CLASSIFICATION	7.314607577581502E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9990036948323141	WITHOUT_CLASSIFICATION	9.963051676858405E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999823534406843	WITHOUT_CLASSIFICATION	1.764655931578073E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999814113305943	WITHOUT_CLASSIFICATION	1.8588669405719745E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998584125923	WITHOUT_CLASSIFICATION	1.4158740764300786E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999662628502166	WITHOUT_CLASSIFICATION	3.37371497833988E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999921950604075	WITHOUT_CLASSIFICATION	7.804939592458646E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985950302585038	WITHOUT_CLASSIFICATION	0.001404969741496145	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9994983405021118	WITHOUT_CLASSIFICATION	5.01659497888087E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999502400343712	WITHOUT_CLASSIFICATION	4.975996562880277E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999502400343712	WITHOUT_CLASSIFICATION	4.975996562880277E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999964396260692	WITHOUT_CLASSIFICATION	3.5603739309265324E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9996277922456831	WITHOUT_CLASSIFICATION	3.72207754316871E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999874919091735	WITHOUT_CLASSIFICATION	1.2508090826390594E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999375246045759	WITHOUT_CLASSIFICATION	6.247539542408958E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9998059910140836	WITHOUT_CLASSIFICATION	1.9400898591632153E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9995700953916138	WITHOUT_CLASSIFICATION	4.2990460838629235E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9998186915637595	WITHOUT_CLASSIFICATION	1.8130843624052082E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9998613548324439	WITHOUT_CLASSIFICATION	1.3864516755615245E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9998186915637595	WITHOUT_CLASSIFICATION	1.8130843624052082E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9994284158014805	WITHOUT_CLASSIFICATION	5.715841985196485E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999007485666063	WITHOUT_CLASSIFICATION	9.925143339368746E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998002921822109	WITHOUT_CLASSIFICATION	1.997078177890839E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998002921822109	WITHOUT_CLASSIFICATION	1.997078177890839E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9997214182798723	WITHOUT_CLASSIFICATION	2.785817201277862E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9995224468651759	WITHOUT_CLASSIFICATION	4.7755313482408324E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999474695262313	WITHOUT_CLASSIFICATION	5.253047376877938E-5	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9997881896788199	WITHOUT_CLASSIFICATION	2.1181032118009673E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9996725345031201	WITHOUT_CLASSIFICATION	3.274654968799662E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9998731429471817	WITHOUT_CLASSIFICATION	1.2685705281825286E-4	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9995153467201108	WITHOUT_CLASSIFICATION	4.846532798892041E-4	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999764372866823	WITHOUT_CLASSIFICATION	2.3562713317743098E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998575302973838	WITHOUT_CLASSIFICATION	1.4246970261619897E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9997999730727011	WITHOUT_CLASSIFICATION	2.0002692729887103E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.99986618689726	WITHOUT_CLASSIFICATION	1.338131027399605E-4	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9997877047472158	WITHOUT_CLASSIFICATION	2.1229525278433756E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999214109983489	WITHOUT_CLASSIFICATION	7.858900165110204E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999214109983489	WITHOUT_CLASSIFICATION	7.858900165110204E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999330576923607	WITHOUT_CLASSIFICATION	6.694230763926123E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9998867654373832	WITHOUT_CLASSIFICATION	1.1323456261680779E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.998993713557914	WITHOUT_CLASSIFICATION	0.0010062864420859624	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9997705943923533	WITHOUT_CLASSIFICATION	2.2940560764671362E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9997900849615355	WITHOUT_CLASSIFICATION	2.0991503846436488E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999830153768982	WITHOUT_CLASSIFICATION	1.69846231018482E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999894324607342	WITHOUT_CLASSIFICATION	1.0567539265699326E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9998151394070743	WITHOUT_CLASSIFICATION	1.8486059292577542E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999355573484445	WITHOUT_CLASSIFICATION	6.444265155546276E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999618949230207	WITHOUT_CLASSIFICATION	3.8105076979399026E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999806562850574	WITHOUT_CLASSIFICATION	1.934371494262648E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999528679039099	WITHOUT_CLASSIFICATION	4.7132096090067905E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999831138193469	WITHOUT_CLASSIFICATION	1.6886180653020098E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.981738948262356	WITHOUT_CLASSIFICATION	0.018261051737644095	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999882310789584	WITHOUT_CLASSIFICATION	1.1768921041594116E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998642810249471	WITHOUT_CLASSIFICATION	1.3571897505293686E-4	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9998582856640663	WITHOUT_CLASSIFICATION	1.417143359336802E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999229327932994	WITHOUT_CLASSIFICATION	7.706720670070524E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9992404609528198	WITHOUT_CLASSIFICATION	7.595390471801595E-4	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9997294270193363	WITHOUT_CLASSIFICATION	2.705729806636875E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.999690113993998	WITHOUT_CLASSIFICATION	3.0988600600198195E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9997423501870984	WITHOUT_CLASSIFICATION	2.5764981290154055E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999499220360681	WITHOUT_CLASSIFICATION	5.007796393193941E-5	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999680072690675	WITHOUT_CLASSIFICATION	3.199273093245188E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999434773849791	WITHOUT_CLASSIFICATION	5.652261502079187E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999945273504739	WITHOUT_CLASSIFICATION	5.472649526170372E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999945273504739	WITHOUT_CLASSIFICATION	5.472649526170372E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9979276148090565	WITHOUT_CLASSIFICATION	0.0020723851909435075	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9996882482243714	WITHOUT_CLASSIFICATION	3.117517756286739E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998198316091003	WITHOUT_CLASSIFICATION	1.801683908996777E-4	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998989972611254	WITHOUT_CLASSIFICATION	0.001010027388745938	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9998866006791697	WITHOUT_CLASSIFICATION	1.1339932083037337E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989889508739801	WITHOUT_CLASSIFICATION	0.0010110491260199056	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.999864553315901	WITHOUT_CLASSIFICATION	1.3544668409903564E-4	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9985555075350799	WITHOUT_CLASSIFICATION	0.001444492464920104	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999640061744115	WITHOUT_CLASSIFICATION	3.599382558840648E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997825621990432	WITHOUT_CLASSIFICATION	2.1743780095685882E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999228417569288	WITHOUT_CLASSIFICATION	7.715824307115059E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9998013533292905	WITHOUT_CLASSIFICATION	1.9864667070945713E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999960383966889	WITHOUT_CLASSIFICATION	3.961603311014895E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.999072459187765	WITHOUT_CLASSIFICATION	9.275408122350672E-4	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.999938374033734	WITHOUT_CLASSIFICATION	6.162596626603938E-5	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999497986748317	WITHOUT_CLASSIFICATION	5.020132516835565E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999995547737767	WITHOUT_CLASSIFICATION	4.452262233046811E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.96548136525427	WITHOUT_CLASSIFICATION	0.03451863474572993	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9952544314749576	WITHOUT_CLASSIFICATION	0.00474556852504243	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999430083379068	WITHOUT_CLASSIFICATION	5.699166209305431E-5	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999072459646965	WITHOUT_CLASSIFICATION	9.275403530348377E-5	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.999975881593508	WITHOUT_CLASSIFICATION	2.4118406491980174E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997825018468509	WITHOUT_CLASSIFICATION	2.1749815314899104E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997865408080143	WITHOUT_CLASSIFICATION	2.1345919198569735E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995726668681592	WITHOUT_CLASSIFICATION	4.2733313184085617E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999375246045759	WITHOUT_CLASSIFICATION	6.247539542408958E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9992380482082991	WITHOUT_CLASSIFICATION	7.619517917009199E-4	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9984256112353025	WITHOUT_CLASSIFICATION	0.001574388764697486	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999611304775295	WITHOUT_CLASSIFICATION	3.886952247042721E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9913051795205685	WITHOUT_CLASSIFICATION	0.008694820479431454	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9995969592683417	WITHOUT_CLASSIFICATION	4.030407316583173E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999532363466499	WITHOUT_CLASSIFICATION	4.6763653350036846E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999614950167918	WITHOUT_CLASSIFICATION	3.850498320835043E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995726668681592	WITHOUT_CLASSIFICATION	4.2733313184085617E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9988402940302621	WITHOUT_CLASSIFICATION	0.0011597059697379395	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9995653267717279	WITHOUT_CLASSIFICATION	4.3467322827211167E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999894667366541	WITHOUT_CLASSIFICATION	1.053326334591001E-5	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999620100493727	WITHOUT_CLASSIFICATION	3.7989950627342244E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9970592555839634	WITHOUT_CLASSIFICATION	0.002940744416036677	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999993986537208	WITHOUT_CLASSIFICATION	6.013462793017074E-7	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999723951440874	WITHOUT_CLASSIFICATION	2.7604855912563598E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999569008990349	WITHOUT_CLASSIFICATION	4.309910096506973E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999981911401763	WITHOUT_CLASSIFICATION	1.8088598237091034E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998357848764792	WITHOUT_CLASSIFICATION	1.6421512352077979E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998357848764792	WITHOUT_CLASSIFICATION	1.6421512352077979E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998357848764792	WITHOUT_CLASSIFICATION	1.6421512352077979E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999186650133853	WITHOUT_CLASSIFICATION	8.133498661464508E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998478697158265	WITHOUT_CLASSIFICATION	1.521302841734348E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9998969378123661	WITHOUT_CLASSIFICATION	1.0306218763383669E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999798067770118	WITHOUT_CLASSIFICATION	2.0193222988235276E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999986435718817	WITHOUT_CLASSIFICATION	1.3564281182695777E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999944398472139	WITHOUT_CLASSIFICATION	5.5601527861011756E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.992015561011557	WITHOUT_CLASSIFICATION	0.007984438988443032	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999169356691623	WITHOUT_CLASSIFICATION	8.306433083771802E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.999756307985599	WITHOUT_CLASSIFICATION	2.4369201440091438E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999996802088279	WITHOUT_CLASSIFICATION	3.197911720703846E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999538902258096	WITHOUT_CLASSIFICATION	4.610977419048829E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999975094233088	WITHOUT_CLASSIFICATION	2.4905766912875903E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999739870929933	WITHOUT_CLASSIFICATION	2.6012907006671545E-5	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.999999879430656	WITHOUT_CLASSIFICATION	1.2056934392254922E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999942583149304	WITHOUT_CLASSIFICATION	5.741685069521549E-6	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.999943190133783	WITHOUT_CLASSIFICATION	5.6809866217042015E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9998220670108682	WITHOUT_CLASSIFICATION	1.779329891318113E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9988052188324312	WITHOUT_CLASSIFICATION	0.0011947811675688865	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998908848272804	WITHOUT_CLASSIFICATION	1.0911517271954643E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999866928856342	WITHOUT_CLASSIFICATION	1.3307114365759635E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998256002588232	WITHOUT_CLASSIFICATION	1.74399741176926E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999028764913628	WITHOUT_CLASSIFICATION	9.712350863724983E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.999931758188313	WITHOUT_CLASSIFICATION	6.82418116869425E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.999931758188313	WITHOUT_CLASSIFICATION	6.82418116869425E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999466467815884	WITHOUT_CLASSIFICATION	5.335321841161292E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.999978586908844	WITHOUT_CLASSIFICATION	2.141309115609136E-5	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999734304651868	WITHOUT_CLASSIFICATION	2.656953481312526E-5	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999586166328153	WITHOUT_CLASSIFICATION	4.1383367184755705E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999987503480425	WITHOUT_CLASSIFICATION	1.2496519574812767E-6	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999952600849771	WITHOUT_CLASSIFICATION	4.739915022849951E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.999966849076877	WITHOUT_CLASSIFICATION	3.3150923122943286E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999933357583974	WITHOUT_CLASSIFICATION	6.664241602620584E-6	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.999785050785618	WITHOUT_CLASSIFICATION	2.1494921438205663E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9994936450450154	WITHOUT_CLASSIFICATION	5.063549549845506E-4	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9994819069574346	WITHOUT_CLASSIFICATION	5.180930425654966E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998286475787852	WITHOUT_CLASSIFICATION	1.7135242121486282E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9995400619711523	WITHOUT_CLASSIFICATION	4.5993802884768825E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999961299285159	WITHOUT_CLASSIFICATION	3.8700714841029535E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999961299285159	WITHOUT_CLASSIFICATION	3.8700714841029535E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999223150669824	WITHOUT_CLASSIFICATION	7.76849330176478E-5	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9966600238920246	WITHOUT_CLASSIFICATION	0.0033399761079754365	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999862163394021	WITHOUT_CLASSIFICATION	1.3783660598000641E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999888744778485	WITHOUT_CLASSIFICATION	1.1125522151537705E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999888744778485	WITHOUT_CLASSIFICATION	1.1125522151537705E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999888744778485	WITHOUT_CLASSIFICATION	1.1125522151537705E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9997090215620149	WITHOUT_CLASSIFICATION	2.9097843798511503E-4	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999417771496	WITHOUT_CLASSIFICATION	5.822285033656737E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9997368570028203	WITHOUT_CLASSIFICATION	2.631429971797071E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998377472760933	WITHOUT_CLASSIFICATION	1.6225272390663577E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999712641023996	WITHOUT_CLASSIFICATION	2.873589760048031E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9998209801257439	WITHOUT_CLASSIFICATION	1.790198742560661E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9998522819981007	WITHOUT_CLASSIFICATION	1.4771800189931198E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997594174007958	WITHOUT_CLASSIFICATION	2.4058259920433563E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997594174007958	WITHOUT_CLASSIFICATION	2.4058259920433563E-4	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999922210200962	WITHOUT_CLASSIFICATION	7.778979903824279E-6	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9998255742111629	WITHOUT_CLASSIFICATION	1.7442578883710455E-4	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9997644872610341	WITHOUT_CLASSIFICATION	2.3551273896601151E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9964808556332663	WITHOUT_CLASSIFICATION	0.0035191443667337984	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999972116508308	WITHOUT_CLASSIFICATION	2.7883491692934546E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9994045546133148	WITHOUT_CLASSIFICATION	5.954453866852615E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.999795139297444	WITHOUT_CLASSIFICATION	2.04860702555977E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9998373304469732	WITHOUT_CLASSIFICATION	1.626695530267396E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999871507034648	WITHOUT_CLASSIFICATION	1.2849296535218638E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999979104955644	WITHOUT_CLASSIFICATION	2.0895044356225232E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994705916269556	WITHOUT_CLASSIFICATION	5.29408373044316E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999601185429133	WITHOUT_CLASSIFICATION	3.9881457086619605E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999295074513723	WITHOUT_CLASSIFICATION	7.049254862767873E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9998940417462149	WITHOUT_CLASSIFICATION	1.059582537850726E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9998059910140836	WITHOUT_CLASSIFICATION	1.9400898591632153E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999330576923607	WITHOUT_CLASSIFICATION	6.694230763926123E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9996026214631811	WITHOUT_CLASSIFICATION	3.9737853681885265E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999361321955542	WITHOUT_CLASSIFICATION	6.386780444577971E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999998257864805	WITHOUT_CLASSIFICATION	1.7421351957059245E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9997686111301364	WITHOUT_CLASSIFICATION	2.3138886986367218E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9978027669095821	WITHOUT_CLASSIFICATION	0.0021972330904179048	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.999867080581478	WITHOUT_CLASSIFICATION	1.329194185220571E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999803439965789	WITHOUT_CLASSIFICATION	1.9656003421112832E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9993882314038105	WITHOUT_CLASSIFICATION	6.11768596189433E-4	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999998431554853	WITHOUT_CLASSIFICATION	1.5684451465133346E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999421831046438	WITHOUT_CLASSIFICATION	5.781689535622902E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999421831046438	WITHOUT_CLASSIFICATION	5.781689535622902E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.993764576984575	WITHOUT_CLASSIFICATION	0.00623542301542499	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999375387757702	WITHOUT_CLASSIFICATION	6.246122422976235E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9965564843291614	WITHOUT_CLASSIFICATION	0.003443515670838517	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999381125384931	WITHOUT_CLASSIFICATION	6.188746150689795E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.999381125384931	WITHOUT_CLASSIFICATION	6.188746150689795E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999924595730775	WITHOUT_CLASSIFICATION	7.540426922483263E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997170635336219	WITHOUT_CLASSIFICATION	2.829364663781142E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999894050782886	WITHOUT_CLASSIFICATION	1.0594921711513171E-5	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999937962486908	WITHOUT_CLASSIFICATION	6.20375130916013E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9960542964816816	WITHOUT_CLASSIFICATION	0.0039457035183183735	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999941014784343	WITHOUT_CLASSIFICATION	5.898521565687577E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999887861481295	WITHOUT_CLASSIFICATION	1.1213851870561438E-5	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999058873354351	WITHOUT_CLASSIFICATION	9.411266456489888E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9987961572140073	WITHOUT_CLASSIFICATION	0.001203842785992729	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999482267782	WITHOUT_CLASSIFICATION	5.177322169371997E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999880791079924	WITHOUT_CLASSIFICATION	1.192089200774182E-5	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999615034545895	WITHOUT_CLASSIFICATION	3.84965454104435E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999507858355	WITHOUT_CLASSIFICATION	4.921416455264569E-8	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9997558584525474	WITHOUT_CLASSIFICATION	2.441415474526126E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.999982117420898	WITHOUT_CLASSIFICATION	1.7882579101976058E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999981298626598	WITHOUT_CLASSIFICATION	1.8701373402064568E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998402603501332	WITHOUT_CLASSIFICATION	1.5973964986684664E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999857339653131	WITHOUT_CLASSIFICATION	1.4266034686956886E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.999583564545947	WITHOUT_CLASSIFICATION	4.1643545405303377E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999926807617738	WITHOUT_CLASSIFICATION	7.319238226111861E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999086294816258	WITHOUT_CLASSIFICATION	9.13705183740997E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9987026860504727	WITHOUT_CLASSIFICATION	0.0012973139495273138	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998281872536688	WITHOUT_CLASSIFICATION	1.718127463311807E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998324108264887	WITHOUT_CLASSIFICATION	1.6758917351134708E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998324108264887	WITHOUT_CLASSIFICATION	1.6758917351134708E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998324108264887	WITHOUT_CLASSIFICATION	1.6758917351134708E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998324108264887	WITHOUT_CLASSIFICATION	1.6758917351134708E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999418484192668	WITHOUT_CLASSIFICATION	5.815158073329111E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.999979083522404	WITHOUT_CLASSIFICATION	2.0916477595864567E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999571706606708	WITHOUT_CLASSIFICATION	4.2829339329169235E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999571706606708	WITHOUT_CLASSIFICATION	4.2829339329169235E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999571706606708	WITHOUT_CLASSIFICATION	4.2829339329169235E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9998879535142421	WITHOUT_CLASSIFICATION	1.1204648575800219E-4	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999265673104492	WITHOUT_CLASSIFICATION	7.34326895508491E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9998940468440165	WITHOUT_CLASSIFICATION	1.0595315598346305E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9998940468440165	WITHOUT_CLASSIFICATION	1.0595315598346305E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9992404609528198	WITHOUT_CLASSIFICATION	7.595390471801595E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9992404609528198	WITHOUT_CLASSIFICATION	7.595390471801595E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995524523703677	WITHOUT_CLASSIFICATION	4.475476296323152E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995524523703677	WITHOUT_CLASSIFICATION	4.475476296323152E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999824661650591	WITHOUT_CLASSIFICATION	1.75338349407486E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9997244053739976	WITHOUT_CLASSIFICATION	2.7559462600233134E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997470324507639	WITHOUT_CLASSIFICATION	2.529675492361296E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999420508893948	WITHOUT_CLASSIFICATION	5.794911060529533E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.999720590064937	WITHOUT_CLASSIFICATION	2.794099350631104E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997679190130387	WITHOUT_CLASSIFICATION	2.320809869611634E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997289113425455	WITHOUT_CLASSIFICATION	2.7108865745455364E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999035706125886	WITHOUT_CLASSIFICATION	9.642938741138737E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997477636677709	WITHOUT_CLASSIFICATION	2.522363322292137E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999416170427878	WITHOUT_CLASSIFICATION	5.838295721203394E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9998514375302812	WITHOUT_CLASSIFICATION	1.485624697189076E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999723360044941	WITHOUT_CLASSIFICATION	2.766399550587118E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999416895028218	WITHOUT_CLASSIFICATION	5.8310497178318056E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9998663329119878	WITHOUT_CLASSIFICATION	1.3366708801222033E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999418929413455	WITHOUT_CLASSIFICATION	5.810705865459465E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999422474594076	WITHOUT_CLASSIFICATION	5.7752540592395025E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9998810720722395	WITHOUT_CLASSIFICATION	1.1892792776046496E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998463424273988	WITHOUT_CLASSIFICATION	1.536575726012008E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998463424273988	WITHOUT_CLASSIFICATION	1.536575726012008E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999253811245185	WITHOUT_CLASSIFICATION	7.461887548159318E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9995604013399586	WITHOUT_CLASSIFICATION	4.3959866004145923E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9998072619978771	WITHOUT_CLASSIFICATION	1.927380021229868E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9990207585830132	WITHOUT_CLASSIFICATION	9.792414169867863E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999298674873294	WITHOUT_CLASSIFICATION	7.013251267066417E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997537884246253	WITHOUT_CLASSIFICATION	2.462115753747642E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997537884246253	WITHOUT_CLASSIFICATION	2.462115753747642E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997537884246253	WITHOUT_CLASSIFICATION	2.462115753747642E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997537884246253	WITHOUT_CLASSIFICATION	2.462115753747642E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999872534066898	WITHOUT_CLASSIFICATION	1.2746593310219434E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999932836677775	WITHOUT_CLASSIFICATION	6.716332222412177E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999253297165	WITHOUT_CLASSIFICATION	7.467028356861561E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999945488818019	WITHOUT_CLASSIFICATION	5.4511181981091926E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999945488818019	WITHOUT_CLASSIFICATION	5.4511181981091926E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999829369232778	WITHOUT_CLASSIFICATION	1.7063076722190378E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9991377712756543	WITHOUT_CLASSIFICATION	8.622287243457292E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9991377712756543	WITHOUT_CLASSIFICATION	8.622287243457292E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999813670242189	WITHOUT_CLASSIFICATION	1.863297578103847E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999808309379862	WITHOUT_CLASSIFICATION	1.9169062013844244E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999773428639285	WITHOUT_CLASSIFICATION	2.265713607156158E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999964112965485	WITHOUT_CLASSIFICATION	3.5887034514573728E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998497949837339	WITHOUT_CLASSIFICATION	1.5020501626603858E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9867495110382936	WITHOUT_CLASSIFICATION	0.013250488961706382	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9867495110382936	WITHOUT_CLASSIFICATION	0.013250488961706382	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999728348213869	WITHOUT_CLASSIFICATION	2.7165178613064868E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999666778069073	WITHOUT_CLASSIFICATION	3.332219309277451E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9998739270535114	WITHOUT_CLASSIFICATION	1.2607294648857515E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999982518141587	WITHOUT_CLASSIFICATION	1.7481858413285717E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998989334462755	WITHOUT_CLASSIFICATION	1.0106655372461228E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999802820545598	WITHOUT_CLASSIFICATION	1.9717945440247403E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999802820545598	WITHOUT_CLASSIFICATION	1.9717945440247403E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999802820545598	WITHOUT_CLASSIFICATION	1.9717945440247403E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999764643425229	WITHOUT_CLASSIFICATION	2.353565747716615E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999764643425229	WITHOUT_CLASSIFICATION	2.353565747716615E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999110353621868	WITHOUT_CLASSIFICATION	8.896463781311395E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999960981100152	WITHOUT_CLASSIFICATION	3.90188998476042E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999960981100152	WITHOUT_CLASSIFICATION	3.90188998476042E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999102986546275	WITHOUT_CLASSIFICATION	8.970134537245332E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999649430954848	WITHOUT_CLASSIFICATION	3.5056904515312115E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998989972611254	WITHOUT_CLASSIFICATION	0.001010027388745938	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998967901317045	WITHOUT_CLASSIFICATION	1.0320986829548901E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.994213871687673	WITHOUT_CLASSIFICATION	0.005786128312326998	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.994213871687673	WITHOUT_CLASSIFICATION	0.005786128312326998	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9988224241156896	WITHOUT_CLASSIFICATION	0.001177575884310393	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999277249177629	WITHOUT_CLASSIFICATION	7.227508223708414E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999665540743742	WITHOUT_CLASSIFICATION	3.3445925625831194E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996336274285151	WITHOUT_CLASSIFICATION	3.6637257148491056E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998180515161496	WITHOUT_CLASSIFICATION	1.8194848385035702E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999724080177826	WITHOUT_CLASSIFICATION	2.7591982217374838E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9988716612832438	WITHOUT_CLASSIFICATION	0.001128338716756175	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998668636264197	WITHOUT_CLASSIFICATION	0.0013313637358029322	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998778946465702	WITHOUT_CLASSIFICATION	1.2210535342980865E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999631520803068	WITHOUT_CLASSIFICATION	3.6847919693178196E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999033318244406	WITHOUT_CLASSIFICATION	9.666817555937784E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9998059916978704	WITHOUT_CLASSIFICATION	1.9400830212948014E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999863730012956	WITHOUT_CLASSIFICATION	1.362699870444737E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999966153047888	WITHOUT_CLASSIFICATION	3.3846952111885864E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999751420173401	WITHOUT_CLASSIFICATION	2.4857982660003565E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9983814067784478	WITHOUT_CLASSIFICATION	0.0016185932215522644	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998856295137744	WITHOUT_CLASSIFICATION	1.1437048622566702E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999443162266388	WITHOUT_CLASSIFICATION	5.568377336125695E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9995821606180114	WITHOUT_CLASSIFICATION	4.1783938198856543E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.999943622065125	WITHOUT_CLASSIFICATION	5.637793487498762E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9994466548907366	WITHOUT_CLASSIFICATION	5.533451092633166E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9996765844734785	WITHOUT_CLASSIFICATION	3.2341552652151743E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9997833425259617	WITHOUT_CLASSIFICATION	2.1665747403832054E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9998015369636505	WITHOUT_CLASSIFICATION	1.984630363495449E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998951359366757	WITHOUT_CLASSIFICATION	1.0486406332439986E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9986895189202967	WITHOUT_CLASSIFICATION	0.0013104810797032718	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9991385801758297	WITHOUT_CLASSIFICATION	8.61419824170227E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9991385801758297	WITHOUT_CLASSIFICATION	8.61419824170227E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999655401412237	WITHOUT_CLASSIFICATION	3.445985877637673E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998603971836003	WITHOUT_CLASSIFICATION	1.396028163996433E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999582435732313	WITHOUT_CLASSIFICATION	4.1756426768797186E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996904915819094	WITHOUT_CLASSIFICATION	3.0950841809068545E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999792864032749	WITHOUT_CLASSIFICATION	2.0713596725115324E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9998530669926613	WITHOUT_CLASSIFICATION	1.469330073387043E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999300918539663	WITHOUT_CLASSIFICATION	6.990814603373371E-5	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999806334966331	WITHOUT_CLASSIFICATION	1.9366503366871684E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999657039794054	WITHOUT_CLASSIFICATION	3.4296020594457324E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996601292950634	WITHOUT_CLASSIFICATION	3.398707049366402E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996601292950634	WITHOUT_CLASSIFICATION	3.398707049366402E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998969841021281	WITHOUT_CLASSIFICATION	1.0301589787182706E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999690263451877	WITHOUT_CLASSIFICATION	3.0973654812399924E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9996517727545643	WITHOUT_CLASSIFICATION	3.4822724543568425E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999072459646965	WITHOUT_CLASSIFICATION	9.275403530348377E-5	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999958418466276	WITHOUT_CLASSIFICATION	4.158153372442295E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9997458525546026	WITHOUT_CLASSIFICATION	2.5414744539738643E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998856295137744	WITHOUT_CLASSIFICATION	1.1437048622566702E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999132030446424	WITHOUT_CLASSIFICATION	8.679695535754489E-5	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999873667509406	WITHOUT_CLASSIFICATION	1.2633249059366183E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998557412191366	WITHOUT_CLASSIFICATION	1.4425878086356513E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.99994904522759	WITHOUT_CLASSIFICATION	5.095477240994751E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999876346778465	WITHOUT_CLASSIFICATION	1.236532215352609E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999866929484914	WITHOUT_CLASSIFICATION	1.3307051508742528E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999937896326886	WITHOUT_CLASSIFICATION	6.21036731146372E-6	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.999930833016134	WITHOUT_CLASSIFICATION	6.916698386605443E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9980753802926561	WITHOUT_CLASSIFICATION	0.0019246197073439434	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999361751047591	WITHOUT_CLASSIFICATION	6.382489524096977E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999517583608873	WITHOUT_CLASSIFICATION	4.8241639112529177E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999361751047591	WITHOUT_CLASSIFICATION	6.382489524096977E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999517583608873	WITHOUT_CLASSIFICATION	4.8241639112529177E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9989404253342061	WITHOUT_CLASSIFICATION	0.0010595746657938857	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9973245078668348	WITHOUT_CLASSIFICATION	0.0026754921331651844	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9998406123080422	WITHOUT_CLASSIFICATION	1.5938769195774014E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9799039904907273	WITHOUT_CLASSIFICATION	0.020096009509272747	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998443050849612	WITHOUT_CLASSIFICATION	1.5569491503886196E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999057880841872	WITHOUT_CLASSIFICATION	9.421191581279265E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999712641023996	WITHOUT_CLASSIFICATION	2.873589760048031E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999459795713036	WITHOUT_CLASSIFICATION	5.4020428696496583E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9998597985380553	WITHOUT_CLASSIFICATION	1.402014619446795E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999326907667698	WITHOUT_CLASSIFICATION	6.730923323019315E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999833954264582	WITHOUT_CLASSIFICATION	1.6604573541837808E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999250465812936	WITHOUT_CLASSIFICATION	7.495341870640622E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9995479803806148	WITHOUT_CLASSIFICATION	4.5201961938517266E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9994377191972781	WITHOUT_CLASSIFICATION	5.622808027218995E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999057880841872	WITHOUT_CLASSIFICATION	9.421191581279265E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999602343700408	WITHOUT_CLASSIFICATION	3.976562995915482E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999614339634156	WITHOUT_CLASSIFICATION	3.8566036584279886E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999871448272658	WITHOUT_CLASSIFICATION	1.2855172734218181E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999412154178048	WITHOUT_CLASSIFICATION	5.878458219523554E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999524935423464	WITHOUT_CLASSIFICATION	4.750645765362459E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995478025261819	WITHOUT_CLASSIFICATION	4.521974738181248E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9921262739501945	WITHOUT_CLASSIFICATION	0.007873726049805612	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995478025261819	WITHOUT_CLASSIFICATION	4.521974738181248E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995478025261819	WITHOUT_CLASSIFICATION	4.521974738181248E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995498031047867	WITHOUT_CLASSIFICATION	4.501968952132582E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999622650572365	WITHOUT_CLASSIFICATION	3.7734942763495487E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9997895746173129	WITHOUT_CLASSIFICATION	2.1042538268714598E-4	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999820328432348	WITHOUT_CLASSIFICATION	1.796715676513785E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995478025261819	WITHOUT_CLASSIFICATION	4.521974738181248E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999742502551836	WITHOUT_CLASSIFICATION	2.5749744816490222E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999512517195952	WITHOUT_CLASSIFICATION	4.874828040475525E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999838080651955	WITHOUT_CLASSIFICATION	1.619193480452352E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996226998908704	WITHOUT_CLASSIFICATION	3.773001091297212E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999269410246269	WITHOUT_CLASSIFICATION	7.305897537316954E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999548416895572	WITHOUT_CLASSIFICATION	4.51583104427837E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9998242261387182	WITHOUT_CLASSIFICATION	1.757738612818488E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999799844543034	WITHOUT_CLASSIFICATION	2.0015545696653975E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999399301247177	WITHOUT_CLASSIFICATION	6.0069875282242624E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999512517195952	WITHOUT_CLASSIFICATION	4.874828040475525E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999838080651955	WITHOUT_CLASSIFICATION	1.619193480452352E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996226998908704	WITHOUT_CLASSIFICATION	3.773001091297212E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9998110098311648	WITHOUT_CLASSIFICATION	1.8899016883517565E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9995728883689832	WITHOUT_CLASSIFICATION	4.2711163101674204E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9996009435433544	WITHOUT_CLASSIFICATION	3.990564566456083E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.999859012547446	WITHOUT_CLASSIFICATION	1.4098745255407722E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999436716674488	WITHOUT_CLASSIFICATION	5.632833255109703E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9992441655767857	WITHOUT_CLASSIFICATION	7.55834423214197E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9998288395088257	WITHOUT_CLASSIFICATION	1.711604911742612E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999704705946587	WITHOUT_CLASSIFICATION	2.952940534132636E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999244938816855	WITHOUT_CLASSIFICATION	7.550611831456754E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999097762979306	WITHOUT_CLASSIFICATION	9.022370206941292E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9998617168276976	WITHOUT_CLASSIFICATION	1.3828317230233622E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999830910391199	WITHOUT_CLASSIFICATION	1.6908960880140864E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999489976839783	WITHOUT_CLASSIFICATION	5.1002316021600955E-5	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9957867657532805	WITHOUT_CLASSIFICATION	0.0042132342467194545	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999907279439264	WITHOUT_CLASSIFICATION	9.272056073567073E-6	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9967284471184374	WITHOUT_CLASSIFICATION	0.003271552881562524	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999723233196434	WITHOUT_CLASSIFICATION	2.767668035662101E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999356824905712	WITHOUT_CLASSIFICATION	6.431750942881872E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999137195197364	WITHOUT_CLASSIFICATION	8.628048026356878E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9883516577038026	WITHOUT_CLASSIFICATION	0.011648342296197378	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9871383326359364	WITHOUT_CLASSIFICATION	0.01286166736406351	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9961341111347644	WITHOUT_CLASSIFICATION	0.0038658888652356675	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9997901384501703	WITHOUT_CLASSIFICATION	2.0986154982974113E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999409005253437	WITHOUT_CLASSIFICATION	5.90994746561854E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9973638634224555	WITHOUT_CLASSIFICATION	0.0026361365775444284	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999643508914275	WITHOUT_CLASSIFICATION	3.5649108572377316E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999568916790347	WITHOUT_CLASSIFICATION	4.3108320965368515E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.99942509806366	WITHOUT_CLASSIFICATION	5.749019363400944E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9927461665767268	WITHOUT_CLASSIFICATION	0.007253833423273179	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9978368810787034	WITHOUT_CLASSIFICATION	0.0021631189212966907	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9990550504016334	WITHOUT_CLASSIFICATION	9.449495983665196E-4	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9992322086339873	WITHOUT_CLASSIFICATION	7.677913660127093E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9995392860593175	WITHOUT_CLASSIFICATION	4.607139406824781E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9996546851133292	WITHOUT_CLASSIFICATION	3.4531488667088493E-4	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9979190393405054	WITHOUT_CLASSIFICATION	0.002080960659494599	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9998461487543315	WITHOUT_CLASSIFICATION	1.5385124566834977E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9968482319349334	WITHOUT_CLASSIFICATION	0.0031517680650666033	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9218150152282142	WITHOUT_CLASSIFICATION	0.0781849847717858	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9997368871874417	WITHOUT_CLASSIFICATION	2.6311281255832886E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9996765844734785	WITHOUT_CLASSIFICATION	3.2341552652151743E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9993137150880611	WITHOUT_CLASSIFICATION	6.86284911938853E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999170788464774	WITHOUT_CLASSIFICATION	8.292115352263655E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9998862721562204	WITHOUT_CLASSIFICATION	1.1372784377957402E-4	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.999891320456431	WITHOUT_CLASSIFICATION	1.0867954356894922E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9940479680477255	WITHOUT_CLASSIFICATION	0.005952031952274443	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998789369968708	WITHOUT_CLASSIFICATION	1.2106300312920581E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9940479680477255	WITHOUT_CLASSIFICATION	0.005952031952274443	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999640308650949	WITHOUT_CLASSIFICATION	3.596913490513747E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9994525114410577	WITHOUT_CLASSIFICATION	5.474885589421913E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999522980276077	WITHOUT_CLASSIFICATION	4.770197239235959E-5	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999922003498268	WITHOUT_CLASSIFICATION	7.79965017314194E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999306869468451	WITHOUT_CLASSIFICATION	6.931305315498942E-5	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999779835253728	WITHOUT_CLASSIFICATION	2.2016474627149544E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999801179376415	WITHOUT_CLASSIFICATION	1.9882062358472234E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999775779265915	WITHOUT_CLASSIFICATION	2.2422073408422685E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999864449922389	WITHOUT_CLASSIFICATION	1.355500776108096E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999816919494151	WITHOUT_CLASSIFICATION	1.830805058488267E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999422172380984	WITHOUT_CLASSIFICATION	5.7782761901727056E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9991565882468975	WITHOUT_CLASSIFICATION	8.434117531024781E-4	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999816207074569	WITHOUT_CLASSIFICATION	1.8379292543120826E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999972784276773	WITHOUT_CLASSIFICATION	2.721572322757962E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999797894796638	WITHOUT_CLASSIFICATION	2.021052033619677E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999805492221451	WITHOUT_CLASSIFICATION	1.945077785489117E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9997240077022831	WITHOUT_CLASSIFICATION	2.75992297716939E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9998556825669038	WITHOUT_CLASSIFICATION	1.4431743309621325E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999889842625201	WITHOUT_CLASSIFICATION	1.101573747987105E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.997198094344839	WITHOUT_CLASSIFICATION	0.0028019056551609966	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999706254453773	WITHOUT_CLASSIFICATION	2.9374554622627152E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9998976239728325	WITHOUT_CLASSIFICATION	1.023760271674002E-4	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999891481929791	WITHOUT_CLASSIFICATION	1.0851807020923514E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999883557584898	WITHOUT_CLASSIFICATION	1.1644241510299832E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9997945042036608	WITHOUT_CLASSIFICATION	2.0549579633907534E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999028485017103	WITHOUT_CLASSIFICATION	9.715149828980592E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999324516915631	WITHOUT_CLASSIFICATION	6.754830843697889E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.998227195942832	WITHOUT_CLASSIFICATION	0.001772804057167961	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9997962390448266	WITHOUT_CLASSIFICATION	2.0376095517347212E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.994210622314838	WITHOUT_CLASSIFICATION	0.005789377685161975	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999498148256794	WITHOUT_CLASSIFICATION	5.018517432065557E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999979469556839	WITHOUT_CLASSIFICATION	2.053044316093094E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999260823292294	WITHOUT_CLASSIFICATION	7.391767077050613E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999625584044455	WITHOUT_CLASSIFICATION	3.7441595554614016E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999560247652407	WITHOUT_CLASSIFICATION	4.3975234759237445E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9998889904877023	WITHOUT_CLASSIFICATION	1.1100951229777921E-4	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999156678704355	WITHOUT_CLASSIFICATION	8.433212956452211E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9998862721562204	WITHOUT_CLASSIFICATION	1.1372784377957402E-4	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999250079356415	WITHOUT_CLASSIFICATION	7.4992064358509E-5	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.999958245626492	WITHOUT_CLASSIFICATION	4.1754373507853803E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999747352368555	WITHOUT_CLASSIFICATION	2.526476314446246E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9996142283359275	WITHOUT_CLASSIFICATION	3.857716640724405E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998789369968708	WITHOUT_CLASSIFICATION	1.2106300312920581E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9998237804012207	WITHOUT_CLASSIFICATION	1.7621959877944793E-4	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999603492977457	WITHOUT_CLASSIFICATION	3.965070225426565E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999710025279706	WITHOUT_CLASSIFICATION	2.8997472029492767E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999583487230443	WITHOUT_CLASSIFICATION	4.165127695560509E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999157732378549	WITHOUT_CLASSIFICATION	8.422676214515478E-5	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9997157773884647	WITHOUT_CLASSIFICATION	2.842226115352237E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9998419949968989	WITHOUT_CLASSIFICATION	1.5800500310122188E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999678378829241	WITHOUT_CLASSIFICATION	3.216211707588599E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999642640193535	WITHOUT_CLASSIFICATION	3.57359806464782E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9958491028695448	WITHOUT_CLASSIFICATION	0.004150897130455281	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9997833425259617	WITHOUT_CLASSIFICATION	2.1665747403832054E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999505917951024	WITHOUT_CLASSIFICATION	4.940820489762105E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.999954369483142	WITHOUT_CLASSIFICATION	4.563051685795479E-5	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9996562832681961	WITHOUT_CLASSIFICATION	3.4371673180393856E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9998880390873474	WITHOUT_CLASSIFICATION	1.1196091265265436E-4	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999110605666457	WITHOUT_CLASSIFICATION	8.893943335428483E-5	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9997177958452561	WITHOUT_CLASSIFICATION	2.822041547439202E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999706047430786	WITHOUT_CLASSIFICATION	2.939525692134096E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999669126018629	WITHOUT_CLASSIFICATION	3.308739813707251E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999405163381363	WITHOUT_CLASSIFICATION	5.948366186364567E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999834595564296	WITHOUT_CLASSIFICATION	1.6540443570363526E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999669126018629	WITHOUT_CLASSIFICATION	3.308739813707251E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.999968801248013	WITHOUT_CLASSIFICATION	3.119875198706375E-5	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999839629237849	WITHOUT_CLASSIFICATION	1.603707621513057E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9998143571937957	WITHOUT_CLASSIFICATION	1.856428062043404E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999470519635197	WITHOUT_CLASSIFICATION	5.2948036480314655E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999858048674989	WITHOUT_CLASSIFICATION	1.4195132501200201E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999857020768951	WITHOUT_CLASSIFICATION	1.4297923105066533E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999815215693696	WITHOUT_CLASSIFICATION	1.847843063030647E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999839706428604	WITHOUT_CLASSIFICATION	1.6029357139620678E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999856189037731	WITHOUT_CLASSIFICATION	1.438109622699124E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.999987950417811	WITHOUT_CLASSIFICATION	1.2049582188929806E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999746181914928	WITHOUT_CLASSIFICATION	2.5381808507164633E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999610809857629	WITHOUT_CLASSIFICATION	3.891901423717522E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999952961493532	WITHOUT_CLASSIFICATION	4.703850646766817E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999801265737012	WITHOUT_CLASSIFICATION	1.987342629881505E-5	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999121250512946	WITHOUT_CLASSIFICATION	8.787494870545933E-5	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9970820392509616	WITHOUT_CLASSIFICATION	0.0029179607490383533	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999576573453557	WITHOUT_CLASSIFICATION	4.2342654644325215E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9997959448327363	WITHOUT_CLASSIFICATION	2.0405516726370752E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999802651292189	WITHOUT_CLASSIFICATION	1.9734870781133636E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.999980142489287	WITHOUT_CLASSIFICATION	1.9857510712984706E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999886089362725	WITHOUT_CLASSIFICATION	1.1391063727501944E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999360401517424	WITHOUT_CLASSIFICATION	6.395984825757082E-5	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999849855234543	WITHOUT_CLASSIFICATION	1.5014476545712336E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.999849855234543	WITHOUT_CLASSIFICATION	1.5014476545712336E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998355542473076	WITHOUT_CLASSIFICATION	1.644457526923721E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999798749832334	WITHOUT_CLASSIFICATION	2.0125016766698725E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999728259982066	WITHOUT_CLASSIFICATION	2.7174001793343412E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9987374686158461	WITHOUT_CLASSIFICATION	0.0012625313841538872	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9994729707360004	WITHOUT_CLASSIFICATION	5.270292639995607E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9989947612899079	WITHOUT_CLASSIFICATION	0.001005238710092039	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999524047881728	WITHOUT_CLASSIFICATION	4.759521182728719E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999895721851492	WITHOUT_CLASSIFICATION	1.0427814850850271E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999250859278543	WITHOUT_CLASSIFICATION	7.491407214563229E-5	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9975114155736251	WITHOUT_CLASSIFICATION	0.002488584426374985	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999710384631143	WITHOUT_CLASSIFICATION	2.8961536885754624E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999664466043585	WITHOUT_CLASSIFICATION	3.355339564157404E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9998602025484584	WITHOUT_CLASSIFICATION	1.3979745154160596E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999418950044576	WITHOUT_CLASSIFICATION	5.810499554246537E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9998863405993915	WITHOUT_CLASSIFICATION	1.1365940060849803E-4	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999638828893237	WITHOUT_CLASSIFICATION	3.611711067621019E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999991782354514	WITHOUT_CLASSIFICATION	8.217645487030364E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9997726301196533	WITHOUT_CLASSIFICATION	2.2736988034668823E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9997726301196533	WITHOUT_CLASSIFICATION	2.2736988034668823E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999679600227713	WITHOUT_CLASSIFICATION	3.203997722874285E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999679600227713	WITHOUT_CLASSIFICATION	3.203997722874285E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.999771526653381	WITHOUT_CLASSIFICATION	2.2847334661904763E-4	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999307011812749	WITHOUT_CLASSIFICATION	6.929881872506871E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9998203603224363	WITHOUT_CLASSIFICATION	1.7963967756376854E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999602414069554	WITHOUT_CLASSIFICATION	3.975859304465497E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999437817011898	WITHOUT_CLASSIFICATION	5.6218298810213805E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9998969378123661	WITHOUT_CLASSIFICATION	1.0306218763383669E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999372678142786	WITHOUT_CLASSIFICATION	6.273218572143957E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999577905060807	WITHOUT_CLASSIFICATION	4.220949391922666E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999650346930906	WITHOUT_CLASSIFICATION	3.496530690937536E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999650346930906	WITHOUT_CLASSIFICATION	3.496530690937536E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999650346930906	WITHOUT_CLASSIFICATION	3.496530690937536E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999403326689216	WITHOUT_CLASSIFICATION	5.9667331078512265E-5	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999221605989286	WITHOUT_CLASSIFICATION	7.783940107146891E-5	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9998529277391294	WITHOUT_CLASSIFICATION	1.4707226087063517E-4	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999489479501802	WITHOUT_CLASSIFICATION	5.1052049819793234E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999490329334988	WITHOUT_CLASSIFICATION	5.096706650106704E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999117143159779	WITHOUT_CLASSIFICATION	8.828568402202903E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.999898415673403	WITHOUT_CLASSIFICATION	1.0158432659699569E-4	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9996878571116363	WITHOUT_CLASSIFICATION	3.121428883636712E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999671730492178	WITHOUT_CLASSIFICATION	3.282695078216475E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998383944219978	WITHOUT_CLASSIFICATION	1.6160557800217886E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9995791652990442	WITHOUT_CLASSIFICATION	4.208347009557581E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9996638200989535	WITHOUT_CLASSIFICATION	3.361799010464395E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999538902258096	WITHOUT_CLASSIFICATION	4.610977419048829E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9998578904810137	WITHOUT_CLASSIFICATION	1.4210951898639568E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999611973742615	WITHOUT_CLASSIFICATION	3.8802625738543865E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999585620804864	WITHOUT_CLASSIFICATION	4.143791951353191E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.999996975038014	WITHOUT_CLASSIFICATION	3.0249619861199473E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998337600477385	WITHOUT_CLASSIFICATION	1.6623995226164686E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.999935867958797	WITHOUT_CLASSIFICATION	6.413204120305794E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999861802709885	WITHOUT_CLASSIFICATION	1.3819729011450056E-5	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999855983743555	WITHOUT_CLASSIFICATION	1.4401625644545584E-5	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9998220670108682	WITHOUT_CLASSIFICATION	1.779329891318113E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9998220670108682	WITHOUT_CLASSIFICATION	1.779329891318113E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9998220670108682	WITHOUT_CLASSIFICATION	1.779329891318113E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9998220670108682	WITHOUT_CLASSIFICATION	1.779329891318113E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999318747768458	WITHOUT_CLASSIFICATION	6.812522315422425E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998908848272804	WITHOUT_CLASSIFICATION	1.0911517271954643E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999689403168249	WITHOUT_CLASSIFICATION	3.105968317515921E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997971055261117	WITHOUT_CLASSIFICATION	2.0289447388823254E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998908848272804	WITHOUT_CLASSIFICATION	1.0911517271954643E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9997369419588876	WITHOUT_CLASSIFICATION	2.630580411123889E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9996099436785753	WITHOUT_CLASSIFICATION	3.9005632142470056E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9996223960574818	WITHOUT_CLASSIFICATION	3.776039425181599E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9996850995690308	WITHOUT_CLASSIFICATION	3.1490043096914813E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9985419112511672	WITHOUT_CLASSIFICATION	0.0014580887488328293	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999239276006198	WITHOUT_CLASSIFICATION	7.607239938026544E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9996850214791435	WITHOUT_CLASSIFICATION	3.1497852085648234E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999794468066678	WITHOUT_CLASSIFICATION	2.0553193332146666E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999794468066678	WITHOUT_CLASSIFICATION	2.0553193332146666E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.999931758188313	WITHOUT_CLASSIFICATION	6.82418116869425E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999016590123435	WITHOUT_CLASSIFICATION	9.834098765649315E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.999931758188313	WITHOUT_CLASSIFICATION	6.82418116869425E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998348361106888	WITHOUT_CLASSIFICATION	1.6516388931124497E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999947282427527	WITHOUT_CLASSIFICATION	5.271757247282987E-6	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9998505713299961	WITHOUT_CLASSIFICATION	1.4942867000395773E-4	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999703371877954	WITHOUT_CLASSIFICATION	2.9662812204638284E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999606955042507	WITHOUT_CLASSIFICATION	3.9304495749248966E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999890122443421	WITHOUT_CLASSIFICATION	1.0987755657923555E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999915112716986	WITHOUT_CLASSIFICATION	8.488728301360135E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999495983140089	WITHOUT_CLASSIFICATION	5.0401685991134354E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9995801887784578	WITHOUT_CLASSIFICATION	4.1981122154223705E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9998003192625644	WITHOUT_CLASSIFICATION	1.996807374355538E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999898117067209	WITHOUT_CLASSIFICATION	1.0188293279265509E-5	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999972963667133	WITHOUT_CLASSIFICATION	2.7036332867531606E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9996527727963168	WITHOUT_CLASSIFICATION	3.472272036831807E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998401235277594	WITHOUT_CLASSIFICATION	1.5987647224054768E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998348361106888	WITHOUT_CLASSIFICATION	1.6516388931124497E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998348361106888	WITHOUT_CLASSIFICATION	1.6516388931124497E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999293435835547	WITHOUT_CLASSIFICATION	7.065641644524737E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.999375369998191	WITHOUT_CLASSIFICATION	6.246300018089746E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999933357583974	WITHOUT_CLASSIFICATION	6.664241602620584E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9998352979311667	WITHOUT_CLASSIFICATION	1.647020688333431E-4	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9998352979311667	WITHOUT_CLASSIFICATION	1.647020688333431E-4	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999889988493442	WITHOUT_CLASSIFICATION	1.1001150655716967E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999950868932155	WITHOUT_CLASSIFICATION	4.913106784601386E-6	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9998496023348253	WITHOUT_CLASSIFICATION	1.5039766517467614E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9998481815555474	WITHOUT_CLASSIFICATION	1.5181844445259646E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9976967542401491	WITHOUT_CLASSIFICATION	0.0023032457598508903	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9998939261370268	WITHOUT_CLASSIFICATION	1.0607386297323053E-4	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9998912210137892	WITHOUT_CLASSIFICATION	1.0877898621073488E-4	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999307345351094	WITHOUT_CLASSIFICATION	6.926546489059024E-5	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9992484219357414	WITHOUT_CLASSIFICATION	7.5157806425852E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9996237073708961	WITHOUT_CLASSIFICATION	3.7629262910384364E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999474070869858	WITHOUT_CLASSIFICATION	5.25929130142521E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999839196835136	WITHOUT_CLASSIFICATION	1.6080316486331996E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9976967542401491	WITHOUT_CLASSIFICATION	0.0023032457598508903	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999011120594623	WITHOUT_CLASSIFICATION	9.8887940537663E-5	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999498183124149	WITHOUT_CLASSIFICATION	5.018168758513278E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9998927668649524	WITHOUT_CLASSIFICATION	1.0723313504768156E-4	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9990076655518788	WITHOUT_CLASSIFICATION	9.923344481211815E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9990076655518788	WITHOUT_CLASSIFICATION	9.923344481211815E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997717826695601	WITHOUT_CLASSIFICATION	2.2821733043975083E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999582435732313	WITHOUT_CLASSIFICATION	4.1756426768797186E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996904915819094	WITHOUT_CLASSIFICATION	3.0950841809068545E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999705468248539	WITHOUT_CLASSIFICATION	2.945317514613073E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999705468248539	WITHOUT_CLASSIFICATION	2.945317514613073E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999223150669824	WITHOUT_CLASSIFICATION	7.76849330176478E-5	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999602232452547	WITHOUT_CLASSIFICATION	3.9776754745343134E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999585274963121	WITHOUT_CLASSIFICATION	4.147250368788639E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9993825563228211	WITHOUT_CLASSIFICATION	6.174436771788371E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999888744778485	WITHOUT_CLASSIFICATION	1.1125522151537705E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999622386864414	WITHOUT_CLASSIFICATION	3.776131355856682E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999679600227713	WITHOUT_CLASSIFICATION	3.203997722874285E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999639513424637	WITHOUT_CLASSIFICATION	3.604865753623353E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998838654065598	WITHOUT_CLASSIFICATION	1.1613459344021473E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9997420826251243	WITHOUT_CLASSIFICATION	2.5791737487576577E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999616358821475	WITHOUT_CLASSIFICATION	3.836411785248655E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999880940259032	WITHOUT_CLASSIFICATION	1.190597409695347E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999805126556272	WITHOUT_CLASSIFICATION	1.9487344372804478E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999324867846432	WITHOUT_CLASSIFICATION	6.751321535678896E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9995644015051386	WITHOUT_CLASSIFICATION	4.3559849486143914E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999683521286838	WITHOUT_CLASSIFICATION	3.164787131616114E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998377472760933	WITHOUT_CLASSIFICATION	1.6225272390663577E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999004385609042	WITHOUT_CLASSIFICATION	9.956143909584132E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999004385609042	WITHOUT_CLASSIFICATION	9.956143909584132E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999171952706052	WITHOUT_CLASSIFICATION	8.2804729394833E-5	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997594174007958	WITHOUT_CLASSIFICATION	2.4058259920433563E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9997594174007958	WITHOUT_CLASSIFICATION	2.4058259920433563E-4	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9997770581480698	WITHOUT_CLASSIFICATION	2.2294185193020205E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999361751047591	WITHOUT_CLASSIFICATION	6.382489524096977E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998809643877071	WITHOUT_CLASSIFICATION	1.1903561229284672E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999094833079327	WITHOUT_CLASSIFICATION	9.051669206727421E-5	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999712641023996	WITHOUT_CLASSIFICATION	2.873589760048031E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999464049413873	WITHOUT_CLASSIFICATION	5.359505861267377E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999712641023996	WITHOUT_CLASSIFICATION	2.873589760048031E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999960797495722	WITHOUT_CLASSIFICATION	3.9202504278001824E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999859961501593	WITHOUT_CLASSIFICATION	1.400384984074953E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9997306559229967	WITHOUT_CLASSIFICATION	2.6934407700320007E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9995644015051386	WITHOUT_CLASSIFICATION	4.3559849486143914E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9997585076778186	WITHOUT_CLASSIFICATION	2.414923221815033E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999057880841872	WITHOUT_CLASSIFICATION	9.421191581279265E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9996079397107671	WITHOUT_CLASSIFICATION	3.9206028923285323E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9993308321548081	WITHOUT_CLASSIFICATION	6.691678451919268E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999467060649325	WITHOUT_CLASSIFICATION	5.3293935067459354E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999733774471409	WITHOUT_CLASSIFICATION	2.6622552859178292E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9961779252381275	WITHOUT_CLASSIFICATION	0.0038220747618724947	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9961779252381275	WITHOUT_CLASSIFICATION	0.0038220747618724947	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9992517317636553	WITHOUT_CLASSIFICATION	7.482682363446977E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999479697198073	WITHOUT_CLASSIFICATION	5.203028019276459E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999960797495722	WITHOUT_CLASSIFICATION	3.9202504278001824E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999960797495722	WITHOUT_CLASSIFICATION	3.9202504278001824E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999632610663466	WITHOUT_CLASSIFICATION	3.673893365351152E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9990913331932085	WITHOUT_CLASSIFICATION	9.086668067915447E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9996790842121828	WITHOUT_CLASSIFICATION	3.2091578781722586E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9997198501620961	WITHOUT_CLASSIFICATION	2.8014983790390207E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999392730014456	WITHOUT_CLASSIFICATION	6.072699855441884E-5	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999476295027295	WITHOUT_CLASSIFICATION	5.237049727041172E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999709909198501	WITHOUT_CLASSIFICATION	2.900908014988928E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999780153522768	WITHOUT_CLASSIFICATION	2.1984647723217776E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999579233268894	WITHOUT_CLASSIFICATION	4.2076673110674784E-5	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9998360051214806	WITHOUT_CLASSIFICATION	1.6399487851942788E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999475718075544	WITHOUT_CLASSIFICATION	5.242819244545622E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998513875201295	WITHOUT_CLASSIFICATION	1.4861247987062417E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998513875201295	WITHOUT_CLASSIFICATION	1.4861247987062417E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999832292335401	WITHOUT_CLASSIFICATION	1.677076645995514E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999785111348484	WITHOUT_CLASSIFICATION	2.148886515159128E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9998985316489877	WITHOUT_CLASSIFICATION	1.014683510124334E-4	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9998985316489877	WITHOUT_CLASSIFICATION	1.014683510124334E-4	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999803593199518	WITHOUT_CLASSIFICATION	1.9640680048244495E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997592121351847	WITHOUT_CLASSIFICATION	2.4078786481518662E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998443050849612	WITHOUT_CLASSIFICATION	1.5569491503886196E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999830153768982	WITHOUT_CLASSIFICATION	1.69846231018482E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9996026214631811	WITHOUT_CLASSIFICATION	3.9737853681885265E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9994152834939117	WITHOUT_CLASSIFICATION	5.847165060882926E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999361321955542	WITHOUT_CLASSIFICATION	6.386780444577971E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9998855049259476	WITHOUT_CLASSIFICATION	1.1449507405236679E-4	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.999983926673791	WITHOUT_CLASSIFICATION	1.6073326209024907E-5	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999409017457531	WITHOUT_CLASSIFICATION	5.909825424686908E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999483155217189	WITHOUT_CLASSIFICATION	5.1684478281101086E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990549858778854	WITHOUT_CLASSIFICATION	9.450141221146482E-4	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997592121351847	WITHOUT_CLASSIFICATION	2.4078786481518662E-4	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999830587831178	WITHOUT_CLASSIFICATION	1.6941216882149697E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999998257864805	WITHOUT_CLASSIFICATION	1.7421351957059245E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999858010166619	WITHOUT_CLASSIFICATION	1.4198983338051021E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999739236153891	WITHOUT_CLASSIFICATION	2.6076384610941205E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999840306400423	WITHOUT_CLASSIFICATION	1.596935995772084E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9997347439412686	WITHOUT_CLASSIFICATION	2.652560587315001E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9972332437180157	WITHOUT_CLASSIFICATION	0.002766756281984432	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999966099480425	WITHOUT_CLASSIFICATION	3.390051957610205E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999872081002309	WITHOUT_CLASSIFICATION	1.2791899769042478E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9997329049147117	WITHOUT_CLASSIFICATION	2.6709508528837035E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9989943982854254	WITHOUT_CLASSIFICATION	0.0010056017145746074	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9987443900239608	WITHOUT_CLASSIFICATION	0.0012556099760392128	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999842998052236	WITHOUT_CLASSIFICATION	1.57001947763824E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9973758313591092	WITHOUT_CLASSIFICATION	0.0026241686408908387	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9983754947885416	WITHOUT_CLASSIFICATION	0.0016245052114583854	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9998249093139885	WITHOUT_CLASSIFICATION	1.750906860115649E-4	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999257826392353	WITHOUT_CLASSIFICATION	7.421736076472622E-5	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9998751942913948	WITHOUT_CLASSIFICATION	1.2480570860517573E-4	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999873615724505	WITHOUT_CLASSIFICATION	1.2638427549586535E-5	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9988000957596148	WITHOUT_CLASSIFICATION	0.0011999042403851602	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999395418346843	WITHOUT_CLASSIFICATION	6.045816531559016E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9996739694261095	WITHOUT_CLASSIFICATION	3.2603057389047523E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999803439965789	WITHOUT_CLASSIFICATION	1.9656003421112832E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9996651567053157	WITHOUT_CLASSIFICATION	3.3484329468428536E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9996706366281038	WITHOUT_CLASSIFICATION	3.293633718961581E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999950849005171	WITHOUT_CLASSIFICATION	4.91509948284593E-6	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999561110376923	WITHOUT_CLASSIFICATION	4.388896230767982E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9994496345247416	WITHOUT_CLASSIFICATION	5.503654752584203E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9982926768876657	WITHOUT_CLASSIFICATION	0.00170732311233435	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9960145528730546	WITHOUT_CLASSIFICATION	0.003985447126945371	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9998498959698524	WITHOUT_CLASSIFICATION	1.5010403014764995E-4	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999913665825051	WITHOUT_CLASSIFICATION	8.633417494862122E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999363977841338	WITHOUT_CLASSIFICATION	6.360221586618474E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9997789250701796	WITHOUT_CLASSIFICATION	2.2107492982028048E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999502980117823	WITHOUT_CLASSIFICATION	4.970198821770312E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9953271906101219	WITHOUT_CLASSIFICATION	0.004672809389878134	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9998573779766714	WITHOUT_CLASSIFICATION	1.42622023328709E-4	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9996651567053157	WITHOUT_CLASSIFICATION	3.3484329468428536E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999355573484445	WITHOUT_CLASSIFICATION	6.444265155546276E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.999998186862321	WITHOUT_CLASSIFICATION	1.8131376789618783E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.999998186862321	WITHOUT_CLASSIFICATION	1.8131376789618783E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999881376749519	WITHOUT_CLASSIFICATION	1.1862325048099294E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999881376749519	WITHOUT_CLASSIFICATION	1.1862325048099294E-5	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9899211893271315	WITHOUT_CLASSIFICATION	0.01007881067286855	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999460564398047	WITHOUT_CLASSIFICATION	5.3943560195203134E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999774920490959	WITHOUT_CLASSIFICATION	2.2507950904119917E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.999883102205648	WITHOUT_CLASSIFICATION	1.1689779435203534E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9995719192411667	WITHOUT_CLASSIFICATION	4.280807588332494E-4	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9998082089075546	WITHOUT_CLASSIFICATION	1.9179109244545065E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9997573458345346	WITHOUT_CLASSIFICATION	2.4265416546547324E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9998837594532886	WITHOUT_CLASSIFICATION	1.1624054671146235E-4	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999683529638167	WITHOUT_CLASSIFICATION	3.164703618318278E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999630207021496	WITHOUT_CLASSIFICATION	3.697929785042007E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9996032086370066	WITHOUT_CLASSIFICATION	3.967913629933605E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.999815606482861	WITHOUT_CLASSIFICATION	1.8439351713888508E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9958055228308383	WITHOUT_CLASSIFICATION	0.00419447716916171	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999821164934226	WITHOUT_CLASSIFICATION	1.7883506577376724E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999535921536821	WITHOUT_CLASSIFICATION	4.640784631788157E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9996079397107671	WITHOUT_CLASSIFICATION	3.9206028923285323E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9990649700212568	WITHOUT_CLASSIFICATION	9.350299787431594E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998665020105169	WITHOUT_CLASSIFICATION	1.3349798948301655E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998665020105169	WITHOUT_CLASSIFICATION	1.3349798948301655E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9986608759194817	WITHOUT_CLASSIFICATION	0.00133912408051823	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998370173420555	WITHOUT_CLASSIFICATION	1.6298265794447434E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9965564843291614	WITHOUT_CLASSIFICATION	0.003443515670838517	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999850054102005	WITHOUT_CLASSIFICATION	1.4994589799494776E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.999823032652996	WITHOUT_CLASSIFICATION	1.769673470040159E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.999823032652996	WITHOUT_CLASSIFICATION	1.769673470040159E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9985481392539427	WITHOUT_CLASSIFICATION	0.0014518607460573402	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999996475612735	WITHOUT_CLASSIFICATION	3.524387264718091E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999897149974739	WITHOUT_CLASSIFICATION	1.0285002526087716E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999482116415652	WITHOUT_CLASSIFICATION	5.178835843471187E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9994679780041578	WITHOUT_CLASSIFICATION	5.3202199584218E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999850054102005	WITHOUT_CLASSIFICATION	1.4994589799494776E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.999823032652996	WITHOUT_CLASSIFICATION	1.769673470040159E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.999823032652996	WITHOUT_CLASSIFICATION	1.769673470040159E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9985481392539427	WITHOUT_CLASSIFICATION	0.0014518607460573402	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9995306508057826	WITHOUT_CLASSIFICATION	4.693491942173155E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999452253530925	WITHOUT_CLASSIFICATION	5.477464690764446E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9997801926742172	WITHOUT_CLASSIFICATION	2.1980732578278934E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999848868061423	WITHOUT_CLASSIFICATION	1.5113193857731204E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9941308688510955	WITHOUT_CLASSIFICATION	0.005869131148904546	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.99415902609973	WITHOUT_CLASSIFICATION	0.005840973900270088	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999774551409212	WITHOUT_CLASSIFICATION	2.254485907876628E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997770470330081	WITHOUT_CLASSIFICATION	2.2295296699192686E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997770470330081	WITHOUT_CLASSIFICATION	2.2295296699192686E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9997494069261144	WITHOUT_CLASSIFICATION	2.505930738856746E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999731231235332	WITHOUT_CLASSIFICATION	2.687687646679906E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9998364997473931	WITHOUT_CLASSIFICATION	1.6350025260696507E-4	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997668072499827	WITHOUT_CLASSIFICATION	2.3319275001742136E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9997359797315319	WITHOUT_CLASSIFICATION	2.64020268468015E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998500586966147	WITHOUT_CLASSIFICATION	1.4994130338533582E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.999875086491571	WITHOUT_CLASSIFICATION	1.249135084290744E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999166147692087	WITHOUT_CLASSIFICATION	8.338523079127551E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9958241669620259	WITHOUT_CLASSIFICATION	0.004175833037974088	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9998435687408416	WITHOUT_CLASSIFICATION	1.5643125915851383E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999887814973709	WITHOUT_CLASSIFICATION	1.1218502629048146E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9994453569973215	WITHOUT_CLASSIFICATION	5.546430026785024E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9998199919431179	WITHOUT_CLASSIFICATION	1.8000805688212802E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.997877410435744	WITHOUT_CLASSIFICATION	0.002122589564256014	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9997983829485182	WITHOUT_CLASSIFICATION	2.0161705148193714E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9997395282683686	WITHOUT_CLASSIFICATION	2.6047173163135724E-4	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9969921941291681	WITHOUT_CLASSIFICATION	0.0030078058708318503	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.999893336120884	WITHOUT_CLASSIFICATION	1.0666387911590895E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999350382364062	WITHOUT_CLASSIFICATION	6.496176359390813E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9979972048330261	WITHOUT_CLASSIFICATION	0.002002795166973982	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9987895909405143	WITHOUT_CLASSIFICATION	0.001210409059485659	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9996754838664864	WITHOUT_CLASSIFICATION	3.245161335136364E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9994458493564785	WITHOUT_CLASSIFICATION	5.541506435214002E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999124723473052	WITHOUT_CLASSIFICATION	8.752765269479404E-5	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.999980828287752	WITHOUT_CLASSIFICATION	1.9171712247995913E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999258140458706	WITHOUT_CLASSIFICATION	7.418595412953666E-5	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9982018233097587	WITHOUT_CLASSIFICATION	0.0017981766902413594	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999989461193177	WITHOUT_CLASSIFICATION	1.0538806823244208E-6	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.999998247975165	WITHOUT_CLASSIFICATION	1.7520248350025067E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9998425034105202	WITHOUT_CLASSIFICATION	1.574965894798718E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999655718328334	WITHOUT_CLASSIFICATION	3.4428167166588694E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999917122946761	WITHOUT_CLASSIFICATION	8.287705323907775E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999917122946761	WITHOUT_CLASSIFICATION	8.287705323907775E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9998047334304063	WITHOUT_CLASSIFICATION	1.9526656959368373E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.999947181807551	WITHOUT_CLASSIFICATION	5.2818192448955265E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999662988718266	WITHOUT_CLASSIFICATION	3.3701128173338847E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999569821475763	WITHOUT_CLASSIFICATION	4.301785242361091E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999047896003173	WITHOUT_CLASSIFICATION	9.521039968280053E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999837180701959	WITHOUT_CLASSIFICATION	1.628192980407268E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998809643877071	WITHOUT_CLASSIFICATION	1.1903561229284672E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9996412467780663	WITHOUT_CLASSIFICATION	3.5875322193370347E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9986682975485546	WITHOUT_CLASSIFICATION	0.0013317024514454161	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9995947457790553	WITHOUT_CLASSIFICATION	4.0525422094460584E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9993613913181585	WITHOUT_CLASSIFICATION	6.386086818414767E-4	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9995675140952438	WITHOUT_CLASSIFICATION	4.3248590475618E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998809643877071	WITHOUT_CLASSIFICATION	1.1903561229284672E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998809643877071	WITHOUT_CLASSIFICATION	1.1903561229284672E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999929871939082	WITHOUT_CLASSIFICATION	7.012806091866423E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999773524695672	WITHOUT_CLASSIFICATION	2.2647530432812943E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9996097668508395	WITHOUT_CLASSIFICATION	3.9023314916062735E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999143337052403	WITHOUT_CLASSIFICATION	8.566629475969318E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999482267782	WITHOUT_CLASSIFICATION	5.177322169371997E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9998849924178355	WITHOUT_CLASSIFICATION	1.150075821646026E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9998847326307407	WITHOUT_CLASSIFICATION	1.152673692593448E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9998847326307407	WITHOUT_CLASSIFICATION	1.152673692593448E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9998847326307407	WITHOUT_CLASSIFICATION	1.152673692593448E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9996616538128137	WITHOUT_CLASSIFICATION	3.38346187186363E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999427449084615	WITHOUT_CLASSIFICATION	5.725509153866875E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9989778740048002	WITHOUT_CLASSIFICATION	0.0010221259951998225	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999694351020236	WITHOUT_CLASSIFICATION	3.05648979763839E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999041495886727	WITHOUT_CLASSIFICATION	9.585041132734104E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9998857952805796	WITHOUT_CLASSIFICATION	1.1420471942026615E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999477412032943	WITHOUT_CLASSIFICATION	5.225879670556669E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9998845304953423	WITHOUT_CLASSIFICATION	1.1546950465759023E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9989778740048002	WITHOUT_CLASSIFICATION	0.0010221259951998225	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999846296178612	WITHOUT_CLASSIFICATION	1.5370382138823623E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9998430218262014	WITHOUT_CLASSIFICATION	1.5697817379854546E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999233080001996	WITHOUT_CLASSIFICATION	7.669199980041619E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999835278518835	WITHOUT_CLASSIFICATION	1.647214811641938E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.999323959079514	WITHOUT_CLASSIFICATION	6.76040920486078E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999051972859015	WITHOUT_CLASSIFICATION	9.480271409839899E-5	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999917914192904	WITHOUT_CLASSIFICATION	8.208580709589976E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9996144069473929	WITHOUT_CLASSIFICATION	3.855930526070988E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999389555953629	WITHOUT_CLASSIFICATION	6.104440463706522E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9998546373980184	WITHOUT_CLASSIFICATION	1.4536260198166898E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999389555953629	WITHOUT_CLASSIFICATION	6.104440463706522E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9996054987826364	WITHOUT_CLASSIFICATION	3.945012173636336E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9994942679895625	WITHOUT_CLASSIFICATION	5.057320104375387E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999418614316281	WITHOUT_CLASSIFICATION	5.813856837189734E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999494545146614	WITHOUT_CLASSIFICATION	5.054548533850672E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999344320984912	WITHOUT_CLASSIFICATION	6.556790150874278E-5	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999973412716701	WITHOUT_CLASSIFICATION	2.658728329992135E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9901423577385149	WITHOUT_CLASSIFICATION	0.009857642261485066	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9977262438183148	WITHOUT_CLASSIFICATION	0.0022737561816852264	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9998745891517385	WITHOUT_CLASSIFICATION	1.2541084826148447E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9987056573299175	WITHOUT_CLASSIFICATION	0.0012943426700825415	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9995855554733635	WITHOUT_CLASSIFICATION	4.144445266365169E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9998088706237828	WITHOUT_CLASSIFICATION	1.9112937621726367E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9994541449822056	WITHOUT_CLASSIFICATION	5.458550177943277E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9721229100035348	WITHOUT_CLASSIFICATION	0.027877089996465168	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.999802911178188	WITHOUT_CLASSIFICATION	1.9708882181197982E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9997558584525474	WITHOUT_CLASSIFICATION	2.441415474526126E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999326466671336	WITHOUT_CLASSIFICATION	6.735333286643409E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9857606181414422	WITHOUT_CLASSIFICATION	0.014239381858557764	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999570040791802	WITHOUT_CLASSIFICATION	4.299592081974904E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999117929581728	WITHOUT_CLASSIFICATION	8.820704182724939E-5	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999758863690884	WITHOUT_CLASSIFICATION	2.411363091163905E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999301533807345	WITHOUT_CLASSIFICATION	6.98466192654107E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999009637277547	WITHOUT_CLASSIFICATION	9.903627224518515E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9901423577385149	WITHOUT_CLASSIFICATION	0.009857642261485066	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9998354724565807	WITHOUT_CLASSIFICATION	1.6452754341933975E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9998354724565807	WITHOUT_CLASSIFICATION	1.6452754341933975E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999981298626598	WITHOUT_CLASSIFICATION	1.8701373402064568E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999832829737881	WITHOUT_CLASSIFICATION	1.6717026211852312E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999832829737881	WITHOUT_CLASSIFICATION	1.6717026211852312E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9998517908959678	WITHOUT_CLASSIFICATION	1.4820910403226374E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9998517908959678	WITHOUT_CLASSIFICATION	1.4820910403226374E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9993611110047319	WITHOUT_CLASSIFICATION	6.38888995268076E-4	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999709609927815	WITHOUT_CLASSIFICATION	2.9039007218493152E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998402603501332	WITHOUT_CLASSIFICATION	1.5973964986684664E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997564256968074	WITHOUT_CLASSIFICATION	2.435743031925535E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.999964413166198	WITHOUT_CLASSIFICATION	3.558683380198453E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9998255389933177	WITHOUT_CLASSIFICATION	1.7446100668226032E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999885709982822	WITHOUT_CLASSIFICATION	1.1429001717799946E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999689576703866	WITHOUT_CLASSIFICATION	3.104232961344048E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999439016001261	WITHOUT_CLASSIFICATION	5.609839987391334E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999857339653131	WITHOUT_CLASSIFICATION	1.4266034686956886E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9998346093483869	WITHOUT_CLASSIFICATION	1.653906516130657E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999540271719711	WITHOUT_CLASSIFICATION	4.597282802884278E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995655977161009	WITHOUT_CLASSIFICATION	4.3440228389909896E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995655977161009	WITHOUT_CLASSIFICATION	4.3440228389909896E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.999583564545947	WITHOUT_CLASSIFICATION	4.1643545405303377E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9985939855591934	WITHOUT_CLASSIFICATION	0.0014060144408065823	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.999993032889906	WITHOUT_CLASSIFICATION	6.9671100939789836E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9975834221018914	WITHOUT_CLASSIFICATION	0.0024165778981085654	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999857163628432	WITHOUT_CLASSIFICATION	1.4283637156810159E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999400114168613	WITHOUT_CLASSIFICATION	5.998858313870846E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999714859673119	WITHOUT_CLASSIFICATION	2.8514032688170762E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999237076079677	WITHOUT_CLASSIFICATION	7.629239203230107E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.999873540848059	WITHOUT_CLASSIFICATION	1.2645915194091272E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.999798939266855	WITHOUT_CLASSIFICATION	2.0106073314490828E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999971024436702	WITHOUT_CLASSIFICATION	2.8975563297182648E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999608431511571	WITHOUT_CLASSIFICATION	3.915684884294016E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999852865401854	WITHOUT_CLASSIFICATION	1.4713459814629397E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999752275252617	WITHOUT_CLASSIFICATION	2.477247473840311E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9998844052803796	WITHOUT_CLASSIFICATION	1.1559471962037542E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999839379841677	WITHOUT_CLASSIFICATION	1.606201583226088E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999052518261327	WITHOUT_CLASSIFICATION	9.4748173867317E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999299134857071	WITHOUT_CLASSIFICATION	7.008651429294335E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9998806592849946	WITHOUT_CLASSIFICATION	1.193407150053432E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999632171871156	WITHOUT_CLASSIFICATION	3.6782812884399964E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9998608905465906	WITHOUT_CLASSIFICATION	1.3910945340941922E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999984281634338	WITHOUT_CLASSIFICATION	1.5718365662016336E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999709668273445	WITHOUT_CLASSIFICATION	2.9033172655418226E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999373684986709	WITHOUT_CLASSIFICATION	6.263150132917742E-5	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999373684986709	WITHOUT_CLASSIFICATION	6.263150132917742E-5	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.999939803635347	WITHOUT_CLASSIFICATION	6.0196364653046986E-5	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999933782560462	WITHOUT_CLASSIFICATION	6.6217439539151185E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999897548345636	WITHOUT_CLASSIFICATION	1.024516543633082E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.999963279494307	WITHOUT_CLASSIFICATION	3.6720505692996464E-5	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999474857090402	WITHOUT_CLASSIFICATION	5.2514290959843145E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9973313224893482	WITHOUT_CLASSIFICATION	0.00266867751065188	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9989805052189739	WITHOUT_CLASSIFICATION	0.0010194947810261525	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999270520498023	WITHOUT_CLASSIFICATION	7.294795019777884E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9990949750576802	WITHOUT_CLASSIFICATION	9.050249423197146E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9994342179033155	WITHOUT_CLASSIFICATION	5.657820966844208E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999681746809377	WITHOUT_CLASSIFICATION	3.18253190623839E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998324108264887	WITHOUT_CLASSIFICATION	1.6758917351134708E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999392265853186	WITHOUT_CLASSIFICATION	6.077341468130956E-5	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999454072200299	WITHOUT_CLASSIFICATION	5.4592779970011824E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999562485594868	WITHOUT_CLASSIFICATION	4.3751440513165E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9996354916765703	WITHOUT_CLASSIFICATION	3.6450832342977747E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999418484192668	WITHOUT_CLASSIFICATION	5.815158073329111E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999828014716662	WITHOUT_CLASSIFICATION	1.7198528333839596E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999100256538496	WITHOUT_CLASSIFICATION	8.997434615047444E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9995518525645809	WITHOUT_CLASSIFICATION	4.481474354190817E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999927809032003	WITHOUT_CLASSIFICATION	7.219096799680986E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9998719588173121	WITHOUT_CLASSIFICATION	1.28041182687893E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9996354916765703	WITHOUT_CLASSIFICATION	3.6450832342977747E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999828014716662	WITHOUT_CLASSIFICATION	1.7198528333839596E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999580787550164	WITHOUT_CLASSIFICATION	4.1921244983659316E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.999979083522404	WITHOUT_CLASSIFICATION	2.0916477595864567E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999400399367931	WITHOUT_CLASSIFICATION	5.996006320690405E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9998915724476295	WITHOUT_CLASSIFICATION	1.0842755237046748E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988324820321456	WITHOUT_CLASSIFICATION	0.0011675179678543768	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999623927291327	WITHOUT_CLASSIFICATION	3.760727086733448E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999503801775499	WITHOUT_CLASSIFICATION	4.9619822450066703E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.999913967201941	WITHOUT_CLASSIFICATION	8.603279805891772E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999571706606708	WITHOUT_CLASSIFICATION	4.2829339329169235E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999571706606708	WITHOUT_CLASSIFICATION	4.2829339329169235E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9998575958343036	WITHOUT_CLASSIFICATION	1.424041656964655E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9998732317983449	WITHOUT_CLASSIFICATION	1.2676820165511034E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999378874291307	WITHOUT_CLASSIFICATION	6.211257086923124E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999622386864414	WITHOUT_CLASSIFICATION	3.776131355856682E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999622386864414	WITHOUT_CLASSIFICATION	3.776131355856682E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999582435732313	WITHOUT_CLASSIFICATION	4.1756426768797186E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996904915819094	WITHOUT_CLASSIFICATION	3.0950841809068545E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999880940259032	WITHOUT_CLASSIFICATION	1.190597409695347E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999805126556272	WITHOUT_CLASSIFICATION	1.9487344372804478E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9998508198050426	WITHOUT_CLASSIFICATION	1.491801949573826E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9998788677439377	WITHOUT_CLASSIFICATION	1.2113225606236668E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999454608774428	WITHOUT_CLASSIFICATION	5.453912255717545E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998921615542288	WITHOUT_CLASSIFICATION	1.0783844577123597E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999914485044766	WITHOUT_CLASSIFICATION	8.551495523347249E-6	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999956241807152	WITHOUT_CLASSIFICATION	4.375819284774118E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999953546472155	WITHOUT_CLASSIFICATION	4.645352784528025E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9993059619367851	WITHOUT_CLASSIFICATION	6.940380632148393E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999880940259032	WITHOUT_CLASSIFICATION	1.190597409695347E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999805126556272	WITHOUT_CLASSIFICATION	1.9487344372804478E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997770470330081	WITHOUT_CLASSIFICATION	2.2295296699192686E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.999882310789584	WITHOUT_CLASSIFICATION	1.1768921041594116E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999479859004344	WITHOUT_CLASSIFICATION	5.201409956560012E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999754053481756	WITHOUT_CLASSIFICATION	2.459465182439858E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999754053481756	WITHOUT_CLASSIFICATION	2.459465182439858E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9995838221644827	WITHOUT_CLASSIFICATION	4.1617783551739843E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9995838221644827	WITHOUT_CLASSIFICATION	4.1617783551739843E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999940207882215	WITHOUT_CLASSIFICATION	5.979211778485898E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999402088026152	WITHOUT_CLASSIFICATION	5.9791197384644054E-5	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999289253793889	WITHOUT_CLASSIFICATION	7.10746206109934E-5	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999387579309877	WITHOUT_CLASSIFICATION	6.1242069012294E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.999856576675536	WITHOUT_CLASSIFICATION	1.434233244640801E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999149714010945	WITHOUT_CLASSIFICATION	8.50285989054502E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999605267926766	WITHOUT_CLASSIFICATION	3.9473207323449024E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9995524523703677	WITHOUT_CLASSIFICATION	4.475476296323152E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999824661650591	WITHOUT_CLASSIFICATION	1.75338349407486E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999824661650591	WITHOUT_CLASSIFICATION	1.75338349407486E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995392571179716	WITHOUT_CLASSIFICATION	4.607428820282888E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995392571179716	WITHOUT_CLASSIFICATION	4.607428820282888E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995392571179716	WITHOUT_CLASSIFICATION	4.607428820282888E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997236744506524	WITHOUT_CLASSIFICATION	2.7632554934765516E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997236744506524	WITHOUT_CLASSIFICATION	2.7632554934765516E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997236744506524	WITHOUT_CLASSIFICATION	2.7632554934765516E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999906407761114	WITHOUT_CLASSIFICATION	9.359223888635658E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999906407761114	WITHOUT_CLASSIFICATION	9.359223888635658E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996828545172444	WITHOUT_CLASSIFICATION	3.171454827556184E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996828545172444	WITHOUT_CLASSIFICATION	3.171454827556184E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999287838116547	WITHOUT_CLASSIFICATION	7.121618834530836E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999287838116547	WITHOUT_CLASSIFICATION	7.121618834530836E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998642810249471	WITHOUT_CLASSIFICATION	1.3571897505293686E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998642810249471	WITHOUT_CLASSIFICATION	1.3571897505293686E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999079547595926	WITHOUT_CLASSIFICATION	9.204524040747095E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999079547595926	WITHOUT_CLASSIFICATION	9.204524040747095E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999956474687567	WITHOUT_CLASSIFICATION	4.352531243258516E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999956474687567	WITHOUT_CLASSIFICATION	4.352531243258516E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999906407761114	WITHOUT_CLASSIFICATION	9.359223888635658E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996828545172444	WITHOUT_CLASSIFICATION	3.171454827556184E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999287838116547	WITHOUT_CLASSIFICATION	7.121618834530836E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999079547595926	WITHOUT_CLASSIFICATION	9.204524040747095E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999956474687567	WITHOUT_CLASSIFICATION	4.352531243258516E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9997486104955124	WITHOUT_CLASSIFICATION	2.5138950448759024E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9802131599165819	WITHOUT_CLASSIFICATION	0.019786840083418182	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9997495529327806	WITHOUT_CLASSIFICATION	2.5044706721939406E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998362506761104	WITHOUT_CLASSIFICATION	1.6374932388963043E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999703906752035	WITHOUT_CLASSIFICATION	2.960932479649887E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999642111714463	WITHOUT_CLASSIFICATION	3.578882855375349E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999420755307222	WITHOUT_CLASSIFICATION	5.792446927763075E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999259032239319	WITHOUT_CLASSIFICATION	7.409677606815317E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999418118747909	WITHOUT_CLASSIFICATION	5.818812520911342E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997470324507639	WITHOUT_CLASSIFICATION	2.529675492361296E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996807089683233	WITHOUT_CLASSIFICATION	3.192910316766887E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999420508893948	WITHOUT_CLASSIFICATION	5.794911060529533E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999455492262963	WITHOUT_CLASSIFICATION	5.445077370356641E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9997332457654403	WITHOUT_CLASSIFICATION	2.6675423455963795E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9994098429458439	WITHOUT_CLASSIFICATION	5.90157054156147E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999439365699896	WITHOUT_CLASSIFICATION	5.6063430010334125E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9997289113425455	WITHOUT_CLASSIFICATION	2.7108865745455364E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9997546806993778	WITHOUT_CLASSIFICATION	2.4531930062217583E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9993278643776841	WITHOUT_CLASSIFICATION	6.72135622315998E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997679190130387	WITHOUT_CLASSIFICATION	2.320809869611634E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9998509212315813	WITHOUT_CLASSIFICATION	1.490787684187071E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.999720590064937	WITHOUT_CLASSIFICATION	2.794099350631104E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997289113425455	WITHOUT_CLASSIFICATION	2.7108865745455364E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999913844180865	WITHOUT_CLASSIFICATION	8.615581913492075E-5	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999913844180865	WITHOUT_CLASSIFICATION	8.615581913492075E-5	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9993278643776841	WITHOUT_CLASSIFICATION	6.72135622315998E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9997812749951619	WITHOUT_CLASSIFICATION	2.187250048380833E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9994776553605965	WITHOUT_CLASSIFICATION	5.223446394035623E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9997551657881696	WITHOUT_CLASSIFICATION	2.448342118303976E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9998770091320909	WITHOUT_CLASSIFICATION	1.2299086790919223E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999652304347654	WITHOUT_CLASSIFICATION	3.476956523459182E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.99974790782169	WITHOUT_CLASSIFICATION	2.5209217831000634E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9989728344694827	WITHOUT_CLASSIFICATION	0.0010271655305173191	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9997453418341332	WITHOUT_CLASSIFICATION	2.546581658667243E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999834618141369	WITHOUT_CLASSIFICATION	1.6538185863098324E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999834618141369	WITHOUT_CLASSIFICATION	1.6538185863098324E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997477636677709	WITHOUT_CLASSIFICATION	2.522363322292137E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997477636677709	WITHOUT_CLASSIFICATION	2.522363322292137E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997477636677709	WITHOUT_CLASSIFICATION	2.522363322292137E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999690019596453	WITHOUT_CLASSIFICATION	3.099804035470353E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999690019596453	WITHOUT_CLASSIFICATION	3.099804035470353E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999416170427878	WITHOUT_CLASSIFICATION	5.838295721203394E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999416170427878	WITHOUT_CLASSIFICATION	5.838295721203394E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9996263786780166	WITHOUT_CLASSIFICATION	3.736213219833551E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999228061295369	WITHOUT_CLASSIFICATION	7.719387046317186E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9996235506957661	WITHOUT_CLASSIFICATION	3.764493042337708E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999561271110597	WITHOUT_CLASSIFICATION	4.387288894031934E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999894471816212	WITHOUT_CLASSIFICATION	1.0552818378833145E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9998780906176002	WITHOUT_CLASSIFICATION	1.219093823998438E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999712098365252	WITHOUT_CLASSIFICATION	2.8790163474780036E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9998463122640585	WITHOUT_CLASSIFICATION	1.5368773594157508E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999464966393118	WITHOUT_CLASSIFICATION	5.3503360688097824E-5	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9995931205803281	WITHOUT_CLASSIFICATION	4.068794196719524E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999498026769041	WITHOUT_CLASSIFICATION	5.019732309587563E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999886381851754	WITHOUT_CLASSIFICATION	1.1361814824549349E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997499018155755	WITHOUT_CLASSIFICATION	2.5009818442448033E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997453418341332	WITHOUT_CLASSIFICATION	2.546581658667243E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9990126883860679	WITHOUT_CLASSIFICATION	9.873116139320817E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999398538290108	WITHOUT_CLASSIFICATION	6.014617098901467E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9994804306211691	WITHOUT_CLASSIFICATION	5.19569378830929E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999418929413455	WITHOUT_CLASSIFICATION	5.810705865459465E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999418929413455	WITHOUT_CLASSIFICATION	5.810705865459465E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999418929413455	WITHOUT_CLASSIFICATION	5.810705865459465E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999422474594076	WITHOUT_CLASSIFICATION	5.7752540592395025E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999422474594076	WITHOUT_CLASSIFICATION	5.7752540592395025E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999420871803731	WITHOUT_CLASSIFICATION	5.791281962678308E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999420871803731	WITHOUT_CLASSIFICATION	5.791281962678308E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9996123623196483	WITHOUT_CLASSIFICATION	3.8763768035168957E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999625795753031	WITHOUT_CLASSIFICATION	3.742042469701043E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9993933200321968	WITHOUT_CLASSIFICATION	6.066799678032459E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9993933200321968	WITHOUT_CLASSIFICATION	6.066799678032459E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998463424273988	WITHOUT_CLASSIFICATION	1.536575726012008E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9993441863634952	WITHOUT_CLASSIFICATION	6.558136365047843E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9901648308992187	WITHOUT_CLASSIFICATION	0.009835169100781313	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999687974347725	WITHOUT_CLASSIFICATION	3.1202565227393275E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999687974347725	WITHOUT_CLASSIFICATION	3.1202565227393275E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999686044945993	WITHOUT_CLASSIFICATION	3.139550540054308E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999462234313945	WITHOUT_CLASSIFICATION	5.377656860544061E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999287266061311	WITHOUT_CLASSIFICATION	7.1273393868869E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999690019596453	WITHOUT_CLASSIFICATION	3.099804035470353E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999690019596453	WITHOUT_CLASSIFICATION	3.099804035470353E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999416170427878	WITHOUT_CLASSIFICATION	5.838295721203394E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997499018155755	WITHOUT_CLASSIFICATION	2.5009818442448033E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997453418341332	WITHOUT_CLASSIFICATION	2.546581658667243E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999416895028218	WITHOUT_CLASSIFICATION	5.8310497178318056E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999422474594076	WITHOUT_CLASSIFICATION	5.7752540592395025E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998463424273988	WITHOUT_CLASSIFICATION	1.536575726012008E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999428356286566	WITHOUT_CLASSIFICATION	5.716437134344639E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999410677516548	WITHOUT_CLASSIFICATION	5.8932248345125285E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9998808775641602	WITHOUT_CLASSIFICATION	1.191224358398434E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996807089683233	WITHOUT_CLASSIFICATION	3.192910316766887E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9996935746560855	WITHOUT_CLASSIFICATION	3.064253439145198E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9997990745750959	WITHOUT_CLASSIFICATION	2.0092542490400138E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.999963782485839	WITHOUT_CLASSIFICATION	3.621751416112154E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.999907914247214	WITHOUT_CLASSIFICATION	9.208575278600992E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9998478042271101	WITHOUT_CLASSIFICATION	1.521957728899286E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999895042696293	WITHOUT_CLASSIFICATION	1.0495730370679953E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9998762989938793	WITHOUT_CLASSIFICATION	1.237010061207326E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9998947710472825	WITHOUT_CLASSIFICATION	1.0522895271747363E-4	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999417342488172	WITHOUT_CLASSIFICATION	5.826575118272573E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999268646660008	WITHOUT_CLASSIFICATION	7.313533399914576E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999818534791048	WITHOUT_CLASSIFICATION	1.8146520895154296E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999725829010231	WITHOUT_CLASSIFICATION	2.741709897685004E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9983178464989346	WITHOUT_CLASSIFICATION	0.0016821535010653878	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.994140830081716	WITHOUT_CLASSIFICATION	0.00585916991828398	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999234045909735	WITHOUT_CLASSIFICATION	7.659540902649126E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999358064328977	WITHOUT_CLASSIFICATION	6.419356710231979E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999896354834445	WITHOUT_CLASSIFICATION	1.0364516555508418E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999932836677775	WITHOUT_CLASSIFICATION	6.716332222412177E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999932836677775	WITHOUT_CLASSIFICATION	6.716332222412177E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999499220360681	WITHOUT_CLASSIFICATION	5.007796393193941E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9997981085493842	WITHOUT_CLASSIFICATION	2.0189145061576865E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9964703145959554	WITHOUT_CLASSIFICATION	0.003529685404044667	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9986456559008904	WITHOUT_CLASSIFICATION	0.0013543440991096761	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999152299433105	WITHOUT_CLASSIFICATION	8.477005668952356E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9996806714053355	WITHOUT_CLASSIFICATION	3.193285946644729E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999435383966888	WITHOUT_CLASSIFICATION	5.6461603311233356E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.999829369232778	WITHOUT_CLASSIFICATION	1.7063076722190378E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9940037780210292	WITHOUT_CLASSIFICATION	0.005996221978970704	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999730518415462	WITHOUT_CLASSIFICATION	2.694815845387602E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9997300194287865	WITHOUT_CLASSIFICATION	2.699805712135335E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999209037925216	WITHOUT_CLASSIFICATION	7.909620747835484E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998537838049651	WITHOUT_CLASSIFICATION	1.4621619503490377E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.999857972908808	WITHOUT_CLASSIFICATION	1.4202709119205778E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999737930513815	WITHOUT_CLASSIFICATION	2.6206948618517193E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9998629929909318	WITHOUT_CLASSIFICATION	1.3700700906812862E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999239899988884	WITHOUT_CLASSIFICATION	7.601000111156195E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999960836189844	WITHOUT_CLASSIFICATION	3.916381015601183E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999960836189844	WITHOUT_CLASSIFICATION	3.916381015601183E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999813670242189	WITHOUT_CLASSIFICATION	1.863297578103847E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999773428639285	WITHOUT_CLASSIFICATION	2.265713607156158E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999808309379862	WITHOUT_CLASSIFICATION	1.9169062013844244E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999977344779575	WITHOUT_CLASSIFICATION	2.2655220425031837E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999776355521026	WITHOUT_CLASSIFICATION	2.2364447897325123E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999306810823658	WITHOUT_CLASSIFICATION	6.931891763416598E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999964112965485	WITHOUT_CLASSIFICATION	3.5887034514573728E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999600229450187	WITHOUT_CLASSIFICATION	3.997705498135339E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999950768868837	WITHOUT_CLASSIFICATION	4.9231131162852216E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9994200750726464	WITHOUT_CLASSIFICATION	5.799249273535195E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999914727706258	WITHOUT_CLASSIFICATION	8.527229374234353E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.999482339415283	WITHOUT_CLASSIFICATION	5.176605847170378E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999156392669576	WITHOUT_CLASSIFICATION	8.436073304239947E-5	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999911815356227	WITHOUT_CLASSIFICATION	8.818464377308949E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999982518141587	WITHOUT_CLASSIFICATION	1.7481858413285717E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999982917960197	WITHOUT_CLASSIFICATION	1.7082039802699672E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998989334462755	WITHOUT_CLASSIFICATION	1.0106655372461228E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9996649653391807	WITHOUT_CLASSIFICATION	3.3503466081921055E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9990725462026802	WITHOUT_CLASSIFICATION	9.274537973198849E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9998120100586619	WITHOUT_CLASSIFICATION	1.879899413380262E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.99832744799398	WITHOUT_CLASSIFICATION	0.0016725520060199893	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998281256477334	WITHOUT_CLASSIFICATION	1.7187435226663765E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999629820861814	WITHOUT_CLASSIFICATION	3.701791381857336E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998036480513777	WITHOUT_CLASSIFICATION	1.9635194862233126E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999829105466622	WITHOUT_CLASSIFICATION	1.708945333781233E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999942767863405	WITHOUT_CLASSIFICATION	5.723213659584464E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999558866979048	WITHOUT_CLASSIFICATION	4.411330209528366E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998198316091003	WITHOUT_CLASSIFICATION	1.801683908996777E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999802820545598	WITHOUT_CLASSIFICATION	1.9717945440247403E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999996419965261	WITHOUT_CLASSIFICATION	3.5800347388854487E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9996773298677173	WITHOUT_CLASSIFICATION	3.226701322826682E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9994671084792874	WITHOUT_CLASSIFICATION	5.328915207126219E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997835166135938	WITHOUT_CLASSIFICATION	2.1648338640623327E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999680072690675	WITHOUT_CLASSIFICATION	3.199273093245188E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.999891160050099	WITHOUT_CLASSIFICATION	1.088399499009783E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9980372933890129	WITHOUT_CLASSIFICATION	0.0019627066109871093	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9993905017903281	WITHOUT_CLASSIFICATION	6.094982096719021E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999287077727752	WITHOUT_CLASSIFICATION	7.12922272247798E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9992872920786278	WITHOUT_CLASSIFICATION	7.127079213723357E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999445243604569	WITHOUT_CLASSIFICATION	5.5475639543079546E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999045760916064	WITHOUT_CLASSIFICATION	9.542390839362991E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999076369354478	WITHOUT_CLASSIFICATION	9.236306455210926E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999978305156962	WITHOUT_CLASSIFICATION	2.1694843038054153E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998233153485749	WITHOUT_CLASSIFICATION	1.7668465142506854E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999877795315503	WITHOUT_CLASSIFICATION	1.2220468449765901E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999110353621868	WITHOUT_CLASSIFICATION	8.896463781311395E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996406623337073	WITHOUT_CLASSIFICATION	3.593376662926506E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9998805637823954	WITHOUT_CLASSIFICATION	1.1943621760451554E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999562893094289	WITHOUT_CLASSIFICATION	4.371069057107113E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.999733742381796	WITHOUT_CLASSIFICATION	2.662576182040063E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9829157341799509	WITHOUT_CLASSIFICATION	0.01708426582004904	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999466466041046	WITHOUT_CLASSIFICATION	5.335339589540103E-5	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999575584012664	WITHOUT_CLASSIFICATION	4.2441598733653947E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996941633390843	WITHOUT_CLASSIFICATION	3.058366609156963E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999584579599065	WITHOUT_CLASSIFICATION	4.154204009360179E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999356311552773	WITHOUT_CLASSIFICATION	6.436884472265132E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.999934278753085	WITHOUT_CLASSIFICATION	6.572124691496225E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9996882482243714	WITHOUT_CLASSIFICATION	3.117517756286739E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999035349005646	WITHOUT_CLASSIFICATION	9.646509943536514E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999102986546275	WITHOUT_CLASSIFICATION	8.970134537245332E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.999770784720902	WITHOUT_CLASSIFICATION	2.2921527909799535E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9995117945592241	WITHOUT_CLASSIFICATION	4.88205440775925E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9981847666855728	WITHOUT_CLASSIFICATION	0.0018152333144272577	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999519765108629	WITHOUT_CLASSIFICATION	4.8023489137154883E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999945488818019	WITHOUT_CLASSIFICATION	5.4511181981091926E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998207386608946	WITHOUT_CLASSIFICATION	1.7926133910540085E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999763267009006	WITHOUT_CLASSIFICATION	2.367329909942713E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997615467137749	WITHOUT_CLASSIFICATION	2.3845328622500853E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997718169820115	WITHOUT_CLASSIFICATION	2.2818301798852033E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9995547331035001	WITHOUT_CLASSIFICATION	4.452668964998185E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999800297978495	WITHOUT_CLASSIFICATION	1.9970202150475657E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999424491181582	WITHOUT_CLASSIFICATION	5.755088184179877E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999961024874916	WITHOUT_CLASSIFICATION	3.897512508418866E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999428518471255	WITHOUT_CLASSIFICATION	5.714815287442784E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998551949700468	WITHOUT_CLASSIFICATION	1.448050299532758E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9968392523228048	WITHOUT_CLASSIFICATION	0.003160747677195325	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999631520803068	WITHOUT_CLASSIFICATION	3.6847919693178196E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998967901317045	WITHOUT_CLASSIFICATION	1.0320986829548901E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999052641023222	WITHOUT_CLASSIFICATION	9.473589767780382E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999561947044615	WITHOUT_CLASSIFICATION	4.380529553855752E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999144213615971	WITHOUT_CLASSIFICATION	8.557863840289111E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531548013721	WITHOUT_CLASSIFICATION	4.6845198627892084E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956684252786	WITHOUT_CLASSIFICATION	4.331574721405287E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999586038486742	WITHOUT_CLASSIFICATION	4.1396151325872793E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997660249981478	WITHOUT_CLASSIFICATION	2.339750018522211E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999550472940408	WITHOUT_CLASSIFICATION	4.495270595913752E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999277249177629	WITHOUT_CLASSIFICATION	7.227508223708414E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999665540743742	WITHOUT_CLASSIFICATION	3.3445925625831194E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997756449365385	WITHOUT_CLASSIFICATION	2.243550634615119E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99912551791039	WITHOUT_CLASSIFICATION	8.744820896099336E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999508547841316	WITHOUT_CLASSIFICATION	4.914521586840051E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999477011211158	WITHOUT_CLASSIFICATION	5.2298878884317794E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9989396321775507	WITHOUT_CLASSIFICATION	0.001060367822449431	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998989210009069	WITHOUT_CLASSIFICATION	0.0010107899909309254	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990784612475175	WITHOUT_CLASSIFICATION	9.215387524824324E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990784612475175	WITHOUT_CLASSIFICATION	9.215387524824324E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998180515161496	WITHOUT_CLASSIFICATION	1.8194848385035702E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995333223170618	WITHOUT_CLASSIFICATION	4.6667768293819897E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9988461504069385	WITHOUT_CLASSIFICATION	0.001153849593061518	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988716612832438	WITHOUT_CLASSIFICATION	0.0011283387167561757	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998271544918642	WITHOUT_CLASSIFICATION	1.7284550813581414E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9964734612645573	WITHOUT_CLASSIFICATION	0.0035265387354428118	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9989889508739801	WITHOUT_CLASSIFICATION	0.0010110491260199056	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996252001273596	WITHOUT_CLASSIFICATION	3.747998726404135E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999960286406012	WITHOUT_CLASSIFICATION	3.9713593988085407E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99912551791039	WITHOUT_CLASSIFICATION	8.744820896099336E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998950049702439	WITHOUT_CLASSIFICATION	1.0499502975614566E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9988716612832438	WITHOUT_CLASSIFICATION	0.001128338716756175	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9991046151036673	WITHOUT_CLASSIFICATION	8.953848963327238E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998652396898116	WITHOUT_CLASSIFICATION	1.3476031018844092E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995333223170618	WITHOUT_CLASSIFICATION	4.6667768293819897E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996189004613225	WITHOUT_CLASSIFICATION	3.810995386775315E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999584771748703	WITHOUT_CLASSIFICATION	4.1522825129597535E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996667351957449	WITHOUT_CLASSIFICATION	3.332648042550956E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998778946465702	WITHOUT_CLASSIFICATION	1.2210535342980865E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999631520803068	WITHOUT_CLASSIFICATION	3.6847919693178196E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999033318244406	WITHOUT_CLASSIFICATION	9.666817555937784E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996667351957449	WITHOUT_CLASSIFICATION	3.332648042550956E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999033318244406	WITHOUT_CLASSIFICATION	9.666817555937784E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9989141533368576	WITHOUT_CLASSIFICATION	0.0010858466631424128	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9978364436882391	WITHOUT_CLASSIFICATION	0.0021635563117609093	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992318630031306	WITHOUT_CLASSIFICATION	7.681369968694318E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991961652402731	WITHOUT_CLASSIFICATION	8.038347597269258E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9924845186263134	WITHOUT_CLASSIFICATION	0.0075154813736866095	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992057185325518	WITHOUT_CLASSIFICATION	7.942814674482691E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989889508739801	WITHOUT_CLASSIFICATION	0.0010110491260199056	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996361764862838	WITHOUT_CLASSIFICATION	3.6382351371626965E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9968392523228048	WITHOUT_CLASSIFICATION	0.003160747677195324	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99912551791039	WITHOUT_CLASSIFICATION	8.744820896099331E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989715448686324	WITHOUT_CLASSIFICATION	0.001028455131367659	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999907420350303	WITHOUT_CLASSIFICATION	9.257964969698814E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996361764862838	WITHOUT_CLASSIFICATION	3.6382351371626965E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999603764374246	WITHOUT_CLASSIFICATION	3.9623562575348086E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997717826695601	WITHOUT_CLASSIFICATION	2.2821733043975083E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999099968611322	WITHOUT_CLASSIFICATION	9.000313886785288E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99995648879018	WITHOUT_CLASSIFICATION	4.351120982004436E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995818617496781	WITHOUT_CLASSIFICATION	4.181382503217922E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999627976353112	WITHOUT_CLASSIFICATION	3.7202364688827504E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995818617496781	WITHOUT_CLASSIFICATION	4.181382503217922E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999574910720023	WITHOUT_CLASSIFICATION	4.250892799783721E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998655449851706	WITHOUT_CLASSIFICATION	1.3445501482951548E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990270302269871	WITHOUT_CLASSIFICATION	9.72969773012792E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999091446984633	WITHOUT_CLASSIFICATION	9.085530153674285E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999477011211158	WITHOUT_CLASSIFICATION	5.2298878884317794E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999737930513815	WITHOUT_CLASSIFICATION	2.6206948618517193E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990549858778854	WITHOUT_CLASSIFICATION	9.450141221146482E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988324820321456	WITHOUT_CLASSIFICATION	0.0011675179678543768	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999892668351013	WITHOUT_CLASSIFICATION	1.0733164898702664E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995818617496781	WITHOUT_CLASSIFICATION	4.181382503217922E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999569821475763	WITHOUT_CLASSIFICATION	4.301785242361091E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999065104867728	WITHOUT_CLASSIFICATION	9.348951322718194E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988922442427618	WITHOUT_CLASSIFICATION	0.0011077557572381634	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999645489171174	WITHOUT_CLASSIFICATION	3.5451082882548E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999822616588495	WITHOUT_CLASSIFICATION	1.7738341150505613E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999313088140513	WITHOUT_CLASSIFICATION	6.869118594875024E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999416009277938	WITHOUT_CLASSIFICATION	5.8399072206216796E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9998629929909318	WITHOUT_CLASSIFICATION	1.3700700906812862E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9998629074536308	WITHOUT_CLASSIFICATION	1.3709254636927072E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999502521098739	WITHOUT_CLASSIFICATION	4.974789012618847E-5	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999658335917561	WITHOUT_CLASSIFICATION	3.4166408243971165E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.994140830081716	WITHOUT_CLASSIFICATION	0.00585916991828398	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999234045909735	WITHOUT_CLASSIFICATION	7.659540902649126E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999358064328977	WITHOUT_CLASSIFICATION	6.419356710231979E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999896354834445	WITHOUT_CLASSIFICATION	1.0364516555508418E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999932836677775	WITHOUT_CLASSIFICATION	6.716332222412177E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9997981085493842	WITHOUT_CLASSIFICATION	2.0189145061576865E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9964703145959554	WITHOUT_CLASSIFICATION	0.003529685404044667	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9986456559008904	WITHOUT_CLASSIFICATION	0.0013543440991096761	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999152299433105	WITHOUT_CLASSIFICATION	8.477005668952356E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9996806714053355	WITHOUT_CLASSIFICATION	3.193285946644729E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999434773849791	WITHOUT_CLASSIFICATION	5.652261502079187E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999945488818019	WITHOUT_CLASSIFICATION	5.4511181981091926E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999730518415462	WITHOUT_CLASSIFICATION	2.694815845387602E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9997300194287865	WITHOUT_CLASSIFICATION	2.699805712135335E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999209037925216	WITHOUT_CLASSIFICATION	7.909620747835484E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998537838049651	WITHOUT_CLASSIFICATION	1.4621619503490377E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.999857972908808	WITHOUT_CLASSIFICATION	1.4202709119205778E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9940037780210292	WITHOUT_CLASSIFICATION	0.005996221978970704	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999737930513815	WITHOUT_CLASSIFICATION	2.6206948618517193E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999239899988884	WITHOUT_CLASSIFICATION	7.601000111156195E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999960836189844	WITHOUT_CLASSIFICATION	3.916381015601183E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999960836189844	WITHOUT_CLASSIFICATION	3.916381015601183E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998777442820881	WITHOUT_CLASSIFICATION	1.222557179118765E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999512243871138	WITHOUT_CLASSIFICATION	4.8775612886227175E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999773428639285	WITHOUT_CLASSIFICATION	2.265713607156158E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999977344779575	WITHOUT_CLASSIFICATION	2.2655220425031837E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999773428639285	WITHOUT_CLASSIFICATION	2.265713607156158E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999776355521026	WITHOUT_CLASSIFICATION	2.2364447897325123E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999306810823658	WITHOUT_CLASSIFICATION	6.931891763416598E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999600229450187	WITHOUT_CLASSIFICATION	3.997705498135339E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998497949837339	WITHOUT_CLASSIFICATION	1.5020501626603858E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.999950768868837	WITHOUT_CLASSIFICATION	4.9231131162852216E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9994200750726464	WITHOUT_CLASSIFICATION	5.799249273535195E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999914727706258	WITHOUT_CLASSIFICATION	8.527229374234353E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999728348213869	WITHOUT_CLASSIFICATION	2.7165178613064868E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.999482339415283	WITHOUT_CLASSIFICATION	5.176605847170378E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9998739270535114	WITHOUT_CLASSIFICATION	1.2607294648857515E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999982917960197	WITHOUT_CLASSIFICATION	1.7082039802699672E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999156392669576	WITHOUT_CLASSIFICATION	8.436073304239947E-5	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999911815356227	WITHOUT_CLASSIFICATION	8.818464377308949E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9996649653391807	WITHOUT_CLASSIFICATION	3.3503466081921055E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9990725462026802	WITHOUT_CLASSIFICATION	9.274537973198849E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9998120100586619	WITHOUT_CLASSIFICATION	1.879899413380262E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9979276148090565	WITHOUT_CLASSIFICATION	0.0020723851909435075	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.99832744799398	WITHOUT_CLASSIFICATION	0.0016725520060199893	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998281256477334	WITHOUT_CLASSIFICATION	1.7187435226663765E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999629820861814	WITHOUT_CLASSIFICATION	3.701791381857336E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998036480513777	WITHOUT_CLASSIFICATION	1.9635194862233126E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999829105466622	WITHOUT_CLASSIFICATION	1.708945333781233E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999942767863405	WITHOUT_CLASSIFICATION	5.723213659584464E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999558866979048	WITHOUT_CLASSIFICATION	4.411330209528366E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998198316091003	WITHOUT_CLASSIFICATION	1.801683908996777E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999802820545598	WITHOUT_CLASSIFICATION	1.9717945440247403E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999802820545598	WITHOUT_CLASSIFICATION	1.9717945440247403E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999996419965261	WITHOUT_CLASSIFICATION	3.5800347388854487E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9996773298677173	WITHOUT_CLASSIFICATION	3.226701322826682E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9994671084792874	WITHOUT_CLASSIFICATION	5.328915207126219E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997835166135938	WITHOUT_CLASSIFICATION	2.1648338640623327E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.999891160050099	WITHOUT_CLASSIFICATION	1.088399499009783E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9980372933890129	WITHOUT_CLASSIFICATION	0.0019627066109871093	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9993905017903281	WITHOUT_CLASSIFICATION	6.094982096719021E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999287077727752	WITHOUT_CLASSIFICATION	7.12922272247798E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999445243604569	WITHOUT_CLASSIFICATION	5.5475639543079546E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998198316091003	WITHOUT_CLASSIFICATION	1.801683908996777E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999045760916064	WITHOUT_CLASSIFICATION	9.542390839362991E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999076369354478	WITHOUT_CLASSIFICATION	9.236306455210926E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999978305156962	WITHOUT_CLASSIFICATION	2.1694843038054153E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998233153485749	WITHOUT_CLASSIFICATION	1.7668465142506854E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999877795315503	WITHOUT_CLASSIFICATION	1.2220468449765901E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996406623337073	WITHOUT_CLASSIFICATION	3.593376662926506E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9998805637823954	WITHOUT_CLASSIFICATION	1.1943621760451554E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999562893094289	WITHOUT_CLASSIFICATION	4.371069057107113E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.999733742381796	WITHOUT_CLASSIFICATION	2.662576182040063E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9829157341799509	WITHOUT_CLASSIFICATION	0.01708426582004904	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999466466041046	WITHOUT_CLASSIFICATION	5.335339589540103E-5	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999575584012664	WITHOUT_CLASSIFICATION	4.2441598733653947E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996941633390843	WITHOUT_CLASSIFICATION	3.058366609156963E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999584579599065	WITHOUT_CLASSIFICATION	4.154204009360179E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999356311552773	WITHOUT_CLASSIFICATION	6.436884472265132E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.999934278753085	WITHOUT_CLASSIFICATION	6.572124691496225E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999035349005646	WITHOUT_CLASSIFICATION	9.646509943536514E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.999770784720902	WITHOUT_CLASSIFICATION	2.2921527909799535E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9995117945592241	WITHOUT_CLASSIFICATION	4.88205440775925E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9981847666855728	WITHOUT_CLASSIFICATION	0.0018152333144272577	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999519765108629	WITHOUT_CLASSIFICATION	4.8023489137154883E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9998866006791697	WITHOUT_CLASSIFICATION	1.1339932083037337E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9994621290210242	WITHOUT_CLASSIFICATION	5.37870978975756E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9997988264769497	WITHOUT_CLASSIFICATION	2.011735230502808E-4	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998207386608946	WITHOUT_CLASSIFICATION	1.7926133910540085E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999774470662552	WITHOUT_CLASSIFICATION	2.255293374474916E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999763267009006	WITHOUT_CLASSIFICATION	2.367329909942713E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997615467137749	WITHOUT_CLASSIFICATION	2.3845328622500853E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997718169820115	WITHOUT_CLASSIFICATION	2.2818301798852033E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999649430954848	WITHOUT_CLASSIFICATION	3.5056904515312115E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9995547331035001	WITHOUT_CLASSIFICATION	4.452668964998185E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999800297978495	WITHOUT_CLASSIFICATION	1.9970202150475657E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999424491181582	WITHOUT_CLASSIFICATION	5.755088184179877E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999961024874916	WITHOUT_CLASSIFICATION	3.897512508418866E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999428518471255	WITHOUT_CLASSIFICATION	5.714815287442784E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998551949700468	WITHOUT_CLASSIFICATION	1.448050299532758E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9968392523228048	WITHOUT_CLASSIFICATION	0.003160747677195325	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999631520803068	WITHOUT_CLASSIFICATION	3.6847919693178196E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999052641023222	WITHOUT_CLASSIFICATION	9.473589767780382E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999561947044615	WITHOUT_CLASSIFICATION	4.380529553855752E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999144213615971	WITHOUT_CLASSIFICATION	8.557863840289111E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531548013721	WITHOUT_CLASSIFICATION	4.6845198627892084E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956684252786	WITHOUT_CLASSIFICATION	4.331574721405287E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999586038486742	WITHOUT_CLASSIFICATION	4.1396151325872793E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997660249981478	WITHOUT_CLASSIFICATION	2.339750018522211E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999550472940408	WITHOUT_CLASSIFICATION	4.495270595913752E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9988224241156896	WITHOUT_CLASSIFICATION	0.001177575884310393	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997756449365385	WITHOUT_CLASSIFICATION	2.243550634615119E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99912551791039	WITHOUT_CLASSIFICATION	8.744820896099336E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999508547841316	WITHOUT_CLASSIFICATION	4.914521586840051E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999477011211158	WITHOUT_CLASSIFICATION	5.2298878884317794E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9989396321775507	WITHOUT_CLASSIFICATION	0.001060367822449431	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996336274285151	WITHOUT_CLASSIFICATION	3.6637257148491056E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998989210009069	WITHOUT_CLASSIFICATION	0.0010107899909309254	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990784612475175	WITHOUT_CLASSIFICATION	9.215387524824324E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995333223170618	WITHOUT_CLASSIFICATION	4.6667768293819897E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996252001273596	WITHOUT_CLASSIFICATION	3.747998726404135E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990784612475175	WITHOUT_CLASSIFICATION	9.215387524824324E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9988461504069385	WITHOUT_CLASSIFICATION	0.001153849593061518	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988716612832438	WITHOUT_CLASSIFICATION	0.0011283387167561757	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998271544918642	WITHOUT_CLASSIFICATION	1.7284550813581414E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9964734612645573	WITHOUT_CLASSIFICATION	0.0035265387354428118	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9989889508739801	WITHOUT_CLASSIFICATION	0.0010110491260199056	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999960286406012	WITHOUT_CLASSIFICATION	3.9713593988085407E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99912551791039	WITHOUT_CLASSIFICATION	8.744820896099336E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998950049702439	WITHOUT_CLASSIFICATION	1.0499502975614566E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999724080177826	WITHOUT_CLASSIFICATION	2.7591982217374838E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998668636264197	WITHOUT_CLASSIFICATION	0.0013313637358029322	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9991046151036673	WITHOUT_CLASSIFICATION	8.953848963327238E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998652396898116	WITHOUT_CLASSIFICATION	1.3476031018844092E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996189004613225	WITHOUT_CLASSIFICATION	3.810995386775315E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999806322837455	WITHOUT_CLASSIFICATION	1.9367716254474133E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995333223170618	WITHOUT_CLASSIFICATION	4.6667768293819897E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999584771748703	WITHOUT_CLASSIFICATION	4.1522825129597535E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996667351957449	WITHOUT_CLASSIFICATION	3.332648042550956E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999631520803068	WITHOUT_CLASSIFICATION	3.6847919693178196E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999631520803068	WITHOUT_CLASSIFICATION	3.6847919693178196E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999033318244406	WITHOUT_CLASSIFICATION	9.666817555937784E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9989141533368576	WITHOUT_CLASSIFICATION	0.0010858466631424128	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996667351957449	WITHOUT_CLASSIFICATION	3.332648042550956E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999953199296871	WITHOUT_CLASSIFICATION	4.680070312901375E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9978364436882391	WITHOUT_CLASSIFICATION	0.0021635563117609093	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992318630031306	WITHOUT_CLASSIFICATION	7.681369968694318E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991961652402731	WITHOUT_CLASSIFICATION	8.038347597269258E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9924845186263134	WITHOUT_CLASSIFICATION	0.0075154813736866095	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992057185325518	WITHOUT_CLASSIFICATION	7.942814674482691E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989889508739801	WITHOUT_CLASSIFICATION	0.0010110491260199056	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989889508739801	WITHOUT_CLASSIFICATION	0.0010110491260199056	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996361764862838	WITHOUT_CLASSIFICATION	3.6382351371626965E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9968392523228048	WITHOUT_CLASSIFICATION	0.003160747677195324	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99912551791039	WITHOUT_CLASSIFICATION	8.744820896099331E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989715448686324	WITHOUT_CLASSIFICATION	0.001028455131367659	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999549092124334	WITHOUT_CLASSIFICATION	4.5090787566630784E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999544557925135	WITHOUT_CLASSIFICATION	4.5544207486505065E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999907420350303	WITHOUT_CLASSIFICATION	9.257964969698814E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9996361764862838	WITHOUT_CLASSIFICATION	3.6382351371626965E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999603764374246	WITHOUT_CLASSIFICATION	3.9623562575348086E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999099968611322	WITHOUT_CLASSIFICATION	9.000313886785288E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99995648879018	WITHOUT_CLASSIFICATION	4.351120982004436E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995818617496781	WITHOUT_CLASSIFICATION	4.181382503217922E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999627976353112	WITHOUT_CLASSIFICATION	3.7202364688827504E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995818617496781	WITHOUT_CLASSIFICATION	4.181382503217922E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999574910720023	WITHOUT_CLASSIFICATION	4.250892799783721E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998655449851706	WITHOUT_CLASSIFICATION	1.3445501482951548E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990270302269871	WITHOUT_CLASSIFICATION	9.72969773012792E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999091446984633	WITHOUT_CLASSIFICATION	9.085530153674285E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999477011211158	WITHOUT_CLASSIFICATION	5.2298878884317794E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999572948005961	WITHOUT_CLASSIFICATION	4.2705199403798864E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999531427801301	WITHOUT_CLASSIFICATION	4.685721986991217E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999569821475763	WITHOUT_CLASSIFICATION	4.301785242361091E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999892668351013	WITHOUT_CLASSIFICATION	1.0733164898702664E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995818617496781	WITHOUT_CLASSIFICATION	4.181382503217922E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999569821475763	WITHOUT_CLASSIFICATION	4.301785242361091E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999065104867728	WITHOUT_CLASSIFICATION	9.348951322718194E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988922442427618	WITHOUT_CLASSIFICATION	0.0011077557572381634	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998777442820881	WITHOUT_CLASSIFICATION	1.222557179118765E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999645489171174	WITHOUT_CLASSIFICATION	3.5451082882548E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999822616588495	WITHOUT_CLASSIFICATION	1.7738341150505613E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999313088140513	WITHOUT_CLASSIFICATION	6.869118594875024E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999416009277938	WITHOUT_CLASSIFICATION	5.8399072206216796E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999737930513815	WITHOUT_CLASSIFICATION	2.6206948618517193E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9998629074536308	WITHOUT_CLASSIFICATION	1.3709254636927072E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999502521098739	WITHOUT_CLASSIFICATION	4.974789012618847E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999512243871138	WITHOUT_CLASSIFICATION	4.8775612886227175E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999760176879294	WITHOUT_CLASSIFICATION	2.398231207054179E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999760176879294	WITHOUT_CLASSIFICATION	2.398231207054179E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999608763845789	WITHOUT_CLASSIFICATION	3.9123615421219456E-5	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999908937605643	WITHOUT_CLASSIFICATION	9.106239435604297E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9995820880338577	WITHOUT_CLASSIFICATION	4.179119661422482E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999367374359431	WITHOUT_CLASSIFICATION	6.326256405683563E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999678616433647	WITHOUT_CLASSIFICATION	3.213835663521546E-5	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999460690662126	WITHOUT_CLASSIFICATION	5.393093378743447E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999136041317666	WITHOUT_CLASSIFICATION	8.639586823344947E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999539187960562	WITHOUT_CLASSIFICATION	4.608120394387193E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999719316745975	WITHOUT_CLASSIFICATION	2.8068325402432023E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999614042011604	WITHOUT_CLASSIFICATION	3.859579883956173E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999960649802506	WITHOUT_CLASSIFICATION	3.9350197493337E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999591509631766	WITHOUT_CLASSIFICATION	4.084903682338462E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999806241482143	WITHOUT_CLASSIFICATION	1.9375851785724036E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999989167049674	WITHOUT_CLASSIFICATION	1.0832950325805528E-6	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9996395704228683	WITHOUT_CLASSIFICATION	3.6042957713161117E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9998252213548472	WITHOUT_CLASSIFICATION	1.7477864515280604E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999834222329777	WITHOUT_CLASSIFICATION	1.6577767022303048E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9998641268399563	WITHOUT_CLASSIFICATION	1.358731600435902E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999361716125063	WITHOUT_CLASSIFICATION	6.382838749373283E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999373524799744	WITHOUT_CLASSIFICATION	6.264752002554208E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.999212098090752	WITHOUT_CLASSIFICATION	7.879019092480529E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9997409613371024	WITHOUT_CLASSIFICATION	2.5903866289751553E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9995228967358517	WITHOUT_CLASSIFICATION	4.7710326414829047E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998809877889905	WITHOUT_CLASSIFICATION	1.1901221100962876E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9997327260699487	WITHOUT_CLASSIFICATION	2.6727393005136676E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9997792620790235	WITHOUT_CLASSIFICATION	2.2073792097646746E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998106288824234	WITHOUT_CLASSIFICATION	1.8937111757654572E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999707006995657	WITHOUT_CLASSIFICATION	2.9299300434277562E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999707006995657	WITHOUT_CLASSIFICATION	2.9299300434277562E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999599385183819	WITHOUT_CLASSIFICATION	4.00614816180437E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.999998888004955	WITHOUT_CLASSIFICATION	1.1119950450560893E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999443827555178	WITHOUT_CLASSIFICATION	5.561724448213504E-5	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999334987122127	WITHOUT_CLASSIFICATION	6.650128778728248E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999813229846656	WITHOUT_CLASSIFICATION	1.8677015334411923E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999807112183974	WITHOUT_CLASSIFICATION	1.9288781602548466E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999703848087914	WITHOUT_CLASSIFICATION	2.9615191208521276E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999874657582746	WITHOUT_CLASSIFICATION	1.2534241725397976E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999848987797917	WITHOUT_CLASSIFICATION	1.510122020836301E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9998785618453866	WITHOUT_CLASSIFICATION	1.2143815461344101E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9998785618453866	WITHOUT_CLASSIFICATION	1.2143815461344101E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9994990164141371	WITHOUT_CLASSIFICATION	5.009835858629144E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9994990164141371	WITHOUT_CLASSIFICATION	5.009835858629144E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999735387951462	WITHOUT_CLASSIFICATION	2.6461204853826695E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999838793118933	WITHOUT_CLASSIFICATION	1.6120688106788154E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999288993977467	WITHOUT_CLASSIFICATION	7.110060225329709E-5	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999895665038427	WITHOUT_CLASSIFICATION	1.0433496157309541E-5	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9996466532768236	WITHOUT_CLASSIFICATION	3.533467231764367E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9998964797942206	WITHOUT_CLASSIFICATION	1.0352020577940611E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999859197511335	WITHOUT_CLASSIFICATION	1.4080248866397671E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999917647897115	WITHOUT_CLASSIFICATION	8.235210288523443E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9922841506795038	WITHOUT_CLASSIFICATION	0.007715849320496268	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999539412029221	WITHOUT_CLASSIFICATION	4.6058797077884434E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998847228712195	WITHOUT_CLASSIFICATION	1.1527712878039282E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999826057740048	WITHOUT_CLASSIFICATION	1.7394225995198758E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999034502029274	WITHOUT_CLASSIFICATION	9.654979707255508E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999959320614124	WITHOUT_CLASSIFICATION	4.0679385875780745E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999989109563576	WITHOUT_CLASSIFICATION	1.089043642325943E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9998695424735132	WITHOUT_CLASSIFICATION	1.3045752648689306E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999056687989719	WITHOUT_CLASSIFICATION	9.433120102806202E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.999856982865852	WITHOUT_CLASSIFICATION	1.4301713414803041E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9980385640899428	WITHOUT_CLASSIFICATION	0.0019614359100570983	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9998433065405102	WITHOUT_CLASSIFICATION	1.5669345948965906E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9997775637083205	WITHOUT_CLASSIFICATION	2.2243629167956747E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9997459742214101	WITHOUT_CLASSIFICATION	2.540257785899377E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999620333688143	WITHOUT_CLASSIFICATION	3.7966631185616796E-5	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.999879388683495	WITHOUT_CLASSIFICATION	1.2061131650496685E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.999997159702603	WITHOUT_CLASSIFICATION	2.8402973971082965E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9994308984565408	WITHOUT_CLASSIFICATION	5.691015434592415E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999953662439042	WITHOUT_CLASSIFICATION	4.633756095788378E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999032540665312	WITHOUT_CLASSIFICATION	9.674593346873853E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999032540665312	WITHOUT_CLASSIFICATION	9.674593346873853E-5	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999348904227717	WITHOUT_CLASSIFICATION	6.510957722825093E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9997253120164556	WITHOUT_CLASSIFICATION	2.7468798354425973E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9997827169678563	WITHOUT_CLASSIFICATION	2.1728303214371868E-4	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997632525630971	WITHOUT_CLASSIFICATION	2.3674743690283858E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999509368036705	WITHOUT_CLASSIFICATION	4.906319632955125E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9998982740240545	WITHOUT_CLASSIFICATION	1.0172597594545488E-4	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999231932586455	WITHOUT_CLASSIFICATION	7.680674135457314E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999884548701421	WITHOUT_CLASSIFICATION	1.1545129857891886E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9994308984565408	WITHOUT_CLASSIFICATION	5.691015434592415E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997825621990432	WITHOUT_CLASSIFICATION	2.1743780095685882E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999817676124448	WITHOUT_CLASSIFICATION	1.823238755524369E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999185359520371	WITHOUT_CLASSIFICATION	8.146404796301204E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9983729234424454	WITHOUT_CLASSIFICATION	0.001627076557554639	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.999942861531359	WITHOUT_CLASSIFICATION	5.713846864087204E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999707329451466	WITHOUT_CLASSIFICATION	2.9267054853343055E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999545165054193	WITHOUT_CLASSIFICATION	4.5483494580603744E-5	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999280155023798	WITHOUT_CLASSIFICATION	7.198449762019427E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999681888251845	WITHOUT_CLASSIFICATION	3.181117481558522E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999534285298511	WITHOUT_CLASSIFICATION	4.657147014888903E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999502855209175	WITHOUT_CLASSIFICATION	4.971447908249488E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999667338578305	WITHOUT_CLASSIFICATION	3.32661421695029E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999728273231572	WITHOUT_CLASSIFICATION	2.717267684288065E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999923087412397	WITHOUT_CLASSIFICATION	7.691258760343052E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9964685661102594	WITHOUT_CLASSIFICATION	0.0035314338897406527	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9994383315529347	WITHOUT_CLASSIFICATION	5.616684470653136E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999935558870146	WITHOUT_CLASSIFICATION	6.444112985526414E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.999918172119661	WITHOUT_CLASSIFICATION	8.182788033887421E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999262150091863	WITHOUT_CLASSIFICATION	7.378499081363591E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999878125962776	WITHOUT_CLASSIFICATION	1.2187403722405594E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999818501967279	WITHOUT_CLASSIFICATION	1.814980327206924E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999384261950686	WITHOUT_CLASSIFICATION	6.157380493136316E-5	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999357639410579	WITHOUT_CLASSIFICATION	6.423605894204179E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.99999325951908	WITHOUT_CLASSIFICATION	6.740480919969493E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999545165054193	WITHOUT_CLASSIFICATION	4.5483494580603744E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9998858607470535	WITHOUT_CLASSIFICATION	1.141392529464744E-4	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9998838953302871	WITHOUT_CLASSIFICATION	1.161046697129853E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9998661867889092	WITHOUT_CLASSIFICATION	1.3381321109084114E-4	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9601938491898548	WITHOUT_CLASSIFICATION	0.039806150810145075	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.999509578832544	WITHOUT_CLASSIFICATION	4.904211674559745E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9971888771762042	WITHOUT_CLASSIFICATION	0.0028111228237958264	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9998470605978226	WITHOUT_CLASSIFICATION	1.529394021774111E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9997975181554306	WITHOUT_CLASSIFICATION	2.024818445694639E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.999661931887412	WITHOUT_CLASSIFICATION	3.3806811258794197E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999644462232175	WITHOUT_CLASSIFICATION	3.5553776782610236E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999478529779854	WITHOUT_CLASSIFICATION	5.214702201448907E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999478529779854	WITHOUT_CLASSIFICATION	5.214702201448907E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999426563729654	WITHOUT_CLASSIFICATION	5.7343627034499914E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.999820949373432	WITHOUT_CLASSIFICATION	1.7905062656792652E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999310362721585	WITHOUT_CLASSIFICATION	6.896372784156142E-5	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999458780202758	WITHOUT_CLASSIFICATION	5.412197972421158E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999680808111918	WITHOUT_CLASSIFICATION	3.191918880812852E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999400286596704	WITHOUT_CLASSIFICATION	5.9971340329665524E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999317432272269	WITHOUT_CLASSIFICATION	6.825677277314595E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999088971214655	WITHOUT_CLASSIFICATION	9.110287853456873E-5	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9995904376249837	WITHOUT_CLASSIFICATION	4.0956237501627187E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.99994606413913	WITHOUT_CLASSIFICATION	5.3935860870059155E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999821240573757	WITHOUT_CLASSIFICATION	1.787594262428921E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9994990164141371	WITHOUT_CLASSIFICATION	5.009835858629144E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999859197511335	WITHOUT_CLASSIFICATION	1.4080248866397671E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999680808111918	WITHOUT_CLASSIFICATION	3.191918880812852E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999400286596704	WITHOUT_CLASSIFICATION	5.9971340329665524E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999440563824306	WITHOUT_CLASSIFICATION	5.5943617569491676E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999969484213741	WITHOUT_CLASSIFICATION	3.0515786258466E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999263817475287	WITHOUT_CLASSIFICATION	7.361825247140096E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9983439367582773	WITHOUT_CLASSIFICATION	0.0016560632417226542	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9948296517178005	WITHOUT_CLASSIFICATION	0.005170348282199469	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9998813421796788	WITHOUT_CLASSIFICATION	1.1865782032106078E-4	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9986358277099865	WITHOUT_CLASSIFICATION	0.0013641722900135304	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9997349710965142	WITHOUT_CLASSIFICATION	2.6502890348581475E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999621858876891	WITHOUT_CLASSIFICATION	3.781411231087123E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9990685519017907	WITHOUT_CLASSIFICATION	9.314480982094623E-4	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9995534817000059	WITHOUT_CLASSIFICATION	4.4651829999404504E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994660997694217	WITHOUT_CLASSIFICATION	5.339002305783314E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999688280936005	WITHOUT_CLASSIFICATION	3.1171906399467706E-5	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9994349172978063	WITHOUT_CLASSIFICATION	5.650827021936735E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999860949334438	WITHOUT_CLASSIFICATION	1.390506655623907E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994660997694217	WITHOUT_CLASSIFICATION	5.339002305783314E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994660997694217	WITHOUT_CLASSIFICATION	5.339002305783314E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994660997694217	WITHOUT_CLASSIFICATION	5.339002305783314E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9997463099279439	WITHOUT_CLASSIFICATION	2.536900720561897E-4	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999766737607768	WITHOUT_CLASSIFICATION	2.3326239223215855E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999069385547584	WITHOUT_CLASSIFICATION	9.306144524164411E-5	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999863850326343	WITHOUT_CLASSIFICATION	1.3614967365735647E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9998933356218043	WITHOUT_CLASSIFICATION	1.0666437819573263E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999776270274301	WITHOUT_CLASSIFICATION	2.2372972569838245E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9994018859709992	WITHOUT_CLASSIFICATION	5.981140290008651E-4	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999673434937902	WITHOUT_CLASSIFICATION	3.2656506209680964E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999935188732366	WITHOUT_CLASSIFICATION	6.4811267634086115E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.999900049664998	WITHOUT_CLASSIFICATION	9.995033500198307E-5	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9998090640864926	WITHOUT_CLASSIFICATION	1.9093591350734162E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9998310153979026	WITHOUT_CLASSIFICATION	1.689846020973516E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999766206043532	WITHOUT_CLASSIFICATION	2.3379395646706784E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999988794815986	WITHOUT_CLASSIFICATION	1.1205184014309935E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999089528502597	WITHOUT_CLASSIFICATION	9.104714974027576E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.999970101937347	WITHOUT_CLASSIFICATION	2.9898062652968267E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9987087189381333	WITHOUT_CLASSIFICATION	0.0012912810618667333	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998139649075565	WITHOUT_CLASSIFICATION	1.8603509244359404E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997135733634407	WITHOUT_CLASSIFICATION	2.8642663655941856E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998157883341945	WITHOUT_CLASSIFICATION	1.8421166580546338E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998157883341945	WITHOUT_CLASSIFICATION	1.8421166580546338E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9997090065196091	WITHOUT_CLASSIFICATION	2.909934803908145E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.8863234371156824	WITHOUT_CLASSIFICATION	0.11367656288431759	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9998989820569529	WITHOUT_CLASSIFICATION	1.0101794304713756E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9721643017107721	WITHOUT_CLASSIFICATION	0.027835698289227953	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999463520239585	WITHOUT_CLASSIFICATION	5.364797604152128E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999422219838108	WITHOUT_CLASSIFICATION	5.777801618922999E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999505013669061	WITHOUT_CLASSIFICATION	4.949863309393199E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999447783710071	WITHOUT_CLASSIFICATION	5.522162899286628E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999990069361595	WITHOUT_CLASSIFICATION	9.930638405088349E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9993444510192449	WITHOUT_CLASSIFICATION	6.555489807551247E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999960979830944	WITHOUT_CLASSIFICATION	3.902016905616017E-6	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999829800047219	WITHOUT_CLASSIFICATION	1.7019995278180984E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.999980192401626	WITHOUT_CLASSIFICATION	1.9807598374031255E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999434432228393	WITHOUT_CLASSIFICATION	5.655677716069278E-5	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999707127232855	WITHOUT_CLASSIFICATION	2.9287276714412993E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999306244803456	WITHOUT_CLASSIFICATION	6.937551965438297E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.99997978817951	WITHOUT_CLASSIFICATION	2.0211820489864666E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999885434883331	WITHOUT_CLASSIFICATION	1.1456511666848768E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9998944719594665	WITHOUT_CLASSIFICATION	1.0552804053355882E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9997740873334577	WITHOUT_CLASSIFICATION	2.2591266654220887E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999866130358068	WITHOUT_CLASSIFICATION	1.3386964193078462E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999909048797605	WITHOUT_CLASSIFICATION	9.095120239585341E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997493771016646	WITHOUT_CLASSIFICATION	2.5062289833551436E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997493771016646	WITHOUT_CLASSIFICATION	2.5062289833551436E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993413013915099	WITHOUT_CLASSIFICATION	6.58698608490156E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993413013915099	WITHOUT_CLASSIFICATION	6.58698608490156E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999960383966889	WITHOUT_CLASSIFICATION	3.961603311014895E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9995792680546395	WITHOUT_CLASSIFICATION	4.207319453606124E-4	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999919611477216	WITHOUT_CLASSIFICATION	8.038852278474071E-6	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999826887382273	WITHOUT_CLASSIFICATION	1.7311261772768776E-5	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999866557243793	WITHOUT_CLASSIFICATION	1.3344275620668385E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999549483091241	WITHOUT_CLASSIFICATION	4.505169087597556E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999660633019916	WITHOUT_CLASSIFICATION	3.3936698008401846E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9991482795566148	WITHOUT_CLASSIFICATION	8.517204433852488E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9995214002843382	WITHOUT_CLASSIFICATION	4.785997156617172E-4	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999193113037392	WITHOUT_CLASSIFICATION	8.068869626076036E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999560329394036	WITHOUT_CLASSIFICATION	4.3967060596373555E-5	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9997141897357329	WITHOUT_CLASSIFICATION	2.8581026426705627E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9992603743149258	WITHOUT_CLASSIFICATION	7.396256850742675E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999970043005122	WITHOUT_CLASSIFICATION	2.995699487828903E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999272954781792	WITHOUT_CLASSIFICATION	7.270452182088225E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9998244868163593	WITHOUT_CLASSIFICATION	1.7551318364087277E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999633535090395	WITHOUT_CLASSIFICATION	3.6646490960439236E-5	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999604554562236	WITHOUT_CLASSIFICATION	3.954454377638366E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999261837192663	WITHOUT_CLASSIFICATION	7.381628073361496E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998936825124611	WITHOUT_CLASSIFICATION	1.0631748753884335E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999069897412058	WITHOUT_CLASSIFICATION	9.301025879421042E-5	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.999915345958003	WITHOUT_CLASSIFICATION	8.465404199693507E-5	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999658753416225	WITHOUT_CLASSIFICATION	3.4124658377535975E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9993284281071784	WITHOUT_CLASSIFICATION	6.715718928216434E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.999915121820804	WITHOUT_CLASSIFICATION	8.487817919593493E-5	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.99998210942127	WITHOUT_CLASSIFICATION	1.789057873005474E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999574466068929	WITHOUT_CLASSIFICATION	4.2553393107017875E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9997917828308018	WITHOUT_CLASSIFICATION	2.0821716919817903E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9893313120131869	WITHOUT_CLASSIFICATION	0.010668687986813108	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9992939512634659	WITHOUT_CLASSIFICATION	7.060487365341162E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999760176879294	WITHOUT_CLASSIFICATION	2.398231207054179E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9988877277153841	WITHOUT_CLASSIFICATION	0.0011122722846158113	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.999999333377319	WITHOUT_CLASSIFICATION	6.666226809926415E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9996367081018077	WITHOUT_CLASSIFICATION	3.632918981923679E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9995331334009857	WITHOUT_CLASSIFICATION	4.668665990143645E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999344544952907	WITHOUT_CLASSIFICATION	6.554550470931558E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998445785963376	WITHOUT_CLASSIFICATION	1.5542140366247293E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999170160508514	WITHOUT_CLASSIFICATION	8.298394914854206E-5	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999806952470726	WITHOUT_CLASSIFICATION	1.930475292739117E-5	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.999836253171597	WITHOUT_CLASSIFICATION	1.6374682840302753E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9851094760394977	WITHOUT_CLASSIFICATION	0.014890523960502175	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999883985329786	WITHOUT_CLASSIFICATION	1.1601467021484391E-5	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9998378604193763	WITHOUT_CLASSIFICATION	1.6213958062359768E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9623512256988372	WITHOUT_CLASSIFICATION	0.03764877430116272	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9997985911542023	WITHOUT_CLASSIFICATION	2.0140884579771779E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9994138255450543	WITHOUT_CLASSIFICATION	5.86174454945694E-4	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.999363324055039	WITHOUT_CLASSIFICATION	6.366759449609707E-4	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9997351959185959	WITHOUT_CLASSIFICATION	2.648040814040694E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9996698378661917	WITHOUT_CLASSIFICATION	3.301621338083255E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999935183159284	WITHOUT_CLASSIFICATION	6.481684071672715E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999964509651418	WITHOUT_CLASSIFICATION	3.54903485833326E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999736750636717	WITHOUT_CLASSIFICATION	2.632493632827069E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999327966292045	WITHOUT_CLASSIFICATION	6.720337079539558E-5	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999029918824034	WITHOUT_CLASSIFICATION	9.700811759664358E-5	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999885085138308	WITHOUT_CLASSIFICATION	1.1491486169080522E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9997431566449133	WITHOUT_CLASSIFICATION	2.5684335508668025E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999938901267569	WITHOUT_CLASSIFICATION	6.10987324306601E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999983606254502	WITHOUT_CLASSIFICATION	1.6393745497788458E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999946429362377	WITHOUT_CLASSIFICATION	5.357063762171887E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999531410016597	WITHOUT_CLASSIFICATION	4.685899834039594E-5	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999699588449126	WITHOUT_CLASSIFICATION	3.0041155087378828E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999265967879094	WITHOUT_CLASSIFICATION	7.340321209059478E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.999971170542502	WITHOUT_CLASSIFICATION	2.8829457498024156E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.999883978999451	WITHOUT_CLASSIFICATION	1.1602100054897376E-4	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999934804414782	WITHOUT_CLASSIFICATION	6.519558521799817E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999709786954614	WITHOUT_CLASSIFICATION	2.9021304538634384E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999793658452354	WITHOUT_CLASSIFICATION	2.0634154764548988E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9995490010791377	WITHOUT_CLASSIFICATION	4.5099892086229753E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9995490010791377	WITHOUT_CLASSIFICATION	4.5099892086229753E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9997472881906727	WITHOUT_CLASSIFICATION	2.5271180932726577E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9927250336560571	WITHOUT_CLASSIFICATION	0.007274966343942883	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9998735196300116	WITHOUT_CLASSIFICATION	1.2648036998835524E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999142522747118	WITHOUT_CLASSIFICATION	8.574772528822113E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999514766917417	WITHOUT_CLASSIFICATION	4.852330825826728E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999698834209947	WITHOUT_CLASSIFICATION	3.011657900528484E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998847308977864	WITHOUT_CLASSIFICATION	1.1526910221359793E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999349808076398	WITHOUT_CLASSIFICATION	6.501919236020702E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999349808076398	WITHOUT_CLASSIFICATION	6.501919236020702E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.99993205293646	WITHOUT_CLASSIFICATION	6.794706353999792E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999436243206496	WITHOUT_CLASSIFICATION	5.637567935042557E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999072734795974	WITHOUT_CLASSIFICATION	9.272652040254951E-5	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999471701997441	WITHOUT_CLASSIFICATION	5.282980025579981E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9996258952611551	WITHOUT_CLASSIFICATION	3.7410473884489254E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999882750483743	WITHOUT_CLASSIFICATION	1.1724951625738613E-5	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9997559862213183	WITHOUT_CLASSIFICATION	2.4401377868173068E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999998367554297	WITHOUT_CLASSIFICATION	1.632445702285346E-7	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999471153485523	WITHOUT_CLASSIFICATION	5.288465144772891E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.999983605131151	WITHOUT_CLASSIFICATION	1.6394868848928977E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9998467620360033	WITHOUT_CLASSIFICATION	1.5323796399664067E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999520243799224	WITHOUT_CLASSIFICATION	4.797562007754213E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9987601128083422	WITHOUT_CLASSIFICATION	0.001239887191657805	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999553356087769	WITHOUT_CLASSIFICATION	4.466439122320239E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9958378721564894	WITHOUT_CLASSIFICATION	0.004162127843510579	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9996422392147392	WITHOUT_CLASSIFICATION	3.577607852607487E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999931672644036	WITHOUT_CLASSIFICATION	6.8327355964784235E-6	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999892417845562	WITHOUT_CLASSIFICATION	1.0758215443888615E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9993352025497871	WITHOUT_CLASSIFICATION	6.647974502127535E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999783189269906	WITHOUT_CLASSIFICATION	2.1681073009326173E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.999981085907963	WITHOUT_CLASSIFICATION	1.891409203701686E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999777479172722	WITHOUT_CLASSIFICATION	2.2252082727881318E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999927002419474	WITHOUT_CLASSIFICATION	7.2997580526314E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999783440714564	WITHOUT_CLASSIFICATION	2.1655928543670188E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999083451369415	WITHOUT_CLASSIFICATION	9.1654863058498E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9993087012074626	WITHOUT_CLASSIFICATION	6.91298792537399E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999938064789632	WITHOUT_CLASSIFICATION	6.193521036924166E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9977478106005047	WITHOUT_CLASSIFICATION	0.002252189399495303	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9998319846340333	WITHOUT_CLASSIFICATION	1.6801536596659417E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999971348890621	WITHOUT_CLASSIFICATION	2.865110937971658E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999779557178393	WITHOUT_CLASSIFICATION	2.2044282160703393E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999709776072075	WITHOUT_CLASSIFICATION	2.9022392792427237E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.999623363860987	WITHOUT_CLASSIFICATION	3.766361390129956E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999740149733558	WITHOUT_CLASSIFICATION	2.5985026644177444E-5	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.999993844491119	WITHOUT_CLASSIFICATION	6.155508880943679E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999598674967719	WITHOUT_CLASSIFICATION	4.013250322810149E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999457765881685	WITHOUT_CLASSIFICATION	5.422341183142194E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999489992221713	WITHOUT_CLASSIFICATION	5.1000777828658246E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999564669926861	WITHOUT_CLASSIFICATION	4.353300731383856E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9875589643432708	WITHOUT_CLASSIFICATION	0.01244103565672917	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9998013533292905	WITHOUT_CLASSIFICATION	1.9864667070945713E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9998053891798857	WITHOUT_CLASSIFICATION	1.9461082011432618E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999147730794737	WITHOUT_CLASSIFICATION	8.522692052616488E-5	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9997619473353886	WITHOUT_CLASSIFICATION	2.3805266461152883E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.999876522400063	WITHOUT_CLASSIFICATION	1.2347759993698216E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9998660908161294	WITHOUT_CLASSIFICATION	1.3390918387046693E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998603971836003	WITHOUT_CLASSIFICATION	1.396028163996433E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998603971836003	WITHOUT_CLASSIFICATION	1.396028163996433E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998513875201295	WITHOUT_CLASSIFICATION	1.4861247987062417E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998513875201295	WITHOUT_CLASSIFICATION	1.4861247987062417E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999860949334438	WITHOUT_CLASSIFICATION	1.390506655623907E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997135733634407	WITHOUT_CLASSIFICATION	2.8642663655941856E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998157883341945	WITHOUT_CLASSIFICATION	1.8421166580546338E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998157883341945	WITHOUT_CLASSIFICATION	1.8421166580546338E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.99998690517159	WITHOUT_CLASSIFICATION	1.309482841002328E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999850018130328	WITHOUT_CLASSIFICATION	1.4998186967034178E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9982214846060778	WITHOUT_CLASSIFICATION	0.0017785153939222078	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999453163637309	WITHOUT_CLASSIFICATION	5.4683636269161854E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9994692103998314	WITHOUT_CLASSIFICATION	5.307896001687274E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999068928879232	WITHOUT_CLASSIFICATION	9.310711207685056E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.999932558270003	WITHOUT_CLASSIFICATION	6.744172999694373E-5	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999954125052591	WITHOUT_CLASSIFICATION	4.587494740813871E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999486808562735	WITHOUT_CLASSIFICATION	5.131914372652795E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9954612399013996	WITHOUT_CLASSIFICATION	0.004538760098600385	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9998936552040851	WITHOUT_CLASSIFICATION	1.0634479591489432E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999344218745501	WITHOUT_CLASSIFICATION	6.557812544997135E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999269843008347	WITHOUT_CLASSIFICATION	7.301569916527456E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9998416089594815	WITHOUT_CLASSIFICATION	1.583910405184935E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999180862839521	WITHOUT_CLASSIFICATION	8.191371604786259E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.999867773456472	WITHOUT_CLASSIFICATION	1.3222654352794408E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.999991327006996	WITHOUT_CLASSIFICATION	8.672993003983016E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999242618420996	WITHOUT_CLASSIFICATION	7.57381579004332E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998375910181356	WITHOUT_CLASSIFICATION	1.6240898186447775E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999547809087063	WITHOUT_CLASSIFICATION	4.521909129371128E-5	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.999990700365596	WITHOUT_CLASSIFICATION	9.299634403962953E-6	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999602544561694	WITHOUT_CLASSIFICATION	3.974554383068358E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999952502120724	WITHOUT_CLASSIFICATION	4.749787927644851E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998930665444271	WITHOUT_CLASSIFICATION	1.0693345557280805E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9998621202783217	WITHOUT_CLASSIFICATION	1.3787972167831264E-4	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999576848468406	WITHOUT_CLASSIFICATION	4.2315153159395516E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.99968510648663	WITHOUT_CLASSIFICATION	3.148935133699517E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9998361158396836	WITHOUT_CLASSIFICATION	1.638841603164128E-4	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9988610702501912	WITHOUT_CLASSIFICATION	0.001138929749808768	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999772430039477	WITHOUT_CLASSIFICATION	2.2756996052324452E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9329024150205247	WITHOUT_CLASSIFICATION	0.0670975849794752	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9996447036431639	WITHOUT_CLASSIFICATION	3.55296356835985E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999489647251341	WITHOUT_CLASSIFICATION	5.103527486591645E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999940478982435	WITHOUT_CLASSIFICATION	5.952101756536525E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999318567908934	WITHOUT_CLASSIFICATION	6.814320910665503E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.999843989621411	WITHOUT_CLASSIFICATION	1.5601037858899264E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9994992726922669	WITHOUT_CLASSIFICATION	5.00727307733023E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999978833122048	WITHOUT_CLASSIFICATION	2.1166877952835183E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9998346923801729	WITHOUT_CLASSIFICATION	1.6530761982712212E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9998430855650411	WITHOUT_CLASSIFICATION	1.569144349590201E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999262103815906	WITHOUT_CLASSIFICATION	7.378961840937051E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999407225078875	WITHOUT_CLASSIFICATION	5.9277492112588305E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999314415669407	WITHOUT_CLASSIFICATION	6.85584330593064E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999880135992202	WITHOUT_CLASSIFICATION	1.198640077994066E-5	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999795928127477	WITHOUT_CLASSIFICATION	2.0407187252238122E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.999948252843289	WITHOUT_CLASSIFICATION	5.1747156711019735E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999798798749102	WITHOUT_CLASSIFICATION	2.012012508974595E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.999954870564513	WITHOUT_CLASSIFICATION	4.512943548690872E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9978937640307273	WITHOUT_CLASSIFICATION	0.0021062359692727373	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9998169918819675	WITHOUT_CLASSIFICATION	1.8300811803243923E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999932300004225	WITHOUT_CLASSIFICATION	6.769999577411718E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999731588767173	WITHOUT_CLASSIFICATION	2.6841123282656784E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9996603522306724	WITHOUT_CLASSIFICATION	3.396477693276036E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.999788266454289	WITHOUT_CLASSIFICATION	2.1173354571100538E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.999919408552742	WITHOUT_CLASSIFICATION	8.059144725798675E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999353375559433	WITHOUT_CLASSIFICATION	6.466244405670357E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9998552097202731	WITHOUT_CLASSIFICATION	1.447902797269573E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999693409056316	WITHOUT_CLASSIFICATION	3.065909436845531E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999290405135569	WITHOUT_CLASSIFICATION	7.095948644304319E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998657986349189	WITHOUT_CLASSIFICATION	1.3420136508114543E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999956296219598	WITHOUT_CLASSIFICATION	4.3703780401839125E-6	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9998334415006078	WITHOUT_CLASSIFICATION	1.665584993922721E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998657986349189	WITHOUT_CLASSIFICATION	1.3420136508114543E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.999984991441008	WITHOUT_CLASSIFICATION	1.50085589918934E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998657986349189	WITHOUT_CLASSIFICATION	1.3420136508114543E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.999957091501474	WITHOUT_CLASSIFICATION	4.2908498525875654E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999939450996981	WITHOUT_CLASSIFICATION	6.054900301946079E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9991947378962702	WITHOUT_CLASSIFICATION	8.052621037298797E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999879236981774	WITHOUT_CLASSIFICATION	1.2076301822643415E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9998754275036008	WITHOUT_CLASSIFICATION	1.2457249639919658E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9998668827921307	WITHOUT_CLASSIFICATION	1.331172078693253E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9988883962021278	WITHOUT_CLASSIFICATION	0.0011116037978722846	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999796720187298	WITHOUT_CLASSIFICATION	2.032798127026327E-5	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999759910274861	WITHOUT_CLASSIFICATION	2.4008972513834926E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999663052301448	WITHOUT_CLASSIFICATION	3.369476985517374E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999771778407518	WITHOUT_CLASSIFICATION	2.2822159248216657E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9998891703216379	WITHOUT_CLASSIFICATION	1.10829678362105E-4	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999926072330162	WITHOUT_CLASSIFICATION	7.392766983849426E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999806761309495	WITHOUT_CLASSIFICATION	1.932386905053338E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9998978775111277	WITHOUT_CLASSIFICATION	1.0212248887227075E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999785509953547	WITHOUT_CLASSIFICATION	2.1449004645337958E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.999837073698338	WITHOUT_CLASSIFICATION	1.629263016620412E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999498156968414	WITHOUT_CLASSIFICATION	5.018430315857203E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9996451929430243	WITHOUT_CLASSIFICATION	3.548070569756592E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9992763563248491	WITHOUT_CLASSIFICATION	7.236436751509317E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999946035306159	WITHOUT_CLASSIFICATION	5.396469384120033E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.999911555351667	WITHOUT_CLASSIFICATION	8.844464833302864E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999480016690941	WITHOUT_CLASSIFICATION	5.199833090585428E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999711373566333	WITHOUT_CLASSIFICATION	2.886264336671196E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9998281555090722	WITHOUT_CLASSIFICATION	1.7184449092780876E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999312940277922	WITHOUT_CLASSIFICATION	6.870597220769891E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9996012678208163	WITHOUT_CLASSIFICATION	3.9873217918367035E-4	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998238695270929	WITHOUT_CLASSIFICATION	1.7613047290711918E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9996497597066043	WITHOUT_CLASSIFICATION	3.502402933957187E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9998653787996882	WITHOUT_CLASSIFICATION	1.34621200311867E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999577524249534	WITHOUT_CLASSIFICATION	4.224757504660017E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999775823428664	WITHOUT_CLASSIFICATION	2.2417657133711604E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999778548393069	WITHOUT_CLASSIFICATION	2.2145160693129764E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999874127326052	WITHOUT_CLASSIFICATION	1.2587267394906645E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999794599681007	WITHOUT_CLASSIFICATION	2.0540031899298344E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999858149978038	WITHOUT_CLASSIFICATION	1.4185002196243354E-5	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.999894141100699	WITHOUT_CLASSIFICATION	1.0585889930105328E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9998678243434714	WITHOUT_CLASSIFICATION	1.321756565285079E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999209670939428	WITHOUT_CLASSIFICATION	7.903290605719689E-5	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9992958861681559	WITHOUT_CLASSIFICATION	7.041138318440001E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9996769882932718	WITHOUT_CLASSIFICATION	3.2301170672816975E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999949405323283	WITHOUT_CLASSIFICATION	5.059467671756069E-6	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.999986492275653	WITHOUT_CLASSIFICATION	1.3507724347078432E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9998417277759873	WITHOUT_CLASSIFICATION	1.582722240127965E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9997815946673994	WITHOUT_CLASSIFICATION	2.1840533260061273E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999825067109063	WITHOUT_CLASSIFICATION	1.7493289093746602E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999852705773604	WITHOUT_CLASSIFICATION	1.4729422639629302E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9998528512784188	WITHOUT_CLASSIFICATION	1.471487215812758E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999064610548246	WITHOUT_CLASSIFICATION	9.353894517546071E-5	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9997795062384652	WITHOUT_CLASSIFICATION	2.2049376153475102E-4	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999611741835904	WITHOUT_CLASSIFICATION	3.8825816409510595E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999906695786238	WITHOUT_CLASSIFICATION	9.330421376066381E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999155376676488	WITHOUT_CLASSIFICATION	8.446233235113218E-5	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999769125303115	WITHOUT_CLASSIFICATION	2.308746968850739E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999817813863403	WITHOUT_CLASSIFICATION	1.821861365970743E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999025406456216	WITHOUT_CLASSIFICATION	9.745935437845097E-5	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999315867318651	WITHOUT_CLASSIFICATION	6.841326813487999E-5	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999012705864058	WITHOUT_CLASSIFICATION	9.872941359426507E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999464684289995	WITHOUT_CLASSIFICATION	5.3531571000495645E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999457257869308	WITHOUT_CLASSIFICATION	5.4274213069321514E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9995750623129869	WITHOUT_CLASSIFICATION	4.24937687013072E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999011975176805	WITHOUT_CLASSIFICATION	9.880248231962209E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999048039081491	WITHOUT_CLASSIFICATION	9.519609185085785E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.999914447625778	WITHOUT_CLASSIFICATION	8.555237422197597E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9996952649219834	WITHOUT_CLASSIFICATION	3.047350780166025E-4	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.999854030078784	WITHOUT_CLASSIFICATION	1.4596992121601184E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9997687032250115	WITHOUT_CLASSIFICATION	2.312967749884335E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999464684289995	WITHOUT_CLASSIFICATION	5.3531571000495645E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999752230383738	WITHOUT_CLASSIFICATION	2.477696162616653E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999777470302056	WITHOUT_CLASSIFICATION	2.2252969794443562E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999416144567742	WITHOUT_CLASSIFICATION	5.8385543225894244E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.994970055665734	WITHOUT_CLASSIFICATION	0.005029944334265968	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999820746030268	WITHOUT_CLASSIFICATION	1.792539697324848E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9865435642912848	WITHOUT_CLASSIFICATION	0.013456435708715154	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999505980757641	WITHOUT_CLASSIFICATION	4.940192423586462E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999505980757641	WITHOUT_CLASSIFICATION	4.940192423586462E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9976129587155603	WITHOUT_CLASSIFICATION	0.002387041284439658	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9976129587155603	WITHOUT_CLASSIFICATION	0.002387041284439658	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.99533202724624	WITHOUT_CLASSIFICATION	0.004667972753759961	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9995405235538266	WITHOUT_CLASSIFICATION	4.594764461733908E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9968687857657788	WITHOUT_CLASSIFICATION	0.0031312142342212897	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9997300471944713	WITHOUT_CLASSIFICATION	2.69952805528593E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999161092753658	WITHOUT_CLASSIFICATION	8.389072463424056E-5	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9996557780915366	WITHOUT_CLASSIFICATION	3.442219084633773E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9997951589098389	WITHOUT_CLASSIFICATION	2.048410901610193E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999893126046531	WITHOUT_CLASSIFICATION	1.068739534689612E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.999835329747012	WITHOUT_CLASSIFICATION	1.6467025298809324E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9997816046443446	WITHOUT_CLASSIFICATION	2.1839535565531358E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996947435596687	WITHOUT_CLASSIFICATION	3.0525644033130625E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9998654322642644	WITHOUT_CLASSIFICATION	1.345677357357448E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998139649075565	WITHOUT_CLASSIFICATION	1.8603509244359404E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998139649075565	WITHOUT_CLASSIFICATION	1.8603509244359404E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9968687857657788	WITHOUT_CLASSIFICATION	0.0031312142342212897	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996947435596687	WITHOUT_CLASSIFICATION	3.0525644033130625E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9957682169690484	WITHOUT_CLASSIFICATION	0.004231783030951603	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9995405235538266	WITHOUT_CLASSIFICATION	4.594764461733908E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999965316534047	WITHOUT_CLASSIFICATION	3.4683465952708833E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9996512492437907	WITHOUT_CLASSIFICATION	3.487507562092633E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999514049943622	WITHOUT_CLASSIFICATION	4.859500563778853E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999514049943622	WITHOUT_CLASSIFICATION	4.859500563778853E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999403453645704	WITHOUT_CLASSIFICATION	5.965463542957007E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999961003315759	WITHOUT_CLASSIFICATION	3.8996684241020445E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9997300471944713	WITHOUT_CLASSIFICATION	2.69952805528593E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999637875916864	WITHOUT_CLASSIFICATION	3.6212408313712903E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9995934678796371	WITHOUT_CLASSIFICATION	4.065321203628569E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9998080008761665	WITHOUT_CLASSIFICATION	1.9199912383355088E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999648737316004	WITHOUT_CLASSIFICATION	3.512626839975404E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9997300471944713	WITHOUT_CLASSIFICATION	2.69952805528593E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998243116171049	WITHOUT_CLASSIFICATION	1.7568838289507856E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9992113969472132	WITHOUT_CLASSIFICATION	7.886030527868226E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999657143681249	WITHOUT_CLASSIFICATION	3.428563187520348E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999436623595284	WITHOUT_CLASSIFICATION	5.633764047170403E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999278647293002	WITHOUT_CLASSIFICATION	7.213527069981278E-5	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.999904364107941	WITHOUT_CLASSIFICATION	9.56358920589179E-5	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999316453833944	WITHOUT_CLASSIFICATION	6.83546166056339E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999009637277547	WITHOUT_CLASSIFICATION	9.903627224518515E-5	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999493355544075	WITHOUT_CLASSIFICATION	5.066444559256956E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999517415236088	WITHOUT_CLASSIFICATION	4.825847639134352E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999529449469442	WITHOUT_CLASSIFICATION	4.705505305579517E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999851399594277	WITHOUT_CLASSIFICATION	1.4860040572326906E-5	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9970193604234847	WITHOUT_CLASSIFICATION	0.002980639576515303	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999682398189514	WITHOUT_CLASSIFICATION	3.1760181048586585E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999200441297335	WITHOUT_CLASSIFICATION	7.995587026650113E-5	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999294918428802	WITHOUT_CLASSIFICATION	7.050815711986608E-5	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9997636758493539	WITHOUT_CLASSIFICATION	2.3632415064606308E-4	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999704398055781	WITHOUT_CLASSIFICATION	2.9560194421931562E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999952355108199	WITHOUT_CLASSIFICATION	4.764489180155198E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998288342975271	WITHOUT_CLASSIFICATION	1.7116570247288274E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996668908662433	WITHOUT_CLASSIFICATION	3.331091337567755E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999961299285159	WITHOUT_CLASSIFICATION	3.8700714841029535E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999974236798554	WITHOUT_CLASSIFICATION	2.5763201445909318E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999266944989981	WITHOUT_CLASSIFICATION	7.33055010019084E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999863805481058	WITHOUT_CLASSIFICATION	1.3619451894272949E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999766206043532	WITHOUT_CLASSIFICATION	2.3379395646706784E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9998373304469732	WITHOUT_CLASSIFICATION	1.626695530267396E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999871507034648	WITHOUT_CLASSIFICATION	1.2849296535218638E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999933537461975	WITHOUT_CLASSIFICATION	6.646253802585865E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999926853924225	WITHOUT_CLASSIFICATION	7.314607577581502E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9997875069336837	WITHOUT_CLASSIFICATION	2.1249306631631937E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996198923918995	WITHOUT_CLASSIFICATION	3.8010760810052753E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999009637277547	WITHOUT_CLASSIFICATION	9.903627224518515E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999980381968051	WITHOUT_CLASSIFICATION	1.9618031949140024E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999570161132325	WITHOUT_CLASSIFICATION	4.2983886767411154E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999880815140098	WITHOUT_CLASSIFICATION	1.191848599025178E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999707778845395	WITHOUT_CLASSIFICATION	2.922211546051404E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999974236798554	WITHOUT_CLASSIFICATION	2.5763201445909318E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999266944989981	WITHOUT_CLASSIFICATION	7.33055010019084E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999863805481058	WITHOUT_CLASSIFICATION	1.3619451894272949E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999979104955644	WITHOUT_CLASSIFICATION	2.0895044356225232E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998584125923	WITHOUT_CLASSIFICATION	1.4158740764300786E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999662628502166	WITHOUT_CLASSIFICATION	3.37371497833988E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999921950604075	WITHOUT_CLASSIFICATION	7.804939592458646E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985950302585038	WITHOUT_CLASSIFICATION	0.001404969741496145	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994705916269556	WITHOUT_CLASSIFICATION	5.29408373044316E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9994983405021118	WITHOUT_CLASSIFICATION	5.01659497888087E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999934578071757	WITHOUT_CLASSIFICATION	6.542192824148744E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999101616592622	WITHOUT_CLASSIFICATION	8.983834073783038E-5	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999644198227505	WITHOUT_CLASSIFICATION	3.558017724959183E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998784058180836	WITHOUT_CLASSIFICATION	1.2159418191638381E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999823534406843	WITHOUT_CLASSIFICATION	1.764655931578073E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999814113305943	WITHOUT_CLASSIFICATION	1.8588669405719745E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999961299285159	WITHOUT_CLASSIFICATION	3.8700714841029535E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999871507034648	WITHOUT_CLASSIFICATION	1.2849296535218638E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999933537461975	WITHOUT_CLASSIFICATION	6.646253802585865E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999926853924225	WITHOUT_CLASSIFICATION	7.314607577581502E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998584125923	WITHOUT_CLASSIFICATION	1.4158740764300786E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999662628502166	WITHOUT_CLASSIFICATION	3.37371497833988E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999921950604075	WITHOUT_CLASSIFICATION	7.804939592458646E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9985950302585038	WITHOUT_CLASSIFICATION	0.001404969741496145	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994705916269556	WITHOUT_CLASSIFICATION	5.29408373044316E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999964396260692	WITHOUT_CLASSIFICATION	3.5603739309265324E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9996277922456831	WITHOUT_CLASSIFICATION	3.72207754316871E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999874919091735	WITHOUT_CLASSIFICATION	1.2508090826390594E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999834222329777	WITHOUT_CLASSIFICATION	1.6577767022303048E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999834222329777	WITHOUT_CLASSIFICATION	1.6577767022303048E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999834222329777	WITHOUT_CLASSIFICATION	1.6577767022303048E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999834222329777	WITHOUT_CLASSIFICATION	1.6577767022303048E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999834222329777	WITHOUT_CLASSIFICATION	1.6577767022303048E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9995228967358517	WITHOUT_CLASSIFICATION	4.7710326414829047E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999973288468356	WITHOUT_CLASSIFICATION	2.671153164400145E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999211885343011	WITHOUT_CLASSIFICATION	7.881146569894626E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9973044542058577	WITHOUT_CLASSIFICATION	0.0026955457941422655	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999828489553211	WITHOUT_CLASSIFICATION	1.7151044678950253E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999586112626687	WITHOUT_CLASSIFICATION	4.138873733131363E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999866967670938	WITHOUT_CLASSIFICATION	1.3303232906219584E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999291803908988	WITHOUT_CLASSIFICATION	7.081960910116333E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9996500562508258	WITHOUT_CLASSIFICATION	3.4994374917418256E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998603971836003	WITHOUT_CLASSIFICATION	1.396028163996433E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998603971836003	WITHOUT_CLASSIFICATION	1.396028163996433E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998603971836003	WITHOUT_CLASSIFICATION	1.396028163996433E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999953662439042	WITHOUT_CLASSIFICATION	4.633756095788378E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9994773086759369	WITHOUT_CLASSIFICATION	5.226913240630685E-4	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999145849291315	WITHOUT_CLASSIFICATION	8.541507086849949E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999221521528245	WITHOUT_CLASSIFICATION	7.784784717549274E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999221521528245	WITHOUT_CLASSIFICATION	7.784784717549274E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999248772247179	WITHOUT_CLASSIFICATION	7.512277528214132E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999221521528245	WITHOUT_CLASSIFICATION	7.784784717549274E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999262150091863	WITHOUT_CLASSIFICATION	7.378499081363591E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999878125962776	WITHOUT_CLASSIFICATION	1.2187403722405594E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999818501967279	WITHOUT_CLASSIFICATION	1.814980327206924E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999735780102023	WITHOUT_CLASSIFICATION	2.64219897977633E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999735780102023	WITHOUT_CLASSIFICATION	2.64219897977633E-5	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9997544091795748	WITHOUT_CLASSIFICATION	2.4559082042522E-4	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999181397890001	WITHOUT_CLASSIFICATION	8.186021099995815E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9939257149336576	WITHOUT_CLASSIFICATION	0.006074285066342387	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9867771567235448	WITHOUT_CLASSIFICATION	0.013222843276455112	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999867605924267	WITHOUT_CLASSIFICATION	1.3239407573293383E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999885078077835	WITHOUT_CLASSIFICATION	1.1492192216442303E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9997463438314973	WITHOUT_CLASSIFICATION	2.5365616850266023E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999958569272408	WITHOUT_CLASSIFICATION	4.143072759276573E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.99990938967579	WITHOUT_CLASSIFICATION	9.06103242100712E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996198923918995	WITHOUT_CLASSIFICATION	3.8010760810052753E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999972488630446	WITHOUT_CLASSIFICATION	2.751136955479985E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999929951838117	WITHOUT_CLASSIFICATION	7.004816188298911E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9992939333543897	WITHOUT_CLASSIFICATION	7.060666456103247E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996198923918995	WITHOUT_CLASSIFICATION	3.8010760810052753E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999929951838117	WITHOUT_CLASSIFICATION	7.004816188298911E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999550898818617	WITHOUT_CLASSIFICATION	4.4910118138256416E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998891803898654	WITHOUT_CLASSIFICATION	1.1081961013466917E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999422219838108	WITHOUT_CLASSIFICATION	5.777801618922999E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.995275942790289	WITHOUT_CLASSIFICATION	0.0047240572097110925	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.995275942790289	WITHOUT_CLASSIFICATION	0.0047240572097110925	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9947016838187042	WITHOUT_CLASSIFICATION	0.005298316181295824	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999967985975986	WITHOUT_CLASSIFICATION	3.2014024012978224E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999872846817041	WITHOUT_CLASSIFICATION	1.2715318295968896E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999876160223352	WITHOUT_CLASSIFICATION	1.2383977664728054E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999792587510287	WITHOUT_CLASSIFICATION	2.0741248971362285E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999967727632567	WITHOUT_CLASSIFICATION	3.2272367434009225E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999792587510287	WITHOUT_CLASSIFICATION	2.0741248971362285E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999967924297499	WITHOUT_CLASSIFICATION	3.207570250166509E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999967924297499	WITHOUT_CLASSIFICATION	3.207570250166509E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999967924297499	WITHOUT_CLASSIFICATION	3.207570250166509E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999967924297499	WITHOUT_CLASSIFICATION	3.207570250166509E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999967985975986	WITHOUT_CLASSIFICATION	3.2014024012978224E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999967924297499	WITHOUT_CLASSIFICATION	3.207570250166509E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997489041531026	WITHOUT_CLASSIFICATION	2.5109584689740725E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997489041531026	WITHOUT_CLASSIFICATION	2.5109584689740725E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999876160223352	WITHOUT_CLASSIFICATION	1.2383977664728054E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.99998346001011	WITHOUT_CLASSIFICATION	1.6539989890065342E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.99998346001011	WITHOUT_CLASSIFICATION	1.6539989890065342E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999792587510287	WITHOUT_CLASSIFICATION	2.0741248971362285E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999967727632567	WITHOUT_CLASSIFICATION	3.2272367434009225E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999792587510287	WITHOUT_CLASSIFICATION	2.0741248971362285E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999947185191512	WITHOUT_CLASSIFICATION	5.281480848766331E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999876160223352	WITHOUT_CLASSIFICATION	1.2383977664728054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999967985975986	WITHOUT_CLASSIFICATION	3.2014024012978224E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999968149090219	WITHOUT_CLASSIFICATION	3.1850909780069337E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999967642685106	WITHOUT_CLASSIFICATION	3.2357314894182356E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997451248792893	WITHOUT_CLASSIFICATION	2.5487512071067106E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999949887399773	WITHOUT_CLASSIFICATION	5.011260022668244E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999427452686483	WITHOUT_CLASSIFICATION	5.7254731351646864E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999423737454372	WITHOUT_CLASSIFICATION	5.7626254562860985E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9998376328765844	WITHOUT_CLASSIFICATION	1.6236712341548637E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999956832129739	WITHOUT_CLASSIFICATION	4.316787026079839E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9998943297505897	WITHOUT_CLASSIFICATION	1.0567024941031786E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999883985329786	WITHOUT_CLASSIFICATION	1.1601467021484391E-5	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9995821606180114	WITHOUT_CLASSIFICATION	4.1783938198856543E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9819901999510869	WITHOUT_CLASSIFICATION	0.018009800048913043	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999286685681965	WITHOUT_CLASSIFICATION	7.133143180348964E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999926967494575	WITHOUT_CLASSIFICATION	7.303250542550694E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997968027448587	WITHOUT_CLASSIFICATION	2.0319725514127848E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999914867714353	WITHOUT_CLASSIFICATION	8.513228564602286E-6	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999478290946637	WITHOUT_CLASSIFICATION	5.21709053362891E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999205865439373	WITHOUT_CLASSIFICATION	7.941345606264549E-5	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9998941238951128	WITHOUT_CLASSIFICATION	1.0587610488710585E-4	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999692933652249	WITHOUT_CLASSIFICATION	3.0706634775132144E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895599777	WITHOUT_CLASSIFICATION	1.0440022368675916E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895599777	WITHOUT_CLASSIFICATION	1.0440022368675916E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895599777	WITHOUT_CLASSIFICATION	1.0440022368675916E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999777479172722	WITHOUT_CLASSIFICATION	2.2252082727881318E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999895713697	WITHOUT_CLASSIFICATION	1.0428630299143471E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.998981791712229	WITHOUT_CLASSIFICATION	0.0010182082877709941	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999841730969248	WITHOUT_CLASSIFICATION	1.582690307524779E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9980572211767349	WITHOUT_CLASSIFICATION	0.0019427788232650551	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999369360932701	WITHOUT_CLASSIFICATION	6.306390672993781E-5	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999975007067514	WITHOUT_CLASSIFICATION	2.499293248639483E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998544927120372	WITHOUT_CLASSIFICATION	1.4550728796274102E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.99968510648663	WITHOUT_CLASSIFICATION	3.148935133699517E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999703339994109	WITHOUT_CLASSIFICATION	2.9666000589063893E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.999972287080456	WITHOUT_CLASSIFICATION	2.7712919543905143E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999622386864414	WITHOUT_CLASSIFICATION	3.776131355856682E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999611961533541	WITHOUT_CLASSIFICATION	3.880384664589121E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995668340826876	WITHOUT_CLASSIFICATION	4.3316591731233173E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999318567908934	WITHOUT_CLASSIFICATION	6.814320910665503E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999464494246404	WITHOUT_CLASSIFICATION	5.355057535956159E-5	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.999980278701669	WITHOUT_CLASSIFICATION	1.972129833104483E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999299771094471	WITHOUT_CLASSIFICATION	7.00228905528211E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999883525536342	WITHOUT_CLASSIFICATION	1.1647446365794675E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998078092904141	WITHOUT_CLASSIFICATION	1.9219070958589334E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999984526515657	WITHOUT_CLASSIFICATION	1.5473484342498204E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996444825167219	WITHOUT_CLASSIFICATION	3.555174832780111E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998399096055237	WITHOUT_CLASSIFICATION	1.6009039447630613E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999419592704581	WITHOUT_CLASSIFICATION	5.804072954198031E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999756718054386	WITHOUT_CLASSIFICATION	2.4328194561344176E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999235822789755	WITHOUT_CLASSIFICATION	7.641772102455318E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.999882310789584	WITHOUT_CLASSIFICATION	1.1768921041594116E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999407734300043	WITHOUT_CLASSIFICATION	5.9226569995741665E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999407734300043	WITHOUT_CLASSIFICATION	5.9226569995741665E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999774064320285	WITHOUT_CLASSIFICATION	2.2593567971535935E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9997682082596007	WITHOUT_CLASSIFICATION	2.3179174039943717E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9998421099350644	WITHOUT_CLASSIFICATION	1.5789006493557628E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999513516916568	WITHOUT_CLASSIFICATION	4.864830834316788E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996601292950634	WITHOUT_CLASSIFICATION	3.398707049366402E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996601292950634	WITHOUT_CLASSIFICATION	3.398707049366402E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999658202126258	WITHOUT_CLASSIFICATION	3.4179787374216776E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999410061456232	WITHOUT_CLASSIFICATION	5.8993854376839393E-5	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9989124661123738	WITHOUT_CLASSIFICATION	0.0010875338876260945	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999525031428451	WITHOUT_CLASSIFICATION	4.749685715489404E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999786819428125	WITHOUT_CLASSIFICATION	2.1318057187428233E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9919755269777453	WITHOUT_CLASSIFICATION	0.008024473022254711	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9919755269777453	WITHOUT_CLASSIFICATION	0.008024473022254711	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9997531174518418	WITHOUT_CLASSIFICATION	2.468825481581396E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9997625293967297	WITHOUT_CLASSIFICATION	2.3747060327017818E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999267077734969	WITHOUT_CLASSIFICATION	7.329222650309852E-5	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.998859694190101	WITHOUT_CLASSIFICATION	0.0011403058098990145	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999464684289995	WITHOUT_CLASSIFICATION	5.3531571000495645E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9964923230386293	WITHOUT_CLASSIFICATION	0.0035076769613706497	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9997702273509658	WITHOUT_CLASSIFICATION	2.2977264903422455E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999057621082359	WITHOUT_CLASSIFICATION	9.423789176399777E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.99533202724624	WITHOUT_CLASSIFICATION	0.004667972753759961	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9995195094440429	WITHOUT_CLASSIFICATION	4.804905559571164E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999459492700221	WITHOUT_CLASSIFICATION	5.405072997781322E-5	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999846960729235	WITHOUT_CLASSIFICATION	1.530392707646874E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.991787525060176	WITHOUT_CLASSIFICATION	0.008212474939824061	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996636219064647	WITHOUT_CLASSIFICATION	3.3637809353520185E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9995067214656016	WITHOUT_CLASSIFICATION	4.932785343983877E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9997300471944713	WITHOUT_CLASSIFICATION	2.69952805528593E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999839196835136	WITHOUT_CLASSIFICATION	1.6080316486331996E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9957682169690484	WITHOUT_CLASSIFICATION	0.004231783030951603	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999157443027678	WITHOUT_CLASSIFICATION	8.42556972323288E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999950922067081	WITHOUT_CLASSIFICATION	4.9077932918683055E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999950922067081	WITHOUT_CLASSIFICATION	4.9077932918683055E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999981062086656	WITHOUT_CLASSIFICATION	1.8937913345221131E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9998190810467416	WITHOUT_CLASSIFICATION	1.8091895325856024E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9980753802926561	WITHOUT_CLASSIFICATION	0.0019246197073439434	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9998453291648689	WITHOUT_CLASSIFICATION	1.5467083513113228E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999990029052853	WITHOUT_CLASSIFICATION	9.970947147152787E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999045112349547	WITHOUT_CLASSIFICATION	9.548876504526958E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9998690499710753	WITHOUT_CLASSIFICATION	1.3095002892465947E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.999938569467531	WITHOUT_CLASSIFICATION	6.143053246899498E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9998044152758845	WITHOUT_CLASSIFICATION	1.9558472411549354E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999900917904206	WITHOUT_CLASSIFICATION	9.908209579336445E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9997510151046908	WITHOUT_CLASSIFICATION	2.4898489530927697E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9992788475169867	WITHOUT_CLASSIFICATION	7.211524830133666E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9910557241832469	WITHOUT_CLASSIFICATION	0.00894427581675305	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9992905184546006	WITHOUT_CLASSIFICATION	7.094815453993471E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.996466024288637	WITHOUT_CLASSIFICATION	0.0035339757113631424	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9993803992900613	WITHOUT_CLASSIFICATION	6.196007099387899E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997558329109053	WITHOUT_CLASSIFICATION	2.441670890945698E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996800820223658	WITHOUT_CLASSIFICATION	3.1991797763418446E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998664009303947	WITHOUT_CLASSIFICATION	1.3359906960532477E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999376898694998	WITHOUT_CLASSIFICATION	6.231013050022704E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999376898694998	WITHOUT_CLASSIFICATION	6.231013050022704E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9992872920786278	WITHOUT_CLASSIFICATION	7.127079213723357E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9994621290210242	WITHOUT_CLASSIFICATION	5.37870978975756E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9997988264769497	WITHOUT_CLASSIFICATION	2.011735230502808E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999774470662552	WITHOUT_CLASSIFICATION	2.255293374474916E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998073334665972	WITHOUT_CLASSIFICATION	1.9266653340278432E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998633530707409	WITHOUT_CLASSIFICATION	1.3664692925904014E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999097762979306	WITHOUT_CLASSIFICATION	9.022370206941292E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998139649075565	WITHOUT_CLASSIFICATION	1.8603509244359404E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998139649075565	WITHOUT_CLASSIFICATION	1.8603509244359404E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998139649075565	WITHOUT_CLASSIFICATION	1.8603509244359404E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.999871428322744	WITHOUT_CLASSIFICATION	1.2857167725601173E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997865408080143	WITHOUT_CLASSIFICATION	2.1345919198569735E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9969435286726278	WITHOUT_CLASSIFICATION	0.0030564713273721436	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998948706707478	WITHOUT_CLASSIFICATION	1.0512932925222464E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998948706707478	WITHOUT_CLASSIFICATION	1.0512932925222464E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999209174738409	WITHOUT_CLASSIFICATION	7.908252615898411E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996254971427735	WITHOUT_CLASSIFICATION	3.7450285722649636E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999030099421516	WITHOUT_CLASSIFICATION	9.699005784834415E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9973332637661175	WITHOUT_CLASSIFICATION	0.002666736233882391	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999969604066368	WITHOUT_CLASSIFICATION	3.0395933632630963E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999812539028253	WITHOUT_CLASSIFICATION	1.8746097174673618E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9998331553183575	WITHOUT_CLASSIFICATION	1.6684468164260234E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999354357564567	WITHOUT_CLASSIFICATION	6.456424354335667E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999948204027477	WITHOUT_CLASSIFICATION	5.179597252352489E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995875034476208	WITHOUT_CLASSIFICATION	4.124965523792101E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999174130060793	WITHOUT_CLASSIFICATION	8.258699392063667E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998443050849612	WITHOUT_CLASSIFICATION	1.5569491503886196E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998443050849612	WITHOUT_CLASSIFICATION	1.5569491503886196E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9997828163643534	WITHOUT_CLASSIFICATION	2.1718363564671484E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999270732488864	WITHOUT_CLASSIFICATION	7.292675111360907E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999270732488864	WITHOUT_CLASSIFICATION	7.292675111360907E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997299595046145	WITHOUT_CLASSIFICATION	2.7004049538552555E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9998871509236399	WITHOUT_CLASSIFICATION	1.1284907636008063E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9997975350894392	WITHOUT_CLASSIFICATION	2.0246491056067308E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998288342975271	WITHOUT_CLASSIFICATION	1.7116570247288274E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998288342975271	WITHOUT_CLASSIFICATION	1.7116570247288274E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998655809409586	WITHOUT_CLASSIFICATION	1.3441905904142023E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999916045280446	WITHOUT_CLASSIFICATION	8.395471955408806E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9994881780026371	WITHOUT_CLASSIFICATION	5.118219973628119E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9819147105481426	WITHOUT_CLASSIFICATION	0.018085289451857403	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9996989007552475	WITHOUT_CLASSIFICATION	3.010992447525974E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9996989007552475	WITHOUT_CLASSIFICATION	3.010992447525974E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.7160599244583195	DEFECT	0.2839400755416805	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9996352616347807	WITHOUT_CLASSIFICATION	3.647383652192671E-4	DEFECT
// is this an error???	DEFECT	0.9996352616347807	WITHOUT_CLASSIFICATION	3.647383652192671E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9998149996464163	WITHOUT_CLASSIFICATION	1.8500035358382137E-4	DEFECT
