// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9995635874956597	WITHOUT_CLASSIFICATION	4.3641250434032364E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999221764831054	WITHOUT_CLASSIFICATION	7.782351689453198E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999241795253884	WITHOUT_CLASSIFICATION	7.582047461162912E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9982558354809774	WITHOUT_CLASSIFICATION	0.0017441645190225982	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999980708351704	WITHOUT_CLASSIFICATION	1.9291648295887306E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998161904623253	WITHOUT_CLASSIFICATION	1.8380953767478295E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998687800887316	WITHOUT_CLASSIFICATION	1.312199112683932E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998916829914948	WITHOUT_CLASSIFICATION	1.0831700850518493E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999364817915111	WITHOUT_CLASSIFICATION	6.351820848888188E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999683863138912	WITHOUT_CLASSIFICATION	3.1613686108802304E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999293730470717	WITHOUT_CLASSIFICATION	7.062695292820211E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998034261294091	WITHOUT_CLASSIFICATION	1.965738705908635E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998931414744037	WITHOUT_CLASSIFICATION	1.068585255962643E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999069417108194	WITHOUT_CLASSIFICATION	9.30582891805773E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999647298120233	WITHOUT_CLASSIFICATION	3.527018797662184E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999361991441876	WITHOUT_CLASSIFICATION	6.380085581241652E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998161904623253	WITHOUT_CLASSIFICATION	1.8380953767478295E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999402955223358	WITHOUT_CLASSIFICATION	5.970447766424545E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999514028236205	WITHOUT_CLASSIFICATION	4.8597176379444235E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9992981207809684	WITHOUT_CLASSIFICATION	7.018792190316478E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9883104870353071	WITHOUT_CLASSIFICATION	0.011689512964692991	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999134622299902	WITHOUT_CLASSIFICATION	8.653777000972496E-5	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9988614746955712	WITHOUT_CLASSIFICATION	0.0011385253044288771	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9824901754924666	WITHOUT_CLASSIFICATION	0.01750982450753332	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9986344395344118	WITHOUT_CLASSIFICATION	0.0013655604655883045	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9914226317893459	WITHOUT_CLASSIFICATION	0.008577368210654128	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999649280938938	WITHOUT_CLASSIFICATION	3.507190610620237E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998945648924263	WITHOUT_CLASSIFICATION	1.0543510757357216E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999985091902262	WITHOUT_CLASSIFICATION	1.4908097737896278E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9971902083754698	WITHOUT_CLASSIFICATION	0.0028097916245301	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999357782848192	WITHOUT_CLASSIFICATION	6.42217151808172E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9983839578054438	WITHOUT_CLASSIFICATION	0.001616042194556181	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999791356696413	WITHOUT_CLASSIFICATION	2.0864330358685925E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9998848622328008	WITHOUT_CLASSIFICATION	1.1513776719917266E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999522244020371	WITHOUT_CLASSIFICATION	4.7775597962838766E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9980053326525771	WITHOUT_CLASSIFICATION	0.0019946673474229536	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999179097454559	WITHOUT_CLASSIFICATION	8.209025454409307E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999786895262686	WITHOUT_CLASSIFICATION	2.1310473731520847E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.990546885171406	WITHOUT_CLASSIFICATION	0.00945311482859403	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999833597645413	WITHOUT_CLASSIFICATION	1.6640235458648764E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999942998917677	WITHOUT_CLASSIFICATION	5.700108232243801E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9992013237945852	WITHOUT_CLASSIFICATION	7.986762054149673E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999119417982756	WITHOUT_CLASSIFICATION	8.805820172453248E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9203083458657847	WITHOUT_CLASSIFICATION	0.07969165413421522	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9998824420604551	WITHOUT_CLASSIFICATION	1.1755793954487175E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999962349932857	WITHOUT_CLASSIFICATION	3.7650067143071976E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9808901324400998	WITHOUT_CLASSIFICATION	0.019109867559900108	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999293730470717	WITHOUT_CLASSIFICATION	7.062695292820211E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998034261294091	WITHOUT_CLASSIFICATION	1.965738705908635E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998931414744037	WITHOUT_CLASSIFICATION	1.068585255962643E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9997028811076156	WITHOUT_CLASSIFICATION	2.9711889238433377E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999069417108194	WITHOUT_CLASSIFICATION	9.30582891805773E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999647298120233	WITHOUT_CLASSIFICATION	3.527018797662184E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999361991441876	WITHOUT_CLASSIFICATION	6.380085581241652E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9911235560914842	WITHOUT_CLASSIFICATION	0.008876443908515866	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9911235560914842	WITHOUT_CLASSIFICATION	0.008876443908515866	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9911235560914842	WITHOUT_CLASSIFICATION	0.008876443908515866	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999980708351704	WITHOUT_CLASSIFICATION	1.9291648295887306E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9994851231953145	WITHOUT_CLASSIFICATION	5.148768046856208E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9998400237833259	WITHOUT_CLASSIFICATION	1.5997621667416766E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999338451459794	WITHOUT_CLASSIFICATION	6.615485402062956E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9992981207809684	WITHOUT_CLASSIFICATION	7.018792190316478E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996383787503786	WITHOUT_CLASSIFICATION	3.61621249621287E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999649280938938	WITHOUT_CLASSIFICATION	3.507190610620237E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998945648924263	WITHOUT_CLASSIFICATION	1.0543510757357216E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9971902083754698	WITHOUT_CLASSIFICATION	0.0028097916245301	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999791356696413	WITHOUT_CLASSIFICATION	2.0864330358685925E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9997240814851892	WITHOUT_CLASSIFICATION	2.7591851481086456E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9997518266287566	WITHOUT_CLASSIFICATION	2.4817337124332257E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999556003959139	WITHOUT_CLASSIFICATION	4.4399604086014846E-5	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999424278112147	WITHOUT_CLASSIFICATION	5.7572188785344525E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999648012501167	WITHOUT_CLASSIFICATION	3.5198749883379104E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999179097454559	WITHOUT_CLASSIFICATION	8.209025454409307E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.990546885171406	WITHOUT_CLASSIFICATION	0.00945311482859403	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999623728701779	WITHOUT_CLASSIFICATION	3.762712982227024E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9991084747784976	WITHOUT_CLASSIFICATION	8.915252215023097E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999761937709447	WITHOUT_CLASSIFICATION	2.3806229055272425E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999735921508361	WITHOUT_CLASSIFICATION	2.64078491638722E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.999935150953191	WITHOUT_CLASSIFICATION	6.484904680897156E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9978103272838745	WITHOUT_CLASSIFICATION	0.0021896727161255605	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998732683776228	WITHOUT_CLASSIFICATION	1.267316223773035E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9451692930282024	WITHOUT_CLASSIFICATION	0.05483070697179766	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9987833663688049	WITHOUT_CLASSIFICATION	0.0012166336311951191	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.999976663512365	WITHOUT_CLASSIFICATION	2.3336487634963677E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999205765996572	WITHOUT_CLASSIFICATION	7.942340034285754E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999375981492452	WITHOUT_CLASSIFICATION	6.240185075480253E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9996224146419714	WITHOUT_CLASSIFICATION	3.7758535802860464E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999405617765442	WITHOUT_CLASSIFICATION	5.943822345580366E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.999976663512365	WITHOUT_CLASSIFICATION	2.3336487634963677E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999205765996572	WITHOUT_CLASSIFICATION	7.942340034285754E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.999708482046167	WITHOUT_CLASSIFICATION	2.9151795383298144E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.999708482046167	WITHOUT_CLASSIFICATION	2.9151795383298144E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997499350326463	WITHOUT_CLASSIFICATION	2.5006496735368645E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9998205106355278	WITHOUT_CLASSIFICATION	1.7948936447215725E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999821937343634	WITHOUT_CLASSIFICATION	1.7806265636653426E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997499350326463	WITHOUT_CLASSIFICATION	2.5006496735368645E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9998205106355278	WITHOUT_CLASSIFICATION	1.7948936447215725E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999484659315416	WITHOUT_CLASSIFICATION	5.153406845830047E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998988486535333	WITHOUT_CLASSIFICATION	1.0115134646672625E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999776870069335	WITHOUT_CLASSIFICATION	2.2312993066557086E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999185648766846	WITHOUT_CLASSIFICATION	8.143512331537216E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999776870069335	WITHOUT_CLASSIFICATION	2.2312993066557086E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999638522037319	WITHOUT_CLASSIFICATION	3.614779626818968E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999503177925283	WITHOUT_CLASSIFICATION	4.9682207471805316E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999503177925283	WITHOUT_CLASSIFICATION	4.9682207471805316E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9998311833619343	WITHOUT_CLASSIFICATION	1.6881663806563726E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9998997987407044	WITHOUT_CLASSIFICATION	1.0020125929550598E-4	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999106390584338	WITHOUT_CLASSIFICATION	8.936094156609894E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.999982656006224	WITHOUT_CLASSIFICATION	1.7343993775973394E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999820574273026	WITHOUT_CLASSIFICATION	1.7942572697344644E-5	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9998640401499609	WITHOUT_CLASSIFICATION	1.3595985003901344E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9996993899652409	WITHOUT_CLASSIFICATION	3.0061003475918336E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999342163758699	WITHOUT_CLASSIFICATION	6.578362413015345E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999893544321858	WITHOUT_CLASSIFICATION	1.0645567814278102E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9997405978229092	WITHOUT_CLASSIFICATION	2.5940217709075135E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999834872293676	WITHOUT_CLASSIFICATION	1.6512770632464265E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999093980353521	WITHOUT_CLASSIFICATION	9.060196464785477E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999013071098012	WITHOUT_CLASSIFICATION	9.869289019879007E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997620638804415	WITHOUT_CLASSIFICATION	2.3793611955848684E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9993888631522224	WITHOUT_CLASSIFICATION	6.111368477775835E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999868328077948	WITHOUT_CLASSIFICATION	1.3167192205198073E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9995537614240987	WITHOUT_CLASSIFICATION	4.4623857590125204E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999856433179	WITHOUT_CLASSIFICATION	1.4356682053330374E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999856433179	WITHOUT_CLASSIFICATION	1.4356682053330374E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999421966083674	WITHOUT_CLASSIFICATION	5.780339163271162E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999422814865594	WITHOUT_CLASSIFICATION	5.771851344059881E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999165670879112	WITHOUT_CLASSIFICATION	8.34329120886891E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9997549423019476	WITHOUT_CLASSIFICATION	2.450576980523464E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9987033730522072	WITHOUT_CLASSIFICATION	0.0012966269477927902	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999694180300809	WITHOUT_CLASSIFICATION	3.0581969919231117E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997620638804415	WITHOUT_CLASSIFICATION	2.3793611955848684E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9965552800931	WITHOUT_CLASSIFICATION	0.0034447199068998683	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9997703485256602	WITHOUT_CLASSIFICATION	2.2965147433987666E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999678150479744	WITHOUT_CLASSIFICATION	3.218495202558806E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999917502865939	WITHOUT_CLASSIFICATION	8.249713406148352E-6	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9995507533817601	WITHOUT_CLASSIFICATION	4.4924661823986137E-4	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9996830493376307	WITHOUT_CLASSIFICATION	3.169506623692864E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999773088464786	WITHOUT_CLASSIFICATION	2.2691153521428826E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9998938465130623	WITHOUT_CLASSIFICATION	1.0615348693770976E-4	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9998701759029112	WITHOUT_CLASSIFICATION	1.2982409708893282E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994755061794092	WITHOUT_CLASSIFICATION	5.244938205908505E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999996224346425	WITHOUT_CLASSIFICATION	3.7756535757765387E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999409995481476	WITHOUT_CLASSIFICATION	5.900045185245408E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999409995481476	WITHOUT_CLASSIFICATION	5.900045185245408E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9963899121590817	WITHOUT_CLASSIFICATION	0.0036100878409183646	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999699571301786	WITHOUT_CLASSIFICATION	3.0042869821469444E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999005857161916	WITHOUT_CLASSIFICATION	9.941428380854187E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999934959414167	WITHOUT_CLASSIFICATION	6.50405858325442E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999963849519322	WITHOUT_CLASSIFICATION	3.615048067658402E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999920848227982	WITHOUT_CLASSIFICATION	7.915177201657549E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9954869204373443	WITHOUT_CLASSIFICATION	0.004513079562655689	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999387217937973	WITHOUT_CLASSIFICATION	6.127820620263054E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9998892400902973	WITHOUT_CLASSIFICATION	1.1075990970265193E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9749438897982851	WITHOUT_CLASSIFICATION	0.025056110201715002	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9998768683269245	WITHOUT_CLASSIFICATION	1.2313167307547907E-4	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9990222404237399	WITHOUT_CLASSIFICATION	9.777595762600483E-4	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9994626861809335	WITHOUT_CLASSIFICATION	5.37313819066522E-4	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.999882206022083	WITHOUT_CLASSIFICATION	1.1779397791704324E-4	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9931574134426714	WITHOUT_CLASSIFICATION	0.0068425865573285985	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999000332737323	WITHOUT_CLASSIFICATION	9.996672626766813E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.999879487363369	WITHOUT_CLASSIFICATION	1.2051263663094586E-4	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999929977967099	WITHOUT_CLASSIFICATION	7.0022032900710325E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9981369844861533	WITHOUT_CLASSIFICATION	0.0018630155138466273	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999989019807841	WITHOUT_CLASSIFICATION	1.0980192158773453E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999992419328076	WITHOUT_CLASSIFICATION	7.580671922241396E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999652343590654	WITHOUT_CLASSIFICATION	3.476564093464047E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999951427728422	WITHOUT_CLASSIFICATION	4.857227157880457E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9998104502777098	WITHOUT_CLASSIFICATION	1.8954972229031045E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9998083224257753	WITHOUT_CLASSIFICATION	1.916775742247065E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999937968190987	WITHOUT_CLASSIFICATION	6.203180901232661E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9991615847607359	WITHOUT_CLASSIFICATION	8.384152392641185E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9994222076376372	WITHOUT_CLASSIFICATION	5.777923623627592E-4	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9961047165597586	WITHOUT_CLASSIFICATION	0.003895283440241438	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999570744176216	WITHOUT_CLASSIFICATION	4.292558237843214E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999876235676444	WITHOUT_CLASSIFICATION	1.2376432355682075E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999876235676444	WITHOUT_CLASSIFICATION	1.2376432355682075E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999558480479738	WITHOUT_CLASSIFICATION	4.4151952026207046E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999558480479738	WITHOUT_CLASSIFICATION	4.4151952026207046E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9982723937957533	WITHOUT_CLASSIFICATION	0.0017276062042466585	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999638229034831	WITHOUT_CLASSIFICATION	3.6177096516885036E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9989149009274247	WITHOUT_CLASSIFICATION	0.0010850990725752513	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9989149009274247	WITHOUT_CLASSIFICATION	0.0010850990725752513	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999093017031945	WITHOUT_CLASSIFICATION	9.069829680552057E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9995488274741308	WITHOUT_CLASSIFICATION	4.5117252586923424E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999093980353521	WITHOUT_CLASSIFICATION	9.060196464785477E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999876243259253	WITHOUT_CLASSIFICATION	1.2375674074758462E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999876243259253	WITHOUT_CLASSIFICATION	1.2375674074758462E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999876243259253	WITHOUT_CLASSIFICATION	1.2375674074758462E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9995488274741308	WITHOUT_CLASSIFICATION	4.5117252586923424E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9998587587953961	WITHOUT_CLASSIFICATION	1.4124120460397654E-4	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999358542728205	WITHOUT_CLASSIFICATION	6.414572717946453E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.99916541883871	WITHOUT_CLASSIFICATION	8.345811612900762E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998882024526158	WITHOUT_CLASSIFICATION	1.1179754738424398E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9998860341143639	WITHOUT_CLASSIFICATION	1.1396588563605983E-4	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.999698195908616	WITHOUT_CLASSIFICATION	3.0180409138395886E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999221764831054	WITHOUT_CLASSIFICATION	7.782351689453198E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999241795253884	WITHOUT_CLASSIFICATION	7.582047461162912E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9982558354809774	WITHOUT_CLASSIFICATION	0.0017441645190225982	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999980708351704	WITHOUT_CLASSIFICATION	1.9291648295887306E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998687800887316	WITHOUT_CLASSIFICATION	1.312199112683932E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998916829914948	WITHOUT_CLASSIFICATION	1.0831700850518493E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999364817915111	WITHOUT_CLASSIFICATION	6.351820848888188E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999293730470717	WITHOUT_CLASSIFICATION	7.062695292820211E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998034261294091	WITHOUT_CLASSIFICATION	1.965738705908635E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998931414744037	WITHOUT_CLASSIFICATION	1.068585255962643E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997771345697096	WITHOUT_CLASSIFICATION	2.2286543029037865E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999069417108194	WITHOUT_CLASSIFICATION	9.30582891805773E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999647298120233	WITHOUT_CLASSIFICATION	3.527018797662184E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999361991441876	WITHOUT_CLASSIFICATION	6.380085581241652E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999402955223358	WITHOUT_CLASSIFICATION	5.970447766424545E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999514028236205	WITHOUT_CLASSIFICATION	4.8597176379444235E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997796201293103	WITHOUT_CLASSIFICATION	2.2037987068969E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998871333977397	WITHOUT_CLASSIFICATION	1.1286660226032112E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9992981207809684	WITHOUT_CLASSIFICATION	7.018792190316478E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9883104870353071	WITHOUT_CLASSIFICATION	0.011689512964692991	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999134622299902	WITHOUT_CLASSIFICATION	8.653777000972496E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996383787503786	WITHOUT_CLASSIFICATION	3.61621249621287E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999649280938938	WITHOUT_CLASSIFICATION	3.507190610620237E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998945648924263	WITHOUT_CLASSIFICATION	1.0543510757357216E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999985091902262	WITHOUT_CLASSIFICATION	1.4908097737896278E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9971902083754698	WITHOUT_CLASSIFICATION	0.0028097916245301	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999972499847828	WITHOUT_CLASSIFICATION	2.7500152173076457E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999660288380012	WITHOUT_CLASSIFICATION	3.397116199865434E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999522244020371	WITHOUT_CLASSIFICATION	4.7775597962838766E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999357782848192	WITHOUT_CLASSIFICATION	6.42217151808172E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999791356696413	WITHOUT_CLASSIFICATION	2.0864330358685925E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9983839578054438	WITHOUT_CLASSIFICATION	0.001616042194556181	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9996783597449433	WITHOUT_CLASSIFICATION	3.2164025505667044E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.999892711241281	WITHOUT_CLASSIFICATION	1.0728875871902591E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999791356696413	WITHOUT_CLASSIFICATION	2.0864330358685925E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999179097454559	WITHOUT_CLASSIFICATION	8.209025454409307E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9980053326525771	WITHOUT_CLASSIFICATION	0.0019946673474229536	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999717688313159	WITHOUT_CLASSIFICATION	2.823116868405683E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.990546885171406	WITHOUT_CLASSIFICATION	0.00945311482859403	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999748745139172	WITHOUT_CLASSIFICATION	2.5125486082862174E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9996783597449433	WITHOUT_CLASSIFICATION	3.2164025505667044E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.990546885171406	WITHOUT_CLASSIFICATION	0.00945311482859403	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9997487023090185	WITHOUT_CLASSIFICATION	2.512976909815528E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9998836235309027	WITHOUT_CLASSIFICATION	1.163764690973321E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999796539656554	WITHOUT_CLASSIFICATION	2.0346034344658924E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999785183869809	WITHOUT_CLASSIFICATION	2.1481613018997028E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9993315766159993	WITHOUT_CLASSIFICATION	6.684233840006986E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9997504187405173	WITHOUT_CLASSIFICATION	2.4958125948262795E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9993315766159993	WITHOUT_CLASSIFICATION	6.684233840006986E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9995414769881961	WITHOUT_CLASSIFICATION	4.585230118039962E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9978857938077009	WITHOUT_CLASSIFICATION	0.0021142061922991566	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9890478026618427	WITHOUT_CLASSIFICATION	0.01095219733815729	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999883015584302	WITHOUT_CLASSIFICATION	1.1698441569784749E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998466533349629	WITHOUT_CLASSIFICATION	1.533466650370545E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.999868173345484	WITHOUT_CLASSIFICATION	1.3182665451615217E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9991658432485164	WITHOUT_CLASSIFICATION	8.34156751483557E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9987788144695248	WITHOUT_CLASSIFICATION	0.0012211855304751957	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999434536352779	WITHOUT_CLASSIFICATION	5.654636472209094E-5	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9984570072393848	WITHOUT_CLASSIFICATION	0.0015429927606153125	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9983181145056579	WITHOUT_CLASSIFICATION	0.001681885494342151	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999568537271547	WITHOUT_CLASSIFICATION	4.314627284532129E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.999352152803544	WITHOUT_CLASSIFICATION	6.478471964559297E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9998668227081323	WITHOUT_CLASSIFICATION	1.331772918677465E-4	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999815100490966	WITHOUT_CLASSIFICATION	1.8489950903388445E-5	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999761627602802	WITHOUT_CLASSIFICATION	2.383723971973135E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9930915683660095	WITHOUT_CLASSIFICATION	0.006908431633990429	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9981163469988494	WITHOUT_CLASSIFICATION	0.001883653001150546	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9997179385013566	WITHOUT_CLASSIFICATION	2.820614986434115E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.999978730457874	WITHOUT_CLASSIFICATION	2.1269542126000195E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.999933465985935	WITHOUT_CLASSIFICATION	6.653401406498373E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9997689978267411	WITHOUT_CLASSIFICATION	2.3100217325896166E-4	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999491744696589	WITHOUT_CLASSIFICATION	5.082553034111694E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999833597645413	WITHOUT_CLASSIFICATION	1.6640235458648764E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999329016252397	WITHOUT_CLASSIFICATION	6.709837476030441E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999357380368112	WITHOUT_CLASSIFICATION	6.42619631887648E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999899961695035	WITHOUT_CLASSIFICATION	1.0003830496533212E-5	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999814922641436	WITHOUT_CLASSIFICATION	1.8507735856401597E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999521435394132	WITHOUT_CLASSIFICATION	4.785646058685712E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.999895400201295	WITHOUT_CLASSIFICATION	1.0459979870496621E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.999974594673338	WITHOUT_CLASSIFICATION	2.5405326661924274E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999807134710017	WITHOUT_CLASSIFICATION	1.92865289982863E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999674363708454	WITHOUT_CLASSIFICATION	3.25636291547108E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999929736532686	WITHOUT_CLASSIFICATION	7.026346731414814E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999565423790543	WITHOUT_CLASSIFICATION	4.345762094571635E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9982063328011471	WITHOUT_CLASSIFICATION	0.0017936671988529192	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.999963254353833	WITHOUT_CLASSIFICATION	3.6745646166866766E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.999985808985573	WITHOUT_CLASSIFICATION	1.419101442714059E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999623728701779	WITHOUT_CLASSIFICATION	3.762712982227024E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.999935964986869	WITHOUT_CLASSIFICATION	6.403501313091342E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.999954135928591	WITHOUT_CLASSIFICATION	4.586407140906702E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999819211033419	WITHOUT_CLASSIFICATION	1.807889665795128E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999779070301118	WITHOUT_CLASSIFICATION	2.2092969888200363E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999906832764898	WITHOUT_CLASSIFICATION	9.316723510194303E-6	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9986332318656935	WITHOUT_CLASSIFICATION	0.0013667681343064687	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9825898406431924	WITHOUT_CLASSIFICATION	0.0174101593568075	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999305128572562	WITHOUT_CLASSIFICATION	6.948714274382625E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9998848800198905	WITHOUT_CLASSIFICATION	1.1511998010954332E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9998997987407044	WITHOUT_CLASSIFICATION	1.0020125929550598E-4	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9989218270354953	WITHOUT_CLASSIFICATION	0.0010781729645046778	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999317286442091	WITHOUT_CLASSIFICATION	6.827135579090295E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999759243271114	WITHOUT_CLASSIFICATION	2.4075672888574073E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999947056614296	WITHOUT_CLASSIFICATION	5.294338570395717E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999937629605749	WITHOUT_CLASSIFICATION	6.237039425043677E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998660251958801	WITHOUT_CLASSIFICATION	1.3397480411991532E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9995463715896249	WITHOUT_CLASSIFICATION	4.53628410375138E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9998355469388901	WITHOUT_CLASSIFICATION	1.6445306110984083E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999338224683739	WITHOUT_CLASSIFICATION	6.617753162610532E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999940090732561	WITHOUT_CLASSIFICATION	5.990926743945038E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999933730353483	WITHOUT_CLASSIFICATION	6.6269646516761915E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999868328077948	WITHOUT_CLASSIFICATION	1.3167192205198073E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9995537614240987	WITHOUT_CLASSIFICATION	4.4623857590125204E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999694180300809	WITHOUT_CLASSIFICATION	3.0581969919231117E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998660251958801	WITHOUT_CLASSIFICATION	1.3397480411991532E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999940090732561	WITHOUT_CLASSIFICATION	5.990926743945038E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999933730353483	WITHOUT_CLASSIFICATION	6.6269646516761915E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999104466745874	WITHOUT_CLASSIFICATION	8.955332541258273E-5	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999705051138897	WITHOUT_CLASSIFICATION	2.9494886110231424E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.99983456191096	WITHOUT_CLASSIFICATION	1.654380890398955E-4	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9995145331965	WITHOUT_CLASSIFICATION	4.854668035000498E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999947056614296	WITHOUT_CLASSIFICATION	5.294338570395717E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999937629605749	WITHOUT_CLASSIFICATION	6.237039425043677E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999109951758277	WITHOUT_CLASSIFICATION	8.900482417231476E-5	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999627429672755	WITHOUT_CLASSIFICATION	3.725703272457105E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999839537673266	WITHOUT_CLASSIFICATION	1.6046232673370823E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9996610217170403	WITHOUT_CLASSIFICATION	3.389782829596718E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999660367523365	WITHOUT_CLASSIFICATION	3.39632476633594E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9966323965134523	WITHOUT_CLASSIFICATION	0.0033676034865477047	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999470433912112	WITHOUT_CLASSIFICATION	5.2956608788658346E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9998226442524587	WITHOUT_CLASSIFICATION	1.7735574754117032E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9998682877560278	WITHOUT_CLASSIFICATION	1.31712243972364E-4	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999613405990865	WITHOUT_CLASSIFICATION	3.865940091352964E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.978813798993384	WITHOUT_CLASSIFICATION	0.021186201006615946	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999368235866944	WITHOUT_CLASSIFICATION	6.317641330550287E-5	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999936273998942	WITHOUT_CLASSIFICATION	6.372600105903099E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999961053378456	WITHOUT_CLASSIFICATION	3.894662154530059E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999510838463345	WITHOUT_CLASSIFICATION	4.8916153665545434E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.999999917342263	WITHOUT_CLASSIFICATION	8.265773708367465E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999947056614296	WITHOUT_CLASSIFICATION	5.294338570395717E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999937629605749	WITHOUT_CLASSIFICATION	6.237039425043677E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999792139618001	WITHOUT_CLASSIFICATION	2.0786038199898645E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999003420964346	WITHOUT_CLASSIFICATION	9.965790356531508E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999870760268053	WITHOUT_CLASSIFICATION	1.292397319468104E-5	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9998816789913052	WITHOUT_CLASSIFICATION	1.1832100869484376E-4	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999879983216601	WITHOUT_CLASSIFICATION	1.200167833985497E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999238042007306	WITHOUT_CLASSIFICATION	7.619579926934647E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9581193066153455	WITHOUT_CLASSIFICATION	0.04188069338465438	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999406872791919	WITHOUT_CLASSIFICATION	5.931272080809285E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998604344453569	WITHOUT_CLASSIFICATION	1.3956555464312987E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998604344453569	WITHOUT_CLASSIFICATION	1.3956555464312987E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9982162553146463	WITHOUT_CLASSIFICATION	0.0017837446853536513	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9995807282946769	WITHOUT_CLASSIFICATION	4.1927170532304235E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9940339436762555	WITHOUT_CLASSIFICATION	0.005966056323744492	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9997386451894298	WITHOUT_CLASSIFICATION	2.6135481057015206E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999715016698659	WITHOUT_CLASSIFICATION	2.8498330134067907E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999589966743262	WITHOUT_CLASSIFICATION	4.100332567389889E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9997263891142107	WITHOUT_CLASSIFICATION	2.736108857891641E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9997263891142107	WITHOUT_CLASSIFICATION	2.736108857891641E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.999940067878725	WITHOUT_CLASSIFICATION	5.993212127493171E-5	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999003150165424	WITHOUT_CLASSIFICATION	9.96849834575504E-5	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999781944704579	WITHOUT_CLASSIFICATION	2.1805529542145714E-5	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999657174634695	WITHOUT_CLASSIFICATION	3.428253653048357E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999149334809461	WITHOUT_CLASSIFICATION	8.506651905394426E-5	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9997767598100054	WITHOUT_CLASSIFICATION	2.2324018999461307E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999834900684117	WITHOUT_CLASSIFICATION	1.6509931588313538E-5	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9996873370240539	WITHOUT_CLASSIFICATION	3.126629759461118E-4	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999250243202332	WITHOUT_CLASSIFICATION	7.497567976679582E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.999997452584715	WITHOUT_CLASSIFICATION	2.5474152849568007E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999820844685873	WITHOUT_CLASSIFICATION	1.791553141273634E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999910792593514	WITHOUT_CLASSIFICATION	8.920740648587099E-6	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.999668958472235	WITHOUT_CLASSIFICATION	3.310415277649855E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9998698880628211	WITHOUT_CLASSIFICATION	1.3011193717901446E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9993885270773065	WITHOUT_CLASSIFICATION	6.114729226935139E-4	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999693267753609	WITHOUT_CLASSIFICATION	3.0673224639126056E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999770622942372	WITHOUT_CLASSIFICATION	2.293770576285016E-5	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999988216701683	WITHOUT_CLASSIFICATION	1.178329831690523E-5	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999497998828277	WITHOUT_CLASSIFICATION	5.0200117172327925E-5	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999360105686407	WITHOUT_CLASSIFICATION	6.398943135940361E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9991858394726144	WITHOUT_CLASSIFICATION	8.141605273855722E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999989762007406	WITHOUT_CLASSIFICATION	1.0237992593637539E-6	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.999977081189017	WITHOUT_CLASSIFICATION	2.291881098302923E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9990080755136095	WITHOUT_CLASSIFICATION	9.919244863905263E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9998304110303093	WITHOUT_CLASSIFICATION	1.6958896969057654E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999799443143296	WITHOUT_CLASSIFICATION	2.0055685670405603E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999859764351794	WITHOUT_CLASSIFICATION	1.4023564820630323E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9997372010766123	WITHOUT_CLASSIFICATION	2.627989233876578E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.99988634786332	WITHOUT_CLASSIFICATION	1.1365213668008773E-4	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999949283848724	WITHOUT_CLASSIFICATION	5.071615127700075E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999809397411602	WITHOUT_CLASSIFICATION	1.9060258839767827E-5	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999514428784735	WITHOUT_CLASSIFICATION	4.85571215265209E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9996043226222784	WITHOUT_CLASSIFICATION	3.9567737772164887E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999967479295637	WITHOUT_CLASSIFICATION	3.252070436358081E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9978421173073377	WITHOUT_CLASSIFICATION	0.00215788269266217	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9994077754310988	WITHOUT_CLASSIFICATION	5.922245689010784E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999937457030347	WITHOUT_CLASSIFICATION	6.254296965288301E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9997490067123805	WITHOUT_CLASSIFICATION	2.50993287619561E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999852594846013	WITHOUT_CLASSIFICATION	1.474051539868013E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999286809191846	WITHOUT_CLASSIFICATION	7.131908081541481E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999800290331292	WITHOUT_CLASSIFICATION	1.9970966870824208E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9997263641390456	WITHOUT_CLASSIFICATION	2.736358609543094E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999499413547289	WITHOUT_CLASSIFICATION	5.005864527109694E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9997920973623857	WITHOUT_CLASSIFICATION	2.0790263761429544E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9997649239494893	WITHOUT_CLASSIFICATION	2.350760505106469E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999800290331292	WITHOUT_CLASSIFICATION	1.9970966870824208E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999499413547289	WITHOUT_CLASSIFICATION	5.005864527109694E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9987705905876199	WITHOUT_CLASSIFICATION	0.0012294094123801336	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.99995722883124	WITHOUT_CLASSIFICATION	4.277116875986429E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9998972211378501	WITHOUT_CLASSIFICATION	1.0277886215000271E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999912734292251	WITHOUT_CLASSIFICATION	8.726570774900982E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999286809191846	WITHOUT_CLASSIFICATION	7.131908081541481E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999286809191846	WITHOUT_CLASSIFICATION	7.131908081541481E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999800290331292	WITHOUT_CLASSIFICATION	1.9970966870824208E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999750200672402	WITHOUT_CLASSIFICATION	2.4979932759884562E-5	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9998921103863619	WITHOUT_CLASSIFICATION	1.0788961363808572E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999516778011523	WITHOUT_CLASSIFICATION	4.832219884766848E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999516778011523	WITHOUT_CLASSIFICATION	4.832219884766848E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998726653482131	WITHOUT_CLASSIFICATION	1.2733465178687477E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998514317577396	WITHOUT_CLASSIFICATION	1.48568242260461E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999001853919781	WITHOUT_CLASSIFICATION	9.981460802191257E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999001853919781	WITHOUT_CLASSIFICATION	9.981460802191257E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9987626545654326	WITHOUT_CLASSIFICATION	0.001237345434567466	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998514317577396	WITHOUT_CLASSIFICATION	1.48568242260461E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999001853919781	WITHOUT_CLASSIFICATION	9.981460802191257E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9987626545654326	WITHOUT_CLASSIFICATION	0.001237345434567466	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9998718395247301	WITHOUT_CLASSIFICATION	1.2816047526984658E-4	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9993383780914398	WITHOUT_CLASSIFICATION	6.616219085603155E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9998254708243366	WITHOUT_CLASSIFICATION	1.7452917566333217E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.999746162021589	WITHOUT_CLASSIFICATION	2.538379784110517E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9998061494162725	WITHOUT_CLASSIFICATION	1.938505837274703E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999747219042832	WITHOUT_CLASSIFICATION	2.5278095716780192E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9997454916020816	WITHOUT_CLASSIFICATION	2.5450839791838343E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9997568069153066	WITHOUT_CLASSIFICATION	2.431930846935048E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9996699510158478	WITHOUT_CLASSIFICATION	3.300489841522386E-4	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9997938679409368	WITHOUT_CLASSIFICATION	2.0613205906316523E-4	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999912281850568	WITHOUT_CLASSIFICATION	8.771814943160366E-6	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999904514369693	WITHOUT_CLASSIFICATION	9.548563030764758E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999919697986737	WITHOUT_CLASSIFICATION	8.030201326313318E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999825450979649	WITHOUT_CLASSIFICATION	1.7454902035069065E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9998042167977305	WITHOUT_CLASSIFICATION	1.957832022694284E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9997219539783717	WITHOUT_CLASSIFICATION	2.780460216282587E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9992991264337845	WITHOUT_CLASSIFICATION	7.00873566215503E-4	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9997909069751005	WITHOUT_CLASSIFICATION	2.0909302489938912E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999902378970513	WITHOUT_CLASSIFICATION	9.76210294864903E-6	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999616701681602	WITHOUT_CLASSIFICATION	3.8329831839772206E-5	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999701629579605	WITHOUT_CLASSIFICATION	2.983704203956239E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999688542585591	WITHOUT_CLASSIFICATION	3.11457414409418E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999725699961188	WITHOUT_CLASSIFICATION	2.7430003881191917E-5	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.999983782815766	WITHOUT_CLASSIFICATION	1.6217184233938053E-5	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999083034400736	WITHOUT_CLASSIFICATION	9.169655992644391E-5	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.999942817407296	WITHOUT_CLASSIFICATION	5.7182592704090406E-5	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999808937134294	WITHOUT_CLASSIFICATION	1.910628657068179E-5	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9998213658639352	WITHOUT_CLASSIFICATION	1.786341360646819E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9991374029043342	WITHOUT_CLASSIFICATION	8.625970956658514E-4	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999869736753292	WITHOUT_CLASSIFICATION	1.302632467076948E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998675950021616	WITHOUT_CLASSIFICATION	1.3240499783831285E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999194273295222	WITHOUT_CLASSIFICATION	8.057267047780363E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999539762817572	WITHOUT_CLASSIFICATION	4.6023718242917144E-5	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9997098566226478	WITHOUT_CLASSIFICATION	2.901433773522011E-4	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999927885279797	WITHOUT_CLASSIFICATION	7.211472020263797E-6	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998466119271153	WITHOUT_CLASSIFICATION	1.53388072884729E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999787227349894	WITHOUT_CLASSIFICATION	2.1277265010602472E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999787227349894	WITHOUT_CLASSIFICATION	2.1277265010602472E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999787227349894	WITHOUT_CLASSIFICATION	2.1277265010602472E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999988384656773	WITHOUT_CLASSIFICATION	1.1615343226393447E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9997121735545421	WITHOUT_CLASSIFICATION	2.878264454578399E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9941362014275988	WITHOUT_CLASSIFICATION	0.005863798572401208	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9985008589634311	WITHOUT_CLASSIFICATION	0.0014991410365688656	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999073418065842	WITHOUT_CLASSIFICATION	9.26581934157679E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.999881377544141	WITHOUT_CLASSIFICATION	1.186224558589799E-4	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999956798657094	WITHOUT_CLASSIFICATION	4.3201342906773486E-6	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9997014044675074	WITHOUT_CLASSIFICATION	2.985955324925935E-4	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999138418696332	WITHOUT_CLASSIFICATION	8.615813036676474E-5	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999690070295625	WITHOUT_CLASSIFICATION	3.099297043759319E-5	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9951059966414751	WITHOUT_CLASSIFICATION	0.0048940033585248306	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.999906146618579	WITHOUT_CLASSIFICATION	9.385338142095104E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999737970262671	WITHOUT_CLASSIFICATION	2.620297373288898E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9997189269289698	WITHOUT_CLASSIFICATION	2.8107307103028567E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9991163185225066	WITHOUT_CLASSIFICATION	8.836814774935367E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999993992725038	WITHOUT_CLASSIFICATION	6.00727496224126E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999073385823686	WITHOUT_CLASSIFICATION	9.266141763139583E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999898448225405	WITHOUT_CLASSIFICATION	1.0155177459469422E-5	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999455613694013	WITHOUT_CLASSIFICATION	5.443863059886396E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9997365778301948	WITHOUT_CLASSIFICATION	2.634221698052411E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999448366123161	WITHOUT_CLASSIFICATION	5.5163387683828325E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9995807972801403	WITHOUT_CLASSIFICATION	4.192027198598395E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9997290413932832	WITHOUT_CLASSIFICATION	2.709586067167647E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9985072898398701	WITHOUT_CLASSIFICATION	0.0014927101601299416	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999970652316379	WITHOUT_CLASSIFICATION	2.9347683621235957E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999789129566689	WITHOUT_CLASSIFICATION	2.1087043331087623E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999941845821578	WITHOUT_CLASSIFICATION	5.815417842180718E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999869789961783	WITHOUT_CLASSIFICATION	1.3021003821708334E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999200154099644	WITHOUT_CLASSIFICATION	7.998459003555202E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999142012386601	WITHOUT_CLASSIFICATION	8.579876133984369E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999414227228807	WITHOUT_CLASSIFICATION	5.857727711939923E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9974091554987377	WITHOUT_CLASSIFICATION	0.00259084450126236	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9993253749276224	WITHOUT_CLASSIFICATION	6.746250723775843E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999198237560861	WITHOUT_CLASSIFICATION	8.01762439138697E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9998216052822566	WITHOUT_CLASSIFICATION	1.7839471774342162E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9996987882230899	WITHOUT_CLASSIFICATION	3.0121177691003236E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999886743973323	WITHOUT_CLASSIFICATION	1.1325602667595695E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9997566460872067	WITHOUT_CLASSIFICATION	2.433539127933073E-4	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999700979947208	WITHOUT_CLASSIFICATION	2.9902005279155987E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999482967013772	WITHOUT_CLASSIFICATION	5.1703298622813336E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999621503052346	WITHOUT_CLASSIFICATION	3.784969476526686E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999606540779815	WITHOUT_CLASSIFICATION	3.934592201850912E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999238042007306	WITHOUT_CLASSIFICATION	7.619579926934647E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999867475152807	WITHOUT_CLASSIFICATION	1.3252484719273977E-5	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999204206538521	WITHOUT_CLASSIFICATION	7.957934614788678E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9996973101089422	WITHOUT_CLASSIFICATION	3.026898910578595E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9942677552095668	WITHOUT_CLASSIFICATION	0.005732244790433188	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9892921850932862	WITHOUT_CLASSIFICATION	0.010707814906713764	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.998112173398462	WITHOUT_CLASSIFICATION	0.001887826601537918	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998431920647042	WITHOUT_CLASSIFICATION	1.5680793529577306E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999690436399242	WITHOUT_CLASSIFICATION	3.095636007579389E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9986530810106581	WITHOUT_CLASSIFICATION	0.001346918989341925	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9997950240588556	WITHOUT_CLASSIFICATION	2.0497594114436926E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999334781515505	WITHOUT_CLASSIFICATION	6.652184844944294E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999845636178648	WITHOUT_CLASSIFICATION	1.5436382135276956E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999237301000099	WITHOUT_CLASSIFICATION	7.626989999015202E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9977627792504059	WITHOUT_CLASSIFICATION	0.0022372207495940403	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999447892503636	WITHOUT_CLASSIFICATION	5.52107496363749E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999569339317185	WITHOUT_CLASSIFICATION	4.306606828142548E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9998238586670275	WITHOUT_CLASSIFICATION	1.7614133297254276E-4	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9997656534129118	WITHOUT_CLASSIFICATION	2.3434658708816126E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9998209151448728	WITHOUT_CLASSIFICATION	1.790848551272892E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9995049829047128	WITHOUT_CLASSIFICATION	4.950170952871811E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9998931658825525	WITHOUT_CLASSIFICATION	1.0683411744753592E-4	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.984198714977727	WITHOUT_CLASSIFICATION	0.015801285022272946	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999938418663119	WITHOUT_CLASSIFICATION	6.158133688086726E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9998928190744343	WITHOUT_CLASSIFICATION	1.0718092556570768E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.99998879226172	WITHOUT_CLASSIFICATION	1.1207738279970322E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.99998879226172	WITHOUT_CLASSIFICATION	1.1207738279970322E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999938418663119	WITHOUT_CLASSIFICATION	6.158133688086726E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999352053314817	WITHOUT_CLASSIFICATION	6.479466851819614E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9998890425278372	WITHOUT_CLASSIFICATION	1.1095747216293135E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9998890425278372	WITHOUT_CLASSIFICATION	1.1095747216293135E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999405920716553	WITHOUT_CLASSIFICATION	5.940792834463353E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999682192294062	WITHOUT_CLASSIFICATION	3.1780770593956996E-5	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9998967830873963	WITHOUT_CLASSIFICATION	1.032169126036495E-4	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9971712527536316	WITHOUT_CLASSIFICATION	0.0028287472463683645	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9997821545457556	WITHOUT_CLASSIFICATION	2.1784545424440943E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999505205881384	WITHOUT_CLASSIFICATION	4.9479411861602506E-5	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9998781102830442	WITHOUT_CLASSIFICATION	1.2188971695576013E-4	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9996861036564162	WITHOUT_CLASSIFICATION	3.138963435838325E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9996894875399458	WITHOUT_CLASSIFICATION	3.1051246005420533E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9998450010696436	WITHOUT_CLASSIFICATION	1.5499893035644303E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999825636954134	WITHOUT_CLASSIFICATION	1.7436304586644633E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999984855754653	WITHOUT_CLASSIFICATION	1.514424534651544E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999544956411012	WITHOUT_CLASSIFICATION	4.550435889881733E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999270839840683	WITHOUT_CLASSIFICATION	7.291601593170702E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999392538223402	WITHOUT_CLASSIFICATION	6.074617765982183E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999758501913276	WITHOUT_CLASSIFICATION	2.41498086723954E-5	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999852863958505	WITHOUT_CLASSIFICATION	1.4713604149507236E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9998609516972348	WITHOUT_CLASSIFICATION	1.3904830276518493E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9970332658804338	WITHOUT_CLASSIFICATION	0.0029667341195662054	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9997967511395001	WITHOUT_CLASSIFICATION	2.0324886049985987E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999980188637025	WITHOUT_CLASSIFICATION	1.9811362975181045E-6	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9993515354278377	WITHOUT_CLASSIFICATION	6.484645721622646E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998174066327387	WITHOUT_CLASSIFICATION	1.8259336726130106E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999794391844712	WITHOUT_CLASSIFICATION	2.0560815528845643E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999794391844712	WITHOUT_CLASSIFICATION	2.0560815528845643E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9996073304634233	WITHOUT_CLASSIFICATION	3.9266953657674083E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9988665535261707	WITHOUT_CLASSIFICATION	0.0011334464738293711	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9995571483500881	WITHOUT_CLASSIFICATION	4.428516499118636E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998706668027241	WITHOUT_CLASSIFICATION	1.2933319727581103E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999613719611659	WITHOUT_CLASSIFICATION	3.862803883423876E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999716311748647	WITHOUT_CLASSIFICATION	2.836882513533853E-5	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999557714264322	WITHOUT_CLASSIFICATION	4.422857356775235E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9997847692782325	WITHOUT_CLASSIFICATION	2.15230721767527E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997337025720273	WITHOUT_CLASSIFICATION	2.6629742797268363E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9992306036304185	WITHOUT_CLASSIFICATION	7.693963695814517E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999309516709842	WITHOUT_CLASSIFICATION	6.904832901583237E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9996419594392163	WITHOUT_CLASSIFICATION	3.5804056078371065E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9996527424287162	WITHOUT_CLASSIFICATION	3.4725757128389553E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998105132807216	WITHOUT_CLASSIFICATION	1.8948671927834126E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999854984045679	WITHOUT_CLASSIFICATION	1.4501595432217289E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999797363361359	WITHOUT_CLASSIFICATION	2.0263663864070614E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9992858611951796	WITHOUT_CLASSIFICATION	7.141388048203759E-4	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999797363361359	WITHOUT_CLASSIFICATION	2.0263663864070614E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998732683776228	WITHOUT_CLASSIFICATION	1.267316223773035E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999271806823264	WITHOUT_CLASSIFICATION	7.281931767360579E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999220708493292	WITHOUT_CLASSIFICATION	7.79291506707912E-5	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999966956378222	WITHOUT_CLASSIFICATION	3.3043621777272155E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9997174465578685	WITHOUT_CLASSIFICATION	2.825534421313998E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9997122988189854	WITHOUT_CLASSIFICATION	2.8770118101464784E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999674587351437	WITHOUT_CLASSIFICATION	3.254126485630801E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999694807796513	WITHOUT_CLASSIFICATION	3.051922034856784E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999874695466651	WITHOUT_CLASSIFICATION	1.2530453334881395E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999424586811928	WITHOUT_CLASSIFICATION	5.754131880717347E-5	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999048823330925	WITHOUT_CLASSIFICATION	9.511766690746639E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9998649222430094	WITHOUT_CLASSIFICATION	1.3507775699071322E-4	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999481698149416	WITHOUT_CLASSIFICATION	5.1830185058292045E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999948189330776	WITHOUT_CLASSIFICATION	5.181066922382442E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9998275314699836	WITHOUT_CLASSIFICATION	1.7246853001649736E-4	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999150843410488	WITHOUT_CLASSIFICATION	8.491565895115534E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9997493634973491	WITHOUT_CLASSIFICATION	2.5063650265089014E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9997928738235337	WITHOUT_CLASSIFICATION	2.0712617646623225E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9996287194446439	WITHOUT_CLASSIFICATION	3.712805553561257E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999748168223412	WITHOUT_CLASSIFICATION	2.5183177658773488E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9989380688635926	WITHOUT_CLASSIFICATION	0.0010619311364073712	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9993562363367393	WITHOUT_CLASSIFICATION	6.437636632606676E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999954089291436	WITHOUT_CLASSIFICATION	4.591070856468921E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999813810166122	WITHOUT_CLASSIFICATION	1.861898338780968E-5	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999837317294795	WITHOUT_CLASSIFICATION	1.626827052052165E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999221764831054	WITHOUT_CLASSIFICATION	7.782351689453198E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999241795253884	WITHOUT_CLASSIFICATION	7.582047461162912E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997337025720273	WITHOUT_CLASSIFICATION	2.6629742797268363E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9992306036304185	WITHOUT_CLASSIFICATION	7.693963695814517E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999309516709842	WITHOUT_CLASSIFICATION	6.904832901583237E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999488736261384	WITHOUT_CLASSIFICATION	5.1126373861725816E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9997286544473307	WITHOUT_CLASSIFICATION	2.7134555266930196E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999755389366549	WITHOUT_CLASSIFICATION	2.4461063345178653E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9997441691462026	WITHOUT_CLASSIFICATION	2.558308537974155E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9997883721920052	WITHOUT_CLASSIFICATION	2.1162780799468495E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.99973547432037	WITHOUT_CLASSIFICATION	2.6452567962998E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9996410871555405	WITHOUT_CLASSIFICATION	3.589128444595391E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.999920986380662	WITHOUT_CLASSIFICATION	7.901361933805191E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999195239797461	WITHOUT_CLASSIFICATION	8.047602025391625E-5	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.999976462340367	WITHOUT_CLASSIFICATION	2.353765963305289E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997489854566451	WITHOUT_CLASSIFICATION	2.510145433549333E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997489854566451	WITHOUT_CLASSIFICATION	2.510145433549333E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999698179805594	WITHOUT_CLASSIFICATION	3.0182019440606887E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999259812172182	WITHOUT_CLASSIFICATION	7.401878278178814E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999793776104756	WITHOUT_CLASSIFICATION	2.0622389524319345E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999717555456581	WITHOUT_CLASSIFICATION	2.824445434184588E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9997633507301936	WITHOUT_CLASSIFICATION	2.3664926980647012E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999882036355286	WITHOUT_CLASSIFICATION	1.1796364471241494E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999877622866202	WITHOUT_CLASSIFICATION	1.2237713379715504E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999871495996874	WITHOUT_CLASSIFICATION	1.285040031253222E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999574172576663	WITHOUT_CLASSIFICATION	4.2582742333738994E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999964418421335	WITHOUT_CLASSIFICATION	3.558157866426523E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997472859077	WITHOUT_CLASSIFICATION	2.527140924091286E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999636427135876	WITHOUT_CLASSIFICATION	3.635728641232113E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999871325516583	WITHOUT_CLASSIFICATION	1.2867448341702899E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9984482822564418	WITHOUT_CLASSIFICATION	0.001551717743558153	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993859137405359	WITHOUT_CLASSIFICATION	6.140862594640776E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9995501666573281	WITHOUT_CLASSIFICATION	4.4983334267196384E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999683863138912	WITHOUT_CLASSIFICATION	3.1613686108802304E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9982558354809774	WITHOUT_CLASSIFICATION	0.0017441645190225982	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.999980708351704	WITHOUT_CLASSIFICATION	1.9291648295887306E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998687800887316	WITHOUT_CLASSIFICATION	1.312199112683932E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998916829914948	WITHOUT_CLASSIFICATION	1.0831700850518493E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999364817915111	WITHOUT_CLASSIFICATION	6.351820848888188E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999293730470717	WITHOUT_CLASSIFICATION	7.062695292820211E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998034261294091	WITHOUT_CLASSIFICATION	1.965738705908635E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998931414744037	WITHOUT_CLASSIFICATION	1.068585255962643E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997771345697096	WITHOUT_CLASSIFICATION	2.2286543029037865E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999069417108194	WITHOUT_CLASSIFICATION	9.30582891805773E-5	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999647298120233	WITHOUT_CLASSIFICATION	3.527018797662184E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999361991441876	WITHOUT_CLASSIFICATION	6.380085581241652E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999402955223358	WITHOUT_CLASSIFICATION	5.970447766424545E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999514028236205	WITHOUT_CLASSIFICATION	4.8597176379444235E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9992981207809684	WITHOUT_CLASSIFICATION	7.018792190316478E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9883104870353071	WITHOUT_CLASSIFICATION	0.011689512964692991	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999134622299902	WITHOUT_CLASSIFICATION	8.653777000972496E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996383787503786	WITHOUT_CLASSIFICATION	3.61621249621287E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.999649280938938	WITHOUT_CLASSIFICATION	3.507190610620237E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998945648924263	WITHOUT_CLASSIFICATION	1.0543510757357216E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999985091902262	WITHOUT_CLASSIFICATION	1.4908097737896278E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999972499847828	WITHOUT_CLASSIFICATION	2.7500152173076457E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999357782848192	WITHOUT_CLASSIFICATION	6.42217151808172E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9983839578054438	WITHOUT_CLASSIFICATION	0.001616042194556181	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9996783597449433	WITHOUT_CLASSIFICATION	3.2164025505667044E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999522244020371	WITHOUT_CLASSIFICATION	4.7775597962838766E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9980053326525771	WITHOUT_CLASSIFICATION	0.0019946673474229536	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999179097454559	WITHOUT_CLASSIFICATION	8.209025454409307E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.990546885171406	WITHOUT_CLASSIFICATION	0.00945311482859403	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999698179805594	WITHOUT_CLASSIFICATION	3.0182019440606887E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999259812172182	WITHOUT_CLASSIFICATION	7.401878278178814E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999793776104756	WITHOUT_CLASSIFICATION	2.0622389524319345E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999717555456581	WITHOUT_CLASSIFICATION	2.824445434184588E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999877622866202	WITHOUT_CLASSIFICATION	1.2237713379715504E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999871495996874	WITHOUT_CLASSIFICATION	1.285040031253222E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9983181611383943	WITHOUT_CLASSIFICATION	0.0016818388616057069	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999796539656554	WITHOUT_CLASSIFICATION	2.0346034344658924E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999785183869809	WITHOUT_CLASSIFICATION	2.1481613018997028E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997472859077	WITHOUT_CLASSIFICATION	2.527140924091286E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999636427135876	WITHOUT_CLASSIFICATION	3.635728641232113E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999871325516583	WITHOUT_CLASSIFICATION	1.2867448341702899E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9984482822564418	WITHOUT_CLASSIFICATION	0.001551717743558153	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9995501666573281	WITHOUT_CLASSIFICATION	4.4983334267196384E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999483828353474	WITHOUT_CLASSIFICATION	5.1617164652637964E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999483828353474	WITHOUT_CLASSIFICATION	5.1617164652637964E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999951003163439	WITHOUT_CLASSIFICATION	4.899683656108027E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9997584365201073	WITHOUT_CLASSIFICATION	2.415634798927719E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999845266828513	WITHOUT_CLASSIFICATION	1.547331714867478E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999182962572813	WITHOUT_CLASSIFICATION	8.170374271863506E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.999817878218004	WITHOUT_CLASSIFICATION	1.8212178199601914E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9995635874956597	WITHOUT_CLASSIFICATION	4.3641250434032364E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997219527851037	WITHOUT_CLASSIFICATION	2.7804721489633555E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9998283141419598	WITHOUT_CLASSIFICATION	1.7168585804021476E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997219527851037	WITHOUT_CLASSIFICATION	2.7804721489633555E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9991625909019632	WITHOUT_CLASSIFICATION	8.374090980368154E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9998679642077034	WITHOUT_CLASSIFICATION	1.32035792296551E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9997619310834276	WITHOUT_CLASSIFICATION	2.3806891657225472E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9997619310834276	WITHOUT_CLASSIFICATION	2.3806891657225472E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9996967274934482	WITHOUT_CLASSIFICATION	3.0327250655184614E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9994523045995328	WITHOUT_CLASSIFICATION	5.476954004672095E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.999948931140634	WITHOUT_CLASSIFICATION	5.1068859366022496E-5	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9998746117573575	WITHOUT_CLASSIFICATION	1.2538824264241973E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9997841051017327	WITHOUT_CLASSIFICATION	2.158948982672992E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999356058437741	WITHOUT_CLASSIFICATION	6.439415622603407E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9993962395676029	WITHOUT_CLASSIFICATION	6.037604323970302E-4	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999763504130453	WITHOUT_CLASSIFICATION	2.364958695466263E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998528605606012	WITHOUT_CLASSIFICATION	1.471394393988294E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9997967653209122	WITHOUT_CLASSIFICATION	2.0323467908782617E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9998293794693254	WITHOUT_CLASSIFICATION	1.706205306746503E-4	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998830441481765	WITHOUT_CLASSIFICATION	1.1695585182353718E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999337280258466	WITHOUT_CLASSIFICATION	6.62719741533403E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999337280258466	WITHOUT_CLASSIFICATION	6.62719741533403E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999936546817253	WITHOUT_CLASSIFICATION	6.34531827469609E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9998194371670119	WITHOUT_CLASSIFICATION	1.805628329880092E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9986030356503697	WITHOUT_CLASSIFICATION	0.0013969643496303313	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.999814648090246	WITHOUT_CLASSIFICATION	1.8535190975396497E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9997133280478087	WITHOUT_CLASSIFICATION	2.8667195219132476E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999813809881051	WITHOUT_CLASSIFICATION	1.8619011895023448E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999842496870656	WITHOUT_CLASSIFICATION	1.5750312934501737E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999470544385195	WITHOUT_CLASSIFICATION	5.294556148055921E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999525079056819	WITHOUT_CLASSIFICATION	4.7492094318142684E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999585330534031	WITHOUT_CLASSIFICATION	4.146694659687677E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999803758847688	WITHOUT_CLASSIFICATION	1.962411523113763E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999516598827842	WITHOUT_CLASSIFICATION	4.8340117215710447E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999882293942088	WITHOUT_CLASSIFICATION	1.1770605791257714E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9832586027886447	WITHOUT_CLASSIFICATION	0.0167413972113552	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998706668027241	WITHOUT_CLASSIFICATION	1.2933319727581103E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998247544441513	WITHOUT_CLASSIFICATION	1.752455558486327E-4	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9998894964482221	WITHOUT_CLASSIFICATION	1.1050355177789449E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999136719779669	WITHOUT_CLASSIFICATION	8.632802203311672E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9989514838076181	WITHOUT_CLASSIFICATION	0.001048516192381877	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9997066997898663	WITHOUT_CLASSIFICATION	2.933002101336919E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999108092273283	WITHOUT_CLASSIFICATION	8.91907726716168E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9997678306945015	WITHOUT_CLASSIFICATION	2.3216930549853595E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999547934729665	WITHOUT_CLASSIFICATION	4.520652703356268E-5	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999672320870435	WITHOUT_CLASSIFICATION	3.2767912956564995E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999385919548965	WITHOUT_CLASSIFICATION	6.140804510338135E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999944102948359	WITHOUT_CLASSIFICATION	5.5897051640414865E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999944102948359	WITHOUT_CLASSIFICATION	5.5897051640414865E-6	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9978460047608473	WITHOUT_CLASSIFICATION	0.0021539952391527	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9997427674828948	WITHOUT_CLASSIFICATION	2.572325171051947E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998056855141824	WITHOUT_CLASSIFICATION	1.9431448581756208E-4	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985593567073915	WITHOUT_CLASSIFICATION	0.0014406432926085697	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.99987051250729	WITHOUT_CLASSIFICATION	1.294874927100234E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985575148765794	WITHOUT_CLASSIFICATION	0.001442485123420625	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9998699324673295	WITHOUT_CLASSIFICATION	1.3006753267058176E-4	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9979404555593584	WITHOUT_CLASSIFICATION	0.0020595444406415484	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999539886250419	WITHOUT_CLASSIFICATION	4.601137495814346E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996383466605783	WITHOUT_CLASSIFICATION	3.616533394217333E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9998980565956354	WITHOUT_CLASSIFICATION	1.0194340436464883E-4	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.99978306710095	WITHOUT_CLASSIFICATION	2.1693289904996287E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999923567781226	WITHOUT_CLASSIFICATION	7.643221877444331E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9986360722684792	WITHOUT_CLASSIFICATION	0.0013639277315207726	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999536548132683	WITHOUT_CLASSIFICATION	4.6345186731715374E-5	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999420937882305	WITHOUT_CLASSIFICATION	5.790621176957612E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.999999460586063	WITHOUT_CLASSIFICATION	5.394139370147823E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9619365837868984	WITHOUT_CLASSIFICATION	0.038063416213101574	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9975984587356809	WITHOUT_CLASSIFICATION	0.002401541264319086	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999141207585696	WITHOUT_CLASSIFICATION	8.587924143042328E-5	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9998970798321501	WITHOUT_CLASSIFICATION	1.0292016784979194E-4	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999589754584793	WITHOUT_CLASSIFICATION	4.102454152070868E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997771345697096	WITHOUT_CLASSIFICATION	2.2286543029037865E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997796201293103	WITHOUT_CLASSIFICATION	2.2037987068969E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9996783597449433	WITHOUT_CLASSIFICATION	3.2164025505667044E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999182962572813	WITHOUT_CLASSIFICATION	8.170374271863506E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9975291917098257	WITHOUT_CLASSIFICATION	0.002470808290174308	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9979502784669467	WITHOUT_CLASSIFICATION	0.0020497215330533185	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999364817915111	WITHOUT_CLASSIFICATION	6.351820848888188E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9906604109283141	WITHOUT_CLASSIFICATION	0.009339589071685814	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9995417586510589	WITHOUT_CLASSIFICATION	4.582413489410924E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999377870426431	WITHOUT_CLASSIFICATION	6.221295735692561E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999439449785118	WITHOUT_CLASSIFICATION	5.605502148811641E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9996783597449433	WITHOUT_CLASSIFICATION	3.2164025505667044E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9987432000885326	WITHOUT_CLASSIFICATION	0.0012567999114675376	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.999406872791919	WITHOUT_CLASSIFICATION	5.931272080809285E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999869416581993	WITHOUT_CLASSIFICATION	1.3058341800671694E-5	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999818516894134	WITHOUT_CLASSIFICATION	1.814831058652728E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.997379995134693	WITHOUT_CLASSIFICATION	0.0026200048653069415	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999983480361028	WITHOUT_CLASSIFICATION	1.6519638972717661E-6	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999679093480189	WITHOUT_CLASSIFICATION	3.209065198103812E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999286809191846	WITHOUT_CLASSIFICATION	7.131908081541481E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999987497489122	WITHOUT_CLASSIFICATION	1.250251087751301E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998726653482131	WITHOUT_CLASSIFICATION	1.2733465178687477E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998726653482131	WITHOUT_CLASSIFICATION	1.2733465178687477E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998726653482131	WITHOUT_CLASSIFICATION	1.2733465178687477E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999001853919781	WITHOUT_CLASSIFICATION	9.981460802191257E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998448740991491	WITHOUT_CLASSIFICATION	1.5512590085098858E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9998911574245298	WITHOUT_CLASSIFICATION	1.0884257547024864E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999747219042832	WITHOUT_CLASSIFICATION	2.5278095716780192E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999987552877028	WITHOUT_CLASSIFICATION	1.2447122972692573E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999387261835175	WITHOUT_CLASSIFICATION	6.127381648243126E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9942481613206668	WITHOUT_CLASSIFICATION	0.005751838679333092	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999069065102482	WITHOUT_CLASSIFICATION	9.30934897518179E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9996807929844209	WITHOUT_CLASSIFICATION	3.192070155789997E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999995264387777	WITHOUT_CLASSIFICATION	4.735612223997827E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999508347235445	WITHOUT_CLASSIFICATION	4.916527645549095E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999956497030741	WITHOUT_CLASSIFICATION	4.35029692588875E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999721329470648	WITHOUT_CLASSIFICATION	2.7867052935305827E-5	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999998529154126	WITHOUT_CLASSIFICATION	1.4708458734384731E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999931270427209	WITHOUT_CLASSIFICATION	6.872957279037569E-6	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999327502462377	WITHOUT_CLASSIFICATION	6.724975376227927E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9997954991682719	WITHOUT_CLASSIFICATION	2.0450083172798318E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9983836261467487	WITHOUT_CLASSIFICATION	0.0016163738532512383	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998754553215151	WITHOUT_CLASSIFICATION	1.2454467848482378E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999778540207589	WITHOUT_CLASSIFICATION	2.2145979241025994E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999787227349894	WITHOUT_CLASSIFICATION	2.1277265010602472E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9998869840169718	WITHOUT_CLASSIFICATION	1.1301598302826067E-4	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999173723566709	WITHOUT_CLASSIFICATION	8.262764332919204E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999173723566709	WITHOUT_CLASSIFICATION	8.262764332919204E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.99994011713441	WITHOUT_CLASSIFICATION	5.9882865589988134E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999737346120322	WITHOUT_CLASSIFICATION	2.62653879677447E-5	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999596782019498	WITHOUT_CLASSIFICATION	4.0321798050321155E-5	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999469516293813	WITHOUT_CLASSIFICATION	5.304837061875238E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999986077282604	WITHOUT_CLASSIFICATION	1.3922717395981123E-6	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999981917404444	WITHOUT_CLASSIFICATION	1.8082595555189422E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999749351493806	WITHOUT_CLASSIFICATION	2.5064850619392552E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999926017803227	WITHOUT_CLASSIFICATION	7.398219677246197E-6	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9997690000074939	WITHOUT_CLASSIFICATION	2.3099999250603216E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9991059389360815	WITHOUT_CLASSIFICATION	8.940610639185275E-4	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9995880556603898	WITHOUT_CLASSIFICATION	4.1194433961025704E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998277522521106	WITHOUT_CLASSIFICATION	1.7224774788926738E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9992574604412892	WITHOUT_CLASSIFICATION	7.425395587108639E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999544956411012	WITHOUT_CLASSIFICATION	4.550435889881733E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999544956411012	WITHOUT_CLASSIFICATION	4.550435889881733E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9998944513136818	WITHOUT_CLASSIFICATION	1.0554868631812794E-4	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9946999187355727	WITHOUT_CLASSIFICATION	0.00530008126442731	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999778152594977	WITHOUT_CLASSIFICATION	2.2184740502365792E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999845886568535	WITHOUT_CLASSIFICATION	1.541134314653942E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999845886568535	WITHOUT_CLASSIFICATION	1.541134314653942E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999845886568535	WITHOUT_CLASSIFICATION	1.541134314653942E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9998440713585867	WITHOUT_CLASSIFICATION	1.5592864141332672E-4	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999597108753	WITHOUT_CLASSIFICATION	4.0289124620622064E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9996419594392163	WITHOUT_CLASSIFICATION	3.5804056078371065E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998425977226174	WITHOUT_CLASSIFICATION	1.574022773825751E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999643660740206	WITHOUT_CLASSIFICATION	3.5633925979441706E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9998851595706805	WITHOUT_CLASSIFICATION	1.148404293195511E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999013834925472	WITHOUT_CLASSIFICATION	9.861650745286145E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999248264231316	WITHOUT_CLASSIFICATION	7.517357686839605E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999248264231316	WITHOUT_CLASSIFICATION	7.517357686839605E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999892688724998	WITHOUT_CLASSIFICATION	1.0731127500231677E-5	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9997709060168988	WITHOUT_CLASSIFICATION	2.2909398310120465E-4	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.999719416187826	WITHOUT_CLASSIFICATION	2.805838121740302E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9976690241739614	WITHOUT_CLASSIFICATION	0.00233097582603861	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999967445547472	WITHOUT_CLASSIFICATION	3.2554452527373054E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9996848293451078	WITHOUT_CLASSIFICATION	3.1517065489212667E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997489854566451	WITHOUT_CLASSIFICATION	2.510145433549333E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9997633507301936	WITHOUT_CLASSIFICATION	2.3664926980647012E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999882036355286	WITHOUT_CLASSIFICATION	1.1796364471241494E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999964418421335	WITHOUT_CLASSIFICATION	3.558157866426523E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993859137405359	WITHOUT_CLASSIFICATION	6.140862594640776E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999521558892763	WITHOUT_CLASSIFICATION	4.784411072370162E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9998690669658958	WITHOUT_CLASSIFICATION	1.3093303410410999E-4	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9998827431367261	WITHOUT_CLASSIFICATION	1.1725686327395212E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.999817878218004	WITHOUT_CLASSIFICATION	1.8212178199601914E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999936546817253	WITHOUT_CLASSIFICATION	6.34531827469609E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9995313360443197	WITHOUT_CLASSIFICATION	4.686639556803924E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999587217763934	WITHOUT_CLASSIFICATION	4.127822360649298E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999997783210844	WITHOUT_CLASSIFICATION	2.2167891560128867E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9996769442402181	WITHOUT_CLASSIFICATION	3.230557597819027E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9985689317163589	WITHOUT_CLASSIFICATION	0.0014310682836411925	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999425356444849	WITHOUT_CLASSIFICATION	5.7464355515098925E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999731858925905	WITHOUT_CLASSIFICATION	2.681410740946019E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9992212317881894	WITHOUT_CLASSIFICATION	7.787682118105738E-4	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999997777234962	WITHOUT_CLASSIFICATION	2.222765037069844E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999494836599288	WITHOUT_CLASSIFICATION	5.05163400712739E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999494836599288	WITHOUT_CLASSIFICATION	5.05163400712739E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9944022443128091	WITHOUT_CLASSIFICATION	0.005597755687190858	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9998908105011646	WITHOUT_CLASSIFICATION	1.0918949883548395E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9958867111409311	WITHOUT_CLASSIFICATION	0.004113288859068914	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.99940054023929	WITHOUT_CLASSIFICATION	5.994597607100015E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.99940054023929	WITHOUT_CLASSIFICATION	5.994597607100015E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999977962452329	WITHOUT_CLASSIFICATION	2.203754767078176E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.999766600710094	WITHOUT_CLASSIFICATION	2.333992899060414E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999913815966457	WITHOUT_CLASSIFICATION	8.61840335429971E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999941072716948	WITHOUT_CLASSIFICATION	5.892728305211911E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9946364717545473	WITHOUT_CLASSIFICATION	0.0053635282454526844	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999930429459631	WITHOUT_CLASSIFICATION	6.957054036816148E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999792687162132	WITHOUT_CLASSIFICATION	2.073128378679094E-5	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999283179196533	WITHOUT_CLASSIFICATION	7.168208034671686E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9987307098859466	WITHOUT_CLASSIFICATION	0.0012692901140533702	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999449179515	WITHOUT_CLASSIFICATION	5.508204860790487E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999917501807619	WITHOUT_CLASSIFICATION	8.249819238140232E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999517357263749	WITHOUT_CLASSIFICATION	4.8264273625186634E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999998922377803	WITHOUT_CLASSIFICATION	1.0776221973132266E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.999679579230429	WITHOUT_CLASSIFICATION	3.2042076957098287E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999825226160443	WITHOUT_CLASSIFICATION	1.7477383955761796E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999696361607323	WITHOUT_CLASSIFICATION	3.036383926778575E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998458592180033	WITHOUT_CLASSIFICATION	1.541407819966852E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999906952207467	WITHOUT_CLASSIFICATION	9.30477925333365E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9995934769622687	WITHOUT_CLASSIFICATION	4.0652303773125713E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999937443232392	WITHOUT_CLASSIFICATION	6.255676760877229E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999127414121094	WITHOUT_CLASSIFICATION	8.725858789056465E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9988923762322282	WITHOUT_CLASSIFICATION	0.0011076237677718418	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998129811630143	WITHOUT_CLASSIFICATION	1.8701883698567934E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9997904235205128	WITHOUT_CLASSIFICATION	2.0957647948710538E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9997904235205128	WITHOUT_CLASSIFICATION	2.0957647948710538E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9997904235205128	WITHOUT_CLASSIFICATION	2.0957647948710538E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9997904235205128	WITHOUT_CLASSIFICATION	2.0957647948710538E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999947758861532	WITHOUT_CLASSIFICATION	5.224113846807909E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999769788080688	WITHOUT_CLASSIFICATION	2.3021191931193258E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999609232212937	WITHOUT_CLASSIFICATION	3.9076778706227975E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999609232212937	WITHOUT_CLASSIFICATION	3.9076778706227975E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999609232212937	WITHOUT_CLASSIFICATION	3.9076778706227975E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9998627745239964	WITHOUT_CLASSIFICATION	1.3722547600355766E-4	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999188015995512	WITHOUT_CLASSIFICATION	8.119840044884499E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9998637089267008	WITHOUT_CLASSIFICATION	1.362910732992071E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9998637089267008	WITHOUT_CLASSIFICATION	1.362910732992071E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9989514838076181	WITHOUT_CLASSIFICATION	0.001048516192381877	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9989514838076181	WITHOUT_CLASSIFICATION	0.001048516192381877	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997274682939667	WITHOUT_CLASSIFICATION	2.725317060332595E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997274682939667	WITHOUT_CLASSIFICATION	2.725317060332595E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999919360501529	WITHOUT_CLASSIFICATION	8.063949847042036E-6	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9996953139815148	WITHOUT_CLASSIFICATION	3.046860184851965E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997289693929622	WITHOUT_CLASSIFICATION	2.7103060703786384E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999357641384788	WITHOUT_CLASSIFICATION	6.423586152116043E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9997004883459681	WITHOUT_CLASSIFICATION	2.9951165403184694E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9996727107678821	WITHOUT_CLASSIFICATION	3.272892321179351E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997061015730975	WITHOUT_CLASSIFICATION	2.938984269024852E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9998816654355531	WITHOUT_CLASSIFICATION	1.1833456444694988E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997288362960176	WITHOUT_CLASSIFICATION	2.7116370398235515E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999362289587287	WITHOUT_CLASSIFICATION	6.377104127133913E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9998600851463426	WITHOUT_CLASSIFICATION	1.3991485365735093E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999447030442931	WITHOUT_CLASSIFICATION	5.529695570695313E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999363429431704	WITHOUT_CLASSIFICATION	6.365705682962768E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9998545789420746	WITHOUT_CLASSIFICATION	1.454210579252902E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999347010837583	WITHOUT_CLASSIFICATION	6.529891624166178E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999351588342839	WITHOUT_CLASSIFICATION	6.48411657161621E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9998457378797524	WITHOUT_CLASSIFICATION	1.5426212024766573E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999183021658317	WITHOUT_CLASSIFICATION	8.169783416834907E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9994992167626949	WITHOUT_CLASSIFICATION	5.007832373051011E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9997926232525038	WITHOUT_CLASSIFICATION	2.0737674749620323E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9989317871588693	WITHOUT_CLASSIFICATION	0.0010682128411307426	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999323152379339	WITHOUT_CLASSIFICATION	6.768476206607193E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997366402792993	WITHOUT_CLASSIFICATION	2.633597207006335E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997366402792993	WITHOUT_CLASSIFICATION	2.633597207006335E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997366402792993	WITHOUT_CLASSIFICATION	2.633597207006335E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997366402792993	WITHOUT_CLASSIFICATION	2.633597207006335E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999800007538029	WITHOUT_CLASSIFICATION	1.9999246197096448E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999914347725145	WITHOUT_CLASSIFICATION	8.565227485400317E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999995032577706	WITHOUT_CLASSIFICATION	4.967422293271279E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999421479227394	WITHOUT_CLASSIFICATION	5.785207726054455E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999421479227394	WITHOUT_CLASSIFICATION	5.785207726054455E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9998328250004618	WITHOUT_CLASSIFICATION	1.6717499953824294E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9992068149331135	WITHOUT_CLASSIFICATION	7.931850668865284E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9992068149331135	WITHOUT_CLASSIFICATION	7.931850668865284E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999792995267078	WITHOUT_CLASSIFICATION	2.070047329224001E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999783997405014	WITHOUT_CLASSIFICATION	2.1600259498639265E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999751101481664	WITHOUT_CLASSIFICATION	2.4889851833636525E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999945518376958	WITHOUT_CLASSIFICATION	5.448162304177061E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998147725220996	WITHOUT_CLASSIFICATION	1.8522747790033827E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9940179725060754	WITHOUT_CLASSIFICATION	0.005982027493924674	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9940179725060754	WITHOUT_CLASSIFICATION	0.005982027493924674	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999657467396672	WITHOUT_CLASSIFICATION	3.425326033282888E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999637755204568	WITHOUT_CLASSIFICATION	3.6224479543310515E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9998553254690947	WITHOUT_CLASSIFICATION	1.4467453090532715E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999976993029072	WITHOUT_CLASSIFICATION	2.3006970928138342E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998390314494264	WITHOUT_CLASSIFICATION	1.6096855057358116E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999754520544339	WITHOUT_CLASSIFICATION	2.454794556615448E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999754520544339	WITHOUT_CLASSIFICATION	2.454794556615448E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999754520544339	WITHOUT_CLASSIFICATION	2.454794556615448E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999820508288992	WITHOUT_CLASSIFICATION	1.7949171100702712E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999820508288992	WITHOUT_CLASSIFICATION	1.7949171100702712E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999128950931816	WITHOUT_CLASSIFICATION	8.710490681835664E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999917874612841	WITHOUT_CLASSIFICATION	8.212538715855354E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999917874612841	WITHOUT_CLASSIFICATION	8.212538715855354E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999135905630577	WITHOUT_CLASSIFICATION	8.64094369422732E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999639351397339	WITHOUT_CLASSIFICATION	3.606486026615831E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985593567073915	WITHOUT_CLASSIFICATION	0.0014406432926085697	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998669469543674	WITHOUT_CLASSIFICATION	1.3305304563259476E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9916246921835746	WITHOUT_CLASSIFICATION	0.008375307816425315	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9916246921835746	WITHOUT_CLASSIFICATION	0.008375307816425315	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982653953773841	WITHOUT_CLASSIFICATION	0.0017346046226158977	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999103000086189	WITHOUT_CLASSIFICATION	8.969999138110756E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999544667174304	WITHOUT_CLASSIFICATION	4.553328256967094E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994407453265822	WITHOUT_CLASSIFICATION	5.592546734176379E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997214604473583	WITHOUT_CLASSIFICATION	2.7853955264159824E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999635456723666	WITHOUT_CLASSIFICATION	3.64543276335118E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982971129091173	WITHOUT_CLASSIFICATION	0.001702887090882697	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979312307039179	WITHOUT_CLASSIFICATION	0.0020687692960820125	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998553805001446	WITHOUT_CLASSIFICATION	1.4461949985539372E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999533056915099	WITHOUT_CLASSIFICATION	4.669430849003006E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998687215018613	WITHOUT_CLASSIFICATION	1.3127849813864695E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9998142035022244	WITHOUT_CLASSIFICATION	1.8579649777554258E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999821937343634	WITHOUT_CLASSIFICATION	1.7806265636653426E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999934172491737	WITHOUT_CLASSIFICATION	6.582750826373186E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999681137179057	WITHOUT_CLASSIFICATION	3.188628209418115E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9982723937957533	WITHOUT_CLASSIFICATION	0.0017276062042466585	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998051247371338	WITHOUT_CLASSIFICATION	1.94875262866124E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999410343011165	WITHOUT_CLASSIFICATION	5.896569888342873E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9995822295836153	WITHOUT_CLASSIFICATION	4.177704163846449E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999525504786814	WITHOUT_CLASSIFICATION	4.7449521318672265E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9993324010625892	WITHOUT_CLASSIFICATION	6.675989374106488E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999834505592772	WITHOUT_CLASSIFICATION	1.65494407228117E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9996213199416321	WITHOUT_CLASSIFICATION	3.786800583678991E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9996928850519193	WITHOUT_CLASSIFICATION	3.07114948080677E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998879306268533	WITHOUT_CLASSIFICATION	1.1206937314662437E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.998908551985042	WITHOUT_CLASSIFICATION	0.0010914480149580431	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9990952778221512	WITHOUT_CLASSIFICATION	9.047221778486255E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9990952778221512	WITHOUT_CLASSIFICATION	9.047221778486255E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999465943458576	WITHOUT_CLASSIFICATION	5.3405654142307854E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998666631497899	WITHOUT_CLASSIFICATION	1.333368502100507E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999536472785167	WITHOUT_CLASSIFICATION	4.635272148324971E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996888413143896	WITHOUT_CLASSIFICATION	3.1115868561032466E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999733318844092	WITHOUT_CLASSIFICATION	2.6668115590855528E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9998344187408106	WITHOUT_CLASSIFICATION	1.655812591893919E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9998865150552994	WITHOUT_CLASSIFICATION	1.1348494470055228E-4	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999787375875212	WITHOUT_CLASSIFICATION	2.1262412478806357E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999597031594405	WITHOUT_CLASSIFICATION	4.02968405595738E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994834959440906	WITHOUT_CLASSIFICATION	5.165040559094696E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994834959440906	WITHOUT_CLASSIFICATION	5.165040559094696E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998839479947652	WITHOUT_CLASSIFICATION	1.1605200523477273E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999743037595582	WITHOUT_CLASSIFICATION	2.5696240441799252E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9995242287366888	WITHOUT_CLASSIFICATION	4.757712633111892E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9998970798321501	WITHOUT_CLASSIFICATION	1.0292016784979194E-4	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999919424657847	WITHOUT_CLASSIFICATION	8.057534215294542E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9997280828355196	WITHOUT_CLASSIFICATION	2.719171644803369E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998051247371338	WITHOUT_CLASSIFICATION	1.94875262866124E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999343442088099	WITHOUT_CLASSIFICATION	6.565579119015188E-5	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999789900783523	WITHOUT_CLASSIFICATION	2.1009921647720444E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998478131539473	WITHOUT_CLASSIFICATION	1.5218684605258217E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999429762391238	WITHOUT_CLASSIFICATION	5.702376087619873E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999852652550895	WITHOUT_CLASSIFICATION	1.4734744910473911E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999826747522377	WITHOUT_CLASSIFICATION	1.7325247762402233E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999927758415407	WITHOUT_CLASSIFICATION	7.2241584593583165E-6	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9998955183716789	WITHOUT_CLASSIFICATION	1.0448162832114006E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.997980029320074	WITHOUT_CLASSIFICATION	0.0020199706799259895	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999217098135164	WITHOUT_CLASSIFICATION	7.829018648366721E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999432758673579	WITHOUT_CLASSIFICATION	5.672413264214837E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999217098135164	WITHOUT_CLASSIFICATION	7.829018648366721E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999432758673579	WITHOUT_CLASSIFICATION	5.672413264214837E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9990866868798126	WITHOUT_CLASSIFICATION	9.133131201873524E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9970860437719025	WITHOUT_CLASSIFICATION	0.002913956228097606	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.999826212966868	WITHOUT_CLASSIFICATION	1.73787033132036E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9808901324400998	WITHOUT_CLASSIFICATION	0.019109867559900108	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997221279088646	WITHOUT_CLASSIFICATION	2.778720911353725E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999039110894458	WITHOUT_CLASSIFICATION	9.608891055417224E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999643660740206	WITHOUT_CLASSIFICATION	3.5633925979441706E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999440996333577	WITHOUT_CLASSIFICATION	5.590036664222842E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.999825815813952	WITHOUT_CLASSIFICATION	1.741841860479869E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999320743667949	WITHOUT_CLASSIFICATION	6.792563320513116E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999709017958288	WITHOUT_CLASSIFICATION	2.9098204171280795E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999185072700688	WITHOUT_CLASSIFICATION	8.149272993115801E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9994981076729293	WITHOUT_CLASSIFICATION	5.018923270707052E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9994935560482218	WITHOUT_CLASSIFICATION	5.064439517783266E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999039110894458	WITHOUT_CLASSIFICATION	9.608891055417224E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999484143009633	WITHOUT_CLASSIFICATION	5.1585699036723256E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999565662342267	WITHOUT_CLASSIFICATION	4.343376577335875E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999985808985573	WITHOUT_CLASSIFICATION	1.419101442714059E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.999935964986869	WITHOUT_CLASSIFICATION	6.403501313091342E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999403255755871	WITHOUT_CLASSIFICATION	5.967442441283053E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994755061794092	WITHOUT_CLASSIFICATION	5.244938205908505E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.992724190166985	WITHOUT_CLASSIFICATION	0.0072758098330150045	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994755061794092	WITHOUT_CLASSIFICATION	5.244938205908505E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994755061794092	WITHOUT_CLASSIFICATION	5.244938205908505E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994780135582751	WITHOUT_CLASSIFICATION	5.219864417247596E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995705077425675	WITHOUT_CLASSIFICATION	4.294922574326008E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9997997939128733	WITHOUT_CLASSIFICATION	2.0020608712663647E-4	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999909622033478	WITHOUT_CLASSIFICATION	9.0377966520902E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994755061794092	WITHOUT_CLASSIFICATION	5.244938205908505E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999699571301786	WITHOUT_CLASSIFICATION	3.0042869821469444E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.999951817298837	WITHOUT_CLASSIFICATION	4.8182701163130283E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999829320381826	WITHOUT_CLASSIFICATION	1.7067961817538833E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996734743458406	WITHOUT_CLASSIFICATION	3.265256541593115E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999242421537429	WITHOUT_CLASSIFICATION	7.575784625704983E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999556014371067	WITHOUT_CLASSIFICATION	4.439856289316678E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9998237047098099	WITHOUT_CLASSIFICATION	1.762952901900519E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999825710879958	WITHOUT_CLASSIFICATION	1.742891200421112E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9998234639167799	WITHOUT_CLASSIFICATION	1.7653608322007377E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.999951817298837	WITHOUT_CLASSIFICATION	4.8182701163130283E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999829320381826	WITHOUT_CLASSIFICATION	1.7067961817538833E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9996734743458406	WITHOUT_CLASSIFICATION	3.265256541593115E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9997974809004858	WITHOUT_CLASSIFICATION	2.0251909951428298E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9996005844799458	WITHOUT_CLASSIFICATION	3.99415520054198E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9995488274741308	WITHOUT_CLASSIFICATION	4.5117252586923424E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9998498501860085	WITHOUT_CLASSIFICATION	1.5014981399148397E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999399741769428	WITHOUT_CLASSIFICATION	6.002582305725956E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9992465376371152	WITHOUT_CLASSIFICATION	7.534623628846607E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9997669720311484	WITHOUT_CLASSIFICATION	2.3302796885163652E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.999963926407593	WITHOUT_CLASSIFICATION	3.6073592406917045E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999233925569365	WITHOUT_CLASSIFICATION	7.660744306349263E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9990052775201252	WITHOUT_CLASSIFICATION	9.94722479874739E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9998651002941134	WITHOUT_CLASSIFICATION	1.348997058865259E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999660288380012	WITHOUT_CLASSIFICATION	3.397116199865434E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999478765598468	WITHOUT_CLASSIFICATION	5.2123440153184735E-5	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9957026379636367	WITHOUT_CLASSIFICATION	0.004297362036363345	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999889837550562	WITHOUT_CLASSIFICATION	1.101624494375416E-5	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.995456976357875	WITHOUT_CLASSIFICATION	0.004543023642124967	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.999958963609012	WITHOUT_CLASSIFICATION	4.103639098794198E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999424356341359	WITHOUT_CLASSIFICATION	5.756436586418611E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999180791472265	WITHOUT_CLASSIFICATION	8.192085277348448E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9901099978724142	WITHOUT_CLASSIFICATION	0.009890002127585834	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9856653473521576	WITHOUT_CLASSIFICATION	0.014334652647842467	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9941961245897504	WITHOUT_CLASSIFICATION	0.005803875410249583	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9998652153722521	WITHOUT_CLASSIFICATION	1.3478462774787475E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999541589409641	WITHOUT_CLASSIFICATION	4.584105903598081E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9967781650140336	WITHOUT_CLASSIFICATION	0.0032218349859664173	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999589893054435	WITHOUT_CLASSIFICATION	4.101069455647618E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999492357889178	WITHOUT_CLASSIFICATION	5.076421108224221E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9993821833828361	WITHOUT_CLASSIFICATION	6.178166171637638E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9890478026618427	WITHOUT_CLASSIFICATION	0.01095219733815729	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9973708223362874	WITHOUT_CLASSIFICATION	0.0026291776637126446	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9986575306490293	WITHOUT_CLASSIFICATION	0.0013424693509707056	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9992984469643088	WITHOUT_CLASSIFICATION	7.015530356911502E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9996875684413914	WITHOUT_CLASSIFICATION	3.1243155860865836E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9996500106924714	WITHOUT_CLASSIFICATION	3.499893075286235E-4	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9974462434721318	WITHOUT_CLASSIFICATION	0.00255375652786825	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999164158510186	WITHOUT_CLASSIFICATION	8.358414898134067E-5	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9960340581026069	WITHOUT_CLASSIFICATION	0.003965941897393101	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.915011911894461	WITHOUT_CLASSIFICATION	0.08498808810553905	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9996943422059541	WITHOUT_CLASSIFICATION	3.0565779404585666E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999834505592772	WITHOUT_CLASSIFICATION	1.65494407228117E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9990647933603736	WITHOUT_CLASSIFICATION	9.352066396264459E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999251110809109	WITHOUT_CLASSIFICATION	7.488891908910096E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9998750537580915	WITHOUT_CLASSIFICATION	1.2494624190852608E-4	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9998728841891821	WITHOUT_CLASSIFICATION	1.271158108178917E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9918748805037032	WITHOUT_CLASSIFICATION	0.00812511949629675	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998267285564172	WITHOUT_CLASSIFICATION	1.7327144358287005E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9918748805037032	WITHOUT_CLASSIFICATION	0.00812511949629675	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999576402487036	WITHOUT_CLASSIFICATION	4.2359751296462345E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9993555492312425	WITHOUT_CLASSIFICATION	6.444507687574427E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999339300067138	WITHOUT_CLASSIFICATION	6.606999328613952E-5	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999910999916907	WITHOUT_CLASSIFICATION	8.90000830936585E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999036424264287	WITHOUT_CLASSIFICATION	9.635757357128697E-5	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999725870925544	WITHOUT_CLASSIFICATION	2.7412907445546343E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999715803541724	WITHOUT_CLASSIFICATION	2.8419645827578343E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999605305346118	WITHOUT_CLASSIFICATION	3.9469465388304457E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999862587179704	WITHOUT_CLASSIFICATION	1.3741282029693713E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999811663967981	WITHOUT_CLASSIFICATION	1.8833603201831756E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999349587791136	WITHOUT_CLASSIFICATION	6.504122088635744E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9990500430092704	WITHOUT_CLASSIFICATION	9.499569907294919E-4	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999775904925199	WITHOUT_CLASSIFICATION	2.240950748003014E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999955398770843	WITHOUT_CLASSIFICATION	4.460122915714173E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999736765916719	WITHOUT_CLASSIFICATION	2.632340832806507E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999868436268089	WITHOUT_CLASSIFICATION	1.3156373191066954E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9996364387181755	WITHOUT_CLASSIFICATION	3.635612818245057E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.999847334827659	WITHOUT_CLASSIFICATION	1.5266517234106038E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.999987559234059	WITHOUT_CLASSIFICATION	1.2440765940897102E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9975491281972323	WITHOUT_CLASSIFICATION	0.002450871802767671	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999660232912432	WITHOUT_CLASSIFICATION	3.397670875681982E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9998990186829291	WITHOUT_CLASSIFICATION	1.0098131707087124E-4	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999869789961783	WITHOUT_CLASSIFICATION	1.3021003821708334E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999885402590911	WITHOUT_CLASSIFICATION	1.1459740908880771E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9997703513380883	WITHOUT_CLASSIFICATION	2.2964866191157462E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999238796161929	WITHOUT_CLASSIFICATION	7.612038380707443E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999955163292812	WITHOUT_CLASSIFICATION	4.483670718805489E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9983674367461325	WITHOUT_CLASSIFICATION	0.0016325632538675247	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9998220510521337	WITHOUT_CLASSIFICATION	1.779489478661985E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9946640243228847	WITHOUT_CLASSIFICATION	0.005335975677115376	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999414227228807	WITHOUT_CLASSIFICATION	5.857727711939923E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999969906838829	WITHOUT_CLASSIFICATION	3.009316117194288E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999252620466176	WITHOUT_CLASSIFICATION	7.473795338242761E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.999958492650485	WITHOUT_CLASSIFICATION	4.1507349514970074E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999486292314602	WITHOUT_CLASSIFICATION	5.13707685398258E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9998946733216143	WITHOUT_CLASSIFICATION	1.0532667838568297E-4	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999256266356593	WITHOUT_CLASSIFICATION	7.437336434071454E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9998750537580915	WITHOUT_CLASSIFICATION	1.2494624190852608E-4	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999214245863067	WITHOUT_CLASSIFICATION	7.85754136932739E-5	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999586432873198	WITHOUT_CLASSIFICATION	4.1356712680275175E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999641458017747	WITHOUT_CLASSIFICATION	3.585419822536193E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9994430250432778	WITHOUT_CLASSIFICATION	5.569749567222336E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998267285564172	WITHOUT_CLASSIFICATION	1.7327144358287005E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9997566460872067	WITHOUT_CLASSIFICATION	2.433539127933073E-4	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999544708223483	WITHOUT_CLASSIFICATION	4.552917765171828E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999666576232629	WITHOUT_CLASSIFICATION	3.3342376737021096E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999521595226597	WITHOUT_CLASSIFICATION	4.784047734025915E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999366505412567	WITHOUT_CLASSIFICATION	6.33494587432986E-5	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9996773984764108	WITHOUT_CLASSIFICATION	3.226015235893057E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9998545144655139	WITHOUT_CLASSIFICATION	1.45485534486158E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999584651002765	WITHOUT_CLASSIFICATION	4.153489972343789E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.999960444250959	WITHOUT_CLASSIFICATION	3.955574904096581E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9965456071618799	WITHOUT_CLASSIFICATION	0.0034543928381201698	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9996213199416321	WITHOUT_CLASSIFICATION	3.786800583678991E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999606540779815	WITHOUT_CLASSIFICATION	3.934592201850912E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999434903851352	WITHOUT_CLASSIFICATION	5.6509614864899986E-5	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9997665066245996	WITHOUT_CLASSIFICATION	2.3349337540036196E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9998488425362798	WITHOUT_CLASSIFICATION	1.5115746372017282E-4	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999126957402766	WITHOUT_CLASSIFICATION	8.730425972341766E-5	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9996722355693762	WITHOUT_CLASSIFICATION	3.2776443062367363E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999561404319816	WITHOUT_CLASSIFICATION	4.385956801842233E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999642413802897	WITHOUT_CLASSIFICATION	3.575861971028006E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999262894836681	WITHOUT_CLASSIFICATION	7.371051633184722E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999822071266011	WITHOUT_CLASSIFICATION	1.7792873398828255E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999642413802897	WITHOUT_CLASSIFICATION	3.575861971028006E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999682662199656	WITHOUT_CLASSIFICATION	3.173378003430898E-5	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999826121159141	WITHOUT_CLASSIFICATION	1.7387884085868798E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9998077213412427	WITHOUT_CLASSIFICATION	1.9227865875725682E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999480169660788	WITHOUT_CLASSIFICATION	5.1983033921265706E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.999987117838394	WITHOUT_CLASSIFICATION	1.2882161605934064E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999826830903364	WITHOUT_CLASSIFICATION	1.7316909663544037E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999770655774302	WITHOUT_CLASSIFICATION	2.293442256976884E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999761416680244	WITHOUT_CLASSIFICATION	2.3858331975553886E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999869941006617	WITHOUT_CLASSIFICATION	1.300589933824725E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999856146079116	WITHOUT_CLASSIFICATION	1.43853920884118E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999660509385783	WITHOUT_CLASSIFICATION	3.394906142172985E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999404115161694	WITHOUT_CLASSIFICATION	5.95884838305244E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999934693154233	WITHOUT_CLASSIFICATION	6.530684576662921E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999746214833721	WITHOUT_CLASSIFICATION	2.5378516627855323E-5	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9998865827281025	WITHOUT_CLASSIFICATION	1.1341727189755605E-4	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9969993708078975	WITHOUT_CLASSIFICATION	0.0030006291921024753	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999316081908332	WITHOUT_CLASSIFICATION	6.839180916688179E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9998401506385353	WITHOUT_CLASSIFICATION	1.5984936146480177E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999767229890411	WITHOUT_CLASSIFICATION	2.3277010958955122E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999763394012026	WITHOUT_CLASSIFICATION	2.366059879742749E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999870552805846	WITHOUT_CLASSIFICATION	1.2944719415356736E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999309284120556	WITHOUT_CLASSIFICATION	6.907158794446018E-5	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998355766290085	WITHOUT_CLASSIFICATION	1.6442337099158472E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998355766290085	WITHOUT_CLASSIFICATION	1.6442337099158472E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998174066327387	WITHOUT_CLASSIFICATION	1.8259336726130106E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999765335335459	WITHOUT_CLASSIFICATION	2.346646645404434E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999648435991457	WITHOUT_CLASSIFICATION	3.515640085424053E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9985447727145357	WITHOUT_CLASSIFICATION	0.0014552272854643387	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.999496030630147	WITHOUT_CLASSIFICATION	5.039693698529139E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.998979549686847	WITHOUT_CLASSIFICATION	0.0010204503131530029	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999482967013772	WITHOUT_CLASSIFICATION	5.1703298622813336E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999794399986373	WITHOUT_CLASSIFICATION	2.0560001362792023E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999164745754948	WITHOUT_CLASSIFICATION	8.352542450524439E-5	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.997308866241068	WITHOUT_CLASSIFICATION	0.0026911337589320882	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999599917967216	WITHOUT_CLASSIFICATION	4.0008203278482806E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999318505712113	WITHOUT_CLASSIFICATION	6.814942878874357E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9998511098047541	WITHOUT_CLASSIFICATION	1.4889019524594893E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.999912193249913	WITHOUT_CLASSIFICATION	8.780675008704527E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9998841802781083	WITHOUT_CLASSIFICATION	1.1581972189163266E-4	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999567715759511	WITHOUT_CLASSIFICATION	4.3228424048817734E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999986406417103	WITHOUT_CLASSIFICATION	1.3593582897250687E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9997697472013709	WITHOUT_CLASSIFICATION	2.302527986291573E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9997697472013709	WITHOUT_CLASSIFICATION	2.302527986291573E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999640336635529	WITHOUT_CLASSIFICATION	3.596633644705289E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999640336635529	WITHOUT_CLASSIFICATION	3.596633644705289E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9997416351942595	WITHOUT_CLASSIFICATION	2.583648057404912E-4	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998961600560472	WITHOUT_CLASSIFICATION	1.0383994395276347E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999782433390695	WITHOUT_CLASSIFICATION	2.175666093050246E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.999956088179099	WITHOUT_CLASSIFICATION	4.391182090110383E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999388808803863	WITHOUT_CLASSIFICATION	6.111911961368272E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9998911574245298	WITHOUT_CLASSIFICATION	1.0884257547024864E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999333058123341	WITHOUT_CLASSIFICATION	6.669418766602598E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.999943155564658	WITHOUT_CLASSIFICATION	5.68444353419161E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999724348446991	WITHOUT_CLASSIFICATION	2.7565155300862476E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999724348446991	WITHOUT_CLASSIFICATION	2.7565155300862476E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999724348446991	WITHOUT_CLASSIFICATION	2.7565155300862476E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999194327532953	WITHOUT_CLASSIFICATION	8.056724670477276E-5	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999549637003533	WITHOUT_CLASSIFICATION	4.503629964667986E-5	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.999813818881621	WITHOUT_CLASSIFICATION	1.8618111837903024E-4	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999409034521293	WITHOUT_CLASSIFICATION	5.909654787069092E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999410314967538	WITHOUT_CLASSIFICATION	5.896850324608025E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9998728194954785	WITHOUT_CLASSIFICATION	1.2718050452158728E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9998762798004704	WITHOUT_CLASSIFICATION	1.2372019952958598E-4	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9996597679618094	WITHOUT_CLASSIFICATION	3.402320381905184E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999649996383195	WITHOUT_CLASSIFICATION	3.5000361680436364E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998118022007748	WITHOUT_CLASSIFICATION	1.8819779922517484E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9993498443518197	WITHOUT_CLASSIFICATION	6.501556481802072E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9996466086589417	WITHOUT_CLASSIFICATION	3.5339134105827005E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999508347235445	WITHOUT_CLASSIFICATION	4.916527645549095E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9998443557480065	WITHOUT_CLASSIFICATION	1.5564425199355176E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999557943830717	WITHOUT_CLASSIFICATION	4.4205616928419586E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999538554845506	WITHOUT_CLASSIFICATION	4.614451544929357E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999973083830025	WITHOUT_CLASSIFICATION	2.691616997456249E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998208958091616	WITHOUT_CLASSIFICATION	1.7910419083843132E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999292652509594	WITHOUT_CLASSIFICATION	7.073474904059614E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999838798040059	WITHOUT_CLASSIFICATION	1.6120195994026674E-5	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999823847083003	WITHOUT_CLASSIFICATION	1.7615291699714242E-5	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9997954991682719	WITHOUT_CLASSIFICATION	2.0450083172798318E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9997954991682719	WITHOUT_CLASSIFICATION	2.0450083172798318E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9997954991682719	WITHOUT_CLASSIFICATION	2.0450083172798318E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9997954991682719	WITHOUT_CLASSIFICATION	2.0450083172798318E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999205762892494	WITHOUT_CLASSIFICATION	7.942371075070202E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998754553215151	WITHOUT_CLASSIFICATION	1.2454467848482378E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999525102779604	WITHOUT_CLASSIFICATION	4.748972203957679E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997732662364154	WITHOUT_CLASSIFICATION	2.26733763584689E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998754553215151	WITHOUT_CLASSIFICATION	1.2454467848482378E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999631500920329	WITHOUT_CLASSIFICATION	3.684990796708883E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9995514368455672	WITHOUT_CLASSIFICATION	4.4856315443282603E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999550476402332	WITHOUT_CLASSIFICATION	4.4952359766798554E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9996076584813137	WITHOUT_CLASSIFICATION	3.9234151868633996E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9983266164824653	WITHOUT_CLASSIFICATION	0.0016733835175346554	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999179100692942	WITHOUT_CLASSIFICATION	8.20899307057998E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.999607482281105	WITHOUT_CLASSIFICATION	3.925177188950982E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999797724738289	WITHOUT_CLASSIFICATION	2.0227526171096278E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999797724738289	WITHOUT_CLASSIFICATION	2.0227526171096278E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999173723566709	WITHOUT_CLASSIFICATION	8.262764332919204E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9998828828533308	WITHOUT_CLASSIFICATION	1.1711714666914441E-4	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999173723566709	WITHOUT_CLASSIFICATION	8.262764332919204E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997957852478075	WITHOUT_CLASSIFICATION	2.0421475219241586E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999925791914879	WITHOUT_CLASSIFICATION	7.420808512137912E-6	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9997543178065008	WITHOUT_CLASSIFICATION	2.456821934991807E-4	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999683313616526	WITHOUT_CLASSIFICATION	3.1668638347355534E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999588746652446	WITHOUT_CLASSIFICATION	4.112533475547794E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999865215918363	WITHOUT_CLASSIFICATION	1.3478408163762353E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999922874090355	WITHOUT_CLASSIFICATION	7.712590964427472E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999506538243144	WITHOUT_CLASSIFICATION	4.934617568567115E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9992040559453053	WITHOUT_CLASSIFICATION	7.959440546946963E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9997344220240516	WITHOUT_CLASSIFICATION	2.655779759484081E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.999988948545494	WITHOUT_CLASSIFICATION	1.1051454505875178E-5	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999966181132431	WITHOUT_CLASSIFICATION	3.381886756878835E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9996629373866336	WITHOUT_CLASSIFICATION	3.3706261336641875E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998255165140304	WITHOUT_CLASSIFICATION	1.7448348596956625E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997957852478075	WITHOUT_CLASSIFICATION	2.0421475219241586E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997957852478075	WITHOUT_CLASSIFICATION	2.0421475219241586E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999502637952107	WITHOUT_CLASSIFICATION	4.9736204789319684E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9992281773889315	WITHOUT_CLASSIFICATION	7.718226110683698E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999926017803227	WITHOUT_CLASSIFICATION	7.398219677246197E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997933090311342	WITHOUT_CLASSIFICATION	2.0669096886594766E-4	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997933090311342	WITHOUT_CLASSIFICATION	2.0669096886594766E-4	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999870681137047	WITHOUT_CLASSIFICATION	1.2931886295378621E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999946588792069	WITHOUT_CLASSIFICATION	5.341120793005537E-6	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9998264413407283	WITHOUT_CLASSIFICATION	1.735586592716843E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9998143157700335	WITHOUT_CLASSIFICATION	1.8568422996654286E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9968003424009548	WITHOUT_CLASSIFICATION	0.0031996575990451454	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9997157031164131	WITHOUT_CLASSIFICATION	2.842968835869514E-4	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9998833383269821	WITHOUT_CLASSIFICATION	1.1666167301802308E-4	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999047168024445	WITHOUT_CLASSIFICATION	9.528319755538929E-5	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9989783379049042	WITHOUT_CLASSIFICATION	0.0010216620950958836	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.99958687834744	WITHOUT_CLASSIFICATION	4.131216525601295E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999391344401753	WITHOUT_CLASSIFICATION	6.0865559824616474E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999826649829308	WITHOUT_CLASSIFICATION	1.7335017069204627E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9968003424009548	WITHOUT_CLASSIFICATION	0.0031996575990451454	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9998965252734453	WITHOUT_CLASSIFICATION	1.0347472655475758E-4	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.999945791778867	WITHOUT_CLASSIFICATION	5.420822113306924E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9998796253904959	WITHOUT_CLASSIFICATION	1.2037460950412737E-4	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9990027515947918	WITHOUT_CLASSIFICATION	9.972484052082578E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9990027515947918	WITHOUT_CLASSIFICATION	9.972484052082578E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997302489836412	WITHOUT_CLASSIFICATION	2.697510163588647E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999536472785167	WITHOUT_CLASSIFICATION	4.635272148324971E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996888413143896	WITHOUT_CLASSIFICATION	3.1115868561032466E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999707287226851	WITHOUT_CLASSIFICATION	2.9271277314861156E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999707287226851	WITHOUT_CLASSIFICATION	2.9271277314861156E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9998944513136818	WITHOUT_CLASSIFICATION	1.0554868631812794E-4	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999594783350733	WITHOUT_CLASSIFICATION	4.052166492687454E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999470994192757	WITHOUT_CLASSIFICATION	5.290058072420835E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9991691020185366	WITHOUT_CLASSIFICATION	8.308979814633127E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999845886568535	WITHOUT_CLASSIFICATION	1.541134314653942E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999958089543339	WITHOUT_CLASSIFICATION	4.1910456661083795E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999640336635529	WITHOUT_CLASSIFICATION	3.596633644705289E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999783517861581	WITHOUT_CLASSIFICATION	2.1648213841812777E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998643764515484	WITHOUT_CLASSIFICATION	1.356235484516854E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9997020613979519	WITHOUT_CLASSIFICATION	2.9793860204810124E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999653857177329	WITHOUT_CLASSIFICATION	3.461428226720215E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999859479021225	WITHOUT_CLASSIFICATION	1.40520978774468E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.999977167080146	WITHOUT_CLASSIFICATION	2.2832919854025565E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999185021983299	WITHOUT_CLASSIFICATION	8.149780167011855E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9995278060717501	WITHOUT_CLASSIFICATION	4.721939282499287E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999642372363247	WITHOUT_CLASSIFICATION	3.576276367542971E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998425977226174	WITHOUT_CLASSIFICATION	1.574022773825751E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9998703834091274	WITHOUT_CLASSIFICATION	1.2961659087272676E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9998703834091274	WITHOUT_CLASSIFICATION	1.2961659087272676E-4	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999226591840654	WITHOUT_CLASSIFICATION	7.734081593454949E-5	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999248264231316	WITHOUT_CLASSIFICATION	7.517357686839605E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999248264231316	WITHOUT_CLASSIFICATION	7.517357686839605E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9997401604048163	WITHOUT_CLASSIFICATION	2.5983959518374776E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999217098135164	WITHOUT_CLASSIFICATION	7.829018648366721E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998732683776228	WITHOUT_CLASSIFICATION	1.267316223773035E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999001634323184	WITHOUT_CLASSIFICATION	9.983656768164961E-5	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999643660740206	WITHOUT_CLASSIFICATION	3.5633925979441706E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999423163405694	WITHOUT_CLASSIFICATION	5.768365943063973E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999643660740206	WITHOUT_CLASSIFICATION	3.5633925979441706E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999577209635812	WITHOUT_CLASSIFICATION	4.2279036418781456E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999805428915385	WITHOUT_CLASSIFICATION	1.9457108461487506E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9997531651886595	WITHOUT_CLASSIFICATION	2.4683481134044294E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9995278060717501	WITHOUT_CLASSIFICATION	4.721939282499287E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9997357737499408	WITHOUT_CLASSIFICATION	2.6422625005920685E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999039110894458	WITHOUT_CLASSIFICATION	9.608891055417224E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9996178215346923	WITHOUT_CLASSIFICATION	3.821784653077795E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9988241156012118	WITHOUT_CLASSIFICATION	0.0011758843987883132	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999579611015903	WITHOUT_CLASSIFICATION	4.203889840965203E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999694018328052	WITHOUT_CLASSIFICATION	3.059816719475789E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9944306451849968	WITHOUT_CLASSIFICATION	0.0055693548150031365	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9944306451849968	WITHOUT_CLASSIFICATION	0.0055693548150031365	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9991893059554251	WITHOUT_CLASSIFICATION	8.106940445748131E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999399525546813	WITHOUT_CLASSIFICATION	6.004744531879077E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999577209635812	WITHOUT_CLASSIFICATION	4.2279036418781456E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999577209635812	WITHOUT_CLASSIFICATION	4.2279036418781456E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999590046924325	WITHOUT_CLASSIFICATION	4.0995307567502774E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9990344420858508	WITHOUT_CLASSIFICATION	9.65557914149159E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9996095252640903	WITHOUT_CLASSIFICATION	3.904747359097075E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9997825723878164	WITHOUT_CLASSIFICATION	2.174276121835196E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.999941295028178	WITHOUT_CLASSIFICATION	5.8704971822095384E-5	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.999946206423889	WITHOUT_CLASSIFICATION	5.379357611095587E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999649276023214	WITHOUT_CLASSIFICATION	3.5072397678521426E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999743744692416	WITHOUT_CLASSIFICATION	2.562553075828119E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999480966431145	WITHOUT_CLASSIFICATION	5.190335688559788E-5	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999036962702301	WITHOUT_CLASSIFICATION	9.630372976981113E-5	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.999946206423889	WITHOUT_CLASSIFICATION	5.379357611095587E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997062925521789	WITHOUT_CLASSIFICATION	2.937074478210677E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997062925521789	WITHOUT_CLASSIFICATION	2.937074478210677E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999824353126016	WITHOUT_CLASSIFICATION	1.7564687398512965E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999626840278228	WITHOUT_CLASSIFICATION	3.731597217725751E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999866864909764	WITHOUT_CLASSIFICATION	1.331350902359829E-4	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999866864909764	WITHOUT_CLASSIFICATION	1.331350902359829E-4	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999834262315299	WITHOUT_CLASSIFICATION	1.6573768470135693E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997411802216662	WITHOUT_CLASSIFICATION	2.588197783337427E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997221279088646	WITHOUT_CLASSIFICATION	2.778720911353725E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999813809881051	WITHOUT_CLASSIFICATION	1.8619011895023448E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9995313360443197	WITHOUT_CLASSIFICATION	4.686639556803924E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9991648974993124	WITHOUT_CLASSIFICATION	8.351025006875944E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999587217763934	WITHOUT_CLASSIFICATION	4.127822360649298E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9998659953576781	WITHOUT_CLASSIFICATION	1.3400464232194727E-4	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999844016898597	WITHOUT_CLASSIFICATION	1.5598310140324418E-5	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999599636694089	WITHOUT_CLASSIFICATION	4.003633059119348E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999936960207969	WITHOUT_CLASSIFICATION	6.303979203110825E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986536999598792	WITHOUT_CLASSIFICATION	0.0013463000401207443	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997411802216662	WITHOUT_CLASSIFICATION	2.588197783337427E-4	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999750935022188	WITHOUT_CLASSIFICATION	2.4906497781196998E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999997783210844	WITHOUT_CLASSIFICATION	2.2167891560128867E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999894445351468	WITHOUT_CLASSIFICATION	1.0555464853092874E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999767734924246	WITHOUT_CLASSIFICATION	2.322650757544614E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999810757633307	WITHOUT_CLASSIFICATION	1.8924236669220605E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998567270408474	WITHOUT_CLASSIFICATION	1.4327295915272036E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9984458355696731	WITHOUT_CLASSIFICATION	0.0015541644303269362	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999985962960313	WITHOUT_CLASSIFICATION	1.4037039687099246E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999871080127624	WITHOUT_CLASSIFICATION	1.2891987237655792E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9996190092796291	WITHOUT_CLASSIFICATION	3.8099072037091423E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9997666046800845	WITHOUT_CLASSIFICATION	2.333953199154906E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.999152236768675	WITHOUT_CLASSIFICATION	8.477632313248997E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999955381691955	WITHOUT_CLASSIFICATION	4.461830804479375E-6	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9992760474578299	WITHOUT_CLASSIFICATION	7.23952542170075E-4	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9988062545702948	WITHOUT_CLASSIFICATION	0.001193745429705241	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999488629051344	WITHOUT_CLASSIFICATION	5.113709486551934E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9998888449021702	WITHOUT_CLASSIFICATION	1.111550978297544E-4	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9998996853113586	WITHOUT_CLASSIFICATION	1.0031468864136113E-4	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999843524816121	WITHOUT_CLASSIFICATION	1.5647518387909697E-5	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9988979502475742	WITHOUT_CLASSIFICATION	0.0011020497524257774	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999613731781846	WITHOUT_CLASSIFICATION	3.862682181547092E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9996581599590374	WITHOUT_CLASSIFICATION	3.4184004096265275E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999731858925905	WITHOUT_CLASSIFICATION	2.681410740946019E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9996226677171999	WITHOUT_CLASSIFICATION	3.773322828001439E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9997421430745256	WITHOUT_CLASSIFICATION	2.578569254744496E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999941303669421	WITHOUT_CLASSIFICATION	5.869633057962595E-6	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999598321657219	WITHOUT_CLASSIFICATION	4.016783427811275E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9997512777442439	WITHOUT_CLASSIFICATION	2.4872225575611685E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.99782455856646	WITHOUT_CLASSIFICATION	0.0021754414335399155	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9972822672857942	WITHOUT_CLASSIFICATION	0.002717732714205864	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999389916561989	WITHOUT_CLASSIFICATION	6.100834380103063E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999953369193495	WITHOUT_CLASSIFICATION	4.66308065043347E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999373059238904	WITHOUT_CLASSIFICATION	6.269407610951431E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9998356335990436	WITHOUT_CLASSIFICATION	1.643664009563129E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999549379930671	WITHOUT_CLASSIFICATION	4.5062006932881796E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9973618162193951	WITHOUT_CLASSIFICATION	0.002638183780605	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999155789111098	WITHOUT_CLASSIFICATION	8.442108889028502E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9996226677171999	WITHOUT_CLASSIFICATION	3.773322828001439E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999525079056819	WITHOUT_CLASSIFICATION	4.7492094318142684E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.999998413507659	WITHOUT_CLASSIFICATION	1.5864923410615E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.999998413507659	WITHOUT_CLASSIFICATION	1.5864923410615E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999909312219549	WITHOUT_CLASSIFICATION	9.068778045146731E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999909312219549	WITHOUT_CLASSIFICATION	9.068778045146731E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9938363703870166	WITHOUT_CLASSIFICATION	0.006163629612983504	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999382048966745	WITHOUT_CLASSIFICATION	6.179510332546314E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999808011150567	WITHOUT_CLASSIFICATION	1.9198884943294233E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999202227245246	WITHOUT_CLASSIFICATION	7.977727547528656E-5	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9993694093012664	WITHOUT_CLASSIFICATION	6.305906987335381E-4	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9998038850753581	WITHOUT_CLASSIFICATION	1.9611492464188357E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9997410933047834	WITHOUT_CLASSIFICATION	2.5890669521648404E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999134152805512	WITHOUT_CLASSIFICATION	8.658471944878998E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999640969335077	WITHOUT_CLASSIFICATION	3.590306649220219E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999582437383004	WITHOUT_CLASSIFICATION	4.175626169951123E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9995823104607955	WITHOUT_CLASSIFICATION	4.1768953920444016E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9997862640423987	WITHOUT_CLASSIFICATION	2.1373595760126906E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9956881411041135	WITHOUT_CLASSIFICATION	0.004311858895886432	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999776041656839	WITHOUT_CLASSIFICATION	2.2395834316068995E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999416504340262	WITHOUT_CLASSIFICATION	5.834956597388097E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9996178215346923	WITHOUT_CLASSIFICATION	3.821784653077795E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9990195366044613	WITHOUT_CLASSIFICATION	9.804633955387116E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998488566445641	WITHOUT_CLASSIFICATION	1.511433554357916E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998488566445641	WITHOUT_CLASSIFICATION	1.511433554357916E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9984681472064884	WITHOUT_CLASSIFICATION	0.001531852793511672	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998557851058099	WITHOUT_CLASSIFICATION	1.4421489419017008E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9958867111409311	WITHOUT_CLASSIFICATION	0.004113288859068914	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998237479538894	WITHOUT_CLASSIFICATION	1.7625204611065558E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9997100901499061	WITHOUT_CLASSIFICATION	2.899098500939055E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9997100901499061	WITHOUT_CLASSIFICATION	2.899098500939055E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9985352061184088	WITHOUT_CLASSIFICATION	0.0014647938815911432	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.999999347283025	WITHOUT_CLASSIFICATION	6.527169750088906E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999881372590061	WITHOUT_CLASSIFICATION	1.1862740993932172E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999339561839923	WITHOUT_CLASSIFICATION	6.604381600772124E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.999320736459045	WITHOUT_CLASSIFICATION	6.792635409551038E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998237479538894	WITHOUT_CLASSIFICATION	1.7625204611065558E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9997100901499061	WITHOUT_CLASSIFICATION	2.899098500939055E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9997100901499061	WITHOUT_CLASSIFICATION	2.899098500939055E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9985352061184088	WITHOUT_CLASSIFICATION	0.0014647938815911432	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9994118861884893	WITHOUT_CLASSIFICATION	5.881138115107169E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.999942366469468	WITHOUT_CLASSIFICATION	5.7633530532070066E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9997754172966741	WITHOUT_CLASSIFICATION	2.2458270332587651E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999827297311885	WITHOUT_CLASSIFICATION	1.727026881151652E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9892921850932862	WITHOUT_CLASSIFICATION	0.010707814906713764	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9925493217906104	WITHOUT_CLASSIFICATION	0.0074506782093895505	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999776482728011	WITHOUT_CLASSIFICATION	2.2351727198841976E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997637389376469	WITHOUT_CLASSIFICATION	2.3626106235305879E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997637389376469	WITHOUT_CLASSIFICATION	2.3626106235305879E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9998747115438559	WITHOUT_CLASSIFICATION	1.2528845614416013E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999690561444401	WITHOUT_CLASSIFICATION	3.094385555989219E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9998880099817133	WITHOUT_CLASSIFICATION	1.1199001828675634E-4	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997498342036563	WITHOUT_CLASSIFICATION	2.5016579634380123E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9998098657092384	WITHOUT_CLASSIFICATION	1.9013429076166177E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998210759002588	WITHOUT_CLASSIFICATION	1.789240997411516E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9998782399273711	WITHOUT_CLASSIFICATION	1.2176007262884623E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999091183822798	WITHOUT_CLASSIFICATION	9.088161772014908E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9955714286239296	WITHOUT_CLASSIFICATION	0.004428571376070465	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9998705107132344	WITHOUT_CLASSIFICATION	1.2948928676566492E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999880925739988	WITHOUT_CLASSIFICATION	1.1907426001094555E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9996695292811177	WITHOUT_CLASSIFICATION	3.304707188822931E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9997735460482542	WITHOUT_CLASSIFICATION	2.264539517457208E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9976853249707484	WITHOUT_CLASSIFICATION	0.002314675029251559	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9998643334224925	WITHOUT_CLASSIFICATION	1.3566657750754027E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9997977167503466	WITHOUT_CLASSIFICATION	2.0228324965340612E-4	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.995470251819031	WITHOUT_CLASSIFICATION	0.00452974818096888	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9998881605780315	WITHOUT_CLASSIFICATION	1.1183942196837745E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999562120638313	WITHOUT_CLASSIFICATION	4.378793616864727E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9973903604511334	WITHOUT_CLASSIFICATION	0.00260963954886673	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9985001085278907	WITHOUT_CLASSIFICATION	0.001499891472109316	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9997980766645392	WITHOUT_CLASSIFICATION	2.0192333546091337E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9993104439592443	WITHOUT_CLASSIFICATION	6.895560407555966E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999019903588795	WITHOUT_CLASSIFICATION	9.80096411205304E-5	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999809216696665	WITHOUT_CLASSIFICATION	1.9078330333554448E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999162963918228	WITHOUT_CLASSIFICATION	8.370360817715902E-5	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9984328398689382	WITHOUT_CLASSIFICATION	0.0015671601310618178	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.999999283113976	WITHOUT_CLASSIFICATION	7.168860239468477E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999988483626406	WITHOUT_CLASSIFICATION	1.15163735938439E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9998980309305177	WITHOUT_CLASSIFICATION	1.0196906948238218E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999630476663268	WITHOUT_CLASSIFICATION	3.6952333673262165E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999912779636669	WITHOUT_CLASSIFICATION	8.72203633314137E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999912779636669	WITHOUT_CLASSIFICATION	8.72203633314137E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9997995007216498	WITHOUT_CLASSIFICATION	2.0049927835026572E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999395250205613	WITHOUT_CLASSIFICATION	6.047497943883866E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999620832505685	WITHOUT_CLASSIFICATION	3.7916749431542615E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999421729956033	WITHOUT_CLASSIFICATION	5.78270043967926E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9998875582816356	WITHOUT_CLASSIFICATION	1.1244171836452378E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999807022974702	WITHOUT_CLASSIFICATION	1.9297702529788472E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998732683776228	WITHOUT_CLASSIFICATION	1.267316223773035E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9996575204341583	WITHOUT_CLASSIFICATION	3.424795658416508E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.998891642811376	WITHOUT_CLASSIFICATION	0.001108357188623963	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9996666115067631	WITHOUT_CLASSIFICATION	3.333884932369717E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9994351583508364	WITHOUT_CLASSIFICATION	5.648416491635338E-4	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9995373306845822	WITHOUT_CLASSIFICATION	4.626693154179173E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998732683776228	WITHOUT_CLASSIFICATION	1.267316223773035E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998732683776228	WITHOUT_CLASSIFICATION	1.267316223773035E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999964610669553	WITHOUT_CLASSIFICATION	3.538933044629287E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999745588413979	WITHOUT_CLASSIFICATION	2.5441158602175097E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9996049063470162	WITHOUT_CLASSIFICATION	3.9509365298387385E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999032633487382	WITHOUT_CLASSIFICATION	9.673665126181809E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999449179515	WITHOUT_CLASSIFICATION	5.508204860790487E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9998784566711233	WITHOUT_CLASSIFICATION	1.215433288766392E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9998783909249409	WITHOUT_CLASSIFICATION	1.2160907505910129E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9998783909249409	WITHOUT_CLASSIFICATION	1.2160907505910129E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9998783909249409	WITHOUT_CLASSIFICATION	1.2160907505910129E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9997612097092967	WITHOUT_CLASSIFICATION	2.3879029070324713E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999377573539491	WITHOUT_CLASSIFICATION	6.224264605100817E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9986672437036619	WITHOUT_CLASSIFICATION	0.0013327562963381828	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999607397143071	WITHOUT_CLASSIFICATION	3.9260285692886645E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9998924112041803	WITHOUT_CLASSIFICATION	1.0758879581972376E-4	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9998258571602759	WITHOUT_CLASSIFICATION	1.741428397241056E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999451549449345	WITHOUT_CLASSIFICATION	5.48450550654502E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9998605290661038	WITHOUT_CLASSIFICATION	1.3947093389628264E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9986672437036619	WITHOUT_CLASSIFICATION	0.0013327562963381828	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999787092335463	WITHOUT_CLASSIFICATION	2.129076645371541E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9998708584128113	WITHOUT_CLASSIFICATION	1.291415871886586E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999173862249374	WITHOUT_CLASSIFICATION	8.261377506250006E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999737237523177	WITHOUT_CLASSIFICATION	2.627624768222963E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9996110700922026	WITHOUT_CLASSIFICATION	3.8892990779737627E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9998574219215716	WITHOUT_CLASSIFICATION	1.4257807842845357E-4	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999889906721189	WITHOUT_CLASSIFICATION	1.1009327881156432E-5	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.999533389858971	WITHOUT_CLASSIFICATION	4.666101410290388E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999920245963269	WITHOUT_CLASSIFICATION	7.975403673102184E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9998226275062491	WITHOUT_CLASSIFICATION	1.7737249375101728E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999920245963269	WITHOUT_CLASSIFICATION	7.975403673102184E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9995460589504981	WITHOUT_CLASSIFICATION	4.5394104950190065E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9993609491216167	WITHOUT_CLASSIFICATION	6.390508783833004E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999202322101777	WITHOUT_CLASSIFICATION	7.97677898223625E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999470756787749	WITHOUT_CLASSIFICATION	5.292432122497911E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999368459334512	WITHOUT_CLASSIFICATION	6.31540665487861E-5	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999984719173749	WITHOUT_CLASSIFICATION	1.5280826250043713E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9929781734864093	WITHOUT_CLASSIFICATION	0.007021826513590664	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9978904978268378	WITHOUT_CLASSIFICATION	0.0021095021731622897	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999098591480049	WITHOUT_CLASSIFICATION	9.014085199505136E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9987858531746905	WITHOUT_CLASSIFICATION	0.0012141468253094422	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.999500456852817	WITHOUT_CLASSIFICATION	4.995431471831101E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9998061362157891	WITHOUT_CLASSIFICATION	1.938637842108375E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9994236035743674	WITHOUT_CLASSIFICATION	5.763964256325427E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9831970769733616	WITHOUT_CLASSIFICATION	0.016802923026638505	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9996077496322281	WITHOUT_CLASSIFICATION	3.9225036777193207E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.999679579230429	WITHOUT_CLASSIFICATION	3.2042076957098287E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9998215384140325	WITHOUT_CLASSIFICATION	1.784615859675516E-4	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9768710984211963	WITHOUT_CLASSIFICATION	0.023128901578803745	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999315935701102	WITHOUT_CLASSIFICATION	6.840642988978872E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9998967391904828	WITHOUT_CLASSIFICATION	1.0326080951713361E-4	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999678832774751	WITHOUT_CLASSIFICATION	3.2116722524888446E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999277299929755	WITHOUT_CLASSIFICATION	7.227000702448105E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998279148875896	WITHOUT_CLASSIFICATION	1.720851124104688E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9929781734864093	WITHOUT_CLASSIFICATION	0.007021826513590664	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9998393150574385	WITHOUT_CLASSIFICATION	1.6068494256141203E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9998393150574385	WITHOUT_CLASSIFICATION	1.6068494256141203E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999696361607323	WITHOUT_CLASSIFICATION	3.036383926778575E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999802439520901	WITHOUT_CLASSIFICATION	1.9756047909867244E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999802439520901	WITHOUT_CLASSIFICATION	1.9756047909867244E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9998639758879846	WITHOUT_CLASSIFICATION	1.3602411201537004E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9998639758879846	WITHOUT_CLASSIFICATION	1.3602411201537004E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9991311637086436	WITHOUT_CLASSIFICATION	8.688362913563816E-4	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999966311424291	WITHOUT_CLASSIFICATION	3.3688575708937066E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998458592180033	WITHOUT_CLASSIFICATION	1.541407819966852E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997572178506329	WITHOUT_CLASSIFICATION	2.4278214936702155E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999633325809467	WITHOUT_CLASSIFICATION	3.6667419053399E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9997904137108863	WITHOUT_CLASSIFICATION	2.0958628911370175E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999885881196291	WITHOUT_CLASSIFICATION	1.1411880370875804E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999152547785982	WITHOUT_CLASSIFICATION	8.474522140181618E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999390040788667	WITHOUT_CLASSIFICATION	6.0995921133409736E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999906952207467	WITHOUT_CLASSIFICATION	9.30477925333365E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9998220652535403	WITHOUT_CLASSIFICATION	1.779347464596174E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999479133454259	WITHOUT_CLASSIFICATION	5.208665457420698E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9997500767968172	WITHOUT_CLASSIFICATION	2.4992320318288175E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9997500767968172	WITHOUT_CLASSIFICATION	2.4992320318288175E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9995934769622687	WITHOUT_CLASSIFICATION	4.0652303773125713E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9982192664270071	WITHOUT_CLASSIFICATION	0.0017807335729929535	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999925775392494	WITHOUT_CLASSIFICATION	7.4224607505317425E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9967628969877617	WITHOUT_CLASSIFICATION	0.003237103012238346	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999740817072673	WITHOUT_CLASSIFICATION	2.591829273266074E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999564681546591	WITHOUT_CLASSIFICATION	4.353184534094701E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999444268045352	WITHOUT_CLASSIFICATION	5.557319546480418E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9998639352670612	WITHOUT_CLASSIFICATION	1.3606473293875426E-4	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9998652376706141	WITHOUT_CLASSIFICATION	1.3476232938586805E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9997261763274231	WITHOUT_CLASSIFICATION	2.7382367257686814E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999968421954104	WITHOUT_CLASSIFICATION	3.157804589502965E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999545163720993	WITHOUT_CLASSIFICATION	4.548362790071196E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999870793213095	WITHOUT_CLASSIFICATION	1.2920678690571377E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.99995979884208	WITHOUT_CLASSIFICATION	4.0201157919927105E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9998827653366827	WITHOUT_CLASSIFICATION	1.1723466331730074E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999798142178326	WITHOUT_CLASSIFICATION	2.0185782167496293E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999130255769413	WITHOUT_CLASSIFICATION	8.697442305874739E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999257255480776	WITHOUT_CLASSIFICATION	7.42744519224731E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9998817325004998	WITHOUT_CLASSIFICATION	1.1826749950016162E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999609527778103	WITHOUT_CLASSIFICATION	3.904722218965463E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9998633986410292	WITHOUT_CLASSIFICATION	1.366013589706471E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999755831829994	WITHOUT_CLASSIFICATION	2.4416817000607553E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999545157200941	WITHOUT_CLASSIFICATION	4.5484279905888E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999246470587815	WITHOUT_CLASSIFICATION	7.535294121851413E-5	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999246470587815	WITHOUT_CLASSIFICATION	7.535294121851413E-5	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999278989570514	WITHOUT_CLASSIFICATION	7.210104294866404E-5	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999919271292016	WITHOUT_CLASSIFICATION	8.072870798361553E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.999987624426544	WITHOUT_CLASSIFICATION	1.2375573455948359E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9998973595391848	WITHOUT_CLASSIFICATION	1.0264046081526684E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999434671038453	WITHOUT_CLASSIFICATION	5.653289615471311E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9980418292995934	WITHOUT_CLASSIFICATION	0.0019581707004065244	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9988134285568169	WITHOUT_CLASSIFICATION	0.0011865714431831271	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999349201038955	WITHOUT_CLASSIFICATION	6.50798961044289E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9988998507185874	WITHOUT_CLASSIFICATION	0.0011001492814125516	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9993011802582539	WITHOUT_CLASSIFICATION	6.988197417461368E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999614817624743	WITHOUT_CLASSIFICATION	3.851823752566962E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9997904235205128	WITHOUT_CLASSIFICATION	2.0957647948710538E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999306466269647	WITHOUT_CLASSIFICATION	6.935337303532242E-5	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999371589523891	WITHOUT_CLASSIFICATION	6.284104761090355E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999626338840679	WITHOUT_CLASSIFICATION	3.7366115932034576E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9996250783528252	WITHOUT_CLASSIFICATION	3.7492164717482063E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.999947758861532	WITHOUT_CLASSIFICATION	5.224113846807909E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.999980345120319	WITHOUT_CLASSIFICATION	1.9654879681037383E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999078659870092	WITHOUT_CLASSIFICATION	9.213401299084747E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9994511113247351	WITHOUT_CLASSIFICATION	5.488886752648591E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999914218528237	WITHOUT_CLASSIFICATION	8.578147176285919E-6	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9998167317763347	WITHOUT_CLASSIFICATION	1.8326822366525916E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9996250783528252	WITHOUT_CLASSIFICATION	3.7492164717482063E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.999980345120319	WITHOUT_CLASSIFICATION	1.9654879681037383E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.999940958617015	WITHOUT_CLASSIFICATION	5.90413829849256E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999769788080688	WITHOUT_CLASSIFICATION	2.3021191931193258E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999312811307082	WITHOUT_CLASSIFICATION	6.87188692918174E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9998984088671125	WITHOUT_CLASSIFICATION	1.015911328876067E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981579660228717	WITHOUT_CLASSIFICATION	0.0018420339771283217	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999571001869221	WITHOUT_CLASSIFICATION	4.289981307803378E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999403242995687	WITHOUT_CLASSIFICATION	5.967570043132102E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9998994095721006	WITHOUT_CLASSIFICATION	1.005904278993887E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999609232212937	WITHOUT_CLASSIFICATION	3.9076778706227975E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999609232212937	WITHOUT_CLASSIFICATION	3.9076778706227975E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9998612347983817	WITHOUT_CLASSIFICATION	1.3876520161814314E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9998705332880878	WITHOUT_CLASSIFICATION	1.294667119121888E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999137832318293	WITHOUT_CLASSIFICATION	8.621676817067056E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999958089543339	WITHOUT_CLASSIFICATION	4.1910456661083795E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999958089543339	WITHOUT_CLASSIFICATION	4.1910456661083795E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999536472785167	WITHOUT_CLASSIFICATION	4.635272148324971E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996888413143896	WITHOUT_CLASSIFICATION	3.1115868561032466E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999859479021225	WITHOUT_CLASSIFICATION	1.40520978774468E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.999977167080146	WITHOUT_CLASSIFICATION	2.2832919854025565E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9998110979573284	WITHOUT_CLASSIFICATION	1.8890204267157145E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9998907885780599	WITHOUT_CLASSIFICATION	1.0921142194014943E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999502913778809	WITHOUT_CLASSIFICATION	4.970862211908411E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998301742234293	WITHOUT_CLASSIFICATION	1.698257765705311E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999928722190184	WITHOUT_CLASSIFICATION	7.127780981537009E-6	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999949145198443	WITHOUT_CLASSIFICATION	5.085480155557805E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999923951972853	WITHOUT_CLASSIFICATION	7.604802714722073E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9990630152377133	WITHOUT_CLASSIFICATION	9.369847622867254E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999859479021225	WITHOUT_CLASSIFICATION	1.40520978774468E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.999977167080146	WITHOUT_CLASSIFICATION	2.2832919854025565E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997637389376469	WITHOUT_CLASSIFICATION	2.3626106235305879E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998706668027241	WITHOUT_CLASSIFICATION	1.2933319727581103E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999438810452562	WITHOUT_CLASSIFICATION	5.61189547436928E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9996760558659838	WITHOUT_CLASSIFICATION	3.2394413401605536E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9996760558659838	WITHOUT_CLASSIFICATION	3.2394413401605536E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9994959956701288	WITHOUT_CLASSIFICATION	5.040043298712536E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9994959956701288	WITHOUT_CLASSIFICATION	5.040043298712536E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999322277230168	WITHOUT_CLASSIFICATION	6.77722769831932E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.99990829351805	WITHOUT_CLASSIFICATION	9.170648195005078E-5	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.99992635424893	WITHOUT_CLASSIFICATION	7.36457510700721E-5	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999337125676022	WITHOUT_CLASSIFICATION	6.628743239784152E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9998663889173431	WITHOUT_CLASSIFICATION	1.336110826568743E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999127174959375	WITHOUT_CLASSIFICATION	8.728250406249465E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999523834789902	WITHOUT_CLASSIFICATION	4.761652100989295E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997274682939667	WITHOUT_CLASSIFICATION	2.725317060332595E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999919360501529	WITHOUT_CLASSIFICATION	8.063949847042036E-6	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999919360501529	WITHOUT_CLASSIFICATION	8.063949847042036E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9994659344441711	WITHOUT_CLASSIFICATION	5.340655558289356E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9994659344441711	WITHOUT_CLASSIFICATION	5.340655558289356E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9994659344441711	WITHOUT_CLASSIFICATION	5.340655558289356E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996402129123381	WITHOUT_CLASSIFICATION	3.5978708766199325E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996402129123381	WITHOUT_CLASSIFICATION	3.5978708766199325E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9996402129123381	WITHOUT_CLASSIFICATION	3.5978708766199325E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999912235025635	WITHOUT_CLASSIFICATION	8.776497436384498E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999912235025635	WITHOUT_CLASSIFICATION	8.776497436384498E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996539032718521	WITHOUT_CLASSIFICATION	3.4609672814787837E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996539032718521	WITHOUT_CLASSIFICATION	3.4609672814787837E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999209191352494	WITHOUT_CLASSIFICATION	7.908086475061775E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999209191352494	WITHOUT_CLASSIFICATION	7.908086475061775E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998247544441513	WITHOUT_CLASSIFICATION	1.752455558486327E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998247544441513	WITHOUT_CLASSIFICATION	1.752455558486327E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999911038425054	WITHOUT_CLASSIFICATION	8.896157494602208E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999911038425054	WITHOUT_CLASSIFICATION	8.896157494602208E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999955343428566	WITHOUT_CLASSIFICATION	4.465657143387332E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999955343428566	WITHOUT_CLASSIFICATION	4.465657143387332E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999912235025635	WITHOUT_CLASSIFICATION	8.776497436384498E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996539032718521	WITHOUT_CLASSIFICATION	3.4609672814787837E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999209191352494	WITHOUT_CLASSIFICATION	7.908086475061775E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.999911038425054	WITHOUT_CLASSIFICATION	8.896157494602208E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999955343428566	WITHOUT_CLASSIFICATION	4.465657143387332E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9997329852170942	WITHOUT_CLASSIFICATION	2.670147829057781E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9936809741877912	WITHOUT_CLASSIFICATION	0.006319025812208775	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9997421466349887	WITHOUT_CLASSIFICATION	2.5785336501132504E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998237475515414	WITHOUT_CLASSIFICATION	1.7625244845873657E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999624755326041	WITHOUT_CLASSIFICATION	3.752446739586881E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999582825415844	WITHOUT_CLASSIFICATION	4.1717458415588645E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999349159391471	WITHOUT_CLASSIFICATION	6.508406085299115E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999168052966917	WITHOUT_CLASSIFICATION	8.319470330830438E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999345987847312	WITHOUT_CLASSIFICATION	6.540121526882126E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997289693929622	WITHOUT_CLASSIFICATION	2.7103060703786384E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996266762621898	WITHOUT_CLASSIFICATION	3.7332373781024525E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999357641384788	WITHOUT_CLASSIFICATION	6.423586152116043E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999412291856724	WITHOUT_CLASSIFICATION	5.877081432752706E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9996901690171923	WITHOUT_CLASSIFICATION	3.098309828076773E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9993516280032897	WITHOUT_CLASSIFICATION	6.483719967103446E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999368654919976	WITHOUT_CLASSIFICATION	6.313450800242322E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9997061015730975	WITHOUT_CLASSIFICATION	2.938984269024852E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9997242043753889	WITHOUT_CLASSIFICATION	2.7579562461109674E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9992958962048931	WITHOUT_CLASSIFICATION	7.041037951067424E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9996727107678821	WITHOUT_CLASSIFICATION	3.272892321179351E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9998417870539404	WITHOUT_CLASSIFICATION	1.5821294605958923E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9997004883459681	WITHOUT_CLASSIFICATION	2.9951165403184694E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997061015730975	WITHOUT_CLASSIFICATION	2.938984269024852E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999892587362241	WITHOUT_CLASSIFICATION	1.0741263775895587E-4	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999892587362241	WITHOUT_CLASSIFICATION	1.0741263775895587E-4	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9992958962048931	WITHOUT_CLASSIFICATION	7.041037951067424E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9997403978097797	WITHOUT_CLASSIFICATION	2.5960219022025594E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.999436372645955	WITHOUT_CLASSIFICATION	5.636273540451632E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9996771025185883	WITHOUT_CLASSIFICATION	3.228974814116513E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.999768519693787	WITHOUT_CLASSIFICATION	2.3148030621296837E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999621686709326	WITHOUT_CLASSIFICATION	3.783132906743713E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9997291623906117	WITHOUT_CLASSIFICATION	2.7083760938829954E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9987848235797361	WITHOUT_CLASSIFICATION	0.0012151764202640043	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9997268099708121	WITHOUT_CLASSIFICATION	2.731900291879608E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997288362960176	WITHOUT_CLASSIFICATION	2.7116370398235515E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997288362960176	WITHOUT_CLASSIFICATION	2.7116370398235515E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997288362960176	WITHOUT_CLASSIFICATION	2.7116370398235515E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999625678736946	WITHOUT_CLASSIFICATION	3.743212630529891E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999625678736946	WITHOUT_CLASSIFICATION	3.743212630529891E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999362289587287	WITHOUT_CLASSIFICATION	6.377104127133913E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999362289587287	WITHOUT_CLASSIFICATION	6.377104127133913E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9995442791463116	WITHOUT_CLASSIFICATION	4.5572085368832826E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999106953871258	WITHOUT_CLASSIFICATION	8.930461287414843E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9995432516933399	WITHOUT_CLASSIFICATION	4.5674830666017456E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999529043849547	WITHOUT_CLASSIFICATION	4.709561504536176E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999879255651957	WITHOUT_CLASSIFICATION	1.2074434804264108E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9998498353016254	WITHOUT_CLASSIFICATION	1.5016469837451145E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999712433906992	WITHOUT_CLASSIFICATION	2.875660930074176E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9998051440331743	WITHOUT_CLASSIFICATION	1.9485596682563254E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999348142253419	WITHOUT_CLASSIFICATION	6.518577465813364E-5	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9995661278457778	WITHOUT_CLASSIFICATION	4.3387215422218116E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999439351890445	WITHOUT_CLASSIFICATION	5.6064810955501696E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999853909965677	WITHOUT_CLASSIFICATION	1.4609003432333604E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997316930624779	WITHOUT_CLASSIFICATION	2.6830693752210455E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997268099708121	WITHOUT_CLASSIFICATION	2.731900291879608E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9989661776908606	WITHOUT_CLASSIFICATION	0.0010338223091394222	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.999945978794998	WITHOUT_CLASSIFICATION	5.402120500192099E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9995116308767151	WITHOUT_CLASSIFICATION	4.883691232848943E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999347010837583	WITHOUT_CLASSIFICATION	6.529891624166178E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999347010837583	WITHOUT_CLASSIFICATION	6.529891624166178E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999347010837583	WITHOUT_CLASSIFICATION	6.529891624166178E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999351588342839	WITHOUT_CLASSIFICATION	6.48411657161621E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999351588342839	WITHOUT_CLASSIFICATION	6.48411657161621E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9995170916105636	WITHOUT_CLASSIFICATION	4.8290838943645703E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999539559689473	WITHOUT_CLASSIFICATION	4.60440310526678E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994841596375138	WITHOUT_CLASSIFICATION	5.158403624861133E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994841596375138	WITHOUT_CLASSIFICATION	5.158403624861133E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9991212144085958	WITHOUT_CLASSIFICATION	8.787855914043348E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9889371448975501	WITHOUT_CLASSIFICATION	0.011062855102449804	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999642820638404	WITHOUT_CLASSIFICATION	3.5717936159589245E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999642820638404	WITHOUT_CLASSIFICATION	3.5717936159589245E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999648052948071	WITHOUT_CLASSIFICATION	3.519470519287354E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999217074062421	WITHOUT_CLASSIFICATION	7.829259375795655E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999625678736946	WITHOUT_CLASSIFICATION	3.743212630529891E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999625678736946	WITHOUT_CLASSIFICATION	3.743212630529891E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999362289587287	WITHOUT_CLASSIFICATION	6.377104127133913E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997316930624779	WITHOUT_CLASSIFICATION	2.6830693752210455E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997268099708121	WITHOUT_CLASSIFICATION	2.731900291879608E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999363429431704	WITHOUT_CLASSIFICATION	6.365705682962768E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999351588342839	WITHOUT_CLASSIFICATION	6.48411657161621E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999403169284822	WITHOUT_CLASSIFICATION	5.9683071517870006E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999341188451312	WITHOUT_CLASSIFICATION	6.588115486877899E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.999848180996836	WITHOUT_CLASSIFICATION	1.5181900316389108E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996266762621898	WITHOUT_CLASSIFICATION	3.7332373781024525E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9996280001774189	WITHOUT_CLASSIFICATION	3.71999822581134E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.999733694921299	WITHOUT_CLASSIFICATION	2.663050787010467E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999607498347755	WITHOUT_CLASSIFICATION	3.925016522450343E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9998961820821093	WITHOUT_CLASSIFICATION	1.0381791789072573E-4	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9998322054820654	WITHOUT_CLASSIFICATION	1.6779451793456134E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999905801500224	WITHOUT_CLASSIFICATION	9.419849977624176E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9998488729766803	WITHOUT_CLASSIFICATION	1.5112702331956867E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9998349978907362	WITHOUT_CLASSIFICATION	1.6500210926386836E-4	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999361214634042	WITHOUT_CLASSIFICATION	6.387853659587628E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999203270060597	WITHOUT_CLASSIFICATION	7.96729939403071E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999766593900535	WITHOUT_CLASSIFICATION	2.3340609946440046E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999535386385517	WITHOUT_CLASSIFICATION	4.6461361448226826E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9986276166457448	WITHOUT_CLASSIFICATION	0.001372383354255077	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.995187403034614	WITHOUT_CLASSIFICATION	0.0048125969653860495	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999071624130975	WITHOUT_CLASSIFICATION	9.283758690253534E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999200347920596	WITHOUT_CLASSIFICATION	7.996520794039502E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998708389811769	WITHOUT_CLASSIFICATION	1.2916101882312901E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999914347725145	WITHOUT_CLASSIFICATION	8.565227485400317E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999914347725145	WITHOUT_CLASSIFICATION	8.565227485400317E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999547934729665	WITHOUT_CLASSIFICATION	4.520652703356268E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9997903299735923	WITHOUT_CLASSIFICATION	2.0967002640764093E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9955024049244385	WITHOUT_CLASSIFICATION	0.0044975950755614365	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9990259522515387	WITHOUT_CLASSIFICATION	9.740477484613354E-4	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999011789479985	WITHOUT_CLASSIFICATION	9.882105200157856E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9996440184377825	WITHOUT_CLASSIFICATION	3.559815622175801E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999372524484009	WITHOUT_CLASSIFICATION	6.274755159906392E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9998328250004618	WITHOUT_CLASSIFICATION	1.6717499953824294E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9938002640383697	WITHOUT_CLASSIFICATION	0.006199735961630236	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999527071434924	WITHOUT_CLASSIFICATION	4.729285650770406E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9998033047230569	WITHOUT_CLASSIFICATION	1.9669527694314275E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999105388938329	WITHOUT_CLASSIFICATION	8.94611061671695E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998255963170242	WITHOUT_CLASSIFICATION	1.7440368297588874E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9998621577878952	WITHOUT_CLASSIFICATION	1.3784221210478678E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999711285158237	WITHOUT_CLASSIFICATION	2.8871484176324307E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9998352350805394	WITHOUT_CLASSIFICATION	1.6476491946068275E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999321614694845	WITHOUT_CLASSIFICATION	6.783853051555855E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999951111403202	WITHOUT_CLASSIFICATION	4.8888596797862204E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999951111403202	WITHOUT_CLASSIFICATION	4.8888596797862204E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999792995267078	WITHOUT_CLASSIFICATION	2.070047329224001E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999751101481664	WITHOUT_CLASSIFICATION	2.4889851833636525E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999783997405014	WITHOUT_CLASSIFICATION	2.1600259498639265E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999751157335242	WITHOUT_CLASSIFICATION	2.4884266475791293E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999752191972949	WITHOUT_CLASSIFICATION	2.4780802705074464E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999216513384208	WITHOUT_CLASSIFICATION	7.834866157912643E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999945518376958	WITHOUT_CLASSIFICATION	5.448162304177061E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999444960231698	WITHOUT_CLASSIFICATION	5.55039768301054E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999508592531424	WITHOUT_CLASSIFICATION	4.9140746857652167E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9992958453137026	WITHOUT_CLASSIFICATION	7.041546862974071E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.999987641284197	WITHOUT_CLASSIFICATION	1.2358715802987542E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.99839222970305	WITHOUT_CLASSIFICATION	0.0016077702969500448	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.999867820041655	WITHOUT_CLASSIFICATION	1.3217995834497262E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9998789302847259	WITHOUT_CLASSIFICATION	1.2106971527406313E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999976993029072	WITHOUT_CLASSIFICATION	2.3006970928138342E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999978613297996	WITHOUT_CLASSIFICATION	2.138670200300092E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998390314494264	WITHOUT_CLASSIFICATION	1.6096855057358116E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9993780656233417	WITHOUT_CLASSIFICATION	6.21934376658331E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9989080449551923	WITHOUT_CLASSIFICATION	0.0010919550448077618	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9996964303712192	WITHOUT_CLASSIFICATION	3.0356962878076927E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9980269999598453	WITHOUT_CLASSIFICATION	0.001973000040154652	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998184054220212	WITHOUT_CLASSIFICATION	1.8159457797877526E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999495262159852	WITHOUT_CLASSIFICATION	5.047378401484134E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9997958347604563	WITHOUT_CLASSIFICATION	2.0416523954362508E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999859922266703	WITHOUT_CLASSIFICATION	1.400777332964671E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999958006749284	WITHOUT_CLASSIFICATION	4.199325071600214E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999643268049695	WITHOUT_CLASSIFICATION	3.567319503050854E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998056855141824	WITHOUT_CLASSIFICATION	1.9431448581756208E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999754520544339	WITHOUT_CLASSIFICATION	2.454794556615448E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999996194806638	WITHOUT_CLASSIFICATION	3.805193362033495E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9996540729407116	WITHOUT_CLASSIFICATION	3.4592705928842974E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9993628934552371	WITHOUT_CLASSIFICATION	6.371065447628191E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997864782872444	WITHOUT_CLASSIFICATION	2.1352171275555945E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999672320870435	WITHOUT_CLASSIFICATION	3.2767912956564995E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998837992151256	WITHOUT_CLASSIFICATION	1.16200784874483E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9979203169901946	WITHOUT_CLASSIFICATION	0.0020796830098054513	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9992128154748823	WITHOUT_CLASSIFICATION	7.871845251177729E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998938877246429	WITHOUT_CLASSIFICATION	1.061122753569662E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9989773974637074	WITHOUT_CLASSIFICATION	0.001022602536292658	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999921777498819	WITHOUT_CLASSIFICATION	7.822250118094802E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999060935788363	WITHOUT_CLASSIFICATION	9.390642116371E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999451724937574	WITHOUT_CLASSIFICATION	5.482750624268373E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999698142246735	WITHOUT_CLASSIFICATION	3.0185775326571852E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998325198949631	WITHOUT_CLASSIFICATION	1.6748010503691278E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999840660408746	WITHOUT_CLASSIFICATION	1.5933959125348213E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999128950931816	WITHOUT_CLASSIFICATION	8.710490681835664E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996464592378914	WITHOUT_CLASSIFICATION	3.5354076210851503E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999368058914483	WITHOUT_CLASSIFICATION	6.31941085516849E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999662285138412	WITHOUT_CLASSIFICATION	3.377148615886696E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998734907788032	WITHOUT_CLASSIFICATION	1.2650922119679132E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9887980062802152	WITHOUT_CLASSIFICATION	0.011201993719784859	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999486583900871	WITHOUT_CLASSIFICATION	5.1341609912886765E-5	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999437967914496	WITHOUT_CLASSIFICATION	5.620320855033975E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996411983989393	WITHOUT_CLASSIFICATION	3.588016010607528E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999691240251658	WITHOUT_CLASSIFICATION	3.0875974834204E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999059221605113	WITHOUT_CLASSIFICATION	9.407783948873828E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999126229912378	WITHOUT_CLASSIFICATION	8.737700876219153E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9997427674828948	WITHOUT_CLASSIFICATION	2.572325171051947E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999904269870981	WITHOUT_CLASSIFICATION	9.57301290189758E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999135905630577	WITHOUT_CLASSIFICATION	8.64094369422732E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998809662852647	WITHOUT_CLASSIFICATION	1.190337147353858E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9994396107506913	WITHOUT_CLASSIFICATION	5.603892493087035E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9988006133680998	WITHOUT_CLASSIFICATION	0.0011993866319002118	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999406211827648	WITHOUT_CLASSIFICATION	5.9378817235117645E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999421479227394	WITHOUT_CLASSIFICATION	5.785207726054455E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999793386851705	WITHOUT_CLASSIFICATION	2.066131482949514E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999711472700671	WITHOUT_CLASSIFICATION	2.8852729932960017E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997305221355584	WITHOUT_CLASSIFICATION	2.694778644416038E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997545808336546	WITHOUT_CLASSIFICATION	2.4541916634538867E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9993771095092663	WITHOUT_CLASSIFICATION	6.228904907336606E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999440853747802	WITHOUT_CLASSIFICATION	5.591462521976428E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999294536749755	WITHOUT_CLASSIFICATION	7.054632502437457E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999943723554708	WITHOUT_CLASSIFICATION	5.627644529213132E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999379002221161	WITHOUT_CLASSIFICATION	6.209977788382714E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999285111589451	WITHOUT_CLASSIFICATION	7.148884105490128E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9954939905104855	WITHOUT_CLASSIFICATION	0.004506009489514586	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999533056915099	WITHOUT_CLASSIFICATION	4.669430849003006E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998669469543674	WITHOUT_CLASSIFICATION	1.3305304563259476E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998789440072693	WITHOUT_CLASSIFICATION	1.2105599273067197E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429185724006	WITHOUT_CLASSIFICATION	5.708142759932912E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998789524084486	WITHOUT_CLASSIFICATION	0.001210475915513991	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999938871656072	WITHOUT_CLASSIFICATION	6.112834392798952E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999438255694413	WITHOUT_CLASSIFICATION	5.617443055878322E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999448090201037	WITHOUT_CLASSIFICATION	5.519097989633271E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996948940917875	WITHOUT_CLASSIFICATION	3.0510590821262236E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999405637250987	WITHOUT_CLASSIFICATION	5.9436274901306096E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999103000086189	WITHOUT_CLASSIFICATION	8.969999138110756E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999544667174304	WITHOUT_CLASSIFICATION	4.553328256967094E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997192761863567	WITHOUT_CLASSIFICATION	2.8072381364324087E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987489952735437	WITHOUT_CLASSIFICATION	0.0012510047264563207	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999412237313864	WITHOUT_CLASSIFICATION	5.8776268613525196E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999277967948762	WITHOUT_CLASSIFICATION	7.220320512381772E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986133619462401	WITHOUT_CLASSIFICATION	0.0013866380537598715	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985579488843055	WITHOUT_CLASSIFICATION	0.0014420511156945177	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986999802967603	WITHOUT_CLASSIFICATION	0.0013000197032397116	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986999802967603	WITHOUT_CLASSIFICATION	0.0013000197032397116	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997214604473583	WITHOUT_CLASSIFICATION	2.7853955264159824E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992663298222451	WITHOUT_CLASSIFICATION	7.336701777549182E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983807642993707	WITHOUT_CLASSIFICATION	0.0016192357006292984	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982971129091173	WITHOUT_CLASSIFICATION	0.0017028870908826958	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997522282124884	WITHOUT_CLASSIFICATION	2.4777178751156283E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.994683495926201	WITHOUT_CLASSIFICATION	0.005316504073798957	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985575148765794	WITHOUT_CLASSIFICATION	0.001442485123420625	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994076288625149	WITHOUT_CLASSIFICATION	5.92371137484998E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999946352916553	WITHOUT_CLASSIFICATION	5.364708344707345E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987489952735437	WITHOUT_CLASSIFICATION	0.0012510047264563207	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998605957915665	WITHOUT_CLASSIFICATION	1.394042084335523E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982971129091173	WITHOUT_CLASSIFICATION	0.001702887090882697	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986501119244447	WITHOUT_CLASSIFICATION	0.0013498880755552932	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998188274815825	WITHOUT_CLASSIFICATION	1.8117251841760792E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992663298222451	WITHOUT_CLASSIFICATION	7.336701777549182E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999440029424447	WITHOUT_CLASSIFICATION	5.599705755531209E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999407917518374	WITHOUT_CLASSIFICATION	5.920824816264433E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995665814331689	WITHOUT_CLASSIFICATION	4.3341856683117876E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998553805001446	WITHOUT_CLASSIFICATION	1.4461949985539372E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999533056915099	WITHOUT_CLASSIFICATION	4.669430849003006E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998687215018613	WITHOUT_CLASSIFICATION	1.3127849813864695E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995665814331689	WITHOUT_CLASSIFICATION	4.3341856683117876E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998687215018613	WITHOUT_CLASSIFICATION	1.3127849813864695E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983746165493118	WITHOUT_CLASSIFICATION	0.0016253834506881554	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9968693891053184	WITHOUT_CLASSIFICATION	0.003130610894681598	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988006192219243	WITHOUT_CLASSIFICATION	0.0011993807780756804	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988287943388493	WITHOUT_CLASSIFICATION	0.0011712056611507668	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9898661077183806	WITHOUT_CLASSIFICATION	0.010133892281619542	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998898096363652	WITHOUT_CLASSIFICATION	0.0011019036363479453	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985575148765794	WITHOUT_CLASSIFICATION	0.001442485123420625	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995031224537739	WITHOUT_CLASSIFICATION	4.96877546226122E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9954939905104855	WITHOUT_CLASSIFICATION	0.0045060094895145834	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987489952735437	WITHOUT_CLASSIFICATION	0.001251004726456321	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984652571086116	WITHOUT_CLASSIFICATION	0.001534742891388466	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999882209473755	WITHOUT_CLASSIFICATION	1.1779052624500688E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995031224537739	WITHOUT_CLASSIFICATION	4.96877546226122E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999473106881523	WITHOUT_CLASSIFICATION	5.26893118476772E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997302489836412	WITHOUT_CLASSIFICATION	2.697510163588647E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998835133971162	WITHOUT_CLASSIFICATION	1.1648660288378339E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999430698128758	WITHOUT_CLASSIFICATION	5.693018712418404E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993786133996886	WITHOUT_CLASSIFICATION	6.213866003114045E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999498583790256	WITHOUT_CLASSIFICATION	5.014162097435347E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993786133996886	WITHOUT_CLASSIFICATION	6.213866003114045E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999439884829214	WITHOUT_CLASSIFICATION	5.6011517078638245E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999832901232098	WITHOUT_CLASSIFICATION	1.670987679020717E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986231831660655	WITHOUT_CLASSIFICATION	0.0013768168339346194	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998825510612948	WITHOUT_CLASSIFICATION	1.1744893870529789E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999277967948762	WITHOUT_CLASSIFICATION	7.220320512381772E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999711285158237	WITHOUT_CLASSIFICATION	2.8871484176324307E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986536999598792	WITHOUT_CLASSIFICATION	0.0013463000401207443	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981579660228717	WITHOUT_CLASSIFICATION	0.0018420339771283217	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998532475071897	WITHOUT_CLASSIFICATION	1.467524928102008E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993786133996886	WITHOUT_CLASSIFICATION	6.213866003114045E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999421729956033	WITHOUT_CLASSIFICATION	5.78270043967926E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988507254372759	WITHOUT_CLASSIFICATION	0.00114927456272407	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9983386544365301	WITHOUT_CLASSIFICATION	0.0016613455634698425	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999620810505176	WITHOUT_CLASSIFICATION	3.791894948223556E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999807917155503	WITHOUT_CLASSIFICATION	1.9208284449738452E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999238364621804	WITHOUT_CLASSIFICATION	7.616353781957766E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999364676403619	WITHOUT_CLASSIFICATION	6.35323596380588E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9998352350805394	WITHOUT_CLASSIFICATION	1.6476491946068275E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9998566069714606	WITHOUT_CLASSIFICATION	1.4339302853944423E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999313485913399	WITHOUT_CLASSIFICATION	6.865140866010833E-5	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.999957192015694	WITHOUT_CLASSIFICATION	4.2807984306070934E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.995187403034614	WITHOUT_CLASSIFICATION	0.0048125969653860495	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999071624130975	WITHOUT_CLASSIFICATION	9.283758690253534E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999200347920596	WITHOUT_CLASSIFICATION	7.996520794039502E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998708389811769	WITHOUT_CLASSIFICATION	1.2916101882312901E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999914347725145	WITHOUT_CLASSIFICATION	8.565227485400317E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9997903299735923	WITHOUT_CLASSIFICATION	2.0967002640764093E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9955024049244385	WITHOUT_CLASSIFICATION	0.0044975950755614365	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9990259522515387	WITHOUT_CLASSIFICATION	9.740477484613354E-4	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999011789479985	WITHOUT_CLASSIFICATION	9.882105200157856E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9996440184377825	WITHOUT_CLASSIFICATION	3.559815622175801E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999385919548965	WITHOUT_CLASSIFICATION	6.140804510338135E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999421479227394	WITHOUT_CLASSIFICATION	5.785207726054455E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999527071434924	WITHOUT_CLASSIFICATION	4.729285650770406E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9998033047230569	WITHOUT_CLASSIFICATION	1.9669527694314275E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999105388938329	WITHOUT_CLASSIFICATION	8.94611061671695E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998255963170242	WITHOUT_CLASSIFICATION	1.7440368297588874E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9998621577878952	WITHOUT_CLASSIFICATION	1.3784221210478678E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9938002640383697	WITHOUT_CLASSIFICATION	0.006199735961630236	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999711285158237	WITHOUT_CLASSIFICATION	2.8871484176324307E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999321614694845	WITHOUT_CLASSIFICATION	6.783853051555855E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999951111403202	WITHOUT_CLASSIFICATION	4.8888596797862204E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999951111403202	WITHOUT_CLASSIFICATION	4.8888596797862204E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998340411043736	WITHOUT_CLASSIFICATION	1.6595889562645002E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999225799151589	WITHOUT_CLASSIFICATION	7.742008484114114E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999751101481664	WITHOUT_CLASSIFICATION	2.4889851833636525E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999751157335242	WITHOUT_CLASSIFICATION	2.4884266475791293E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999751101481664	WITHOUT_CLASSIFICATION	2.4889851833636525E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999752191972949	WITHOUT_CLASSIFICATION	2.4780802705074464E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999216513384208	WITHOUT_CLASSIFICATION	7.834866157912643E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999444960231698	WITHOUT_CLASSIFICATION	5.55039768301054E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998147725220996	WITHOUT_CLASSIFICATION	1.8522747790033827E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999508592531424	WITHOUT_CLASSIFICATION	4.9140746857652167E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9992958453137026	WITHOUT_CLASSIFICATION	7.041546862974071E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.999987641284197	WITHOUT_CLASSIFICATION	1.2358715802987542E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999657467396672	WITHOUT_CLASSIFICATION	3.425326033282888E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.99839222970305	WITHOUT_CLASSIFICATION	0.0016077702969500448	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9998553254690947	WITHOUT_CLASSIFICATION	1.4467453090532715E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999978613297996	WITHOUT_CLASSIFICATION	2.138670200300092E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.999867820041655	WITHOUT_CLASSIFICATION	1.3217995834497262E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9998789302847259	WITHOUT_CLASSIFICATION	1.2106971527406313E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9993780656233417	WITHOUT_CLASSIFICATION	6.21934376658331E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9989080449551923	WITHOUT_CLASSIFICATION	0.0010919550448077618	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9996964303712192	WITHOUT_CLASSIFICATION	3.0356962878076927E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9978460047608473	WITHOUT_CLASSIFICATION	0.0021539952391527	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9980269999598453	WITHOUT_CLASSIFICATION	0.001973000040154652	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998184054220212	WITHOUT_CLASSIFICATION	1.8159457797877526E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999495262159852	WITHOUT_CLASSIFICATION	5.047378401484134E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9997958347604563	WITHOUT_CLASSIFICATION	2.0416523954362508E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999859922266703	WITHOUT_CLASSIFICATION	1.400777332964671E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999958006749284	WITHOUT_CLASSIFICATION	4.199325071600214E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999643268049695	WITHOUT_CLASSIFICATION	3.567319503050854E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998056855141824	WITHOUT_CLASSIFICATION	1.9431448581756208E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999754520544339	WITHOUT_CLASSIFICATION	2.454794556615448E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999754520544339	WITHOUT_CLASSIFICATION	2.454794556615448E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999996194806638	WITHOUT_CLASSIFICATION	3.805193362033495E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9996540729407116	WITHOUT_CLASSIFICATION	3.4592705928842974E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9993628934552371	WITHOUT_CLASSIFICATION	6.371065447628191E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997864782872444	WITHOUT_CLASSIFICATION	2.1352171275555945E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998837992151256	WITHOUT_CLASSIFICATION	1.16200784874483E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9979203169901946	WITHOUT_CLASSIFICATION	0.0020796830098054513	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9992128154748823	WITHOUT_CLASSIFICATION	7.871845251177729E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998938877246429	WITHOUT_CLASSIFICATION	1.061122753569662E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.999921777498819	WITHOUT_CLASSIFICATION	7.822250118094802E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998056855141824	WITHOUT_CLASSIFICATION	1.9431448581756208E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999060935788363	WITHOUT_CLASSIFICATION	9.390642116371E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999451724937574	WITHOUT_CLASSIFICATION	5.482750624268373E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999698142246735	WITHOUT_CLASSIFICATION	3.0185775326571852E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998325198949631	WITHOUT_CLASSIFICATION	1.6748010503691278E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999840660408746	WITHOUT_CLASSIFICATION	1.5933959125348213E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996464592378914	WITHOUT_CLASSIFICATION	3.5354076210851503E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999368058914483	WITHOUT_CLASSIFICATION	6.31941085516849E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999662285138412	WITHOUT_CLASSIFICATION	3.377148615886696E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998734907788032	WITHOUT_CLASSIFICATION	1.2650922119679132E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9887980062802152	WITHOUT_CLASSIFICATION	0.011201993719784859	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999486583900871	WITHOUT_CLASSIFICATION	5.1341609912886765E-5	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999437967914496	WITHOUT_CLASSIFICATION	5.620320855033975E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996411983989393	WITHOUT_CLASSIFICATION	3.588016010607528E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999691240251658	WITHOUT_CLASSIFICATION	3.0875974834204E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999059221605113	WITHOUT_CLASSIFICATION	9.407783948873828E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999126229912378	WITHOUT_CLASSIFICATION	8.737700876219153E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999904269870981	WITHOUT_CLASSIFICATION	9.57301290189758E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998809662852647	WITHOUT_CLASSIFICATION	1.190337147353858E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9994396107506913	WITHOUT_CLASSIFICATION	5.603892493087035E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9988006133680998	WITHOUT_CLASSIFICATION	0.0011993866319002118	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999406211827648	WITHOUT_CLASSIFICATION	5.9378817235117645E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.99987051250729	WITHOUT_CLASSIFICATION	1.294874927100234E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9994178270534885	WITHOUT_CLASSIFICATION	5.82172946511556E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999708745670265	WITHOUT_CLASSIFICATION	2.9125432973501204E-4	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999793386851705	WITHOUT_CLASSIFICATION	2.066131482949514E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999729905971109	WITHOUT_CLASSIFICATION	2.7009402889171E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999711472700671	WITHOUT_CLASSIFICATION	2.8852729932960017E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997305221355584	WITHOUT_CLASSIFICATION	2.694778644416038E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997545808336546	WITHOUT_CLASSIFICATION	2.4541916634538867E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999639351397339	WITHOUT_CLASSIFICATION	3.606486026615831E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9993771095092663	WITHOUT_CLASSIFICATION	6.228904907336606E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999440853747802	WITHOUT_CLASSIFICATION	5.591462521976428E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999294536749755	WITHOUT_CLASSIFICATION	7.054632502437457E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999943723554708	WITHOUT_CLASSIFICATION	5.627644529213132E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999379002221161	WITHOUT_CLASSIFICATION	6.209977788382714E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999285111589451	WITHOUT_CLASSIFICATION	7.148884105490128E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9954939905104855	WITHOUT_CLASSIFICATION	0.004506009489514586	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999533056915099	WITHOUT_CLASSIFICATION	4.669430849003006E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998789440072693	WITHOUT_CLASSIFICATION	1.2105599273067197E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429185724006	WITHOUT_CLASSIFICATION	5.708142759932912E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998789524084486	WITHOUT_CLASSIFICATION	0.001210475915513991	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999938871656072	WITHOUT_CLASSIFICATION	6.112834392798952E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999438255694413	WITHOUT_CLASSIFICATION	5.617443055878322E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999448090201037	WITHOUT_CLASSIFICATION	5.519097989633271E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996948940917875	WITHOUT_CLASSIFICATION	3.0510590821262236E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999405637250987	WITHOUT_CLASSIFICATION	5.9436274901306096E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982653953773841	WITHOUT_CLASSIFICATION	0.0017346046226158977	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997192761863567	WITHOUT_CLASSIFICATION	2.8072381364324087E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987489952735437	WITHOUT_CLASSIFICATION	0.0012510047264563207	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999412237313864	WITHOUT_CLASSIFICATION	5.8776268613525196E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999277967948762	WITHOUT_CLASSIFICATION	7.220320512381772E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986133619462401	WITHOUT_CLASSIFICATION	0.0013866380537598715	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994407453265822	WITHOUT_CLASSIFICATION	5.592546734176379E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985579488843055	WITHOUT_CLASSIFICATION	0.0014420511156945177	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986999802967603	WITHOUT_CLASSIFICATION	0.0013000197032397116	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992663298222451	WITHOUT_CLASSIFICATION	7.336701777549182E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994076288625149	WITHOUT_CLASSIFICATION	5.92371137484998E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986999802967603	WITHOUT_CLASSIFICATION	0.0013000197032397116	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983807642993707	WITHOUT_CLASSIFICATION	0.0016192357006292984	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982971129091173	WITHOUT_CLASSIFICATION	0.0017028870908826958	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997522282124884	WITHOUT_CLASSIFICATION	2.4777178751156283E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.994683495926201	WITHOUT_CLASSIFICATION	0.005316504073798957	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985575148765794	WITHOUT_CLASSIFICATION	0.001442485123420625	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999946352916553	WITHOUT_CLASSIFICATION	5.364708344707345E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987489952735437	WITHOUT_CLASSIFICATION	0.0012510047264563207	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998605957915665	WITHOUT_CLASSIFICATION	1.394042084335523E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999635456723666	WITHOUT_CLASSIFICATION	3.64543276335118E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979312307039179	WITHOUT_CLASSIFICATION	0.0020687692960820125	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986501119244447	WITHOUT_CLASSIFICATION	0.0013498880755552932	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998188274815825	WITHOUT_CLASSIFICATION	1.8117251841760792E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999440029424447	WITHOUT_CLASSIFICATION	5.599705755531209E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736802233977	WITHOUT_CLASSIFICATION	2.6319776602374923E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992663298222451	WITHOUT_CLASSIFICATION	7.336701777549182E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999407917518374	WITHOUT_CLASSIFICATION	5.920824816264433E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995665814331689	WITHOUT_CLASSIFICATION	4.3341856683117876E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999533056915099	WITHOUT_CLASSIFICATION	4.669430849003006E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999533056915099	WITHOUT_CLASSIFICATION	4.669430849003006E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998687215018613	WITHOUT_CLASSIFICATION	1.3127849813864695E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983746165493118	WITHOUT_CLASSIFICATION	0.0016253834506881554	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995665814331689	WITHOUT_CLASSIFICATION	4.3341856683117876E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9968693891053184	WITHOUT_CLASSIFICATION	0.003130610894681598	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988006192219243	WITHOUT_CLASSIFICATION	0.0011993807780756804	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988287943388493	WITHOUT_CLASSIFICATION	0.0011712056611507668	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9898661077183806	WITHOUT_CLASSIFICATION	0.010133892281619542	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998898096363652	WITHOUT_CLASSIFICATION	0.0011019036363479453	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985575148765794	WITHOUT_CLASSIFICATION	0.001442485123420625	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985575148765794	WITHOUT_CLASSIFICATION	0.001442485123420625	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995031224537739	WITHOUT_CLASSIFICATION	4.96877546226122E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9954939905104855	WITHOUT_CLASSIFICATION	0.0045060094895145834	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987489952735437	WITHOUT_CLASSIFICATION	0.001251004726456321	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984652571086116	WITHOUT_CLASSIFICATION	0.001534742891388466	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999416405790187	WITHOUT_CLASSIFICATION	5.8359420981229946E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993429617755637	WITHOUT_CLASSIFICATION	6.57038224436253E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999882209473755	WITHOUT_CLASSIFICATION	1.1779052624500688E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995031224537739	WITHOUT_CLASSIFICATION	4.96877546226122E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999473106881523	WITHOUT_CLASSIFICATION	5.26893118476772E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998835133971162	WITHOUT_CLASSIFICATION	1.1648660288378339E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999430698128758	WITHOUT_CLASSIFICATION	5.693018712418404E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993786133996886	WITHOUT_CLASSIFICATION	6.213866003114045E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999498583790256	WITHOUT_CLASSIFICATION	5.014162097435347E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993786133996886	WITHOUT_CLASSIFICATION	6.213866003114045E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999439884829214	WITHOUT_CLASSIFICATION	5.6011517078638245E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999832901232098	WITHOUT_CLASSIFICATION	1.670987679020717E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986231831660655	WITHOUT_CLASSIFICATION	0.0013768168339346194	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998825510612948	WITHOUT_CLASSIFICATION	1.1744893870529789E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999277967948762	WITHOUT_CLASSIFICATION	7.220320512381772E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999448998526985	WITHOUT_CLASSIFICATION	5.5100147301470715E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999388532330956	WITHOUT_CLASSIFICATION	6.114676690436351E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999421729956033	WITHOUT_CLASSIFICATION	5.78270043967926E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998532475071897	WITHOUT_CLASSIFICATION	1.467524928102008E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993786133996886	WITHOUT_CLASSIFICATION	6.213866003114045E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999421729956033	WITHOUT_CLASSIFICATION	5.78270043967926E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988507254372759	WITHOUT_CLASSIFICATION	0.00114927456272407	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9983386544365301	WITHOUT_CLASSIFICATION	0.0016613455634698425	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998340411043736	WITHOUT_CLASSIFICATION	1.6595889562645002E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999620810505176	WITHOUT_CLASSIFICATION	3.791894948223556E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999807917155503	WITHOUT_CLASSIFICATION	1.9208284449738452E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999238364621804	WITHOUT_CLASSIFICATION	7.616353781957766E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999364676403619	WITHOUT_CLASSIFICATION	6.35323596380588E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999711285158237	WITHOUT_CLASSIFICATION	2.8871484176324307E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9998566069714606	WITHOUT_CLASSIFICATION	1.4339302853944423E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999313485913399	WITHOUT_CLASSIFICATION	6.865140866010833E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999225799151589	WITHOUT_CLASSIFICATION	7.742008484114114E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999831445312884	WITHOUT_CLASSIFICATION	1.6855468711555598E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999831445312884	WITHOUT_CLASSIFICATION	1.6855468711555598E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999062932915292	WITHOUT_CLASSIFICATION	9.370670847066984E-5	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.999997169537203	WITHOUT_CLASSIFICATION	2.8304627971282775E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9997615355918479	WITHOUT_CLASSIFICATION	2.3846440815221808E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999147977435521	WITHOUT_CLASSIFICATION	8.520225644792511E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999594682775425	WITHOUT_CLASSIFICATION	4.0531722457633406E-5	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.999938685795333	WITHOUT_CLASSIFICATION	6.131420466712707E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999075485416203	WITHOUT_CLASSIFICATION	9.245145837961442E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999366027583496	WITHOUT_CLASSIFICATION	6.339724165041359E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999768326644242	WITHOUT_CLASSIFICATION	2.3167335575727535E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999596976983123	WITHOUT_CLASSIFICATION	4.030230168781839E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999956060635234	WITHOUT_CLASSIFICATION	4.39393647652328E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999466298039327	WITHOUT_CLASSIFICATION	5.3370196067326395E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999681226325364	WITHOUT_CLASSIFICATION	3.187736746351172E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999980135970322	WITHOUT_CLASSIFICATION	1.986402967829954E-6	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9989692919703641	WITHOUT_CLASSIFICATION	0.0010307080296358467	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.999817567148088	WITHOUT_CLASSIFICATION	1.824328519119511E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999665393827432	WITHOUT_CLASSIFICATION	3.346061725679728E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9998783303836488	WITHOUT_CLASSIFICATION	1.2166961635107076E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999354613919921	WITHOUT_CLASSIFICATION	6.453860800786176E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.999930715524949	WITHOUT_CLASSIFICATION	6.928447505090623E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.999439658000976	WITHOUT_CLASSIFICATION	5.603419990240679E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9997664223808739	WITHOUT_CLASSIFICATION	2.3357761912609284E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9995898111770549	WITHOUT_CLASSIFICATION	4.1018882294507317E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998733121410093	WITHOUT_CLASSIFICATION	1.2668785899071184E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9996773428610309	WITHOUT_CLASSIFICATION	3.2265713896900586E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998865948039143	WITHOUT_CLASSIFICATION	1.1340519608571455E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999224437867131	WITHOUT_CLASSIFICATION	7.755621328696231E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999613122192914	WITHOUT_CLASSIFICATION	3.8687780708634565E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999613122192914	WITHOUT_CLASSIFICATION	3.8687780708634565E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999692589363051	WITHOUT_CLASSIFICATION	3.0741063694807156E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999990994188215	WITHOUT_CLASSIFICATION	9.005811784297705E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9998980291850764	WITHOUT_CLASSIFICATION	1.0197081492346753E-4	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999184231204675	WITHOUT_CLASSIFICATION	8.157687953246459E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999798418345175	WITHOUT_CLASSIFICATION	2.0158165482542592E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999800978547886	WITHOUT_CLASSIFICATION	1.9902145211387924E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999747655586902	WITHOUT_CLASSIFICATION	2.5234441309704718E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999880673719744	WITHOUT_CLASSIFICATION	1.1932628025454431E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999859815887165	WITHOUT_CLASSIFICATION	1.4018411283521824E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.999884377202039	WITHOUT_CLASSIFICATION	1.1562279796092552E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.999884377202039	WITHOUT_CLASSIFICATION	1.1562279796092552E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.999234399713012	WITHOUT_CLASSIFICATION	7.656002869879679E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.999234399713012	WITHOUT_CLASSIFICATION	7.656002869879679E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999621732794501	WITHOUT_CLASSIFICATION	3.7826720549976016E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999803742227519	WITHOUT_CLASSIFICATION	1.9625777248119496E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999494975884352	WITHOUT_CLASSIFICATION	5.0502411564912296E-5	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999919353513221	WITHOUT_CLASSIFICATION	8.064648677948126E-6	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.999581114637022	WITHOUT_CLASSIFICATION	4.188853629780189E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9998882135554754	WITHOUT_CLASSIFICATION	1.1178644452458253E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999808376849182	WITHOUT_CLASSIFICATION	1.9162315081911415E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999904348758151	WITHOUT_CLASSIFICATION	9.565124184907853E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9903221670554595	WITHOUT_CLASSIFICATION	0.009677832944540459	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.999931017480404	WITHOUT_CLASSIFICATION	6.898251959593027E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998675692336972	WITHOUT_CLASSIFICATION	1.3243076630282304E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999889256055426	WITHOUT_CLASSIFICATION	1.10743944574823E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999019581456007	WITHOUT_CLASSIFICATION	9.804185439938878E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999957740711707	WITHOUT_CLASSIFICATION	4.2259288293349125E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999986634349362	WITHOUT_CLASSIFICATION	1.3365650638042583E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9998759571807008	WITHOUT_CLASSIFICATION	1.2404281929912544E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999177534608358	WITHOUT_CLASSIFICATION	8.224653916423626E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9998470870379882	WITHOUT_CLASSIFICATION	1.5291296201173232E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9973302413074631	WITHOUT_CLASSIFICATION	0.0026697586925368993	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.999777195256965	WITHOUT_CLASSIFICATION	2.2280474303507962E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9995220304950077	WITHOUT_CLASSIFICATION	4.779695049923947E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9997410052784269	WITHOUT_CLASSIFICATION	2.589947215730919E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999689583904717	WITHOUT_CLASSIFICATION	3.104160952821229E-5	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.999848514118818	WITHOUT_CLASSIFICATION	1.514858811820288E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999921570557591	WITHOUT_CLASSIFICATION	7.842944240989669E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9991651131684915	WITHOUT_CLASSIFICATION	8.348868315084045E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999501571399568	WITHOUT_CLASSIFICATION	4.984286004322391E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998903366820134	WITHOUT_CLASSIFICATION	1.0966331798657919E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998903366820134	WITHOUT_CLASSIFICATION	1.0966331798657919E-4	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999409531356238	WITHOUT_CLASSIFICATION	5.9046864376139204E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9996737703893526	WITHOUT_CLASSIFICATION	3.2622961064734886E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9997140599425207	WITHOUT_CLASSIFICATION	2.859400574793518E-4	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997958411238221	WITHOUT_CLASSIFICATION	2.041588761778849E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999438347103148	WITHOUT_CLASSIFICATION	5.616528968521634E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9998893567137547	WITHOUT_CLASSIFICATION	1.1064328624538738E-4	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999061956632225	WITHOUT_CLASSIFICATION	9.38043367775015E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998943350321671	WITHOUT_CLASSIFICATION	1.0566496783296307E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9991651131684915	WITHOUT_CLASSIFICATION	8.348868315084045E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996383466605783	WITHOUT_CLASSIFICATION	3.616533394217333E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999788483541284	WITHOUT_CLASSIFICATION	2.115164587150778E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9998969509178095	WITHOUT_CLASSIFICATION	1.030490821905695E-4	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.997425143805625	WITHOUT_CLASSIFICATION	0.0025748561943750576	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999343704904363	WITHOUT_CLASSIFICATION	6.56295095636193E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999621641578638	WITHOUT_CLASSIFICATION	3.783584213632227E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9998948366145428	WITHOUT_CLASSIFICATION	1.0516338545722427E-4	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999154974903148	WITHOUT_CLASSIFICATION	8.450250968515946E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999657567869173	WITHOUT_CLASSIFICATION	3.4243213082632984E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.999950729790539	WITHOUT_CLASSIFICATION	4.9270209460880614E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999421538786446	WITHOUT_CLASSIFICATION	5.78461213553342E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999603102682686	WITHOUT_CLASSIFICATION	3.9689731731432274E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999668229794749	WITHOUT_CLASSIFICATION	3.317702052512474E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999903977046284	WITHOUT_CLASSIFICATION	9.602295371596323E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9974829016677079	WITHOUT_CLASSIFICATION	0.00251709833229201	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9994424628281511	WITHOUT_CLASSIFICATION	5.575371718488917E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999900994161951	WITHOUT_CLASSIFICATION	9.900583804922438E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9998992024839903	WITHOUT_CLASSIFICATION	1.0079751600971715E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999115310793183	WITHOUT_CLASSIFICATION	8.846892068178719E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998555858455531	WITHOUT_CLASSIFICATION	1.4441415444693364E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999758160678373	WITHOUT_CLASSIFICATION	2.4183932162788682E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999229922487434	WITHOUT_CLASSIFICATION	7.700775125661086E-5	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999163768506705	WITHOUT_CLASSIFICATION	8.36231493296099E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999918239278338	WITHOUT_CLASSIFICATION	8.176072166200132E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9998948366145428	WITHOUT_CLASSIFICATION	1.0516338545722427E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9997793164944814	WITHOUT_CLASSIFICATION	2.2068350551862883E-4	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9997753215969976	WITHOUT_CLASSIFICATION	2.2467840300235958E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9998680035732171	WITHOUT_CLASSIFICATION	1.3199642678282726E-4	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9293122993222349	WITHOUT_CLASSIFICATION	0.07068770067776511	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.999518037670116	WITHOUT_CLASSIFICATION	4.8196232988395485E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9961356595858466	WITHOUT_CLASSIFICATION	0.003864340414153465	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9998031274846836	WITHOUT_CLASSIFICATION	1.9687251531629146E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9997995425719424	WITHOUT_CLASSIFICATION	2.004574280576186E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9995853460714492	WITHOUT_CLASSIFICATION	4.146539285508346E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999635955355247	WITHOUT_CLASSIFICATION	3.640446447526736E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999392161236811	WITHOUT_CLASSIFICATION	6.0783876318936196E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999392161236811	WITHOUT_CLASSIFICATION	6.0783876318936196E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999213765331741	WITHOUT_CLASSIFICATION	7.862346682581056E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9997841827674817	WITHOUT_CLASSIFICATION	2.1581723251821403E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999298910891186	WITHOUT_CLASSIFICATION	7.010891088137894E-5	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999376719691243	WITHOUT_CLASSIFICATION	6.232803087565097E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999598051868291	WITHOUT_CLASSIFICATION	4.01948131707922E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999174041717565	WITHOUT_CLASSIFICATION	8.259582824354477E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999212922653462	WITHOUT_CLASSIFICATION	7.870773465373005E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.999877984709775	WITHOUT_CLASSIFICATION	1.2201529022506358E-4	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9995740117634246	WITHOUT_CLASSIFICATION	4.259882365752981E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999445236151265	WITHOUT_CLASSIFICATION	5.547638487343004E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999739174677944	WITHOUT_CLASSIFICATION	2.6082532205536465E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.999234399713012	WITHOUT_CLASSIFICATION	7.656002869879679E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999808376849182	WITHOUT_CLASSIFICATION	1.9162315081911415E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999598051868291	WITHOUT_CLASSIFICATION	4.01948131707922E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999174041717565	WITHOUT_CLASSIFICATION	8.259582824354477E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999336903132441	WITHOUT_CLASSIFICATION	6.630968675596223E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.999993429458238	WITHOUT_CLASSIFICATION	6.570541762072347E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999186975075484	WITHOUT_CLASSIFICATION	8.130249245171365E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9974121424991683	WITHOUT_CLASSIFICATION	0.002587857500831746	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9931945453152095	WITHOUT_CLASSIFICATION	0.0068054546847906155	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9998635045627816	WITHOUT_CLASSIFICATION	1.3649543721839415E-4	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9984729466729205	WITHOUT_CLASSIFICATION	0.0015270533270794803	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9997936176748157	WITHOUT_CLASSIFICATION	2.0638232518432946E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.999911585180692	WITHOUT_CLASSIFICATION	8.841481930797831E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9990883792574218	WITHOUT_CLASSIFICATION	9.116207425781806E-4	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9996406649334216	WITHOUT_CLASSIFICATION	3.5933506657833195E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994290485918765	WITHOUT_CLASSIFICATION	5.709514081234902E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999182680553856	WITHOUT_CLASSIFICATION	8.17319446144202E-5	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9992952819833123	WITHOUT_CLASSIFICATION	7.047180166877176E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999890363797276	WITHOUT_CLASSIFICATION	1.0963620272333289E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994290485918765	WITHOUT_CLASSIFICATION	5.709514081234902E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994290485918765	WITHOUT_CLASSIFICATION	5.709514081234902E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9994290485918765	WITHOUT_CLASSIFICATION	5.709514081234902E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9995939130897227	WITHOUT_CLASSIFICATION	4.0608691027725575E-4	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999696674504472	WITHOUT_CLASSIFICATION	3.0332549552667557E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9998944524793474	WITHOUT_CLASSIFICATION	1.0554752065253568E-4	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999815342981271	WITHOUT_CLASSIFICATION	1.8465701872893457E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9998587591455095	WITHOUT_CLASSIFICATION	1.4124085449052502E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999770653071672	WITHOUT_CLASSIFICATION	2.293469283278089E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.998911738341598	WITHOUT_CLASSIFICATION	0.0010882616584021348	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999683590365498	WITHOUT_CLASSIFICATION	3.1640963450151096E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999947201736619	WITHOUT_CLASSIFICATION	5.279826338101208E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9998948830767574	WITHOUT_CLASSIFICATION	1.0511692324256107E-4	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9997722480340058	WITHOUT_CLASSIFICATION	2.2775196599415624E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.999899820089759	WITHOUT_CLASSIFICATION	1.0017991024107932E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999717555456581	WITHOUT_CLASSIFICATION	2.824445434184588E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999993316372741	WITHOUT_CLASSIFICATION	6.683627259221837E-7	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999313984431839	WITHOUT_CLASSIFICATION	6.86015568160746E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999686864654699	WITHOUT_CLASSIFICATION	3.1313534530027774E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9981754721126495	WITHOUT_CLASSIFICATION	0.0018245278873505848	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998029240400842	WITHOUT_CLASSIFICATION	1.9707595991591532E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997201735189483	WITHOUT_CLASSIFICATION	2.7982648105173333E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999809430948851	WITHOUT_CLASSIFICATION	1.905690511490197E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999809430948851	WITHOUT_CLASSIFICATION	1.905690511490197E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9996686504002662	WITHOUT_CLASSIFICATION	3.313495997337983E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.8140804619780905	WITHOUT_CLASSIFICATION	0.18591953802190958	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.999896196710148	WITHOUT_CLASSIFICATION	1.0380328985211923E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9509569232584854	WITHOUT_CLASSIFICATION	0.049043076741514535	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999554461113163	WITHOUT_CLASSIFICATION	4.455388868364557E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999936036861497	WITHOUT_CLASSIFICATION	6.396313850298386E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999511250961198	WITHOUT_CLASSIFICATION	4.887490388026371E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999257550701541	WITHOUT_CLASSIFICATION	7.424492984588343E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999873092120755	WITHOUT_CLASSIFICATION	1.2690787924617301E-5	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9994349865658451	WITHOUT_CLASSIFICATION	5.650134341550438E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999944988207689	WITHOUT_CLASSIFICATION	5.501179231163145E-6	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999760409663992	WITHOUT_CLASSIFICATION	2.395903360076565E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999754760426018	WITHOUT_CLASSIFICATION	2.4523957398064177E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999167598886972	WITHOUT_CLASSIFICATION	8.324011130268848E-5	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999790031188968	WITHOUT_CLASSIFICATION	2.099688110331005E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999083427863183	WITHOUT_CLASSIFICATION	9.165721368162768E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999694201193159	WITHOUT_CLASSIFICATION	3.057988068405814E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999882922806552	WITHOUT_CLASSIFICATION	1.1707719344841506E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9998669900165383	WITHOUT_CLASSIFICATION	1.330099834616223E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9998055873503531	WITHOUT_CLASSIFICATION	1.9441264964696283E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999664830765359	WITHOUT_CLASSIFICATION	3.3516923464065256E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999881091646922	WITHOUT_CLASSIFICATION	1.1890835307812146E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.99974139556466	WITHOUT_CLASSIFICATION	2.5860443533989424E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.99974139556466	WITHOUT_CLASSIFICATION	2.5860443533989424E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.999517785666892	WITHOUT_CLASSIFICATION	4.82214333107969E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.999517785666892	WITHOUT_CLASSIFICATION	4.82214333107969E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999923567781226	WITHOUT_CLASSIFICATION	7.643221877444331E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9990379599562267	WITHOUT_CLASSIFICATION	9.620400437731885E-4	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.999989972406902	WITHOUT_CLASSIFICATION	1.0027593097909068E-5	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999474508000815	WITHOUT_CLASSIFICATION	5.254919991856873E-5	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999888560293175	WITHOUT_CLASSIFICATION	1.1143970682542959E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999435005265438	WITHOUT_CLASSIFICATION	5.649947345621631E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999598730522388	WITHOUT_CLASSIFICATION	4.0126947761258446E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9992849116151722	WITHOUT_CLASSIFICATION	7.150883848279317E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.998833146217783	WITHOUT_CLASSIFICATION	0.00116685378221705	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999104526347299	WITHOUT_CLASSIFICATION	8.954736527005555E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.99992565395497	WITHOUT_CLASSIFICATION	7.434604503001608E-5	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9992997898379312	WITHOUT_CLASSIFICATION	7.002101620688689E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9992746288807497	WITHOUT_CLASSIFICATION	7.253711192503475E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999965026452357	WITHOUT_CLASSIFICATION	3.4973547642355946E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999133083335602	WITHOUT_CLASSIFICATION	8.669166643974982E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.999805604646673	WITHOUT_CLASSIFICATION	1.943953533271268E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999482275484287	WITHOUT_CLASSIFICATION	5.177245157123845E-5	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999492363168719	WITHOUT_CLASSIFICATION	5.0763683128028566E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999200175221182	WITHOUT_CLASSIFICATION	7.998247788174192E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999067354895931	WITHOUT_CLASSIFICATION	9.326451040697594E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9998758294364276	WITHOUT_CLASSIFICATION	1.2417056357242568E-4	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9998982606818595	WITHOUT_CLASSIFICATION	1.0173931814055864E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999594194661564	WITHOUT_CLASSIFICATION	4.058053384353633E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9991042709602193	WITHOUT_CLASSIFICATION	8.957290397808605E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9998793607650319	WITHOUT_CLASSIFICATION	1.2063923496807014E-4	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.999983636304811	WITHOUT_CLASSIFICATION	1.6363695189053654E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999557913548113	WITHOUT_CLASSIFICATION	4.420864518876447E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9997666380382773	WITHOUT_CLASSIFICATION	2.3336196172281363E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9895782813688585	WITHOUT_CLASSIFICATION	0.01042171863114144	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9992200279059292	WITHOUT_CLASSIFICATION	7.799720940707444E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999831445312884	WITHOUT_CLASSIFICATION	1.6855468711555598E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9992023682043616	WITHOUT_CLASSIFICATION	7.976317956384574E-4	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999991536463392	WITHOUT_CLASSIFICATION	8.463536608913878E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9997229118691383	WITHOUT_CLASSIFICATION	2.770881308617174E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9995770482095445	WITHOUT_CLASSIFICATION	4.22951790455503E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999301907744674	WITHOUT_CLASSIFICATION	6.980922553254493E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998979196533795	WITHOUT_CLASSIFICATION	1.0208034662059336E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9998964994315417	WITHOUT_CLASSIFICATION	1.0350056845832358E-4	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999712067830916	WITHOUT_CLASSIFICATION	2.8793216908417206E-5	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9998245365277543	WITHOUT_CLASSIFICATION	1.7546347224565228E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9852882145751517	WITHOUT_CLASSIFICATION	0.014711785424848389	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999838525208876	WITHOUT_CLASSIFICATION	1.6147479112377037E-5	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.999837040495972	WITHOUT_CLASSIFICATION	1.6295950402793753E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9683599211743585	WITHOUT_CLASSIFICATION	0.03164007882564145	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9996552183815292	WITHOUT_CLASSIFICATION	3.4478161847080967E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.999310801771855	WITHOUT_CLASSIFICATION	6.891982281449933E-4	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9989567910762077	WITHOUT_CLASSIFICATION	0.0010432089237922227	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9996848886746085	WITHOUT_CLASSIFICATION	3.151113253915804E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9996115506064436	WITHOUT_CLASSIFICATION	3.884493935564082E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999916668715858	WITHOUT_CLASSIFICATION	8.333128414127381E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999955916691605	WITHOUT_CLASSIFICATION	4.408330839431993E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999639781904257	WITHOUT_CLASSIFICATION	3.602180957430833E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.999933627000875	WITHOUT_CLASSIFICATION	6.637299912500935E-5	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9998899376073209	WITHOUT_CLASSIFICATION	1.1006239267913963E-4	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999870987033586	WITHOUT_CLASSIFICATION	1.2901296641358269E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9996884045593981	WITHOUT_CLASSIFICATION	3.1159544060177535E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999921275851454	WITHOUT_CLASSIFICATION	7.872414854592475E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.999997744044405	WITHOUT_CLASSIFICATION	2.2559555950075336E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999889304211824	WITHOUT_CLASSIFICATION	1.1069578817459815E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999144666970258	WITHOUT_CLASSIFICATION	8.553330297417797E-5	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.999968853815796	WITHOUT_CLASSIFICATION	3.114618420396505E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999180948360039	WITHOUT_CLASSIFICATION	8.190516399604276E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999682257882203	WITHOUT_CLASSIFICATION	3.1774211779751475E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9998167247551388	WITHOUT_CLASSIFICATION	1.8327524486113007E-4	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999956995320416	WITHOUT_CLASSIFICATION	4.300467958471897E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999680389617077	WITHOUT_CLASSIFICATION	3.1961038292254067E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999784839514974	WITHOUT_CLASSIFICATION	2.151604850270021E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9996038463294419	WITHOUT_CLASSIFICATION	3.961536705582038E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9996038463294419	WITHOUT_CLASSIFICATION	3.961536705582038E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9997291456485273	WITHOUT_CLASSIFICATION	2.7085435147272604E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9924505248033606	WITHOUT_CLASSIFICATION	0.007549475196639382	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9998660769165975	WITHOUT_CLASSIFICATION	1.339230834026138E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999122917544633	WITHOUT_CLASSIFICATION	8.77082455367123E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999453666095384	WITHOUT_CLASSIFICATION	5.4633390461608755E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999666370510206	WITHOUT_CLASSIFICATION	3.3362948979362855E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998770330697229	WITHOUT_CLASSIFICATION	1.2296693027711108E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999280705587232	WITHOUT_CLASSIFICATION	7.192944127681857E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999280705587232	WITHOUT_CLASSIFICATION	7.192944127681857E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999202237853926	WITHOUT_CLASSIFICATION	7.977621460738236E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999375491689791	WITHOUT_CLASSIFICATION	6.245083102078386E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9998945787471785	WITHOUT_CLASSIFICATION	1.0542125282148397E-4	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999437132675941	WITHOUT_CLASSIFICATION	5.6286732405902164E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.999608589477712	WITHOUT_CLASSIFICATION	3.914105222880568E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999828706178466	WITHOUT_CLASSIFICATION	1.7129382153371575E-5	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.999829618090723	WITHOUT_CLASSIFICATION	1.7038190927708038E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999995154568545	WITHOUT_CLASSIFICATION	4.845431455714109E-7	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999390381591561	WITHOUT_CLASSIFICATION	6.09618408440215E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999829803294703	WITHOUT_CLASSIFICATION	1.7019670529776388E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9997385437760103	WITHOUT_CLASSIFICATION	2.6145622398967763E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.999944845088062	WITHOUT_CLASSIFICATION	5.515491193790597E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9982148078191946	WITHOUT_CLASSIFICATION	0.0017851921808053855	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999529574905629	WITHOUT_CLASSIFICATION	4.7042509437227274E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.995496549755892	WITHOUT_CLASSIFICATION	0.0045034502441080445	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9996906092763496	WITHOUT_CLASSIFICATION	3.093907236505112E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999921681516828	WITHOUT_CLASSIFICATION	7.83184831729327E-6	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999747919210612	WITHOUT_CLASSIFICATION	2.5208078938838955E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9993442713722633	WITHOUT_CLASSIFICATION	6.557286277366623E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999430318295062	WITHOUT_CLASSIFICATION	5.696817049387534E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999464643421124	WITHOUT_CLASSIFICATION	5.353565788768423E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999748155458908	WITHOUT_CLASSIFICATION	2.5184454109191512E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.999989248193301	WITHOUT_CLASSIFICATION	1.0751806698958461E-5	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999744504125883	WITHOUT_CLASSIFICATION	2.554958741177504E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9998501076791667	WITHOUT_CLASSIFICATION	1.4989232083320952E-4	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.999282623720442	WITHOUT_CLASSIFICATION	7.173762795580424E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999839104774255	WITHOUT_CLASSIFICATION	1.6089522574533428E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9962836387542682	WITHOUT_CLASSIFICATION	0.0037163612457317046	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9998066053272812	WITHOUT_CLASSIFICATION	1.933946727188197E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999974506319663	WITHOUT_CLASSIFICATION	2.5493680336359257E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999772733360078	WITHOUT_CLASSIFICATION	2.2726663992182992E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999733945235693	WITHOUT_CLASSIFICATION	2.6605476430772228E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.999657605224641	WITHOUT_CLASSIFICATION	3.4239477535911235E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999522971612285	WITHOUT_CLASSIFICATION	4.7702838771428925E-5	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999917631322102	WITHOUT_CLASSIFICATION	8.236867789881898E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999423158736281	WITHOUT_CLASSIFICATION	5.768412637182972E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999395817807903	WITHOUT_CLASSIFICATION	6.0418219209606E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999517433198364	WITHOUT_CLASSIFICATION	4.825668016349206E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999895545067101	WITHOUT_CLASSIFICATION	1.044549328995097E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9893451691216443	WITHOUT_CLASSIFICATION	0.010654830878355618	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.99978306710095	WITHOUT_CLASSIFICATION	2.1693289904996287E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9997786616230423	WITHOUT_CLASSIFICATION	2.2133837695756294E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9998685381087027	WITHOUT_CLASSIFICATION	1.314618912973058E-4	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9997455270712031	WITHOUT_CLASSIFICATION	2.5447292879682536E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9998668522603087	WITHOUT_CLASSIFICATION	1.3314773969132798E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.999739200460306	WITHOUT_CLASSIFICATION	2.607995396939813E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998666631497899	WITHOUT_CLASSIFICATION	1.333368502100507E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998666631497899	WITHOUT_CLASSIFICATION	1.333368502100507E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997062925521789	WITHOUT_CLASSIFICATION	2.937074478210677E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997062925521789	WITHOUT_CLASSIFICATION	2.937074478210677E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999890363797276	WITHOUT_CLASSIFICATION	1.0963620272333289E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997201735189483	WITHOUT_CLASSIFICATION	2.7982648105173333E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999809430948851	WITHOUT_CLASSIFICATION	1.905690511490197E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999809430948851	WITHOUT_CLASSIFICATION	1.905690511490197E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999826574815697	WITHOUT_CLASSIFICATION	1.7342518430345268E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999801614216384	WITHOUT_CLASSIFICATION	1.9838578361636465E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9982609835839013	WITHOUT_CLASSIFICATION	0.001739016416098802	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.999940529688866	WITHOUT_CLASSIFICATION	5.9470311133945984E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9993111169377414	WITHOUT_CLASSIFICATION	6.888830622584986E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9998237741957858	WITHOUT_CLASSIFICATION	1.7622580421416148E-4	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999127477112357	WITHOUT_CLASSIFICATION	8.725228876427151E-5	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999959844227676	WITHOUT_CLASSIFICATION	4.015577232367857E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999420476479627	WITHOUT_CLASSIFICATION	5.795235203734249E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9912010077352468	WITHOUT_CLASSIFICATION	0.008798992264753303	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9998955935452436	WITHOUT_CLASSIFICATION	1.0440645475630037E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999276191106539	WITHOUT_CLASSIFICATION	7.238088934612281E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999320472481409	WITHOUT_CLASSIFICATION	6.795275185918532E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9998166167430653	WITHOUT_CLASSIFICATION	1.8338325693473162E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.99991072399536	WITHOUT_CLASSIFICATION	8.927600464003295E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9998086355098025	WITHOUT_CLASSIFICATION	1.9136449019750308E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.999991503450577	WITHOUT_CLASSIFICATION	8.496549423047151E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9998693601842139	WITHOUT_CLASSIFICATION	1.30639815786065E-4	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998673867624946	WITHOUT_CLASSIFICATION	1.3261323750525224E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999450617949203	WITHOUT_CLASSIFICATION	5.493820507970202E-5	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999912268426585	WITHOUT_CLASSIFICATION	8.773157341453208E-6	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999514146221746	WITHOUT_CLASSIFICATION	4.8585377825325696E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999979270982234	WITHOUT_CLASSIFICATION	2.0729017766133393E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998919007664805	WITHOUT_CLASSIFICATION	1.0809923351954751E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999184567071017	WITHOUT_CLASSIFICATION	8.15432928983174E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999546944420081	WITHOUT_CLASSIFICATION	4.530555799194907E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9995833581988756	WITHOUT_CLASSIFICATION	4.166418011244746E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9998651654851108	WITHOUT_CLASSIFICATION	1.3483451488908158E-4	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9986436415609729	WITHOUT_CLASSIFICATION	0.0013563584390271213	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999682795972259	WITHOUT_CLASSIFICATION	3.1720402774033955E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9218310279851522	WITHOUT_CLASSIFICATION	0.07816897201484778	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.999524094882618	WITHOUT_CLASSIFICATION	4.759051173819523E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999417754754165	WITHOUT_CLASSIFICATION	5.822452458347766E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999944700788649	WITHOUT_CLASSIFICATION	5.529921135145401E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999205387048807	WITHOUT_CLASSIFICATION	7.946129511930667E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9998160473573383	WITHOUT_CLASSIFICATION	1.8395264266178778E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9991506813676319	WITHOUT_CLASSIFICATION	8.493186323681958E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999967249360523	WITHOUT_CLASSIFICATION	3.275063947819134E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9998000273787634	WITHOUT_CLASSIFICATION	1.9997262123666693E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999101513781524	WITHOUT_CLASSIFICATION	8.984862184760696E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999648112669165	WITHOUT_CLASSIFICATION	3.5188733083499045E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999173487752557	WITHOUT_CLASSIFICATION	8.265122474426894E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999206935007262	WITHOUT_CLASSIFICATION	7.9306499273866E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999829302063657	WITHOUT_CLASSIFICATION	1.7069793634238963E-5	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999770893858803	WITHOUT_CLASSIFICATION	2.291061411972685E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999366317776409	WITHOUT_CLASSIFICATION	6.336822235909688E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999771204758165	WITHOUT_CLASSIFICATION	2.287952418345078E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999502602163661	WITHOUT_CLASSIFICATION	4.9739783633819645E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9983813311142055	WITHOUT_CLASSIFICATION	0.0016186688857945254	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9997458198121381	WITHOUT_CLASSIFICATION	2.5418018786189684E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999895444760406	WITHOUT_CLASSIFICATION	1.0455523959414273E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999725882726351	WITHOUT_CLASSIFICATION	2.7411727364926355E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.99964472943686	WITHOUT_CLASSIFICATION	3.5527056314005643E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9997491653555652	WITHOUT_CLASSIFICATION	2.508346444347578E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9998826714500543	WITHOUT_CLASSIFICATION	1.1732854994578512E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.999893515095911	WITHOUT_CLASSIFICATION	1.0648490408914806E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9998766164605851	WITHOUT_CLASSIFICATION	1.233835394148695E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999527865371174	WITHOUT_CLASSIFICATION	4.721346288248361E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999366215736268	WITHOUT_CLASSIFICATION	6.33784263730707E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998502904294785	WITHOUT_CLASSIFICATION	1.4970957052160613E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999944198819629	WITHOUT_CLASSIFICATION	5.580118037035364E-6	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9998084435307972	WITHOUT_CLASSIFICATION	1.915564692028184E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998502904294785	WITHOUT_CLASSIFICATION	1.4970957052160613E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.999978266013888	WITHOUT_CLASSIFICATION	2.1733986112049222E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998502904294785	WITHOUT_CLASSIFICATION	1.4970957052160613E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999514005458109	WITHOUT_CLASSIFICATION	4.859945418902088E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999915028864031	WITHOUT_CLASSIFICATION	8.497113596904771E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9989934171732854	WITHOUT_CLASSIFICATION	0.0010065828267145603	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999865397415778	WITHOUT_CLASSIFICATION	1.3460258422199509E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9998377261153054	WITHOUT_CLASSIFICATION	1.622738846945108E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9997852049977263	WITHOUT_CLASSIFICATION	2.1479500227381045E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9978897323284257	WITHOUT_CLASSIFICATION	0.0021102676715743078	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999759518270815	WITHOUT_CLASSIFICATION	2.404817291851825E-5	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999725422949262	WITHOUT_CLASSIFICATION	2.7457705073852464E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999569450825404	WITHOUT_CLASSIFICATION	4.3054917459467317E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999716649089443	WITHOUT_CLASSIFICATION	2.8335091055696077E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9998580310676538	WITHOUT_CLASSIFICATION	1.41968932346123E-4	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999933300770109	WITHOUT_CLASSIFICATION	6.669922989109292E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999749095910694	WITHOUT_CLASSIFICATION	2.5090408930675396E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999171458071302	WITHOUT_CLASSIFICATION	8.285419286980509E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999717161146803	WITHOUT_CLASSIFICATION	2.8283885319629723E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.999804184994861	WITHOUT_CLASSIFICATION	1.9581500513906683E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999511609551219	WITHOUT_CLASSIFICATION	4.883904487802955E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9995685301371718	WITHOUT_CLASSIFICATION	4.314698628280552E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.998637773464987	WITHOUT_CLASSIFICATION	0.0013622265350129662	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999911883013816	WITHOUT_CLASSIFICATION	8.811698618441682E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9998312690792498	WITHOUT_CLASSIFICATION	1.6873092075022584E-4	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999423986783867	WITHOUT_CLASSIFICATION	5.760132161332906E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999680119955402	WITHOUT_CLASSIFICATION	3.198800445981167E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9998054097344055	WITHOUT_CLASSIFICATION	1.9459026559447422E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999171308675382	WITHOUT_CLASSIFICATION	8.286913246176165E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9995301288179255	WITHOUT_CLASSIFICATION	4.69871182074538E-4	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998096244709241	WITHOUT_CLASSIFICATION	1.9037552907595368E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9996422698323681	WITHOUT_CLASSIFICATION	3.577301676318535E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9997610414474363	WITHOUT_CLASSIFICATION	2.3895855256383626E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.999950820547725	WITHOUT_CLASSIFICATION	4.917945227506459E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999757633339472	WITHOUT_CLASSIFICATION	2.423666605282348E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999727983466532	WITHOUT_CLASSIFICATION	2.720165334673786E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.999986832786431	WITHOUT_CLASSIFICATION	1.3167213569119908E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.999979834738107	WITHOUT_CLASSIFICATION	2.016526189296842E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999892027623039	WITHOUT_CLASSIFICATION	1.0797237696256758E-5	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9998909031288159	WITHOUT_CLASSIFICATION	1.0909687118406678E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9998245176513549	WITHOUT_CLASSIFICATION	1.7548234864505477E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.999919077071528	WITHOUT_CLASSIFICATION	8.092292847196749E-5	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9994093932933686	WITHOUT_CLASSIFICATION	5.906067066314405E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9996324240790522	WITHOUT_CLASSIFICATION	3.675759209477823E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999887057683005	WITHOUT_CLASSIFICATION	1.1294231699625456E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999840042980962	WITHOUT_CLASSIFICATION	1.5995701903839194E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9997879836062289	WITHOUT_CLASSIFICATION	2.1201639377114176E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998345933153101	WITHOUT_CLASSIFICATION	1.654066846899611E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999788476998124	WITHOUT_CLASSIFICATION	2.115230018762158E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999837324308267	WITHOUT_CLASSIFICATION	1.6267569173280405E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9998389462394565	WITHOUT_CLASSIFICATION	1.61053760543467E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999332574216906	WITHOUT_CLASSIFICATION	6.674257830938136E-5	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9996966138888356	WITHOUT_CLASSIFICATION	3.0338611116441117E-4	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999606413117544	WITHOUT_CLASSIFICATION	3.935868824545125E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999902863024162	WITHOUT_CLASSIFICATION	9.713697583787889E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9998964325494485	WITHOUT_CLASSIFICATION	1.0356745055154341E-4	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999597739498686	WITHOUT_CLASSIFICATION	4.022605013134979E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999795556854474	WITHOUT_CLASSIFICATION	2.0444314552607996E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9998308279622665	WITHOUT_CLASSIFICATION	1.6917203773350595E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9998995609977067	WITHOUT_CLASSIFICATION	1.0043900229333335E-4	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9998172935085345	WITHOUT_CLASSIFICATION	1.8270649146537475E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999562099685566	WITHOUT_CLASSIFICATION	4.379003144331457E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999347709408436	WITHOUT_CLASSIFICATION	6.52290591563367E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9996476981659476	WITHOUT_CLASSIFICATION	3.523018340524485E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9998928190744343	WITHOUT_CLASSIFICATION	1.0718092556570768E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9998996269066374	WITHOUT_CLASSIFICATION	1.0037309336268599E-4	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999088095478958	WITHOUT_CLASSIFICATION	9.119045210415209E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.999676190378123	WITHOUT_CLASSIFICATION	3.238096218770324E-4	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9998640952564674	WITHOUT_CLASSIFICATION	1.3590474353268028E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9997149006091809	WITHOUT_CLASSIFICATION	2.8509939081908687E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999562099685566	WITHOUT_CLASSIFICATION	4.379003144331457E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999709473297483	WITHOUT_CLASSIFICATION	2.9052670251661697E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999659560574249	WITHOUT_CLASSIFICATION	3.404394257511914E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999351505808929	WITHOUT_CLASSIFICATION	6.484941910712912E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9933485860097317	WITHOUT_CLASSIFICATION	0.0066514139902681835	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999787641791028	WITHOUT_CLASSIFICATION	2.1235820897247218E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.989670462539986	WITHOUT_CLASSIFICATION	0.010329537460013926	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999496308293224	WITHOUT_CLASSIFICATION	5.03691706776809E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999496308293224	WITHOUT_CLASSIFICATION	5.03691706776809E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9972467622656174	WITHOUT_CLASSIFICATION	0.0027532377343825794	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9972467622656174	WITHOUT_CLASSIFICATION	0.0027532377343825794	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9945973666789972	WITHOUT_CLASSIFICATION	0.005402633321002762	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9994405753494843	WITHOUT_CLASSIFICATION	5.59424650515729E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9950769208988781	WITHOUT_CLASSIFICATION	0.004923079101121866	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999022749772186	WITHOUT_CLASSIFICATION	9.772502278135355E-5	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9995410391893587	WITHOUT_CLASSIFICATION	4.589608106413096E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9998035238593521	WITHOUT_CLASSIFICATION	1.964761406480195E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999879848608505	WITHOUT_CLASSIFICATION	1.2015139149475905E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9997301348351454	WITHOUT_CLASSIFICATION	2.698651648545414E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999026383305821	WITHOUT_CLASSIFICATION	9.736166941786331E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9995455248614044	WITHOUT_CLASSIFICATION	4.544751385955728E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9998185457265643	WITHOUT_CLASSIFICATION	1.8145427343568425E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998029240400842	WITHOUT_CLASSIFICATION	1.9707595991591532E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998029240400842	WITHOUT_CLASSIFICATION	1.9707595991591532E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9950769208988781	WITHOUT_CLASSIFICATION	0.004923079101121866	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9995455248614044	WITHOUT_CLASSIFICATION	4.544751385955728E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9951207619393185	WITHOUT_CLASSIFICATION	0.004879238060681386	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9994405753494843	WITHOUT_CLASSIFICATION	5.59424650515729E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999969582437709	WITHOUT_CLASSIFICATION	3.0417562291787195E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.999724704263462	WITHOUT_CLASSIFICATION	2.7529573653792077E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999941416842868	WITHOUT_CLASSIFICATION	5.858315713195436E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999941416842868	WITHOUT_CLASSIFICATION	5.858315713195436E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.999950711324069	WITHOUT_CLASSIFICATION	4.928867593097562E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.999995799815817	WITHOUT_CLASSIFICATION	4.200184183075012E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999519150154512	WITHOUT_CLASSIFICATION	4.8084984548647086E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9994039815962834	WITHOUT_CLASSIFICATION	5.960184037166128E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9996639295291402	WITHOUT_CLASSIFICATION	3.360704708598452E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999799882684438	WITHOUT_CLASSIFICATION	2.0011731556144332E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998679539064532	WITHOUT_CLASSIFICATION	1.3204609354684174E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9992816467612731	WITHOUT_CLASSIFICATION	7.183532387269425E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999588393896257	WITHOUT_CLASSIFICATION	4.116061037428533E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999417547414591	WITHOUT_CLASSIFICATION	5.8245258540989624E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.999943000228631	WITHOUT_CLASSIFICATION	5.699977136895287E-5	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9998924657304777	WITHOUT_CLASSIFICATION	1.0753426952226952E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9998675892173686	WITHOUT_CLASSIFICATION	1.3241078263138425E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998279148875896	WITHOUT_CLASSIFICATION	1.720851124104688E-4	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999933829248828	WITHOUT_CLASSIFICATION	6.61707511720303E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999346132182182	WITHOUT_CLASSIFICATION	6.53867817818347E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999408348475038	WITHOUT_CLASSIFICATION	5.916515249612316E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999747909018296	WITHOUT_CLASSIFICATION	2.520909817037608E-5	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9964258360426952	WITHOUT_CLASSIFICATION	0.003574163957304838	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999527373056268	WITHOUT_CLASSIFICATION	4.7262694373193746E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9998985406284531	WITHOUT_CLASSIFICATION	1.014593715469975E-4	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999220854101444	WITHOUT_CLASSIFICATION	7.791458985566555E-5	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.999769526073129	WITHOUT_CLASSIFICATION	2.3047392687105113E-4	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999656538829678	WITHOUT_CLASSIFICATION	3.434611703224108E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999979123130558	WITHOUT_CLASSIFICATION	2.087686944231476E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998161904623253	WITHOUT_CLASSIFICATION	1.8380953767478295E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996332780553246	WITHOUT_CLASSIFICATION	3.667219446752672E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999544956411012	WITHOUT_CLASSIFICATION	4.550435889881733E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999698179805594	WITHOUT_CLASSIFICATION	3.0182019440606887E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999259812172182	WITHOUT_CLASSIFICATION	7.401878278178814E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999793776104756	WITHOUT_CLASSIFICATION	2.0622389524319345E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999717555456581	WITHOUT_CLASSIFICATION	2.824445434184588E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9997633507301936	WITHOUT_CLASSIFICATION	2.3664926980647012E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999882036355286	WITHOUT_CLASSIFICATION	1.1796364471241494E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999877622866202	WITHOUT_CLASSIFICATION	1.2237713379715504E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999871495996874	WITHOUT_CLASSIFICATION	1.285040031253222E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9998382787515482	WITHOUT_CLASSIFICATION	1.6172124845180758E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995962294241721	WITHOUT_CLASSIFICATION	4.037705758278709E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998279148875896	WITHOUT_CLASSIFICATION	1.720851124104688E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999875274445625	WITHOUT_CLASSIFICATION	1.2472555437411375E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950899748784	WITHOUT_CLASSIFICATION	4.910025121589221E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999936111165126	WITHOUT_CLASSIFICATION	6.3888834872955635E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999619920931364	WITHOUT_CLASSIFICATION	3.8007906863558284E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999698179805594	WITHOUT_CLASSIFICATION	3.0182019440606887E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999259812172182	WITHOUT_CLASSIFICATION	7.401878278178814E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999793776104756	WITHOUT_CLASSIFICATION	2.0622389524319345E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999964418421335	WITHOUT_CLASSIFICATION	3.558157866426523E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997472859077	WITHOUT_CLASSIFICATION	2.527140924091286E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999636427135876	WITHOUT_CLASSIFICATION	3.635728641232113E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999871325516583	WITHOUT_CLASSIFICATION	1.2867448341702899E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9984482822564418	WITHOUT_CLASSIFICATION	0.001551717743558153	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993859137405359	WITHOUT_CLASSIFICATION	6.140862594640776E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9995501666573281	WITHOUT_CLASSIFICATION	4.4983334267196384E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999764037863679	WITHOUT_CLASSIFICATION	2.359621363204657E-5	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9998517910984264	WITHOUT_CLASSIFICATION	1.48208901573623E-4	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999611633610541	WITHOUT_CLASSIFICATION	3.8836638945777064E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998567637475957	WITHOUT_CLASSIFICATION	1.4323625240425405E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999796539656554	WITHOUT_CLASSIFICATION	2.0346034344658924E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999785183869809	WITHOUT_CLASSIFICATION	2.1481613018997028E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999544956411012	WITHOUT_CLASSIFICATION	4.550435889881733E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999882036355286	WITHOUT_CLASSIFICATION	1.1796364471241494E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999877622866202	WITHOUT_CLASSIFICATION	1.2237713379715504E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999871495996874	WITHOUT_CLASSIFICATION	1.285040031253222E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999997472859077	WITHOUT_CLASSIFICATION	2.527140924091286E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999636427135876	WITHOUT_CLASSIFICATION	3.635728641232113E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999871325516583	WITHOUT_CLASSIFICATION	1.2867448341702899E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9984482822564418	WITHOUT_CLASSIFICATION	0.001551717743558153	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993859137405359	WITHOUT_CLASSIFICATION	6.140862594640776E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999951003163439	WITHOUT_CLASSIFICATION	4.899683656108027E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9997584365201073	WITHOUT_CLASSIFICATION	2.415634798927719E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999845266828513	WITHOUT_CLASSIFICATION	1.547331714867478E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999665393827432	WITHOUT_CLASSIFICATION	3.346061725679728E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999665393827432	WITHOUT_CLASSIFICATION	3.346061725679728E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999665393827432	WITHOUT_CLASSIFICATION	3.346061725679728E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999665393827432	WITHOUT_CLASSIFICATION	3.346061725679728E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999665393827432	WITHOUT_CLASSIFICATION	3.346061725679728E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9995898111770549	WITHOUT_CLASSIFICATION	4.1018882294507317E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999658331240461	WITHOUT_CLASSIFICATION	3.41668759538797E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999128028212755	WITHOUT_CLASSIFICATION	8.719717872455898E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9965255021237212	WITHOUT_CLASSIFICATION	0.003474497876278719	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999806570046981	WITHOUT_CLASSIFICATION	1.9342995301868784E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999934482675633	WITHOUT_CLASSIFICATION	6.551732436700098E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999894997515119	WITHOUT_CLASSIFICATION	1.050024848826296E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999247470656881	WITHOUT_CLASSIFICATION	7.525293431183897E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9996015043775132	WITHOUT_CLASSIFICATION	3.984956224868566E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998666631497899	WITHOUT_CLASSIFICATION	1.333368502100507E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998666631497899	WITHOUT_CLASSIFICATION	1.333368502100507E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998666631497899	WITHOUT_CLASSIFICATION	1.333368502100507E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999501571399568	WITHOUT_CLASSIFICATION	4.984286004322391E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999405617765442	WITHOUT_CLASSIFICATION	5.943822345580366E-4	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999022294553294	WITHOUT_CLASSIFICATION	9.777054467059875E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998988486535333	WITHOUT_CLASSIFICATION	1.0115134646672625E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998988486535333	WITHOUT_CLASSIFICATION	1.0115134646672625E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999918218467779	WITHOUT_CLASSIFICATION	8.178153222113672E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998988486535333	WITHOUT_CLASSIFICATION	1.0115134646672625E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999115310793183	WITHOUT_CLASSIFICATION	8.846892068178719E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998555858455531	WITHOUT_CLASSIFICATION	1.4441415444693364E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999758160678373	WITHOUT_CLASSIFICATION	2.4183932162788682E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.999983367851738	WITHOUT_CLASSIFICATION	1.6632148261911096E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.999983367851738	WITHOUT_CLASSIFICATION	1.6632148261911096E-5	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9997593907577699	WITHOUT_CLASSIFICATION	2.4060924223008926E-4	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999050221448779	WITHOUT_CLASSIFICATION	9.497785512221866E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9876242589894754	WITHOUT_CLASSIFICATION	0.012375741010524563	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9611034071076308	WITHOUT_CLASSIFICATION	0.03889659289236918	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999843679668532	WITHOUT_CLASSIFICATION	1.5632033146826035E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999890321684498	WITHOUT_CLASSIFICATION	1.0967831550223145E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9997349624042055	WITHOUT_CLASSIFICATION	2.650375957945487E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999741724566288	WITHOUT_CLASSIFICATION	2.5827543371206925E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998981733847445	WITHOUT_CLASSIFICATION	1.0182661525541996E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995962294241721	WITHOUT_CLASSIFICATION	4.037705758278709E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999957570848486	WITHOUT_CLASSIFICATION	4.2429151514814E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999337599715148	WITHOUT_CLASSIFICATION	6.624002848527126E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994227964211595	WITHOUT_CLASSIFICATION	5.772035788404266E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995962294241721	WITHOUT_CLASSIFICATION	4.037705758278709E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999337599715148	WITHOUT_CLASSIFICATION	6.624002848527126E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999474248656391	WITHOUT_CLASSIFICATION	5.257513436079296E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9998533179502901	WITHOUT_CLASSIFICATION	1.4668204971001353E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999936036861497	WITHOUT_CLASSIFICATION	6.396313850298386E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9961073803211612	WITHOUT_CLASSIFICATION	0.003892619678838725	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9961073803211612	WITHOUT_CLASSIFICATION	0.003892619678838725	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9961021114501222	WITHOUT_CLASSIFICATION	0.0038978885498778698	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999965908673117	WITHOUT_CLASSIFICATION	3.409132688254078E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999866788903468	WITHOUT_CLASSIFICATION	1.3321109653271594E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999846077970788	WITHOUT_CLASSIFICATION	1.539220292121311E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999743381950829	WITHOUT_CLASSIFICATION	2.56618049172092E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999965624123514	WITHOUT_CLASSIFICATION	3.43758764863412E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999743381950829	WITHOUT_CLASSIFICATION	2.56618049172092E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999965851957898	WITHOUT_CLASSIFICATION	3.414804210142889E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999965851957898	WITHOUT_CLASSIFICATION	3.414804210142889E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999965851957898	WITHOUT_CLASSIFICATION	3.414804210142889E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999965851957898	WITHOUT_CLASSIFICATION	3.414804210142889E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999965908673117	WITHOUT_CLASSIFICATION	3.409132688254078E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999965851957898	WITHOUT_CLASSIFICATION	3.414804210142889E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997339199654114	WITHOUT_CLASSIFICATION	2.660800345886091E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997339199654114	WITHOUT_CLASSIFICATION	2.660800345886091E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999846077970788	WITHOUT_CLASSIFICATION	1.539220292121311E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999822430562098	WITHOUT_CLASSIFICATION	1.7756943790259568E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999822430562098	WITHOUT_CLASSIFICATION	1.7756943790259568E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999743381950829	WITHOUT_CLASSIFICATION	2.56618049172092E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999965624123514	WITHOUT_CLASSIFICATION	3.43758764863412E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999743381950829	WITHOUT_CLASSIFICATION	2.56618049172092E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999925458353114	WITHOUT_CLASSIFICATION	7.454164688606611E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999846077970788	WITHOUT_CLASSIFICATION	1.539220292121311E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999965908673117	WITHOUT_CLASSIFICATION	3.409132688254078E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999966089142079	WITHOUT_CLASSIFICATION	3.391085792110653E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999965530648898	WITHOUT_CLASSIFICATION	3.446935110221949E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997266289199211	WITHOUT_CLASSIFICATION	2.73371080078767E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942161914062	WITHOUT_CLASSIFICATION	5.7838085938529805E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999375271871431	WITHOUT_CLASSIFICATION	6.247281285686287E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.999938544974509	WITHOUT_CLASSIFICATION	6.14550254909667E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.999891407843416	WITHOUT_CLASSIFICATION	1.0859215658403386E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999943523656233	WITHOUT_CLASSIFICATION	5.647634376801051E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9998280925126001	WITHOUT_CLASSIFICATION	1.7190748739996767E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999838525208876	WITHOUT_CLASSIFICATION	1.6147479112377037E-5	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9995822295836153	WITHOUT_CLASSIFICATION	4.177704163846449E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.978274841553926	WITHOUT_CLASSIFICATION	0.021725158446074033	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999217200278794	WITHOUT_CLASSIFICATION	7.827997212056154E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999964650762129	WITHOUT_CLASSIFICATION	3.5349237872854702E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997620638804415	WITHOUT_CLASSIFICATION	2.3793611955848684E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999912491665884	WITHOUT_CLASSIFICATION	8.750833411580029E-6	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.999935201771558	WITHOUT_CLASSIFICATION	6.479822844197826E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9998603576863015	WITHOUT_CLASSIFICATION	1.3964231369839171E-4	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9998707168622235	WITHOUT_CLASSIFICATION	1.292831377764633E-4	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999580574906188	WITHOUT_CLASSIFICATION	4.194250938117354E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999856222044	WITHOUT_CLASSIFICATION	1.4377795550001813E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999856222044	WITHOUT_CLASSIFICATION	1.4377795550001813E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999856222044	WITHOUT_CLASSIFICATION	1.4377795550001813E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999748155458908	WITHOUT_CLASSIFICATION	2.5184454109191512E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999856433179	WITHOUT_CLASSIFICATION	1.4356682053330374E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9989733102935479	WITHOUT_CLASSIFICATION	0.0010266897064521335	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999777961966617	WITHOUT_CLASSIFICATION	2.2203803338293427E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9918663907006522	WITHOUT_CLASSIFICATION	0.008133609299347753	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999079193469871	WITHOUT_CLASSIFICATION	9.208065301287466E-5	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999957148141607	WITHOUT_CLASSIFICATION	4.285185839237466E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998304243363401	WITHOUT_CLASSIFICATION	1.6957566365985284E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9995833581988756	WITHOUT_CLASSIFICATION	4.166418011244746E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999655052225318	WITHOUT_CLASSIFICATION	3.449477746817632E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999388702114094	WITHOUT_CLASSIFICATION	6.112978859062679E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999958089543339	WITHOUT_CLASSIFICATION	4.1910456661083795E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999585423369796	WITHOUT_CLASSIFICATION	4.145766302043816E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9995425940533873	WITHOUT_CLASSIFICATION	4.574059466125796E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999205387048807	WITHOUT_CLASSIFICATION	7.946129511930667E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999401385488832	WITHOUT_CLASSIFICATION	5.9861451116760946E-5	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.999980206121692	WITHOUT_CLASSIFICATION	1.9793878307978124E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999297162433909	WITHOUT_CLASSIFICATION	7.028375660909504E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999868660636848	WITHOUT_CLASSIFICATION	1.3133936315197706E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998048884403912	WITHOUT_CLASSIFICATION	1.9511155960879448E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999972571128115	WITHOUT_CLASSIFICATION	2.7428871885139107E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9996248078022532	WITHOUT_CLASSIFICATION	3.751921977468728E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999829202932434	WITHOUT_CLASSIFICATION	1.707970675659935E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999712380157005	WITHOUT_CLASSIFICATION	2.8761984299524636E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999727051629312	WITHOUT_CLASSIFICATION	2.7294837068885042E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999657030205978	WITHOUT_CLASSIFICATION	3.4296979402161414E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9998706668027241	WITHOUT_CLASSIFICATION	1.2933319727581103E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999109665010864	WITHOUT_CLASSIFICATION	8.903349891358015E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999109665010864	WITHOUT_CLASSIFICATION	8.903349891358015E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999735405642725	WITHOUT_CLASSIFICATION	2.645943572754214E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9997549423019476	WITHOUT_CLASSIFICATION	2.450576980523464E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.999877246438933	WITHOUT_CLASSIFICATION	1.2275356106687834E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999582041901812	WITHOUT_CLASSIFICATION	4.1795809818842385E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994834959440906	WITHOUT_CLASSIFICATION	5.165040559094696E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994834959440906	WITHOUT_CLASSIFICATION	5.165040559094696E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999651300960033	WITHOUT_CLASSIFICATION	3.4869903996632374E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999357097295334	WITHOUT_CLASSIFICATION	6.429027046660244E-5	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9988270396306373	WITHOUT_CLASSIFICATION	0.0011729603693627045	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999582538434405	WITHOUT_CLASSIFICATION	4.174615655947502E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999730867947315	WITHOUT_CLASSIFICATION	2.691320526841487E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.994058470008072	WITHOUT_CLASSIFICATION	0.005941529991927951	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.994058470008072	WITHOUT_CLASSIFICATION	0.005941529991927951	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9996501141896579	WITHOUT_CLASSIFICATION	3.498858103421137E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9996924646401114	WITHOUT_CLASSIFICATION	3.075353598885977E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.999877408707546	WITHOUT_CLASSIFICATION	1.225912924539837E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9987816557906882	WITHOUT_CLASSIFICATION	0.0012183442093118557	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999562099685566	WITHOUT_CLASSIFICATION	4.379003144331457E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9963899121590817	WITHOUT_CLASSIFICATION	0.0036100878409183646	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9997107956797029	WITHOUT_CLASSIFICATION	2.892043202971024E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999360559796503	WITHOUT_CLASSIFICATION	6.394402034971148E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9945973666789972	WITHOUT_CLASSIFICATION	0.005402633321002762	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9996563899549972	WITHOUT_CLASSIFICATION	3.436100450028522E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9998834397236974	WITHOUT_CLASSIFICATION	1.1656027630246155E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999631302690406	WITHOUT_CLASSIFICATION	3.686973095946168E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.98783869570184	WITHOUT_CLASSIFICATION	0.01216130429816008	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9996539258904077	WITHOUT_CLASSIFICATION	3.46074109592334E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9994023381863518	WITHOUT_CLASSIFICATION	5.976618136481461E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999826649829308	WITHOUT_CLASSIFICATION	1.7335017069204627E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9951207619393185	WITHOUT_CLASSIFICATION	0.004879238060681386	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999078080833212	WITHOUT_CLASSIFICATION	9.219191667876585E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999927130726413	WITHOUT_CLASSIFICATION	7.28692735877167E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999927130726413	WITHOUT_CLASSIFICATION	7.28692735877167E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999980416062969	WITHOUT_CLASSIFICATION	1.9583937030812117E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9997742379562774	WITHOUT_CLASSIFICATION	2.2576204372255442E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.997980029320074	WITHOUT_CLASSIFICATION	0.0020199706799259895	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.999850550680878	WITHOUT_CLASSIFICATION	1.4944931912192716E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999974970900269	WITHOUT_CLASSIFICATION	2.502909973043737E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9998873973352368	WITHOUT_CLASSIFICATION	1.1260266476317179E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9998528622117083	WITHOUT_CLASSIFICATION	1.4713778829164885E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999339890595533	WITHOUT_CLASSIFICATION	6.60109404466941E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9997732338713067	WITHOUT_CLASSIFICATION	2.2676612869347077E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999872835727344	WITHOUT_CLASSIFICATION	1.2716427265533865E-5	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9997112134888999	WITHOUT_CLASSIFICATION	2.887865111001384E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9989149009274247	WITHOUT_CLASSIFICATION	0.0010850990725752513	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9911235560914842	WITHOUT_CLASSIFICATION	0.008876443908515866	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9995936213695519	WITHOUT_CLASSIFICATION	4.063786304481736E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9972039567395017	WITHOUT_CLASSIFICATION	0.0027960432604983423	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9995771426927132	WITHOUT_CLASSIFICATION	4.228573072868033E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997389928256939	WITHOUT_CLASSIFICATION	2.6100717430609663E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997729495826964	WITHOUT_CLASSIFICATION	2.270504173034971E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999858001645752	WITHOUT_CLASSIFICATION	1.4199835424793728E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999326248218969	WITHOUT_CLASSIFICATION	6.737517810302001E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999326248218969	WITHOUT_CLASSIFICATION	6.737517810302001E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9989773974637074	WITHOUT_CLASSIFICATION	0.001022602536292658	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9994178270534885	WITHOUT_CLASSIFICATION	5.82172946511556E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999708745670265	WITHOUT_CLASSIFICATION	2.9125432973501204E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999729905971109	WITHOUT_CLASSIFICATION	2.7009402889171E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997780434167044	WITHOUT_CLASSIFICATION	2.219565832956422E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9998687800887316	WITHOUT_CLASSIFICATION	1.312199112683932E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9990052775201252	WITHOUT_CLASSIFICATION	9.94722479874739E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998029240400842	WITHOUT_CLASSIFICATION	1.9707595991591532E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998029240400842	WITHOUT_CLASSIFICATION	1.9707595991591532E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998029240400842	WITHOUT_CLASSIFICATION	1.9707595991591532E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9998678417302022	WITHOUT_CLASSIFICATION	1.3215826979778815E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997796201293103	WITHOUT_CLASSIFICATION	2.2037987068969E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9916635996780367	WITHOUT_CLASSIFICATION	0.008336400321963344	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998871333977397	WITHOUT_CLASSIFICATION	1.1286660226032112E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998871333977397	WITHOUT_CLASSIFICATION	1.1286660226032112E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999134622299902	WITHOUT_CLASSIFICATION	8.653777000972496E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996383787503786	WITHOUT_CLASSIFICATION	3.61621249621287E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998945648924263	WITHOUT_CLASSIFICATION	1.0543510757357216E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9971902083754698	WITHOUT_CLASSIFICATION	0.0028097916245301	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999972499847828	WITHOUT_CLASSIFICATION	2.7500152173076457E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999791356696413	WITHOUT_CLASSIFICATION	2.0864330358685925E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9998203302739483	WITHOUT_CLASSIFICATION	1.7966972605168034E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999247621121872	WITHOUT_CLASSIFICATION	7.523788781282898E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999860814089486	WITHOUT_CLASSIFICATION	1.3918591051468979E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9995212731904976	WITHOUT_CLASSIFICATION	4.787268095024249E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999073559031163	WITHOUT_CLASSIFICATION	9.264409688365678E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997221279088646	WITHOUT_CLASSIFICATION	2.778720911353725E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997221279088646	WITHOUT_CLASSIFICATION	2.778720911353725E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996069617747931	WITHOUT_CLASSIFICATION	3.930382252068792E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999204788817759	WITHOUT_CLASSIFICATION	7.952111822402203E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999204788817759	WITHOUT_CLASSIFICATION	7.952111822402203E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996853406327477	WITHOUT_CLASSIFICATION	3.146593672522828E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9998811053945137	WITHOUT_CLASSIFICATION	1.188946054862819E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9996156064397871	WITHOUT_CLASSIFICATION	3.843935602128896E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998161904623253	WITHOUT_CLASSIFICATION	1.8380953767478295E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998161904623253	WITHOUT_CLASSIFICATION	1.8380953767478295E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998555001053918	WITHOUT_CLASSIFICATION	1.44499894608139E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999909957204992	WITHOUT_CLASSIFICATION	9.004279500824851E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9993641162533023	WITHOUT_CLASSIFICATION	6.358837466977564E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.987198426805686	WITHOUT_CLASSIFICATION	0.012801573194313916	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9997899604315346	WITHOUT_CLASSIFICATION	2.1003956846552563E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9997899604315346	WITHOUT_CLASSIFICATION	2.1003956846552563E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.6314656051108051	DEFECT	0.368534394889195	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9996240212548502	WITHOUT_CLASSIFICATION	3.759787451498721E-4	DEFECT
// is this an error???	DEFECT	0.9996240212548502	WITHOUT_CLASSIFICATION	3.759787451498721E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.999809312641778	WITHOUT_CLASSIFICATION	1.9068735822204305E-4	DEFECT
