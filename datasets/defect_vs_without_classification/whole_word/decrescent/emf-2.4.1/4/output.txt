// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9993453958974919	WITHOUT_CLASSIFICATION	6.546041025080059E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9998195522333255	WITHOUT_CLASSIFICATION	1.8044776667444623E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9998787231643296	WITHOUT_CLASSIFICATION	1.2127683567032212E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9976976226048913	WITHOUT_CLASSIFICATION	0.002302377395108709	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999207893925327	WITHOUT_CLASSIFICATION	7.921060746732831E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999624180439035	WITHOUT_CLASSIFICATION	3.758195609649496E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9997172493667673	WITHOUT_CLASSIFICATION	2.8275063323272257E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999449352461178	WITHOUT_CLASSIFICATION	5.506475388223911E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999524024683009	WITHOUT_CLASSIFICATION	4.759753169924522E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9998981176656563	WITHOUT_CLASSIFICATION	1.0188233434373453E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997854172522384	WITHOUT_CLASSIFICATION	2.1458274776156493E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998601186518811	WITHOUT_CLASSIFICATION	1.3988134811903442E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9997762972294587	WITHOUT_CLASSIFICATION	2.237027705413342E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999282538887377	WITHOUT_CLASSIFICATION	7.174611126219011E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9998756062140216	WITHOUT_CLASSIFICATION	1.2439378597835698E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998909848595862	WITHOUT_CLASSIFICATION	1.090151404139176E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999370577236946	WITHOUT_CLASSIFICATION	6.294227630539089E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.998369329989191	WITHOUT_CLASSIFICATION	0.0016306700108089241	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.993263966667189	WITHOUT_CLASSIFICATION	0.00673603333281093	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999088795302238	WITHOUT_CLASSIFICATION	9.112046977630451E-5	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9979410840190241	WITHOUT_CLASSIFICATION	0.002058915980975805	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9548464646015226	WITHOUT_CLASSIFICATION	0.04515353539847741	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9962319001479288	WITHOUT_CLASSIFICATION	0.0037680998520710895	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9617178350107187	WITHOUT_CLASSIFICATION	0.03828216498928136	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998279706445959	WITHOUT_CLASSIFICATION	1.7202935540415272E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998605096807414	WITHOUT_CLASSIFICATION	1.3949031925860757E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999973558782316	WITHOUT_CLASSIFICATION	2.644121768406112E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993115688716734	WITHOUT_CLASSIFICATION	6.88431128326648E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9997808691392732	WITHOUT_CLASSIFICATION	2.1913086072681783E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9967963168666645	WITHOUT_CLASSIFICATION	0.0032036831333355476	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998733178435153	WITHOUT_CLASSIFICATION	1.2668215648470457E-4	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.999594878080656	WITHOUT_CLASSIFICATION	4.051219193440572E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998497141553306	WITHOUT_CLASSIFICATION	1.5028584466937205E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9969349566387182	WITHOUT_CLASSIFICATION	0.0030650433612817423	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998695134858435	WITHOUT_CLASSIFICATION	1.3048651415644387E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999848354810159	WITHOUT_CLASSIFICATION	1.5164518984045523E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9828389794608551	WITHOUT_CLASSIFICATION	0.017161020539144874	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999801865383469	WITHOUT_CLASSIFICATION	1.9813461653117906E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999864662940026	WITHOUT_CLASSIFICATION	1.35337059974727E-5	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.997092170411688	WITHOUT_CLASSIFICATION	0.002907829588312021	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9998749616544153	WITHOUT_CLASSIFICATION	1.2503834558478383E-4	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9609078053974067	WITHOUT_CLASSIFICATION	0.039092194602593305	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999192339303687	WITHOUT_CLASSIFICATION	8.076606963122902E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999370637880776	WITHOUT_CLASSIFICATION	6.293621192238046E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9828695766513115	WITHOUT_CLASSIFICATION	0.017130423348688466	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9998981176656563	WITHOUT_CLASSIFICATION	1.0188233434373453E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997854172522384	WITHOUT_CLASSIFICATION	2.1458274776156493E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998601186518811	WITHOUT_CLASSIFICATION	1.3988134811903442E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9993415247270748	WITHOUT_CLASSIFICATION	6.584752729252132E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9997762972294587	WITHOUT_CLASSIFICATION	2.237027705413342E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999282538887377	WITHOUT_CLASSIFICATION	7.174611126219011E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9998756062140216	WITHOUT_CLASSIFICATION	1.2439378597835698E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9887536884834423	WITHOUT_CLASSIFICATION	0.01124631151655779	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9887536884834423	WITHOUT_CLASSIFICATION	0.01124631151655779	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9887536884834423	WITHOUT_CLASSIFICATION	0.01124631151655779	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999207893925327	WITHOUT_CLASSIFICATION	7.921060746732831E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9984554757910289	WITHOUT_CLASSIFICATION	0.0015445242089710464	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9997259771336665	WITHOUT_CLASSIFICATION	2.740228663334328E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9998343626997109	WITHOUT_CLASSIFICATION	1.6563730028914465E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.998369329989191	WITHOUT_CLASSIFICATION	0.0016306700108089241	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9989782196629217	WITHOUT_CLASSIFICATION	0.0010217803370783794	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998279706445959	WITHOUT_CLASSIFICATION	1.7202935540415272E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998605096807414	WITHOUT_CLASSIFICATION	1.3949031925860757E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993115688716734	WITHOUT_CLASSIFICATION	6.88431128326648E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998733178435153	WITHOUT_CLASSIFICATION	1.2668215648470457E-4	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9993374505889137	WITHOUT_CLASSIFICATION	6.625494110862871E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9993807331469191	WITHOUT_CLASSIFICATION	6.192668530808426E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9998477794500641	WITHOUT_CLASSIFICATION	1.522205499358302E-4	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9998653604984123	WITHOUT_CLASSIFICATION	1.346395015876535E-4	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999200476990048	WITHOUT_CLASSIFICATION	7.995230099530097E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998695134858435	WITHOUT_CLASSIFICATION	1.3048651415644387E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9828389794608551	WITHOUT_CLASSIFICATION	0.017161020539144874	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999593246557725	WITHOUT_CLASSIFICATION	4.0675344227362055E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.997695606236462	WITHOUT_CLASSIFICATION	0.0023043937635379118	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999441476524932	WITHOUT_CLASSIFICATION	5.585234750672985E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999162424654131	WITHOUT_CLASSIFICATION	8.375753458690056E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9998374224124176	WITHOUT_CLASSIFICATION	1.62577587582426E-4	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9971217393874765	WITHOUT_CLASSIFICATION	0.002878260612523521	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.7496200572838395	WITHOUT_CLASSIFICATION	0.2503799427161606	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9973413192074267	WITHOUT_CLASSIFICATION	0.002658680792573379	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999294940819651	WITHOUT_CLASSIFICATION	7.050591803491586E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9996514990977626	WITHOUT_CLASSIFICATION	3.485009022372976E-4	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999920259967555	WITHOUT_CLASSIFICATION	7.974003244502774E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9997039971763009	WITHOUT_CLASSIFICATION	2.9600282369920814E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9986166330100311	WITHOUT_CLASSIFICATION	0.0013833669899688792	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999294940819651	WITHOUT_CLASSIFICATION	7.050591803491586E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9996514990977626	WITHOUT_CLASSIFICATION	3.485009022372976E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9994574481278721	WITHOUT_CLASSIFICATION	5.425518721278252E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9994574481278721	WITHOUT_CLASSIFICATION	5.425518721278252E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997276213821008	WITHOUT_CLASSIFICATION	2.7237861789919973E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9993816361328612	WITHOUT_CLASSIFICATION	6.183638671387365E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999676268442363	WITHOUT_CLASSIFICATION	3.237315576357336E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997276213821008	WITHOUT_CLASSIFICATION	2.7237861789919973E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9993816361328612	WITHOUT_CLASSIFICATION	6.183638671387365E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999241910851514	WITHOUT_CLASSIFICATION	7.580891484864057E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998506617264967	WITHOUT_CLASSIFICATION	1.493382735031969E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999672273402103	WITHOUT_CLASSIFICATION	3.2772659789748577E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999066998059217	WITHOUT_CLASSIFICATION	9.330019407825133E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999672273402103	WITHOUT_CLASSIFICATION	3.2772659789748577E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999083364228192	WITHOUT_CLASSIFICATION	9.1663577180854E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9998637581030513	WITHOUT_CLASSIFICATION	1.3624189694876504E-4	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9998637581030513	WITHOUT_CLASSIFICATION	1.3624189694876504E-4	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9995157230795267	WITHOUT_CLASSIFICATION	4.842769204732977E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9996880620019526	WITHOUT_CLASSIFICATION	3.1193799804739454E-4	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9998918915583571	WITHOUT_CLASSIFICATION	1.0810844164292061E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999607809782692	WITHOUT_CLASSIFICATION	3.921902173063812E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999468728535855	WITHOUT_CLASSIFICATION	5.312714641435801E-5	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.999841902936614	WITHOUT_CLASSIFICATION	1.580970633860548E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9997640056221104	WITHOUT_CLASSIFICATION	2.3599437788958557E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9998865152206265	WITHOUT_CLASSIFICATION	1.1348477937340777E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999916301289268	WITHOUT_CLASSIFICATION	8.369871073180558E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9994432454767123	WITHOUT_CLASSIFICATION	5.567545232877737E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999878819328134	WITHOUT_CLASSIFICATION	1.2118067186593847E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9998962315864854	WITHOUT_CLASSIFICATION	1.037684135145E-4	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999869596672792	WITHOUT_CLASSIFICATION	1.3040332720798005E-4	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9994430242472386	WITHOUT_CLASSIFICATION	5.569757527614137E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9988040266681643	WITHOUT_CLASSIFICATION	0.0011959733318358257	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999746399516478	WITHOUT_CLASSIFICATION	2.5360048352202085E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9986379334058322	WITHOUT_CLASSIFICATION	0.0013620665941678684	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998923734119	WITHOUT_CLASSIFICATION	1.0762658814797935E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998923734119	WITHOUT_CLASSIFICATION	1.0762658814797935E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999268633104769	WITHOUT_CLASSIFICATION	7.313668952310177E-4	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999268633104769	WITHOUT_CLASSIFICATION	7.313668952310177E-4	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9995530282235043	WITHOUT_CLASSIFICATION	4.4697177649567234E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9990307074999666	WITHOUT_CLASSIFICATION	9.692925000334178E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9975519807815364	WITHOUT_CLASSIFICATION	0.002448019218463663	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999572899928537	WITHOUT_CLASSIFICATION	4.271000714626208E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9994430242472386	WITHOUT_CLASSIFICATION	5.569757527614137E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.996990893028359	WITHOUT_CLASSIFICATION	0.0030091069716410555	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9997441266163243	WITHOUT_CLASSIFICATION	2.5587338367573603E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999791021866188	WITHOUT_CLASSIFICATION	2.08978133812404E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999863384798817	WITHOUT_CLASSIFICATION	1.3661520118157487E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9986973202204107	WITHOUT_CLASSIFICATION	0.001302679779589322	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9992462459457901	WITHOUT_CLASSIFICATION	7.537540542098504E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999276317155095	WITHOUT_CLASSIFICATION	7.236828449051159E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9998227246273196	WITHOUT_CLASSIFICATION	1.7727537268046945E-4	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999628036555617	WITHOUT_CLASSIFICATION	3.719634443836189E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992898155207973	WITHOUT_CLASSIFICATION	7.101844792025887E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999998021707104	WITHOUT_CLASSIFICATION	1.9782928966038673E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9998922355305578	WITHOUT_CLASSIFICATION	1.0776446944214406E-4	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9998922355305578	WITHOUT_CLASSIFICATION	1.0776446944214406E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9932503353112733	WITHOUT_CLASSIFICATION	0.006749664688726671	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999970874597775	WITHOUT_CLASSIFICATION	2.912540222496702E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.999851379414376	WITHOUT_CLASSIFICATION	1.486205856241546E-4	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999786410754138	WITHOUT_CLASSIFICATION	2.1358924586172585E-5	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999952358554272	WITHOUT_CLASSIFICATION	4.7641445728439414E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999771236533813	WITHOUT_CLASSIFICATION	2.2876346618709557E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.992913354095612	WITHOUT_CLASSIFICATION	0.0070866459043879325	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999038399111182	WITHOUT_CLASSIFICATION	9.616008888181428E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9998441253716934	WITHOUT_CLASSIFICATION	1.5587462830649423E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.97924946906018	WITHOUT_CLASSIFICATION	0.020750530939820017	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9995655228367714	WITHOUT_CLASSIFICATION	4.34477163228577E-4	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9982741017545218	WITHOUT_CLASSIFICATION	0.0017258982454782456	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9977899072650285	WITHOUT_CLASSIFICATION	0.002210092734971523	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9995555436515215	WITHOUT_CLASSIFICATION	4.444563484785085E-4	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9937493397452339	WITHOUT_CLASSIFICATION	0.00625066025476604	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9996795973291343	WITHOUT_CLASSIFICATION	3.204026708657161E-4	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999679863291276	WITHOUT_CLASSIFICATION	3.201367087238745E-5	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999971985854704	WITHOUT_CLASSIFICATION	2.8014145295922336E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9991705531281644	WITHOUT_CLASSIFICATION	8.294468718354904E-4	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999950299272129	WITHOUT_CLASSIFICATION	4.9700727870900715E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999970423437539	WITHOUT_CLASSIFICATION	2.957656246076509E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9998699403905106	WITHOUT_CLASSIFICATION	1.30059609489421E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999959064884563	WITHOUT_CLASSIFICATION	4.093511543792776E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.999722320348562	WITHOUT_CLASSIFICATION	2.776796514380058E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9998534284845877	WITHOUT_CLASSIFICATION	1.4657151541227624E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999813720132109	WITHOUT_CLASSIFICATION	1.8627986789193814E-5	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9989234106880258	WITHOUT_CLASSIFICATION	0.0010765893119741865	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9988096294118621	WITHOUT_CLASSIFICATION	0.0011903705881378328	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9652110864920125	WITHOUT_CLASSIFICATION	0.03478891350798752	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999840229084787	WITHOUT_CLASSIFICATION	1.5977091521335506E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999518930265808	WITHOUT_CLASSIFICATION	4.810697341909024E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999518930265808	WITHOUT_CLASSIFICATION	4.810697341909024E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9997867806761053	WITHOUT_CLASSIFICATION	2.1321932389463906E-4	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9997867806761053	WITHOUT_CLASSIFICATION	2.1321932389463906E-4	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9952414898848427	WITHOUT_CLASSIFICATION	0.004758510115157319	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999375335305799	WITHOUT_CLASSIFICATION	6.246646942008955E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9987068944975928	WITHOUT_CLASSIFICATION	0.0012931055024072587	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9987068944975928	WITHOUT_CLASSIFICATION	0.0012931055024072587	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9997979014447574	WITHOUT_CLASSIFICATION	2.0209855524252446E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9997522139425602	WITHOUT_CLASSIFICATION	2.477860574398612E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9998962315864854	WITHOUT_CLASSIFICATION	1.037684135145E-4	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999659726578584	WITHOUT_CLASSIFICATION	3.402734214165877E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999659726578584	WITHOUT_CLASSIFICATION	3.402734214165877E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999659726578584	WITHOUT_CLASSIFICATION	3.402734214165877E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9997522139425602	WITHOUT_CLASSIFICATION	2.477860574398612E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.999848572632	WITHOUT_CLASSIFICATION	1.514273679999492E-4	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9998937199743338	WITHOUT_CLASSIFICATION	1.0628002566612574E-4	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9975575027386773	WITHOUT_CLASSIFICATION	0.002442497261322823	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998557619928845	WITHOUT_CLASSIFICATION	1.4423800711540477E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9998306879853106	WITHOUT_CLASSIFICATION	1.693120146893189E-4	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9990719699752574	WITHOUT_CLASSIFICATION	9.280300247424811E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9998195522333255	WITHOUT_CLASSIFICATION	1.8044776667444623E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9998787231643296	WITHOUT_CLASSIFICATION	1.2127683567032212E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9976976226048913	WITHOUT_CLASSIFICATION	0.002302377395108709	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999207893925327	WITHOUT_CLASSIFICATION	7.921060746732831E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999624180439035	WITHOUT_CLASSIFICATION	3.758195609649496E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9997172493667673	WITHOUT_CLASSIFICATION	2.8275063323272257E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999449352461178	WITHOUT_CLASSIFICATION	5.506475388223911E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9998981176656563	WITHOUT_CLASSIFICATION	1.0188233434373453E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997854172522384	WITHOUT_CLASSIFICATION	2.1458274776156493E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998601186518811	WITHOUT_CLASSIFICATION	1.3988134811903442E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9994789897170289	WITHOUT_CLASSIFICATION	5.210102829711311E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9997762972294587	WITHOUT_CLASSIFICATION	2.237027705413342E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999282538887377	WITHOUT_CLASSIFICATION	7.174611126219011E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9998756062140216	WITHOUT_CLASSIFICATION	1.2439378597835698E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998909848595862	WITHOUT_CLASSIFICATION	1.090151404139176E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999370577236946	WITHOUT_CLASSIFICATION	6.294227630539089E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997160856591935	WITHOUT_CLASSIFICATION	2.8391434080650955E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998772642289449	WITHOUT_CLASSIFICATION	1.227357710551756E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.998369329989191	WITHOUT_CLASSIFICATION	0.0016306700108089241	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.993263966667189	WITHOUT_CLASSIFICATION	0.00673603333281093	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999088795302238	WITHOUT_CLASSIFICATION	9.112046977630451E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9989782196629217	WITHOUT_CLASSIFICATION	0.0010217803370783794	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998279706445959	WITHOUT_CLASSIFICATION	1.7202935540415272E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998605096807414	WITHOUT_CLASSIFICATION	1.3949031925860757E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999973558782316	WITHOUT_CLASSIFICATION	2.644121768406112E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993115688716734	WITHOUT_CLASSIFICATION	6.88431128326648E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999918377720532	WITHOUT_CLASSIFICATION	8.162227946749998E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999685650416894	WITHOUT_CLASSIFICATION	3.143495831056518E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998497141553306	WITHOUT_CLASSIFICATION	1.5028584466937205E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9997808691392732	WITHOUT_CLASSIFICATION	2.1913086072681783E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998733178435153	WITHOUT_CLASSIFICATION	1.2668215648470457E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9967963168666645	WITHOUT_CLASSIFICATION	0.0032036831333355476	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9993916930456038	WITHOUT_CLASSIFICATION	6.083069543960901E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9998973668509628	WITHOUT_CLASSIFICATION	1.0263314903725787E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998733178435153	WITHOUT_CLASSIFICATION	1.2668215648470457E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998695134858435	WITHOUT_CLASSIFICATION	1.3048651415644387E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9969349566387182	WITHOUT_CLASSIFICATION	0.0030650433612817423	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999941383275448	WITHOUT_CLASSIFICATION	5.861672455109569E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9828389794608551	WITHOUT_CLASSIFICATION	0.017161020539144874	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999342125424243	WITHOUT_CLASSIFICATION	6.578745757563413E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9993916930456038	WITHOUT_CLASSIFICATION	6.083069543960901E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9828389794608551	WITHOUT_CLASSIFICATION	0.017161020539144874	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9997012615042367	WITHOUT_CLASSIFICATION	2.9873849576333647E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.999764714790518	WITHOUT_CLASSIFICATION	2.3528520948200705E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999952673846142	WITHOUT_CLASSIFICATION	4.732615385797139E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999332897609756	WITHOUT_CLASSIFICATION	6.67102390244636E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9992329278528679	WITHOUT_CLASSIFICATION	7.670721471320868E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9997276866609142	WITHOUT_CLASSIFICATION	2.723133390858484E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9992329278528679	WITHOUT_CLASSIFICATION	7.670721471320868E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9990998561167465	WITHOUT_CLASSIFICATION	9.001438832535928E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9912686980513874	WITHOUT_CLASSIFICATION	0.008731301948612652	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9859132690913591	WITHOUT_CLASSIFICATION	0.014086730908640963	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999809374405068	WITHOUT_CLASSIFICATION	1.9062559493241414E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998391221486143	WITHOUT_CLASSIFICATION	1.6087785138570786E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9998089523449075	WITHOUT_CLASSIFICATION	1.9104765509250717E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9991561915449111	WITHOUT_CLASSIFICATION	8.4380845508897E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9987315713958266	WITHOUT_CLASSIFICATION	0.0012684286041735075	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.999718442835296	WITHOUT_CLASSIFICATION	2.8155716470401517E-4	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9960180078377991	WITHOUT_CLASSIFICATION	0.003981992162200757	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9965104464538035	WITHOUT_CLASSIFICATION	0.0034895535461964854	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999414106388779	WITHOUT_CLASSIFICATION	5.858936112219353E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9991777012754807	WITHOUT_CLASSIFICATION	8.222987245193153E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9998593326757707	WITHOUT_CLASSIFICATION	1.4066732422924117E-4	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999261761884918	WITHOUT_CLASSIFICATION	7.382381150824217E-5	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.999944860386371	WITHOUT_CLASSIFICATION	5.513961362893285E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9953367149257453	WITHOUT_CLASSIFICATION	0.004663285074254736	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.998398739448406	WITHOUT_CLASSIFICATION	0.0016012605515940118	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999335109707754	WITHOUT_CLASSIFICATION	6.648902922457008E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999522538880826	WITHOUT_CLASSIFICATION	4.774611191733101E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999029632519378	WITHOUT_CLASSIFICATION	9.70367480621822E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999191145322286	WITHOUT_CLASSIFICATION	8.088546777140834E-5	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999700071519166	WITHOUT_CLASSIFICATION	2.9992848083386538E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999801865383469	WITHOUT_CLASSIFICATION	1.9813461653117906E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999084564140024	WITHOUT_CLASSIFICATION	9.154358599759507E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999674177788637	WITHOUT_CLASSIFICATION	3.258222113633349E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9998155455310579	WITHOUT_CLASSIFICATION	1.8445446894203903E-4	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999356826992196	WITHOUT_CLASSIFICATION	6.431730078034075E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9998864896524792	WITHOUT_CLASSIFICATION	1.1351034752087569E-4	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9998911131079494	WITHOUT_CLASSIFICATION	1.0888689205056941E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999652362578927	WITHOUT_CLASSIFICATION	3.4763742107302685E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999737177028363	WITHOUT_CLASSIFICATION	2.6282297163741127E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999414938666006	WITHOUT_CLASSIFICATION	5.850613339945097E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999872448934695	WITHOUT_CLASSIFICATION	1.2755106530489648E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999332989106839	WITHOUT_CLASSIFICATION	6.670108931605936E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9981326586083268	WITHOUT_CLASSIFICATION	0.0018673413916733034	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.999943525623941	WITHOUT_CLASSIFICATION	5.647437605911102E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999570499606484	WITHOUT_CLASSIFICATION	4.2950039351655297E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999593246557725	WITHOUT_CLASSIFICATION	4.0675344227362055E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999442927770323	WITHOUT_CLASSIFICATION	5.570722296777113E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9998448244854562	WITHOUT_CLASSIFICATION	1.5517551454372955E-4	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999392256773791	WITHOUT_CLASSIFICATION	6.077432262091199E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999601726569571	WITHOUT_CLASSIFICATION	3.982734304290276E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9961640724206723	WITHOUT_CLASSIFICATION	0.0038359275793276412	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9847691637839314	WITHOUT_CLASSIFICATION	0.015230836216068522	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999095388269966	WITHOUT_CLASSIFICATION	9.046117300336086E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9998824492700096	WITHOUT_CLASSIFICATION	1.1755072999032516E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9996880620019526	WITHOUT_CLASSIFICATION	3.1193799804739454E-4	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9995254146257276	WITHOUT_CLASSIFICATION	4.745853742723196E-4	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999073567342273	WITHOUT_CLASSIFICATION	9.264326577272032E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999350760125453	WITHOUT_CLASSIFICATION	6.492398745464285E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999847232047333	WITHOUT_CLASSIFICATION	1.527679526663636E-5	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999865966456266	WITHOUT_CLASSIFICATION	1.3403354373285521E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998123552908572	WITHOUT_CLASSIFICATION	1.8764470914281147E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9995766078560819	WITHOUT_CLASSIFICATION	4.2339214391801577E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9992162753237507	WITHOUT_CLASSIFICATION	7.837246762494409E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.999916538367332	WITHOUT_CLASSIFICATION	8.34616326679466E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.999980959157499	WITHOUT_CLASSIFICATION	1.9040842501064895E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999752659954918	WITHOUT_CLASSIFICATION	2.4734004508203602E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999746399516478	WITHOUT_CLASSIFICATION	2.5360048352202085E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9986379334058322	WITHOUT_CLASSIFICATION	0.0013620665941678684	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999572899928537	WITHOUT_CLASSIFICATION	4.271000714626208E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998123552908572	WITHOUT_CLASSIFICATION	1.8764470914281147E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.999980959157499	WITHOUT_CLASSIFICATION	1.9040842501064895E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999752659954918	WITHOUT_CLASSIFICATION	2.4734004508203602E-5	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.999854812376989	WITHOUT_CLASSIFICATION	1.4518762301096534E-4	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999381261998377	WITHOUT_CLASSIFICATION	6.187380016230978E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999095508569401	WITHOUT_CLASSIFICATION	9.044914305979753E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9997470153803636	WITHOUT_CLASSIFICATION	2.5298461963637844E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999847232047333	WITHOUT_CLASSIFICATION	1.527679526663636E-5	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999865966456266	WITHOUT_CLASSIFICATION	1.3403354373285521E-5	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9998960596637883	WITHOUT_CLASSIFICATION	1.0394033621168115E-4	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999749691231856	WITHOUT_CLASSIFICATION	2.5030876814381083E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999721371855587	WITHOUT_CLASSIFICATION	2.7862814441313437E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998084352410743	WITHOUT_CLASSIFICATION	1.9156475892575983E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9998629411311946	WITHOUT_CLASSIFICATION	1.3705886880538448E-4	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9995622169799443	WITHOUT_CLASSIFICATION	4.377830200557413E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9998702946022826	WITHOUT_CLASSIFICATION	1.2970539771736724E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.999926972174364	WITHOUT_CLASSIFICATION	7.302782563598028E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.999945929025385	WITHOUT_CLASSIFICATION	5.407097461506249E-5	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.999902343930025	WITHOUT_CLASSIFICATION	9.76560699749676E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9941607817630804	WITHOUT_CLASSIFICATION	0.005839218236919557	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999362889796501	WITHOUT_CLASSIFICATION	6.371102034982065E-5	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999985165666541	WITHOUT_CLASSIFICATION	1.4834333459515416E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999957524335145	WITHOUT_CLASSIFICATION	4.247566485566064E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9998406967126877	WITHOUT_CLASSIFICATION	1.5930328731226766E-4	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999963353670686	WITHOUT_CLASSIFICATION	3.6646329313940877E-6	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999847232047333	WITHOUT_CLASSIFICATION	1.527679526663636E-5	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999865966456266	WITHOUT_CLASSIFICATION	1.3403354373285521E-5	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9998305801154697	WITHOUT_CLASSIFICATION	1.694198845303528E-4	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9997164506415738	WITHOUT_CLASSIFICATION	2.8354935842613395E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999906327651963	WITHOUT_CLASSIFICATION	9.367234803654957E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9998988322155119	WITHOUT_CLASSIFICATION	1.0116778448812107E-4	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.999991113202678	WITHOUT_CLASSIFICATION	8.886797321917038E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999006552054628	WITHOUT_CLASSIFICATION	9.934479453719213E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9390897997025038	WITHOUT_CLASSIFICATION	0.0609102002974961	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9984807657697168	WITHOUT_CLASSIFICATION	0.0015192342302831543	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9997748887330186	WITHOUT_CLASSIFICATION	2.2511126698130111E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9997748887330186	WITHOUT_CLASSIFICATION	2.2511126698130111E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9945999943459902	WITHOUT_CLASSIFICATION	0.0054000056540097355	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9992509762478425	WITHOUT_CLASSIFICATION	7.49023752157406E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9888795280873255	WITHOUT_CLASSIFICATION	0.01112047191267463	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9991546824466229	WITHOUT_CLASSIFICATION	8.453175533770777E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999307866749687	WITHOUT_CLASSIFICATION	6.921332503133465E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999505643043217	WITHOUT_CLASSIFICATION	4.943569567823156E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9991417769893337	WITHOUT_CLASSIFICATION	8.582230106662372E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9991417769893337	WITHOUT_CLASSIFICATION	8.582230106662372E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9998773385919779	WITHOUT_CLASSIFICATION	1.226614080220673E-4	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9998722836642285	WITHOUT_CLASSIFICATION	1.277163357715049E-4	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9998316661654397	WITHOUT_CLASSIFICATION	1.6833383456027755E-4	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9998406352478822	WITHOUT_CLASSIFICATION	1.593647521177913E-4	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9998690009445405	WITHOUT_CLASSIFICATION	1.309990554595769E-4	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9993653361182375	WITHOUT_CLASSIFICATION	6.346638817624825E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999412284735129	WITHOUT_CLASSIFICATION	5.87715264871803E-5	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9987019844788607	WITHOUT_CLASSIFICATION	0.0012980155211392	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999539825869522	WITHOUT_CLASSIFICATION	4.6017413047840915E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999969247120609	WITHOUT_CLASSIFICATION	3.075287939032392E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999073680690025	WITHOUT_CLASSIFICATION	9.263193099749893E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999391217199523	WITHOUT_CLASSIFICATION	6.087828004766214E-5	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9996407345404537	WITHOUT_CLASSIFICATION	3.5926545954645633E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9997662207617826	WITHOUT_CLASSIFICATION	2.3377923821737745E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9985120498891179	WITHOUT_CLASSIFICATION	0.0014879501108821067	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999201951987864	WITHOUT_CLASSIFICATION	7.980480121361372E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999911618626292	WITHOUT_CLASSIFICATION	8.838137370834987E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999805699657979	WITHOUT_CLASSIFICATION	1.943003420207639E-5	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9998575124791123	WITHOUT_CLASSIFICATION	1.4248752088768453E-4	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9998533503243684	WITHOUT_CLASSIFICATION	1.4664967563156914E-4	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9971403171981312	WITHOUT_CLASSIFICATION	0.002859682801868816	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999989607621363	WITHOUT_CLASSIFICATION	1.039237863721283E-6	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999608575998026	WITHOUT_CLASSIFICATION	3.91424001974645E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9993853639788799	WITHOUT_CLASSIFICATION	6.146360211199933E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9998809558918537	WITHOUT_CLASSIFICATION	1.1904410814631481E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999752006374404	WITHOUT_CLASSIFICATION	2.479936255966013E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999206650486353	WITHOUT_CLASSIFICATION	7.933495136466157E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9990401834330291	WITHOUT_CLASSIFICATION	9.598165669707712E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9998929202164115	WITHOUT_CLASSIFICATION	1.0707978358842401E-4	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999938062300127	WITHOUT_CLASSIFICATION	6.193769987385167E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999498681919348	WITHOUT_CLASSIFICATION	5.013180806522024E-5	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999292797997621	WITHOUT_CLASSIFICATION	7.072020023794554E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.99948513452017	WITHOUT_CLASSIFICATION	5.148654798300185E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999798177889543	WITHOUT_CLASSIFICATION	2.018221104569015E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9961016054170332	WITHOUT_CLASSIFICATION	0.0038983945829667247	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9991147910670221	WITHOUT_CLASSIFICATION	8.85208932978005E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999911774238097	WITHOUT_CLASSIFICATION	8.82257619037157E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9986457850122723	WITHOUT_CLASSIFICATION	0.0013542149877276348	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999769898674835	WITHOUT_CLASSIFICATION	2.301013251654156E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998255219216906	WITHOUT_CLASSIFICATION	1.7447807830946478E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999759742075398	WITHOUT_CLASSIFICATION	2.402579246015808E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9994400412426514	WITHOUT_CLASSIFICATION	5.599587573485963E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999187306156765	WITHOUT_CLASSIFICATION	8.126938432357662E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9997407743102724	WITHOUT_CLASSIFICATION	2.592256897276787E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9996667248481829	WITHOUT_CLASSIFICATION	3.3327515181706457E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999759742075398	WITHOUT_CLASSIFICATION	2.402579246015808E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999187306156765	WITHOUT_CLASSIFICATION	8.126938432357662E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9988166341275446	WITHOUT_CLASSIFICATION	0.0011833658724553495	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999358224568047	WITHOUT_CLASSIFICATION	6.417754319534411E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9997809342706954	WITHOUT_CLASSIFICATION	2.1906572930469135E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999786811843672	WITHOUT_CLASSIFICATION	2.1318815632763245E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998255219216906	WITHOUT_CLASSIFICATION	1.7447807830946478E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998255219216906	WITHOUT_CLASSIFICATION	1.7447807830946478E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999759742075398	WITHOUT_CLASSIFICATION	2.402579246015808E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999699133805989	WITHOUT_CLASSIFICATION	3.0086619401095264E-5	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9997381588857034	WITHOUT_CLASSIFICATION	2.618411142966023E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9998894185817231	WITHOUT_CLASSIFICATION	1.1058141827683459E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9998894185817231	WITHOUT_CLASSIFICATION	1.1058141827683459E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9996390084872415	WITHOUT_CLASSIFICATION	3.609915127585405E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.999820283569991	WITHOUT_CLASSIFICATION	1.7971643000904797E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999294769074293	WITHOUT_CLASSIFICATION	7.052309257070825E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999294769074293	WITHOUT_CLASSIFICATION	7.052309257070825E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9969377855294622	WITHOUT_CLASSIFICATION	0.003062214470537884	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.999820283569991	WITHOUT_CLASSIFICATION	1.7971643000904797E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999294769074293	WITHOUT_CLASSIFICATION	7.052309257070825E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9969377855294622	WITHOUT_CLASSIFICATION	0.003062214470537884	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9998591007238754	WITHOUT_CLASSIFICATION	1.408992761246019E-4	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9997468292497421	WITHOUT_CLASSIFICATION	2.5317075025797347E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.999776902714529	WITHOUT_CLASSIFICATION	2.23097285470854E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9996561263828221	WITHOUT_CLASSIFICATION	3.438736171779617E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9995614690722783	WITHOUT_CLASSIFICATION	4.385309277216279E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999828192814803	WITHOUT_CLASSIFICATION	1.7180718519841056E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998331115298816	WITHOUT_CLASSIFICATION	1.668884701183132E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9996614520407903	WITHOUT_CLASSIFICATION	3.3854795920978937E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9970269482841834	WITHOUT_CLASSIFICATION	0.002973051715816639	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9980486976509545	WITHOUT_CLASSIFICATION	0.0019513023490455325	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999676279551758	WITHOUT_CLASSIFICATION	3.237204482431445E-5	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999879698642576	WITHOUT_CLASSIFICATION	1.2030135742320694E-5	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999840188517206	WITHOUT_CLASSIFICATION	1.5981148279374044E-5	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999429062008575	WITHOUT_CLASSIFICATION	5.709379914264268E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9997458005268451	WITHOUT_CLASSIFICATION	2.541994731547831E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9996499337111145	WITHOUT_CLASSIFICATION	3.500662888854295E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9969571169019528	WITHOUT_CLASSIFICATION	0.003042883098047163	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.999871070079814	WITHOUT_CLASSIFICATION	1.2892992018608015E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999528600780504	WITHOUT_CLASSIFICATION	4.7139921949560244E-5	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.999796488937683	WITHOUT_CLASSIFICATION	2.0351106231702388E-4	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999329734839695	WITHOUT_CLASSIFICATION	6.702651603049201E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999310774071486	WITHOUT_CLASSIFICATION	6.89225928513698E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999375452737508	WITHOUT_CLASSIFICATION	6.245472624916853E-5	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.999962438664902	WITHOUT_CLASSIFICATION	3.756133509806479E-5	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9997948751825603	WITHOUT_CLASSIFICATION	2.0512481743979733E-4	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9997765319529687	WITHOUT_CLASSIFICATION	2.23468047031328E-4	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.999561762387824	WITHOUT_CLASSIFICATION	4.382376121759558E-4	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9998974449303356	WITHOUT_CLASSIFICATION	1.025550696643562E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9988446163030074	WITHOUT_CLASSIFICATION	0.00115538369699259	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.999931155320029	WITHOUT_CLASSIFICATION	6.884467997103795E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998789762646298	WITHOUT_CLASSIFICATION	1.2102373537017236E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9996033050500351	WITHOUT_CLASSIFICATION	3.966949499648187E-4	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9997046437989543	WITHOUT_CLASSIFICATION	2.953562010457001E-4	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9991990085111222	WITHOUT_CLASSIFICATION	8.009914888777777E-4	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.999986746946819	WITHOUT_CLASSIFICATION	1.325305318089731E-5	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997421905193641	WITHOUT_CLASSIFICATION	2.578094806358916E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997104910827551	WITHOUT_CLASSIFICATION	2.895089172449133E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997104910827551	WITHOUT_CLASSIFICATION	2.895089172449133E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997104910827551	WITHOUT_CLASSIFICATION	2.895089172449133E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999990251704043	WITHOUT_CLASSIFICATION	9.74829595711003E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9991420189094586	WITHOUT_CLASSIFICATION	8.579810905413539E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9883407804441109	WITHOUT_CLASSIFICATION	0.011659219555889166	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9976168327958691	WITHOUT_CLASSIFICATION	0.002383167204130838	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9995742327535996	WITHOUT_CLASSIFICATION	4.2576724640048776E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9998891033970659	WITHOUT_CLASSIFICATION	1.1089660293406966E-4	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999909595216837	WITHOUT_CLASSIFICATION	9.040478316335294E-6	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9992028960996645	WITHOUT_CLASSIFICATION	7.971039003354215E-4	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9998657759174018	WITHOUT_CLASSIFICATION	1.342240825981483E-4	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.999865291308618	WITHOUT_CLASSIFICATION	1.3470869138195368E-4	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9975764631845593	WITHOUT_CLASSIFICATION	0.002423536815440622	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9997831269316926	WITHOUT_CLASSIFICATION	2.1687306830742712E-4	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999436077477593	WITHOUT_CLASSIFICATION	5.639225224071909E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9988521207372626	WITHOUT_CLASSIFICATION	0.0011478792627374872	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9995128215672503	WITHOUT_CLASSIFICATION	4.8717843274968163E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999925591520726	WITHOUT_CLASSIFICATION	7.440847927374899E-6	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9998515316188507	WITHOUT_CLASSIFICATION	1.484683811492918E-4	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999623425766223	WITHOUT_CLASSIFICATION	3.765742337767521E-5	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.999757554909348	WITHOUT_CLASSIFICATION	2.4244509065200463E-4	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9997117726995496	WITHOUT_CLASSIFICATION	2.882273004503631E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9998000430567774	WITHOUT_CLASSIFICATION	1.9995694322259608E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9978679883345232	WITHOUT_CLASSIFICATION	0.0021320116654768855	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9997197898397072	WITHOUT_CLASSIFICATION	2.802101602928354E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9825216464711712	WITHOUT_CLASSIFICATION	0.017478353528828677	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999952420333379	WITHOUT_CLASSIFICATION	4.75796666204297E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999080453896305	WITHOUT_CLASSIFICATION	9.195461036949007E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999920336880626	WITHOUT_CLASSIFICATION	7.966311937397965E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999637655425863	WITHOUT_CLASSIFICATION	3.62344574137336E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999040400008933	WITHOUT_CLASSIFICATION	9.595999910671299E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9998500967459585	WITHOUT_CLASSIFICATION	1.499032540414915E-4	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999222749048148	WITHOUT_CLASSIFICATION	7.772509518524168E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9796143243649705	WITHOUT_CLASSIFICATION	0.020385675635029493	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9998261249813143	WITHOUT_CLASSIFICATION	1.7387501868574155E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999345094473339	WITHOUT_CLASSIFICATION	6.549055266613151E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9996313284686225	WITHOUT_CLASSIFICATION	3.6867153137759296E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9992035975398389	WITHOUT_CLASSIFICATION	7.964024601610912E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.999999879547192	WITHOUT_CLASSIFICATION	1.2045280789347258E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9998581947319184	WITHOUT_CLASSIFICATION	1.4180526808165583E-4	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999382663469807	WITHOUT_CLASSIFICATION	6.173365301922687E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9998978739930985	WITHOUT_CLASSIFICATION	1.021260069015968E-4	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999463135157054	WITHOUT_CLASSIFICATION	5.36864842946274E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999226759805523	WITHOUT_CLASSIFICATION	7.732401944765444E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999006552054628	WITHOUT_CLASSIFICATION	9.934479453719213E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999942177240364	WITHOUT_CLASSIFICATION	5.782275963646329E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999208413422871	WITHOUT_CLASSIFICATION	7.915865771298477E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998223271993829	WITHOUT_CLASSIFICATION	1.7767280061709994E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9963176128187174	WITHOUT_CLASSIFICATION	0.0036823871812826665	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.986943046006503	WITHOUT_CLASSIFICATION	0.013056953993497161	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9990566530896476	WITHOUT_CLASSIFICATION	9.433469103523704E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9997684340302855	WITHOUT_CLASSIFICATION	2.315659697145623E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999025510711301	WITHOUT_CLASSIFICATION	9.744892886988206E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9991112863982644	WITHOUT_CLASSIFICATION	8.887136017356166E-4	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9995642096250972	WITHOUT_CLASSIFICATION	4.3579037490286665E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9997925501540166	WITHOUT_CLASSIFICATION	2.0744984598335063E-4	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999753007260032	WITHOUT_CLASSIFICATION	2.4699273996777756E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999006479102043	WITHOUT_CLASSIFICATION	9.935208979573753E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9969522855161425	WITHOUT_CLASSIFICATION	0.003047714483857624	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9998818496198165	WITHOUT_CLASSIFICATION	1.1815038018357809E-4	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999397264000515	WITHOUT_CLASSIFICATION	6.027359994857116E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9996669808776498	WITHOUT_CLASSIFICATION	3.330191223502358E-4	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9994754467988645	WITHOUT_CLASSIFICATION	5.245532011355675E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9998719857950754	WITHOUT_CLASSIFICATION	1.2801420492457037E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9996639801297982	WITHOUT_CLASSIFICATION	3.3601987020180207E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9996535841979196	WITHOUT_CLASSIFICATION	3.464158020803623E-4	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9803518556560843	WITHOUT_CLASSIFICATION	0.019648144343915677	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9998945776876808	WITHOUT_CLASSIFICATION	1.0542231231931384E-4	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9997374308463816	WITHOUT_CLASSIFICATION	2.625691536183864E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999689190351747	WITHOUT_CLASSIFICATION	3.108096482528055E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999689190351747	WITHOUT_CLASSIFICATION	3.108096482528055E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9998945776876808	WITHOUT_CLASSIFICATION	1.0542231231931384E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9998729639403849	WITHOUT_CLASSIFICATION	1.2703605961504808E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9997254925366384	WITHOUT_CLASSIFICATION	2.745074633614981E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9997254925366384	WITHOUT_CLASSIFICATION	2.745074633614981E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999222289023947	WITHOUT_CLASSIFICATION	7.777109760533867E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9998974852763662	WITHOUT_CLASSIFICATION	1.0251472363370872E-4	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9985150637475763	WITHOUT_CLASSIFICATION	0.0014849362524238057	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9939506395534666	WITHOUT_CLASSIFICATION	0.00604936044653336	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9997900397230317	WITHOUT_CLASSIFICATION	2.0996027696841576E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9998602264866429	WITHOUT_CLASSIFICATION	1.3977351335722808E-4	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9998393252404485	WITHOUT_CLASSIFICATION	1.6067475955158328E-4	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9996602530426187	WITHOUT_CLASSIFICATION	3.397469573813072E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9995454532706853	WITHOUT_CLASSIFICATION	4.545467293146199E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9997934787255511	WITHOUT_CLASSIFICATION	2.0652127444881218E-4	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999966655797903	WITHOUT_CLASSIFICATION	3.3344202097823524E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999618050142826	WITHOUT_CLASSIFICATION	3.819498571751701E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9998990134150114	WITHOUT_CLASSIFICATION	1.0098658498863963E-4	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.999921113006458	WITHOUT_CLASSIFICATION	7.888699354198424E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9998508789947611	WITHOUT_CLASSIFICATION	1.4912100523889482E-4	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999702798042468	WITHOUT_CLASSIFICATION	2.97201957532651E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9983659489971601	WITHOUT_CLASSIFICATION	0.0016340510028398248	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9942310289781711	WITHOUT_CLASSIFICATION	0.005768971021828951	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9995782581264067	WITHOUT_CLASSIFICATION	4.2174187359331444E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999957366644502	WITHOUT_CLASSIFICATION	4.263335549757789E-6	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9993126157064258	WITHOUT_CLASSIFICATION	6.873842935741805E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9997413517561381	WITHOUT_CLASSIFICATION	2.5864824386189546E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999300195643209	WITHOUT_CLASSIFICATION	6.998043567908372E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999300195643209	WITHOUT_CLASSIFICATION	6.998043567908372E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9995593898217948	WITHOUT_CLASSIFICATION	4.4061017820518447E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9973740179141711	WITHOUT_CLASSIFICATION	0.00262598208582881	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9981929670212133	WITHOUT_CLASSIFICATION	0.0018070329787867449	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998488985657443	WITHOUT_CLASSIFICATION	1.5110143425560495E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9998429798754929	WITHOUT_CLASSIFICATION	1.57020124507114E-4	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999491104111042	WITHOUT_CLASSIFICATION	5.088958889581507E-5	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999172478353525	WITHOUT_CLASSIFICATION	8.275216464748786E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.999934252153081	WITHOUT_CLASSIFICATION	6.574784691900108E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9995024256452992	WITHOUT_CLASSIFICATION	4.975743547008015E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.997845881838972	WITHOUT_CLASSIFICATION	0.0021541181610279657	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9998808216794838	WITHOUT_CLASSIFICATION	1.1917832051624339E-4	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9988582534906102	WITHOUT_CLASSIFICATION	0.0011417465093897738	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9993362404053081	WITHOUT_CLASSIFICATION	6.637595946918939E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9997279381600871	WITHOUT_CLASSIFICATION	2.720618399130079E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.999979048390971	WITHOUT_CLASSIFICATION	2.095160902901133E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999887617578253	WITHOUT_CLASSIFICATION	1.123824217471908E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9875044785261918	WITHOUT_CLASSIFICATION	0.012495521473808268	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999887617578253	WITHOUT_CLASSIFICATION	1.123824217471908E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999729157617774	WITHOUT_CLASSIFICATION	2.708423822261849E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999432622289479	WITHOUT_CLASSIFICATION	5.6737771052147114E-5	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.999998696512315	WITHOUT_CLASSIFICATION	1.3034876850539882E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.999708182587903	WITHOUT_CLASSIFICATION	2.918174120970917E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9991443301900272	WITHOUT_CLASSIFICATION	8.556698099726689E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.999959946850944	WITHOUT_CLASSIFICATION	4.005314905600814E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9998912839948989	WITHOUT_CLASSIFICATION	1.0871600510115888E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999451570032045	WITHOUT_CLASSIFICATION	5.4842996795493905E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.999852847869984	WITHOUT_CLASSIFICATION	1.471521300160901E-4	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9998617534115588	WITHOUT_CLASSIFICATION	1.3824658844117994E-4	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9997581528185914	WITHOUT_CLASSIFICATION	2.4184718140860656E-4	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.999934141471821	WITHOUT_CLASSIFICATION	6.585852817896327E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999880111134534	WITHOUT_CLASSIFICATION	1.1988886546556954E-5	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9998786983052406	WITHOUT_CLASSIFICATION	1.2130169475941246E-4	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9998692172938648	WITHOUT_CLASSIFICATION	1.307827061352925E-4	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9997452449260111	WITHOUT_CLASSIFICATION	2.5475507398886176E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9994626864062953	WITHOUT_CLASSIFICATION	5.373135937047862E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9998509634994907	WITHOUT_CLASSIFICATION	1.490365005094465E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999589049165661	WITHOUT_CLASSIFICATION	4.1095083433796674E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.99662707496064	WITHOUT_CLASSIFICATION	0.0033729250393601767	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.99954038635734	WITHOUT_CLASSIFICATION	4.596136426599316E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999919083974482	WITHOUT_CLASSIFICATION	8.09160255186322E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999328608579885	WITHOUT_CLASSIFICATION	6.713914201144648E-5	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999454567500512	WITHOUT_CLASSIFICATION	5.4543249948823055E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9998195522333255	WITHOUT_CLASSIFICATION	1.8044776667444623E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9998787231643296	WITHOUT_CLASSIFICATION	1.2127683567032212E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9995024256452992	WITHOUT_CLASSIFICATION	4.975743547008015E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.997845881838972	WITHOUT_CLASSIFICATION	0.0021541181610279657	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9998808216794838	WITHOUT_CLASSIFICATION	1.1917832051624339E-4	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999351242288479	WITHOUT_CLASSIFICATION	6.487577115211821E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9995696739244441	WITHOUT_CLASSIFICATION	4.303260755559253E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999599612519994	WITHOUT_CLASSIFICATION	4.003874800052223E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9995825483514393	WITHOUT_CLASSIFICATION	4.174516485607312E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9997706535795883	WITHOUT_CLASSIFICATION	2.2934642041175197E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9997320022203126	WITHOUT_CLASSIFICATION	2.6799777968744873E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9997675202768923	WITHOUT_CLASSIFICATION	2.3247972310761728E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999514700084772	WITHOUT_CLASSIFICATION	4.852999152289599E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9998382086867932	WITHOUT_CLASSIFICATION	1.6179131320682877E-4	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.999948772660903	WITHOUT_CLASSIFICATION	5.122733909702501E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9994722818439984	WITHOUT_CLASSIFICATION	5.277181560014988E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9994722818439984	WITHOUT_CLASSIFICATION	5.277181560014988E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999540000842881	WITHOUT_CLASSIFICATION	4.5999915711906256E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999723829246254	WITHOUT_CLASSIFICATION	2.7617075374594175E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999966449524786	WITHOUT_CLASSIFICATION	3.3550475213984214E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999363925352504	WITHOUT_CLASSIFICATION	6.36074647496078E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9995536387621915	WITHOUT_CLASSIFICATION	4.463612378084239E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999397257511848	WITHOUT_CLASSIFICATION	6.02742488151311E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999523296945733	WITHOUT_CLASSIFICATION	4.76703054266635E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887952780385	WITHOUT_CLASSIFICATION	1.120472196138677E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999500167473002	WITHOUT_CLASSIFICATION	4.998325269964208E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999901649100712	WITHOUT_CLASSIFICATION	9.835089928752326E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999974076815196	WITHOUT_CLASSIFICATION	2.5923184804029144E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999480627355622	WITHOUT_CLASSIFICATION	5.1937264437757506E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999586253704454	WITHOUT_CLASSIFICATION	4.137462955450458E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9980432671012281	WITHOUT_CLASSIFICATION	0.001956732898771896	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9987399506032539	WITHOUT_CLASSIFICATION	0.0012600493967460818	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9995005471463487	WITHOUT_CLASSIFICATION	4.994528536512798E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999524024683009	WITHOUT_CLASSIFICATION	4.759753169924522E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9976976226048913	WITHOUT_CLASSIFICATION	0.002302377395108709	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999207893925327	WITHOUT_CLASSIFICATION	7.921060746732831E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999624180439035	WITHOUT_CLASSIFICATION	3.758195609649496E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9997172493667673	WITHOUT_CLASSIFICATION	2.8275063323272257E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999449352461178	WITHOUT_CLASSIFICATION	5.506475388223911E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9998981176656563	WITHOUT_CLASSIFICATION	1.0188233434373453E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997854172522384	WITHOUT_CLASSIFICATION	2.1458274776156493E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9998601186518811	WITHOUT_CLASSIFICATION	1.3988134811903442E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9994789897170289	WITHOUT_CLASSIFICATION	5.210102829711311E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9997762972294587	WITHOUT_CLASSIFICATION	2.237027705413342E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999282538887377	WITHOUT_CLASSIFICATION	7.174611126219011E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9998756062140216	WITHOUT_CLASSIFICATION	1.2439378597835698E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998909848595862	WITHOUT_CLASSIFICATION	1.090151404139176E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999370577236946	WITHOUT_CLASSIFICATION	6.294227630539089E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.998369329989191	WITHOUT_CLASSIFICATION	0.0016306700108089241	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.993263966667189	WITHOUT_CLASSIFICATION	0.00673603333281093	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999088795302238	WITHOUT_CLASSIFICATION	9.112046977630451E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9989782196629217	WITHOUT_CLASSIFICATION	0.0010217803370783794	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998279706445959	WITHOUT_CLASSIFICATION	1.7202935540415272E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998605096807414	WITHOUT_CLASSIFICATION	1.3949031925860757E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.999973558782316	WITHOUT_CLASSIFICATION	2.644121768406112E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999918377720532	WITHOUT_CLASSIFICATION	8.162227946749998E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9997808691392732	WITHOUT_CLASSIFICATION	2.1913086072681783E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9967963168666645	WITHOUT_CLASSIFICATION	0.0032036831333355476	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9993916930456038	WITHOUT_CLASSIFICATION	6.083069543960901E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998497141553306	WITHOUT_CLASSIFICATION	1.5028584466937205E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9969349566387182	WITHOUT_CLASSIFICATION	0.0030650433612817423	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998695134858435	WITHOUT_CLASSIFICATION	1.3048651415644387E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9828389794608551	WITHOUT_CLASSIFICATION	0.017161020539144874	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999540000842881	WITHOUT_CLASSIFICATION	4.5999915711906256E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999723829246254	WITHOUT_CLASSIFICATION	2.7617075374594175E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999966449524786	WITHOUT_CLASSIFICATION	3.3550475213984214E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999363925352504	WITHOUT_CLASSIFICATION	6.36074647496078E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999523296945733	WITHOUT_CLASSIFICATION	4.76703054266635E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887952780385	WITHOUT_CLASSIFICATION	1.120472196138677E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.999270186343038	WITHOUT_CLASSIFICATION	7.298136569619644E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999952673846142	WITHOUT_CLASSIFICATION	4.732615385797139E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999332897609756	WITHOUT_CLASSIFICATION	6.67102390244636E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999974076815196	WITHOUT_CLASSIFICATION	2.5923184804029144E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999480627355622	WITHOUT_CLASSIFICATION	5.1937264437757506E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999586253704454	WITHOUT_CLASSIFICATION	4.137462955450458E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9980432671012281	WITHOUT_CLASSIFICATION	0.001956732898771896	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9995005471463487	WITHOUT_CLASSIFICATION	4.994528536512798E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999023111772135	WITHOUT_CLASSIFICATION	9.768882278649493E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999023111772135	WITHOUT_CLASSIFICATION	9.768882278649493E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999854242859381	WITHOUT_CLASSIFICATION	1.4575714061797842E-5	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9994860896526261	WITHOUT_CLASSIFICATION	5.139103473739502E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999741057169783	WITHOUT_CLASSIFICATION	2.589428302171795E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999854399707051	WITHOUT_CLASSIFICATION	1.4560029294895705E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997356504489027	WITHOUT_CLASSIFICATION	2.643495510973383E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9993453958974919	WITHOUT_CLASSIFICATION	6.546041025080059E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997279849677891	WITHOUT_CLASSIFICATION	2.72015032210954E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9997836835970271	WITHOUT_CLASSIFICATION	2.1631640297292023E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997279849677891	WITHOUT_CLASSIFICATION	2.72015032210954E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9994949293773823	WITHOUT_CLASSIFICATION	5.050706226176978E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9997756361510114	WITHOUT_CLASSIFICATION	2.2436384898860966E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9996506486294359	WITHOUT_CLASSIFICATION	3.493513705641746E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9996506486294359	WITHOUT_CLASSIFICATION	3.493513705641746E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9995758751124424	WITHOUT_CLASSIFICATION	4.2412488755769206E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9991308380281109	WITHOUT_CLASSIFICATION	8.691619718890394E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9998180367656913	WITHOUT_CLASSIFICATION	1.8196323430864724E-4	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9993484756204177	WITHOUT_CLASSIFICATION	6.515243795822439E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9992331546845191	WITHOUT_CLASSIFICATION	7.668453154808303E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999604405161207	WITHOUT_CLASSIFICATION	3.955948387930634E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9986328586782174	WITHOUT_CLASSIFICATION	0.001367141321782685	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999695307423915	WITHOUT_CLASSIFICATION	3.046925760847264E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998236304854834	WITHOUT_CLASSIFICATION	1.7636951451656288E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9996176029872813	WITHOUT_CLASSIFICATION	3.8239701271864344E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999069915469615	WITHOUT_CLASSIFICATION	9.300845303843901E-5	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999887329056087	WITHOUT_CLASSIFICATION	1.1267094391293619E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9998410175866655	WITHOUT_CLASSIFICATION	1.5898241333438026E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9998410175866655	WITHOUT_CLASSIFICATION	1.5898241333438026E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9998848837341383	WITHOUT_CLASSIFICATION	1.1511626586166626E-4	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9996480177671747	WITHOUT_CLASSIFICATION	3.519822328252081E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9952968751949928	WITHOUT_CLASSIFICATION	0.004703124805007212	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9951008068390554	WITHOUT_CLASSIFICATION	0.004899193160944626	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9972463226905894	WITHOUT_CLASSIFICATION	0.0027536773094105245	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999689690768008	WITHOUT_CLASSIFICATION	3.103092319932197E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999744759318563	WITHOUT_CLASSIFICATION	2.5524068143738046E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9998522183966713	WITHOUT_CLASSIFICATION	1.477816033287878E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999114702653744	WITHOUT_CLASSIFICATION	8.852973462547725E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999587339531201	WITHOUT_CLASSIFICATION	4.12660468799164E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999591193816497	WITHOUT_CLASSIFICATION	4.088061835021067E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999537937987909	WITHOUT_CLASSIFICATION	4.620620120906632E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999329186582145	WITHOUT_CLASSIFICATION	6.70813417854354E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9462459188708229	WITHOUT_CLASSIFICATION	0.053754081129177164	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998488985657443	WITHOUT_CLASSIFICATION	1.5110143425560495E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998932785984871	WITHOUT_CLASSIFICATION	1.0672140151287869E-4	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9998679826452301	WITHOUT_CLASSIFICATION	1.3201735476985976E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999756517888457	WITHOUT_CLASSIFICATION	2.434821115421591E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9979561459370087	WITHOUT_CLASSIFICATION	0.002043854062991404	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9995344726334122	WITHOUT_CLASSIFICATION	4.655273665877904E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999045844319607	WITHOUT_CLASSIFICATION	9.541556803930405E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9996608201033335	WITHOUT_CLASSIFICATION	3.3917989666656337E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9996976822386641	WITHOUT_CLASSIFICATION	3.0231776133584026E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999137887314199	WITHOUT_CLASSIFICATION	8.621126858010036E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999642788521392	WITHOUT_CLASSIFICATION	3.572114786071971E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999642788521392	WITHOUT_CLASSIFICATION	3.572114786071971E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9936929299451615	WITHOUT_CLASSIFICATION	0.006307070054838533	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9996909765814427	WITHOUT_CLASSIFICATION	3.0902341855728677E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999077417181943	WITHOUT_CLASSIFICATION	9.225828180566334E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977779454244567	WITHOUT_CLASSIFICATION	0.002222054575543234	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9998191739735048	WITHOUT_CLASSIFICATION	1.8082602649506816E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.002227609840828836	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9997268535536987	WITHOUT_CLASSIFICATION	2.73146446301326E-4	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9966266852977322	WITHOUT_CLASSIFICATION	0.00337331470226767	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999516722454903	WITHOUT_CLASSIFICATION	4.8327754509721974E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9995772152887421	WITHOUT_CLASSIFICATION	4.2278471125798035E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999006714410799	WITHOUT_CLASSIFICATION	9.932855892022882E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9995730527153023	WITHOUT_CLASSIFICATION	4.26947284697755E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999625756175641	WITHOUT_CLASSIFICATION	3.7424382435984E-5	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9959039108902976	WITHOUT_CLASSIFICATION	0.004096089109702398	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9998742406930972	WITHOUT_CLASSIFICATION	1.2575930690281645E-4	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999213785670128	WITHOUT_CLASSIFICATION	7.862143298725811E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999986396876663	WITHOUT_CLASSIFICATION	1.3603123336820746E-6	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.8327266080686844	WITHOUT_CLASSIFICATION	0.16727339193131566	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9747047337428412	WITHOUT_CLASSIFICATION	0.02529526625715883	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9997159546296681	WITHOUT_CLASSIFICATION	2.840453703318529E-4	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9998333428224966	WITHOUT_CLASSIFICATION	1.6665717750336025E-4	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999744051489987	WITHOUT_CLASSIFICATION	2.5594851001365546E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9994789897170289	WITHOUT_CLASSIFICATION	5.210102829711311E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997160856591935	WITHOUT_CLASSIFICATION	2.8391434080650955E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9993916930456038	WITHOUT_CLASSIFICATION	6.083069543960901E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999854399707051	WITHOUT_CLASSIFICATION	1.4560029294895705E-4	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9990301056498014	WITHOUT_CLASSIFICATION	9.698943501984576E-4	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9963525638799934	WITHOUT_CLASSIFICATION	0.003647436120006559	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999449352461178	WITHOUT_CLASSIFICATION	5.506475388223911E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9938469757132451	WITHOUT_CLASSIFICATION	0.0061530242867548855	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.998122262189104	WITHOUT_CLASSIFICATION	0.0018777378108960014	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998912500522359	WITHOUT_CLASSIFICATION	1.0874994776408184E-4	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9998489291392791	WITHOUT_CLASSIFICATION	1.5107086072093433E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9993916930456038	WITHOUT_CLASSIFICATION	6.083069543960901E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.997248567617543	WITHOUT_CLASSIFICATION	0.0027514323824570416	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9984807657697168	WITHOUT_CLASSIFICATION	0.0015192342302831543	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9998045967984444	WITHOUT_CLASSIFICATION	1.9540320155552593E-4	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999786012480787	WITHOUT_CLASSIFICATION	2.1398751921360846E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9983031017258125	WITHOUT_CLASSIFICATION	0.0016968982741874322	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999885123230786	WITHOUT_CLASSIFICATION	1.1487676921389512E-5	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999696235497635	WITHOUT_CLASSIFICATION	3.0376450236481227E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998255219216906	WITHOUT_CLASSIFICATION	1.7447807830946478E-4	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.999970571689504	WITHOUT_CLASSIFICATION	2.9428310496089973E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9996390084872415	WITHOUT_CLASSIFICATION	3.609915127585405E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9996390084872415	WITHOUT_CLASSIFICATION	3.609915127585405E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9996390084872415	WITHOUT_CLASSIFICATION	3.609915127585405E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999294769074293	WITHOUT_CLASSIFICATION	7.052309257070825E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9991500427950756	WITHOUT_CLASSIFICATION	8.499572049243699E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9997667882059439	WITHOUT_CLASSIFICATION	2.332117940561117E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999828192814803	WITHOUT_CLASSIFICATION	1.7180718519841056E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999972842759806	WITHOUT_CLASSIFICATION	2.715724019334595E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9998962160858079	WITHOUT_CLASSIFICATION	1.0378391419211782E-4	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9989973169442015	WITHOUT_CLASSIFICATION	0.0010026830557984922	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9996101188633066	WITHOUT_CLASSIFICATION	3.898811366932747E-4	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9996534179142857	WITHOUT_CLASSIFICATION	3.465820857143157E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999998456638177	WITHOUT_CLASSIFICATION	1.5433618218516215E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999430399664166	WITHOUT_CLASSIFICATION	5.696003358343736E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999881793062112	WITHOUT_CLASSIFICATION	1.1820693788747385E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999363371363115	WITHOUT_CLASSIFICATION	6.366286368854899E-5	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999999434407992	WITHOUT_CLASSIFICATION	5.6559200798184936E-8	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999268633924528	WITHOUT_CLASSIFICATION	7.313660754718374E-5	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.999932990921704	WITHOUT_CLASSIFICATION	6.700907829602729E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9997830372613552	WITHOUT_CLASSIFICATION	2.169627386447965E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9991731422603538	WITHOUT_CLASSIFICATION	8.26857739646158E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999221593671013	WITHOUT_CLASSIFICATION	7.784063289869871E-5	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999588294395473	WITHOUT_CLASSIFICATION	4.1170560452730314E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997104910827551	WITHOUT_CLASSIFICATION	2.895089172449133E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999191034961742	WITHOUT_CLASSIFICATION	8.08965038257956E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999263511190024	WITHOUT_CLASSIFICATION	7.364888099767122E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999263511190024	WITHOUT_CLASSIFICATION	7.364888099767122E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9998588639829693	WITHOUT_CLASSIFICATION	1.4113601703067286E-4	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9998248556067263	WITHOUT_CLASSIFICATION	1.7514439327368623E-4	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9998906869505261	WITHOUT_CLASSIFICATION	1.0931304947385549E-4	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999655703878629	WITHOUT_CLASSIFICATION	3.44296121370148E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999979546631306	WITHOUT_CLASSIFICATION	2.0453368694369914E-6	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999977380642324	WITHOUT_CLASSIFICATION	2.26193576760772E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9998163749991209	WITHOUT_CLASSIFICATION	1.8362500087907134E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999834922184753	WITHOUT_CLASSIFICATION	1.6507781524703774E-5	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9989761881514061	WITHOUT_CLASSIFICATION	0.0010238118485939108	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9960465569402267	WITHOUT_CLASSIFICATION	0.003953443059773256	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9980926247772077	WITHOUT_CLASSIFICATION	0.0019073752227921758	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998680280661645	WITHOUT_CLASSIFICATION	1.3197193383556976E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9998368965361251	WITHOUT_CLASSIFICATION	1.631034638750177E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999618050142826	WITHOUT_CLASSIFICATION	3.819498571751701E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999618050142826	WITHOUT_CLASSIFICATION	3.819498571751701E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9998046652084966	WITHOUT_CLASSIFICATION	1.9533479150341568E-4	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9970988524427241	WITHOUT_CLASSIFICATION	0.0029011475572758147	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9998442204057261	WITHOUT_CLASSIFICATION	1.557795942739378E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999771695086958	WITHOUT_CLASSIFICATION	2.2830491304275387E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999771695086958	WITHOUT_CLASSIFICATION	2.2830491304275387E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999771695086958	WITHOUT_CLASSIFICATION	2.2830491304275387E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9998105500411243	WITHOUT_CLASSIFICATION	1.894499588758009E-4	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999985559768506	WITHOUT_CLASSIFICATION	1.4440231493797656E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9988582534906102	WITHOUT_CLASSIFICATION	0.0011417465093897738	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9995444101641082	WITHOUT_CLASSIFICATION	4.5558983589175024E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999748269983598	WITHOUT_CLASSIFICATION	2.5173001640205046E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9998082811555503	WITHOUT_CLASSIFICATION	1.9171884444972898E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9998422050160123	WITHOUT_CLASSIFICATION	1.5779498398769804E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999280487900215	WITHOUT_CLASSIFICATION	7.195120997853328E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999280487900215	WITHOUT_CLASSIFICATION	7.195120997853328E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999238101716559	WITHOUT_CLASSIFICATION	7.618982834406359E-5	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999373084932253	WITHOUT_CLASSIFICATION	6.269150677475031E-5	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9985932748657396	WITHOUT_CLASSIFICATION	0.0014067251342604653	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9917018800085398	WITHOUT_CLASSIFICATION	0.008298119991460188	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.999996142580842	WITHOUT_CLASSIFICATION	3.857419157987725E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9998174937081753	WITHOUT_CLASSIFICATION	1.8250629182471622E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9994722818439984	WITHOUT_CLASSIFICATION	5.277181560014988E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9995536387621915	WITHOUT_CLASSIFICATION	4.463612378084239E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999397257511848	WITHOUT_CLASSIFICATION	6.02742488151311E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999901649100712	WITHOUT_CLASSIFICATION	9.835089928752326E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9987399506032539	WITHOUT_CLASSIFICATION	0.0012600493967460818	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999101457797337	WITHOUT_CLASSIFICATION	8.985422026641108E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9998141663706636	WITHOUT_CLASSIFICATION	1.8583362933644377E-4	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9998523023733051	WITHOUT_CLASSIFICATION	1.4769762669488337E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997356504489027	WITHOUT_CLASSIFICATION	2.643495510973383E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9998848837341383	WITHOUT_CLASSIFICATION	1.1511626586166626E-4	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9998604486498802	WITHOUT_CLASSIFICATION	1.3955135011977136E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999703763414184	WITHOUT_CLASSIFICATION	2.9623658581658024E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.99999725763589	WITHOUT_CLASSIFICATION	2.7423641099762672E-6	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9980159745819995	WITHOUT_CLASSIFICATION	0.0019840254180005274	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9932271672365869	WITHOUT_CLASSIFICATION	0.006772832763413132	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999407346831454	WITHOUT_CLASSIFICATION	5.926531685468693E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999653832676129	WITHOUT_CLASSIFICATION	3.461673238712538E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9952927240431314	WITHOUT_CLASSIFICATION	0.004707275956868621	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999991435402732	WITHOUT_CLASSIFICATION	8.564597267587266E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9998477290743767	WITHOUT_CLASSIFICATION	1.5227092562325917E-4	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9998477290743767	WITHOUT_CLASSIFICATION	1.5227092562325917E-4	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.990380095782205	WITHOUT_CLASSIFICATION	0.009619904217794989	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9985832738380055	WITHOUT_CLASSIFICATION	0.0014167261619945648	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9993425687789402	WITHOUT_CLASSIFICATION	6.574312210598822E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9997368745691264	WITHOUT_CLASSIFICATION	2.631254308736027E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9997368745691264	WITHOUT_CLASSIFICATION	2.631254308736027E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999837814999513	WITHOUT_CLASSIFICATION	1.6218500048739943E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9993725131656217	WITHOUT_CLASSIFICATION	6.274868343783728E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999869239795603	WITHOUT_CLASSIFICATION	1.3076020439664541E-5	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999880317418467	WITHOUT_CLASSIFICATION	1.1968258153333736E-5	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9886646256601979	WITHOUT_CLASSIFICATION	0.011335374339802142	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999790925265071	WITHOUT_CLASSIFICATION	2.090747349294362E-5	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999964821602491	WITHOUT_CLASSIFICATION	3.5178397509206295E-6	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999368557878354	WITHOUT_CLASSIFICATION	6.314421216461752E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9987857137367253	WITHOUT_CLASSIFICATION	0.0012142862632746848	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999215480891	WITHOUT_CLASSIFICATION	7.845191085261191E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.999962459137266	WITHOUT_CLASSIFICATION	3.7540862734031584E-5	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999069148557064	WITHOUT_CLASSIFICATION	9.308514429356265E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999995230845599	WITHOUT_CLASSIFICATION	4.769154400578288E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9995548163826972	WITHOUT_CLASSIFICATION	4.451836173028872E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999716590667832	WITHOUT_CLASSIFICATION	2.8340933216880505E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999391196588713	WITHOUT_CLASSIFICATION	6.0880341128741824E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9997631237876875	WITHOUT_CLASSIFICATION	2.368762123125772E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999448054531843	WITHOUT_CLASSIFICATION	5.519454681578475E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.999437171066382	WITHOUT_CLASSIFICATION	5.628289336180443E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999920588968173	WITHOUT_CLASSIFICATION	7.941103182707437E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998025773669195	WITHOUT_CLASSIFICATION	1.97422633080647E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9989010941081176	WITHOUT_CLASSIFICATION	0.0010989058918824926	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9997773746905892	WITHOUT_CLASSIFICATION	2.2262530941071258E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995713572499791	WITHOUT_CLASSIFICATION	4.286427500208845E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995713572499791	WITHOUT_CLASSIFICATION	4.286427500208845E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995713572499791	WITHOUT_CLASSIFICATION	4.286427500208845E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995713572499791	WITHOUT_CLASSIFICATION	4.286427500208845E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999542554982687	WITHOUT_CLASSIFICATION	4.574450173127971E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9998505404941094	WITHOUT_CLASSIFICATION	1.4945950589056932E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999399349681246	WITHOUT_CLASSIFICATION	6.006503187541577E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999399349681246	WITHOUT_CLASSIFICATION	6.006503187541577E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999399349681246	WITHOUT_CLASSIFICATION	6.006503187541577E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9997965849337156	WITHOUT_CLASSIFICATION	2.034150662843799E-4	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9996115224643664	WITHOUT_CLASSIFICATION	3.884775356337011E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9995082517887229	WITHOUT_CLASSIFICATION	4.917482112771369E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9995082517887229	WITHOUT_CLASSIFICATION	4.917482112771369E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9979561459370087	WITHOUT_CLASSIFICATION	0.002043854062991404	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9979561459370087	WITHOUT_CLASSIFICATION	0.002043854062991404	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.999425924256894	WITHOUT_CLASSIFICATION	5.740757431060015E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.999425924256894	WITHOUT_CLASSIFICATION	5.740757431060015E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999797807635187	WITHOUT_CLASSIFICATION	2.021923648129813E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9993614624567817	WITHOUT_CLASSIFICATION	6.385375432183862E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9995127620629712	WITHOUT_CLASSIFICATION	4.872379370288372E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999171191132894	WITHOUT_CLASSIFICATION	8.288088671060318E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9995244158632134	WITHOUT_CLASSIFICATION	4.7558413678660524E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9995469812680856	WITHOUT_CLASSIFICATION	4.53018731914416E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9995344726334122	WITHOUT_CLASSIFICATION	4.655273665877904E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.999993072421038	WITHOUT_CLASSIFICATION	6.927578962012066E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9995081375686914	WITHOUT_CLASSIFICATION	4.918624313086155E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998743998092692	WITHOUT_CLASSIFICATION	1.2560019073086198E-4	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.999796573922802	WITHOUT_CLASSIFICATION	2.034260771980319E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999423005754112	WITHOUT_CLASSIFICATION	5.769942458870514E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9998754745508922	WITHOUT_CLASSIFICATION	1.245254491078067E-4	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.999760500858714	WITHOUT_CLASSIFICATION	2.3949914128599902E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998306415300316	WITHOUT_CLASSIFICATION	1.6935846996828682E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998329303332165	WITHOUT_CLASSIFICATION	1.6706966678342052E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.999871844381166	WITHOUT_CLASSIFICATION	1.2815561883396383E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999071784523322	WITHOUT_CLASSIFICATION	9.282154766782533E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9993910026574888	WITHOUT_CLASSIFICATION	6.089973425111272E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9997130151431991	WITHOUT_CLASSIFICATION	2.869848568007994E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9978010465367159	WITHOUT_CLASSIFICATION	0.002198953463284203	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9998885675383822	WITHOUT_CLASSIFICATION	1.1143246161788198E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9971184532561278	WITHOUT_CLASSIFICATION	0.002881546743872144	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999933300039604	WITHOUT_CLASSIFICATION	6.669996039641849E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9998520638457337	WITHOUT_CLASSIFICATION	1.4793615426628037E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999452857599933	WITHOUT_CLASSIFICATION	5.471424000666646E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999452857599933	WITHOUT_CLASSIFICATION	5.471424000666646E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9995809312065359	WITHOUT_CLASSIFICATION	4.190687934640886E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9968403664821675	WITHOUT_CLASSIFICATION	0.003159633517832646	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9968403664821675	WITHOUT_CLASSIFICATION	0.003159633517832646	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999526692056748	WITHOUT_CLASSIFICATION	4.733079432515928E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.999968183238066	WITHOUT_CLASSIFICATION	3.181676193392121E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999647078440752	WITHOUT_CLASSIFICATION	3.529215592480044E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999794850968443	WITHOUT_CLASSIFICATION	2.0514903155670995E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998733541155401	WITHOUT_CLASSIFICATION	1.2664588445993307E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9988877984863835	WITHOUT_CLASSIFICATION	0.001112201513616401	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9988877984863835	WITHOUT_CLASSIFICATION	0.001112201513616401	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999181770548383	WITHOUT_CLASSIFICATION	8.182294516164814E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999689472041586	WITHOUT_CLASSIFICATION	3.105279584132164E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999637951038962	WITHOUT_CLASSIFICATION	3.620489610375362E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999935327098721	WITHOUT_CLASSIFICATION	6.467290127894607E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.999222597069865	WITHOUT_CLASSIFICATION	7.77402930134813E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999526776604186	WITHOUT_CLASSIFICATION	4.732233958140289E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999526776604186	WITHOUT_CLASSIFICATION	4.732233958140289E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999526776604186	WITHOUT_CLASSIFICATION	4.732233958140289E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999865621581563	WITHOUT_CLASSIFICATION	1.3437841843634757E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999865621581563	WITHOUT_CLASSIFICATION	1.3437841843634757E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9998590446753418	WITHOUT_CLASSIFICATION	1.4095532465819216E-4	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999825940458233	WITHOUT_CLASSIFICATION	1.7405954176638408E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999825940458233	WITHOUT_CLASSIFICATION	1.7405954176638408E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9998157639892636	WITHOUT_CLASSIFICATION	1.8423601073643564E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999321291851067	WITHOUT_CLASSIFICATION	6.787081489337195E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977779454244567	WITHOUT_CLASSIFICATION	0.002222054575543234	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998051948823715	WITHOUT_CLASSIFICATION	1.948051176284373E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9906309000254553	WITHOUT_CLASSIFICATION	0.009369099974544675	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9906309000254553	WITHOUT_CLASSIFICATION	0.009369099974544675	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9962307664703739	WITHOUT_CLASSIFICATION	0.0037692335296260833	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998406289900188	WITHOUT_CLASSIFICATION	1.5937100998117556E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999451461539617	WITHOUT_CLASSIFICATION	5.4853846038330984E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988728415156133	WITHOUT_CLASSIFICATION	0.0011271584843866177	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994979645021971	WITHOUT_CLASSIFICATION	5.020354978028899E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999488847642827	WITHOUT_CLASSIFICATION	5.111523571730685E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9965209875015206	WITHOUT_CLASSIFICATION	0.0034790124984793087	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990549093144344	WITHOUT_CLASSIFICATION	9.45090685565643E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997632766398614	WITHOUT_CLASSIFICATION	2.3672336013866552E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999329225732381	WITHOUT_CLASSIFICATION	6.70774267618883E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997610587485576	WITHOUT_CLASSIFICATION	2.3894125144235292E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9995035097937288	WITHOUT_CLASSIFICATION	4.9649020627118E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999676268442363	WITHOUT_CLASSIFICATION	3.237315576357336E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999927047142516	WITHOUT_CLASSIFICATION	7.295285748429576E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999405572479492	WITHOUT_CLASSIFICATION	5.944275205082181E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9952414898848427	WITHOUT_CLASSIFICATION	0.004758510115157319	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9993902136218912	WITHOUT_CLASSIFICATION	6.097863781087851E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.999945072848801	WITHOUT_CLASSIFICATION	5.49271511989132E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9993945067562409	WITHOUT_CLASSIFICATION	6.054932437592631E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999149494011675	WITHOUT_CLASSIFICATION	8.505059883245791E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9988487527846301	WITHOUT_CLASSIFICATION	0.0011512472153698311	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9996318774107087	WITHOUT_CLASSIFICATION	3.6812258929131786E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9997631945461668	WITHOUT_CLASSIFICATION	2.368054538331335E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.999518638771909	WITHOUT_CLASSIFICATION	4.8136122809096346E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998509458611763	WITHOUT_CLASSIFICATION	1.4905413882380678E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9995893706436734	WITHOUT_CLASSIFICATION	4.1062935632660096E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9989118345700706	WITHOUT_CLASSIFICATION	0.0010881654299294068	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9989118345700706	WITHOUT_CLASSIFICATION	0.0010881654299294068	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999234320525859	WITHOUT_CLASSIFICATION	7.656794741405255E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996802840849519	WITHOUT_CLASSIFICATION	3.197159150481315E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999168142107244	WITHOUT_CLASSIFICATION	8.31857892754891E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.999525184802182	WITHOUT_CLASSIFICATION	4.7481519781804473E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999281586575249	WITHOUT_CLASSIFICATION	7.184134247504025E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9997086074070987	WITHOUT_CLASSIFICATION	2.913925929013642E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9997230361659442	WITHOUT_CLASSIFICATION	2.769638340558508E-4	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999821953282992	WITHOUT_CLASSIFICATION	1.7804671700822955E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.999940684888169	WITHOUT_CLASSIFICATION	5.9315111831016565E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9993225266335888	WITHOUT_CLASSIFICATION	6.774733664112794E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9993225266335888	WITHOUT_CLASSIFICATION	6.774733664112794E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998735080546318	WITHOUT_CLASSIFICATION	1.2649194536805698E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.999975388883319	WITHOUT_CLASSIFICATION	2.461111668092802E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9986885391668936	WITHOUT_CLASSIFICATION	0.001311460833106334	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9998333428224966	WITHOUT_CLASSIFICATION	1.6665717750336025E-4	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999806236291254	WITHOUT_CLASSIFICATION	1.937637087463902E-5	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9995513272642249	WITHOUT_CLASSIFICATION	4.486727357750178E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9993902136218912	WITHOUT_CLASSIFICATION	6.097863781087851E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9997799581383343	WITHOUT_CLASSIFICATION	2.200418616658246E-4	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999294938555378	WITHOUT_CLASSIFICATION	7.050614446224125E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998144631930692	WITHOUT_CLASSIFICATION	1.8553680693076633E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999289353386088	WITHOUT_CLASSIFICATION	7.106466139118474E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999960098192507	WITHOUT_CLASSIFICATION	3.990180749335415E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999116317189948	WITHOUT_CLASSIFICATION	8.836828100521806E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999455224657684	WITHOUT_CLASSIFICATION	5.447753423166588E-5	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9996071299958506	WITHOUT_CLASSIFICATION	3.928700041494644E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9972323739297213	WITHOUT_CLASSIFICATION	0.002767626070278648	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999383034933805	WITHOUT_CLASSIFICATION	6.16965066194763E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999538712130908	WITHOUT_CLASSIFICATION	4.6128786909322306E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999383034933805	WITHOUT_CLASSIFICATION	6.16965066194763E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999538712130908	WITHOUT_CLASSIFICATION	4.6128786909322306E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9977244323892679	WITHOUT_CLASSIFICATION	0.002275567610732082	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.998092968504466	WITHOUT_CLASSIFICATION	0.0019070314955339411	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9997089739344607	WITHOUT_CLASSIFICATION	2.9102606553933676E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9828695766513115	WITHOUT_CLASSIFICATION	0.017130423348688466	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999854728475023	WITHOUT_CLASSIFICATION	1.452715249768543E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999807794978275	WITHOUT_CLASSIFICATION	1.9220502172496146E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999748269983598	WITHOUT_CLASSIFICATION	2.5173001640205046E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.999742105117255	WITHOUT_CLASSIFICATION	2.5789488274499645E-4	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.999634207934702	WITHOUT_CLASSIFICATION	3.6579206529790037E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999059316045124	WITHOUT_CLASSIFICATION	9.406839548760945E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999661288863136	WITHOUT_CLASSIFICATION	3.38711136863134E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.999906656301574	WITHOUT_CLASSIFICATION	9.334369842588394E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9992312085796052	WITHOUT_CLASSIFICATION	7.687914203947484E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.999008225778353	WITHOUT_CLASSIFICATION	9.917742216469774E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999807794978275	WITHOUT_CLASSIFICATION	1.9220502172496146E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999285933055482	WITHOUT_CLASSIFICATION	7.140669445175214E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999406227309083	WITHOUT_CLASSIFICATION	5.937726909166299E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999570499606484	WITHOUT_CLASSIFICATION	4.2950039351655297E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999381189508427	WITHOUT_CLASSIFICATION	6.188104915728677E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992898155207973	WITHOUT_CLASSIFICATION	7.101844792025887E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9844498402086276	WITHOUT_CLASSIFICATION	0.015550159791372326	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992898155207973	WITHOUT_CLASSIFICATION	7.101844792025887E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992898155207973	WITHOUT_CLASSIFICATION	7.101844792025887E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992959940078058	WITHOUT_CLASSIFICATION	7.04005992194315E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993135056164333	WITHOUT_CLASSIFICATION	6.86494383566761E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9998911762520372	WITHOUT_CLASSIFICATION	1.0882374796286153E-4	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999798901354494	WITHOUT_CLASSIFICATION	2.0109864550600754E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992898155207973	WITHOUT_CLASSIFICATION	7.101844792025887E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999970874597775	WITHOUT_CLASSIFICATION	2.912540222496702E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.999936972250801	WITHOUT_CLASSIFICATION	6.302774919892614E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.999978484009302	WITHOUT_CLASSIFICATION	2.151599069800848E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9997677013974134	WITHOUT_CLASSIFICATION	2.3229860258668943E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9998809023175392	WITHOUT_CLASSIFICATION	1.1909768246074172E-4	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999744772311862	WITHOUT_CLASSIFICATION	2.5522768813881712E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9990052383101898	WITHOUT_CLASSIFICATION	9.947616898101149E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999860975370377	WITHOUT_CLASSIFICATION	1.3902462962179694E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9995032850933093	WITHOUT_CLASSIFICATION	4.967149066907012E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.999936972250801	WITHOUT_CLASSIFICATION	6.302774919892614E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.999978484009302	WITHOUT_CLASSIFICATION	2.151599069800848E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9997677013974134	WITHOUT_CLASSIFICATION	2.3229860258668943E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9998609078256606	WITHOUT_CLASSIFICATION	1.390921743393434E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.999171676073227	WITHOUT_CLASSIFICATION	8.283239267729827E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9997522139425602	WITHOUT_CLASSIFICATION	2.477860574398612E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9996154791121106	WITHOUT_CLASSIFICATION	3.8452088788943316E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999463219589332	WITHOUT_CLASSIFICATION	5.3678041066794364E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9990072837744121	WITHOUT_CLASSIFICATION	9.92716225587901E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9997968460825222	WITHOUT_CLASSIFICATION	2.031539174777777E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999178185759814	WITHOUT_CLASSIFICATION	8.218142401860514E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9998715354588078	WITHOUT_CLASSIFICATION	1.284645411922111E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9981968607434498	WITHOUT_CLASSIFICATION	0.001803139256550222	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9997956369688964	WITHOUT_CLASSIFICATION	2.0436303110348502E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999685650416894	WITHOUT_CLASSIFICATION	3.143495831056518E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9998927256571978	WITHOUT_CLASSIFICATION	1.072743428022037E-4	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9943521057871528	WITHOUT_CLASSIFICATION	0.005647894212847098	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999491586245703	WITHOUT_CLASSIFICATION	5.08413754296786E-5	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9985939276157325	WITHOUT_CLASSIFICATION	0.001406072384267436	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999470649329759	WITHOUT_CLASSIFICATION	5.2935067024039646E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999556302725807	WITHOUT_CLASSIFICATION	4.436972741924249E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.999905143707919	WITHOUT_CLASSIFICATION	9.485629208089532E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9476978570726046	WITHOUT_CLASSIFICATION	0.05230214292739549	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9624199860190372	WITHOUT_CLASSIFICATION	0.03758001398096275	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9962551306235621	WITHOUT_CLASSIFICATION	0.003744869376437906	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9997873690253501	WITHOUT_CLASSIFICATION	2.126309746497433E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.999942854350272	WITHOUT_CLASSIFICATION	5.714564972798633E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9969460318864732	WITHOUT_CLASSIFICATION	0.003053968113526809	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999371804807592	WITHOUT_CLASSIFICATION	6.281951924081688E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999733488742139	WITHOUT_CLASSIFICATION	2.665112578614246E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9992750221719093	WITHOUT_CLASSIFICATION	7.249778280906541E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9859132690913591	WITHOUT_CLASSIFICATION	0.014086730908640963	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.996974629583283	WITHOUT_CLASSIFICATION	0.003025370416717029	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9966831531278764	WITHOUT_CLASSIFICATION	0.003316846872123757	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9997378362948576	WITHOUT_CLASSIFICATION	2.621637051424131E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9998273293701988	WITHOUT_CLASSIFICATION	1.7267062980112405E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999204326332561	WITHOUT_CLASSIFICATION	7.956736674386774E-5	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9979084609891765	WITHOUT_CLASSIFICATION	0.0020915390108235486	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9998592803525702	WITHOUT_CLASSIFICATION	1.40719647429785E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9908749545232399	WITHOUT_CLASSIFICATION	0.009125045476760076	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.940856786151762	WITHOUT_CLASSIFICATION	0.05914321384823802	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9996668097973633	WITHOUT_CLASSIFICATION	3.3319020263662593E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9996318774107087	WITHOUT_CLASSIFICATION	3.6812258929131786E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9992599061596953	WITHOUT_CLASSIFICATION	7.400938403046871E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9997585204678616	WITHOUT_CLASSIFICATION	2.414795321383115E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.999965145326553	WITHOUT_CLASSIFICATION	3.4854673446902216E-5	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9997435770631095	WITHOUT_CLASSIFICATION	2.564229368905811E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9792984105506327	WITHOUT_CLASSIFICATION	0.020701589449367293	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998572903537151	WITHOUT_CLASSIFICATION	1.4270964628493584E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9792984105506327	WITHOUT_CLASSIFICATION	0.020701589449367293	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.999934415830768	WITHOUT_CLASSIFICATION	6.558416923204212E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9988580468985157	WITHOUT_CLASSIFICATION	0.001141953101484372	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9998757783362399	WITHOUT_CLASSIFICATION	1.2422166376024535E-4	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999719418581894	WITHOUT_CLASSIFICATION	2.8058141810560634E-5	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9998067824587731	WITHOUT_CLASSIFICATION	1.9321754122699487E-4	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999771469675535	WITHOUT_CLASSIFICATION	2.2853032446539317E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999081918565245	WITHOUT_CLASSIFICATION	9.180814347547748E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999179089170153	WITHOUT_CLASSIFICATION	8.209108298473982E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999796435413105	WITHOUT_CLASSIFICATION	2.0356458689387887E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999688482242638	WITHOUT_CLASSIFICATION	3.1151775736198714E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9998805435363598	WITHOUT_CLASSIFICATION	1.1945646364013086E-4	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9980354259626584	WITHOUT_CLASSIFICATION	0.001964574037341659	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999523911590443	WITHOUT_CLASSIFICATION	4.760884095571824E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999955783227158	WITHOUT_CLASSIFICATION	4.421677284263551E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999550723385479	WITHOUT_CLASSIFICATION	4.4927661452185103E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.999836857007787	WITHOUT_CLASSIFICATION	1.631429922129848E-4	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9998321441964735	WITHOUT_CLASSIFICATION	1.6785580352645095E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9998665598691459	WITHOUT_CLASSIFICATION	1.3344013085415414E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999804749443592	WITHOUT_CLASSIFICATION	1.9525055640864614E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9974427892785068	WITHOUT_CLASSIFICATION	0.002557210721493199	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999154657585773	WITHOUT_CLASSIFICATION	8.453424142280562E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9998423589747463	WITHOUT_CLASSIFICATION	1.5764102525373617E-4	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999637655425863	WITHOUT_CLASSIFICATION	3.62344574137336E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999847991406438	WITHOUT_CLASSIFICATION	1.520085935632597E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9997395469646976	WITHOUT_CLASSIFICATION	2.604530353024811E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9998582097879175	WITHOUT_CLASSIFICATION	1.4179021208247998E-4	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999694631813533	WITHOUT_CLASSIFICATION	3.053681864663898E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9986243083127236	WITHOUT_CLASSIFICATION	0.0013756916872763416	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9996784773925335	WITHOUT_CLASSIFICATION	3.215226074665488E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9957001690032385	WITHOUT_CLASSIFICATION	0.004299830996761484	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999222749048148	WITHOUT_CLASSIFICATION	7.772509518524168E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999897513077258	WITHOUT_CLASSIFICATION	1.0248692274183517E-5	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999213258339669	WITHOUT_CLASSIFICATION	7.867416603311874E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999607366837738	WITHOUT_CLASSIFICATION	3.9263316226119787E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999522559887268	WITHOUT_CLASSIFICATION	4.7744011273155006E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9998761193594117	WITHOUT_CLASSIFICATION	1.2388064058836253E-4	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9997898541178946	WITHOUT_CLASSIFICATION	2.1014588210551747E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.999965145326553	WITHOUT_CLASSIFICATION	3.4854673446902216E-5	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999255695356382	WITHOUT_CLASSIFICATION	7.44304643618421E-5	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999408951146787	WITHOUT_CLASSIFICATION	5.910488532130149E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999139089178664	WITHOUT_CLASSIFICATION	8.609108213368206E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9995547784575357	WITHOUT_CLASSIFICATION	4.452215424643975E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998572903537151	WITHOUT_CLASSIFICATION	1.4270964628493584E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9998581947319184	WITHOUT_CLASSIFICATION	1.4180526808165583E-4	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999422195039223	WITHOUT_CLASSIFICATION	5.7780496077767744E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999569250382921	WITHOUT_CLASSIFICATION	4.307496170779134E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999427422317008	WITHOUT_CLASSIFICATION	5.7257768299257064E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9994938762678621	WITHOUT_CLASSIFICATION	5.061237321379505E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9994560616187226	WITHOUT_CLASSIFICATION	5.439383812773448E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.998337019749744	WITHOUT_CLASSIFICATION	0.0016629802502559291	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9998728777968735	WITHOUT_CLASSIFICATION	1.2712220312646348E-4	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999532745823331	WITHOUT_CLASSIFICATION	4.6725417667019355E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9907224103272225	WITHOUT_CLASSIFICATION	0.009277589672777378	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9997631945461668	WITHOUT_CLASSIFICATION	2.368054538331335E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999226759805523	WITHOUT_CLASSIFICATION	7.732401944765444E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9997945082627391	WITHOUT_CLASSIFICATION	2.054917372609105E-4	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9996287642371584	WITHOUT_CLASSIFICATION	3.712357628416812E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9998121805393676	WITHOUT_CLASSIFICATION	1.8781946063239682E-4	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9997870174535052	WITHOUT_CLASSIFICATION	2.129825464949314E-4	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.999432080235843	WITHOUT_CLASSIFICATION	5.679197641570849E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999530914557868	WITHOUT_CLASSIFICATION	4.690854421310237E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999371872595273	WITHOUT_CLASSIFICATION	6.281274047269863E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.999894918138921	WITHOUT_CLASSIFICATION	1.0508186107905099E-4	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999622504996041	WITHOUT_CLASSIFICATION	3.774950039595335E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999371872595273	WITHOUT_CLASSIFICATION	6.281274047269863E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9998500030258262	WITHOUT_CLASSIFICATION	1.499969741739398E-4	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999607157742578	WITHOUT_CLASSIFICATION	3.9284225742190036E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9997644009598896	WITHOUT_CLASSIFICATION	2.3559904011041325E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999631086995094	WITHOUT_CLASSIFICATION	3.689130049048175E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999477209555859	WITHOUT_CLASSIFICATION	5.227904441406403E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999686668708619	WITHOUT_CLASSIFICATION	3.13331291380672E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.999936912775793	WITHOUT_CLASSIFICATION	6.308722420699532E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999739289847839	WITHOUT_CLASSIFICATION	2.6071015216123773E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999281839498687	WITHOUT_CLASSIFICATION	7.181605013130078E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.999957331500481	WITHOUT_CLASSIFICATION	4.266849951892581E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999331385953147	WITHOUT_CLASSIFICATION	6.686140468525481E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999636769688052	WITHOUT_CLASSIFICATION	3.632303119482163E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999970959077796	WITHOUT_CLASSIFICATION	2.904092220367594E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999441698105918	WITHOUT_CLASSIFICATION	5.583018940829604E-5	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9998208210780213	WITHOUT_CLASSIFICATION	1.7917892197868068E-4	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9966352838688642	WITHOUT_CLASSIFICATION	0.003364716131135884	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9997474621262272	WITHOUT_CLASSIFICATION	2.5253787377287003E-4	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9995070169146603	WITHOUT_CLASSIFICATION	4.929830853396345E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999931997047684	WITHOUT_CLASSIFICATION	6.80029523161227E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999355402777872	WITHOUT_CLASSIFICATION	6.445972221284672E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999799579875568	WITHOUT_CLASSIFICATION	2.0042012443288972E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.99988442609657	WITHOUT_CLASSIFICATION	1.1557390342995904E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9997429679300411	WITHOUT_CLASSIFICATION	2.570320699588749E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9997429679300411	WITHOUT_CLASSIFICATION	2.570320699588749E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9997413517561381	WITHOUT_CLASSIFICATION	2.5864824386189546E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999123665573338	WITHOUT_CLASSIFICATION	8.763344266619972E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999482903397711	WITHOUT_CLASSIFICATION	5.170966022882384E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9967310238610326	WITHOUT_CLASSIFICATION	0.00326897613896724	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.999548281025444	WITHOUT_CLASSIFICATION	4.5171897455600777E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.997461818282307	WITHOUT_CLASSIFICATION	0.0025381817176929476	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9998978739930985	WITHOUT_CLASSIFICATION	1.021260069015968E-4	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.999960293029149	WITHOUT_CLASSIFICATION	3.9706970850878405E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9997692365002071	WITHOUT_CLASSIFICATION	2.3076349979282297E-4	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.988777888604168	WITHOUT_CLASSIFICATION	0.011222111395831914	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999784120454162	WITHOUT_CLASSIFICATION	2.1587954583820442E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999590801071833	WITHOUT_CLASSIFICATION	4.0919892816667405E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.999728557275072	WITHOUT_CLASSIFICATION	2.7144272492794704E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999012831390036	WITHOUT_CLASSIFICATION	9.871686099642248E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9998637951572459	WITHOUT_CLASSIFICATION	1.3620484275407726E-4	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999414532092264	WITHOUT_CLASSIFICATION	5.854679077359927E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999978358576539	WITHOUT_CLASSIFICATION	2.164142346037906E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9995280827134511	WITHOUT_CLASSIFICATION	4.7191728654898287E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9995280827134511	WITHOUT_CLASSIFICATION	4.7191728654898287E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999475520715204	WITHOUT_CLASSIFICATION	5.244792847949533E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999475520715204	WITHOUT_CLASSIFICATION	5.244792847949533E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999461198948233	WITHOUT_CLASSIFICATION	5.388010517682977E-5	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998547383641608	WITHOUT_CLASSIFICATION	1.45261635839179E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999806753501495	WITHOUT_CLASSIFICATION	1.9324649850508451E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9998835632305166	WITHOUT_CLASSIFICATION	1.1643676948340258E-4	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9998842387623098	WITHOUT_CLASSIFICATION	1.1576123769018319E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9997667882059439	WITHOUT_CLASSIFICATION	2.332117940561117E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9998653594465498	WITHOUT_CLASSIFICATION	1.3464055345032257E-4	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999055613025746	WITHOUT_CLASSIFICATION	9.443869742537032E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999238738586362	WITHOUT_CLASSIFICATION	7.612614136369871E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999238738586362	WITHOUT_CLASSIFICATION	7.612614136369871E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999238738586362	WITHOUT_CLASSIFICATION	7.612614136369871E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9998837559756586	WITHOUT_CLASSIFICATION	1.1624402434137735E-4	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9998480594357835	WITHOUT_CLASSIFICATION	1.5194056421642265E-4	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999500502243994	WITHOUT_CLASSIFICATION	4.994977560058903E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999254230396972	WITHOUT_CLASSIFICATION	7.457696030273955E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999254230396972	WITHOUT_CLASSIFICATION	7.457696030273955E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9998642573191725	WITHOUT_CLASSIFICATION	1.357426808274739E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9998491025620564	WITHOUT_CLASSIFICATION	1.5089743794361753E-4	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9993469758272361	WITHOUT_CLASSIFICATION	6.53024172763935E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999414360209857	WITHOUT_CLASSIFICATION	5.856397901425228E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9997886304329651	WITHOUT_CLASSIFICATION	2.113695670349344E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9993317702394744	WITHOUT_CLASSIFICATION	6.682297605257217E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9993062032332973	WITHOUT_CLASSIFICATION	6.937967667025995E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999430399664166	WITHOUT_CLASSIFICATION	5.696003358343736E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9997683051458586	WITHOUT_CLASSIFICATION	2.3169485414152173E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999126450700407	WITHOUT_CLASSIFICATION	8.73549299593247E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999101739853836	WITHOUT_CLASSIFICATION	8.982601461637128E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999771272296916	WITHOUT_CLASSIFICATION	2.287277030845555E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9997719030731537	WITHOUT_CLASSIFICATION	2.280969268463906E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9998927765753176	WITHOUT_CLASSIFICATION	1.0722342468240571E-4	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.999963418412299	WITHOUT_CLASSIFICATION	3.6581587700929915E-5	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999443922161199	WITHOUT_CLASSIFICATION	5.5607783880165515E-5	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9997830372613552	WITHOUT_CLASSIFICATION	2.169627386447965E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9997830372613552	WITHOUT_CLASSIFICATION	2.169627386447965E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9997830372613552	WITHOUT_CLASSIFICATION	2.169627386447965E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9997830372613552	WITHOUT_CLASSIFICATION	2.169627386447965E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9998710339830552	WITHOUT_CLASSIFICATION	1.289660169448837E-4	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999221593671013	WITHOUT_CLASSIFICATION	7.784063289869871E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.999968088713152	WITHOUT_CLASSIFICATION	3.191128684796209E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998746087197813	WITHOUT_CLASSIFICATION	1.253912802187285E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999221593671013	WITHOUT_CLASSIFICATION	7.784063289869871E-5	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9994196324298716	WITHOUT_CLASSIFICATION	5.80367570128327E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9994905274202551	WITHOUT_CLASSIFICATION	5.094725797448942E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9994932593930356	WITHOUT_CLASSIFICATION	5.067406069644103E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9995145457488215	WITHOUT_CLASSIFICATION	4.854542511785091E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9994053098890306	WITHOUT_CLASSIFICATION	5.946901109693054E-4	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999068847778767	WITHOUT_CLASSIFICATION	9.311522212335394E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9995145457488215	WITHOUT_CLASSIFICATION	4.854542511785091E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.999959544131995	WITHOUT_CLASSIFICATION	4.04558680050514E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.999959544131995	WITHOUT_CLASSIFICATION	4.04558680050514E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999263511190024	WITHOUT_CLASSIFICATION	7.364888099767122E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999043898799093	WITHOUT_CLASSIFICATION	9.56101200907456E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999263511190024	WITHOUT_CLASSIFICATION	7.364888099767122E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999414206088179	WITHOUT_CLASSIFICATION	5.8579391182201536E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999663572550143	WITHOUT_CLASSIFICATION	3.364274498573155E-5	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.999839663899843	WITHOUT_CLASSIFICATION	1.6033610015694528E-4	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999390827736884	WITHOUT_CLASSIFICATION	6.091722631174197E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999073079370475	WITHOUT_CLASSIFICATION	9.26920629525259E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999628894749607	WITHOUT_CLASSIFICATION	3.7110525039348893E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999949057626626	WITHOUT_CLASSIFICATION	5.094237337328106E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.999975130860445	WITHOUT_CLASSIFICATION	2.4869139555101774E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9997852116392845	WITHOUT_CLASSIFICATION	2.1478836071558315E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9992405150908681	WITHOUT_CLASSIFICATION	7.594849091320174E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.999963556965962	WITHOUT_CLASSIFICATION	3.644303403806149E-5	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999942872279297	WITHOUT_CLASSIFICATION	5.712772070302288E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9998238923630176	WITHOUT_CLASSIFICATION	1.7610763698231517E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998095023747137	WITHOUT_CLASSIFICATION	1.904976252864049E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999414206088179	WITHOUT_CLASSIFICATION	5.8579391182201536E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999414206088179	WITHOUT_CLASSIFICATION	5.8579391182201536E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9998904065080998	WITHOUT_CLASSIFICATION	1.0959349190017651E-4	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9982631213097207	WITHOUT_CLASSIFICATION	0.0017368786902793487	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999834922184753	WITHOUT_CLASSIFICATION	1.6507781524703774E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997130150387403	WITHOUT_CLASSIFICATION	2.869849612596902E-4	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997130150387403	WITHOUT_CLASSIFICATION	2.869849612596902E-4	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999667282027049	WITHOUT_CLASSIFICATION	3.327179729500893E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999881263730647	WITHOUT_CLASSIFICATION	1.1873626935412946E-5	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9995823138991212	WITHOUT_CLASSIFICATION	4.1768610087873425E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.999930150200546	WITHOUT_CLASSIFICATION	6.984979945399545E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986403552594212	WITHOUT_CLASSIFICATION	0.0013596447405787016	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9982660613895556	WITHOUT_CLASSIFICATION	0.0017339386104443307	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.99980439534792	WITHOUT_CLASSIFICATION	1.9560465207998036E-4	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.999847029649758	WITHOUT_CLASSIFICATION	1.5297035024194026E-4	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9962567401115121	WITHOUT_CLASSIFICATION	0.0037432598884879925	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9994903293469762	WITHOUT_CLASSIFICATION	5.096706530237726E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9998688693025323	WITHOUT_CLASSIFICATION	1.311306974677416E-4	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999838954284642	WITHOUT_CLASSIFICATION	1.6104571535837507E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986403552594212	WITHOUT_CLASSIFICATION	0.0013596447405787016	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9998141072310571	WITHOUT_CLASSIFICATION	1.8589276894289116E-4	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999286241942524	WITHOUT_CLASSIFICATION	7.137580574752924E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.999825841266149	WITHOUT_CLASSIFICATION	1.741587338509117E-4	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9971810688613458	WITHOUT_CLASSIFICATION	0.0028189311386542493	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9971810688613458	WITHOUT_CLASSIFICATION	0.0028189311386542493	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994734865775503	WITHOUT_CLASSIFICATION	5.265134224497295E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999168142107244	WITHOUT_CLASSIFICATION	8.31857892754891E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.999525184802182	WITHOUT_CLASSIFICATION	4.7481519781804473E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999978826523127	WITHOUT_CLASSIFICATION	2.1173476872954718E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.999978826523127	WITHOUT_CLASSIFICATION	2.1173476872954718E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9998046652084966	WITHOUT_CLASSIFICATION	1.9533479150341568E-4	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999206172279987	WITHOUT_CLASSIFICATION	7.938277200129882E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999541847810879	WITHOUT_CLASSIFICATION	4.5815218912075385E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9993410392425192	WITHOUT_CLASSIFICATION	6.589607574808158E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999771695086958	WITHOUT_CLASSIFICATION	2.2830491304275387E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999473440408685	WITHOUT_CLASSIFICATION	5.2655959131620294E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999475520715204	WITHOUT_CLASSIFICATION	5.244792847949533E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999727878601209	WITHOUT_CLASSIFICATION	2.7212139879107422E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998702294808409	WITHOUT_CLASSIFICATION	1.297705191590082E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9996819937125928	WITHOUT_CLASSIFICATION	3.1800628740714893E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999197036666949	WITHOUT_CLASSIFICATION	8.029633330506414E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9998748043999868	WITHOUT_CLASSIFICATION	1.2519560001316097E-4	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998748060086609	WITHOUT_CLASSIFICATION	1.2519399133915454E-4	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9998742344636117	WITHOUT_CLASSIFICATION	1.2576553638838568E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9993670981522937	WITHOUT_CLASSIFICATION	6.329018477062335E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999517432563406	WITHOUT_CLASSIFICATION	4.825674365945286E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9995444101641082	WITHOUT_CLASSIFICATION	4.5558983589175024E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9998942500850759	WITHOUT_CLASSIFICATION	1.0574991492402765E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9998942500850759	WITHOUT_CLASSIFICATION	1.0574991492402765E-4	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9997600285406847	WITHOUT_CLASSIFICATION	2.3997145931521678E-4	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999280487900215	WITHOUT_CLASSIFICATION	7.195120997853328E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999280487900215	WITHOUT_CLASSIFICATION	7.195120997853328E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9996592548074967	WITHOUT_CLASSIFICATION	3.407451925032685E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999383034933805	WITHOUT_CLASSIFICATION	6.16965066194763E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9998147225449368	WITHOUT_CLASSIFICATION	1.852774550633337E-4	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999748269983598	WITHOUT_CLASSIFICATION	2.5173001640205046E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999361747409508	WITHOUT_CLASSIFICATION	6.382525904923869E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999748269983598	WITHOUT_CLASSIFICATION	2.5173001640205046E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999586790350248	WITHOUT_CLASSIFICATION	4.132096497531914E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999810841770611	WITHOUT_CLASSIFICATION	1.8915822938909537E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9996678674446171	WITHOUT_CLASSIFICATION	3.321325553828344E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9993670981522937	WITHOUT_CLASSIFICATION	6.329018477062335E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9996097929067226	WITHOUT_CLASSIFICATION	3.9020709327743813E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.999807794978275	WITHOUT_CLASSIFICATION	1.9220502172496146E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9998179272197374	WITHOUT_CLASSIFICATION	1.8207278026274032E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9990846994848296	WITHOUT_CLASSIFICATION	9.153005151703289E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9997378382388397	WITHOUT_CLASSIFICATION	2.6216176116029735E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999717075415708	WITHOUT_CLASSIFICATION	2.8292458429122896E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9971142722417023	WITHOUT_CLASSIFICATION	0.002885727758297692	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9971142722417023	WITHOUT_CLASSIFICATION	0.002885727758297692	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9990994934183752	WITHOUT_CLASSIFICATION	9.005065816249141E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998677636489123	WITHOUT_CLASSIFICATION	1.32236351087739E-4	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999586790350248	WITHOUT_CLASSIFICATION	4.132096497531914E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999586790350248	WITHOUT_CLASSIFICATION	4.132096497531914E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9998763030161097	WITHOUT_CLASSIFICATION	1.2369698389018584E-4	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9919089096081336	WITHOUT_CLASSIFICATION	0.008091090391866462	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9993167489165292	WITHOUT_CLASSIFICATION	6.832510834708421E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9991366973750423	WITHOUT_CLASSIFICATION	8.633026249576255E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9997961293062927	WITHOUT_CLASSIFICATION	2.038706937072436E-4	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999205647296261	WITHOUT_CLASSIFICATION	7.943527037391403E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999166333115848	WITHOUT_CLASSIFICATION	8.336668841525108E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999553168726363	WITHOUT_CLASSIFICATION	4.46831273638242E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999082470539593	WITHOUT_CLASSIFICATION	9.175294604077969E-5	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9997916799182807	WITHOUT_CLASSIFICATION	2.0832008171932148E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999205647296261	WITHOUT_CLASSIFICATION	7.943527037391403E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996565335286176	WITHOUT_CLASSIFICATION	3.4346647138238805E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996565335286176	WITHOUT_CLASSIFICATION	3.4346647138238805E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999694910087219	WITHOUT_CLASSIFICATION	3.050899127797963E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9998299480856255	WITHOUT_CLASSIFICATION	1.7005191437444536E-4	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999073953408233	WITHOUT_CLASSIFICATION	9.260465917671282E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999073953408233	WITHOUT_CLASSIFICATION	9.260465917671282E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999766189943861	WITHOUT_CLASSIFICATION	2.3381005613941825E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997302432813605	WITHOUT_CLASSIFICATION	2.6975671863952095E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999854728475023	WITHOUT_CLASSIFICATION	1.452715249768543E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999689690768008	WITHOUT_CLASSIFICATION	3.103092319932197E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9998604486498802	WITHOUT_CLASSIFICATION	1.3955135011977136E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9958430026509688	WITHOUT_CLASSIFICATION	0.0041569973490311616	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999703763414184	WITHOUT_CLASSIFICATION	2.9623658581658024E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.999409341129648	WITHOUT_CLASSIFICATION	5.906588703520812E-4	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999773714873794	WITHOUT_CLASSIFICATION	2.2628512620578175E-5	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9998467580629328	WITHOUT_CLASSIFICATION	1.5324193706712773E-4	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999066867022213	WITHOUT_CLASSIFICATION	9.331329777873423E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.0022276098408288373	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997302432813605	WITHOUT_CLASSIFICATION	2.6975671863952095E-4	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9998723506443936	WITHOUT_CLASSIFICATION	1.2764935560645221E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.99999725763589	WITHOUT_CLASSIFICATION	2.7423641099762672E-6	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999804483327094	WITHOUT_CLASSIFICATION	1.9551667290622785E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999374573358468	WITHOUT_CLASSIFICATION	6.254266415322593E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999484903474425	WITHOUT_CLASSIFICATION	5.1509652557544016E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998848003265075	WITHOUT_CLASSIFICATION	1.1519967349244784E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9952847223626557	WITHOUT_CLASSIFICATION	0.00471527763734424	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999906613259619	WITHOUT_CLASSIFICATION	9.338674038191275E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999516991691425	WITHOUT_CLASSIFICATION	4.830083085755948E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9995970035418162	WITHOUT_CLASSIFICATION	4.0299645818372157E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9997560196449273	WITHOUT_CLASSIFICATION	2.439803550727841E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9991159139293215	WITHOUT_CLASSIFICATION	8.840860706784772E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999719812606648	WITHOUT_CLASSIFICATION	2.8018739335222152E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9984204202459138	WITHOUT_CLASSIFICATION	0.001579579754086181	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.998623290767547	WITHOUT_CLASSIFICATION	0.0013767092324529218	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9997317934768446	WITHOUT_CLASSIFICATION	2.6820652315536305E-4	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9998309781071079	WITHOUT_CLASSIFICATION	1.690218928921514E-4	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999487537198078	WITHOUT_CLASSIFICATION	5.1246280192169356E-5	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999907226702909	WITHOUT_CLASSIFICATION	9.27732970913778E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9988616262569098	WITHOUT_CLASSIFICATION	0.0011383737430902274	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999146458645474	WITHOUT_CLASSIFICATION	8.535413545265727E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9995089048656921	WITHOUT_CLASSIFICATION	4.910951343079502E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999653832676129	WITHOUT_CLASSIFICATION	3.461673238712538E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999190400578021	WITHOUT_CLASSIFICATION	8.095994219801001E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9996799865855627	WITHOUT_CLASSIFICATION	3.200134144374028E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999321358982279	WITHOUT_CLASSIFICATION	6.786410177201176E-5	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9998918658654338	WITHOUT_CLASSIFICATION	1.0813413456625537E-4	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9995865814451828	WITHOUT_CLASSIFICATION	4.1341855481729137E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.995248010380404	WITHOUT_CLASSIFICATION	0.0047519896195959395	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9958609103491831	WITHOUT_CLASSIFICATION	0.004139089650816904	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9998961413009974	WITHOUT_CLASSIFICATION	1.0385869900270833E-4	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999900600135497	WITHOUT_CLASSIFICATION	9.939986450274708E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9998774122864503	WITHOUT_CLASSIFICATION	1.225877135497261E-4	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9997262089713966	WITHOUT_CLASSIFICATION	2.737910286032965E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9998415947892443	WITHOUT_CLASSIFICATION	1.5840521075565934E-4	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9972437688564234	WITHOUT_CLASSIFICATION	0.002756231143576484	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9998491556070225	WITHOUT_CLASSIFICATION	1.5084439297743601E-4	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999190400578021	WITHOUT_CLASSIFICATION	8.095994219801001E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999114702653744	WITHOUT_CLASSIFICATION	8.852973462547725E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999883124159218	WITHOUT_CLASSIFICATION	1.1687584078149463E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999883124159218	WITHOUT_CLASSIFICATION	1.1687584078149463E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999617581404024	WITHOUT_CLASSIFICATION	3.8241859597529335E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999617581404024	WITHOUT_CLASSIFICATION	3.8241859597529335E-5	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9953241926235498	WITHOUT_CLASSIFICATION	0.004675807376450184	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.999921447799069	WITHOUT_CLASSIFICATION	7.855220093102124E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999674278837725	WITHOUT_CLASSIFICATION	3.257211622750449E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9998537541594386	WITHOUT_CLASSIFICATION	1.462458405614297E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9969217469198746	WITHOUT_CLASSIFICATION	0.0030782530801253603	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9998568748605033	WITHOUT_CLASSIFICATION	1.43125139496679E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9996683412738826	WITHOUT_CLASSIFICATION	3.316587261173966E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9998637395517567	WITHOUT_CLASSIFICATION	1.3626044824333497E-4	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999671038554871	WITHOUT_CLASSIFICATION	3.289614451280825E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999629697568321	WITHOUT_CLASSIFICATION	3.7030243168005964E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9989901196189686	WITHOUT_CLASSIFICATION	0.0010098803810315027	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9997752631352776	WITHOUT_CLASSIFICATION	2.2473686472233856E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9993087270096693	WITHOUT_CLASSIFICATION	6.912729903306015E-4	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9998902075516575	WITHOUT_CLASSIFICATION	1.0979244834249553E-4	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9997532599245678	WITHOUT_CLASSIFICATION	2.4674007543229925E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9998179272197374	WITHOUT_CLASSIFICATION	1.8207278026274032E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9976435675585703	WITHOUT_CLASSIFICATION	0.0023564324414298123	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9997943732614839	WITHOUT_CLASSIFICATION	2.056267385161251E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9997943732614839	WITHOUT_CLASSIFICATION	2.056267385161251E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9975226516959664	WITHOUT_CLASSIFICATION	0.002477348304033518	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998698601931768	WITHOUT_CLASSIFICATION	1.3013980682317582E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9993425687789402	WITHOUT_CLASSIFICATION	6.574312210598822E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999823156203095	WITHOUT_CLASSIFICATION	1.7684379690495401E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995388161907112	WITHOUT_CLASSIFICATION	4.6118380928890536E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995388161907112	WITHOUT_CLASSIFICATION	4.6118380928890536E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9987997913682902	WITHOUT_CLASSIFICATION	0.001200208631709828	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999859202543758	WITHOUT_CLASSIFICATION	1.4079745624196729E-5	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999799166390185	WITHOUT_CLASSIFICATION	2.0083360981523272E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999147803011046	WITHOUT_CLASSIFICATION	8.521969889547936E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.998716493309405	WITHOUT_CLASSIFICATION	0.0012835066905948927	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999823156203095	WITHOUT_CLASSIFICATION	1.7684379690495401E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995388161907112	WITHOUT_CLASSIFICATION	4.6118380928890536E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995388161907112	WITHOUT_CLASSIFICATION	4.6118380928890536E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9987997913682902	WITHOUT_CLASSIFICATION	0.001200208631709828	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9995993815483764	WITHOUT_CLASSIFICATION	4.006184516236697E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999538937308087	WITHOUT_CLASSIFICATION	4.610626919132638E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9994430351943462	WITHOUT_CLASSIFICATION	5.569648056538035E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999885596759566	WITHOUT_CLASSIFICATION	1.1440324043362519E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.986943046006503	WITHOUT_CLASSIFICATION	0.013056953993497161	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9804961039651463	WITHOUT_CLASSIFICATION	0.019503896034853693	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.999900230667604	WITHOUT_CLASSIFICATION	9.976933239598061E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9996596093161291	WITHOUT_CLASSIFICATION	3.403906838708903E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9996596093161291	WITHOUT_CLASSIFICATION	3.403906838708903E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9994437336754513	WITHOUT_CLASSIFICATION	5.562663245487741E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9992607228514487	WITHOUT_CLASSIFICATION	7.39277148551385E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.999893056971893	WITHOUT_CLASSIFICATION	1.0694302810702751E-4	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997619394620145	WITHOUT_CLASSIFICATION	2.3806053798534665E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9997053224612742	WITHOUT_CLASSIFICATION	2.9467753872576324E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998378913145489	WITHOUT_CLASSIFICATION	1.6210868545118805E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9997833202226707	WITHOUT_CLASSIFICATION	2.1667977732940053E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999112321180789	WITHOUT_CLASSIFICATION	8.876788192107396E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9913072941336277	WITHOUT_CLASSIFICATION	0.008692705866372354	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9997675866356769	WITHOUT_CLASSIFICATION	2.324133643231699E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999778664038093	WITHOUT_CLASSIFICATION	2.2133596190778108E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9990598362902602	WITHOUT_CLASSIFICATION	9.401637097398074E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9998139463184655	WITHOUT_CLASSIFICATION	1.860536815344513E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.997700395595075	WITHOUT_CLASSIFICATION	0.002299604404925092	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9997599230024251	WITHOUT_CLASSIFICATION	2.400769975748458E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9998668273643527	WITHOUT_CLASSIFICATION	1.3317263564723106E-4	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9955038656426568	WITHOUT_CLASSIFICATION	0.004496134357343215	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9997701550215986	WITHOUT_CLASSIFICATION	2.2984497840151504E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999271111551679	WITHOUT_CLASSIFICATION	7.288884483213067E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9985917899484235	WITHOUT_CLASSIFICATION	0.0014082100515764979	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9996625317059079	WITHOUT_CLASSIFICATION	3.3746829409198856E-4	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.999720639659182	WITHOUT_CLASSIFICATION	2.7936034081797815E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9990773664627493	WITHOUT_CLASSIFICATION	9.226335372508428E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9994958327566232	WITHOUT_CLASSIFICATION	5.041672433767633E-4	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999239468683758	WITHOUT_CLASSIFICATION	7.605313162421227E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9998497274793527	WITHOUT_CLASSIFICATION	1.5027252064725967E-4	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9907686581635872	WITHOUT_CLASSIFICATION	0.009231341836412854	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999971246150239	WITHOUT_CLASSIFICATION	2.8753849760567963E-6	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999949363497898	WITHOUT_CLASSIFICATION	5.063650210252838E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9993551805226837	WITHOUT_CLASSIFICATION	6.448194773164357E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999902400372415	WITHOUT_CLASSIFICATION	9.759962758485738E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999747739104059	WITHOUT_CLASSIFICATION	2.522608959406718E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999747739104059	WITHOUT_CLASSIFICATION	2.522608959406718E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9998057768782144	WITHOUT_CLASSIFICATION	1.9422312178559494E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999064684292133	WITHOUT_CLASSIFICATION	9.35315707867849E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.999941250399226	WITHOUT_CLASSIFICATION	5.874960077401505E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999229861243628	WITHOUT_CLASSIFICATION	7.701387563713117E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9998118443078439	WITHOUT_CLASSIFICATION	1.881556921560662E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.999978534951101	WITHOUT_CLASSIFICATION	2.1465048899044013E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9995665796084975	WITHOUT_CLASSIFICATION	4.334203915025292E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9988575734373977	WITHOUT_CLASSIFICATION	0.001142426562602325	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9998530168714953	WITHOUT_CLASSIFICATION	1.4698312850466286E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9997255839224316	WITHOUT_CLASSIFICATION	2.744160775683765E-4	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9997291754338719	WITHOUT_CLASSIFICATION	2.7082456612811457E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999933076522065	WITHOUT_CLASSIFICATION	6.692347793571219E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999535871234307	WITHOUT_CLASSIFICATION	4.6412876569136574E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9990342971864833	WITHOUT_CLASSIFICATION	9.657028135167176E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9998912460105314	WITHOUT_CLASSIFICATION	1.0875398946855285E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999215480891	WITHOUT_CLASSIFICATION	7.845191085261191E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9998987216959612	WITHOUT_CLASSIFICATION	1.0127830403880444E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9998984910399669	WITHOUT_CLASSIFICATION	1.0150896003309522E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9998984910399669	WITHOUT_CLASSIFICATION	1.0150896003309522E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9998984910399669	WITHOUT_CLASSIFICATION	1.0150896003309522E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9995901683123607	WITHOUT_CLASSIFICATION	4.0983168763929635E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9998625752968252	WITHOUT_CLASSIFICATION	1.374247031747786E-4	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9997190787064839	WITHOUT_CLASSIFICATION	2.809212935161343E-4	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.999931732689186	WITHOUT_CLASSIFICATION	6.826731081393496E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999452744840441	WITHOUT_CLASSIFICATION	5.4725515955956164E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9988360388880742	WITHOUT_CLASSIFICATION	0.0011639611119257955	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999151411371112	WITHOUT_CLASSIFICATION	8.485886288883033E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.999793949785288	WITHOUT_CLASSIFICATION	2.0605021471199677E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9997190787064839	WITHOUT_CLASSIFICATION	2.809212935161343E-4	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999670826278002	WITHOUT_CLASSIFICATION	3.291737219973273E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9994695792856264	WITHOUT_CLASSIFICATION	5.304207143735815E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9998564715953406	WITHOUT_CLASSIFICATION	1.435284046593473E-4	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999430051138074	WITHOUT_CLASSIFICATION	5.699488619248551E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.997148519942317	WITHOUT_CLASSIFICATION	0.002851480057683019	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9994933764839105	WITHOUT_CLASSIFICATION	5.066235160895537E-4	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999784398989687	WITHOUT_CLASSIFICATION	2.1560101031315462E-5	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9992321545570835	WITHOUT_CLASSIFICATION	7.678454429165681E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999050526201364	WITHOUT_CLASSIFICATION	9.494737986366718E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.999775861946838	WITHOUT_CLASSIFICATION	2.241380531620329E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999050526201364	WITHOUT_CLASSIFICATION	9.494737986366718E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9992986853672051	WITHOUT_CLASSIFICATION	7.01314632794787E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9994415594020347	WITHOUT_CLASSIFICATION	5.584405979651949E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9998847068457045	WITHOUT_CLASSIFICATION	1.152931542954857E-4	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9998961330971516	WITHOUT_CLASSIFICATION	1.0386690284841452E-4	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999103411778165	WITHOUT_CLASSIFICATION	8.965882218354035E-5	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999979917344205	WITHOUT_CLASSIFICATION	2.0082655795084803E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9938453791804849	WITHOUT_CLASSIFICATION	0.006154620819515131	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.997406178705479	WITHOUT_CLASSIFICATION	0.002593821294520956	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9995741279838354	WITHOUT_CLASSIFICATION	4.258720161646449E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9990791910968153	WITHOUT_CLASSIFICATION	9.208089031847546E-4	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9994659072289539	WITHOUT_CLASSIFICATION	5.340927710461156E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9998540523957309	WITHOUT_CLASSIFICATION	1.4594760426912088E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9985644835632067	WITHOUT_CLASSIFICATION	0.0014355164367932218	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9763803343753465	WITHOUT_CLASSIFICATION	0.02361966562465356	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9996651358930955	WITHOUT_CLASSIFICATION	3.348641069045919E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9995548163826972	WITHOUT_CLASSIFICATION	4.451836173028872E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9992441730893769	WITHOUT_CLASSIFICATION	7.558269106231635E-4	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9788446139483615	WITHOUT_CLASSIFICATION	0.02115538605163844	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9998071540687381	WITHOUT_CLASSIFICATION	1.9284593126204797E-4	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9998757612790928	WITHOUT_CLASSIFICATION	1.2423872090727725E-4	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999214712557349	WITHOUT_CLASSIFICATION	7.852874426505215E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9996306543746601	WITHOUT_CLASSIFICATION	3.69345625339823E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9938453791804849	WITHOUT_CLASSIFICATION	0.006154620819515131	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9996287930469643	WITHOUT_CLASSIFICATION	3.712069530357195E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9996287930469643	WITHOUT_CLASSIFICATION	3.712069530357195E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999391196588713	WITHOUT_CLASSIFICATION	6.0880341128741824E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999637656287566	WITHOUT_CLASSIFICATION	3.623437124339881E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999637656287566	WITHOUT_CLASSIFICATION	3.623437124339881E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9996393096313079	WITHOUT_CLASSIFICATION	3.606903686920343E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9996393096313079	WITHOUT_CLASSIFICATION	3.606903686920343E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9822376672916844	WITHOUT_CLASSIFICATION	0.017762332708315676	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999435946947647	WITHOUT_CLASSIFICATION	5.64053052353159E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9997631237876875	WITHOUT_CLASSIFICATION	2.368762123125772E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997956293323341	WITHOUT_CLASSIFICATION	2.0437066766591043E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999561813663224	WITHOUT_CLASSIFICATION	4.381863367761536E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.999699910642216	WITHOUT_CLASSIFICATION	3.000893577840756E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999848186556837	WITHOUT_CLASSIFICATION	1.5181344316272148E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999673667248902	WITHOUT_CLASSIFICATION	3.2633275109861206E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9998741033631684	WITHOUT_CLASSIFICATION	1.258966368316521E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999448054531843	WITHOUT_CLASSIFICATION	5.519454681578475E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9997731927682458	WITHOUT_CLASSIFICATION	2.2680723175403787E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9998876325649635	WITHOUT_CLASSIFICATION	1.1236743503656842E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995435314376913	WITHOUT_CLASSIFICATION	4.5646856230870304E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995435314376913	WITHOUT_CLASSIFICATION	4.5646856230870304E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.999437171066382	WITHOUT_CLASSIFICATION	5.628289336180443E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9962088265260839	WITHOUT_CLASSIFICATION	0.003791173473916072	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999886722853844	WITHOUT_CLASSIFICATION	1.1327714615735322E-5	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9993969461378783	WITHOUT_CLASSIFICATION	6.030538621216567E-4	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999564850865067	WITHOUT_CLASSIFICATION	4.351491349324139E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999224649215083	WITHOUT_CLASSIFICATION	7.75350784917906E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9998768316907299	WITHOUT_CLASSIFICATION	1.231683092700805E-4	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999206144357426	WITHOUT_CLASSIFICATION	7.938556425731486E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.999786078325354	WITHOUT_CLASSIFICATION	2.139216746460404E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9998411950918751	WITHOUT_CLASSIFICATION	1.588049081249845E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999954437151527	WITHOUT_CLASSIFICATION	4.556284847364442E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999113361260591	WITHOUT_CLASSIFICATION	8.866387394094431E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999689139555854	WITHOUT_CLASSIFICATION	3.108604441451651E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999097261096482	WITHOUT_CLASSIFICATION	9.027389035182915E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9997456650779534	WITHOUT_CLASSIFICATION	2.543349220466062E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999696142422311	WITHOUT_CLASSIFICATION	3.038575776887108E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9998707970195795	WITHOUT_CLASSIFICATION	1.2920298042064183E-4	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999195237101667	WITHOUT_CLASSIFICATION	8.047628983335514E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9996192351342752	WITHOUT_CLASSIFICATION	3.807648657248364E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999627287447328	WITHOUT_CLASSIFICATION	3.727125526727879E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9995678213867423	WITHOUT_CLASSIFICATION	4.3217861325777954E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999433938374641	WITHOUT_CLASSIFICATION	5.66061625357685E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999206063508222	WITHOUT_CLASSIFICATION	7.939364917766752E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9998833279231535	WITHOUT_CLASSIFICATION	1.1667207684649229E-4	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9998833279231535	WITHOUT_CLASSIFICATION	1.1667207684649229E-4	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.999899638077822	WITHOUT_CLASSIFICATION	1.0036192217800682E-4	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.99996752744156	WITHOUT_CLASSIFICATION	3.2472558440021205E-5	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999776426240914	WITHOUT_CLASSIFICATION	2.235737590850926E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9998347090266083	WITHOUT_CLASSIFICATION	1.6529097339174596E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9998850468129591	WITHOUT_CLASSIFICATION	1.1495318704082262E-4	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9968935893183573	WITHOUT_CLASSIFICATION	0.0031064106816428485	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9981460610911396	WITHOUT_CLASSIFICATION	0.0018539389088604078	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999952347773174	WITHOUT_CLASSIFICATION	4.7652226826048785E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9990421905917478	WITHOUT_CLASSIFICATION	9.578094082522336E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9995022140449821	WITHOUT_CLASSIFICATION	4.977859550179282E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999219899728227	WITHOUT_CLASSIFICATION	7.80100271773258E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9995713572499791	WITHOUT_CLASSIFICATION	4.286427500208845E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9998603560238513	WITHOUT_CLASSIFICATION	1.3964397614862168E-4	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999216616883634	WITHOUT_CLASSIFICATION	7.83383116366168E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9995833507662797	WITHOUT_CLASSIFICATION	4.166492337204321E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.999503162314351	WITHOUT_CLASSIFICATION	4.968376856489554E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999542554982687	WITHOUT_CLASSIFICATION	4.574450173127971E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999055493627863	WITHOUT_CLASSIFICATION	9.44506372137083E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9996580211393851	WITHOUT_CLASSIFICATION	3.4197886061489483E-4	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9993961155963869	WITHOUT_CLASSIFICATION	6.038844036131422E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999770378951925	WITHOUT_CLASSIFICATION	2.2962104807490626E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9997045034168617	WITHOUT_CLASSIFICATION	2.9549658313835484E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.999503162314351	WITHOUT_CLASSIFICATION	4.968376856489554E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999055493627863	WITHOUT_CLASSIFICATION	9.44506372137083E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9998497877740528	WITHOUT_CLASSIFICATION	1.502122259472795E-4	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9998505404941094	WITHOUT_CLASSIFICATION	1.4945950589056932E-4	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9998530183234747	WITHOUT_CLASSIFICATION	1.469816765252593E-4	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.999886067340886	WITHOUT_CLASSIFICATION	1.1393265911403315E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992007886943421	WITHOUT_CLASSIFICATION	7.992113056577851E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999103620058457	WITHOUT_CLASSIFICATION	8.963799415425521E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999414475692364	WITHOUT_CLASSIFICATION	5.855243076373136E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9998779942248384	WITHOUT_CLASSIFICATION	1.2200577516160897E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999399349681246	WITHOUT_CLASSIFICATION	6.006503187541577E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999399349681246	WITHOUT_CLASSIFICATION	6.006503187541577E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9995190922074729	WITHOUT_CLASSIFICATION	4.809077925270859E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9995893410870225	WITHOUT_CLASSIFICATION	4.106589129775289E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9998258355651753	WITHOUT_CLASSIFICATION	1.7416443482461518E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999473440408685	WITHOUT_CLASSIFICATION	5.2655959131620294E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999473440408685	WITHOUT_CLASSIFICATION	5.2655959131620294E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999168142107244	WITHOUT_CLASSIFICATION	8.31857892754891E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.999525184802182	WITHOUT_CLASSIFICATION	4.7481519781804473E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9998748043999868	WITHOUT_CLASSIFICATION	1.2519560001316097E-4	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998748060086609	WITHOUT_CLASSIFICATION	1.2519399133915454E-4	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.999646871460743	WITHOUT_CLASSIFICATION	3.531285392569004E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9998911880130119	WITHOUT_CLASSIFICATION	1.0881198698809859E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999556020124512	WITHOUT_CLASSIFICATION	4.439798754877567E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998064929048502	WITHOUT_CLASSIFICATION	1.9350709514971836E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999869687808061	WITHOUT_CLASSIFICATION	1.3031219193917158E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999956373369657	WITHOUT_CLASSIFICATION	4.362663034296949E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999518572604631	WITHOUT_CLASSIFICATION	4.8142739536821254E-5	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9988368408560835	WITHOUT_CLASSIFICATION	0.0011631591439165247	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9998748043999868	WITHOUT_CLASSIFICATION	1.2519560001316097E-4	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998748060086609	WITHOUT_CLASSIFICATION	1.2519399133915454E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9996596093161291	WITHOUT_CLASSIFICATION	3.403906838708903E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998488985657443	WITHOUT_CLASSIFICATION	1.5110143425560495E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999141610029053	WITHOUT_CLASSIFICATION	8.583899709478903E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9995134938240298	WITHOUT_CLASSIFICATION	4.8650617597019723E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9995134938240298	WITHOUT_CLASSIFICATION	4.8650617597019723E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9994860230869281	WITHOUT_CLASSIFICATION	5.139769130718707E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9994860230869281	WITHOUT_CLASSIFICATION	5.139769130718707E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999153650927612	WITHOUT_CLASSIFICATION	8.463490723879444E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9998716986885813	WITHOUT_CLASSIFICATION	1.28301311418668E-4	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9998757526211157	WITHOUT_CLASSIFICATION	1.2424737888420555E-4	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999150467992047	WITHOUT_CLASSIFICATION	8.49532007952795E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9995501121080039	WITHOUT_CLASSIFICATION	4.4988789199598006E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9997721724692947	WITHOUT_CLASSIFICATION	2.2782753070535515E-4	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999407586227155	WITHOUT_CLASSIFICATION	5.9241377284613474E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.999425924256894	WITHOUT_CLASSIFICATION	5.740757431060015E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999797807635187	WITHOUT_CLASSIFICATION	2.021923648129813E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999797807635187	WITHOUT_CLASSIFICATION	2.021923648129813E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995446192925803	WITHOUT_CLASSIFICATION	4.553807074196148E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995446192925803	WITHOUT_CLASSIFICATION	4.553807074196148E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995446192925803	WITHOUT_CLASSIFICATION	4.553807074196148E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999727396176866	WITHOUT_CLASSIFICATION	2.7260382313408775E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999727396176866	WITHOUT_CLASSIFICATION	2.7260382313408775E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.999727396176866	WITHOUT_CLASSIFICATION	2.7260382313408775E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999765003447912	WITHOUT_CLASSIFICATION	2.349965520868659E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999765003447912	WITHOUT_CLASSIFICATION	2.349965520868659E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9995206383954258	WITHOUT_CLASSIFICATION	4.7936160457424676E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9995206383954258	WITHOUT_CLASSIFICATION	4.7936160457424676E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9998714604653967	WITHOUT_CLASSIFICATION	1.2853953460328257E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9998714604653967	WITHOUT_CLASSIFICATION	1.2853953460328257E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998932785984871	WITHOUT_CLASSIFICATION	1.0672140151287869E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9998932785984871	WITHOUT_CLASSIFICATION	1.0672140151287869E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999244161095417	WITHOUT_CLASSIFICATION	7.558389045822731E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999244161095417	WITHOUT_CLASSIFICATION	7.558389045822731E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999893560459452	WITHOUT_CLASSIFICATION	1.0643954054795047E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999893560459452	WITHOUT_CLASSIFICATION	1.0643954054795047E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999765003447912	WITHOUT_CLASSIFICATION	2.349965520868659E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9995206383954258	WITHOUT_CLASSIFICATION	4.7936160457424676E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9998714604653967	WITHOUT_CLASSIFICATION	1.2853953460328257E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999244161095417	WITHOUT_CLASSIFICATION	7.558389045822731E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999893560459452	WITHOUT_CLASSIFICATION	1.0643954054795047E-5	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9995542421538074	WITHOUT_CLASSIFICATION	4.4575784619262706E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9884912542755571	WITHOUT_CLASSIFICATION	0.01150874572444295	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9998351682614613	WITHOUT_CLASSIFICATION	1.6483173853870434E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9997793477627004	WITHOUT_CLASSIFICATION	2.2065223729969292E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.99996266398151	WITHOUT_CLASSIFICATION	3.733601848997497E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999415462753043	WITHOUT_CLASSIFICATION	5.845372469559949E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9998313074168547	WITHOUT_CLASSIFICATION	1.6869258314542454E-4	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.999874565836086	WITHOUT_CLASSIFICATION	1.2543416391395284E-4	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9998303078130476	WITHOUT_CLASSIFICATION	1.6969218695242664E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9995127620629712	WITHOUT_CLASSIFICATION	4.872379370288372E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9994464891427038	WITHOUT_CLASSIFICATION	5.535108572961739E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999171191132894	WITHOUT_CLASSIFICATION	8.288088671060318E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9998083483342927	WITHOUT_CLASSIFICATION	1.9165166570735327E-4	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9986021827290167	WITHOUT_CLASSIFICATION	0.001397817270983236	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9998476202848774	WITHOUT_CLASSIFICATION	1.523797151226097E-4	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9995344726334122	WITHOUT_CLASSIFICATION	4.655273665877904E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9995402974650813	WITHOUT_CLASSIFICATION	4.5970253491870486E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9985539384378556	WITHOUT_CLASSIFICATION	0.001446061562144481	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9995469812680856	WITHOUT_CLASSIFICATION	4.53018731914416E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9995304935775572	WITHOUT_CLASSIFICATION	4.695064224428611E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9995244158632134	WITHOUT_CLASSIFICATION	4.7558413678660524E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9995344726334122	WITHOUT_CLASSIFICATION	4.655273665877904E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999785255070942	WITHOUT_CLASSIFICATION	2.147449290579168E-4	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.999785255070942	WITHOUT_CLASSIFICATION	2.147449290579168E-4	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9985539384378556	WITHOUT_CLASSIFICATION	0.001446061562144481	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9995326114472052	WITHOUT_CLASSIFICATION	4.673885527948394E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9988481183333875	WITHOUT_CLASSIFICATION	0.0011518816666124733	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9996102864218385	WITHOUT_CLASSIFICATION	3.897135781614743E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9997280220992689	WITHOUT_CLASSIFICATION	2.719779007310057E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999391945169747	WITHOUT_CLASSIFICATION	6.080548302538036E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9995056012914643	WITHOUT_CLASSIFICATION	4.943987085356945E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9981320447817414	WITHOUT_CLASSIFICATION	0.0018679552182585843	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9995081375686914	WITHOUT_CLASSIFICATION	4.918624313086155E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9995081375686914	WITHOUT_CLASSIFICATION	4.918624313086155E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9995081375686914	WITHOUT_CLASSIFICATION	4.918624313086155E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999198541021231	WITHOUT_CLASSIFICATION	8.01458978768956E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999198541021231	WITHOUT_CLASSIFICATION	8.01458978768956E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998743998092692	WITHOUT_CLASSIFICATION	1.2560019073086198E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998743998092692	WITHOUT_CLASSIFICATION	1.2560019073086198E-4	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9993118358179983	WITHOUT_CLASSIFICATION	6.881641820016251E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999078559073442	WITHOUT_CLASSIFICATION	9.214409265583486E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9993203659511066	WITHOUT_CLASSIFICATION	6.796340488932828E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999168135202867	WITHOUT_CLASSIFICATION	8.318647971330674E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999838858828104	WITHOUT_CLASSIFICATION	1.6114117189645688E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9997650664789943	WITHOUT_CLASSIFICATION	2.349335210055673E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999635597917423	WITHOUT_CLASSIFICATION	3.644020825771677E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9997352093943495	WITHOUT_CLASSIFICATION	2.647906056504817E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9998214593742993	WITHOUT_CLASSIFICATION	1.7854062570068021E-4	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9996802547285993	WITHOUT_CLASSIFICATION	3.197452714006284E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.999891822360401	WITHOUT_CLASSIFICATION	1.0817763959900225E-4	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999838732416403	WITHOUT_CLASSIFICATION	1.6126758359650882E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9995054710526193	WITHOUT_CLASSIFICATION	4.945289473807449E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9992235240574294	WITHOUT_CLASSIFICATION	7.764759425704928E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9997108388403811	WITHOUT_CLASSIFICATION	2.891611596187918E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.998899329622153	WITHOUT_CLASSIFICATION	0.0011006703778470234	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998306415300316	WITHOUT_CLASSIFICATION	1.6935846996828682E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998306415300316	WITHOUT_CLASSIFICATION	1.6935846996828682E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998306415300316	WITHOUT_CLASSIFICATION	1.6935846996828682E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998329303332165	WITHOUT_CLASSIFICATION	1.6706966678342052E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998329303332165	WITHOUT_CLASSIFICATION	1.6706966678342052E-4	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9991732544100954	WITHOUT_CLASSIFICATION	8.267455899046748E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999184793584356	WITHOUT_CLASSIFICATION	8.152064156442247E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994661190382016	WITHOUT_CLASSIFICATION	5.338809617984479E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994661190382016	WITHOUT_CLASSIFICATION	5.338809617984479E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9994886036717144	WITHOUT_CLASSIFICATION	5.113963282855635E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9795869973632018	WITHOUT_CLASSIFICATION	0.02041300263679826	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999305571816293	WITHOUT_CLASSIFICATION	6.944281837076669E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999305571816293	WITHOUT_CLASSIFICATION	6.944281837076669E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999256630012561	WITHOUT_CLASSIFICATION	7.433699874397198E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9998662614537198	WITHOUT_CLASSIFICATION	1.33738546280275E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999198541021231	WITHOUT_CLASSIFICATION	8.01458978768956E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999198541021231	WITHOUT_CLASSIFICATION	8.01458978768956E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998743998092692	WITHOUT_CLASSIFICATION	1.2560019073086198E-4	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9995054710526193	WITHOUT_CLASSIFICATION	4.945289473807449E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9998754745508922	WITHOUT_CLASSIFICATION	1.245254491078067E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998329303332165	WITHOUT_CLASSIFICATION	1.6706966678342052E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999288418823481	WITHOUT_CLASSIFICATION	7.115811765188152E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9998994218315665	WITHOUT_CLASSIFICATION	1.0057816843357447E-4	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9997925101833958	WITHOUT_CLASSIFICATION	2.0748981660409448E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9994464891427038	WITHOUT_CLASSIFICATION	5.535108572961739E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9996185993025758	WITHOUT_CLASSIFICATION	3.8140069742428055E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9996890447797155	WITHOUT_CLASSIFICATION	3.1095522028441714E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.999978266247533	WITHOUT_CLASSIFICATION	2.1733752466931307E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9998051667898895	WITHOUT_CLASSIFICATION	1.9483321011048941E-4	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9995843997051694	WITHOUT_CLASSIFICATION	4.1560029483056054E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.999964127814972	WITHOUT_CLASSIFICATION	3.5872185028008965E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.99979864261194	WITHOUT_CLASSIFICATION	2.0135738806005467E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9997243368298303	WITHOUT_CLASSIFICATION	2.7566317016978846E-4	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9998747790750828	WITHOUT_CLASSIFICATION	1.2522092491719125E-4	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999069256561535	WITHOUT_CLASSIFICATION	9.307434384663602E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999824122880655	WITHOUT_CLASSIFICATION	1.7587711934554386E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999460872991338	WITHOUT_CLASSIFICATION	5.3912700866200554E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9970163585494864	WITHOUT_CLASSIFICATION	0.0029836414505135874	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9872444566877214	WITHOUT_CLASSIFICATION	0.01275554331227849	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9998028865919257	WITHOUT_CLASSIFICATION	1.9711340807416016E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9998630144748551	WITHOUT_CLASSIFICATION	1.3698552514479864E-4	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998591733998572	WITHOUT_CLASSIFICATION	1.4082660014290318E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999933300039604	WITHOUT_CLASSIFICATION	6.669996039641849E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999933300039604	WITHOUT_CLASSIFICATION	6.669996039641849E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9996976822386641	WITHOUT_CLASSIFICATION	3.0231776133584026E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9996563574090033	WITHOUT_CLASSIFICATION	3.436425909968269E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9920036499229786	WITHOUT_CLASSIFICATION	0.007996350077021337	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9957353145342491	WITHOUT_CLASSIFICATION	0.004264685465750884	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999823660760115	WITHOUT_CLASSIFICATION	1.7633923988506515E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.99863541135365	WITHOUT_CLASSIFICATION	0.0013645886463499915	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9991000753544014	WITHOUT_CLASSIFICATION	8.999246455986917E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9995809312065359	WITHOUT_CLASSIFICATION	4.190687934640886E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9995150978239501	WITHOUT_CLASSIFICATION	4.849021760498351E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9998178889104131	WITHOUT_CLASSIFICATION	1.8211108958684507E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9993482997080609	WITHOUT_CLASSIFICATION	6.517002919390208E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999395683553304	WITHOUT_CLASSIFICATION	6.043164466962402E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9996983430270306	WITHOUT_CLASSIFICATION	3.016569729693935E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9993192310545629	WITHOUT_CLASSIFICATION	6.807689454371858E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999719463932127	WITHOUT_CLASSIFICATION	2.805360678727442E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9995940525332948	WITHOUT_CLASSIFICATION	4.0594746670519585E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999127842313476	WITHOUT_CLASSIFICATION	8.721576865238286E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999220148391296	WITHOUT_CLASSIFICATION	7.798516087040227E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999220148391296	WITHOUT_CLASSIFICATION	7.798516087040227E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999526692056748	WITHOUT_CLASSIFICATION	4.733079432515928E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999647078440752	WITHOUT_CLASSIFICATION	3.529215592480044E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.999968183238066	WITHOUT_CLASSIFICATION	3.181676193392121E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999647078440752	WITHOUT_CLASSIFICATION	3.529215592480044E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.99996475738401	WITHOUT_CLASSIFICATION	3.52426159900113E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9998305368370579	WITHOUT_CLASSIFICATION	1.6946316294216577E-4	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999794850968443	WITHOUT_CLASSIFICATION	2.0514903155670995E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999367463548695	WITHOUT_CLASSIFICATION	6.32536451305568E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999304474456979	WITHOUT_CLASSIFICATION	6.955255430206291E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9994739322398132	WITHOUT_CLASSIFICATION	5.260677601867743E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999230735109441	WITHOUT_CLASSIFICATION	7.69264890558266E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.999876342058882	WITHOUT_CLASSIFICATION	1.2365794111803298E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998131648580407	WITHOUT_CLASSIFICATION	1.868351419593569E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999098992315747	WITHOUT_CLASSIFICATION	9.010076842531224E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999935327098721	WITHOUT_CLASSIFICATION	6.467290127894607E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999965282163161	WITHOUT_CLASSIFICATION	3.4717836838400866E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.999222597069865	WITHOUT_CLASSIFICATION	7.77402930134813E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9996724695536152	WITHOUT_CLASSIFICATION	3.275304463847401E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.998670662164348	WITHOUT_CLASSIFICATION	0.001329337835652105	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999623291282838	WITHOUT_CLASSIFICATION	3.7670871716193635E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.997567870449726	WITHOUT_CLASSIFICATION	0.0024321295502739587	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9995607410955235	WITHOUT_CLASSIFICATION	4.3925890447652584E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9997983411689425	WITHOUT_CLASSIFICATION	2.0165883105741636E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9996240435726051	WITHOUT_CLASSIFICATION	3.7595642739485783E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999622468266888	WITHOUT_CLASSIFICATION	3.7753173311159683E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999957067515156	WITHOUT_CLASSIFICATION	4.293248484407114E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999297533732244	WITHOUT_CLASSIFICATION	7.024662677551616E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999077417181943	WITHOUT_CLASSIFICATION	9.225828180566334E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999526776604186	WITHOUT_CLASSIFICATION	4.732233958140289E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999978651194578	WITHOUT_CLASSIFICATION	2.13488054224917E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9997764521672478	WITHOUT_CLASSIFICATION	2.2354783275230724E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996826031621471	WITHOUT_CLASSIFICATION	3.173968378528844E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9996279878681138	WITHOUT_CLASSIFICATION	3.7201213188614135E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999137887314199	WITHOUT_CLASSIFICATION	8.621126858010036E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998463177255988	WITHOUT_CLASSIFICATION	1.5368227440105183E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9992045245089372	WITHOUT_CLASSIFICATION	7.954754910628277E-4	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.999476068606642	WITHOUT_CLASSIFICATION	5.239313933580863E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998837987416765	WITHOUT_CLASSIFICATION	1.1620125832351611E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9983836337539782	WITHOUT_CLASSIFICATION	0.0016163662460218732	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999081140111543	WITHOUT_CLASSIFICATION	9.188598884568056E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9998569944340485	WITHOUT_CLASSIFICATION	1.4300556595156743E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999100634912468	WITHOUT_CLASSIFICATION	8.993650875311422E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999927414044981	WITHOUT_CLASSIFICATION	7.258595501894169E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998364377931677	WITHOUT_CLASSIFICATION	1.6356220683230683E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999848168948433	WITHOUT_CLASSIFICATION	1.5183105156737307E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9998590446753418	WITHOUT_CLASSIFICATION	1.4095532465819216E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996511654341685	WITHOUT_CLASSIFICATION	3.488345658314988E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999542796983208	WITHOUT_CLASSIFICATION	4.572030167919293E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999034293442778	WITHOUT_CLASSIFICATION	9.657065572217727E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9996344774253646	WITHOUT_CLASSIFICATION	3.6552257463549664E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9836286571238729	WITHOUT_CLASSIFICATION	0.0163713428761271	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9998334953185656	WITHOUT_CLASSIFICATION	1.6650468143430578E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9997945492975719	WITHOUT_CLASSIFICATION	2.0545070242808456E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996936417601595	WITHOUT_CLASSIFICATION	3.063582398405563E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999468353133678	WITHOUT_CLASSIFICATION	5.31646866322018E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998474284189978	WITHOUT_CLASSIFICATION	1.525715810022764E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9998617969502482	WITHOUT_CLASSIFICATION	1.3820304975180415E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9996909765814427	WITHOUT_CLASSIFICATION	3.0902341855728677E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9998822396584843	WITHOUT_CLASSIFICATION	1.1776034151572539E-4	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9998157639892636	WITHOUT_CLASSIFICATION	1.8423601073643564E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999151769198812	WITHOUT_CLASSIFICATION	8.482308011875841E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9987070578214348	WITHOUT_CLASSIFICATION	0.001292942178565173	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9993345786992184	WITHOUT_CLASSIFICATION	6.654213007816896E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9998633306058365	WITHOUT_CLASSIFICATION	1.366693941634407E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999452857599933	WITHOUT_CLASSIFICATION	5.471424000666646E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999012399117643	WITHOUT_CLASSIFICATION	9.876008823577853E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999191378312919	WITHOUT_CLASSIFICATION	8.086216870798495E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9996632641100348	WITHOUT_CLASSIFICATION	3.3673588996523167E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9995221190787437	WITHOUT_CLASSIFICATION	4.77880921256299E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9987018677985112	WITHOUT_CLASSIFICATION	0.0012981322014888	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998767189994995	WITHOUT_CLASSIFICATION	1.232810005004595E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9998953826218774	WITHOUT_CLASSIFICATION	1.046173781226276E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999901211125694	WITHOUT_CLASSIFICATION	9.878887430661033E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9998791844319044	WITHOUT_CLASSIFICATION	1.2081556809557904E-4	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999900896619114	WITHOUT_CLASSIFICATION	9.910338088596646E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9982259435912211	WITHOUT_CLASSIFICATION	0.0017740564087788517	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999329225732381	WITHOUT_CLASSIFICATION	6.70774267618883E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998051948823715	WITHOUT_CLASSIFICATION	1.948051176284373E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998274223573881	WITHOUT_CLASSIFICATION	1.7257764261193327E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981984396882335	WITHOUT_CLASSIFICATION	0.0018015603117664653	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999240604757562	WITHOUT_CLASSIFICATION	7.593952424388634E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999925337661852	WITHOUT_CLASSIFICATION	7.466233814800367E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999575197101524	WITHOUT_CLASSIFICATION	4.248028984761219E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999225079330186	WITHOUT_CLASSIFICATION	7.749206698141E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998406289900188	WITHOUT_CLASSIFICATION	1.5937100998117556E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999451461539617	WITHOUT_CLASSIFICATION	5.4853846038330984E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998908554556161	WITHOUT_CLASSIFICATION	1.0914454438384976E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982221416572202	WITHOUT_CLASSIFICATION	0.0017778583427797384	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999226403678225	WITHOUT_CLASSIFICATION	7.735963217748942E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998739320080906	WITHOUT_CLASSIFICATION	1.260679919093481E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9978623893814162	WITHOUT_CLASSIFICATION	0.0021376106185837323	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.0022276098408288373	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980538246439682	WITHOUT_CLASSIFICATION	0.0019461753560318464	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980538246439682	WITHOUT_CLASSIFICATION	0.0019461753560318464	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994979645021971	WITHOUT_CLASSIFICATION	5.020354978028899E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986412413067913	WITHOUT_CLASSIFICATION	0.0013587586932086338	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9973046102809371	WITHOUT_CLASSIFICATION	0.002695389719063012	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9965209875015206	WITHOUT_CLASSIFICATION	0.0034790124984793074	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996788919888258	WITHOUT_CLASSIFICATION	3.211080111742683E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9972286255928455	WITHOUT_CLASSIFICATION	0.0027713744071544717	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.002227609840828836	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998996394616233	WITHOUT_CLASSIFICATION	0.0010036053837669788	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999282377492988	WITHOUT_CLASSIFICATION	7.17622507011348E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982221416572202	WITHOUT_CLASSIFICATION	0.0017778583427797384	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998195684268265	WITHOUT_CLASSIFICATION	1.8043157317348813E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9965209875015206	WITHOUT_CLASSIFICATION	0.0034790124984793087	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9973546766026546	WITHOUT_CLASSIFICATION	0.0026453233973453907	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999386934710841	WITHOUT_CLASSIFICATION	6.130652891594533E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986412413067913	WITHOUT_CLASSIFICATION	0.0013587586932086338	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992406161035771	WITHOUT_CLASSIFICATION	7.593838964228983E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999039306380595	WITHOUT_CLASSIFICATION	9.606936194052674E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990108493581125	WITHOUT_CLASSIFICATION	9.891506418875935E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997632766398614	WITHOUT_CLASSIFICATION	2.3672336013866552E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999329225732381	WITHOUT_CLASSIFICATION	6.70774267618883E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997610587485576	WITHOUT_CLASSIFICATION	2.3894125144235292E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990108493581125	WITHOUT_CLASSIFICATION	9.891506418875935E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997610587485576	WITHOUT_CLASSIFICATION	2.3894125144235292E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9966268650636513	WITHOUT_CLASSIFICATION	0.0033731349363487163	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9932404119879589	WITHOUT_CLASSIFICATION	0.0067595880120411445	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995196398849742	WITHOUT_CLASSIFICATION	4.803601150258279E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9974854920988003	WITHOUT_CLASSIFICATION	0.002514507901199728	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9956155477184305	WITHOUT_CLASSIFICATION	0.004384452281569525	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998146000779822	WITHOUT_CLASSIFICATION	0.001853999220177919	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.002227609840828836	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997540622895451	WITHOUT_CLASSIFICATION	2.459377104548684E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982259435912211	WITHOUT_CLASSIFICATION	0.0017740564087788525	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982221416572202	WITHOUT_CLASSIFICATION	0.0017778583427797393	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969600415249965	WITHOUT_CLASSIFICATION	0.003039958475003478	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998195755013465	WITHOUT_CLASSIFICATION	1.8042449865354174E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997540622895451	WITHOUT_CLASSIFICATION	2.459377104548684E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999926154544836	WITHOUT_CLASSIFICATION	7.384545516400822E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994734865775503	WITHOUT_CLASSIFICATION	5.265134224497295E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998423721414073	WITHOUT_CLASSIFICATION	1.5762785859268135E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999253776022166	WITHOUT_CLASSIFICATION	7.462239778341701E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991306528638043	WITHOUT_CLASSIFICATION	8.693471361956733E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999938561860749	WITHOUT_CLASSIFICATION	6.143813925096977E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991306528638043	WITHOUT_CLASSIFICATION	8.693471361956733E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999332315673588	WITHOUT_CLASSIFICATION	6.676843264123865E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997417283567849	WITHOUT_CLASSIFICATION	2.5827164321513607E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9978402660444662	WITHOUT_CLASSIFICATION	0.002159733955533764	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99984136306977	WITHOUT_CLASSIFICATION	1.586369302299975E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998739320080906	WITHOUT_CLASSIFICATION	1.260679919093481E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999719463932127	WITHOUT_CLASSIFICATION	2.805360678727442E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.0022276098408288373	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992007886943421	WITHOUT_CLASSIFICATION	7.992113056577851E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997140042535321	WITHOUT_CLASSIFICATION	2.859957464679405E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991306528638043	WITHOUT_CLASSIFICATION	8.693471361956733E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999229861243628	WITHOUT_CLASSIFICATION	7.701387563713117E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994962182620505	WITHOUT_CLASSIFICATION	5.037817379495648E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969359727152647	WITHOUT_CLASSIFICATION	0.0030640272847353286	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999278277972732	WITHOUT_CLASSIFICATION	7.217220272687481E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999604882543106	WITHOUT_CLASSIFICATION	3.9511745689296344E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9998721365325302	WITHOUT_CLASSIFICATION	1.2786346746985843E-4	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9998748470819064	WITHOUT_CLASSIFICATION	1.2515291809356285E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9995940525332948	WITHOUT_CLASSIFICATION	4.0594746670519585E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9997334723740702	WITHOUT_CLASSIFICATION	2.6652762592983234E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9998721840230967	WITHOUT_CLASSIFICATION	1.2781597690324987E-4	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.999944639021448	WITHOUT_CLASSIFICATION	5.536097855182817E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9872444566877214	WITHOUT_CLASSIFICATION	0.01275554331227849	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9998028865919257	WITHOUT_CLASSIFICATION	1.9711340807416016E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9998630144748551	WITHOUT_CLASSIFICATION	1.3698552514479864E-4	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998591733998572	WITHOUT_CLASSIFICATION	1.4082660014290318E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999933300039604	WITHOUT_CLASSIFICATION	6.669996039641849E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9996563574090033	WITHOUT_CLASSIFICATION	3.436425909968269E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9920036499229786	WITHOUT_CLASSIFICATION	0.007996350077021337	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9957353145342491	WITHOUT_CLASSIFICATION	0.004264685465750884	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999823660760115	WITHOUT_CLASSIFICATION	1.7633923988506515E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.99863541135365	WITHOUT_CLASSIFICATION	0.0013645886463499915	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999452857599933	WITHOUT_CLASSIFICATION	5.471424000666646E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9998178889104131	WITHOUT_CLASSIFICATION	1.8211108958684507E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9993482997080609	WITHOUT_CLASSIFICATION	6.517002919390208E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999395683553304	WITHOUT_CLASSIFICATION	6.043164466962402E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9996983430270306	WITHOUT_CLASSIFICATION	3.016569729693935E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9993192310545629	WITHOUT_CLASSIFICATION	6.807689454371858E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9995150978239501	WITHOUT_CLASSIFICATION	4.849021760498351E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999719463932127	WITHOUT_CLASSIFICATION	2.805360678727442E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999127842313476	WITHOUT_CLASSIFICATION	8.721576865238286E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999220148391296	WITHOUT_CLASSIFICATION	7.798516087040227E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999220148391296	WITHOUT_CLASSIFICATION	7.798516087040227E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999492292256081	WITHOUT_CLASSIFICATION	5.07707743919458E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999848488318116	WITHOUT_CLASSIFICATION	1.5151168188257876E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999647078440752	WITHOUT_CLASSIFICATION	3.529215592480044E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999647078440752	WITHOUT_CLASSIFICATION	3.529215592480044E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999647078440752	WITHOUT_CLASSIFICATION	3.529215592480044E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.99996475738401	WITHOUT_CLASSIFICATION	3.52426159900113E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9998305368370579	WITHOUT_CLASSIFICATION	1.6946316294216577E-4	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999367463548695	WITHOUT_CLASSIFICATION	6.32536451305568E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998733541155401	WITHOUT_CLASSIFICATION	1.2664588445993307E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999304474456979	WITHOUT_CLASSIFICATION	6.955255430206291E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9994739322398132	WITHOUT_CLASSIFICATION	5.260677601867743E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999230735109441	WITHOUT_CLASSIFICATION	7.69264890558266E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999181770548383	WITHOUT_CLASSIFICATION	8.182294516164814E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.999876342058882	WITHOUT_CLASSIFICATION	1.2365794111803298E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999637951038962	WITHOUT_CLASSIFICATION	3.620489610375362E-5	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999965282163161	WITHOUT_CLASSIFICATION	3.4717836838400866E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998131648580407	WITHOUT_CLASSIFICATION	1.868351419593569E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999098992315747	WITHOUT_CLASSIFICATION	9.010076842531224E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9996724695536152	WITHOUT_CLASSIFICATION	3.275304463847401E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.998670662164348	WITHOUT_CLASSIFICATION	0.001329337835652105	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999623291282838	WITHOUT_CLASSIFICATION	3.7670871716193635E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9936929299451615	WITHOUT_CLASSIFICATION	0.006307070054838533	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.997567870449726	WITHOUT_CLASSIFICATION	0.0024321295502739587	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9995607410955235	WITHOUT_CLASSIFICATION	4.3925890447652584E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9997983411689425	WITHOUT_CLASSIFICATION	2.0165883105741636E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9996240435726051	WITHOUT_CLASSIFICATION	3.7595642739485783E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999622468266888	WITHOUT_CLASSIFICATION	3.7753173311159683E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999957067515156	WITHOUT_CLASSIFICATION	4.293248484407114E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999297533732244	WITHOUT_CLASSIFICATION	7.024662677551616E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999077417181943	WITHOUT_CLASSIFICATION	9.225828180566334E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999526776604186	WITHOUT_CLASSIFICATION	4.732233958140289E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999526776604186	WITHOUT_CLASSIFICATION	4.732233958140289E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999978651194578	WITHOUT_CLASSIFICATION	2.13488054224917E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9997764521672478	WITHOUT_CLASSIFICATION	2.2354783275230724E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996826031621471	WITHOUT_CLASSIFICATION	3.173968378528844E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9996279878681138	WITHOUT_CLASSIFICATION	3.7201213188614135E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998463177255988	WITHOUT_CLASSIFICATION	1.5368227440105183E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9992045245089372	WITHOUT_CLASSIFICATION	7.954754910628277E-4	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.999476068606642	WITHOUT_CLASSIFICATION	5.239313933580863E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998837987416765	WITHOUT_CLASSIFICATION	1.1620125832351611E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999081140111543	WITHOUT_CLASSIFICATION	9.188598884568056E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999077417181943	WITHOUT_CLASSIFICATION	9.225828180566334E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9998569944340485	WITHOUT_CLASSIFICATION	1.4300556595156743E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999100634912468	WITHOUT_CLASSIFICATION	8.993650875311422E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999927414044981	WITHOUT_CLASSIFICATION	7.258595501894169E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998364377931677	WITHOUT_CLASSIFICATION	1.6356220683230683E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999848168948433	WITHOUT_CLASSIFICATION	1.5183105156737307E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996511654341685	WITHOUT_CLASSIFICATION	3.488345658314988E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999542796983208	WITHOUT_CLASSIFICATION	4.572030167919293E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999034293442778	WITHOUT_CLASSIFICATION	9.657065572217727E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9996344774253646	WITHOUT_CLASSIFICATION	3.6552257463549664E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9836286571238729	WITHOUT_CLASSIFICATION	0.0163713428761271	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9998334953185656	WITHOUT_CLASSIFICATION	1.6650468143430578E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9997945492975719	WITHOUT_CLASSIFICATION	2.0545070242808456E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9996936417601595	WITHOUT_CLASSIFICATION	3.063582398405563E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999468353133678	WITHOUT_CLASSIFICATION	5.31646866322018E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998474284189978	WITHOUT_CLASSIFICATION	1.525715810022764E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9998617969502482	WITHOUT_CLASSIFICATION	1.3820304975180415E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9998822396584843	WITHOUT_CLASSIFICATION	1.1776034151572539E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999151769198812	WITHOUT_CLASSIFICATION	8.482308011875841E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9987070578214348	WITHOUT_CLASSIFICATION	0.001292942178565173	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9993345786992184	WITHOUT_CLASSIFICATION	6.654213007816896E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9998633306058365	WITHOUT_CLASSIFICATION	1.366693941634407E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9998191739735048	WITHOUT_CLASSIFICATION	1.8082602649506816E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999686450875961	WITHOUT_CLASSIFICATION	3.135491240389044E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.997095338898644	WITHOUT_CLASSIFICATION	0.0029046611013560895	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999012399117643	WITHOUT_CLASSIFICATION	9.876008823577853E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998860359069793	WITHOUT_CLASSIFICATION	1.139640930207397E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999191378312919	WITHOUT_CLASSIFICATION	8.086216870798495E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9996632641100348	WITHOUT_CLASSIFICATION	3.3673588996523167E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9995221190787437	WITHOUT_CLASSIFICATION	4.77880921256299E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999321291851067	WITHOUT_CLASSIFICATION	6.787081489337195E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9987018677985112	WITHOUT_CLASSIFICATION	0.0012981322014888	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998767189994995	WITHOUT_CLASSIFICATION	1.232810005004595E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9998953826218774	WITHOUT_CLASSIFICATION	1.046173781226276E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999901211125694	WITHOUT_CLASSIFICATION	9.878887430661033E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9998791844319044	WITHOUT_CLASSIFICATION	1.2081556809557904E-4	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.999900896619114	WITHOUT_CLASSIFICATION	9.910338088596646E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9982259435912211	WITHOUT_CLASSIFICATION	0.0017740564087788517	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999329225732381	WITHOUT_CLASSIFICATION	6.70774267618883E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998274223573881	WITHOUT_CLASSIFICATION	1.7257764261193327E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981984396882335	WITHOUT_CLASSIFICATION	0.0018015603117664653	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999240604757562	WITHOUT_CLASSIFICATION	7.593952424388634E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999925337661852	WITHOUT_CLASSIFICATION	7.466233814800367E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999575197101524	WITHOUT_CLASSIFICATION	4.248028984761219E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999225079330186	WITHOUT_CLASSIFICATION	7.749206698141E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9962307664703739	WITHOUT_CLASSIFICATION	0.0037692335296260833	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998908554556161	WITHOUT_CLASSIFICATION	1.0914454438384976E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982221416572202	WITHOUT_CLASSIFICATION	0.0017778583427797384	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999226403678225	WITHOUT_CLASSIFICATION	7.735963217748942E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998739320080906	WITHOUT_CLASSIFICATION	1.260679919093481E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9978623893814162	WITHOUT_CLASSIFICATION	0.0021376106185837323	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988728415156133	WITHOUT_CLASSIFICATION	0.0011271584843866177	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.0022276098408288373	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980538246439682	WITHOUT_CLASSIFICATION	0.0019461753560318464	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986412413067913	WITHOUT_CLASSIFICATION	0.0013587586932086338	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998996394616233	WITHOUT_CLASSIFICATION	0.0010036053837669788	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980538246439682	WITHOUT_CLASSIFICATION	0.0019461753560318464	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9973046102809371	WITHOUT_CLASSIFICATION	0.002695389719063012	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9965209875015206	WITHOUT_CLASSIFICATION	0.0034790124984793074	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996788919888258	WITHOUT_CLASSIFICATION	3.211080111742683E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9972286255928455	WITHOUT_CLASSIFICATION	0.0027713744071544717	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.002227609840828836	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999282377492988	WITHOUT_CLASSIFICATION	7.17622507011348E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982221416572202	WITHOUT_CLASSIFICATION	0.0017778583427797384	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998195684268265	WITHOUT_CLASSIFICATION	1.8043157317348813E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999488847642827	WITHOUT_CLASSIFICATION	5.111523571730685E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990549093144344	WITHOUT_CLASSIFICATION	9.45090685565643E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9973546766026546	WITHOUT_CLASSIFICATION	0.0026453233973453907	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999386934710841	WITHOUT_CLASSIFICATION	6.130652891594533E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992406161035771	WITHOUT_CLASSIFICATION	7.593838964228983E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999685770215456	WITHOUT_CLASSIFICATION	3.1422978454367975E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9986412413067913	WITHOUT_CLASSIFICATION	0.0013587586932086338	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999039306380595	WITHOUT_CLASSIFICATION	9.606936194052674E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990108493581125	WITHOUT_CLASSIFICATION	9.891506418875935E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999329225732381	WITHOUT_CLASSIFICATION	6.70774267618883E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999329225732381	WITHOUT_CLASSIFICATION	6.70774267618883E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997610587485576	WITHOUT_CLASSIFICATION	2.3894125144235292E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9966268650636513	WITHOUT_CLASSIFICATION	0.0033731349363487163	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990108493581125	WITHOUT_CLASSIFICATION	9.891506418875935E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9932404119879589	WITHOUT_CLASSIFICATION	0.0067595880120411445	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995196398849742	WITHOUT_CLASSIFICATION	4.803601150258279E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9974854920988003	WITHOUT_CLASSIFICATION	0.002514507901199728	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9956155477184305	WITHOUT_CLASSIFICATION	0.004384452281569525	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998146000779822	WITHOUT_CLASSIFICATION	0.001853999220177919	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.002227609840828836	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977723901591711	WITHOUT_CLASSIFICATION	0.002227609840828836	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997540622895451	WITHOUT_CLASSIFICATION	2.459377104548684E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982259435912211	WITHOUT_CLASSIFICATION	0.0017740564087788525	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982221416572202	WITHOUT_CLASSIFICATION	0.0017778583427797393	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969600415249965	WITHOUT_CLASSIFICATION	0.003039958475003478	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999218380591991	WITHOUT_CLASSIFICATION	7.816194080092227E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9990899383821062	WITHOUT_CLASSIFICATION	9.100616178936767E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998195755013465	WITHOUT_CLASSIFICATION	1.8042449865354174E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997540622895451	WITHOUT_CLASSIFICATION	2.459377104548684E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999926154544836	WITHOUT_CLASSIFICATION	7.384545516400822E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998423721414073	WITHOUT_CLASSIFICATION	1.5762785859268135E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999253776022166	WITHOUT_CLASSIFICATION	7.462239778341701E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991306528638043	WITHOUT_CLASSIFICATION	8.693471361956733E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999938561860749	WITHOUT_CLASSIFICATION	6.143813925096977E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991306528638043	WITHOUT_CLASSIFICATION	8.693471361956733E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999332315673588	WITHOUT_CLASSIFICATION	6.676843264123865E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997417283567849	WITHOUT_CLASSIFICATION	2.5827164321513607E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9978402660444662	WITHOUT_CLASSIFICATION	0.002159733955533764	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99984136306977	WITHOUT_CLASSIFICATION	1.586369302299975E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998739320080906	WITHOUT_CLASSIFICATION	1.260679919093481E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999295813861235	WITHOUT_CLASSIFICATION	7.041861387637462E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999193763084016	WITHOUT_CLASSIFICATION	8.06236915984135E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999229861243628	WITHOUT_CLASSIFICATION	7.701387563713117E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997140042535321	WITHOUT_CLASSIFICATION	2.859957464679405E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991306528638043	WITHOUT_CLASSIFICATION	8.693471361956733E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999229861243628	WITHOUT_CLASSIFICATION	7.701387563713117E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994962182620505	WITHOUT_CLASSIFICATION	5.037817379495648E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969359727152647	WITHOUT_CLASSIFICATION	0.0030640272847353286	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999492292256081	WITHOUT_CLASSIFICATION	5.07707743919458E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999278277972732	WITHOUT_CLASSIFICATION	7.217220272687481E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999604882543106	WITHOUT_CLASSIFICATION	3.9511745689296344E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9998721365325302	WITHOUT_CLASSIFICATION	1.2786346746985843E-4	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9998748470819064	WITHOUT_CLASSIFICATION	1.2515291809356285E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999719463932127	WITHOUT_CLASSIFICATION	2.805360678727442E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9997334723740702	WITHOUT_CLASSIFICATION	2.6652762592983234E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9998721840230967	WITHOUT_CLASSIFICATION	1.2781597690324987E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999848488318116	WITHOUT_CLASSIFICATION	1.5151168188257876E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999937891738556	WITHOUT_CLASSIFICATION	6.210826144394648E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999937891738556	WITHOUT_CLASSIFICATION	6.210826144394648E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9997824661161956	WITHOUT_CLASSIFICATION	2.175338838042731E-4	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999915699424116	WITHOUT_CLASSIFICATION	8.430057588544538E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9998382537552681	WITHOUT_CLASSIFICATION	1.6174624473184185E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9998993359201013	WITHOUT_CLASSIFICATION	1.0066407989874151E-4	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9998110688477899	WITHOUT_CLASSIFICATION	1.8893115221006905E-4	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999813575180375	WITHOUT_CLASSIFICATION	1.8642481962494493E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9997041610288202	WITHOUT_CLASSIFICATION	2.958389711797907E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9998472696060582	WITHOUT_CLASSIFICATION	1.527303939417957E-4	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999351922946351	WITHOUT_CLASSIFICATION	6.48077053649513E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.999904601366291	WITHOUT_CLASSIFICATION	9.539863370892264E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999883232968861	WITHOUT_CLASSIFICATION	1.167670311389497E-5	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9998320714844183	WITHOUT_CLASSIFICATION	1.679285155816937E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999784566643208	WITHOUT_CLASSIFICATION	2.1543335679189584E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999973325716246	WITHOUT_CLASSIFICATION	2.6674283754022434E-6	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9964390087983719	WITHOUT_CLASSIFICATION	0.003560991201628106	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999525172370375	WITHOUT_CLASSIFICATION	4.748276296238044E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9992687856902294	WITHOUT_CLASSIFICATION	7.312143097705757E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9998331707096648	WITHOUT_CLASSIFICATION	1.6682929033513472E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.999900789341641	WITHOUT_CLASSIFICATION	9.921065835897363E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9997486663786854	WITHOUT_CLASSIFICATION	2.5133362131459923E-4	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9993448530071916	WITHOUT_CLASSIFICATION	6.551469928083835E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999210547342136	WITHOUT_CLASSIFICATION	7.894526578645255E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9993304269692757	WITHOUT_CLASSIFICATION	6.695730307242784E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998435794528295	WITHOUT_CLASSIFICATION	1.5642054717055894E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9984655062577829	WITHOUT_CLASSIFICATION	0.0015344937422171103	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998217569808858	WITHOUT_CLASSIFICATION	1.7824301911415917E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998885726668123	WITHOUT_CLASSIFICATION	1.1142733318763883E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.99993559799127	WITHOUT_CLASSIFICATION	6.440200873007122E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.99993559799127	WITHOUT_CLASSIFICATION	6.440200873007122E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999448437921499	WITHOUT_CLASSIFICATION	5.515620785010926E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999942142418279	WITHOUT_CLASSIFICATION	5.785758172126489E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9997440793213571	WITHOUT_CLASSIFICATION	2.5592067864294704E-4	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9998978224158009	WITHOUT_CLASSIFICATION	1.0217758419906793E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999635565876718	WITHOUT_CLASSIFICATION	3.644341232815406E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.999976156434633	WITHOUT_CLASSIFICATION	2.3843565367030205E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999755671019429	WITHOUT_CLASSIFICATION	2.4432898057063284E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999287327187967	WITHOUT_CLASSIFICATION	7.126728120337992E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999005782391285	WITHOUT_CLASSIFICATION	9.942176087155417E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9996962392132965	WITHOUT_CLASSIFICATION	3.037607867034327E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9996962392132965	WITHOUT_CLASSIFICATION	3.037607867034327E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9982542518680315	WITHOUT_CLASSIFICATION	0.0017457481319685302	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9982542518680315	WITHOUT_CLASSIFICATION	0.0017457481319685302	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999538836516803	WITHOUT_CLASSIFICATION	4.611634831969238E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.999972863463254	WITHOUT_CLASSIFICATION	2.7136536745921376E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9998402304538303	WITHOUT_CLASSIFICATION	1.5976954616960936E-4	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999602802418344	WITHOUT_CLASSIFICATION	3.971975816560268E-5	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.998773570213751	WITHOUT_CLASSIFICATION	0.001226429786248988	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9998382758305353	WITHOUT_CLASSIFICATION	1.6172416946470648E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999528912907928	WITHOUT_CLASSIFICATION	4.7108709207209754E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999952619309957	WITHOUT_CLASSIFICATION	4.738069004323637E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9846857263995238	WITHOUT_CLASSIFICATION	0.015314273600476082	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999520417926586	WITHOUT_CLASSIFICATION	4.795820734138864E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998735155548607	WITHOUT_CLASSIFICATION	1.2648444513932428E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999696766395143	WITHOUT_CLASSIFICATION	3.0323360485802105E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999785047654929	WITHOUT_CLASSIFICATION	2.149523450710439E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999894914888704	WITHOUT_CLASSIFICATION	1.0508511129630725E-5	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999976300817508	WITHOUT_CLASSIFICATION	2.369918249256126E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999533523818736	WITHOUT_CLASSIFICATION	4.664761812643965E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999293458444933	WITHOUT_CLASSIFICATION	7.065415550666162E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999756385325368	WITHOUT_CLASSIFICATION	2.436146746317753E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.989754780718675	WITHOUT_CLASSIFICATION	0.010245219281325048	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9998519529980036	WITHOUT_CLASSIFICATION	1.480470019963814E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9995493132924183	WITHOUT_CLASSIFICATION	4.50686707581761E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9996111798798837	WITHOUT_CLASSIFICATION	3.8882012011633664E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9998910781919638	WITHOUT_CLASSIFICATION	1.0892180803611271E-4	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9997952644254121	WITHOUT_CLASSIFICATION	2.0473557458786925E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999846813021792	WITHOUT_CLASSIFICATION	1.5318697820857533E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9990770240975044	WITHOUT_CLASSIFICATION	9.229759024955835E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999117403732058	WITHOUT_CLASSIFICATION	8.82596267942087E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998398526359363	WITHOUT_CLASSIFICATION	1.601473640636085E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998398526359363	WITHOUT_CLASSIFICATION	1.601473640636085E-4	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999109462953834	WITHOUT_CLASSIFICATION	8.905370461666967E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.999684910693075	WITHOUT_CLASSIFICATION	3.150893069249659E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9997620835968245	WITHOUT_CLASSIFICATION	2.3791640317552938E-4	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9996594291990342	WITHOUT_CLASSIFICATION	3.405708009658548E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.99992872855293	WITHOUT_CLASSIFICATION	7.127144707000427E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9998885419624286	WITHOUT_CLASSIFICATION	1.1145803757141858E-4	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9998590919811466	WITHOUT_CLASSIFICATION	1.4090801885342837E-4	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998210123675589	WITHOUT_CLASSIFICATION	1.7898763244104422E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9990770240975044	WITHOUT_CLASSIFICATION	9.229759024955835E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9995772152887421	WITHOUT_CLASSIFICATION	4.2278471125798035E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999705333131508	WITHOUT_CLASSIFICATION	2.946668684918404E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.999933712057329	WITHOUT_CLASSIFICATION	6.628794267097872E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9581443875402781	WITHOUT_CLASSIFICATION	0.04185561245972192	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9998719257151553	WITHOUT_CLASSIFICATION	1.2807428484469722E-4	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999201346806077	WITHOUT_CLASSIFICATION	7.986531939241777E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9997760561057523	WITHOUT_CLASSIFICATION	2.2394389424762915E-4	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999262213953699	WITHOUT_CLASSIFICATION	7.377860463011392E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999535114011622	WITHOUT_CLASSIFICATION	4.6488598837717464E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9998976889509922	WITHOUT_CLASSIFICATION	1.0231104900784066E-4	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999196913913546	WITHOUT_CLASSIFICATION	8.03086086454691E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999232229919615	WITHOUT_CLASSIFICATION	7.677700803854569E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999706610892926	WITHOUT_CLASSIFICATION	2.933891070743283E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999869027913417	WITHOUT_CLASSIFICATION	1.3097208658276621E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9576537219286897	WITHOUT_CLASSIFICATION	0.04234627807131033	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9993024554993069	WITHOUT_CLASSIFICATION	6.975445006931259E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999766433812574	WITHOUT_CLASSIFICATION	2.335661874269623E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9998108744011948	WITHOUT_CLASSIFICATION	1.8912559880524934E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9996820640758634	WITHOUT_CLASSIFICATION	3.1793592413670015E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9997152860883358	WITHOUT_CLASSIFICATION	2.8471391166414557E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999661928899655	WITHOUT_CLASSIFICATION	3.380711003448652E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9998845934992944	WITHOUT_CLASSIFICATION	1.154065007056482E-4	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9998177063803807	WITHOUT_CLASSIFICATION	1.8229361961924357E-4	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999905020134314	WITHOUT_CLASSIFICATION	9.49798656864728E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9997760561057523	WITHOUT_CLASSIFICATION	2.2394389424762915E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999119678298141	WITHOUT_CLASSIFICATION	8.803217018587775E-5	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9994725263205194	WITHOUT_CLASSIFICATION	5.274736794805314E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9998654473597345	WITHOUT_CLASSIFICATION	1.345526402655093E-4	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.855211896060274	WITHOUT_CLASSIFICATION	0.14478810393972597	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9994366087751986	WITHOUT_CLASSIFICATION	5.633912248013959E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9903077468280975	WITHOUT_CLASSIFICATION	0.009692253171902497	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.999779767893838	WITHOUT_CLASSIFICATION	2.202321061620426E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9994739389079736	WITHOUT_CLASSIFICATION	5.260610920264247E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9990456300216135	WITHOUT_CLASSIFICATION	9.543699783863645E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9998487486802399	WITHOUT_CLASSIFICATION	1.51251319760095E-4	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999215323524452	WITHOUT_CLASSIFICATION	7.84676475548225E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999215323524452	WITHOUT_CLASSIFICATION	7.84676475548225E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999269575818989	WITHOUT_CLASSIFICATION	7.304241810115807E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9993315151455007	WITHOUT_CLASSIFICATION	6.684848544993119E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9996437918073992	WITHOUT_CLASSIFICATION	3.5620819260089666E-4	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.999920259967555	WITHOUT_CLASSIFICATION	7.974003244502774E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999182680958087	WITHOUT_CLASSIFICATION	8.173190419117362E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9998556196666953	WITHOUT_CLASSIFICATION	1.4438033330461595E-4	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999627371676748	WITHOUT_CLASSIFICATION	3.726283232516948E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9997621973296017	WITHOUT_CLASSIFICATION	2.3780267039816673E-4	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9989176703449801	WITHOUT_CLASSIFICATION	0.001082329655019889	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9998913065618363	WITHOUT_CLASSIFICATION	1.0869343816362645E-4	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999204862824556	WITHOUT_CLASSIFICATION	7.95137175444803E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9982542518680315	WITHOUT_CLASSIFICATION	0.0017457481319685302	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999528912907928	WITHOUT_CLASSIFICATION	4.7108709207209754E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999182680958087	WITHOUT_CLASSIFICATION	8.173190419117362E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9998556196666953	WITHOUT_CLASSIFICATION	1.4438033330461595E-4	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9998811434057833	WITHOUT_CLASSIFICATION	1.1885659421677338E-4	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999766784860737	WITHOUT_CLASSIFICATION	2.3321513926209822E-5	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9998685579123698	WITHOUT_CLASSIFICATION	1.314420876302465E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9969865051678635	WITHOUT_CLASSIFICATION	0.003013494832136582	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9926500389299523	WITHOUT_CLASSIFICATION	0.007349961070047688	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.999836081727294	WITHOUT_CLASSIFICATION	1.6391827270608188E-4	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9980557666536326	WITHOUT_CLASSIFICATION	0.0019442333463674376	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9998076718712842	WITHOUT_CLASSIFICATION	1.923281287158863E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9997684198770981	WITHOUT_CLASSIFICATION	2.3158012290192895E-4	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9983621041598417	WITHOUT_CLASSIFICATION	0.0016378958401582007	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.999360825546145	WITHOUT_CLASSIFICATION	6.391744538550532E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9990361429134259	WITHOUT_CLASSIFICATION	9.638570865741454E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9997866215510581	WITHOUT_CLASSIFICATION	2.1337844894184788E-4	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9988164356850868	WITHOUT_CLASSIFICATION	0.0011835643149130954	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999296910523601	WITHOUT_CLASSIFICATION	7.030894763994387E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9990361429134259	WITHOUT_CLASSIFICATION	9.638570865741454E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9990361429134259	WITHOUT_CLASSIFICATION	9.638570865741454E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9990361429134259	WITHOUT_CLASSIFICATION	9.638570865741454E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999297755127229	WITHOUT_CLASSIFICATION	7.022448727712705E-5	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.999928262846163	WITHOUT_CLASSIFICATION	7.173715383703302E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9998436032130863	WITHOUT_CLASSIFICATION	1.5639678691372466E-4	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999465172729524	WITHOUT_CLASSIFICATION	5.348272704768919E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9993971412584941	WITHOUT_CLASSIFICATION	6.028587415059463E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999592235961614	WITHOUT_CLASSIFICATION	4.0776403838579816E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9977235706772021	WITHOUT_CLASSIFICATION	0.002276429322797885	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999342337869218	WITHOUT_CLASSIFICATION	6.57662130782143E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.999989645631719	WITHOUT_CLASSIFICATION	1.035436828112294E-5	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9997491919509617	WITHOUT_CLASSIFICATION	2.508080490383641E-4	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9997721791232579	WITHOUT_CLASSIFICATION	2.2782087674206916E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9998444067464711	WITHOUT_CLASSIFICATION	1.5559325352880915E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999363925352504	WITHOUT_CLASSIFICATION	6.36074647496078E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.999998115351307	WITHOUT_CLASSIFICATION	1.8846486930106532E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9998484359489657	WITHOUT_CLASSIFICATION	1.5156405103427398E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999727694670479	WITHOUT_CLASSIFICATION	2.7230532951959056E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9995407259635688	WITHOUT_CLASSIFICATION	4.5927403643120237E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9996489195929097	WITHOUT_CLASSIFICATION	3.510804070904078E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999580993052625	WITHOUT_CLASSIFICATION	4.190069473750313E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996867490075863	WITHOUT_CLASSIFICATION	3.1325099241372303E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996867490075863	WITHOUT_CLASSIFICATION	3.1325099241372303E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9997298194467641	WITHOUT_CLASSIFICATION	2.7018055323586176E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.7726490273207017	WITHOUT_CLASSIFICATION	0.22735097267929835	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9998623693879405	WITHOUT_CLASSIFICATION	1.376306120594246E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9607516182597761	WITHOUT_CLASSIFICATION	0.039248381740223964	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999294896677003	WITHOUT_CLASSIFICATION	7.05103322996976E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999413115180341	WITHOUT_CLASSIFICATION	5.868848196573386E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999235361197556	WITHOUT_CLASSIFICATION	7.646388024438829E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.999860911167566	WITHOUT_CLASSIFICATION	1.3908883243395992E-4	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999956185062458	WITHOUT_CLASSIFICATION	4.3814937542070675E-5	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9989370367037291	WITHOUT_CLASSIFICATION	0.0010629632962708975	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999642755624822	WITHOUT_CLASSIFICATION	3.57244375177747E-5	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999773933145125	WITHOUT_CLASSIFICATION	2.2606685487490216E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999744556125156	WITHOUT_CLASSIFICATION	2.554438748437051E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9998124171664148	WITHOUT_CLASSIFICATION	1.8758283358531614E-4	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999549142359386	WITHOUT_CLASSIFICATION	4.508576406129758E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9998968498490639	WITHOUT_CLASSIFICATION	1.0315015093609479E-4	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999847466719799	WITHOUT_CLASSIFICATION	1.5253328020140592E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999487961681677	WITHOUT_CLASSIFICATION	5.120383183240325E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9997888377031042	WITHOUT_CLASSIFICATION	2.1116229689579764E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9993337865580517	WITHOUT_CLASSIFICATION	6.662134419482356E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.999980894557207	WITHOUT_CLASSIFICATION	1.9105442792956477E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999549777209866	WITHOUT_CLASSIFICATION	4.5022279013345905E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997643767267494	WITHOUT_CLASSIFICATION	2.3562327325064034E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997643767267494	WITHOUT_CLASSIFICATION	2.3562327325064034E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9987528749010054	WITHOUT_CLASSIFICATION	0.001247125098994542	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9987528749010054	WITHOUT_CLASSIFICATION	0.001247125098994542	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999625756175641	WITHOUT_CLASSIFICATION	3.7424382435984E-5	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9963135301007477	WITHOUT_CLASSIFICATION	0.0036864698992523644	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999787190493516	WITHOUT_CLASSIFICATION	2.1280950648424167E-5	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9995965735055772	WITHOUT_CLASSIFICATION	4.0342649442284877E-4	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999976706809721	WITHOUT_CLASSIFICATION	2.329319027898639E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9998882538946143	WITHOUT_CLASSIFICATION	1.1174610538555752E-4	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.999934929842655	WITHOUT_CLASSIFICATION	6.507015734498907E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9989904525574147	WITHOUT_CLASSIFICATION	0.001009547442585336	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9974011026236793	WITHOUT_CLASSIFICATION	0.0025988973763207157	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999898941501169	WITHOUT_CLASSIFICATION	1.0105849883096698E-4	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9998980542078563	WITHOUT_CLASSIFICATION	1.0194579214373483E-4	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9987476579231414	WITHOUT_CLASSIFICATION	0.0012523420768587108	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9995038089830007	WITHOUT_CLASSIFICATION	4.96191016999213E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999786246374629	WITHOUT_CLASSIFICATION	2.1375362537108313E-5	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9998972119541105	WITHOUT_CLASSIFICATION	1.027880458894322E-4	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9997521373721366	WITHOUT_CLASSIFICATION	2.478626278633805E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999038690470154	WITHOUT_CLASSIFICATION	9.613095298457583E-5	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9998612853470673	WITHOUT_CLASSIFICATION	1.3871465293263462E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.99991030251674	WITHOUT_CLASSIFICATION	8.969748326008368E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998550611108014	WITHOUT_CLASSIFICATION	1.4493888919870696E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9997711367026126	WITHOUT_CLASSIFICATION	2.288632973873808E-4	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9998884054266785	WITHOUT_CLASSIFICATION	1.1159457332164179E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999159819444892	WITHOUT_CLASSIFICATION	8.401805551076029E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9989123816404292	WITHOUT_CLASSIFICATION	0.0010876183595708625	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9998761367678077	WITHOUT_CLASSIFICATION	1.2386323219225494E-4	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999531808703447	WITHOUT_CLASSIFICATION	4.681912965537299E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999347198440786	WITHOUT_CLASSIFICATION	6.528015592136452E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9991699273005911	WITHOUT_CLASSIFICATION	8.300726994089527E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9841073460139412	WITHOUT_CLASSIFICATION	0.015892653986058807	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9989121866154101	WITHOUT_CLASSIFICATION	0.0010878133845898697	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.999937891738556	WITHOUT_CLASSIFICATION	6.210826144394648E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9986935876253427	WITHOUT_CLASSIFICATION	0.0013064123746573454	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999965257287696	WITHOUT_CLASSIFICATION	3.4742712303165603E-6	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9994651178793548	WITHOUT_CLASSIFICATION	5.348821206453291E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9989582459796057	WITHOUT_CLASSIFICATION	0.0010417540203943281	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999561130398862	WITHOUT_CLASSIFICATION	4.388696011377682E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999735195326284	WITHOUT_CLASSIFICATION	2.6480467371610526E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9998471163800055	WITHOUT_CLASSIFICATION	1.5288361999454177E-4	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9998412211349136	WITHOUT_CLASSIFICATION	1.5877886508641704E-4	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9998912648035909	WITHOUT_CLASSIFICATION	1.0873519640916344E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9769097557375197	WITHOUT_CLASSIFICATION	0.02309024426248027	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9998747940681502	WITHOUT_CLASSIFICATION	1.2520593184982585E-4	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9998800035527132	WITHOUT_CLASSIFICATION	1.199964472867386E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.8940829722104485	WITHOUT_CLASSIFICATION	0.10591702778955153	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9992009406974613	WITHOUT_CLASSIFICATION	7.990593025387394E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9982764640552536	WITHOUT_CLASSIFICATION	0.00172353594474637	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9913993656003179	WITHOUT_CLASSIFICATION	0.008600634399682004	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.999711873956486	WITHOUT_CLASSIFICATION	2.881260435140083E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9983607256974972	WITHOUT_CLASSIFICATION	0.001639274302502765	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999909254038806	WITHOUT_CLASSIFICATION	9.074596119406E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999957670665038	WITHOUT_CLASSIFICATION	4.232933496106751E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999352793866074	WITHOUT_CLASSIFICATION	6.472061339261492E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9998793435144213	WITHOUT_CLASSIFICATION	1.2065648557870956E-4	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9998339110620569	WITHOUT_CLASSIFICATION	1.6608893794316048E-4	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999860565464811	WITHOUT_CLASSIFICATION	1.3943453518827786E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9996005617412513	WITHOUT_CLASSIFICATION	3.994382587486326E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999506941376991	WITHOUT_CLASSIFICATION	4.930586230083308E-5	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999952306873745	WITHOUT_CLASSIFICATION	4.7693126254923665E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999800995970255	WITHOUT_CLASSIFICATION	1.9900402974487637E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9997986791172216	WITHOUT_CLASSIFICATION	2.0132088277846272E-4	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.999952496469808	WITHOUT_CLASSIFICATION	4.750353019195018E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9997714531947477	WITHOUT_CLASSIFICATION	2.2854680525233483E-4	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.999938783467704	WITHOUT_CLASSIFICATION	6.121653229600097E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999686583640052	WITHOUT_CLASSIFICATION	3.134163599478041E-5	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999773712078397	WITHOUT_CLASSIFICATION	2.2628792160345323E-5	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999629603622984	WITHOUT_CLASSIFICATION	3.703963770165548E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9998349716762487	WITHOUT_CLASSIFICATION	1.6502832375134147E-4	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9996018317240144	WITHOUT_CLASSIFICATION	3.981682759856186E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9996018317240144	WITHOUT_CLASSIFICATION	3.981682759856186E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9996526036870345	WITHOUT_CLASSIFICATION	3.47396312965569E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9811791147474401	WITHOUT_CLASSIFICATION	0.01882088525255993	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9998035367916276	WITHOUT_CLASSIFICATION	1.9646320837244576E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9998743355963776	WITHOUT_CLASSIFICATION	1.2566440362243376E-4	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.999932146122593	WITHOUT_CLASSIFICATION	6.785387740704303E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.999932984435482	WITHOUT_CLASSIFICATION	6.701556451807395E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998445427170749	WITHOUT_CLASSIFICATION	1.554572829251191E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9998875767264233	WITHOUT_CLASSIFICATION	1.1242327357664757E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9998875767264233	WITHOUT_CLASSIFICATION	1.1242327357664757E-4	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9998626844771058	WITHOUT_CLASSIFICATION	1.3731552289408263E-4	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999200738466255	WITHOUT_CLASSIFICATION	7.992615337442756E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9998338929780759	WITHOUT_CLASSIFICATION	1.6610702192411286E-4	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9998924644506316	WITHOUT_CLASSIFICATION	1.07535549368344E-4	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9995175082845603	WITHOUT_CLASSIFICATION	4.824917154397834E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999589884112311	WITHOUT_CLASSIFICATION	4.101158876886222E-5	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9996574827554112	WITHOUT_CLASSIFICATION	3.425172445888579E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999871598643628	WITHOUT_CLASSIFICATION	1.2840135637262604E-5	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999203954029052	WITHOUT_CLASSIFICATION	7.960459709480054E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999781830834188	WITHOUT_CLASSIFICATION	2.1816916581164736E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9997769443076344	WITHOUT_CLASSIFICATION	2.230556923655713E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9998732624986009	WITHOUT_CLASSIFICATION	1.267375013991469E-4	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9992193615300002	WITHOUT_CLASSIFICATION	7.806384699998309E-4	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999406606572727	WITHOUT_CLASSIFICATION	5.933934272732905E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.998271337179577	WITHOUT_CLASSIFICATION	0.00172866282042315	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9997080525984986	WITHOUT_CLASSIFICATION	2.91947401501474E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999759679740597	WITHOUT_CLASSIFICATION	2.403202594028453E-5	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999817832735935	WITHOUT_CLASSIFICATION	1.8216726406456165E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9995638459682356	WITHOUT_CLASSIFICATION	4.3615403176448174E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9997886098252705	WITHOUT_CLASSIFICATION	2.1139017472953688E-4	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9997817983412537	WITHOUT_CLASSIFICATION	2.1820165874633245E-4	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9997761280925909	WITHOUT_CLASSIFICATION	2.238719074090786E-4	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999916036388685	WITHOUT_CLASSIFICATION	8.39636113146291E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999610471866631	WITHOUT_CLASSIFICATION	3.895281333688615E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.99974265826014	WITHOUT_CLASSIFICATION	2.5734173986002374E-4	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9992250937362201	WITHOUT_CLASSIFICATION	7.74906263779935E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999838579361322	WITHOUT_CLASSIFICATION	1.6142063867829776E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9974054003249561	WITHOUT_CLASSIFICATION	0.0025945996750438936	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9998644445234219	WITHOUT_CLASSIFICATION	1.3555547657805302E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999953343065092	WITHOUT_CLASSIFICATION	4.665693490815676E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999503615803371	WITHOUT_CLASSIFICATION	4.963841966292452E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9997283046777935	WITHOUT_CLASSIFICATION	2.71695322206521E-4	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9988936517128412	WITHOUT_CLASSIFICATION	0.0011063482871588874	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9997354043628491	WITHOUT_CLASSIFICATION	2.6459563715081503E-4	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9998861843158151	WITHOUT_CLASSIFICATION	1.1381568418491224E-4	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9997354199497245	WITHOUT_CLASSIFICATION	2.6458005027561146E-4	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999410187783099	WITHOUT_CLASSIFICATION	5.89812216900041E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999108174126509	WITHOUT_CLASSIFICATION	8.918258734907576E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.999984032975644	WITHOUT_CLASSIFICATION	1.5967024356014735E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9938466212603528	WITHOUT_CLASSIFICATION	0.006153378739647166	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9995730527153023	WITHOUT_CLASSIFICATION	4.26947284697755E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9994975864582697	WITHOUT_CLASSIFICATION	5.024135417303543E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9996570917429478	WITHOUT_CLASSIFICATION	3.42908257052151E-4	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9995350256695117	WITHOUT_CLASSIFICATION	4.649743304882785E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999078091148946	WITHOUT_CLASSIFICATION	9.219088510529091E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9994904104496846	WITHOUT_CLASSIFICATION	5.095895503154832E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996802840849519	WITHOUT_CLASSIFICATION	3.197159150481315E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996802840849519	WITHOUT_CLASSIFICATION	3.197159150481315E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996565335286176	WITHOUT_CLASSIFICATION	3.4346647138238805E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9996565335286176	WITHOUT_CLASSIFICATION	3.4346647138238805E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999296910523601	WITHOUT_CLASSIFICATION	7.030894763994387E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999580993052625	WITHOUT_CLASSIFICATION	4.190069473750313E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996867490075863	WITHOUT_CLASSIFICATION	3.1325099241372303E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996867490075863	WITHOUT_CLASSIFICATION	3.1325099241372303E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999506349181786	WITHOUT_CLASSIFICATION	4.936508182138055E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999509234184686	WITHOUT_CLASSIFICATION	4.907658153132157E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9947840538160962	WITHOUT_CLASSIFICATION	0.005215946183903778	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999154722766675	WITHOUT_CLASSIFICATION	8.452772333241482E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9992212690798019	WITHOUT_CLASSIFICATION	7.787309201979701E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9931311970417628	WITHOUT_CLASSIFICATION	0.006868802958237149	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9998531676060356	WITHOUT_CLASSIFICATION	1.4683239396445167E-4	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999916942921248	WITHOUT_CLASSIFICATION	8.305707875237654E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999002926437456	WITHOUT_CLASSIFICATION	9.97073562544562E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9875365529179878	WITHOUT_CLASSIFICATION	0.012463447082012118	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9997038648399481	WITHOUT_CLASSIFICATION	2.9613516005199645E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9998244599650652	WITHOUT_CLASSIFICATION	1.755400349347656E-4	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999098380407827	WITHOUT_CLASSIFICATION	9.016195921725809E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9996608348845093	WITHOUT_CLASSIFICATION	3.3916511549061376E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9998782006801111	WITHOUT_CLASSIFICATION	1.217993198889245E-4	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9996810071917334	WITHOUT_CLASSIFICATION	3.1899280826666853E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999768788729515	WITHOUT_CLASSIFICATION	2.3121127048461345E-5	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9996641702527245	WITHOUT_CLASSIFICATION	3.3582974727551127E-4	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998561084305764	WITHOUT_CLASSIFICATION	1.438915694236295E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9998950769345422	WITHOUT_CLASSIFICATION	1.0492306545780943E-4	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999953393752189	WITHOUT_CLASSIFICATION	4.660624781095531E-6	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999902206626686	WITHOUT_CLASSIFICATION	9.779337331392244E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999948928228476	WITHOUT_CLASSIFICATION	5.107177152383592E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998309635137895	WITHOUT_CLASSIFICATION	1.6903648621042076E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9998292622067587	WITHOUT_CLASSIFICATION	1.7073779324130686E-4	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9998670550774359	WITHOUT_CLASSIFICATION	1.329449225640234E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998364488162154	WITHOUT_CLASSIFICATION	1.635511837845946E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9993121613429149	WITHOUT_CLASSIFICATION	6.878386570852033E-4	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9989925132272438	WITHOUT_CLASSIFICATION	0.0010074867727561771	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.999961676674167	WITHOUT_CLASSIFICATION	3.832332583306531E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.8209490648334955	WITHOUT_CLASSIFICATION	0.17905093516650453	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9997394854163211	WITHOUT_CLASSIFICATION	2.605145836789265E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.999924330060218	WITHOUT_CLASSIFICATION	7.566993978200178E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999450158987642	WITHOUT_CLASSIFICATION	5.4984101235711485E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999072013314318	WITHOUT_CLASSIFICATION	9.279866856824549E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9997575231655423	WITHOUT_CLASSIFICATION	2.4247683445750612E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9987562819813041	WITHOUT_CLASSIFICATION	0.0012437180186959274	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999867943315686	WITHOUT_CLASSIFICATION	1.3205668431501711E-5	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9998609171056447	WITHOUT_CLASSIFICATION	1.3908289435523097E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999573900700303	WITHOUT_CLASSIFICATION	4.260992996983286E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999571731138116	WITHOUT_CLASSIFICATION	4.282688618833799E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9997780893297012	WITHOUT_CLASSIFICATION	2.2191067029867534E-4	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999110436382831	WITHOUT_CLASSIFICATION	8.895636171696714E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999551153186024	WITHOUT_CLASSIFICATION	4.488468139758537E-5	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999806723268678	WITHOUT_CLASSIFICATION	1.9327673132131984E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999215417389186	WITHOUT_CLASSIFICATION	7.845826108148214E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999659713403092	WITHOUT_CLASSIFICATION	3.4028659690866624E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999100535684379	WITHOUT_CLASSIFICATION	8.99464315621904E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9973186827965629	WITHOUT_CLASSIFICATION	0.0026813172034371724	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.999388659778834	WITHOUT_CLASSIFICATION	6.11340221166041E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999741848698098	WITHOUT_CLASSIFICATION	2.5815130190086335E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.999914538865014	WITHOUT_CLASSIFICATION	8.54611349860385E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9993983572654412	WITHOUT_CLASSIFICATION	6.01642734558854E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9995573799531164	WITHOUT_CLASSIFICATION	4.4262004688354356E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999291390158224	WITHOUT_CLASSIFICATION	7.08609841775798E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9997943872647361	WITHOUT_CLASSIFICATION	2.05612735263966E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999118038353596	WITHOUT_CLASSIFICATION	8.819616464028431E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999203960949911	WITHOUT_CLASSIFICATION	7.960390500896628E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9997938850847543	WITHOUT_CLASSIFICATION	2.0611491524566216E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9997418927991468	WITHOUT_CLASSIFICATION	2.5810720085323887E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999794403833606	WITHOUT_CLASSIFICATION	2.0559616639449654E-5	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9995845797194587	WITHOUT_CLASSIFICATION	4.1542028054137616E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9997418927991468	WITHOUT_CLASSIFICATION	2.5810720085323887E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999652297619993	WITHOUT_CLASSIFICATION	3.477023800061039E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9997418927991468	WITHOUT_CLASSIFICATION	2.5810720085323887E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999271884149012	WITHOUT_CLASSIFICATION	7.281158509870816E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999970431939968	WITHOUT_CLASSIFICATION	2.956806003149274E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9994250418426813	WITHOUT_CLASSIFICATION	5.749581573187282E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999564337912732	WITHOUT_CLASSIFICATION	4.356620872669099E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9990700893755017	WITHOUT_CLASSIFICATION	9.299106244982471E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9995332033377622	WITHOUT_CLASSIFICATION	4.667966622377122E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9936749779883034	WITHOUT_CLASSIFICATION	0.006325022011696547	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999737422379583	WITHOUT_CLASSIFICATION	2.6257762041684535E-5	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999755858930226	WITHOUT_CLASSIFICATION	2.4414106977389424E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999575049578522	WITHOUT_CLASSIFICATION	4.2495042147938974E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999057532224128	WITHOUT_CLASSIFICATION	9.424677758718795E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999178217135613	WITHOUT_CLASSIFICATION	8.217828643877144E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999828290642337	WITHOUT_CLASSIFICATION	1.7170935766211538E-5	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999135568953769	WITHOUT_CLASSIFICATION	8.644310462307622E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999080707852078	WITHOUT_CLASSIFICATION	9.192921479218353E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999069855261449	WITHOUT_CLASSIFICATION	9.301447385514046E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.99964864179384	WITHOUT_CLASSIFICATION	3.5135820615986286E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999286017271786	WITHOUT_CLASSIFICATION	7.139827282149963E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9970874936996917	WITHOUT_CLASSIFICATION	0.0029125063003081664	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9966714954949062	WITHOUT_CLASSIFICATION	0.0033285045050938174	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999922121301906	WITHOUT_CLASSIFICATION	7.787869809323778E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9998959721126695	WITHOUT_CLASSIFICATION	1.0402788733055384E-4	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.999794925482496	WITHOUT_CLASSIFICATION	2.0507451750391163E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999494052092329	WITHOUT_CLASSIFICATION	5.059479076718552E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9997448062825228	WITHOUT_CLASSIFICATION	2.5519371747710737E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999069924382706	WITHOUT_CLASSIFICATION	9.300756172940869E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9971599134938331	WITHOUT_CLASSIFICATION	0.0028400865061668414	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9997728056682748	WITHOUT_CLASSIFICATION	2.271943317252621E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9993045300461826	WITHOUT_CLASSIFICATION	6.954699538175149E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9998488157071431	WITHOUT_CLASSIFICATION	1.511842928568932E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999285465966896	WITHOUT_CLASSIFICATION	7.145340331037969E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999537116076209	WITHOUT_CLASSIFICATION	4.628839237902855E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999477971584172	WITHOUT_CLASSIFICATION	5.220284158285957E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.999972418509842	WITHOUT_CLASSIFICATION	2.7581490158100214E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999570548773518	WITHOUT_CLASSIFICATION	4.294512264820604E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999434236317796	WITHOUT_CLASSIFICATION	5.657636822044235E-5	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9998279540925311	WITHOUT_CLASSIFICATION	1.7204590746886485E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9997380862327865	WITHOUT_CLASSIFICATION	2.6191376721347814E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9998360796551669	WITHOUT_CLASSIFICATION	1.639203448332076E-4	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9993663836084314	WITHOUT_CLASSIFICATION	6.33616391568574E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9995075473987178	WITHOUT_CLASSIFICATION	4.924526012822146E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999668090082903	WITHOUT_CLASSIFICATION	3.3190991709735686E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999427684722028	WITHOUT_CLASSIFICATION	5.7231527797122754E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.999722435632216	WITHOUT_CLASSIFICATION	2.7756436778403847E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9996352544280762	WITHOUT_CLASSIFICATION	3.6474557192377226E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999781378708179	WITHOUT_CLASSIFICATION	2.186212918216059E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999766243625385	WITHOUT_CLASSIFICATION	2.3375637461547787E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9997771570280224	WITHOUT_CLASSIFICATION	2.22842971977743E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9998675891465998	WITHOUT_CLASSIFICATION	1.3241085340012608E-4	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9997709802020016	WITHOUT_CLASSIFICATION	2.2901979799840698E-4	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9998960279615402	WITHOUT_CLASSIFICATION	1.0397203845978427E-4	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999309238397167	WITHOUT_CLASSIFICATION	6.907616028338462E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9997068888421703	WITHOUT_CLASSIFICATION	2.931111578297164E-4	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999140825228988	WITHOUT_CLASSIFICATION	8.591747710119481E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999367758785361	WITHOUT_CLASSIFICATION	6.32241214638827E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.999752614169013	WITHOUT_CLASSIFICATION	2.473858309870419E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9997724891471595	WITHOUT_CLASSIFICATION	2.2751085284030448E-4	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9997665068735335	WITHOUT_CLASSIFICATION	2.3349312646648557E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9998671573599516	WITHOUT_CLASSIFICATION	1.32842640048387E-4	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999053402186462	WITHOUT_CLASSIFICATION	9.465978135388576E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9998373489379134	WITHOUT_CLASSIFICATION	1.6265106208660011E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9997374308463816	WITHOUT_CLASSIFICATION	2.625691536183864E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9998981655047934	WITHOUT_CLASSIFICATION	1.018344952065882E-4	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999162020348462	WITHOUT_CLASSIFICATION	8.37979651537849E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999212333517861	WITHOUT_CLASSIFICATION	7.876664821382859E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9997223933070751	WITHOUT_CLASSIFICATION	2.7760669292487873E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9995362230530837	WITHOUT_CLASSIFICATION	4.6377694691632687E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9998671573599516	WITHOUT_CLASSIFICATION	1.32842640048387E-4	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999457169966239	WITHOUT_CLASSIFICATION	5.4283003376063415E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999370746298986	WITHOUT_CLASSIFICATION	6.292537010152161E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999468117173977	WITHOUT_CLASSIFICATION	5.3188282602193274E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9930806689989109	WITHOUT_CLASSIFICATION	0.006919331001089071	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999689156683972	WITHOUT_CLASSIFICATION	3.108433160281057E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.969880430039152	WITHOUT_CLASSIFICATION	0.030119569960847956	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999229159083363	WITHOUT_CLASSIFICATION	7.708409166380236E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999229159083363	WITHOUT_CLASSIFICATION	7.708409166380236E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9968891630474057	WITHOUT_CLASSIFICATION	0.0031108369525942796	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9968891630474057	WITHOUT_CLASSIFICATION	0.0031108369525942796	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9846117411340672	WITHOUT_CLASSIFICATION	0.015388258865932841	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9992809593399856	WITHOUT_CLASSIFICATION	7.190406600144171E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9910559326283607	WITHOUT_CLASSIFICATION	0.008944067371639336	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9991809651151978	WITHOUT_CLASSIFICATION	8.190348848022029E-4	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9998489198027343	WITHOUT_CLASSIFICATION	1.5108019726581333E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9998064512725814	WITHOUT_CLASSIFICATION	1.935487274185617E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999826419965929	WITHOUT_CLASSIFICATION	1.7358003407005325E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9995797698831537	WITHOUT_CLASSIFICATION	4.202301168462598E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9997100752284606	WITHOUT_CLASSIFICATION	2.8992477153940306E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9997676209987113	WITHOUT_CLASSIFICATION	2.3237900128872797E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9997716642331446	WITHOUT_CLASSIFICATION	2.2833576685549978E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9996489195929097	WITHOUT_CLASSIFICATION	3.510804070904078E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9996489195929097	WITHOUT_CLASSIFICATION	3.510804070904078E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9910559326283607	WITHOUT_CLASSIFICATION	0.008944067371639336	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9997676209987113	WITHOUT_CLASSIFICATION	2.3237900128872797E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9600933702423196	WITHOUT_CLASSIFICATION	0.0399066297576805	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9992809593399856	WITHOUT_CLASSIFICATION	7.190406600144171E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999921560641433	WITHOUT_CLASSIFICATION	7.84393585666202E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9993601350354564	WITHOUT_CLASSIFICATION	6.398649645437023E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999191409392624	WITHOUT_CLASSIFICATION	8.08590607375805E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999191409392624	WITHOUT_CLASSIFICATION	8.08590607375805E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999437655957721	WITHOUT_CLASSIFICATION	5.6234404227930355E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.99999564665617	WITHOUT_CLASSIFICATION	4.353343829921795E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999229724667962	WITHOUT_CLASSIFICATION	7.702753320387974E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9992880075893554	WITHOUT_CLASSIFICATION	7.119924106445809E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.998747300215281	WITHOUT_CLASSIFICATION	0.001252699784718992	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9998952654978078	WITHOUT_CLASSIFICATION	1.047345021921358E-4	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9997114173734413	WITHOUT_CLASSIFICATION	2.8858262655879433E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9993260020496416	WITHOUT_CLASSIFICATION	6.73997950358279E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9998966339390738	WITHOUT_CLASSIFICATION	1.0336606092616015E-4	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999030943874879	WITHOUT_CLASSIFICATION	9.690561251210823E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9997531541296029	WITHOUT_CLASSIFICATION	2.4684587039712486E-4	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9998434054918682	WITHOUT_CLASSIFICATION	1.5659450813179686E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.999290833780909	WITHOUT_CLASSIFICATION	7.091662190910767E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999450659277339	WITHOUT_CLASSIFICATION	5.493407226609054E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.999907008430603	WITHOUT_CLASSIFICATION	9.299156939709216E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9998857712692004	WITHOUT_CLASSIFICATION	1.142287307995431E-4	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9994909609482057	WITHOUT_CLASSIFICATION	5.090390517943998E-4	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.992699188080988	WITHOUT_CLASSIFICATION	0.007300811919011905	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9998436350984246	WITHOUT_CLASSIFICATION	1.5636490157545414E-4	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9997815835945187	WITHOUT_CLASSIFICATION	2.1841640548128993E-4	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9998863429830827	WITHOUT_CLASSIFICATION	1.1365701691726117E-4	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999068724269544	WITHOUT_CLASSIFICATION	9.312757304561892E-5	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999117247843866	WITHOUT_CLASSIFICATION	8.827521561331425E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.999947968797118	WITHOUT_CLASSIFICATION	5.203120288207129E-5	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984186244118	WITHOUT_CLASSIFICATION	1.581375588201855E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999618050142826	WITHOUT_CLASSIFICATION	3.819498571751701E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999540000842881	WITHOUT_CLASSIFICATION	4.5999915711906256E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999723829246254	WITHOUT_CLASSIFICATION	2.7617075374594175E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999966449524786	WITHOUT_CLASSIFICATION	3.3550475213984214E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999363925352504	WITHOUT_CLASSIFICATION	6.36074647496078E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9995536387621915	WITHOUT_CLASSIFICATION	4.463612378084239E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999397257511848	WITHOUT_CLASSIFICATION	6.02742488151311E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999523296945733	WITHOUT_CLASSIFICATION	4.76703054266635E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887952780385	WITHOUT_CLASSIFICATION	1.120472196138677E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9992635427683814	WITHOUT_CLASSIFICATION	7.364572316185732E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999714692813348	WITHOUT_CLASSIFICATION	2.8530718665194195E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999979554612689	WITHOUT_CLASSIFICATION	2.044538731108209E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999950464235014	WITHOUT_CLASSIFICATION	4.9535764986080916E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999853899590893	WITHOUT_CLASSIFICATION	1.461004091086061E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999183965091192	WITHOUT_CLASSIFICATION	8.160349088087966E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999540000842881	WITHOUT_CLASSIFICATION	4.5999915711906256E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999723829246254	WITHOUT_CLASSIFICATION	2.7617075374594175E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999966449524786	WITHOUT_CLASSIFICATION	3.3550475213984214E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999901649100712	WITHOUT_CLASSIFICATION	9.835089928752326E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999974076815196	WITHOUT_CLASSIFICATION	2.5923184804029144E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999480627355622	WITHOUT_CLASSIFICATION	5.1937264437757506E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999586253704454	WITHOUT_CLASSIFICATION	4.137462955450458E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9980432671012281	WITHOUT_CLASSIFICATION	0.001956732898771896	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9987399506032539	WITHOUT_CLASSIFICATION	0.0012600493967460818	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9995005471463487	WITHOUT_CLASSIFICATION	4.994528536512798E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999978834953517	WITHOUT_CLASSIFICATION	2.1165046482399834E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9997220052225402	WITHOUT_CLASSIFICATION	2.779947774597499E-4	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999256706765738	WITHOUT_CLASSIFICATION	7.432932342623648E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998604834914684	WITHOUT_CLASSIFICATION	1.3951650853164617E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999952673846142	WITHOUT_CLASSIFICATION	4.732615385797139E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999332897609756	WITHOUT_CLASSIFICATION	6.67102390244636E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999618050142826	WITHOUT_CLASSIFICATION	3.819498571751701E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999397257511848	WITHOUT_CLASSIFICATION	6.02742488151311E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999523296945733	WITHOUT_CLASSIFICATION	4.76703054266635E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999887952780385	WITHOUT_CLASSIFICATION	1.120472196138677E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999974076815196	WITHOUT_CLASSIFICATION	2.5923184804029144E-6	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999480627355622	WITHOUT_CLASSIFICATION	5.1937264437757506E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999586253704454	WITHOUT_CLASSIFICATION	4.137462955450458E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9980432671012281	WITHOUT_CLASSIFICATION	0.001956732898771896	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9987399506032539	WITHOUT_CLASSIFICATION	0.0012600493967460818	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999854242859381	WITHOUT_CLASSIFICATION	1.4575714061797842E-5	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9994860896526261	WITHOUT_CLASSIFICATION	5.139103473739502E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999741057169783	WITHOUT_CLASSIFICATION	2.589428302171795E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9992687856902294	WITHOUT_CLASSIFICATION	7.312143097705757E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9992687856902294	WITHOUT_CLASSIFICATION	7.312143097705757E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9992687856902294	WITHOUT_CLASSIFICATION	7.312143097705757E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9992687856902294	WITHOUT_CLASSIFICATION	7.312143097705757E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9992687856902294	WITHOUT_CLASSIFICATION	7.312143097705757E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9993304269692757	WITHOUT_CLASSIFICATION	6.695730307242784E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999907066991297	WITHOUT_CLASSIFICATION	9.293300870284733E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.999899747554761	WITHOUT_CLASSIFICATION	1.0025244523897533E-4	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9917603490788874	WITHOUT_CLASSIFICATION	0.0082396509211125	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999444938077792	WITHOUT_CLASSIFICATION	5.550619222093153E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9998815134529885	WITHOUT_CLASSIFICATION	1.1848654701147003E-4	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999706348667347	WITHOUT_CLASSIFICATION	2.936513326545196E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9998609473252368	WITHOUT_CLASSIFICATION	1.3905267476326831E-4	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.999532892424484	WITHOUT_CLASSIFICATION	4.6710757551609206E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996802840849519	WITHOUT_CLASSIFICATION	3.197159150481315E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996802840849519	WITHOUT_CLASSIFICATION	3.197159150481315E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996802840849519	WITHOUT_CLASSIFICATION	3.197159150481315E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999117403732058	WITHOUT_CLASSIFICATION	8.82596267942087E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9986166330100311	WITHOUT_CLASSIFICATION	0.0013833669899688792	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9998703292018034	WITHOUT_CLASSIFICATION	1.2967079819658982E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998506617264967	WITHOUT_CLASSIFICATION	1.493382735031969E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998506617264967	WITHOUT_CLASSIFICATION	1.493382735031969E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999065886040636	WITHOUT_CLASSIFICATION	9.341139593642545E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998506617264967	WITHOUT_CLASSIFICATION	1.493382735031969E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9996820640758634	WITHOUT_CLASSIFICATION	3.1793592413670015E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9997152860883358	WITHOUT_CLASSIFICATION	2.8471391166414557E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999661928899655	WITHOUT_CLASSIFICATION	3.380711003448652E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9998287097558953	WITHOUT_CLASSIFICATION	1.7129024410462908E-4	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9998287097558953	WITHOUT_CLASSIFICATION	1.7129024410462908E-4	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9982837657054225	WITHOUT_CLASSIFICATION	0.0017162342945775564	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9998345657582792	WITHOUT_CLASSIFICATION	1.6543424172068535E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9879088223472529	WITHOUT_CLASSIFICATION	0.012091177652747071	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.867505964575295	WITHOUT_CLASSIFICATION	0.1324940354247049	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999603648714984	WITHOUT_CLASSIFICATION	3.9635128501604766E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999602625056103	WITHOUT_CLASSIFICATION	3.973749438979205E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9995743275099486	WITHOUT_CLASSIFICATION	4.25672490051482E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9998877501397807	WITHOUT_CLASSIFICATION	1.1224986021933359E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998385806763952	WITHOUT_CLASSIFICATION	1.6141932360485745E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999714402882472	WITHOUT_CLASSIFICATION	2.8559711752794115E-5	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997163728993461	WITHOUT_CLASSIFICATION	2.8362710065393793E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9985510101786178	WITHOUT_CLASSIFICATION	0.0014489898213820892	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997163728993461	WITHOUT_CLASSIFICATION	2.8362710065393793E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999301087115227	WITHOUT_CLASSIFICATION	6.98912884773005E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999093371048208	WITHOUT_CLASSIFICATION	9.066289517921196E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999413115180341	WITHOUT_CLASSIFICATION	5.868848196573386E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9956861912914278	WITHOUT_CLASSIFICATION	0.0043138087085723194	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9956861912914278	WITHOUT_CLASSIFICATION	0.0043138087085723194	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9941660418457824	WITHOUT_CLASSIFICATION	0.005833958154217514	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999806795824655	WITHOUT_CLASSIFICATION	1.9320417534421268E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999685412579759	WITHOUT_CLASSIFICATION	3.145874202413746E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998931659215	WITHOUT_CLASSIFICATION	1.0683407853933463E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997779954647	WITHOUT_CLASSIFICATION	2.2200453525169099E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999805007255375	WITHOUT_CLASSIFICATION	1.949927446243879E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997779954647	WITHOUT_CLASSIFICATION	2.2200453525169099E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999805906944298	WITHOUT_CLASSIFICATION	1.9409305570218146E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999805906944298	WITHOUT_CLASSIFICATION	1.9409305570218146E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999805906944298	WITHOUT_CLASSIFICATION	1.9409305570218146E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999805906944298	WITHOUT_CLASSIFICATION	1.9409305570218146E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999806795824655	WITHOUT_CLASSIFICATION	1.9320417534421268E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999805906944298	WITHOUT_CLASSIFICATION	1.9409305570218146E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9998264119279567	WITHOUT_CLASSIFICATION	1.7358807204330347E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9998264119279567	WITHOUT_CLASSIFICATION	1.7358807204330347E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998931659215	WITHOUT_CLASSIFICATION	1.0683407853933463E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997779954647	WITHOUT_CLASSIFICATION	2.2200453525169099E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999805007255375	WITHOUT_CLASSIFICATION	1.949927446243879E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997779954647	WITHOUT_CLASSIFICATION	2.2200453525169099E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998679405523	WITHOUT_CLASSIFICATION	1.3205944769650994E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998931659215	WITHOUT_CLASSIFICATION	1.0683407853933463E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999806795824655	WITHOUT_CLASSIFICATION	1.9320417534421268E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999807839619226	WITHOUT_CLASSIFICATION	1.9216038077437996E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999804396577534	WITHOUT_CLASSIFICATION	1.9560342246577753E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.999982904941452	WITHOUT_CLASSIFICATION	1.7095058547965675E-5	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9998781343744372	WITHOUT_CLASSIFICATION	1.2186562556280779E-4	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999315258041492	WITHOUT_CLASSIFICATION	6.847419585083474E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9998666829546404	WITHOUT_CLASSIFICATION	1.333170453595334E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.99997005773764	WITHOUT_CLASSIFICATION	2.994226235994848E-5	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9998650444934869	WITHOUT_CLASSIFICATION	1.3495550651320158E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9998747940681502	WITHOUT_CLASSIFICATION	1.2520593184982585E-4	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9993945067562409	WITHOUT_CLASSIFICATION	6.054932437592631E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9341299604635179	WITHOUT_CLASSIFICATION	0.06587003953648202	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999120931985133	WITHOUT_CLASSIFICATION	8.790680148677526E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999928631406562	WITHOUT_CLASSIFICATION	7.136859343928204E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9994430242472386	WITHOUT_CLASSIFICATION	5.569757527614137E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999600494475106	WITHOUT_CLASSIFICATION	3.9950552489355774E-5	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9998782320579426	WITHOUT_CLASSIFICATION	1.2176794205748244E-4	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9994997653546823	WITHOUT_CLASSIFICATION	5.002346453176509E-4	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9993880146896699	WITHOUT_CLASSIFICATION	6.119853103301501E-4	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.999936712424461	WITHOUT_CLASSIFICATION	6.328757553896045E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998923734119	WITHOUT_CLASSIFICATION	1.0762658814797935E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998923734119	WITHOUT_CLASSIFICATION	1.0762658814797935E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998923734119	WITHOUT_CLASSIFICATION	1.0762658814797935E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9997761280925909	WITHOUT_CLASSIFICATION	2.238719074090786E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998923734119	WITHOUT_CLASSIFICATION	1.0762658814797935E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9987195595363333	WITHOUT_CLASSIFICATION	0.001280440463666654	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999718487875665	WITHOUT_CLASSIFICATION	2.8151212433465172E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9769310827809428	WITHOUT_CLASSIFICATION	0.023068917219057287	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998649833075474	WITHOUT_CLASSIFICATION	1.3501669245261102E-4	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999075439210632	WITHOUT_CLASSIFICATION	9.24560789369212E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998287021509864	WITHOUT_CLASSIFICATION	1.7129784901356637E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998364488162154	WITHOUT_CLASSIFICATION	1.635511837845946E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999561584966117	WITHOUT_CLASSIFICATION	4.384150338837387E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999524508149628	WITHOUT_CLASSIFICATION	4.754918503717741E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999473440408685	WITHOUT_CLASSIFICATION	5.2655959131620294E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999045083919691	WITHOUT_CLASSIFICATION	9.549160803089936E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9975268221397584	WITHOUT_CLASSIFICATION	0.002473177860241506	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999072013314318	WITHOUT_CLASSIFICATION	9.279866856824549E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999076273404377	WITHOUT_CLASSIFICATION	9.237265956237287E-5	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999464051271788	WITHOUT_CLASSIFICATION	5.359487282115042E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.999947657877778	WITHOUT_CLASSIFICATION	5.2342122222127616E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9998473012143121	WITHOUT_CLASSIFICATION	1.526987856880189E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9997129031928563	WITHOUT_CLASSIFICATION	2.8709680714369143E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999763921174912	WITHOUT_CLASSIFICATION	2.3607882508686137E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9990078435908684	WITHOUT_CLASSIFICATION	9.921564091315523E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999178390225317	WITHOUT_CLASSIFICATION	8.216097746823791E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999783308123544	WITHOUT_CLASSIFICATION	2.1669187645564094E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9997614489766765	WITHOUT_CLASSIFICATION	2.3855102332343554E-4	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9998488985657443	WITHOUT_CLASSIFICATION	1.5110143425560495E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9998575029256711	WITHOUT_CLASSIFICATION	1.4249707432877675E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9998575029256711	WITHOUT_CLASSIFICATION	1.4249707432877675E-4	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999698119207324	WITHOUT_CLASSIFICATION	3.018807926760341E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9990307074999666	WITHOUT_CLASSIFICATION	9.692925000334178E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9998622013148097	WITHOUT_CLASSIFICATION	1.377986851902864E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9996795952855227	WITHOUT_CLASSIFICATION	3.204047144772185E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9993225266335888	WITHOUT_CLASSIFICATION	6.774733664112794E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9993225266335888	WITHOUT_CLASSIFICATION	6.774733664112794E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999368296756967	WITHOUT_CLASSIFICATION	6.317032430318448E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.999873628023713	WITHOUT_CLASSIFICATION	1.2637197628691415E-4	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9977326664416235	WITHOUT_CLASSIFICATION	0.002267333558376479	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999111322096921	WITHOUT_CLASSIFICATION	8.886779030801768E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.999968971198407	WITHOUT_CLASSIFICATION	3.1028801592907396E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.998337422883904	WITHOUT_CLASSIFICATION	0.0016625771160959865	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.998337422883904	WITHOUT_CLASSIFICATION	0.0016625771160959865	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9995293408285183	WITHOUT_CLASSIFICATION	4.706591714817591E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9997253790345316	WITHOUT_CLASSIFICATION	2.7462096546843593E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9997188636445354	WITHOUT_CLASSIFICATION	2.81136355464534E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9993323260803533	WITHOUT_CLASSIFICATION	6.676739196466571E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9998671573599516	WITHOUT_CLASSIFICATION	1.32842640048387E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9932503353112733	WITHOUT_CLASSIFICATION	0.006749664688726671	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9994045082883636	WITHOUT_CLASSIFICATION	5.954917116364272E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999001198035566	WITHOUT_CLASSIFICATION	9.988019644338605E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9846117411340672	WITHOUT_CLASSIFICATION	0.015388258865932841	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9998815237266974	WITHOUT_CLASSIFICATION	1.184762733026631E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9998052115049452	WITHOUT_CLASSIFICATION	1.9478849505476267E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999271768268618	WITHOUT_CLASSIFICATION	7.282317313823327E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9866420482969022	WITHOUT_CLASSIFICATION	0.013357951703097849	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9995283072371481	WITHOUT_CLASSIFICATION	4.716927628518689E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9996428839774493	WITHOUT_CLASSIFICATION	3.5711602255078393E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999838954284642	WITHOUT_CLASSIFICATION	1.6104571535837507E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9600933702423196	WITHOUT_CLASSIFICATION	0.0399066297576805	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9998416421063782	WITHOUT_CLASSIFICATION	1.583578936217491E-4	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999927701272464	WITHOUT_CLASSIFICATION	7.2298727536171E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999927701272464	WITHOUT_CLASSIFICATION	7.2298727536171E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.999995276181475	WITHOUT_CLASSIFICATION	4.7238185249801275E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999461193977252	WITHOUT_CLASSIFICATION	5.388060227487198E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9972323739297213	WITHOUT_CLASSIFICATION	0.002767626070278648	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9998373374588366	WITHOUT_CLASSIFICATION	1.6266254116327697E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999029192718204	WITHOUT_CLASSIFICATION	9.708072817958389E-5	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9998112576106839	WITHOUT_CLASSIFICATION	1.8874238931604413E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.999842976871655	WITHOUT_CLASSIFICATION	1.5702312834497923E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999747748897595	WITHOUT_CLASSIFICATION	2.5225110240426932E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9996721233608034	WITHOUT_CLASSIFICATION	3.278766391966613E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999115026082711	WITHOUT_CLASSIFICATION	8.849739172887203E-5	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9996178592978425	WITHOUT_CLASSIFICATION	3.8214070215743576E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9987068944975928	WITHOUT_CLASSIFICATION	0.0012931055024072587	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9887536884834423	WITHOUT_CLASSIFICATION	0.01124631151655779	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9997234755833868	WITHOUT_CLASSIFICATION	2.7652441661320796E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9798172357901431	WITHOUT_CLASSIFICATION	0.02018276420985686	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.99914877001347	WITHOUT_CLASSIFICATION	8.512299865301089E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9995051162961236	WITHOUT_CLASSIFICATION	4.948837038765002E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9995704384109859	WITHOUT_CLASSIFICATION	4.2956158901400154E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9997798562592279	WITHOUT_CLASSIFICATION	2.2014374077196955E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9998444471240531	WITHOUT_CLASSIFICATION	1.5555287594689834E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9998444471240531	WITHOUT_CLASSIFICATION	1.5555287594689834E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9983836337539782	WITHOUT_CLASSIFICATION	0.0016163662460218732	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999686450875961	WITHOUT_CLASSIFICATION	3.135491240389044E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.997095338898644	WITHOUT_CLASSIFICATION	0.0029046611013560895	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998860359069793	WITHOUT_CLASSIFICATION	1.139640930207397E-4	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997663821458664	WITHOUT_CLASSIFICATION	2.3361785413364853E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999624180439035	WITHOUT_CLASSIFICATION	3.758195609649496E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9981968607434498	WITHOUT_CLASSIFICATION	0.001803139256550222	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9996489195929097	WITHOUT_CLASSIFICATION	3.510804070904078E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9996489195929097	WITHOUT_CLASSIFICATION	3.510804070904078E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9996489195929097	WITHOUT_CLASSIFICATION	3.510804070904078E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9998041971258766	WITHOUT_CLASSIFICATION	1.9580287412343728E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9997160856591935	WITHOUT_CLASSIFICATION	2.8391434080650955E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9792053488564827	WITHOUT_CLASSIFICATION	0.02079465114351728	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998772642289449	WITHOUT_CLASSIFICATION	1.227357710551756E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9998772642289449	WITHOUT_CLASSIFICATION	1.227357710551756E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999088795302238	WITHOUT_CLASSIFICATION	9.112046977630451E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9989782196629217	WITHOUT_CLASSIFICATION	0.0010217803370783794	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998605096807414	WITHOUT_CLASSIFICATION	1.3949031925860757E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9993115688716734	WITHOUT_CLASSIFICATION	6.88431128326648E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999918377720532	WITHOUT_CLASSIFICATION	8.162227946749998E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998733178435153	WITHOUT_CLASSIFICATION	1.2668215648470457E-4	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9997710806864075	WITHOUT_CLASSIFICATION	2.2891931359245255E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999316798293713	WITHOUT_CLASSIFICATION	6.832017062873427E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999641926126345	WITHOUT_CLASSIFICATION	3.580738736541158E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.999261002731632	WITHOUT_CLASSIFICATION	7.389972683680147E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999957329629509	WITHOUT_CLASSIFICATION	4.2670370490648175E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999854728475023	WITHOUT_CLASSIFICATION	1.452715249768543E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999854728475023	WITHOUT_CLASSIFICATION	1.452715249768543E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9994936712171029	WITHOUT_CLASSIFICATION	5.063287828971716E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999089484578749	WITHOUT_CLASSIFICATION	9.105154212514033E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999089484578749	WITHOUT_CLASSIFICATION	9.105154212514033E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9996581157267875	WITHOUT_CLASSIFICATION	3.418842732124594E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9998945005265182	WITHOUT_CLASSIFICATION	1.0549947348182944E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9997605047630864	WITHOUT_CLASSIFICATION	2.394952369135492E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995949637711249	WITHOUT_CLASSIFICATION	4.050362288750365E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994521053875424	WITHOUT_CLASSIFICATION	5.478946124575535E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.999970772858187	WITHOUT_CLASSIFICATION	2.9227141813075077E-5	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9996425728506012	WITHOUT_CLASSIFICATION	3.574271493987672E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9885930382798416	WITHOUT_CLASSIFICATION	0.011406961720158516	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9998037038594907	WITHOUT_CLASSIFICATION	1.9629614050939716E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9998037038594907	WITHOUT_CLASSIFICATION	1.9629614050939716E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.984187760394195	WITHOUT_CLASSIFICATION	0.01581223960580494	DEFECT
// is this an error???	DEFECT	0.9995422507797731	WITHOUT_CLASSIFICATION	4.577492202269179E-4	DEFECT
// is this an error???	DEFECT	0.9995422507797731	WITHOUT_CLASSIFICATION	4.577492202269179E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9995256812260975	WITHOUT_CLASSIFICATION	4.7431877390240163E-4	DEFECT
