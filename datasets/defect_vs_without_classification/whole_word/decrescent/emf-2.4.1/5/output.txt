// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9994943294017299	WITHOUT_CLASSIFICATION	5.056705982700911E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9998993973626158	WITHOUT_CLASSIFICATION	1.006026373841391E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999108010385341	WITHOUT_CLASSIFICATION	8.919896146591706E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9989570359713827	WITHOUT_CLASSIFICATION	0.0010429640286172264	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999601501080568	WITHOUT_CLASSIFICATION	3.9849891943119614E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9997881705233392	WITHOUT_CLASSIFICATION	2.1182947666070033E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998380435652228	WITHOUT_CLASSIFICATION	1.6195643477733774E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999464091256823	WITHOUT_CLASSIFICATION	5.359087431760683E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999601418914775	WITHOUT_CLASSIFICATION	3.9858108522559256E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999612312987322	WITHOUT_CLASSIFICATION	3.8768701267814006E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997556356674403	WITHOUT_CLASSIFICATION	2.443643325596943E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999883752476903	WITHOUT_CLASSIFICATION	1.162475230970395E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998788254728488	WITHOUT_CLASSIFICATION	1.211745271512598E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999553810617738	WITHOUT_CLASSIFICATION	4.4618938226076595E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.999908940017149	WITHOUT_CLASSIFICATION	9.105998285100036E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999395428296913	WITHOUT_CLASSIFICATION	6.0457170308705466E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999252975468151	WITHOUT_CLASSIFICATION	7.47024531848703E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9993086150817245	WITHOUT_CLASSIFICATION	6.913849182755641E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.998766144151813	WITHOUT_CLASSIFICATION	0.0012338558481869953	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999375949263827	WITHOUT_CLASSIFICATION	6.240507361732852E-5	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9987235461870159	WITHOUT_CLASSIFICATION	0.0012764538129840725	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9769390881152604	WITHOUT_CLASSIFICATION	0.023060911884739587	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9984399298013437	WITHOUT_CLASSIFICATION	0.001560070198656411	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9883387959171721	WITHOUT_CLASSIFICATION	0.011661204082827958	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997059813607219	WITHOUT_CLASSIFICATION	2.9401863927813043E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998980618490273	WITHOUT_CLASSIFICATION	1.019381509726743E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999938113492957	WITHOUT_CLASSIFICATION	6.18865070434497E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9969400045004105	WITHOUT_CLASSIFICATION	0.0030599954995894118	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9998988834858644	WITHOUT_CLASSIFICATION	1.0111651413555917E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9979000921406499	WITHOUT_CLASSIFICATION	0.0020999078593500814	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999648064754658	WITHOUT_CLASSIFICATION	3.5193524534237205E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9998197447069709	WITHOUT_CLASSIFICATION	1.802552930291656E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999094802097388	WITHOUT_CLASSIFICATION	9.051979026122814E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9974313188688504	WITHOUT_CLASSIFICATION	0.002568681131149676	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998991347808887	WITHOUT_CLASSIFICATION	1.0086521911127611E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999859508051492	WITHOUT_CLASSIFICATION	1.404919485082098E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9884690445725368	WITHOUT_CLASSIFICATION	0.011530955427463121	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999853191378033	WITHOUT_CLASSIFICATION	1.4680862196726265E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999945472837054	WITHOUT_CLASSIFICATION	5.452716294577447E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9989811129289071	WITHOUT_CLASSIFICATION	0.0010188870710928092	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9998920874422678	WITHOUT_CLASSIFICATION	1.0791255773222409E-4	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9285436067109645	WITHOUT_CLASSIFICATION	0.07145639328903554	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999240560495725	WITHOUT_CLASSIFICATION	7.594395042753581E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999674418552571	WITHOUT_CLASSIFICATION	3.255814474294907E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9936025988279756	WITHOUT_CLASSIFICATION	0.006397401172024464	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999612312987322	WITHOUT_CLASSIFICATION	3.8768701267814006E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997556356674403	WITHOUT_CLASSIFICATION	2.443643325596943E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999883752476903	WITHOUT_CLASSIFICATION	1.162475230970395E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9996423436225109	WITHOUT_CLASSIFICATION	3.576563774890838E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998788254728488	WITHOUT_CLASSIFICATION	1.211745271512598E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999553810617738	WITHOUT_CLASSIFICATION	4.4618938226076595E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.999908940017149	WITHOUT_CLASSIFICATION	9.105998285100036E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.992227652655338	WITHOUT_CLASSIFICATION	0.007772347344662029	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.992227652655338	WITHOUT_CLASSIFICATION	0.007772347344662029	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.992227652655338	WITHOUT_CLASSIFICATION	0.007772347344662029	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999601501080568	WITHOUT_CLASSIFICATION	3.9849891943119614E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9994051033383341	WITHOUT_CLASSIFICATION	5.948966616658409E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.999785095128672	WITHOUT_CLASSIFICATION	2.1490487132811188E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9998916462669688	WITHOUT_CLASSIFICATION	1.0835373303128411E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9993086150817245	WITHOUT_CLASSIFICATION	6.913849182755641E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9994645597150015	WITHOUT_CLASSIFICATION	5.354402849985242E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997059813607219	WITHOUT_CLASSIFICATION	2.9401863927813043E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998980618490273	WITHOUT_CLASSIFICATION	1.019381509726743E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9969400045004105	WITHOUT_CLASSIFICATION	0.0030599954995894118	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999648064754658	WITHOUT_CLASSIFICATION	3.5193524534237205E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9995285962686107	WITHOUT_CLASSIFICATION	4.714037313892462E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9995144465932376	WITHOUT_CLASSIFICATION	4.855534067624722E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999075652168897	WITHOUT_CLASSIFICATION	9.243478311024984E-5	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999112318928501	WITHOUT_CLASSIFICATION	8.876810714980058E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999373634814301	WITHOUT_CLASSIFICATION	6.263651856986449E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998991347808887	WITHOUT_CLASSIFICATION	1.0086521911127611E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9884690445725368	WITHOUT_CLASSIFICATION	0.011530955427463121	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.999955697969048	WITHOUT_CLASSIFICATION	4.430203095190345E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9990268764347876	WITHOUT_CLASSIFICATION	9.731235652124794E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999833923757634	WITHOUT_CLASSIFICATION	1.6607624236583223E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999458867803234	WITHOUT_CLASSIFICATION	5.411321967672107E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999018206558996	WITHOUT_CLASSIFICATION	9.817934410042481E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9974098713960025	WITHOUT_CLASSIFICATION	0.00259012860399755	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998730295028602	WITHOUT_CLASSIFICATION	1.2697049713973667E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.8777065329598371	WITHOUT_CLASSIFICATION	0.12229346704016293	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9979796672390601	WITHOUT_CLASSIFICATION	0.0020203327609399063	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999707327427381	WITHOUT_CLASSIFICATION	2.9267257261902586E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9998097003682718	WITHOUT_CLASSIFICATION	1.9029963172819558E-4	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999368560092255	WITHOUT_CLASSIFICATION	6.314399077445647E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9997669999136924	WITHOUT_CLASSIFICATION	2.330000863074337E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9989778525079079	WITHOUT_CLASSIFICATION	0.0010221474920921179	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999707327427381	WITHOUT_CLASSIFICATION	2.9267257261902586E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9998097003682718	WITHOUT_CLASSIFICATION	1.9029963172819558E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9994516261830179	WITHOUT_CLASSIFICATION	5.48373816982076E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9994516261830179	WITHOUT_CLASSIFICATION	5.48373816982076E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997150449722204	WITHOUT_CLASSIFICATION	2.8495502777958623E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9994907088421751	WITHOUT_CLASSIFICATION	5.092911578249653E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999821828522699	WITHOUT_CLASSIFICATION	1.781714773015112E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997150449722204	WITHOUT_CLASSIFICATION	2.8495502777958623E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9994907088421751	WITHOUT_CLASSIFICATION	5.092911578249653E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999373207612231	WITHOUT_CLASSIFICATION	6.267923877693971E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998612604688049	WITHOUT_CLASSIFICATION	1.3873953119516115E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999867875443618	WITHOUT_CLASSIFICATION	1.3212455638270181E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999168576567413	WITHOUT_CLASSIFICATION	8.314234325859405E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999867875443618	WITHOUT_CLASSIFICATION	1.3212455638270181E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999436992344529	WITHOUT_CLASSIFICATION	5.6300765547072606E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999687120425989	WITHOUT_CLASSIFICATION	3.128795740121367E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999687120425989	WITHOUT_CLASSIFICATION	3.128795740121367E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9996072745666721	WITHOUT_CLASSIFICATION	3.9272543332785804E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9998876049644401	WITHOUT_CLASSIFICATION	1.123950355599195E-4	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9998883453849753	WITHOUT_CLASSIFICATION	1.1165461502476823E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999719631747443	WITHOUT_CLASSIFICATION	2.8036825255727735E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999734821178891	WITHOUT_CLASSIFICATION	2.651788211096371E-5	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9998650861495518	WITHOUT_CLASSIFICATION	1.349138504481138E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9996837252209524	WITHOUT_CLASSIFICATION	3.162747790476127E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999169118776067	WITHOUT_CLASSIFICATION	8.308812239335687E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999959947840659	WITHOUT_CLASSIFICATION	4.0052159340758524E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9996780446555911	WITHOUT_CLASSIFICATION	3.21955344408919E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999935359825632	WITHOUT_CLASSIFICATION	6.464017436754498E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999090447932628	WITHOUT_CLASSIFICATION	9.09552067371361E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9998699463939611	WITHOUT_CLASSIFICATION	1.3005360603889464E-4	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997996317432419	WITHOUT_CLASSIFICATION	2.003682567580383E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9986244243031439	WITHOUT_CLASSIFICATION	0.0013755756968561019	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998350562573737	WITHOUT_CLASSIFICATION	1.6494374262636876E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9986073866616286	WITHOUT_CLASSIFICATION	0.001392613338371295	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999853735916	WITHOUT_CLASSIFICATION	1.462640836364909E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999853735916	WITHOUT_CLASSIFICATION	1.462640836364909E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9998237069617955	WITHOUT_CLASSIFICATION	1.7629303820446162E-4	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9998237069617955	WITHOUT_CLASSIFICATION	1.7629303820446162E-4	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9997315019078938	WITHOUT_CLASSIFICATION	2.684980921061387E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9993784123728175	WITHOUT_CLASSIFICATION	6.21587627182526E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9989913972795496	WITHOUT_CLASSIFICATION	0.0010086027204505156	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999643958021457	WITHOUT_CLASSIFICATION	3.560419785424797E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997996317432419	WITHOUT_CLASSIFICATION	2.003682567580383E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9979291807670214	WITHOUT_CLASSIFICATION	0.0020708192329786904	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9998795249737978	WITHOUT_CLASSIFICATION	1.2047502620214057E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999839727736058	WITHOUT_CLASSIFICATION	1.6027226394089623E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999893812194088	WITHOUT_CLASSIFICATION	1.0618780591198378E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9990362134748855	WITHOUT_CLASSIFICATION	9.637865251145686E-4	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9995118201730703	WITHOUT_CLASSIFICATION	4.881798269297094E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999377236563654	WITHOUT_CLASSIFICATION	6.227634363462855E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999161608969821	WITHOUT_CLASSIFICATION	8.383910301784673E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999244644080001	WITHOUT_CLASSIFICATION	7.55355919998178E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993674625627237	WITHOUT_CLASSIFICATION	6.325374372763617E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999997564663826	WITHOUT_CLASSIFICATION	2.435336173893383E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999295725079257	WITHOUT_CLASSIFICATION	7.042749207432052E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999295725079257	WITHOUT_CLASSIFICATION	7.042749207432052E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9946733013158355	WITHOUT_CLASSIFICATION	0.005326698684164527	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999746108427873	WITHOUT_CLASSIFICATION	2.53891572126635E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9998786010917046	WITHOUT_CLASSIFICATION	1.2139890829543369E-4	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999897369727004	WITHOUT_CLASSIFICATION	1.0263027299524283E-5	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.999990038764104	WITHOUT_CLASSIFICATION	9.961235895913609E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999790903550456	WITHOUT_CLASSIFICATION	2.0909644954450455E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9850313384210942	WITHOUT_CLASSIFICATION	0.014968661578905708	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.999922180128603	WITHOUT_CLASSIFICATION	7.781987139695994E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9998227001224341	WITHOUT_CLASSIFICATION	1.7729987756589879E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9809013942778366	WITHOUT_CLASSIFICATION	0.01909860572216336	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9994934528901118	WITHOUT_CLASSIFICATION	5.065471098882346E-4	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9989918655485988	WITHOUT_CLASSIFICATION	0.001008134451401264	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9980307997662407	WITHOUT_CLASSIFICATION	0.0019692002337593404	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9998368921694496	WITHOUT_CLASSIFICATION	1.6310783055049368E-4	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9978605030041697	WITHOUT_CLASSIFICATION	0.002139496995830179	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9997245693377107	WITHOUT_CLASSIFICATION	2.75430662289314E-4	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999482886568953	WITHOUT_CLASSIFICATION	5.171134310460721E-5	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999984928612594	WITHOUT_CLASSIFICATION	1.5071387405833487E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9974297591787025	WITHOUT_CLASSIFICATION	0.0025702408212974898	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.999998167581739	WITHOUT_CLASSIFICATION	1.8324182609442073E-6	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.999998637290738	WITHOUT_CLASSIFICATION	1.3627092620629744E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999395445394583	WITHOUT_CLASSIFICATION	6.045546054183132E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999828798052718	WITHOUT_CLASSIFICATION	1.7120194728316295E-5	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9996263720134132	WITHOUT_CLASSIFICATION	3.7362798658681124E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999241799569456	WITHOUT_CLASSIFICATION	7.582004305438828E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999895228516904	WITHOUT_CLASSIFICATION	1.0477148309481446E-5	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9994126812424211	WITHOUT_CLASSIFICATION	5.873187575789248E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9994170178217344	WITHOUT_CLASSIFICATION	5.829821782656868E-4	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9828278730924027	WITHOUT_CLASSIFICATION	0.017172126907597347	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.999990309555804	WITHOUT_CLASSIFICATION	9.69044419603148E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999803291621756	WITHOUT_CLASSIFICATION	1.9670837824355757E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999803291621756	WITHOUT_CLASSIFICATION	1.9670837824355757E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999523531786519	WITHOUT_CLASSIFICATION	4.76468213480389E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999523531786519	WITHOUT_CLASSIFICATION	4.76468213480389E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9975382873847164	WITHOUT_CLASSIFICATION	0.002461712615283594	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999452076728602	WITHOUT_CLASSIFICATION	5.479232713976655E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9991710667166068	WITHOUT_CLASSIFICATION	8.28933283393122E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9991710667166068	WITHOUT_CLASSIFICATION	8.28933283393122E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9994987740302474	WITHOUT_CLASSIFICATION	5.012259697524927E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998776440129584	WITHOUT_CLASSIFICATION	1.223559870415727E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999090447932628	WITHOUT_CLASSIFICATION	9.09552067371361E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999793799282369	WITHOUT_CLASSIFICATION	2.0620071763017985E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999793799282369	WITHOUT_CLASSIFICATION	2.0620071763017985E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999793799282369	WITHOUT_CLASSIFICATION	2.0620071763017985E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998776440129584	WITHOUT_CLASSIFICATION	1.223559870415727E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999283104070562	WITHOUT_CLASSIFICATION	7.168959294383819E-5	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999339204607249	WITHOUT_CLASSIFICATION	6.607953927510611E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.999088467079504	WITHOUT_CLASSIFICATION	9.115329204959537E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998875594327665	WITHOUT_CLASSIFICATION	1.1244056723344804E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999108065419732	WITHOUT_CLASSIFICATION	8.91934580267569E-5	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9996701493146539	WITHOUT_CLASSIFICATION	3.2985068534601623E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9998993973626158	WITHOUT_CLASSIFICATION	1.006026373841391E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999108010385341	WITHOUT_CLASSIFICATION	8.919896146591706E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9989570359713827	WITHOUT_CLASSIFICATION	0.0010429640286172264	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999601501080568	WITHOUT_CLASSIFICATION	3.9849891943119614E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9997881705233392	WITHOUT_CLASSIFICATION	2.1182947666070033E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998380435652228	WITHOUT_CLASSIFICATION	1.6195643477733774E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999464091256823	WITHOUT_CLASSIFICATION	5.359087431760683E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999612312987322	WITHOUT_CLASSIFICATION	3.8768701267814006E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997556356674403	WITHOUT_CLASSIFICATION	2.443643325596943E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999883752476903	WITHOUT_CLASSIFICATION	1.162475230970395E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997118373922663	WITHOUT_CLASSIFICATION	2.8816260773375206E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998788254728488	WITHOUT_CLASSIFICATION	1.211745271512598E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999553810617738	WITHOUT_CLASSIFICATION	4.4618938226076595E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.999908940017149	WITHOUT_CLASSIFICATION	9.105998285100036E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999395428296913	WITHOUT_CLASSIFICATION	6.0457170308705466E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999252975468151	WITHOUT_CLASSIFICATION	7.47024531848703E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998844233156606	WITHOUT_CLASSIFICATION	1.1557668433935815E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999110391745802	WITHOUT_CLASSIFICATION	8.896082541983603E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9993086150817245	WITHOUT_CLASSIFICATION	6.913849182755641E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.998766144151813	WITHOUT_CLASSIFICATION	0.0012338558481869953	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999375949263827	WITHOUT_CLASSIFICATION	6.240507361732852E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9994645597150015	WITHOUT_CLASSIFICATION	5.354402849985242E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997059813607219	WITHOUT_CLASSIFICATION	2.9401863927813043E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998980618490273	WITHOUT_CLASSIFICATION	1.019381509726743E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999938113492957	WITHOUT_CLASSIFICATION	6.18865070434497E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9969400045004105	WITHOUT_CLASSIFICATION	0.0030599954995894118	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999935447592505	WITHOUT_CLASSIFICATION	6.455240749482371E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999401416166128	WITHOUT_CLASSIFICATION	5.98583833871627E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999094802097388	WITHOUT_CLASSIFICATION	9.051979026122814E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9998988834858644	WITHOUT_CLASSIFICATION	1.0111651413555917E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999648064754658	WITHOUT_CLASSIFICATION	3.5193524534237205E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9979000921406499	WITHOUT_CLASSIFICATION	0.0020999078593500814	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995739150844494	WITHOUT_CLASSIFICATION	4.260849155506584E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999569418557152	WITHOUT_CLASSIFICATION	4.305814428493414E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999648064754658	WITHOUT_CLASSIFICATION	3.5193524534237205E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998991347808887	WITHOUT_CLASSIFICATION	1.0086521911127611E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9974313188688504	WITHOUT_CLASSIFICATION	0.002568681131149676	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.999995316997815	WITHOUT_CLASSIFICATION	4.68300218511785E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9884690445725368	WITHOUT_CLASSIFICATION	0.011530955427463121	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.999940441958615	WITHOUT_CLASSIFICATION	5.9558041385151885E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995739150844494	WITHOUT_CLASSIFICATION	4.260849155506584E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9884690445725368	WITHOUT_CLASSIFICATION	0.011530955427463121	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9997008978228609	WITHOUT_CLASSIFICATION	2.9910217713917186E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9998087848062952	WITHOUT_CLASSIFICATION	1.9121519370483286E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999639235422496	WITHOUT_CLASSIFICATION	3.6076457750483234E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999729158964893	WITHOUT_CLASSIFICATION	2.7084103510795465E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9992346834100602	WITHOUT_CLASSIFICATION	7.653165899397657E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9996312124167164	WITHOUT_CLASSIFICATION	3.687875832836057E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9992346834100602	WITHOUT_CLASSIFICATION	7.653165899397657E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9985855275386278	WITHOUT_CLASSIFICATION	0.001414472461372186	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9945127280162527	WITHOUT_CLASSIFICATION	0.005487271983747424	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9873120028853497	WITHOUT_CLASSIFICATION	0.012687997114650339	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999817677967301	WITHOUT_CLASSIFICATION	1.823220326989709E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9998252210317512	WITHOUT_CLASSIFICATION	1.7477896824884303E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9998447670153535	WITHOUT_CLASSIFICATION	1.552329846464076E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9995517381695286	WITHOUT_CLASSIFICATION	4.4826183047141303E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9992159241078918	WITHOUT_CLASSIFICATION	7.840758921082784E-4	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999336608362985	WITHOUT_CLASSIFICATION	6.633916370142284E-5	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9979859774231767	WITHOUT_CLASSIFICATION	0.002014022576823183	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9981324417645937	WITHOUT_CLASSIFICATION	0.001867558235406296	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999634952523768	WITHOUT_CLASSIFICATION	3.650474762325183E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9996401310527877	WITHOUT_CLASSIFICATION	3.5986894721236877E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9998743374770985	WITHOUT_CLASSIFICATION	1.256625229014775E-4	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999152908840274	WITHOUT_CLASSIFICATION	8.47091159725643E-5	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999684112821944	WITHOUT_CLASSIFICATION	3.158871780564172E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9962013143587768	WITHOUT_CLASSIFICATION	0.0037986856412231046	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9989542303284995	WITHOUT_CLASSIFICATION	0.0010457696715004399	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9998920488870351	WITHOUT_CLASSIFICATION	1.0795111296498972E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999608745048443	WITHOUT_CLASSIFICATION	3.912549515565368E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999088353525138	WITHOUT_CLASSIFICATION	9.116464748614242E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9998814543288361	WITHOUT_CLASSIFICATION	1.1854567116393401E-4	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.99997033332634	WITHOUT_CLASSIFICATION	2.9666673660050225E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999853191378033	WITHOUT_CLASSIFICATION	1.4680862196726265E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999390586447174	WITHOUT_CLASSIFICATION	6.0941355282645885E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999620020072382	WITHOUT_CLASSIFICATION	3.799799276191871E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999775938952523	WITHOUT_CLASSIFICATION	2.240610474762325E-5	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999728872493115	WITHOUT_CLASSIFICATION	2.711275068847244E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999231108998872	WITHOUT_CLASSIFICATION	7.688910011273436E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999063413046864	WITHOUT_CLASSIFICATION	9.365869531361169E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999705556744991	WITHOUT_CLASSIFICATION	2.9444325500901743E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999689862390669	WITHOUT_CLASSIFICATION	3.1013760933035253E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999535456104253	WITHOUT_CLASSIFICATION	4.645438957473146E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999905211729183	WITHOUT_CLASSIFICATION	9.478827081607447E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999385625550161	WITHOUT_CLASSIFICATION	6.143744498389553E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9982810216563691	WITHOUT_CLASSIFICATION	0.0017189783436307984	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999597933693359	WITHOUT_CLASSIFICATION	4.020663066405755E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999787433032534	WITHOUT_CLASSIFICATION	2.1256696746601303E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.999955697969048	WITHOUT_CLASSIFICATION	4.430203095190345E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999469503377401	WITHOUT_CLASSIFICATION	5.3049662260056886E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999192188772793	WITHOUT_CLASSIFICATION	8.078112272073165E-5	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999633597884651	WITHOUT_CLASSIFICATION	3.6640211534943555E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999613799317687	WITHOUT_CLASSIFICATION	3.86200682313912E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9976295916863703	WITHOUT_CLASSIFICATION	0.0023704083136296844	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9840297054053913	WITHOUT_CLASSIFICATION	0.015970294594608834	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999295332647674	WITHOUT_CLASSIFICATION	7.04667352327009E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9998929047634086	WITHOUT_CLASSIFICATION	1.0709523659143735E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9998876049644401	WITHOUT_CLASSIFICATION	1.123950355599195E-4	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9997975742712093	WITHOUT_CLASSIFICATION	2.0242572879075274E-4	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999210732896864	WITHOUT_CLASSIFICATION	7.892671031360696E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999423705613737	WITHOUT_CLASSIFICATION	5.762943862632756E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999928438486074	WITHOUT_CLASSIFICATION	7.156151392646511E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999934301991353	WITHOUT_CLASSIFICATION	6.569800864700288E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998517021441361	WITHOUT_CLASSIFICATION	1.4829785586394553E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9994939967379698	WITHOUT_CLASSIFICATION	5.060032620301096E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9995394595765816	WITHOUT_CLASSIFICATION	4.6054042341826465E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999264044662962	WITHOUT_CLASSIFICATION	7.359553370385294E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999867561546227	WITHOUT_CLASSIFICATION	1.3243845377207371E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999881300683578	WITHOUT_CLASSIFICATION	1.1869931642045263E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998350562573737	WITHOUT_CLASSIFICATION	1.6494374262636876E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9986073866616286	WITHOUT_CLASSIFICATION	0.001392613338371295	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999643958021457	WITHOUT_CLASSIFICATION	3.560419785424797E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998517021441361	WITHOUT_CLASSIFICATION	1.4829785586394553E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999867561546227	WITHOUT_CLASSIFICATION	1.3243845377207371E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999881300683578	WITHOUT_CLASSIFICATION	1.1869931642045263E-5	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999353532638493	WITHOUT_CLASSIFICATION	6.464673615063302E-5	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999664563317919	WITHOUT_CLASSIFICATION	3.354366820804674E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.999877090439931	WITHOUT_CLASSIFICATION	1.2290956006891292E-4	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9998769639785219	WITHOUT_CLASSIFICATION	1.2303602147805534E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999928438486074	WITHOUT_CLASSIFICATION	7.156151392646511E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999934301991353	WITHOUT_CLASSIFICATION	6.569800864700288E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.999863221563397	WITHOUT_CLASSIFICATION	1.3677843660291755E-4	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999538050420189	WITHOUT_CLASSIFICATION	4.619495798100288E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999653474872908	WITHOUT_CLASSIFICATION	3.465251270917871E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9996948855387792	WITHOUT_CLASSIFICATION	3.0511446122089545E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999241020255856	WITHOUT_CLASSIFICATION	7.589797441450723E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9997651920606794	WITHOUT_CLASSIFICATION	2.3480793932059677E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9998613348548469	WITHOUT_CLASSIFICATION	1.3866514515314325E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9996967257869057	WITHOUT_CLASSIFICATION	3.032742130943007E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9998201347116134	WITHOUT_CLASSIFICATION	1.798652883867168E-4	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999363587327116	WITHOUT_CLASSIFICATION	6.364126728836705E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9832932390296851	WITHOUT_CLASSIFICATION	0.016706760970314913	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999633312871437	WITHOUT_CLASSIFICATION	3.666871285634932E-5	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999957799444359	WITHOUT_CLASSIFICATION	4.220055564124677E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999905110093537	WITHOUT_CLASSIFICATION	9.48899064634203E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999041157613658	WITHOUT_CLASSIFICATION	9.588423863414878E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999996362000622	WITHOUT_CLASSIFICATION	3.6379993784761385E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999928438486074	WITHOUT_CLASSIFICATION	7.156151392646511E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999934301991353	WITHOUT_CLASSIFICATION	6.569800864700288E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999289984215026	WITHOUT_CLASSIFICATION	7.100157849739074E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9994789117626289	WITHOUT_CLASSIFICATION	5.210882373710779E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.999992975698799	WITHOUT_CLASSIFICATION	7.024301201059934E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999265353680348	WITHOUT_CLASSIFICATION	7.346463196528066E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999957597708345	WITHOUT_CLASSIFICATION	4.240229165430816E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999089442859346	WITHOUT_CLASSIFICATION	9.10557140654963E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.933620558190202	WITHOUT_CLASSIFICATION	0.06637944180979795	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9991460572552074	WITHOUT_CLASSIFICATION	8.539427447925262E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998673199035992	WITHOUT_CLASSIFICATION	1.3268009640083164E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998673199035992	WITHOUT_CLASSIFICATION	1.3268009640083164E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9979851530675996	WITHOUT_CLASSIFICATION	0.002014846932400363	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9994604156420559	WITHOUT_CLASSIFICATION	5.395843579440821E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9943941715776847	WITHOUT_CLASSIFICATION	0.005605828422315242	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9995876084725297	WITHOUT_CLASSIFICATION	4.123915274703593E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999569991534958	WITHOUT_CLASSIFICATION	4.300084650421659E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999566716882735	WITHOUT_CLASSIFICATION	4.332831172648227E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9994288922398443	WITHOUT_CLASSIFICATION	5.711077601556153E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9994288922398443	WITHOUT_CLASSIFICATION	5.711077601556153E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999385685653328	WITHOUT_CLASSIFICATION	6.14314346671651E-5	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999375464872106	WITHOUT_CLASSIFICATION	6.245351278939792E-5	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.99992288786396	WITHOUT_CLASSIFICATION	7.711213604010006E-5	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999210560343693	WITHOUT_CLASSIFICATION	7.894396563077306E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9998899369176699	WITHOUT_CLASSIFICATION	1.1006308233004096E-4	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9995571614450602	WITHOUT_CLASSIFICATION	4.4283855493976263E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999753826832217	WITHOUT_CLASSIFICATION	2.461731677827695E-5	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9993379795799735	WITHOUT_CLASSIFICATION	6.62020420026498E-4	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999536324824129	WITHOUT_CLASSIFICATION	4.636751758711374E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999987994901028	WITHOUT_CLASSIFICATION	1.2005098972149456E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999648024156541	WITHOUT_CLASSIFICATION	3.519758434580314E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999836141457501	WITHOUT_CLASSIFICATION	1.6385854249897595E-5	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.999388156742409	WITHOUT_CLASSIFICATION	6.118432575909996E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9998220174515863	WITHOUT_CLASSIFICATION	1.7798254841375143E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9989854013667702	WITHOUT_CLASSIFICATION	0.0010145986332298653	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999305479992271	WITHOUT_CLASSIFICATION	6.945200077280143E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999983851711055	WITHOUT_CLASSIFICATION	1.6148288944982878E-5	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999897178461101	WITHOUT_CLASSIFICATION	1.0282153889786916E-5	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9998864343772133	WITHOUT_CLASSIFICATION	1.1356562278682285E-4	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999132629970582	WITHOUT_CLASSIFICATION	8.673700294186934E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.997722960236054	WITHOUT_CLASSIFICATION	0.0022770397639459545	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999992255254655	WITHOUT_CLASSIFICATION	7.744745345705298E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999631556284146	WITHOUT_CLASSIFICATION	3.68443715853787E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9991947373743676	WITHOUT_CLASSIFICATION	8.052626256323535E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9997426548401852	WITHOUT_CLASSIFICATION	2.5734515981473997E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999786932745913	WITHOUT_CLASSIFICATION	2.1306725408706078E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999664212617195	WITHOUT_CLASSIFICATION	3.357873828045722E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9992400431686969	WITHOUT_CLASSIFICATION	7.599568313031095E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9998686665371	WITHOUT_CLASSIFICATION	1.313334629000059E-4	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999912295740131	WITHOUT_CLASSIFICATION	8.770425986802996E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999791839072806	WITHOUT_CLASSIFICATION	2.0816092719359485E-5	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999154902022295	WITHOUT_CLASSIFICATION	8.450979777054636E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.999527598912177	WITHOUT_CLASSIFICATION	4.724010878230173E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999853278634908	WITHOUT_CLASSIFICATION	1.467213650923481E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9985889450332575	WITHOUT_CLASSIFICATION	0.0014110549667425744	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9990229027498965	WITHOUT_CLASSIFICATION	9.77097250103433E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999952356962571	WITHOUT_CLASSIFICATION	4.764303742807865E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9981266523363255	WITHOUT_CLASSIFICATION	0.001873347663674483	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.999986914747782	WITHOUT_CLASSIFICATION	1.3085252218127513E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999144628498492	WITHOUT_CLASSIFICATION	8.553715015078966E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999799339494858	WITHOUT_CLASSIFICATION	2.0066050514157518E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9995844876810073	WITHOUT_CLASSIFICATION	4.155123189926541E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999413274400167	WITHOUT_CLASSIFICATION	5.867255998331785E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9998034336296648	WITHOUT_CLASSIFICATION	1.965663703352255E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9998009847322479	WITHOUT_CLASSIFICATION	1.9901526775219612E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999799339494858	WITHOUT_CLASSIFICATION	2.0066050514157518E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999413274400167	WITHOUT_CLASSIFICATION	5.867255998331785E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9972325177565168	WITHOUT_CLASSIFICATION	0.002767482243483164	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999571309202073	WITHOUT_CLASSIFICATION	4.286907979272853E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9998074836442197	WITHOUT_CLASSIFICATION	1.92516355780255E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.999984702420936	WITHOUT_CLASSIFICATION	1.5297579063983947E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999144628498492	WITHOUT_CLASSIFICATION	8.553715015078966E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999144628498492	WITHOUT_CLASSIFICATION	8.553715015078966E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999799339494858	WITHOUT_CLASSIFICATION	2.0066050514157518E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999719422693016	WITHOUT_CLASSIFICATION	2.805773069840825E-5	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9998404204218824	WITHOUT_CLASSIFICATION	1.5957957811771746E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999417894447565	WITHOUT_CLASSIFICATION	5.821055524349652E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999417894447565	WITHOUT_CLASSIFICATION	5.821055524349652E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9997663326692044	WITHOUT_CLASSIFICATION	2.3366733079557253E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998008595488873	WITHOUT_CLASSIFICATION	1.991404511126581E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999002882688752	WITHOUT_CLASSIFICATION	9.971173112479427E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999002882688752	WITHOUT_CLASSIFICATION	9.971173112479427E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9976089817901201	WITHOUT_CLASSIFICATION	0.0023910182098798405	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998008595488873	WITHOUT_CLASSIFICATION	1.991404511126581E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999002882688752	WITHOUT_CLASSIFICATION	9.971173112479427E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9976089817901201	WITHOUT_CLASSIFICATION	0.0023910182098798405	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9998745332658905	WITHOUT_CLASSIFICATION	1.25466734109459E-4	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9990854579404194	WITHOUT_CLASSIFICATION	9.145420595807158E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9997907531844273	WITHOUT_CLASSIFICATION	2.0924681557274533E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9997498170562353	WITHOUT_CLASSIFICATION	2.5018294376463713E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9995571949737185	WITHOUT_CLASSIFICATION	4.4280502628145444E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.99997967559005	WITHOUT_CLASSIFICATION	2.0324409950147343E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.999751086080794	WITHOUT_CLASSIFICATION	2.489139192060643E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9997588870346161	WITHOUT_CLASSIFICATION	2.4111296538388417E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9983689478448269	WITHOUT_CLASSIFICATION	0.0016310521551731643	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9994143485922303	WITHOUT_CLASSIFICATION	5.856514077697463E-4	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.999981835359393	WITHOUT_CLASSIFICATION	1.816464060700371E-5	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.999991872058334	WITHOUT_CLASSIFICATION	8.127941666010866E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999667411153742	WITHOUT_CLASSIFICATION	3.32588846258144E-5	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999699985904873	WITHOUT_CLASSIFICATION	3.0001409512704816E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.999759895041382	WITHOUT_CLASSIFICATION	2.4010495861802742E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9996964194705351	WITHOUT_CLASSIFICATION	3.035805294648724E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9987290907349436	WITHOUT_CLASSIFICATION	0.0012709092650563213	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9998104508505834	WITHOUT_CLASSIFICATION	1.8954914941669124E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999841624913944	WITHOUT_CLASSIFICATION	1.5837508605517234E-5	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999233065036681	WITHOUT_CLASSIFICATION	7.669349633193298E-5	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999699750523874	WITHOUT_CLASSIFICATION	3.002494761267412E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999676550628994	WITHOUT_CLASSIFICATION	3.2344937100601816E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999757077908975	WITHOUT_CLASSIFICATION	2.4292209102487753E-5	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999781695951594	WITHOUT_CLASSIFICATION	2.1830404840528037E-5	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9998923355607797	WITHOUT_CLASSIFICATION	1.0766443922036127E-4	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9998686806313656	WITHOUT_CLASSIFICATION	1.3131936863446098E-4	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999719652137189	WITHOUT_CLASSIFICATION	2.803478628115627E-5	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9998252928449843	WITHOUT_CLASSIFICATION	1.7470715501566832E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.99895790181827	WITHOUT_CLASSIFICATION	0.0010420981817298727	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999658426636193	WITHOUT_CLASSIFICATION	3.415733638069279E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.999916139894623	WITHOUT_CLASSIFICATION	8.386010537699713E-5	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999074852834792	WITHOUT_CLASSIFICATION	9.251471652088101E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999152692029921	WITHOUT_CLASSIFICATION	8.473079700795235E-5	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9994902986530085	WITHOUT_CLASSIFICATION	5.09701346991468E-4	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999860687437679	WITHOUT_CLASSIFICATION	1.3931256231969533E-5	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997856927800558	WITHOUT_CLASSIFICATION	2.1430721994422194E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997679375545745	WITHOUT_CLASSIFICATION	2.3206244542555517E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997679375545745	WITHOUT_CLASSIFICATION	2.3206244542555517E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997679375545745	WITHOUT_CLASSIFICATION	2.3206244542555517E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999986493643682	WITHOUT_CLASSIFICATION	1.3506356317370362E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9995807279957921	WITHOUT_CLASSIFICATION	4.192720042078796E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9959233453859103	WITHOUT_CLASSIFICATION	0.004076654614089643	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9984810873821359	WITHOUT_CLASSIFICATION	0.001518912617864161	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9996561790305649	WITHOUT_CLASSIFICATION	3.4382096943508787E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9998312685566499	WITHOUT_CLASSIFICATION	1.687314433499513E-4	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999868324473907	WITHOUT_CLASSIFICATION	1.3167552609392099E-5	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9989938863832645	WITHOUT_CLASSIFICATION	0.0010061136167354783	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999064592151404	WITHOUT_CLASSIFICATION	9.354078485957654E-5	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999574540134175	WITHOUT_CLASSIFICATION	4.25459865826119E-5	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9926630247971328	WITHOUT_CLASSIFICATION	0.00733697520286718	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999140298793019	WITHOUT_CLASSIFICATION	8.5970120698108E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999774246839711	WITHOUT_CLASSIFICATION	2.25753160288751E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9996962794658035	WITHOUT_CLASSIFICATION	3.0372053419643963E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9995960691789263	WITHOUT_CLASSIFICATION	4.0393082107365453E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.999997700812437	WITHOUT_CLASSIFICATION	2.2991875629179084E-6	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999168143317	WITHOUT_CLASSIFICATION	8.318566829997161E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999814816340518	WITHOUT_CLASSIFICATION	1.8518365948232127E-5	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9998702954459665	WITHOUT_CLASSIFICATION	1.2970455403341516E-4	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.999828824544499	WITHOUT_CLASSIFICATION	1.7117545550095076E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9998908325338379	WITHOUT_CLASSIFICATION	1.0916746616209912E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9994574685194041	WITHOUT_CLASSIFICATION	5.425314805958862E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9996005127869075	WITHOUT_CLASSIFICATION	3.994872130925382E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9955470190799283	WITHOUT_CLASSIFICATION	0.0044529809200717415	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999956009187128	WITHOUT_CLASSIFICATION	4.399081287212206E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999377616855492	WITHOUT_CLASSIFICATION	6.223831445082468E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.999993859541487	WITHOUT_CLASSIFICATION	6.140458512981693E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999855201956674	WITHOUT_CLASSIFICATION	1.4479804332596237E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999013105893876	WITHOUT_CLASSIFICATION	9.868941061239982E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999277655487705	WITHOUT_CLASSIFICATION	7.223445122953333E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9998955228784601	WITHOUT_CLASSIFICATION	1.0447712153995881E-4	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9939749499295989	WITHOUT_CLASSIFICATION	0.006025050070401136	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9988766429393858	WITHOUT_CLASSIFICATION	0.0011233570606141116	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999500163606279	WITHOUT_CLASSIFICATION	4.998363937220477E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9997634368986166	WITHOUT_CLASSIFICATION	2.3656310138335935E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9996185037986158	WITHOUT_CLASSIFICATION	3.814962013842053E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999964187364511	WITHOUT_CLASSIFICATION	3.5812635489248298E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9998485125891741	WITHOUT_CLASSIFICATION	1.5148741082590198E-4	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999331864331954	WITHOUT_CLASSIFICATION	6.681356680457503E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999286178121886	WITHOUT_CLASSIFICATION	7.1382187811412E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999685342966816	WITHOUT_CLASSIFICATION	3.146570331838292E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999651425814347	WITHOUT_CLASSIFICATION	3.4857418565304096E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999089442859346	WITHOUT_CLASSIFICATION	9.10557140654963E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999964821981575	WITHOUT_CLASSIFICATION	3.5178018423758435E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999117910748856	WITHOUT_CLASSIFICATION	8.82089251144204E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999165220381029	WITHOUT_CLASSIFICATION	8.347796189711418E-5	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9951887561791528	WITHOUT_CLASSIFICATION	0.004811243820847145	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.979505756330208	WITHOUT_CLASSIFICATION	0.02049424366979206	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9976156052889821	WITHOUT_CLASSIFICATION	0.002384394711017941	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998072679842849	WITHOUT_CLASSIFICATION	1.9273201571509127E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999329827524273	WITHOUT_CLASSIFICATION	6.701724757274449E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9983077540461376	WITHOUT_CLASSIFICATION	0.0016922459538624359	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9996116673616501	WITHOUT_CLASSIFICATION	3.8833263834993625E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998944408804374	WITHOUT_CLASSIFICATION	1.0555911956256689E-4	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999852412179179	WITHOUT_CLASSIFICATION	1.4758782082038047E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999327027727273	WITHOUT_CLASSIFICATION	6.729722727269969E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9952868016417143	WITHOUT_CLASSIFICATION	0.004713198358285689	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9998954491674672	WITHOUT_CLASSIFICATION	1.045508325327677E-4	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999586018484978	WITHOUT_CLASSIFICATION	4.139815150217644E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9997684669437187	WITHOUT_CLASSIFICATION	2.3153305628122964E-4	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9994622844752301	WITHOUT_CLASSIFICATION	5.377155247698734E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999308490441253	WITHOUT_CLASSIFICATION	6.915095587470845E-5	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9993922657406166	WITHOUT_CLASSIFICATION	6.077342593833995E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9998220211186906	WITHOUT_CLASSIFICATION	1.7797888130933762E-4	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9859077320761345	WITHOUT_CLASSIFICATION	0.014092267923865604	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999941799736463	WITHOUT_CLASSIFICATION	5.8200263537032256E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9998195969887562	WITHOUT_CLASSIFICATION	1.8040301124376803E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999881216753926	WITHOUT_CLASSIFICATION	1.187832460745065E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999881216753926	WITHOUT_CLASSIFICATION	1.187832460745065E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999941799736463	WITHOUT_CLASSIFICATION	5.8200263537032256E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999560116037096	WITHOUT_CLASSIFICATION	4.398839629037673E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9998612158256478	WITHOUT_CLASSIFICATION	1.387841743522352E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9998612158256478	WITHOUT_CLASSIFICATION	1.387841743522352E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999378891139968	WITHOUT_CLASSIFICATION	6.211088600314005E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999555213097453	WITHOUT_CLASSIFICATION	4.4478690254703645E-5	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9998292338178542	WITHOUT_CLASSIFICATION	1.7076618214590118E-4	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9937548285679201	WITHOUT_CLASSIFICATION	0.00624517143207986	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9998472967758371	WITHOUT_CLASSIFICATION	1.5270322416287133E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9998940437971123	WITHOUT_CLASSIFICATION	1.059562028876878E-4	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999215322744436	WITHOUT_CLASSIFICATION	7.846772555644917E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9996470415379426	WITHOUT_CLASSIFICATION	3.5295846205746754E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.999713527398557	WITHOUT_CLASSIFICATION	2.864726014429456E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.99992891712953	WITHOUT_CLASSIFICATION	7.108287046997046E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999975302313485	WITHOUT_CLASSIFICATION	2.469768651536624E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999781416558048	WITHOUT_CLASSIFICATION	2.1858344195195403E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999291724378214	WITHOUT_CLASSIFICATION	7.082756217865917E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999379514468942	WITHOUT_CLASSIFICATION	6.204855310575706E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999452461304733	WITHOUT_CLASSIFICATION	5.475386952671616E-5	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999799385059199	WITHOUT_CLASSIFICATION	2.0061494080155593E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9991751515120315	WITHOUT_CLASSIFICATION	8.24848487968398E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9967006341258615	WITHOUT_CLASSIFICATION	0.0032993658741383935	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9997649916920665	WITHOUT_CLASSIFICATION	2.3500830793352794E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999964747247205	WITHOUT_CLASSIFICATION	3.525275279492E-6	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9991240149031145	WITHOUT_CLASSIFICATION	8.75985096885575E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9997804304692339	WITHOUT_CLASSIFICATION	2.1956953076610394E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999728036759898	WITHOUT_CLASSIFICATION	2.719632401015619E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999728036759898	WITHOUT_CLASSIFICATION	2.719632401015619E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9995426185079705	WITHOUT_CLASSIFICATION	4.5738149202956155E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.999123912361723	WITHOUT_CLASSIFICATION	8.760876382768472E-4	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9992433851291637	WITHOUT_CLASSIFICATION	7.566148708362966E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998418251738188	WITHOUT_CLASSIFICATION	1.5817482618126345E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999529002255603	WITHOUT_CLASSIFICATION	4.7099774439694466E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999721998857718	WITHOUT_CLASSIFICATION	2.7800114228164706E-5	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999451631829647	WITHOUT_CLASSIFICATION	5.483681703521556E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9998742497298562	WITHOUT_CLASSIFICATION	1.2575027014378678E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997614841420468	WITHOUT_CLASSIFICATION	2.385158579530857E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9989407211748567	WITHOUT_CLASSIFICATION	0.001059278825143305	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999179074729282	WITHOUT_CLASSIFICATION	8.20925270718373E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9995652338286867	WITHOUT_CLASSIFICATION	4.347661713132884E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9998013854411045	WITHOUT_CLASSIFICATION	1.9861455889545136E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998267490286901	WITHOUT_CLASSIFICATION	1.7325097130988312E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999795681124996	WITHOUT_CLASSIFICATION	2.0431887500480822E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999894579625138	WITHOUT_CLASSIFICATION	1.0542037486233156E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9940626182695869	WITHOUT_CLASSIFICATION	0.005937381730413193	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999894579625138	WITHOUT_CLASSIFICATION	1.0542037486233156E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998730295028602	WITHOUT_CLASSIFICATION	1.2697049713973667E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999467764231317	WITHOUT_CLASSIFICATION	5.322357686833005E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999551814342553	WITHOUT_CLASSIFICATION	4.481856574468241E-5	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999923601574554	WITHOUT_CLASSIFICATION	7.639842544664747E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9997970845496527	WITHOUT_CLASSIFICATION	2.0291545034729187E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9997429443002285	WITHOUT_CLASSIFICATION	2.5705569977155457E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999717345419521	WITHOUT_CLASSIFICATION	2.826545804798001E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999299864061837	WITHOUT_CLASSIFICATION	7.001359381631316E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999813857047752	WITHOUT_CLASSIFICATION	1.8614295224779205E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999133362532651	WITHOUT_CLASSIFICATION	8.666374673494483E-5	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999299313593897	WITHOUT_CLASSIFICATION	7.006864061035599E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9997560249073448	WITHOUT_CLASSIFICATION	2.4397509265506486E-4	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999459103235263	WITHOUT_CLASSIFICATION	5.408967647365469E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999891857666763	WITHOUT_CLASSIFICATION	1.0814233323705175E-5	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999379352102092	WITHOUT_CLASSIFICATION	6.206478979071688E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.999892836859881	WITHOUT_CLASSIFICATION	1.0716314011900444E-4	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9997001319780612	WITHOUT_CLASSIFICATION	2.998680219388171E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9995493116085853	WITHOUT_CLASSIFICATION	4.506883914147874E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.999843385962115	WITHOUT_CLASSIFICATION	1.5661403788496387E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.999963905140449	WITHOUT_CLASSIFICATION	3.609485955104057E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.998497389357346	WITHOUT_CLASSIFICATION	0.0015026106426540196	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9987138995916184	WITHOUT_CLASSIFICATION	0.0012861004083816526	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999899850755123	WITHOUT_CLASSIFICATION	1.0014924487746256E-5	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999671374672127	WITHOUT_CLASSIFICATION	3.2862532787316474E-5	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999683938666013	WITHOUT_CLASSIFICATION	3.160613339875818E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9998993973626158	WITHOUT_CLASSIFICATION	1.006026373841391E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999108010385341	WITHOUT_CLASSIFICATION	8.919896146591706E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997614841420468	WITHOUT_CLASSIFICATION	2.385158579530857E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9989407211748567	WITHOUT_CLASSIFICATION	0.001059278825143305	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999179074729282	WITHOUT_CLASSIFICATION	8.20925270718373E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999478046994369	WITHOUT_CLASSIFICATION	5.219530056314633E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9995745278298571	WITHOUT_CLASSIFICATION	4.2547217014291845E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999622814085987	WITHOUT_CLASSIFICATION	3.7718591401281375E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9997072590413799	WITHOUT_CLASSIFICATION	2.9274095862012354E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9998186204077151	WITHOUT_CLASSIFICATION	1.8137959228497455E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9997330268517663	WITHOUT_CLASSIFICATION	2.66973148233739E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9998889972953703	WITHOUT_CLASSIFICATION	1.1100270462968467E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9998415936020744	WITHOUT_CLASSIFICATION	1.5840639792575305E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9998149693866542	WITHOUT_CLASSIFICATION	1.8503061334576543E-4	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999626315376309	WITHOUT_CLASSIFICATION	3.73684623692523E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997531476362965	WITHOUT_CLASSIFICATION	2.468523637034363E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997531476362965	WITHOUT_CLASSIFICATION	2.468523637034363E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999643739411407	WITHOUT_CLASSIFICATION	3.562605885935909E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998666831552115	WITHOUT_CLASSIFICATION	1.333168447885169E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999755997514241	WITHOUT_CLASSIFICATION	2.4400248575926715E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999270616298234	WITHOUT_CLASSIFICATION	7.29383701765568E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999683417783569	WITHOUT_CLASSIFICATION	3.165822164310635E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999717101396162	WITHOUT_CLASSIFICATION	2.8289860383945258E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999716558130425	WITHOUT_CLASSIFICATION	2.8344186957513105E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999988609386793	WITHOUT_CLASSIFICATION	1.1390613206915764E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999611804780328	WITHOUT_CLASSIFICATION	3.88195219672183E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999952666004532	WITHOUT_CLASSIFICATION	4.733399546771434E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995803500872	WITHOUT_CLASSIFICATION	4.1964991278619743E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999555308179698	WITHOUT_CLASSIFICATION	4.446918203026171E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999652831539028	WITHOUT_CLASSIFICATION	3.471684609726679E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978891440552629	WITHOUT_CLASSIFICATION	0.0021108559447372017	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993963410623681	WITHOUT_CLASSIFICATION	6.036589376318887E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9993593577168511	WITHOUT_CLASSIFICATION	6.406422831488324E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999601418914775	WITHOUT_CLASSIFICATION	3.9858108522559256E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9989570359713827	WITHOUT_CLASSIFICATION	0.0010429640286172264	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999601501080568	WITHOUT_CLASSIFICATION	3.9849891943119614E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9997881705233392	WITHOUT_CLASSIFICATION	2.1182947666070033E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998380435652228	WITHOUT_CLASSIFICATION	1.6195643477733774E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999464091256823	WITHOUT_CLASSIFICATION	5.359087431760683E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999612312987322	WITHOUT_CLASSIFICATION	3.8768701267814006E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997556356674403	WITHOUT_CLASSIFICATION	2.443643325596943E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.999883752476903	WITHOUT_CLASSIFICATION	1.162475230970395E-4	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997118373922663	WITHOUT_CLASSIFICATION	2.8816260773375206E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998788254728488	WITHOUT_CLASSIFICATION	1.211745271512598E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999553810617738	WITHOUT_CLASSIFICATION	4.4618938226076595E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.999908940017149	WITHOUT_CLASSIFICATION	9.105998285100036E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999395428296913	WITHOUT_CLASSIFICATION	6.0457170308705466E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999252975468151	WITHOUT_CLASSIFICATION	7.47024531848703E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9993086150817245	WITHOUT_CLASSIFICATION	6.913849182755641E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.998766144151813	WITHOUT_CLASSIFICATION	0.0012338558481869953	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999375949263827	WITHOUT_CLASSIFICATION	6.240507361732852E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9994645597150015	WITHOUT_CLASSIFICATION	5.354402849985242E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997059813607219	WITHOUT_CLASSIFICATION	2.9401863927813043E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998980618490273	WITHOUT_CLASSIFICATION	1.019381509726743E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999938113492957	WITHOUT_CLASSIFICATION	6.18865070434497E-6	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999935447592505	WITHOUT_CLASSIFICATION	6.455240749482371E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9998988834858644	WITHOUT_CLASSIFICATION	1.0111651413555917E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9979000921406499	WITHOUT_CLASSIFICATION	0.0020999078593500814	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995739150844494	WITHOUT_CLASSIFICATION	4.260849155506584E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999094802097388	WITHOUT_CLASSIFICATION	9.051979026122814E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9974313188688504	WITHOUT_CLASSIFICATION	0.002568681131149676	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9998991347808887	WITHOUT_CLASSIFICATION	1.0086521911127611E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9884690445725368	WITHOUT_CLASSIFICATION	0.011530955427463121	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999643739411407	WITHOUT_CLASSIFICATION	3.562605885935909E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998666831552115	WITHOUT_CLASSIFICATION	1.333168447885169E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999755997514241	WITHOUT_CLASSIFICATION	2.4400248575926715E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999270616298234	WITHOUT_CLASSIFICATION	7.29383701765568E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999716558130425	WITHOUT_CLASSIFICATION	2.8344186957513105E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999988609386793	WITHOUT_CLASSIFICATION	1.1390613206915764E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9988141447545947	WITHOUT_CLASSIFICATION	0.0011858552454052686	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999639235422496	WITHOUT_CLASSIFICATION	3.6076457750483234E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999729158964893	WITHOUT_CLASSIFICATION	2.7084103510795465E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995803500872	WITHOUT_CLASSIFICATION	4.1964991278619743E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999555308179698	WITHOUT_CLASSIFICATION	4.446918203026171E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999652831539028	WITHOUT_CLASSIFICATION	3.471684609726679E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978891440552629	WITHOUT_CLASSIFICATION	0.0021108559447372017	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9993593577168511	WITHOUT_CLASSIFICATION	6.406422831488324E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999160644157931	WITHOUT_CLASSIFICATION	8.393558420693633E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999160644157931	WITHOUT_CLASSIFICATION	8.393558420693633E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999911103097303	WITHOUT_CLASSIFICATION	8.889690269752255E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.999659909965057	WITHOUT_CLASSIFICATION	3.400900349429467E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999799532927365	WITHOUT_CLASSIFICATION	2.0046707263532124E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999077193816803	WITHOUT_CLASSIFICATION	9.228061831966628E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997548390289177	WITHOUT_CLASSIFICATION	2.451609710822536E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9994943294017299	WITHOUT_CLASSIFICATION	5.056705982700911E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997492609529276	WITHOUT_CLASSIFICATION	2.507390470724861E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9998713989736289	WITHOUT_CLASSIFICATION	1.2860102637117564E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997492609529276	WITHOUT_CLASSIFICATION	2.507390470724861E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9997707712018823	WITHOUT_CLASSIFICATION	2.2922879811772056E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9998929366071613	WITHOUT_CLASSIFICATION	1.0706339283872859E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998061157407351	WITHOUT_CLASSIFICATION	1.9388425926496864E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998061157407351	WITHOUT_CLASSIFICATION	1.9388425926496864E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9996769928135975	WITHOUT_CLASSIFICATION	3.2300718640258444E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9994659181276765	WITHOUT_CLASSIFICATION	5.340818723234368E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9998961787816987	WITHOUT_CLASSIFICATION	1.0382121830130475E-4	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9996731310548777	WITHOUT_CLASSIFICATION	3.2686894512244045E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9997567073257245	WITHOUT_CLASSIFICATION	2.4329267427551573E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999733338407159	WITHOUT_CLASSIFICATION	2.666615928407188E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9992384729535732	WITHOUT_CLASSIFICATION	7.615270464269611E-4	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999523865016094	WITHOUT_CLASSIFICATION	4.761349839051127E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998310574819202	WITHOUT_CLASSIFICATION	1.6894251807970871E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9998662783403959	WITHOUT_CLASSIFICATION	1.3372165960414618E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.999825013628716	WITHOUT_CLASSIFICATION	1.7498637128402248E-4	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999372536324844	WITHOUT_CLASSIFICATION	6.27463675155474E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999013649452341	WITHOUT_CLASSIFICATION	9.863505476591479E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999013649452341	WITHOUT_CLASSIFICATION	9.863505476591479E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999483260866093	WITHOUT_CLASSIFICATION	5.167391339069559E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9996433838307298	WITHOUT_CLASSIFICATION	3.566161692701918E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9962103857521283	WITHOUT_CLASSIFICATION	0.0037896142478716466	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9960697338572487	WITHOUT_CLASSIFICATION	0.0039302661427512466	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9995281386202184	WITHOUT_CLASSIFICATION	4.718613797815079E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999748645762317	WITHOUT_CLASSIFICATION	2.5135423768250226E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999843866197414	WITHOUT_CLASSIFICATION	1.561338025865283E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999013921492834	WITHOUT_CLASSIFICATION	9.860785071657723E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999379619269888	WITHOUT_CLASSIFICATION	6.203807301117884E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999593096076518	WITHOUT_CLASSIFICATION	4.06903923482158E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999835142070588	WITHOUT_CLASSIFICATION	1.6485792941211182E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999625982142005	WITHOUT_CLASSIFICATION	3.7401785799466495E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999775227795737	WITHOUT_CLASSIFICATION	2.2477220426189696E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9846742221996405	WITHOUT_CLASSIFICATION	0.015325777800359545	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998418251738188	WITHOUT_CLASSIFICATION	1.5817482618126345E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9996639211699843	WITHOUT_CLASSIFICATION	3.36078830015732E-4	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.999831535305237	WITHOUT_CLASSIFICATION	1.6846469476298055E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999260719019176	WITHOUT_CLASSIFICATION	7.392809808237158E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9993921827840485	WITHOUT_CLASSIFICATION	6.078172159515963E-4	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9996273785348474	WITHOUT_CLASSIFICATION	3.726214651526444E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9998995298080391	WITHOUT_CLASSIFICATION	1.0047019196092023E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9996665226307396	WITHOUT_CLASSIFICATION	3.334773692604053E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9996819393534214	WITHOUT_CLASSIFICATION	3.1806064657858386E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999256191434458	WITHOUT_CLASSIFICATION	7.438085655421895E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999032059744887	WITHOUT_CLASSIFICATION	9.679402551129193E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999826091346682	WITHOUT_CLASSIFICATION	1.7390865331798076E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999826091346682	WITHOUT_CLASSIFICATION	1.7390865331798076E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9928718904752231	WITHOUT_CLASSIFICATION	0.007128109524776952	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9996413381054927	WITHOUT_CLASSIFICATION	3.586618945072661E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999479300475673	WITHOUT_CLASSIFICATION	5.206995243263353E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9979817976433732	WITHOUT_CLASSIFICATION	0.002018202356626725	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9997928727105767	WITHOUT_CLASSIFICATION	2.071272894233675E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979788976046664	WITHOUT_CLASSIFICATION	0.0020211023953336056	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9997864150040628	WITHOUT_CLASSIFICATION	2.135849959370695E-4	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9981096952565321	WITHOUT_CLASSIFICATION	0.001890304743467868	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999229477877423	WITHOUT_CLASSIFICATION	7.705221225778422E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9993749349171523	WITHOUT_CLASSIFICATION	6.250650828477248E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999357365505536	WITHOUT_CLASSIFICATION	6.426344944637385E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997841608478583	WITHOUT_CLASSIFICATION	2.1583915214184562E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999820953150492	WITHOUT_CLASSIFICATION	1.7904684950816954E-5	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9960420526243642	WITHOUT_CLASSIFICATION	0.003957947375635806	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9998793720999744	WITHOUT_CLASSIFICATION	1.2062790002573984E-4	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999398680296496	WITHOUT_CLASSIFICATION	6.013197035030501E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999992566931846	WITHOUT_CLASSIFICATION	7.433068154621634E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9159176330508877	WITHOUT_CLASSIFICATION	0.0840823669491122	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9902619710037238	WITHOUT_CLASSIFICATION	0.009738028996276293	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9998424329302971	WITHOUT_CLASSIFICATION	1.5756706970297078E-4	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9998635646716046	WITHOUT_CLASSIFICATION	1.364353283953789E-4	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999712701593734	WITHOUT_CLASSIFICATION	2.872984062665021E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9997118373922663	WITHOUT_CLASSIFICATION	2.8816260773375206E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998844233156606	WITHOUT_CLASSIFICATION	1.1557668433935815E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995739150844494	WITHOUT_CLASSIFICATION	4.260849155506584E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999077193816803	WITHOUT_CLASSIFICATION	9.228061831966628E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9975383290817752	WITHOUT_CLASSIFICATION	0.0024616709182247016	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9980824063759756	WITHOUT_CLASSIFICATION	0.0019175936240245406	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999464091256823	WITHOUT_CLASSIFICATION	5.359087431760683E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9740715741309879	WITHOUT_CLASSIFICATION	0.02592842586901207	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9991194804625163	WITHOUT_CLASSIFICATION	8.805195374836876E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999385403567761	WITHOUT_CLASSIFICATION	6.145964322395775E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9998427595636996	WITHOUT_CLASSIFICATION	1.5724043630029738E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995739150844494	WITHOUT_CLASSIFICATION	4.260849155506584E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9979207403416689	WITHOUT_CLASSIFICATION	0.002079259658331021	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9991460572552074	WITHOUT_CLASSIFICATION	8.539427447925262E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999570910642023	WITHOUT_CLASSIFICATION	4.290893579779469E-5	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999758276168023	WITHOUT_CLASSIFICATION	2.4172383197728477E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9976446372130585	WITHOUT_CLASSIFICATION	0.002355362786941492	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999960338772235	WITHOUT_CLASSIFICATION	3.9661227764653096E-6	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999583779316644	WITHOUT_CLASSIFICATION	4.1622068335706054E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999144628498492	WITHOUT_CLASSIFICATION	8.553715015078966E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999941821175069	WITHOUT_CLASSIFICATION	5.8178824930754085E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9997663326692044	WITHOUT_CLASSIFICATION	2.3366733079557253E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9997663326692044	WITHOUT_CLASSIFICATION	2.3366733079557253E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9997663326692044	WITHOUT_CLASSIFICATION	2.3366733079557253E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999002882688752	WITHOUT_CLASSIFICATION	9.971173112479427E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9995188936763638	WITHOUT_CLASSIFICATION	4.811063236361914E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9998474554457587	WITHOUT_CLASSIFICATION	1.5254455424124714E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.99997967559005	WITHOUT_CLASSIFICATION	2.0324409950147343E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999973891114768	WITHOUT_CLASSIFICATION	2.6108885231330255E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999214800520432	WITHOUT_CLASSIFICATION	7.85199479569159E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.988922550904261	WITHOUT_CLASSIFICATION	0.011077449095739	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9997569250556948	WITHOUT_CLASSIFICATION	2.4307494430514783E-4	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.99962857591615	WITHOUT_CLASSIFICATION	3.714240838500902E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999994048577365	WITHOUT_CLASSIFICATION	5.951422635649783E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999509426845835	WITHOUT_CLASSIFICATION	4.90573154165004E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999808231843368	WITHOUT_CLASSIFICATION	1.9176815663204663E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999753000545538	WITHOUT_CLASSIFICATION	2.4699945446192024E-5	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999995774588359	WITHOUT_CLASSIFICATION	4.2254116404105E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.999956085012931	WITHOUT_CLASSIFICATION	4.391498706912153E-5	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.999940703664032	WITHOUT_CLASSIFICATION	5.929633596799094E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9998037820926885	WITHOUT_CLASSIFICATION	1.9621790731143586E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9986880102740048	WITHOUT_CLASSIFICATION	0.001311989725995244	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999281262414124	WITHOUT_CLASSIFICATION	7.187375858755874E-5	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999772001651271	WITHOUT_CLASSIFICATION	2.27998348729632E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9997679375545745	WITHOUT_CLASSIFICATION	2.3206244542555517E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9998138753486028	WITHOUT_CLASSIFICATION	1.8612465139720123E-4	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9998917527466892	WITHOUT_CLASSIFICATION	1.0824725331082561E-4	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9998917527466892	WITHOUT_CLASSIFICATION	1.0824725331082561E-4	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999071673441956	WITHOUT_CLASSIFICATION	9.283265580437564E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999267665908274	WITHOUT_CLASSIFICATION	7.323340917260091E-5	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999478285141855	WITHOUT_CLASSIFICATION	5.2171485814540275E-5	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.999941209143779	WITHOUT_CLASSIFICATION	5.87908562209968E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999967307948306	WITHOUT_CLASSIFICATION	3.2692051692824325E-6	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.999991863119218	WITHOUT_CLASSIFICATION	8.136880782054804E-6	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999704669582018	WITHOUT_CLASSIFICATION	2.9533041798177285E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999855553010932	WITHOUT_CLASSIFICATION	1.4444698906770766E-5	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9996237485325069	WITHOUT_CLASSIFICATION	3.7625146749308545E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9963518650681834	WITHOUT_CLASSIFICATION	0.0036481349318164434	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.998187839394363	WITHOUT_CLASSIFICATION	0.0018121606056370708	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999408049847133	WITHOUT_CLASSIFICATION	5.919501528666077E-5	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9998101607252545	WITHOUT_CLASSIFICATION	1.8983927474540874E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999781416558048	WITHOUT_CLASSIFICATION	2.1858344195195403E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999781416558048	WITHOUT_CLASSIFICATION	2.1858344195195403E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9998235651521741	WITHOUT_CLASSIFICATION	1.7643484782583647E-4	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9970190693836402	WITHOUT_CLASSIFICATION	0.0029809306163598418	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999740314818505	WITHOUT_CLASSIFICATION	2.5968518149561898E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999838121371368	WITHOUT_CLASSIFICATION	1.6187862863174865E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999838121371368	WITHOUT_CLASSIFICATION	1.6187862863174865E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999838121371368	WITHOUT_CLASSIFICATION	1.6187862863174865E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999103132589847	WITHOUT_CLASSIFICATION	8.968674101527805E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999998616823937	WITHOUT_CLASSIFICATION	1.383176063415732E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9995652338286867	WITHOUT_CLASSIFICATION	4.347661713132884E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998106232402294	WITHOUT_CLASSIFICATION	1.8937675977057664E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999784125922587	WITHOUT_CLASSIFICATION	2.158740774135011E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9997911919294196	WITHOUT_CLASSIFICATION	2.0880807058043884E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.999875286468283	WITHOUT_CLASSIFICATION	1.2471353171699553E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999373395981611	WITHOUT_CLASSIFICATION	6.26604018388563E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999373395981611	WITHOUT_CLASSIFICATION	6.26604018388563E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999860850183955	WITHOUT_CLASSIFICATION	1.3914981604498923E-5	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9998690429449657	WITHOUT_CLASSIFICATION	1.3095705503429384E-4	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9970743408345925	WITHOUT_CLASSIFICATION	0.0029256591654075507	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.998705472448636	WITHOUT_CLASSIFICATION	0.0012945275513640228	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999958688883175	WITHOUT_CLASSIFICATION	4.131111682578331E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9995953195360803	WITHOUT_CLASSIFICATION	4.046804639197823E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997531476362965	WITHOUT_CLASSIFICATION	2.468523637034363E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999683417783569	WITHOUT_CLASSIFICATION	3.165822164310635E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999717101396162	WITHOUT_CLASSIFICATION	2.8289860383945258E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999952666004532	WITHOUT_CLASSIFICATION	4.733399546771434E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993963410623681	WITHOUT_CLASSIFICATION	6.036589376318887E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999151220582332	WITHOUT_CLASSIFICATION	8.48779417667345E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999201971293118	WITHOUT_CLASSIFICATION	7.980287068831086E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999048529756371	WITHOUT_CLASSIFICATION	9.514702436294927E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997548390289177	WITHOUT_CLASSIFICATION	2.451609710822536E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999483260866093	WITHOUT_CLASSIFICATION	5.167391339069559E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9994433256180527	WITHOUT_CLASSIFICATION	5.566743819473115E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999450161385338	WITHOUT_CLASSIFICATION	5.4983861466299004E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999989962221942	WITHOUT_CLASSIFICATION	1.003777805727222E-6	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9996986616239412	WITHOUT_CLASSIFICATION	3.013383760587668E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.996587403890647	WITHOUT_CLASSIFICATION	0.0034125961093528666	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.999968464701887	WITHOUT_CLASSIFICATION	3.1535298112977184E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999302124906241	WITHOUT_CLASSIFICATION	6.978750937597654E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9967429390346567	WITHOUT_CLASSIFICATION	0.003257060965343208	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999991895350872	WITHOUT_CLASSIFICATION	8.104649129098172E-7	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999072296759048	WITHOUT_CLASSIFICATION	9.277032409519321E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999072296759048	WITHOUT_CLASSIFICATION	9.277032409519321E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9954620807300574	WITHOUT_CLASSIFICATION	0.004537919269942559	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.999864409554722	WITHOUT_CLASSIFICATION	1.355904452779984E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9982897986313677	WITHOUT_CLASSIFICATION	0.0017102013686322185	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9995053549577252	WITHOUT_CLASSIFICATION	4.946450422748307E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9995053549577252	WITHOUT_CLASSIFICATION	4.946450422748307E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999916958578929	WITHOUT_CLASSIFICATION	8.304142106994733E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9995275075670681	WITHOUT_CLASSIFICATION	4.724924329319653E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.99999154020863	WITHOUT_CLASSIFICATION	8.459791370071167E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999927160587306	WITHOUT_CLASSIFICATION	7.283941269317419E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9889605810440989	WITHOUT_CLASSIFICATION	0.011039418955901206	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999917616647452	WITHOUT_CLASSIFICATION	8.23833525480695E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999916413486994	WITHOUT_CLASSIFICATION	8.358651300526501E-6	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999584492611496	WITHOUT_CLASSIFICATION	4.1550738850431886E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9987099963747617	WITHOUT_CLASSIFICATION	0.001290003625238343	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999134918868	WITHOUT_CLASSIFICATION	8.650811328766146E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999858118707005	WITHOUT_CLASSIFICATION	1.4188129299681702E-5	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999526048919366	WITHOUT_CLASSIFICATION	4.7395108063488885E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999997588704451	WITHOUT_CLASSIFICATION	2.4112955486190093E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9996983937541551	WITHOUT_CLASSIFICATION	3.016062458448187E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999760976693304	WITHOUT_CLASSIFICATION	2.390233066962505E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999626183378174	WITHOUT_CLASSIFICATION	3.738166218260091E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9997988493049398	WITHOUT_CLASSIFICATION	2.0115069506026963E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999716047915169	WITHOUT_CLASSIFICATION	2.8395208483020756E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9995359979151565	WITHOUT_CLASSIFICATION	4.6400208484361714E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999935331298142	WITHOUT_CLASSIFICATION	6.4668701858367055E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998404438635545	WITHOUT_CLASSIFICATION	1.5955613644541133E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9990520492415588	WITHOUT_CLASSIFICATION	9.479507584411583E-4	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999413506014595	WITHOUT_CLASSIFICATION	5.864939854055936E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9996311216126156	WITHOUT_CLASSIFICATION	3.6887838738441486E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9996311216126156	WITHOUT_CLASSIFICATION	3.6887838738441486E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9996311216126156	WITHOUT_CLASSIFICATION	3.6887838738441486E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9996311216126156	WITHOUT_CLASSIFICATION	3.6887838738441486E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999366884572477	WITHOUT_CLASSIFICATION	6.331154275227789E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9998221951549443	WITHOUT_CLASSIFICATION	1.778048450556356E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999487559131436	WITHOUT_CLASSIFICATION	5.124408685647876E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999487559131436	WITHOUT_CLASSIFICATION	5.124408685647876E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999487559131436	WITHOUT_CLASSIFICATION	5.124408685647876E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9998427375711453	WITHOUT_CLASSIFICATION	1.5726242885478415E-4	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9997526246764604	WITHOUT_CLASSIFICATION	2.4737532353953293E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9997843767489766	WITHOUT_CLASSIFICATION	2.1562325102357122E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9997843767489766	WITHOUT_CLASSIFICATION	2.1562325102357122E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9993921827840485	WITHOUT_CLASSIFICATION	6.078172159515963E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9993921827840485	WITHOUT_CLASSIFICATION	6.078172159515963E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997232660199344	WITHOUT_CLASSIFICATION	2.767339800655193E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997232660199344	WITHOUT_CLASSIFICATION	2.767339800655193E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999921119807164	WITHOUT_CLASSIFICATION	7.888019283640934E-6	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9995985424509903	WITHOUT_CLASSIFICATION	4.014575490096769E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9996228809654576	WITHOUT_CLASSIFICATION	3.7711903454250555E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.999929756971146	WITHOUT_CLASSIFICATION	7.024302885392353E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9996198583358961	WITHOUT_CLASSIFICATION	3.801416641039546E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9996484162054352	WITHOUT_CLASSIFICATION	3.5158379456480315E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9996273785348474	WITHOUT_CLASSIFICATION	3.726214651526444E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999739815997145	WITHOUT_CLASSIFICATION	2.6018400285472985E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9996204591180337	WITHOUT_CLASSIFICATION	3.79540881966437E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998989215742328	WITHOUT_CLASSIFICATION	1.0107842576723146E-4	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.999810925125734	WITHOUT_CLASSIFICATION	1.8907487426593519E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999278846193586	WITHOUT_CLASSIFICATION	7.21153806414138E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9998997137864124	WITHOUT_CLASSIFICATION	1.0028621358765419E-4	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9998547066639932	WITHOUT_CLASSIFICATION	1.4529333600689853E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998928077952253	WITHOUT_CLASSIFICATION	1.071922047747523E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998939334214413	WITHOUT_CLASSIFICATION	1.0606657855879337E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999051641070492	WITHOUT_CLASSIFICATION	9.483589295075671E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999169870881458	WITHOUT_CLASSIFICATION	8.301291185418935E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.999191172519544	WITHOUT_CLASSIFICATION	8.088274804558988E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9997611063268683	WITHOUT_CLASSIFICATION	2.3889367313162E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9991076820137469	WITHOUT_CLASSIFICATION	8.923179862530234E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999275443669634	WITHOUT_CLASSIFICATION	7.245563303659101E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9996377686801066	WITHOUT_CLASSIFICATION	3.6223131989343723E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9996377686801066	WITHOUT_CLASSIFICATION	3.6223131989343723E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9996377686801066	WITHOUT_CLASSIFICATION	3.6223131989343723E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9996377686801066	WITHOUT_CLASSIFICATION	3.6223131989343723E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.999894162107206	WITHOUT_CLASSIFICATION	1.0583789279397031E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.999995753024327	WITHOUT_CLASSIFICATION	4.246975673058969E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999935972612997	WITHOUT_CLASSIFICATION	6.402738700356284E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999447979116065	WITHOUT_CLASSIFICATION	5.5202088393449255E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999447979116065	WITHOUT_CLASSIFICATION	5.5202088393449255E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9992195788012391	WITHOUT_CLASSIFICATION	7.804211987607403E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9989666857965996	WITHOUT_CLASSIFICATION	0.001033314203400423	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9989666857965996	WITHOUT_CLASSIFICATION	0.001033314203400423	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999630712250378	WITHOUT_CLASSIFICATION	3.692877496221474E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999713320180811	WITHOUT_CLASSIFICATION	2.8667981918940415E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999679740638764	WITHOUT_CLASSIFICATION	3.2025936123593064E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999902651993348	WITHOUT_CLASSIFICATION	9.734800665338158E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998978123939125	WITHOUT_CLASSIFICATION	1.0218760608749257E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9932866753008256	WITHOUT_CLASSIFICATION	0.006713324699174375	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9932866753008256	WITHOUT_CLASSIFICATION	0.006713324699174375	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999354162727184	WITHOUT_CLASSIFICATION	6.458372728159518E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999511624400436	WITHOUT_CLASSIFICATION	4.8837559956372435E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999031137066092	WITHOUT_CLASSIFICATION	9.688629339078345E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999965836715647	WITHOUT_CLASSIFICATION	3.4163284351831774E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.999654650837785	WITHOUT_CLASSIFICATION	3.453491622148682E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999726626360459	WITHOUT_CLASSIFICATION	2.733736395402949E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999726626360459	WITHOUT_CLASSIFICATION	2.733736395402949E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999726626360459	WITHOUT_CLASSIFICATION	2.733736395402949E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999832962897501	WITHOUT_CLASSIFICATION	1.670371024984967E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999832962897501	WITHOUT_CLASSIFICATION	1.670371024984967E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999168559878138	WITHOUT_CLASSIFICATION	8.314401218621825E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999891939993099	WITHOUT_CLASSIFICATION	1.0806000690161686E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999891939993099	WITHOUT_CLASSIFICATION	1.0806000690161686E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999361208021801	WITHOUT_CLASSIFICATION	6.38791978198535E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999514863069402	WITHOUT_CLASSIFICATION	4.8513693059881825E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9979817976433732	WITHOUT_CLASSIFICATION	0.002018202356626725	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99984281110701	WITHOUT_CLASSIFICATION	1.5718889298993967E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.983540937252234	WITHOUT_CLASSIFICATION	0.01645906274776604	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.983540937252234	WITHOUT_CLASSIFICATION	0.01645906274776604	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9963741977024085	WITHOUT_CLASSIFICATION	0.00362580229759145	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998896926110942	WITHOUT_CLASSIFICATION	1.103073889057437E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999945402477938	WITHOUT_CLASSIFICATION	5.459752206203308E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988672047243365	WITHOUT_CLASSIFICATION	0.0011327952756634491	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994786198413652	WITHOUT_CLASSIFICATION	5.213801586349139E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999574035068918	WITHOUT_CLASSIFICATION	4.2596493108226544E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.996686652850273	WITHOUT_CLASSIFICATION	0.0033133471497270583	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9961267402496146	WITHOUT_CLASSIFICATION	0.0038732597503854066	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998202303579014	WITHOUT_CLASSIFICATION	1.7976964209858733E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999513881717101	WITHOUT_CLASSIFICATION	4.8611828289933365E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997844264394512	WITHOUT_CLASSIFICATION	2.155735605488567E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9996994778454836	WITHOUT_CLASSIFICATION	3.0052215451638597E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999821828522699	WITHOUT_CLASSIFICATION	1.781714773015112E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999904902576094	WITHOUT_CLASSIFICATION	9.509742390521342E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.999975251422971	WITHOUT_CLASSIFICATION	2.4748577029012806E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9975382873847164	WITHOUT_CLASSIFICATION	0.002461712615283594	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9997370406059678	WITHOUT_CLASSIFICATION	2.629593940322068E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999338245864434	WITHOUT_CLASSIFICATION	6.617541355660949E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9994820316361811	WITHOUT_CLASSIFICATION	5.179683638188864E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999165120002994	WITHOUT_CLASSIFICATION	8.348799970055999E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9990216262366441	WITHOUT_CLASSIFICATION	9.783737633558382E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999696366536777	WITHOUT_CLASSIFICATION	3.0363346322307376E-4	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9994023468227143	WITHOUT_CLASSIFICATION	5.976531772855605E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9994971073708983	WITHOUT_CLASSIFICATION	5.028926291017253E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998714671597645	WITHOUT_CLASSIFICATION	1.2853284023563077E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9990296823450153	WITHOUT_CLASSIFICATION	9.703176549847523E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9991286746010982	WITHOUT_CLASSIFICATION	8.713253989017205E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9991286746010982	WITHOUT_CLASSIFICATION	8.713253989017205E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999259863352333	WITHOUT_CLASSIFICATION	7.401366476673074E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998206180289219	WITHOUT_CLASSIFICATION	1.7938197107812126E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999249743950603	WITHOUT_CLASSIFICATION	7.502560493966216E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996343194501207	WITHOUT_CLASSIFICATION	3.65680549879322E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999577434361177	WITHOUT_CLASSIFICATION	4.2256563882234325E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9998097635649325	WITHOUT_CLASSIFICATION	1.902364350674145E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.999783023594367	WITHOUT_CLASSIFICATION	2.1697640563310248E-4	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999801635222226	WITHOUT_CLASSIFICATION	1.9836477777288152E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999572840991323	WITHOUT_CLASSIFICATION	4.271590086768738E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994860209702793	WITHOUT_CLASSIFICATION	5.139790297207496E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994860209702793	WITHOUT_CLASSIFICATION	5.139790297207496E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998901308895092	WITHOUT_CLASSIFICATION	1.0986911049077895E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999674130197407	WITHOUT_CLASSIFICATION	3.258698025937224E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9990619390212737	WITHOUT_CLASSIFICATION	9.38060978726349E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9998635646716046	WITHOUT_CLASSIFICATION	1.364353283953789E-4	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999943572647955	WITHOUT_CLASSIFICATION	5.642735204528008E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.99964662461563	WITHOUT_CLASSIFICATION	3.5337538437000697E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9997370406059678	WITHOUT_CLASSIFICATION	2.629593940322068E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999016619812197	WITHOUT_CLASSIFICATION	9.833801878029139E-5	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999769058527401	WITHOUT_CLASSIFICATION	2.3094147259891363E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9998318190449139	WITHOUT_CLASSIFICATION	1.6818095508601495E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999462001227375	WITHOUT_CLASSIFICATION	5.379987726256272E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.999989615684499	WITHOUT_CLASSIFICATION	1.0384315501117628E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999573283824708	WITHOUT_CLASSIFICATION	4.2671617529199155E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999813047002897	WITHOUT_CLASSIFICATION	1.8695299710313574E-5	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9998036221725985	WITHOUT_CLASSIFICATION	1.9637782740140056E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9972540237754564	WITHOUT_CLASSIFICATION	0.002745976224543517	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999444178571281	WITHOUT_CLASSIFICATION	5.558214287182538E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999617926767975	WITHOUT_CLASSIFICATION	3.8207323202419975E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999444178571281	WITHOUT_CLASSIFICATION	5.558214287182538E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999617926767975	WITHOUT_CLASSIFICATION	3.8207323202419975E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9995378740450495	WITHOUT_CLASSIFICATION	4.62125954950508E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9987480026482751	WITHOUT_CLASSIFICATION	0.001251997351724883	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9997931051741302	WITHOUT_CLASSIFICATION	2.0689482586973583E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9936025988279756	WITHOUT_CLASSIFICATION	0.006397401172024464	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997059355678408	WITHOUT_CLASSIFICATION	2.9406443215921615E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.99986194690578	WITHOUT_CLASSIFICATION	1.3805309421996816E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999784125922587	WITHOUT_CLASSIFICATION	2.158740774135011E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999281611951016	WITHOUT_CLASSIFICATION	7.183880489839899E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9997045707051266	WITHOUT_CLASSIFICATION	2.9542929487340905E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999036489938069	WITHOUT_CLASSIFICATION	9.635100619308345E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999719821687012	WITHOUT_CLASSIFICATION	2.8017831298857465E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999167936882439	WITHOUT_CLASSIFICATION	8.320631175599575E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9993667476315743	WITHOUT_CLASSIFICATION	6.332523684257439E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9991275030262874	WITHOUT_CLASSIFICATION	8.724969737127077E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.99986194690578	WITHOUT_CLASSIFICATION	1.3805309421996816E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999006145043223	WITHOUT_CLASSIFICATION	9.938549567765323E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999121317814563	WITHOUT_CLASSIFICATION	8.786821854364349E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999787433032534	WITHOUT_CLASSIFICATION	2.1256696746601303E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999448865317503	WITHOUT_CLASSIFICATION	5.5113468249662066E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993674625627237	WITHOUT_CLASSIFICATION	6.325374372763617E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9927926334604251	WITHOUT_CLASSIFICATION	0.007207366539574776	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993674625627237	WITHOUT_CLASSIFICATION	6.325374372763617E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993674625627237	WITHOUT_CLASSIFICATION	6.325374372763617E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993717606001391	WITHOUT_CLASSIFICATION	6.282393998608463E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994964628106728	WITHOUT_CLASSIFICATION	5.035371893272105E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999113410153513	WITHOUT_CLASSIFICATION	8.865898464870924E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999800911002581	WITHOUT_CLASSIFICATION	1.9908899741849974E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993674625627237	WITHOUT_CLASSIFICATION	6.325374372763617E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999746108427873	WITHOUT_CLASSIFICATION	2.53891572126635E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999201015015847	WITHOUT_CLASSIFICATION	7.989849841528735E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999802281906177	WITHOUT_CLASSIFICATION	1.9771809382260105E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9994189544207516	WITHOUT_CLASSIFICATION	5.81045579248469E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9998813621348416	WITHOUT_CLASSIFICATION	1.1863786515842604E-4	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999852820776375	WITHOUT_CLASSIFICATION	1.471792236253898E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9992946527696381	WITHOUT_CLASSIFICATION	7.053472303618915E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999832483985726	WITHOUT_CLASSIFICATION	1.6751601427423515E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9997752816690442	WITHOUT_CLASSIFICATION	2.247183309558603E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999201015015847	WITHOUT_CLASSIFICATION	7.989849841528735E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999802281906177	WITHOUT_CLASSIFICATION	1.9771809382260105E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9994189544207516	WITHOUT_CLASSIFICATION	5.81045579248469E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9998216189338978	WITHOUT_CLASSIFICATION	1.7838106610228716E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9990137237560881	WITHOUT_CLASSIFICATION	9.862762439118596E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998776440129584	WITHOUT_CLASSIFICATION	1.223559870415727E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9997379357689249	WITHOUT_CLASSIFICATION	2.620642310751501E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999391881960932	WITHOUT_CLASSIFICATION	6.0811803906903493E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.999568768786654	WITHOUT_CLASSIFICATION	4.312312133459407E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9998939153281445	WITHOUT_CLASSIFICATION	1.0608467185548322E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999321435171071	WITHOUT_CLASSIFICATION	6.785648289290136E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9998787582785508	WITHOUT_CLASSIFICATION	1.2124172144917682E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.998518828507382	WITHOUT_CLASSIFICATION	0.001481171492617942	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9998532361049095	WITHOUT_CLASSIFICATION	1.4676389509062367E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999401416166128	WITHOUT_CLASSIFICATION	5.98583833871627E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999605225784861	WITHOUT_CLASSIFICATION	3.947742151399472E-5	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9893582189392482	WITHOUT_CLASSIFICATION	0.01064178106075188	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999592558928284	WITHOUT_CLASSIFICATION	4.074410717167056E-5	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9989509551030488	WITHOUT_CLASSIFICATION	0.0010490448969512696	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.999953983824502	WITHOUT_CLASSIFICATION	4.6016175498025523E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999524276578516	WITHOUT_CLASSIFICATION	4.757234214827694E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999490250344916	WITHOUT_CLASSIFICATION	5.097496550849611E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9524615649615056	WITHOUT_CLASSIFICATION	0.04753843503849447	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9845376984961651	WITHOUT_CLASSIFICATION	0.015462301503834774	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9972768991519698	WITHOUT_CLASSIFICATION	0.0027231008480301743	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9996129538738373	WITHOUT_CLASSIFICATION	3.870461261626574E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.999922428914658	WITHOUT_CLASSIFICATION	7.757108534204374E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9975249756730332	WITHOUT_CLASSIFICATION	0.002475024326966788	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999465491264693	WITHOUT_CLASSIFICATION	5.3450873530678515E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.999975527382043	WITHOUT_CLASSIFICATION	2.4472617956934717E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9988674856396708	WITHOUT_CLASSIFICATION	0.0011325143603292723	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9873120028853497	WITHOUT_CLASSIFICATION	0.012687997114650339	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.996373991156212	WITHOUT_CLASSIFICATION	0.003626008843787987	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9971145880412278	WITHOUT_CLASSIFICATION	0.0028854119587722587	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9994953990692593	WITHOUT_CLASSIFICATION	5.046009307406037E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9995953590495026	WITHOUT_CLASSIFICATION	4.046409504973952E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999098600886063	WITHOUT_CLASSIFICATION	9.013991139374944E-5	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9970244039880654	WITHOUT_CLASSIFICATION	0.0029755960119346985	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9998990716399264	WITHOUT_CLASSIFICATION	1.0092836007358474E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9886140258696582	WITHOUT_CLASSIFICATION	0.011385974130341724	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.7488490676100801	WITHOUT_CLASSIFICATION	0.25115093238992	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9996517838417953	WITHOUT_CLASSIFICATION	3.482161582046398E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999696366536777	WITHOUT_CLASSIFICATION	3.0363346322307376E-4	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9997167947869006	WITHOUT_CLASSIFICATION	2.8320521309943667E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9998587346797281	WITHOUT_CLASSIFICATION	1.4126532027200432E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999636928453453	WITHOUT_CLASSIFICATION	3.630715465476263E-5	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9998175220699784	WITHOUT_CLASSIFICATION	1.824779300214594E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9830050739735272	WITHOUT_CLASSIFICATION	0.01699492602647269	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998531652320806	WITHOUT_CLASSIFICATION	1.4683476791944544E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9830050739735272	WITHOUT_CLASSIFICATION	0.01699492602647269	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999439223644128	WITHOUT_CLASSIFICATION	5.607763558728221E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.999011577275204	WITHOUT_CLASSIFICATION	9.884227247960251E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.999898497776932	WITHOUT_CLASSIFICATION	1.0150222306802148E-4	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999862196207697	WITHOUT_CLASSIFICATION	1.3780379230214468E-5	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9998628838059296	WITHOUT_CLASSIFICATION	1.371161940704132E-4	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999691312971806	WITHOUT_CLASSIFICATION	3.086870281952476E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999397967314443	WITHOUT_CLASSIFICATION	6.0203268555651444E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999474355482311	WITHOUT_CLASSIFICATION	5.256445176897465E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999916930883886	WITHOUT_CLASSIFICATION	8.306911611365278E-6	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.999984468570892	WITHOUT_CLASSIFICATION	1.5531429108110614E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999372248433345	WITHOUT_CLASSIFICATION	6.277515666551735E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9993169545792963	WITHOUT_CLASSIFICATION	6.830454207036805E-4	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999679723281162	WITHOUT_CLASSIFICATION	3.2027671883853E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999927899045555	WITHOUT_CLASSIFICATION	7.210095444417352E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999508613081461	WITHOUT_CLASSIFICATION	4.9138691853915306E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999468457961255	WITHOUT_CLASSIFICATION	5.315420387444685E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.999511326982695	WITHOUT_CLASSIFICATION	4.886730173051008E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9998450878281236	WITHOUT_CLASSIFICATION	1.549121718763229E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999857891629509	WITHOUT_CLASSIFICATION	1.4210837049254159E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9987160589453427	WITHOUT_CLASSIFICATION	0.0012839410546573408	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999384329064908	WITHOUT_CLASSIFICATION	6.156709350931244E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999025224595697	WITHOUT_CLASSIFICATION	9.747754043030393E-5	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999855201956674	WITHOUT_CLASSIFICATION	1.4479804332596237E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999852921950749	WITHOUT_CLASSIFICATION	1.4707804924977616E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.999752162629565	WITHOUT_CLASSIFICATION	2.4783737043492876E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9998590546240326	WITHOUT_CLASSIFICATION	1.4094537596731063E-4	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999749648883941	WITHOUT_CLASSIFICATION	2.5035111605936668E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9982344211484634	WITHOUT_CLASSIFICATION	0.0017655788515367023	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.999597153597798	WITHOUT_CLASSIFICATION	4.028464022020656E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.993921037055291	WITHOUT_CLASSIFICATION	0.006078962944709077	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9998955228784601	WITHOUT_CLASSIFICATION	1.0447712153995881E-4	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.999992294281678	WITHOUT_CLASSIFICATION	7.705718321979045E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999155851617284	WITHOUT_CLASSIFICATION	8.441483827158387E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999636253377855	WITHOUT_CLASSIFICATION	3.637466221455318E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999535003481147	WITHOUT_CLASSIFICATION	4.6499651885258654E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.999883722549111	WITHOUT_CLASSIFICATION	1.162774508890295E-4	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9998654107528894	WITHOUT_CLASSIFICATION	1.3458924711057306E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999636928453453	WITHOUT_CLASSIFICATION	3.630715465476263E-5	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9998923298189114	WITHOUT_CLASSIFICATION	1.0767018108864002E-4	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.999950284780931	WITHOUT_CLASSIFICATION	4.97152190691297E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999309605674768	WITHOUT_CLASSIFICATION	6.903943252330786E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9996342467876912	WITHOUT_CLASSIFICATION	3.657532123087337E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998531652320806	WITHOUT_CLASSIFICATION	1.4683476791944544E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9998485125891741	WITHOUT_CLASSIFICATION	1.5148741082590198E-4	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999583798517566	WITHOUT_CLASSIFICATION	4.16201482434268E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999683662274894	WITHOUT_CLASSIFICATION	3.163377251057202E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999146602664793	WITHOUT_CLASSIFICATION	8.533973352074584E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9995772323433811	WITHOUT_CLASSIFICATION	4.2276765661885754E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9995456918754504	WITHOUT_CLASSIFICATION	4.543081245496661E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9996568420931181	WITHOUT_CLASSIFICATION	3.4315790688191225E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9998706997219531	WITHOUT_CLASSIFICATION	1.2930027804702215E-4	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999490094192446	WITHOUT_CLASSIFICATION	5.0990580755504476E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9944565398973183	WITHOUT_CLASSIFICATION	0.005543460102681746	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9994023468227143	WITHOUT_CLASSIFICATION	5.976531772855605E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999651425814347	WITHOUT_CLASSIFICATION	3.4857418565304096E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999153418384852	WITHOUT_CLASSIFICATION	8.465816151475266E-5	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9998565275109048	WITHOUT_CLASSIFICATION	1.434724890951919E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9998444941871322	WITHOUT_CLASSIFICATION	1.555058128679403E-4	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9998857942341502	WITHOUT_CLASSIFICATION	1.1420576584966573E-4	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9996040276210248	WITHOUT_CLASSIFICATION	3.9597237897513705E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999632208594729	WITHOUT_CLASSIFICATION	3.6779140527197905E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999492925553599	WITHOUT_CLASSIFICATION	5.0707444640145965E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999067102458667	WITHOUT_CLASSIFICATION	9.328975413329259E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999772983014552	WITHOUT_CLASSIFICATION	2.2701698544822936E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999492925553599	WITHOUT_CLASSIFICATION	5.0707444640145965E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999465425375976	WITHOUT_CLASSIFICATION	5.345746240242104E-5	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999637662590031	WITHOUT_CLASSIFICATION	3.623374099688165E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9997682514226877	WITHOUT_CLASSIFICATION	2.317485773123552E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.999948354144121	WITHOUT_CLASSIFICATION	5.164585587910839E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999741195169936	WITHOUT_CLASSIFICATION	2.5880483006399406E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999843770315628	WITHOUT_CLASSIFICATION	1.562296843721243E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999501713919943	WITHOUT_CLASSIFICATION	4.982860800571699E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999652252780687	WITHOUT_CLASSIFICATION	3.477472193121741E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999651928549982	WITHOUT_CLASSIFICATION	3.4807145001832326E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.999970778143986	WITHOUT_CLASSIFICATION	2.9221856013909228E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999609266233421	WITHOUT_CLASSIFICATION	3.9073376657898546E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999295216886508	WITHOUT_CLASSIFICATION	7.047831134920033E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999950706932417	WITHOUT_CLASSIFICATION	4.929306758302836E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999661613074723	WITHOUT_CLASSIFICATION	3.3838692527710596E-5	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9998767977683789	WITHOUT_CLASSIFICATION	1.2320223162101096E-4	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.996486020596638	WITHOUT_CLASSIFICATION	0.0035139794033618786	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9998330818249963	WITHOUT_CLASSIFICATION	1.669181750036172E-4	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9996622550677818	WITHOUT_CLASSIFICATION	3.377449322181502E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999596594003247	WITHOUT_CLASSIFICATION	4.0340599675232075E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999600571620176	WITHOUT_CLASSIFICATION	3.994283798226369E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.999985299730113	WITHOUT_CLASSIFICATION	1.4700269887030274E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9998801349424031	WITHOUT_CLASSIFICATION	1.1986505759692378E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998015592737851	WITHOUT_CLASSIFICATION	1.9844072621490435E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998015592737851	WITHOUT_CLASSIFICATION	1.9844072621490435E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9997804304692339	WITHOUT_CLASSIFICATION	2.1956953076610394E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999565008634954	WITHOUT_CLASSIFICATION	4.3499136504569555E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999689673441152	WITHOUT_CLASSIFICATION	3.103265588467207E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.998265412519474	WITHOUT_CLASSIFICATION	0.0017345874805260527	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9996382062590935	WITHOUT_CLASSIFICATION	3.6179374090644997E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.998414349335777	WITHOUT_CLASSIFICATION	0.0015856506642230267	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999286178121886	WITHOUT_CLASSIFICATION	7.1382187811412E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999786287037976	WITHOUT_CLASSIFICATION	2.1371296202275302E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999220132321606	WITHOUT_CLASSIFICATION	7.79867678394948E-5	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9937457126353918	WITHOUT_CLASSIFICATION	0.006254287364608164	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999874818225988	WITHOUT_CLASSIFICATION	1.2518177401154667E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999665305939597	WITHOUT_CLASSIFICATION	3.346940604032768E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9998093231213527	WITHOUT_CLASSIFICATION	1.9067687864729343E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999148371481117	WITHOUT_CLASSIFICATION	8.516285188831261E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999459514445024	WITHOUT_CLASSIFICATION	5.404855549751337E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999400879946887	WITHOUT_CLASSIFICATION	5.9912005311242973E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999988832156064	WITHOUT_CLASSIFICATION	1.1167843936700995E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9996721171202377	WITHOUT_CLASSIFICATION	3.2788287976223213E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9996721171202377	WITHOUT_CLASSIFICATION	3.2788287976223213E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999684963340049	WITHOUT_CLASSIFICATION	3.150366599516138E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999684963340049	WITHOUT_CLASSIFICATION	3.150366599516138E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9997603410553606	WITHOUT_CLASSIFICATION	2.396589446394418E-4	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998709181533703	WITHOUT_CLASSIFICATION	1.290818466297578E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9997822364410609	WITHOUT_CLASSIFICATION	2.1776355893907544E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.999930417568929	WITHOUT_CLASSIFICATION	6.958243107102738E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999049268874534	WITHOUT_CLASSIFICATION	9.507311254664281E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9998474554457587	WITHOUT_CLASSIFICATION	1.5254455424124714E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999267822019787	WITHOUT_CLASSIFICATION	7.321779802121432E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999325849137598	WITHOUT_CLASSIFICATION	6.741508624022044E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999545187824163	WITHOUT_CLASSIFICATION	4.5481217583845385E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999545187824163	WITHOUT_CLASSIFICATION	4.5481217583845385E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999545187824163	WITHOUT_CLASSIFICATION	4.5481217583845385E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999398819060603	WITHOUT_CLASSIFICATION	6.01180939395748E-5	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.999879721228612	WITHOUT_CLASSIFICATION	1.2027877138800718E-4	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999702503717739	WITHOUT_CLASSIFICATION	2.9749628226153952E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999408930095273	WITHOUT_CLASSIFICATION	5.9106990472732375E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999410780603708	WITHOUT_CLASSIFICATION	5.892193962922782E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.999885654477589	WITHOUT_CLASSIFICATION	1.1434552241097694E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9998717084515374	WITHOUT_CLASSIFICATION	1.2829154846254705E-4	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9995420214174355	WITHOUT_CLASSIFICATION	4.579785825645885E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999506110130962	WITHOUT_CLASSIFICATION	4.938898690374018E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998133803582641	WITHOUT_CLASSIFICATION	1.866196417360132E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9993236983318137	WITHOUT_CLASSIFICATION	6.763016681863332E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9995135979579751	WITHOUT_CLASSIFICATION	4.8640204202484875E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999509426845835	WITHOUT_CLASSIFICATION	4.90573154165004E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9998170138627908	WITHOUT_CLASSIFICATION	1.829861372091906E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999474359031614	WITHOUT_CLASSIFICATION	5.256409683861988E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999433744409199	WITHOUT_CLASSIFICATION	5.6625559080231865E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999942069183099	WITHOUT_CLASSIFICATION	5.793081690125948E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9997864413648218	WITHOUT_CLASSIFICATION	2.1355863517839198E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999029869129544	WITHOUT_CLASSIFICATION	9.70130870455853E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999758865860197	WITHOUT_CLASSIFICATION	2.411341398035692E-5	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999686810328731	WITHOUT_CLASSIFICATION	3.1318967126900646E-5	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9998037820926885	WITHOUT_CLASSIFICATION	1.9621790731143586E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9998037820926885	WITHOUT_CLASSIFICATION	1.9621790731143586E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9998037820926885	WITHOUT_CLASSIFICATION	1.9621790731143586E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9998037820926885	WITHOUT_CLASSIFICATION	1.9621790731143586E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9998997287588571	WITHOUT_CLASSIFICATION	1.0027124114283144E-4	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999281262414124	WITHOUT_CLASSIFICATION	7.187375858755874E-5	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999789720973505	WITHOUT_CLASSIFICATION	2.102790264949866E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9998819553258078	WITHOUT_CLASSIFICATION	1.1804467419216268E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999281262414124	WITHOUT_CLASSIFICATION	7.187375858755874E-5	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9996741822790364	WITHOUT_CLASSIFICATION	3.2581772096371164E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9995747068070467	WITHOUT_CLASSIFICATION	4.252931929532091E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9995737072432247	WITHOUT_CLASSIFICATION	4.2629275677525584E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.999475464008337	WITHOUT_CLASSIFICATION	5.245359916630405E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9984952414280805	WITHOUT_CLASSIFICATION	0.0015047585719194984	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9998969860413088	WITHOUT_CLASSIFICATION	1.0301395869117236E-4	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.999475464008337	WITHOUT_CLASSIFICATION	5.245359916630405E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999721299881067	WITHOUT_CLASSIFICATION	2.7870011893254972E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999721299881067	WITHOUT_CLASSIFICATION	2.7870011893254972E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9998917527466892	WITHOUT_CLASSIFICATION	1.0824725331082561E-4	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9998377472403374	WITHOUT_CLASSIFICATION	1.622527596627491E-4	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9998917527466892	WITHOUT_CLASSIFICATION	1.0824725331082561E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998798642292196	WITHOUT_CLASSIFICATION	1.2013577078036704E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999849846901456	WITHOUT_CLASSIFICATION	1.5015309854248124E-5	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9998333120593598	WITHOUT_CLASSIFICATION	1.6668794064018708E-4	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999525909667022	WITHOUT_CLASSIFICATION	4.7409033297915545E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.999940459091492	WITHOUT_CLASSIFICATION	5.954090850795725E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999784465663095	WITHOUT_CLASSIFICATION	2.1553433690451185E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999847281034696	WITHOUT_CLASSIFICATION	1.5271896530332225E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999412413296557	WITHOUT_CLASSIFICATION	5.875867034422273E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9995216589916242	WITHOUT_CLASSIFICATION	4.7834100837584637E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.999550528760904	WITHOUT_CLASSIFICATION	4.4947123909601133E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999758064005382	WITHOUT_CLASSIFICATION	2.4193599461870107E-5	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999952259985231	WITHOUT_CLASSIFICATION	4.77400147680701E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9997454971681788	WITHOUT_CLASSIFICATION	2.545028318210954E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9997963757103591	WITHOUT_CLASSIFICATION	2.0362428964091194E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998798642292196	WITHOUT_CLASSIFICATION	1.2013577078036704E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9998798642292196	WITHOUT_CLASSIFICATION	1.2013577078036704E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999244146375785	WITHOUT_CLASSIFICATION	7.558536242139756E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9986557991527812	WITHOUT_CLASSIFICATION	0.0013442008472187997	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999855553010932	WITHOUT_CLASSIFICATION	1.4444698906770766E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997041686866424	WITHOUT_CLASSIFICATION	2.9583131335759723E-4	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997041686866424	WITHOUT_CLASSIFICATION	2.9583131335759723E-4	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999691571383795	WITHOUT_CLASSIFICATION	3.084286162052699E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999934737547954	WITHOUT_CLASSIFICATION	6.526245204642897E-6	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9996183692538336	WITHOUT_CLASSIFICATION	3.816307461663423E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9998180762839641	WITHOUT_CLASSIFICATION	1.8192371603593222E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9954659972370813	WITHOUT_CLASSIFICATION	0.004534002762918691	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9994319497612354	WITHOUT_CLASSIFICATION	5.680502387646294E-4	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9998580297546823	WITHOUT_CLASSIFICATION	1.4197024531769348E-4	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9998962482624616	WITHOUT_CLASSIFICATION	1.0375173753835996E-4	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9982386023687022	WITHOUT_CLASSIFICATION	0.0017613976312977648	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9996536820802038	WITHOUT_CLASSIFICATION	3.46317919796255E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999328478816975	WITHOUT_CLASSIFICATION	6.715211830245102E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999872569653856	WITHOUT_CLASSIFICATION	1.274303461439636E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9954659972370813	WITHOUT_CLASSIFICATION	0.004534002762918691	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9998923412556061	WITHOUT_CLASSIFICATION	1.0765874439395985E-4	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999438011049719	WITHOUT_CLASSIFICATION	5.61988950280019E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9998644981383572	WITHOUT_CLASSIFICATION	1.355018616428603E-4	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.997194136999577	WITHOUT_CLASSIFICATION	0.0028058630004230813	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.997194136999577	WITHOUT_CLASSIFICATION	0.0028058630004230813	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996474199639065	WITHOUT_CLASSIFICATION	3.525800360934519E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999249743950603	WITHOUT_CLASSIFICATION	7.502560493966216E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996343194501207	WITHOUT_CLASSIFICATION	3.65680549879322E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999420189629077	WITHOUT_CLASSIFICATION	5.798103709232707E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999420189629077	WITHOUT_CLASSIFICATION	5.798103709232707E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9998235651521741	WITHOUT_CLASSIFICATION	1.7643484782583647E-4	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999335489237005	WITHOUT_CLASSIFICATION	6.645107629953102E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999540865492533	WITHOUT_CLASSIFICATION	4.5913450746736017E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9975939982848507	WITHOUT_CLASSIFICATION	0.002406001715149195	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999838121371368	WITHOUT_CLASSIFICATION	1.6187862863174865E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999513226273606	WITHOUT_CLASSIFICATION	4.867737263927834E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999684963340049	WITHOUT_CLASSIFICATION	3.150366599516138E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999794822653334	WITHOUT_CLASSIFICATION	2.0517734666581954E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998701624014922	WITHOUT_CLASSIFICATION	1.2983759850769975E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9996657578334408	WITHOUT_CLASSIFICATION	3.3424216655926963E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999482956771701	WITHOUT_CLASSIFICATION	5.170432282979131E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999585483577706	WITHOUT_CLASSIFICATION	4.145164222934966E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999579383937353	WITHOUT_CLASSIFICATION	4.206160626468379E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.999886460326451	WITHOUT_CLASSIFICATION	1.1353967354901192E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9996468515303084	WITHOUT_CLASSIFICATION	3.5314846969165266E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999669194692791	WITHOUT_CLASSIFICATION	3.308053072094606E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9998106232402294	WITHOUT_CLASSIFICATION	1.8937675977057664E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999332443260193	WITHOUT_CLASSIFICATION	6.675567398067019E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999332443260193	WITHOUT_CLASSIFICATION	6.675567398067019E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.999894425420152	WITHOUT_CLASSIFICATION	1.0557457984792478E-4	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999373395981611	WITHOUT_CLASSIFICATION	6.26604018388563E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999373395981611	WITHOUT_CLASSIFICATION	6.26604018388563E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9997361597670469	WITHOUT_CLASSIFICATION	2.638402329531835E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999444178571281	WITHOUT_CLASSIFICATION	5.558214287182538E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998730295028602	WITHOUT_CLASSIFICATION	1.2697049713973667E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9998652326490237	WITHOUT_CLASSIFICATION	1.3476735097638816E-4	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999784125922587	WITHOUT_CLASSIFICATION	2.158740774135011E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999506840967417	WITHOUT_CLASSIFICATION	4.931590325827222E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999784125922587	WITHOUT_CLASSIFICATION	2.158740774135011E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999959404497888	WITHOUT_CLASSIFICATION	4.059550211193478E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999876855811503	WITHOUT_CLASSIFICATION	1.2314418849678918E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9997066933150389	WITHOUT_CLASSIFICATION	2.933066849611207E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9996468515303084	WITHOUT_CLASSIFICATION	3.5314846969165266E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.999507863894507	WITHOUT_CLASSIFICATION	4.921361054929826E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.99986194690578	WITHOUT_CLASSIFICATION	1.3805309421996816E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999064506752843	WITHOUT_CLASSIFICATION	9.354932471567702E-5	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9983695380871357	WITHOUT_CLASSIFICATION	0.0016304619128642717	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9998486634765859	WITHOUT_CLASSIFICATION	1.5133652341408002E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.999983352923196	WITHOUT_CLASSIFICATION	1.6647076804035843E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9902018334012712	WITHOUT_CLASSIFICATION	0.009798166598728794	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9902018334012712	WITHOUT_CLASSIFICATION	0.009798166598728794	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.999421500223441	WITHOUT_CLASSIFICATION	5.78499776559117E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999331857623687	WITHOUT_CLASSIFICATION	6.681423763131458E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999959404497888	WITHOUT_CLASSIFICATION	4.059550211193478E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999959404497888	WITHOUT_CLASSIFICATION	4.059550211193478E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999251463571511	WITHOUT_CLASSIFICATION	7.48536428488439E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9981519686960658	WITHOUT_CLASSIFICATION	0.0018480313039340968	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9994581338295426	WITHOUT_CLASSIFICATION	5.418661704574341E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.999438526212737	WITHOUT_CLASSIFICATION	5.614737872630658E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9998988918873164	WITHOUT_CLASSIFICATION	1.0110811268356004E-4	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999355643840183	WITHOUT_CLASSIFICATION	6.443561598164671E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999457219498442	WITHOUT_CLASSIFICATION	5.42780501558148E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999731371587156	WITHOUT_CLASSIFICATION	2.6862841284392385E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999417322512275	WITHOUT_CLASSIFICATION	5.8267748772587997E-5	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9998365819482665	WITHOUT_CLASSIFICATION	1.6341805173347812E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999355643840183	WITHOUT_CLASSIFICATION	6.443561598164671E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997220527542395	WITHOUT_CLASSIFICATION	2.779472457604806E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997220527542395	WITHOUT_CLASSIFICATION	2.779472457604806E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999751802933868	WITHOUT_CLASSIFICATION	2.481970661311291E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9998501639025398	WITHOUT_CLASSIFICATION	1.4983609746022184E-4	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999143281368329	WITHOUT_CLASSIFICATION	8.567186316707944E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999143281368329	WITHOUT_CLASSIFICATION	8.567186316707944E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999786512486939	WITHOUT_CLASSIFICATION	2.1348751306179853E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997763809658298	WITHOUT_CLASSIFICATION	2.236190341703724E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997059355678408	WITHOUT_CLASSIFICATION	2.9406443215921615E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999748645762317	WITHOUT_CLASSIFICATION	2.5135423768250226E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9994433256180527	WITHOUT_CLASSIFICATION	5.566743819473115E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9983798313807414	WITHOUT_CLASSIFICATION	0.0016201686192585851	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999450161385338	WITHOUT_CLASSIFICATION	5.4983861466299004E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999479122543956	WITHOUT_CLASSIFICATION	5.2087745604334775E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999808193643743	WITHOUT_CLASSIFICATION	1.9180635625577413E-5	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999694014480284	WITHOUT_CLASSIFICATION	3.0598551971510085E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999264135529353	WITHOUT_CLASSIFICATION	7.358644706465588E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981031891420085	WITHOUT_CLASSIFICATION	0.0018968108579915423	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9997763809658298	WITHOUT_CLASSIFICATION	2.236190341703724E-4	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999451846873915	WITHOUT_CLASSIFICATION	5.4815312608471935E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999989962221942	WITHOUT_CLASSIFICATION	1.003777805727222E-6	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999896197046725	WITHOUT_CLASSIFICATION	1.0380295327503767E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999565932828249	WITHOUT_CLASSIFICATION	4.340671717508721E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999636227807629	WITHOUT_CLASSIFICATION	3.6377219237019226E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998364488778895	WITHOUT_CLASSIFICATION	1.635511221104827E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9975896850418955	WITHOUT_CLASSIFICATION	0.002410314958104497	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999925522315697	WITHOUT_CLASSIFICATION	7.447768430314176E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999847037627253	WITHOUT_CLASSIFICATION	1.5296237274739614E-5	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9998174487320797	WITHOUT_CLASSIFICATION	1.8255126792023578E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9997034470461517	WITHOUT_CLASSIFICATION	2.9655295384831766E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9993622333028938	WITHOUT_CLASSIFICATION	6.377666971062168E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999817081601151	WITHOUT_CLASSIFICATION	1.8291839884906877E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.998207675993883	WITHOUT_CLASSIFICATION	0.001792324006116914	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9990752637506117	WITHOUT_CLASSIFICATION	9.247362493882615E-4	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999216474584546	WITHOUT_CLASSIFICATION	7.835254154540006E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999111336592088	WITHOUT_CLASSIFICATION	8.886634079120161E-5	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999431105695844	WITHOUT_CLASSIFICATION	5.68894304156649E-5	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999907924424422	WITHOUT_CLASSIFICATION	9.20755755786498E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.998251140247926	WITHOUT_CLASSIFICATION	0.0017488597520739569	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999318677735775	WITHOUT_CLASSIFICATION	6.813222642258893E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9996524036479912	WITHOUT_CLASSIFICATION	3.475963520086588E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999302124906241	WITHOUT_CLASSIFICATION	6.978750937597654E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9998073882879902	WITHOUT_CLASSIFICATION	1.9261171200976945E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9995549177818526	WITHOUT_CLASSIFICATION	4.4508221814732867E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999671695591185	WITHOUT_CLASSIFICATION	3.283044088150715E-5	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999321713692995	WITHOUT_CLASSIFICATION	6.782863070046E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9994937249959676	WITHOUT_CLASSIFICATION	5.06275004032436E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.997425347161147	WITHOUT_CLASSIFICATION	0.002574652838853177	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9970571961008436	WITHOUT_CLASSIFICATION	0.0029428038991562416	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9998732441511475	WITHOUT_CLASSIFICATION	1.267558488524897E-4	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999944973723258	WITHOUT_CLASSIFICATION	5.502627674205083E-6	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.999848027190508	WITHOUT_CLASSIFICATION	1.5197280949184807E-4	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9997166658632483	WITHOUT_CLASSIFICATION	2.833341367516655E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999478241197062	WITHOUT_CLASSIFICATION	5.2175880293776954E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9966819278709454	WITHOUT_CLASSIFICATION	0.00331807212905446	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9998564176862291	WITHOUT_CLASSIFICATION	1.435823137708272E-4	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9998073882879902	WITHOUT_CLASSIFICATION	1.9261171200976945E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999379619269888	WITHOUT_CLASSIFICATION	6.203807301117884E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999961354186597	WITHOUT_CLASSIFICATION	3.864581340260072E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999961354186597	WITHOUT_CLASSIFICATION	3.864581340260072E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999714907608842	WITHOUT_CLASSIFICATION	2.8509239115687656E-5	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999714907608842	WITHOUT_CLASSIFICATION	2.8509239115687656E-5	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9955239490298963	WITHOUT_CLASSIFICATION	0.0044760509701037236	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.999937185529607	WITHOUT_CLASSIFICATION	6.281447039293647E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999723580253117	WITHOUT_CLASSIFICATION	2.7641974688294663E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.999866923074138	WITHOUT_CLASSIFICATION	1.330769258620178E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9994591012548989	WITHOUT_CLASSIFICATION	5.408987451010569E-4	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9998409685721056	WITHOUT_CLASSIFICATION	1.590314278943771E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9996621032793617	WITHOUT_CLASSIFICATION	3.3789672063824815E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9998864210275448	WITHOUT_CLASSIFICATION	1.1357897245530664E-4	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999671384050365	WITHOUT_CLASSIFICATION	3.286159496349229E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999635091551412	WITHOUT_CLASSIFICATION	3.649084485869733E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9993892580293138	WITHOUT_CLASSIFICATION	6.107419706863098E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9997966439135311	WITHOUT_CLASSIFICATION	2.0335608646905752E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.998218690061669	WITHOUT_CLASSIFICATION	0.0017813099383310388	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.999948232011814	WITHOUT_CLASSIFICATION	5.176798818591339E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999091884447011	WITHOUT_CLASSIFICATION	9.08115552989195E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999064506752843	WITHOUT_CLASSIFICATION	9.354932471567702E-5	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9981933050851296	WITHOUT_CLASSIFICATION	0.0018066949148704571	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998905377335557	WITHOUT_CLASSIFICATION	1.0946226644424716E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9998905377335557	WITHOUT_CLASSIFICATION	1.0946226644424716E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9971587633793867	WITHOUT_CLASSIFICATION	0.002841236620613336	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9997854804170327	WITHOUT_CLASSIFICATION	2.1451958296719108E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9982897986313677	WITHOUT_CLASSIFICATION	0.0017102013686322185	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9997826161232481	WITHOUT_CLASSIFICATION	2.173838767518495E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995841199764823	WITHOUT_CLASSIFICATION	4.158800235176956E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995841199764823	WITHOUT_CLASSIFICATION	4.158800235176956E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9981741219772073	WITHOUT_CLASSIFICATION	0.0018258780227926813	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999979808937802	WITHOUT_CLASSIFICATION	2.0191062197012697E-6	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999827452652263	WITHOUT_CLASSIFICATION	1.725473477363932E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999525369713457	WITHOUT_CLASSIFICATION	4.746302865432783E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9991614920326072	WITHOUT_CLASSIFICATION	8.385079673928683E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9997826161232481	WITHOUT_CLASSIFICATION	2.173838767518495E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995841199764823	WITHOUT_CLASSIFICATION	4.158800235176956E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9995841199764823	WITHOUT_CLASSIFICATION	4.158800235176956E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9981741219772073	WITHOUT_CLASSIFICATION	0.0018258780227926813	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9997221353378815	WITHOUT_CLASSIFICATION	2.778646621186095E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.999965948840431	WITHOUT_CLASSIFICATION	3.405115956897021E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9996807443730409	WITHOUT_CLASSIFICATION	3.1925562695911744E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999776751473006	WITHOUT_CLASSIFICATION	2.232485269944446E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.979505756330208	WITHOUT_CLASSIFICATION	0.02049424366979206	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9844650285400708	WITHOUT_CLASSIFICATION	0.015534971459929063	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999759270876071	WITHOUT_CLASSIFICATION	2.4072912392924263E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997212086386955	WITHOUT_CLASSIFICATION	2.787913613044672E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997212086386955	WITHOUT_CLASSIFICATION	2.787913613044672E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9995062241577234	WITHOUT_CLASSIFICATION	4.937758422765182E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9974348082012524	WITHOUT_CLASSIFICATION	0.0025651917987476575	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999159221187728	WITHOUT_CLASSIFICATION	8.407788122724179E-5	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997009849625818	WITHOUT_CLASSIFICATION	2.990150374183159E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9997776847417299	WITHOUT_CLASSIFICATION	2.2231525827015415E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998376602056209	WITHOUT_CLASSIFICATION	1.6233979437904565E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9998095902207631	WITHOUT_CLASSIFICATION	1.9040977923683058E-4	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999286941252641	WITHOUT_CLASSIFICATION	7.1305874735869E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9930603476748531	WITHOUT_CLASSIFICATION	0.006939652325146889	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9998578741737735	WITHOUT_CLASSIFICATION	1.421258262265042E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999850184558319	WITHOUT_CLASSIFICATION	1.4981544168122924E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9989848934759299	WITHOUT_CLASSIFICATION	0.0010151065240700833	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9997545344383604	WITHOUT_CLASSIFICATION	2.4546556163958905E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9972718709232359	WITHOUT_CLASSIFICATION	0.002728129076764166	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9997886131369026	WITHOUT_CLASSIFICATION	2.1138686309741563E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9996914969038585	WITHOUT_CLASSIFICATION	3.085030961414262E-4	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9960204980929567	WITHOUT_CLASSIFICATION	0.003979501907043307	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9997674818567677	WITHOUT_CLASSIFICATION	2.325181432321978E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999530894916916	WITHOUT_CLASSIFICATION	4.6910508308371593E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9983233808698337	WITHOUT_CLASSIFICATION	0.0016766191301662199	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9990652591333116	WITHOUT_CLASSIFICATION	9.347408666883687E-4	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9996951863620583	WITHOUT_CLASSIFICATION	3.048136379416403E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9992181948411499	WITHOUT_CLASSIFICATION	7.818051588500434E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9997907768464683	WITHOUT_CLASSIFICATION	2.0922315353174062E-4	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999506084195263	WITHOUT_CLASSIFICATION	4.939158047369532E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9998975395254092	WITHOUT_CLASSIFICATION	1.024604745908535E-4	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9954286238732865	WITHOUT_CLASSIFICATION	0.004571376126713548	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999957991900994	WITHOUT_CLASSIFICATION	4.200809900573336E-6	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999958360672044	WITHOUT_CLASSIFICATION	4.163932795526471E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9996744873856753	WITHOUT_CLASSIFICATION	3.2551261432464185E-4	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999927675925508	WITHOUT_CLASSIFICATION	7.232407449117721E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999813549753778	WITHOUT_CLASSIFICATION	1.864502462218349E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999813549753778	WITHOUT_CLASSIFICATION	1.864502462218349E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999032591687245	WITHOUT_CLASSIFICATION	9.67408312755881E-5	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999092667512496	WITHOUT_CLASSIFICATION	9.073324875036244E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999503855282905	WITHOUT_CLASSIFICATION	4.9614471709415584E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999308000529132	WITHOUT_CLASSIFICATION	6.919994708684275E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9998311129269832	WITHOUT_CLASSIFICATION	1.6888707301676464E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999816553487726	WITHOUT_CLASSIFICATION	1.834465122736472E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998730295028602	WITHOUT_CLASSIFICATION	1.2697049713973667E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9994485330504611	WITHOUT_CLASSIFICATION	5.514669495388762E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9977335721810062	WITHOUT_CLASSIFICATION	0.0022664278189938737	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9990131663848649	WITHOUT_CLASSIFICATION	9.868336151350155E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9998695271626172	WITHOUT_CLASSIFICATION	1.3047283738285004E-4	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9996895826793012	WITHOUT_CLASSIFICATION	3.1041732069874036E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998730295028602	WITHOUT_CLASSIFICATION	1.2697049713973667E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998730295028602	WITHOUT_CLASSIFICATION	1.2697049713973667E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999951410029084	WITHOUT_CLASSIFICATION	4.858997091489637E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999703962883401	WITHOUT_CLASSIFICATION	2.9603711659830395E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9990725229974949	WITHOUT_CLASSIFICATION	9.274770025051402E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999019886574771	WITHOUT_CLASSIFICATION	9.801134252279883E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999134918868	WITHOUT_CLASSIFICATION	8.650811328766146E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.999873986572416	WITHOUT_CLASSIFICATION	1.2601342758394683E-4	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9998732528336993	WITHOUT_CLASSIFICATION	1.2674716630064442E-4	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9998732528336993	WITHOUT_CLASSIFICATION	1.2674716630064442E-4	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9998732528336993	WITHOUT_CLASSIFICATION	1.2674716630064442E-4	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9996844242908718	WITHOUT_CLASSIFICATION	3.1557570912819265E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999077701236064	WITHOUT_CLASSIFICATION	9.222987639356845E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9980919914679287	WITHOUT_CLASSIFICATION	0.0019080085320712736	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999373952039681	WITHOUT_CLASSIFICATION	6.260479603202202E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999335668448276	WITHOUT_CLASSIFICATION	6.643315517234601E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9994047657643339	WITHOUT_CLASSIFICATION	5.95234235665997E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999218977361424	WITHOUT_CLASSIFICATION	7.810226385764714E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9998456007093217	WITHOUT_CLASSIFICATION	1.5439929067815163E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9980919914679287	WITHOUT_CLASSIFICATION	0.0019080085320712736	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999794677245819	WITHOUT_CLASSIFICATION	2.053227541805401E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9996108520222597	WITHOUT_CLASSIFICATION	3.8914797774026175E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999012654262902	WITHOUT_CLASSIFICATION	9.873457370981001E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.999961040915659	WITHOUT_CLASSIFICATION	3.895908434091223E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9988461672279799	WITHOUT_CLASSIFICATION	0.0011538327720200677	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.999696977656576	WITHOUT_CLASSIFICATION	3.030223434240638E-4	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999791593282152	WITHOUT_CLASSIFICATION	2.0840671784679E-5	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9993153198823712	WITHOUT_CLASSIFICATION	6.846801176287409E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9998941429166824	WITHOUT_CLASSIFICATION	1.0585708331748304E-4	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9997890815552388	WITHOUT_CLASSIFICATION	2.1091844476108141E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9998941429166824	WITHOUT_CLASSIFICATION	1.0585708331748304E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.999405869189428	WITHOUT_CLASSIFICATION	5.941308105720279E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9995653616374004	WITHOUT_CLASSIFICATION	4.3463836259970216E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999143373029303	WITHOUT_CLASSIFICATION	8.566269706965363E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999160230957079	WITHOUT_CLASSIFICATION	8.397690429199436E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999066232732953	WITHOUT_CLASSIFICATION	9.337672670465226E-5	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999968315104425	WITHOUT_CLASSIFICATION	3.1684895574491125E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9958798436367221	WITHOUT_CLASSIFICATION	0.004120156363277812	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9981394703871849	WITHOUT_CLASSIFICATION	0.001860529612815236	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9996357576649817	WITHOUT_CLASSIFICATION	3.642423350182401E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9988379817950256	WITHOUT_CLASSIFICATION	0.0011620182049744772	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9991804427427824	WITHOUT_CLASSIFICATION	8.195572572176624E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9998713966405137	WITHOUT_CLASSIFICATION	1.2860335948629314E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.998992937349432	WITHOUT_CLASSIFICATION	0.0010070626505679747	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.967841437349158	WITHOUT_CLASSIFICATION	0.03215856265084205	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9996900730469145	WITHOUT_CLASSIFICATION	3.0992695308550193E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9996983937541551	WITHOUT_CLASSIFICATION	3.016062458448187E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9996442453246316	WITHOUT_CLASSIFICATION	3.557546753684934E-4	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9833585578368453	WITHOUT_CLASSIFICATION	0.016641442163154642	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9998994263017068	WITHOUT_CLASSIFICATION	1.0057369829309826E-4	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9998879992167098	WITHOUT_CLASSIFICATION	1.1200078329029741E-4	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.999965530439238	WITHOUT_CLASSIFICATION	3.44695607620501E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9998162330859703	WITHOUT_CLASSIFICATION	1.8376691402971956E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997900707294277	WITHOUT_CLASSIFICATION	2.099292705723378E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9958798436367221	WITHOUT_CLASSIFICATION	0.004120156363277812	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9997390907574182	WITHOUT_CLASSIFICATION	2.6090924258186934E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9997390907574182	WITHOUT_CLASSIFICATION	2.6090924258186934E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999626183378174	WITHOUT_CLASSIFICATION	3.738166218260091E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999757671952939	WITHOUT_CLASSIFICATION	2.4232804706011198E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999757671952939	WITHOUT_CLASSIFICATION	2.4232804706011198E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9997621439266864	WITHOUT_CLASSIFICATION	2.3785607331366186E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9997621439266864	WITHOUT_CLASSIFICATION	2.3785607331366186E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9913197140248143	WITHOUT_CLASSIFICATION	0.00868028597518565	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999959130720497	WITHOUT_CLASSIFICATION	4.0869279503038435E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9997988493049398	WITHOUT_CLASSIFICATION	2.0115069506026963E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9997832167898006	WITHOUT_CLASSIFICATION	2.1678321019934164E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999516870279566	WITHOUT_CLASSIFICATION	4.831297204349092E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9997544995445127	WITHOUT_CLASSIFICATION	2.455004554873752E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999855254537016	WITHOUT_CLASSIFICATION	1.447454629838876E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999706181022627	WITHOUT_CLASSIFICATION	2.938189773723151E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999056569481535	WITHOUT_CLASSIFICATION	9.43430518466064E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999716047915169	WITHOUT_CLASSIFICATION	2.8395208483020756E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9997874226281683	WITHOUT_CLASSIFICATION	2.1257737183175062E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999466163024728	WITHOUT_CLASSIFICATION	5.338369752718466E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9996333952135125	WITHOUT_CLASSIFICATION	3.6660478648753127E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9996333952135125	WITHOUT_CLASSIFICATION	3.6660478648753127E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9995359979151565	WITHOUT_CLASSIFICATION	4.6400208484361714E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9986187807058176	WITHOUT_CLASSIFICATION	0.001381219294182479	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999928562175018	WITHOUT_CLASSIFICATION	7.143782498222326E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9993517861740576	WITHOUT_CLASSIFICATION	6.482138259423435E-4	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999642045216898	WITHOUT_CLASSIFICATION	3.579547831020107E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999356330554061	WITHOUT_CLASSIFICATION	6.436694459395137E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999497248240085	WITHOUT_CLASSIFICATION	5.027517599162458E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9998361603315462	WITHOUT_CLASSIFICATION	1.6383966845379984E-4	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.99983150714935	WITHOUT_CLASSIFICATION	1.6849285064999598E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9997692316733935	WITHOUT_CLASSIFICATION	2.307683266065562E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999968607145914	WITHOUT_CLASSIFICATION	3.139285408679645E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999541802240032	WITHOUT_CLASSIFICATION	4.581977599686997E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999837810657989	WITHOUT_CLASSIFICATION	1.621893420115147E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.999929457397431	WITHOUT_CLASSIFICATION	7.054260256906188E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9998016311548618	WITHOUT_CLASSIFICATION	1.9836884513824585E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999712203506032	WITHOUT_CLASSIFICATION	2.877964939686866E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999228131733293	WITHOUT_CLASSIFICATION	7.71868266706799E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.99993105826385	WITHOUT_CLASSIFICATION	6.89417361500525E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9997444644077478	WITHOUT_CLASSIFICATION	2.555355922522255E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999690632160947	WITHOUT_CLASSIFICATION	3.0936783905315284E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9997047702265588	WITHOUT_CLASSIFICATION	2.95229773441245E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999718046502437	WITHOUT_CLASSIFICATION	2.8195349756270882E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999321921571609	WITHOUT_CLASSIFICATION	6.780784283912179E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999156607230445	WITHOUT_CLASSIFICATION	8.433927695554309E-5	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999156607230445	WITHOUT_CLASSIFICATION	8.433927695554309E-5	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999185170395818	WITHOUT_CLASSIFICATION	8.148296041813536E-5	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.999975297683042	WITHOUT_CLASSIFICATION	2.4702316957963102E-5	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999858402530531	WITHOUT_CLASSIFICATION	1.415974694701128E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9998721679785642	WITHOUT_CLASSIFICATION	1.2783202143584478E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999101359074211	WITHOUT_CLASSIFICATION	8.986409257887453E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9970840046086918	WITHOUT_CLASSIFICATION	0.0029159953913081506	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9980909499814369	WITHOUT_CLASSIFICATION	0.0019090500185631977	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999840374574777	WITHOUT_CLASSIFICATION	1.5962542522296048E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.999218654476808	WITHOUT_CLASSIFICATION	7.813455231919851E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9995615060176827	WITHOUT_CLASSIFICATION	4.3849398231742297E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999475153150511	WITHOUT_CLASSIFICATION	5.248468494880643E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9996311216126156	WITHOUT_CLASSIFICATION	3.6887838738441486E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9998887976242872	WITHOUT_CLASSIFICATION	1.1120237571290927E-4	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999339423448822	WITHOUT_CLASSIFICATION	6.605765511784582E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9998725337382001	WITHOUT_CLASSIFICATION	1.274662617999541E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9995281617533619	WITHOUT_CLASSIFICATION	4.718382466381749E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999366884572477	WITHOUT_CLASSIFICATION	6.331154275227789E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998136398283538	WITHOUT_CLASSIFICATION	1.8636017164620132E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9998771194466544	WITHOUT_CLASSIFICATION	1.2288055334569743E-4	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9994681964329268	WITHOUT_CLASSIFICATION	5.318035670731014E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999824227798899	WITHOUT_CLASSIFICATION	1.7577220110050495E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9990986079212714	WITHOUT_CLASSIFICATION	9.013920787287487E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9995281617533619	WITHOUT_CLASSIFICATION	4.718382466381749E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998136398283538	WITHOUT_CLASSIFICATION	1.8636017164620132E-4	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999363513030093	WITHOUT_CLASSIFICATION	6.364869699070271E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9998221951549443	WITHOUT_CLASSIFICATION	1.778048450556356E-4	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.999928794923274	WITHOUT_CLASSIFICATION	7.120507672608375E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999130226503203	WITHOUT_CLASSIFICATION	8.697734967967324E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.996541398559226	WITHOUT_CLASSIFICATION	0.0034586014407740635	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999384831356547	WITHOUT_CLASSIFICATION	6.151686434529838E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999521522204308	WITHOUT_CLASSIFICATION	4.784777956928899E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9998880263090503	WITHOUT_CLASSIFICATION	1.1197369094965546E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999487559131436	WITHOUT_CLASSIFICATION	5.124408685647876E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999487559131436	WITHOUT_CLASSIFICATION	5.124408685647876E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9996512595202083	WITHOUT_CLASSIFICATION	3.4874047979175347E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9997566081771154	WITHOUT_CLASSIFICATION	2.4339182288453718E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9998910710402814	WITHOUT_CLASSIFICATION	1.0892895971856051E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999513226273606	WITHOUT_CLASSIFICATION	4.867737263927834E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999513226273606	WITHOUT_CLASSIFICATION	4.867737263927834E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999249743950603	WITHOUT_CLASSIFICATION	7.502560493966216E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9996343194501207	WITHOUT_CLASSIFICATION	3.65680549879322E-4	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999585483577706	WITHOUT_CLASSIFICATION	4.145164222934966E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999579383937353	WITHOUT_CLASSIFICATION	4.206160626468379E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9997671022478515	WITHOUT_CLASSIFICATION	2.328977521484343E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.999892004025294	WITHOUT_CLASSIFICATION	1.0799597470598763E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999580543720954	WITHOUT_CLASSIFICATION	4.194562790454825E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998705363103833	WITHOUT_CLASSIFICATION	1.29463689616765E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999895685931403	WITHOUT_CLASSIFICATION	1.0431406859646565E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999969584864885	WITHOUT_CLASSIFICATION	3.0415135114430766E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999925030648077	WITHOUT_CLASSIFICATION	7.496935192350976E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.998619917731843	WITHOUT_CLASSIFICATION	0.0013800822681570132	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999585483577706	WITHOUT_CLASSIFICATION	4.145164222934966E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999579383937353	WITHOUT_CLASSIFICATION	4.206160626468379E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997212086386955	WITHOUT_CLASSIFICATION	2.787913613044672E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998418251738188	WITHOUT_CLASSIFICATION	1.5817482618126345E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999643885741416	WITHOUT_CLASSIFICATION	3.561142585840333E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9991756426387943	WITHOUT_CLASSIFICATION	8.243573612057432E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9991756426387943	WITHOUT_CLASSIFICATION	8.243573612057432E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9994913565243936	WITHOUT_CLASSIFICATION	5.086434756062973E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9994913565243936	WITHOUT_CLASSIFICATION	5.086434756062973E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999939767186757	WITHOUT_CLASSIFICATION	6.0232813242969035E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999116725933934	WITHOUT_CLASSIFICATION	8.832740660663482E-5	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999109069165373	WITHOUT_CLASSIFICATION	8.909308346280849E-5	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999314194872496	WITHOUT_CLASSIFICATION	6.858051275044454E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9998005693771793	WITHOUT_CLASSIFICATION	1.9943062282060814E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9998308059573106	WITHOUT_CLASSIFICATION	1.691940426894199E-4	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999457393101664	WITHOUT_CLASSIFICATION	5.426068983364762E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997232660199344	WITHOUT_CLASSIFICATION	2.767339800655193E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999921119807164	WITHOUT_CLASSIFICATION	7.888019283640934E-6	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999921119807164	WITHOUT_CLASSIFICATION	7.888019283640934E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995377700965995	WITHOUT_CLASSIFICATION	4.6222990340044975E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995377700965995	WITHOUT_CLASSIFICATION	4.6222990340044975E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995377700965995	WITHOUT_CLASSIFICATION	4.6222990340044975E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9998894875511942	WITHOUT_CLASSIFICATION	1.1051244880575421E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9998894875511942	WITHOUT_CLASSIFICATION	1.1051244880575421E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9998894875511942	WITHOUT_CLASSIFICATION	1.1051244880575421E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999875386769173	WITHOUT_CLASSIFICATION	1.2461323082798074E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999875386769173	WITHOUT_CLASSIFICATION	1.2461323082798074E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.999574299068189	WITHOUT_CLASSIFICATION	4.257009318110544E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.999574299068189	WITHOUT_CLASSIFICATION	4.257009318110544E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999188405013864	WITHOUT_CLASSIFICATION	8.115949861356603E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999188405013864	WITHOUT_CLASSIFICATION	8.115949861356603E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9996639211699843	WITHOUT_CLASSIFICATION	3.36078830015732E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9996639211699843	WITHOUT_CLASSIFICATION	3.36078830015732E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999369141948209	WITHOUT_CLASSIFICATION	6.308580517911178E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999369141948209	WITHOUT_CLASSIFICATION	6.308580517911178E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999923467549716	WITHOUT_CLASSIFICATION	7.653245028447076E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999923467549716	WITHOUT_CLASSIFICATION	7.653245028447076E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999875386769173	WITHOUT_CLASSIFICATION	1.2461323082798074E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.999574299068189	WITHOUT_CLASSIFICATION	4.257009318110544E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999188405013864	WITHOUT_CLASSIFICATION	8.115949861356603E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999369141948209	WITHOUT_CLASSIFICATION	6.308580517911178E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999923467549716	WITHOUT_CLASSIFICATION	7.653245028447076E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9996365148596056	WITHOUT_CLASSIFICATION	3.634851403944376E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9961912030931896	WITHOUT_CLASSIFICATION	0.0038087969068103006	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.999865168712014	WITHOUT_CLASSIFICATION	1.34831287986006E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9997916986591785	WITHOUT_CLASSIFICATION	2.083013408214642E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999736439650997	WITHOUT_CLASSIFICATION	2.6356034900299362E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.999955021156608	WITHOUT_CLASSIFICATION	4.497884339200902E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9998931820997388	WITHOUT_CLASSIFICATION	1.0681790026119241E-4	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999121185819765	WITHOUT_CLASSIFICATION	8.788141802356671E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9998926382227741	WITHOUT_CLASSIFICATION	1.0736177722592409E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9996228809654576	WITHOUT_CLASSIFICATION	3.7711903454250555E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996425229380302	WITHOUT_CLASSIFICATION	3.5747706196966695E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.999929756971146	WITHOUT_CLASSIFICATION	7.024302885392353E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999006829897851	WITHOUT_CLASSIFICATION	9.931701021491772E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9990481149111435	WITHOUT_CLASSIFICATION	9.518850888563504E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999036740736573	WITHOUT_CLASSIFICATION	9.632592634278233E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9996273785348474	WITHOUT_CLASSIFICATION	3.726214651526444E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9996305897148051	WITHOUT_CLASSIFICATION	3.6941028519494576E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9990204792037323	WITHOUT_CLASSIFICATION	9.7952079626781E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9996484162054352	WITHOUT_CLASSIFICATION	3.5158379456480315E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9997495245352224	WITHOUT_CLASSIFICATION	2.5047546477763213E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9996198583358961	WITHOUT_CLASSIFICATION	3.801416641039546E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9996273785348474	WITHOUT_CLASSIFICATION	3.726214651526444E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9998535966625416	WITHOUT_CLASSIFICATION	1.464033374583976E-4	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9998535966625416	WITHOUT_CLASSIFICATION	1.464033374583976E-4	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9990204792037323	WITHOUT_CLASSIFICATION	9.7952079626781E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9997139829388151	WITHOUT_CLASSIFICATION	2.8601706118483667E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9988044339799883	WITHOUT_CLASSIFICATION	0.0011955660200116862	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9997180220561634	WITHOUT_CLASSIFICATION	2.819779438365657E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9997730732948916	WITHOUT_CLASSIFICATION	2.2692670510849954E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999424170753506	WITHOUT_CLASSIFICATION	5.758292464949598E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9996222900222272	WITHOUT_CLASSIFICATION	3.77709977772795E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9981915321522541	WITHOUT_CLASSIFICATION	0.0018084678477458631	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9996184466080615	WITHOUT_CLASSIFICATION	3.815533919384308E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9996204591180337	WITHOUT_CLASSIFICATION	3.79540881966437E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9996204591180337	WITHOUT_CLASSIFICATION	3.79540881966437E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9996204591180337	WITHOUT_CLASSIFICATION	3.79540881966437E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999337110433079	WITHOUT_CLASSIFICATION	6.628895669211747E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999337110433079	WITHOUT_CLASSIFICATION	6.628895669211747E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998989215742328	WITHOUT_CLASSIFICATION	1.0107842576723146E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998989215742328	WITHOUT_CLASSIFICATION	1.0107842576723146E-4	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9993796039394384	WITHOUT_CLASSIFICATION	6.203960605617357E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999225043321286	WITHOUT_CLASSIFICATION	7.749566787143166E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9993689286034756	WITHOUT_CLASSIFICATION	6.310713965243861E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999245921327026	WITHOUT_CLASSIFICATION	7.540786729742243E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999817208562485	WITHOUT_CLASSIFICATION	1.827914375145057E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9998102499672261	WITHOUT_CLASSIFICATION	1.897500327739307E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999635890086547	WITHOUT_CLASSIFICATION	3.641099134528392E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9997295207076744	WITHOUT_CLASSIFICATION	2.704792923256543E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9998983344479792	WITHOUT_CLASSIFICATION	1.0166555202084227E-4	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9997565766856203	WITHOUT_CLASSIFICATION	2.4342331437966083E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999133682344986	WITHOUT_CLASSIFICATION	8.663176550130214E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999873074064114	WITHOUT_CLASSIFICATION	1.2692593588627005E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.999621949977552	WITHOUT_CLASSIFICATION	3.7805002244803367E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9996184466080615	WITHOUT_CLASSIFICATION	3.815533919384308E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9988272485974239	WITHOUT_CLASSIFICATION	0.0011727514025761062	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9998269200091557	WITHOUT_CLASSIFICATION	1.7307999084423023E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9993099344811496	WITHOUT_CLASSIFICATION	6.900655188505197E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998928077952253	WITHOUT_CLASSIFICATION	1.071922047747523E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998928077952253	WITHOUT_CLASSIFICATION	1.071922047747523E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998928077952253	WITHOUT_CLASSIFICATION	1.071922047747523E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998939334214413	WITHOUT_CLASSIFICATION	1.0606657855879337E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998939334214413	WITHOUT_CLASSIFICATION	1.0606657855879337E-4	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9995318145170853	WITHOUT_CLASSIFICATION	4.6818548291484096E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999470789209511	WITHOUT_CLASSIFICATION	5.292107904892106E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9996277525315865	WITHOUT_CLASSIFICATION	3.7224746841344955E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9996277525315865	WITHOUT_CLASSIFICATION	3.7224746841344955E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9994055971381106	WITHOUT_CLASSIFICATION	5.944028618893051E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9758021537003868	WITHOUT_CLASSIFICATION	0.02419784629961327	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999530587944008	WITHOUT_CLASSIFICATION	4.694120559928111E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999530587944008	WITHOUT_CLASSIFICATION	4.694120559928111E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999652809777746	WITHOUT_CLASSIFICATION	3.471902222537136E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9998743739683067	WITHOUT_CLASSIFICATION	1.2562603169339714E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999337110433079	WITHOUT_CLASSIFICATION	6.628895669211747E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999337110433079	WITHOUT_CLASSIFICATION	6.628895669211747E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9998989215742328	WITHOUT_CLASSIFICATION	1.0107842576723146E-4	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.999621949977552	WITHOUT_CLASSIFICATION	3.7805002244803367E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9996184466080615	WITHOUT_CLASSIFICATION	3.815533919384308E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9998997137864124	WITHOUT_CLASSIFICATION	1.0028621358765419E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998939334214413	WITHOUT_CLASSIFICATION	1.0606657855879337E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999421571970336	WITHOUT_CLASSIFICATION	5.784280296638102E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999297783206097	WITHOUT_CLASSIFICATION	7.022167939026779E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9998362090420448	WITHOUT_CLASSIFICATION	1.6379095795522968E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9996425229380302	WITHOUT_CLASSIFICATION	3.5747706196966695E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9994802953870213	WITHOUT_CLASSIFICATION	5.197046129785746E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9997268149829536	WITHOUT_CLASSIFICATION	2.731850170464527E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999684730949844	WITHOUT_CLASSIFICATION	3.152690501557146E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9998430598785303	WITHOUT_CLASSIFICATION	1.5694012146973862E-4	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9996677763833923	WITHOUT_CLASSIFICATION	3.3222361660774775E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999794324934788	WITHOUT_CLASSIFICATION	2.056750652129953E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9998195824502679	WITHOUT_CLASSIFICATION	1.804175497319928E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9996632466093633	WITHOUT_CLASSIFICATION	3.3675339063667987E-4	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9998990667177433	WITHOUT_CLASSIFICATION	1.0093328225671303E-4	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999186758308457	WITHOUT_CLASSIFICATION	8.132416915432536E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999849171742541	WITHOUT_CLASSIFICATION	1.5082825745801413E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999550790169023	WITHOUT_CLASSIFICATION	4.492098309769774E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9981010853233798	WITHOUT_CLASSIFICATION	0.0018989146766202256	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9885342077385589	WITHOUT_CLASSIFICATION	0.011465792261441071	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9998856954636607	WITHOUT_CLASSIFICATION	1.1430453633923693E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9998885795236258	WITHOUT_CLASSIFICATION	1.114204763743221E-4	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998231981175011	WITHOUT_CLASSIFICATION	1.7680188249882158E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.999995753024327	WITHOUT_CLASSIFICATION	4.246975673058969E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.999995753024327	WITHOUT_CLASSIFICATION	4.246975673058969E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9996819393534214	WITHOUT_CLASSIFICATION	3.1806064657858386E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9996871107478081	WITHOUT_CLASSIFICATION	3.1288925219184776E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.989802517906479	WITHOUT_CLASSIFICATION	0.01019748209352102	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.997587063669318	WITHOUT_CLASSIFICATION	0.0024129363306819064	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9998434610028001	WITHOUT_CLASSIFICATION	1.5653899719986184E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9993713470998756	WITHOUT_CLASSIFICATION	6.286529001243641E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9998622835542518	WITHOUT_CLASSIFICATION	1.3771644574834895E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9992195788012391	WITHOUT_CLASSIFICATION	7.804211987607403E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9995752259087322	WITHOUT_CLASSIFICATION	4.247740912677353E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999327238149027	WITHOUT_CLASSIFICATION	6.727618509728986E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9993174478527544	WITHOUT_CLASSIFICATION	6.8255214724563E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999009739725003	WITHOUT_CLASSIFICATION	9.902602749968098E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9997520980223853	WITHOUT_CLASSIFICATION	2.479019776147102E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9988918696156248	WITHOUT_CLASSIFICATION	0.0011081303843752462	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999723978790199	WITHOUT_CLASSIFICATION	2.7602120980064448E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9997000908171609	WITHOUT_CLASSIFICATION	2.999091828389527E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999194810110755	WITHOUT_CLASSIFICATION	8.051898892444787E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999405396434304	WITHOUT_CLASSIFICATION	5.946035656961561E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999405396434304	WITHOUT_CLASSIFICATION	5.946035656961561E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999630712250378	WITHOUT_CLASSIFICATION	3.692877496221474E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999679740638764	WITHOUT_CLASSIFICATION	3.2025936123593064E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999713320180811	WITHOUT_CLASSIFICATION	2.8667981918940415E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999679740638764	WITHOUT_CLASSIFICATION	3.2025936123593064E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999681317570941	WITHOUT_CLASSIFICATION	3.1868242905932294E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999103664700274	WITHOUT_CLASSIFICATION	8.963352997259936E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999902651993348	WITHOUT_CLASSIFICATION	9.734800665338158E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999319103315957	WITHOUT_CLASSIFICATION	6.808966840428575E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999363842507265	WITHOUT_CLASSIFICATION	6.361574927351039E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9987551991725142	WITHOUT_CLASSIFICATION	0.0012448008274857964	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999507945498047	WITHOUT_CLASSIFICATION	4.920545019519673E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9995682293171833	WITHOUT_CLASSIFICATION	4.3177068281679274E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998101167427972	WITHOUT_CLASSIFICATION	1.8988325720277412E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9998263485585004	WITHOUT_CLASSIFICATION	1.7365144149955684E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999965836715647	WITHOUT_CLASSIFICATION	3.4163284351831774E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999971635617035	WITHOUT_CLASSIFICATION	2.836438296530112E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.999654650837785	WITHOUT_CLASSIFICATION	3.453491622148682E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.999466574777686	WITHOUT_CLASSIFICATION	5.334252223140285E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9979273733701646	WITHOUT_CLASSIFICATION	0.002072626629835366	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9992116563839651	WITHOUT_CLASSIFICATION	7.883436160348665E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9956788487844176	WITHOUT_CLASSIFICATION	0.004321151215582348	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9996372010101202	WITHOUT_CLASSIFICATION	3.6279898987975255E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.999842449317508	WITHOUT_CLASSIFICATION	1.57550682491951E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9997079911986251	WITHOUT_CLASSIFICATION	2.9200880137493545E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999522418430633	WITHOUT_CLASSIFICATION	4.775815693663339E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999966355571629	WITHOUT_CLASSIFICATION	3.364442837145872E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999125285722098	WITHOUT_CLASSIFICATION	8.74714277901319E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999479300475673	WITHOUT_CLASSIFICATION	5.206995243263353E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999726626360459	WITHOUT_CLASSIFICATION	2.733736395402949E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999996144025736	WITHOUT_CLASSIFICATION	3.855974263336819E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9990233240807622	WITHOUT_CLASSIFICATION	9.766759192377126E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9991449285601671	WITHOUT_CLASSIFICATION	8.550714398327697E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9998272153971121	WITHOUT_CLASSIFICATION	1.7278460288795025E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999256191434458	WITHOUT_CLASSIFICATION	7.438085655421895E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998803540489682	WITHOUT_CLASSIFICATION	1.1964595103168993E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9954791372634534	WITHOUT_CLASSIFICATION	0.004520862736546591	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9992110453033561	WITHOUT_CLASSIFICATION	7.889546966439018E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998953762653898	WITHOUT_CLASSIFICATION	1.0462373461012196E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9986362917792411	WITHOUT_CLASSIFICATION	0.001363708220758933	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999222119413017	WITHOUT_CLASSIFICATION	7.778805869824954E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999140976556241	WITHOUT_CLASSIFICATION	8.590234437587378E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999238391272739	WITHOUT_CLASSIFICATION	7.616087272606255E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999399994224699	WITHOUT_CLASSIFICATION	6.0000577530117264E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998106800410183	WITHOUT_CLASSIFICATION	1.8931995898174462E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999986987979037	WITHOUT_CLASSIFICATION	1.3012020962927954E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999168559878138	WITHOUT_CLASSIFICATION	8.314401218621825E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9998839471198452	WITHOUT_CLASSIFICATION	1.1605288015471778E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999683489690612	WITHOUT_CLASSIFICATION	3.165103093888086E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999208886641646	WITHOUT_CLASSIFICATION	7.91113358353809E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998223344835279	WITHOUT_CLASSIFICATION	1.7766551647210797E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9826338617937036	WITHOUT_CLASSIFICATION	0.01736613820629631	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.999864614031453	WITHOUT_CLASSIFICATION	1.353859685470165E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.999939686591504	WITHOUT_CLASSIFICATION	6.0313408495860534E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999644264157123	WITHOUT_CLASSIFICATION	3.5573584287701697E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999554814618412	WITHOUT_CLASSIFICATION	4.451853815877222E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998555680685622	WITHOUT_CLASSIFICATION	1.4443193143771988E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999101053281253	WITHOUT_CLASSIFICATION	8.989467187479795E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9996413381054927	WITHOUT_CLASSIFICATION	3.586618945072661E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9998642460100664	WITHOUT_CLASSIFICATION	1.3575398993368034E-4	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999361208021801	WITHOUT_CLASSIFICATION	6.38791978198535E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998985860326464	WITHOUT_CLASSIFICATION	1.0141396735356429E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9991283940251493	WITHOUT_CLASSIFICATION	8.716059748507215E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9993776850119354	WITHOUT_CLASSIFICATION	6.223149880647101E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999229907594622	WITHOUT_CLASSIFICATION	7.700924053774925E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999447979116065	WITHOUT_CLASSIFICATION	5.5202088393449255E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999888722090575	WITHOUT_CLASSIFICATION	1.1127790942502057E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999514656901153	WITHOUT_CLASSIFICATION	4.853430988473434E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997244991557174	WITHOUT_CLASSIFICATION	2.7550084428257384E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9995853870714284	WITHOUT_CLASSIFICATION	4.1461292857154476E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9992663748075111	WITHOUT_CLASSIFICATION	7.336251924889557E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999536383732142	WITHOUT_CLASSIFICATION	4.6361626785817366E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999320769777116	WITHOUT_CLASSIFICATION	6.792302228848554E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999893287886752	WITHOUT_CLASSIFICATION	1.0671211324822082E-5	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999022665967984	WITHOUT_CLASSIFICATION	9.773340320174769E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999114208563865	WITHOUT_CLASSIFICATION	8.857914361353588E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9939553525779073	WITHOUT_CLASSIFICATION	0.006044647422092597	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999513881717101	WITHOUT_CLASSIFICATION	4.8611828289933365E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99984281110701	WITHOUT_CLASSIFICATION	1.5718889298993967E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998574774783099	WITHOUT_CLASSIFICATION	1.4252252169016737E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999419929780952	WITHOUT_CLASSIFICATION	5.8007021904844416E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982692560693862	WITHOUT_CLASSIFICATION	0.0017307439306137303	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999382105195499	WITHOUT_CLASSIFICATION	6.178948045012326E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428600523913	WITHOUT_CLASSIFICATION	5.713994760870085E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999321264964205	WITHOUT_CLASSIFICATION	6.787350357954789E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996535685454342	WITHOUT_CLASSIFICATION	3.4643145456581963E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999398926815553	WITHOUT_CLASSIFICATION	6.01073184447936E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998896926110942	WITHOUT_CLASSIFICATION	1.103073889057437E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999945402477938	WITHOUT_CLASSIFICATION	5.459752206203308E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999674004199216	WITHOUT_CLASSIFICATION	3.2599580078392657E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982986291884937	WITHOUT_CLASSIFICATION	0.001701370811506325	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999407887779728	WITHOUT_CLASSIFICATION	5.9211222027352917E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999898555142018	WITHOUT_CLASSIFICATION	1.0144485798198495E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9980634794714149	WITHOUT_CLASSIFICATION	0.0019365205285850862	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.997979321956146	WITHOUT_CLASSIFICATION	0.0020206780438538747	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998189314765241	WITHOUT_CLASSIFICATION	0.001810685234759021	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998189314765241	WITHOUT_CLASSIFICATION	0.001810685234759021	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994786198413652	WITHOUT_CLASSIFICATION	5.213801586349139E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985564414003965	WITHOUT_CLASSIFICATION	0.0014435585996034883	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9974873687599997	WITHOUT_CLASSIFICATION	0.0025126312400003356	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.996686652850273	WITHOUT_CLASSIFICATION	0.0033133471497270588	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996583852690186	WITHOUT_CLASSIFICATION	3.4161473098130756E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9901160275197527	WITHOUT_CLASSIFICATION	0.009883972480247284	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9979788976046664	WITHOUT_CLASSIFICATION	0.0020211023953336056	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988385948761002	WITHOUT_CLASSIFICATION	0.001161405123899916	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999339881693848	WITHOUT_CLASSIFICATION	6.601183061511593E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982986291884937	WITHOUT_CLASSIFICATION	0.001701370811506325	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998400477450985	WITHOUT_CLASSIFICATION	1.5995225490151094E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.996686652850273	WITHOUT_CLASSIFICATION	0.0033133471497270583	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9973783418241308	WITHOUT_CLASSIFICATION	0.0026216581758692517	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997922300609123	WITHOUT_CLASSIFICATION	2.077699390875607E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985564414003965	WITHOUT_CLASSIFICATION	0.0014435585996034883	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992117915316954	WITHOUT_CLASSIFICATION	7.882084683045274E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999904411161407	WITHOUT_CLASSIFICATION	9.558883859298701E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992387980330646	WITHOUT_CLASSIFICATION	7.612019669354527E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998202303579014	WITHOUT_CLASSIFICATION	1.7976964209858733E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999513881717101	WITHOUT_CLASSIFICATION	4.8611828289933365E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997844264394512	WITHOUT_CLASSIFICATION	2.155735605488567E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992387980330646	WITHOUT_CLASSIFICATION	7.612019669354527E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997844264394512	WITHOUT_CLASSIFICATION	2.155735605488567E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9967499618777824	WITHOUT_CLASSIFICATION	0.003250038122217497	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.993991785552271	WITHOUT_CLASSIFICATION	0.00600821444772906	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99786300224486	WITHOUT_CLASSIFICATION	0.002136997755139849	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.997669022529342	WITHOUT_CLASSIFICATION	0.0023309774706579975	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.985573350434209	WITHOUT_CLASSIFICATION	0.014426649565791066	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984096012823184	WITHOUT_CLASSIFICATION	0.0015903987176815973	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979788976046664	WITHOUT_CLASSIFICATION	0.0020211023953336056	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999216172949925	WITHOUT_CLASSIFICATION	7.838270500749999E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9939553525779073	WITHOUT_CLASSIFICATION	0.0060446474220926	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982986291884937	WITHOUT_CLASSIFICATION	0.0017013708115063248	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9970312055160411	WITHOUT_CLASSIFICATION	0.002968794483958959	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998557069314855	WITHOUT_CLASSIFICATION	1.4429306851446435E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999216172949925	WITHOUT_CLASSIFICATION	7.838270500749999E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999337373102528	WITHOUT_CLASSIFICATION	6.626268974720522E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996474199639065	WITHOUT_CLASSIFICATION	3.525800360934519E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998660953370834	WITHOUT_CLASSIFICATION	1.3390466291665528E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999940930651441	WITHOUT_CLASSIFICATION	5.906934855910755E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991200902035419	WITHOUT_CLASSIFICATION	8.799097964581037E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999941765269594	WITHOUT_CLASSIFICATION	5.823473040599941E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991200902035419	WITHOUT_CLASSIFICATION	8.799097964581037E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999945379989584	WITHOUT_CLASSIFICATION	5.462001041592345E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998197972352607	WITHOUT_CLASSIFICATION	1.8020276473925775E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980175644708507	WITHOUT_CLASSIFICATION	0.001982435529149286	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998620698910476	WITHOUT_CLASSIFICATION	1.379301089523737E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999898555142018	WITHOUT_CLASSIFICATION	1.0144485798198495E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999723978790199	WITHOUT_CLASSIFICATION	2.7602120980064448E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981031891420085	WITHOUT_CLASSIFICATION	0.0018968108579915423	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.996541398559226	WITHOUT_CLASSIFICATION	0.0034586014407740635	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997518863971181	WITHOUT_CLASSIFICATION	2.4811360288194413E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991200902035419	WITHOUT_CLASSIFICATION	8.799097964581037E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999308000529132	WITHOUT_CLASSIFICATION	6.919994708684275E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986083769376503	WITHOUT_CLASSIFICATION	0.0013916230623497304	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969469896745351	WITHOUT_CLASSIFICATION	0.0030530103254647833	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999612806943013	WITHOUT_CLASSIFICATION	3.871930569859879E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999838964104812	WITHOUT_CLASSIFICATION	1.6103589518747618E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999209805793784	WITHOUT_CLASSIFICATION	7.901942062166865E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9998990180589589	WITHOUT_CLASSIFICATION	1.009819410410812E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9997000908171609	WITHOUT_CLASSIFICATION	2.999091828389527E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9997672526875182	WITHOUT_CLASSIFICATION	2.327473124818135E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.999925172146802	WITHOUT_CLASSIFICATION	7.482785319801985E-5	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999574462512941	WITHOUT_CLASSIFICATION	4.2553748705917424E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9885342077385589	WITHOUT_CLASSIFICATION	0.011465792261441071	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9998856954636607	WITHOUT_CLASSIFICATION	1.1430453633923693E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9998885795236258	WITHOUT_CLASSIFICATION	1.114204763743221E-4	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998231981175011	WITHOUT_CLASSIFICATION	1.7680188249882158E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.999995753024327	WITHOUT_CLASSIFICATION	4.246975673058969E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9996871107478081	WITHOUT_CLASSIFICATION	3.1288925219184776E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.989802517906479	WITHOUT_CLASSIFICATION	0.01019748209352102	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.997587063669318	WITHOUT_CLASSIFICATION	0.0024129363306819064	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9998434610028001	WITHOUT_CLASSIFICATION	1.5653899719986184E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9993713470998756	WITHOUT_CLASSIFICATION	6.286529001243641E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999032059744887	WITHOUT_CLASSIFICATION	9.679402551129193E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999447979116065	WITHOUT_CLASSIFICATION	5.5202088393449255E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999327238149027	WITHOUT_CLASSIFICATION	6.727618509728986E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9993174478527544	WITHOUT_CLASSIFICATION	6.8255214724563E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999009739725003	WITHOUT_CLASSIFICATION	9.902602749968098E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9997520980223853	WITHOUT_CLASSIFICATION	2.479019776147102E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9988918696156248	WITHOUT_CLASSIFICATION	0.0011081303843752462	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9995752259087322	WITHOUT_CLASSIFICATION	4.247740912677353E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999723978790199	WITHOUT_CLASSIFICATION	2.7602120980064448E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999194810110755	WITHOUT_CLASSIFICATION	8.051898892444787E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999405396434304	WITHOUT_CLASSIFICATION	5.946035656961561E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999405396434304	WITHOUT_CLASSIFICATION	5.946035656961561E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998163732523626	WITHOUT_CLASSIFICATION	1.8362674763736098E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999444495376597	WITHOUT_CLASSIFICATION	5.555046234025653E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999679740638764	WITHOUT_CLASSIFICATION	3.2025936123593064E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999679740638764	WITHOUT_CLASSIFICATION	3.2025936123593064E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999679740638764	WITHOUT_CLASSIFICATION	3.2025936123593064E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999681317570941	WITHOUT_CLASSIFICATION	3.1868242905932294E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999103664700274	WITHOUT_CLASSIFICATION	8.963352997259936E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999319103315957	WITHOUT_CLASSIFICATION	6.808966840428575E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998978123939125	WITHOUT_CLASSIFICATION	1.0218760608749257E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999363842507265	WITHOUT_CLASSIFICATION	6.361574927351039E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9987551991725142	WITHOUT_CLASSIFICATION	0.0012448008274857964	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999507945498047	WITHOUT_CLASSIFICATION	4.920545019519673E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999354162727184	WITHOUT_CLASSIFICATION	6.458372728159518E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9995682293171833	WITHOUT_CLASSIFICATION	4.3177068281679274E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999031137066092	WITHOUT_CLASSIFICATION	9.688629339078345E-5	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999971635617035	WITHOUT_CLASSIFICATION	2.836438296530112E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998101167427972	WITHOUT_CLASSIFICATION	1.8988325720277412E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9998263485585004	WITHOUT_CLASSIFICATION	1.7365144149955684E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.999466574777686	WITHOUT_CLASSIFICATION	5.334252223140285E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9979273733701646	WITHOUT_CLASSIFICATION	0.002072626629835366	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9992116563839651	WITHOUT_CLASSIFICATION	7.883436160348665E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9928718904752231	WITHOUT_CLASSIFICATION	0.007128109524776952	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9956788487844176	WITHOUT_CLASSIFICATION	0.004321151215582348	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9996372010101202	WITHOUT_CLASSIFICATION	3.6279898987975255E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.999842449317508	WITHOUT_CLASSIFICATION	1.57550682491951E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9997079911986251	WITHOUT_CLASSIFICATION	2.9200880137493545E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999522418430633	WITHOUT_CLASSIFICATION	4.775815693663339E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999966355571629	WITHOUT_CLASSIFICATION	3.364442837145872E-6	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999125285722098	WITHOUT_CLASSIFICATION	8.74714277901319E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999479300475673	WITHOUT_CLASSIFICATION	5.206995243263353E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999726626360459	WITHOUT_CLASSIFICATION	2.733736395402949E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999726626360459	WITHOUT_CLASSIFICATION	2.733736395402949E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999996144025736	WITHOUT_CLASSIFICATION	3.855974263336819E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9990233240807622	WITHOUT_CLASSIFICATION	9.766759192377126E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9991449285601671	WITHOUT_CLASSIFICATION	8.550714398327697E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9998272153971121	WITHOUT_CLASSIFICATION	1.7278460288795025E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998803540489682	WITHOUT_CLASSIFICATION	1.1964595103168993E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9954791372634534	WITHOUT_CLASSIFICATION	0.004520862736546591	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9992110453033561	WITHOUT_CLASSIFICATION	7.889546966439018E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998953762653898	WITHOUT_CLASSIFICATION	1.0462373461012196E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999222119413017	WITHOUT_CLASSIFICATION	7.778805869824954E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999479300475673	WITHOUT_CLASSIFICATION	5.206995243263353E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999140976556241	WITHOUT_CLASSIFICATION	8.590234437587378E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999238391272739	WITHOUT_CLASSIFICATION	7.616087272606255E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999399994224699	WITHOUT_CLASSIFICATION	6.0000577530117264E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998106800410183	WITHOUT_CLASSIFICATION	1.8931995898174462E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999986987979037	WITHOUT_CLASSIFICATION	1.3012020962927954E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9998839471198452	WITHOUT_CLASSIFICATION	1.1605288015471778E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999683489690612	WITHOUT_CLASSIFICATION	3.165103093888086E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999208886641646	WITHOUT_CLASSIFICATION	7.91113358353809E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998223344835279	WITHOUT_CLASSIFICATION	1.7766551647210797E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9826338617937036	WITHOUT_CLASSIFICATION	0.01736613820629631	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.999864614031453	WITHOUT_CLASSIFICATION	1.353859685470165E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.999939686591504	WITHOUT_CLASSIFICATION	6.0313408495860534E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999644264157123	WITHOUT_CLASSIFICATION	3.5573584287701697E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999554814618412	WITHOUT_CLASSIFICATION	4.451853815877222E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998555680685622	WITHOUT_CLASSIFICATION	1.4443193143771988E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999101053281253	WITHOUT_CLASSIFICATION	8.989467187479795E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9998642460100664	WITHOUT_CLASSIFICATION	1.3575398993368034E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998985860326464	WITHOUT_CLASSIFICATION	1.0141396735356429E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9991283940251493	WITHOUT_CLASSIFICATION	8.716059748507215E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9993776850119354	WITHOUT_CLASSIFICATION	6.223149880647101E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999229907594622	WITHOUT_CLASSIFICATION	7.700924053774925E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9997928727105767	WITHOUT_CLASSIFICATION	2.071272894233675E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999641442045152	WITHOUT_CLASSIFICATION	3.5855795484857566E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.99767543098302	WITHOUT_CLASSIFICATION	0.002324569016979964	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.999888722090575	WITHOUT_CLASSIFICATION	1.1127790942502057E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999348726948567	WITHOUT_CLASSIFICATION	6.512730514337507E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999514656901153	WITHOUT_CLASSIFICATION	4.853430988473434E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997244991557174	WITHOUT_CLASSIFICATION	2.7550084428257384E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9995853870714284	WITHOUT_CLASSIFICATION	4.1461292857154476E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999514863069402	WITHOUT_CLASSIFICATION	4.8513693059881825E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9992663748075111	WITHOUT_CLASSIFICATION	7.336251924889557E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999536383732142	WITHOUT_CLASSIFICATION	4.6361626785817366E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999320769777116	WITHOUT_CLASSIFICATION	6.792302228848554E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999893287886752	WITHOUT_CLASSIFICATION	1.0671211324822082E-5	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999022665967984	WITHOUT_CLASSIFICATION	9.773340320174769E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999114208563865	WITHOUT_CLASSIFICATION	8.857914361353588E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9939553525779073	WITHOUT_CLASSIFICATION	0.006044647422092597	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999513881717101	WITHOUT_CLASSIFICATION	4.8611828289933365E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998574774783099	WITHOUT_CLASSIFICATION	1.4252252169016737E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999419929780952	WITHOUT_CLASSIFICATION	5.8007021904844416E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982692560693862	WITHOUT_CLASSIFICATION	0.0017307439306137303	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999382105195499	WITHOUT_CLASSIFICATION	6.178948045012326E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999428600523913	WITHOUT_CLASSIFICATION	5.713994760870085E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999321264964205	WITHOUT_CLASSIFICATION	6.787350357954789E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996535685454342	WITHOUT_CLASSIFICATION	3.4643145456581963E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999398926815553	WITHOUT_CLASSIFICATION	6.01073184447936E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9963741977024085	WITHOUT_CLASSIFICATION	0.00362580229759145	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999674004199216	WITHOUT_CLASSIFICATION	3.2599580078392657E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982986291884937	WITHOUT_CLASSIFICATION	0.001701370811506325	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999407887779728	WITHOUT_CLASSIFICATION	5.9211222027352917E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999898555142018	WITHOUT_CLASSIFICATION	1.0144485798198495E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9980634794714149	WITHOUT_CLASSIFICATION	0.0019365205285850862	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988672047243365	WITHOUT_CLASSIFICATION	0.0011327952756634491	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.997979321956146	WITHOUT_CLASSIFICATION	0.0020206780438538747	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998189314765241	WITHOUT_CLASSIFICATION	0.001810685234759021	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9985564414003965	WITHOUT_CLASSIFICATION	0.0014435585996034883	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988385948761002	WITHOUT_CLASSIFICATION	0.001161405123899916	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998189314765241	WITHOUT_CLASSIFICATION	0.001810685234759021	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9974873687599997	WITHOUT_CLASSIFICATION	0.0025126312400003356	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.996686652850273	WITHOUT_CLASSIFICATION	0.0033133471497270588	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9996583852690186	WITHOUT_CLASSIFICATION	3.4161473098130756E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9901160275197527	WITHOUT_CLASSIFICATION	0.009883972480247284	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9979788976046664	WITHOUT_CLASSIFICATION	0.0020211023953336056	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999339881693848	WITHOUT_CLASSIFICATION	6.601183061511593E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9982986291884937	WITHOUT_CLASSIFICATION	0.001701370811506325	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998400477450985	WITHOUT_CLASSIFICATION	1.5995225490151094E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999574035068918	WITHOUT_CLASSIFICATION	4.2596493108226544E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9961267402496146	WITHOUT_CLASSIFICATION	0.0038732597503854066	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9973783418241308	WITHOUT_CLASSIFICATION	0.0026216581758692517	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997922300609123	WITHOUT_CLASSIFICATION	2.077699390875607E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992117915316954	WITHOUT_CLASSIFICATION	7.882084683045274E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999731233838955	WITHOUT_CLASSIFICATION	2.6876616104383397E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985564414003965	WITHOUT_CLASSIFICATION	0.0014435585996034883	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999904411161407	WITHOUT_CLASSIFICATION	9.558883859298701E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992387980330646	WITHOUT_CLASSIFICATION	7.612019669354527E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999513881717101	WITHOUT_CLASSIFICATION	4.8611828289933365E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999513881717101	WITHOUT_CLASSIFICATION	4.8611828289933365E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997844264394512	WITHOUT_CLASSIFICATION	2.155735605488567E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9967499618777824	WITHOUT_CLASSIFICATION	0.003250038122217497	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992387980330646	WITHOUT_CLASSIFICATION	7.612019669354527E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.993991785552271	WITHOUT_CLASSIFICATION	0.00600821444772906	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99786300224486	WITHOUT_CLASSIFICATION	0.002136997755139849	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.997669022529342	WITHOUT_CLASSIFICATION	0.0023309774706579975	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.985573350434209	WITHOUT_CLASSIFICATION	0.014426649565791066	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984096012823184	WITHOUT_CLASSIFICATION	0.0015903987176815973	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979788976046664	WITHOUT_CLASSIFICATION	0.0020211023953336056	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979788976046664	WITHOUT_CLASSIFICATION	0.0020211023953336056	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999216172949925	WITHOUT_CLASSIFICATION	7.838270500749999E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9939553525779073	WITHOUT_CLASSIFICATION	0.0060446474220926	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982986291884937	WITHOUT_CLASSIFICATION	0.0017013708115063248	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9970312055160411	WITHOUT_CLASSIFICATION	0.002968794483958959	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999393821734751	WITHOUT_CLASSIFICATION	6.0617826524798506E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9992140843272312	WITHOUT_CLASSIFICATION	7.859156727686878E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998557069314855	WITHOUT_CLASSIFICATION	1.4429306851446435E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999216172949925	WITHOUT_CLASSIFICATION	7.838270500749999E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999337373102528	WITHOUT_CLASSIFICATION	6.626268974720522E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998660953370834	WITHOUT_CLASSIFICATION	1.3390466291665528E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999940930651441	WITHOUT_CLASSIFICATION	5.906934855910755E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991200902035419	WITHOUT_CLASSIFICATION	8.799097964581037E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999941765269594	WITHOUT_CLASSIFICATION	5.823473040599941E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991200902035419	WITHOUT_CLASSIFICATION	8.799097964581037E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999945379989584	WITHOUT_CLASSIFICATION	5.462001041592345E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998197972352607	WITHOUT_CLASSIFICATION	1.8020276473925775E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980175644708507	WITHOUT_CLASSIFICATION	0.001982435529149286	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998620698910476	WITHOUT_CLASSIFICATION	1.379301089523737E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999898555142018	WITHOUT_CLASSIFICATION	1.0144485798198495E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999944643094952	WITHOUT_CLASSIFICATION	5.5356905047941935E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999381975180055	WITHOUT_CLASSIFICATION	6.180248199449231E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999308000529132	WITHOUT_CLASSIFICATION	6.919994708684275E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997518863971181	WITHOUT_CLASSIFICATION	2.4811360288194413E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9991200902035419	WITHOUT_CLASSIFICATION	8.799097964581037E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999308000529132	WITHOUT_CLASSIFICATION	6.919994708684275E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986083769376503	WITHOUT_CLASSIFICATION	0.0013916230623497304	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9969469896745351	WITHOUT_CLASSIFICATION	0.0030530103254647833	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998163732523626	WITHOUT_CLASSIFICATION	1.8362674763736098E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999612806943013	WITHOUT_CLASSIFICATION	3.871930569859879E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999838964104812	WITHOUT_CLASSIFICATION	1.6103589518747618E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999209805793784	WITHOUT_CLASSIFICATION	7.901942062166865E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9998990180589589	WITHOUT_CLASSIFICATION	1.009819410410812E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999723978790199	WITHOUT_CLASSIFICATION	2.7602120980064448E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9997672526875182	WITHOUT_CLASSIFICATION	2.327473124818135E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.999925172146802	WITHOUT_CLASSIFICATION	7.482785319801985E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999444495376597	WITHOUT_CLASSIFICATION	5.555046234025653E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999679804508279	WITHOUT_CLASSIFICATION	3.2019549172116236E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999679804508279	WITHOUT_CLASSIFICATION	3.2019549172116236E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.999883080330097	WITHOUT_CLASSIFICATION	1.1691966990305532E-4	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999880252812403	WITHOUT_CLASSIFICATION	1.19747187597254E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.999807884408204	WITHOUT_CLASSIFICATION	1.9211559179597117E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9998886578592424	WITHOUT_CLASSIFICATION	1.1134214075760297E-4	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9998598251484436	WITHOUT_CLASSIFICATION	1.401748515564529E-4	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.999934485381342	WITHOUT_CLASSIFICATION	6.551461865793832E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9996746178492735	WITHOUT_CLASSIFICATION	3.253821507266231E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9998713230624647	WITHOUT_CLASSIFICATION	1.2867693753525447E-4	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999503153004722	WITHOUT_CLASSIFICATION	4.968469952772408E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999192000967778	WITHOUT_CLASSIFICATION	8.079990322213604E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999879167029048	WITHOUT_CLASSIFICATION	1.2083297095099242E-5	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9998827311494237	WITHOUT_CLASSIFICATION	1.1726885057631117E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999512179345633	WITHOUT_CLASSIFICATION	4.878206543672553E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999989645048072	WITHOUT_CLASSIFICATION	1.0354951928790006E-6	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9984802267794676	WITHOUT_CLASSIFICATION	0.0015197732205324043	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999546521332594	WITHOUT_CLASSIFICATION	4.5347866740621235E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999662028488662	WITHOUT_CLASSIFICATION	3.3797151133790134E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.99980027738037	WITHOUT_CLASSIFICATION	1.997226196300347E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999135996354671	WITHOUT_CLASSIFICATION	8.640036453288078E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9998454441806631	WITHOUT_CLASSIFICATION	1.5455581933677083E-4	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9993362399958677	WITHOUT_CLASSIFICATION	6.637600041322345E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999217649162091	WITHOUT_CLASSIFICATION	7.823508379094825E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999245154213996	WITHOUT_CLASSIFICATION	7.548457860041098E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998730732005061	WITHOUT_CLASSIFICATION	1.269267994939223E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9994963581216059	WITHOUT_CLASSIFICATION	5.036418783941679E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9997325349942082	WITHOUT_CLASSIFICATION	2.6746500579178224E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998396754400277	WITHOUT_CLASSIFICATION	1.6032455997240202E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999503701616071	WITHOUT_CLASSIFICATION	4.962983839294589E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999503701616071	WITHOUT_CLASSIFICATION	4.962983839294589E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999593929361139	WITHOUT_CLASSIFICATION	4.0607063885967865E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999968124145874	WITHOUT_CLASSIFICATION	3.187585412532588E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9998530086813042	WITHOUT_CLASSIFICATION	1.4699131869579636E-4	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999706163419615	WITHOUT_CLASSIFICATION	2.9383658038542723E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999696491290863	WITHOUT_CLASSIFICATION	3.0350870913683956E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999783060256375	WITHOUT_CLASSIFICATION	2.1693974362461144E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999788615323157	WITHOUT_CLASSIFICATION	2.113846768421738E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999762418404355	WITHOUT_CLASSIFICATION	2.3758159564496238E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999599297686786	WITHOUT_CLASSIFICATION	4.007023132137165E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9997991035833358	WITHOUT_CLASSIFICATION	2.0089641666422617E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9997991035833358	WITHOUT_CLASSIFICATION	2.0089641666422617E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9982147877673698	WITHOUT_CLASSIFICATION	0.0017852122326301415	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9982147877673698	WITHOUT_CLASSIFICATION	0.0017852122326301415	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999482813497229	WITHOUT_CLASSIFICATION	5.171865027709476E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999615380486268	WITHOUT_CLASSIFICATION	3.8461951373268966E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999346296822051	WITHOUT_CLASSIFICATION	6.53703177948917E-5	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999833039599517	WITHOUT_CLASSIFICATION	1.6696040048258113E-5	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9993613770248663	WITHOUT_CLASSIFICATION	6.386229751338153E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9998719589249808	WITHOUT_CLASSIFICATION	1.2804107501911653E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999685916983527	WITHOUT_CLASSIFICATION	3.140830164730046E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999938897696992	WITHOUT_CLASSIFICATION	6.110230300860497E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9795154744023776	WITHOUT_CLASSIFICATION	0.020484525597622386	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999021598172189	WITHOUT_CLASSIFICATION	9.78401827812188E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998630976373705	WITHOUT_CLASSIFICATION	1.36902362629492E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999835914520887	WITHOUT_CLASSIFICATION	1.6408547911297878E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999725350341292	WITHOUT_CLASSIFICATION	2.746496587075105E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.999991431247935	WITHOUT_CLASSIFICATION	8.568752065111393E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999958026295943	WITHOUT_CLASSIFICATION	4.1973704057693625E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999432633254773	WITHOUT_CLASSIFICATION	5.673667452271264E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999482301778414	WITHOUT_CLASSIFICATION	5.176982215857032E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999776666333468	WITHOUT_CLASSIFICATION	2.233336665321369E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9895782657164423	WITHOUT_CLASSIFICATION	0.010421734283557702	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9998799237678998	WITHOUT_CLASSIFICATION	1.2007623210025334E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9988779666678578	WITHOUT_CLASSIFICATION	0.0011220333321422034	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9996001647273821	WITHOUT_CLASSIFICATION	3.9983527261785637E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.999939593455006	WITHOUT_CLASSIFICATION	6.0406544994040434E-5	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9998033117030687	WITHOUT_CLASSIFICATION	1.9668829693127374E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999919352768729	WITHOUT_CLASSIFICATION	8.064723127016504E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9985990372477073	WITHOUT_CLASSIFICATION	0.0014009627522927918	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999232290171589	WITHOUT_CLASSIFICATION	7.67709828410903E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998766645597522	WITHOUT_CLASSIFICATION	1.233354402477707E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998766645597522	WITHOUT_CLASSIFICATION	1.233354402477707E-4	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999114713501797	WITHOUT_CLASSIFICATION	8.85286498203851E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9996503158442971	WITHOUT_CLASSIFICATION	3.4968415570280607E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9997938523855237	WITHOUT_CLASSIFICATION	2.0614761447637213E-4	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9996578659768677	WITHOUT_CLASSIFICATION	3.421340231323014E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999390768489446	WITHOUT_CLASSIFICATION	6.0923151055450537E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999100299312601	WITHOUT_CLASSIFICATION	8.997006873993267E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.999842381064068	WITHOUT_CLASSIFICATION	1.5761893593205527E-4	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998228278225234	WITHOUT_CLASSIFICATION	1.771721774767116E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9985990372477073	WITHOUT_CLASSIFICATION	0.0014009627522927918	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9993749349171523	WITHOUT_CLASSIFICATION	6.250650828477248E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999740231032013	WITHOUT_CLASSIFICATION	2.5976896798783167E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999393569914307	WITHOUT_CLASSIFICATION	6.0643008569305105E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9788598012868772	WITHOUT_CLASSIFICATION	0.02114019871312272	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999126891008032	WITHOUT_CLASSIFICATION	8.731089919683258E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999614892467876	WITHOUT_CLASSIFICATION	3.851075321236879E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999424823387406	WITHOUT_CLASSIFICATION	5.7517661259371876E-5	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999186237054153	WITHOUT_CLASSIFICATION	8.137629458465737E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999552961698193	WITHOUT_CLASSIFICATION	4.470383018079023E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999272863121652	WITHOUT_CLASSIFICATION	7.27136878348428E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999335277073425	WITHOUT_CLASSIFICATION	6.647229265758307E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999258101135418	WITHOUT_CLASSIFICATION	7.418988645829912E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999870765081554	WITHOUT_CLASSIFICATION	1.2923491844657221E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999924158306323	WITHOUT_CLASSIFICATION	7.5841693677655235E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9853013505046426	WITHOUT_CLASSIFICATION	0.0146986494953573	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9992492028603829	WITHOUT_CLASSIFICATION	7.507971396170545E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999878705580569	WITHOUT_CLASSIFICATION	1.2129441943030967E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9998833382486906	WITHOUT_CLASSIFICATION	1.1666175130940488E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.999825808671727	WITHOUT_CLASSIFICATION	1.7419132827302291E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9997825845065165	WITHOUT_CLASSIFICATION	2.1741549348357718E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999422280444918	WITHOUT_CLASSIFICATION	5.777195550816888E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9998893208056506	WITHOUT_CLASSIFICATION	1.1067919434926039E-4	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9998802281520898	WITHOUT_CLASSIFICATION	1.1977184791034634E-4	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999847050745723	WITHOUT_CLASSIFICATION	1.5294925427800004E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999424823387406	WITHOUT_CLASSIFICATION	5.7517661259371876E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9997160825555975	WITHOUT_CLASSIFICATION	2.839174444024848E-4	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9996873725872992	WITHOUT_CLASSIFICATION	3.1262741270074305E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.999875055364796	WITHOUT_CLASSIFICATION	1.2494463520396754E-4	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9075788607659563	WITHOUT_CLASSIFICATION	0.0924211392340437	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9992921630244236	WITHOUT_CLASSIFICATION	7.078369755764914E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9958283501288565	WITHOUT_CLASSIFICATION	0.004171649871143423	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9997206753760592	WITHOUT_CLASSIFICATION	2.793246239407879E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9997408035656887	WITHOUT_CLASSIFICATION	2.591964343112663E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9993267173001105	WITHOUT_CLASSIFICATION	6.732826998896483E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999348570242768	WITHOUT_CLASSIFICATION	6.51429757232875E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999373900890949	WITHOUT_CLASSIFICATION	6.260991090512028E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999373900890949	WITHOUT_CLASSIFICATION	6.260991090512028E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999097344973835	WITHOUT_CLASSIFICATION	9.026550261649435E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9995927418566718	WITHOUT_CLASSIFICATION	4.0725814332811557E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9998721779923325	WITHOUT_CLASSIFICATION	1.2782200766741448E-4	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999368560092255	WITHOUT_CLASSIFICATION	6.314399077445647E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999190395200133	WITHOUT_CLASSIFICATION	8.096047998673943E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9997617465095323	WITHOUT_CLASSIFICATION	2.382534904676681E-4	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9998750186767369	WITHOUT_CLASSIFICATION	1.2498132326314054E-4	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9998669949464933	WITHOUT_CLASSIFICATION	1.3300505350659754E-4	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9993929106367733	WITHOUT_CLASSIFICATION	6.070893632267929E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999296410973237	WITHOUT_CLASSIFICATION	7.035890267625198E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999603713960509	WITHOUT_CLASSIFICATION	3.9628603949154096E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9982147877673698	WITHOUT_CLASSIFICATION	0.0017852122326301415	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999685916983527	WITHOUT_CLASSIFICATION	3.140830164730046E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999190395200133	WITHOUT_CLASSIFICATION	8.096047998673943E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9997617465095323	WITHOUT_CLASSIFICATION	2.382534904676681E-4	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999137814319603	WITHOUT_CLASSIFICATION	8.621856803972253E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999898713221304	WITHOUT_CLASSIFICATION	1.0128677869689744E-5	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999139763357026	WITHOUT_CLASSIFICATION	8.602366429741593E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9967257251379573	WITHOUT_CLASSIFICATION	0.0032742748620427195	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9917250315793582	WITHOUT_CLASSIFICATION	0.00827496842064173	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999587669660966	WITHOUT_CLASSIFICATION	4.123303390340882E-5	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9981515810154249	WITHOUT_CLASSIFICATION	0.0018484189845750774	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9996977136609354	WITHOUT_CLASSIFICATION	3.0228633906457966E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9998750978696668	WITHOUT_CLASSIFICATION	1.2490213033330535E-4	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9982950289739645	WITHOUT_CLASSIFICATION	0.0017049710260356068	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9994332012469999	WITHOUT_CLASSIFICATION	5.667987530000841E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989035626219587	WITHOUT_CLASSIFICATION	0.0010964373780413096	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.999839860349815	WITHOUT_CLASSIFICATION	1.601396501851166E-4	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9990921161981114	WITHOUT_CLASSIFICATION	9.078838018885153E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999835333937762	WITHOUT_CLASSIFICATION	1.6466606223743396E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989035626219587	WITHOUT_CLASSIFICATION	0.0010964373780413096	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989035626219587	WITHOUT_CLASSIFICATION	0.0010964373780413096	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989035626219587	WITHOUT_CLASSIFICATION	0.0010964373780413096	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9996500412146556	WITHOUT_CLASSIFICATION	3.4995878534438294E-4	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999550253141656	WITHOUT_CLASSIFICATION	4.497468583438136E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.999867160013429	WITHOUT_CLASSIFICATION	1.32839986571041E-4	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999857435869508	WITHOUT_CLASSIFICATION	1.4256413049087589E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9996604575242032	WITHOUT_CLASSIFICATION	3.3954247579691724E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999690377992537	WITHOUT_CLASSIFICATION	3.0962200746310674E-5	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9981297300762471	WITHOUT_CLASSIFICATION	0.0018702699237528374	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999309063760976	WITHOUT_CLASSIFICATION	6.90936239023838E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.99999144672051	WITHOUT_CLASSIFICATION	8.553279489998298E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9998267395701625	WITHOUT_CLASSIFICATION	1.7326042983746134E-4	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9997607337251689	WITHOUT_CLASSIFICATION	2.3926627483100054E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9998417978083621	WITHOUT_CLASSIFICATION	1.582021916378761E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999270616298234	WITHOUT_CLASSIFICATION	7.29383701765568E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999989424496426	WITHOUT_CLASSIFICATION	1.0575503574406374E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9998913993689655	WITHOUT_CLASSIFICATION	1.0860063103450111E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999854191804955	WITHOUT_CLASSIFICATION	1.458081950447946E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9990192382089079	WITHOUT_CLASSIFICATION	9.807617910921106E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997171714417756	WITHOUT_CLASSIFICATION	2.8282855822431003E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999725807826733	WITHOUT_CLASSIFICATION	2.741921732670362E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998015480797494	WITHOUT_CLASSIFICATION	1.9845192025056045E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998015480797494	WITHOUT_CLASSIFICATION	1.9845192025056045E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9996076086667324	WITHOUT_CLASSIFICATION	3.9239133326766067E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.8438257291027128	WITHOUT_CLASSIFICATION	0.15617427089728722	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9998946749890553	WITHOUT_CLASSIFICATION	1.0532501094476152E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9807718540057456	WITHOUT_CLASSIFICATION	0.019228145994254417	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999718042257639	WITHOUT_CLASSIFICATION	2.8195774236046965E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999696369559713	WITHOUT_CLASSIFICATION	3.0363044028714824E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999175890293741	WITHOUT_CLASSIFICATION	8.241097062588832E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9998904508746564	WITHOUT_CLASSIFICATION	1.0954912534347352E-4	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999807091925054	WITHOUT_CLASSIFICATION	1.929080749468758E-5	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9990528203459125	WITHOUT_CLASSIFICATION	9.471796540876136E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999879200330507	WITHOUT_CLASSIFICATION	1.2079966949300468E-5	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999699378973336	WITHOUT_CLASSIFICATION	3.0062102666398337E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999601529079044	WITHOUT_CLASSIFICATION	3.984709209569947E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9998544696260613	WITHOUT_CLASSIFICATION	1.4553037393869918E-4	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999692145903084	WITHOUT_CLASSIFICATION	3.078540969167653E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999069415068337	WITHOUT_CLASSIFICATION	9.30584931664045E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999711272591219	WITHOUT_CLASSIFICATION	2.887274087806427E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999740084532341	WITHOUT_CLASSIFICATION	2.599154676588934E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9996858797397076	WITHOUT_CLASSIFICATION	3.1412026029244296E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9996539762117154	WITHOUT_CLASSIFICATION	3.460237882846759E-4	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999535820107096	WITHOUT_CLASSIFICATION	4.6417989290341886E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999802490849724	WITHOUT_CLASSIFICATION	1.9750915027636942E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997607815375662	WITHOUT_CLASSIFICATION	2.3921846243388236E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9997607815375662	WITHOUT_CLASSIFICATION	2.3921846243388236E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993372168871859	WITHOUT_CLASSIFICATION	6.627831128140182E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993372168871859	WITHOUT_CLASSIFICATION	6.627831128140182E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999820953150492	WITHOUT_CLASSIFICATION	1.7904684950816954E-5	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9987052410795618	WITHOUT_CLASSIFICATION	0.001294758920438175	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999920661517309	WITHOUT_CLASSIFICATION	7.933848269108423E-6	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999159417897835	WITHOUT_CLASSIFICATION	8.405821021653851E-5	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999612614358268	WITHOUT_CLASSIFICATION	3.8738564173220125E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.999901303782336	WITHOUT_CLASSIFICATION	9.869621766395217E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999469722884898	WITHOUT_CLASSIFICATION	5.302771151003268E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9991441815349081	WITHOUT_CLASSIFICATION	8.558184650918732E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9986645848709993	WITHOUT_CLASSIFICATION	0.0013354151290006877	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9998132027460361	WITHOUT_CLASSIFICATION	1.8679725396397989E-4	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9998955588228743	WITHOUT_CLASSIFICATION	1.044411771257525E-4	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9992470947893908	WITHOUT_CLASSIFICATION	7.529052106093035E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9990858779477041	WITHOUT_CLASSIFICATION	9.141220522960193E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999942043516217	WITHOUT_CLASSIFICATION	5.79564837832496E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9998951696924693	WITHOUT_CLASSIFICATION	1.0483030753069932E-4	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9998237652968669	WITHOUT_CLASSIFICATION	1.7623470313305113E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999302814839245	WITHOUT_CLASSIFICATION	6.971851607558535E-5	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9998859964089158	WITHOUT_CLASSIFICATION	1.1400359108415788E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999191141244193	WITHOUT_CLASSIFICATION	8.088587558082152E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998345704771289	WITHOUT_CLASSIFICATION	1.654295228712267E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9998305557473395	WITHOUT_CLASSIFICATION	1.6944425266045838E-4	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9998815205784138	WITHOUT_CLASSIFICATION	1.1847942158613195E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999319183590918	WITHOUT_CLASSIFICATION	6.80816409081705E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.999469460627025	WITHOUT_CLASSIFICATION	5.30539372975062E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9998367258458543	WITHOUT_CLASSIFICATION	1.632741541457268E-4	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999780786145637	WITHOUT_CLASSIFICATION	2.1921385436257362E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999467985522225	WITHOUT_CLASSIFICATION	5.320144777754215E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9997179907474916	WITHOUT_CLASSIFICATION	2.820092525084452E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9918288450133291	WITHOUT_CLASSIFICATION	0.008171154986670877	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9985819826238862	WITHOUT_CLASSIFICATION	0.001418017376113776	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999679804508279	WITHOUT_CLASSIFICATION	3.2019549172116236E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9990104711480284	WITHOUT_CLASSIFICATION	9.895288519715499E-4	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999983953369083	WITHOUT_CLASSIFICATION	1.6046630917712825E-6	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9996893322556426	WITHOUT_CLASSIFICATION	3.1066774435743066E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9993488426004482	WITHOUT_CLASSIFICATION	6.511573995517988E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.999959317534013	WITHOUT_CLASSIFICATION	4.068246598693906E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998699594244076	WITHOUT_CLASSIFICATION	1.3004057559232602E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9998749660966579	WITHOUT_CLASSIFICATION	1.2503390334206628E-4	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999302731323682	WITHOUT_CLASSIFICATION	6.972686763185127E-5	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9998047910817706	WITHOUT_CLASSIFICATION	1.9520891822947506E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9862888390843502	WITHOUT_CLASSIFICATION	0.013711160915649931	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999968287941403	WITHOUT_CLASSIFICATION	3.171205859694663E-5	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9998120667351498	WITHOUT_CLASSIFICATION	1.8793326485033802E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.8919361230397506	WITHOUT_CLASSIFICATION	0.10806387696024951	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9992095742957134	WITHOUT_CLASSIFICATION	7.904257042865929E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9978643553059965	WITHOUT_CLASSIFICATION	0.002135644694003481	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9957802657498093	WITHOUT_CLASSIFICATION	0.004219734250190734	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9996373179171559	WITHOUT_CLASSIFICATION	3.626820828441299E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9991537063335281	WITHOUT_CLASSIFICATION	8.462936664718986E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999931076149133	WITHOUT_CLASSIFICATION	6.8923850866711675E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.999997370419184	WITHOUT_CLASSIFICATION	2.6295808159683727E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.999938007145782	WITHOUT_CLASSIFICATION	6.199285421808041E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999319633982223	WITHOUT_CLASSIFICATION	6.80366017777505E-5	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.999863917498405	WITHOUT_CLASSIFICATION	1.3608250159508411E-4	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999870440838361	WITHOUT_CLASSIFICATION	1.2955916163912205E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9996457508446401	WITHOUT_CLASSIFICATION	3.542491553599023E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999854248174592	WITHOUT_CLASSIFICATION	1.4575182540768778E-5	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999961544902056	WITHOUT_CLASSIFICATION	3.845509794342844E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999781129496077	WITHOUT_CLASSIFICATION	2.1887050392257752E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9998536876285673	WITHOUT_CLASSIFICATION	1.4631237143272673E-4	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999684491331234	WITHOUT_CLASSIFICATION	3.155086687650153E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9998589097701698	WITHOUT_CLASSIFICATION	1.410902298302107E-4	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999499831680574	WITHOUT_CLASSIFICATION	5.001683194270142E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999786712425153	WITHOUT_CLASSIFICATION	2.1328757484802503E-5	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999936077929523	WITHOUT_CLASSIFICATION	6.392207047664132E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999709157710922	WITHOUT_CLASSIFICATION	2.908422890781938E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999613216036829	WITHOUT_CLASSIFICATION	3.867839631707802E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9997001247080266	WITHOUT_CLASSIFICATION	2.9987529197336726E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9997001247080266	WITHOUT_CLASSIFICATION	2.9987529197336726E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9997059997276327	WITHOUT_CLASSIFICATION	2.940002723672309E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9816847743762598	WITHOUT_CLASSIFICATION	0.018315225623740213	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9998301606020519	WITHOUT_CLASSIFICATION	1.698393979481946E-4	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999059600198369	WITHOUT_CLASSIFICATION	9.403998016314535E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999434207632798	WITHOUT_CLASSIFICATION	5.6579236720195964E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999454298487307	WITHOUT_CLASSIFICATION	5.4570151269240014E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998791602614451	WITHOUT_CLASSIFICATION	1.2083973855484257E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999075370476458	WITHOUT_CLASSIFICATION	9.246295235424575E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999075370476458	WITHOUT_CLASSIFICATION	9.246295235424575E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9998968710707171	WITHOUT_CLASSIFICATION	1.0312892928290027E-4	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999029575655718	WITHOUT_CLASSIFICATION	9.704243442825034E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9998290601243017	WITHOUT_CLASSIFICATION	1.7093987569825964E-4	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999089089836899	WITHOUT_CLASSIFICATION	9.109101631002892E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9995386063837832	WITHOUT_CLASSIFICATION	4.613936162167722E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999667791918189	WITHOUT_CLASSIFICATION	3.3220808181156984E-5	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9998437418652198	WITHOUT_CLASSIFICATION	1.5625813478008197E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999986793503247	WITHOUT_CLASSIFICATION	1.3206496753163973E-6	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999402661681371	WITHOUT_CLASSIFICATION	5.9733831862903165E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999924307284622	WITHOUT_CLASSIFICATION	7.569271537780194E-6	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9998605346273537	WITHOUT_CLASSIFICATION	1.3946537264628391E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999159546132782	WITHOUT_CLASSIFICATION	8.404538672171654E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.998101206812658	WITHOUT_CLASSIFICATION	0.0018987931873420533	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.99994011288321	WITHOUT_CLASSIFICATION	5.988711678995884E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9970167831810668	WITHOUT_CLASSIFICATION	0.0029832168189332037	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9998526326699158	WITHOUT_CLASSIFICATION	1.4736733008426984E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999916303628485	WITHOUT_CLASSIFICATION	8.369637151352378E-6	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999923505743014	WITHOUT_CLASSIFICATION	7.649425698730719E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9994980054942997	WITHOUT_CLASSIFICATION	5.019945057003448E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999059013416378	WITHOUT_CLASSIFICATION	9.409865836223432E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.999904237970937	WITHOUT_CLASSIFICATION	9.5762029063043E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999745996455547	WITHOUT_CLASSIFICATION	2.540035444539519E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999917833696841	WITHOUT_CLASSIFICATION	8.216630315900952E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.999966244129355	WITHOUT_CLASSIFICATION	3.375587064510114E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9998560258102924	WITHOUT_CLASSIFICATION	1.4397418970755153E-4	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9990931399762615	WITHOUT_CLASSIFICATION	9.068600237386388E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999882419242784	WITHOUT_CLASSIFICATION	1.1758075721685366E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9981275305448204	WITHOUT_CLASSIFICATION	0.0018724694551796467	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9996139524997564	WITHOUT_CLASSIFICATION	3.8604750024371227E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999926718766352	WITHOUT_CLASSIFICATION	7.328123364827173E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999901391872948	WITHOUT_CLASSIFICATION	9.860812705221394E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999220509613326	WITHOUT_CLASSIFICATION	7.794903866737659E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.999633442803814	WITHOUT_CLASSIFICATION	3.665571961859519E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9998962705591373	WITHOUT_CLASSIFICATION	1.0372944086270993E-4	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999851212325609	WITHOUT_CLASSIFICATION	1.4878767439161233E-5	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.999843685381953	WITHOUT_CLASSIFICATION	1.5631461804699922E-4	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999512295285403	WITHOUT_CLASSIFICATION	4.8770471459719194E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999108336111666	WITHOUT_CLASSIFICATION	8.916638883338043E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999874876562319	WITHOUT_CLASSIFICATION	1.2512343768003796E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9882060343488523	WITHOUT_CLASSIFICATION	0.011793965651147735	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997841608478583	WITHOUT_CLASSIFICATION	2.1583915214184562E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.999508657304977	WITHOUT_CLASSIFICATION	4.913426950230912E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9997520310654201	WITHOUT_CLASSIFICATION	2.479689345798927E-4	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9996404975426093	WITHOUT_CLASSIFICATION	3.595024573907163E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9998654431912293	WITHOUT_CLASSIFICATION	1.3455680877067183E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9995132804401365	WITHOUT_CLASSIFICATION	4.8671955986338746E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998206180289219	WITHOUT_CLASSIFICATION	1.7938197107812126E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998206180289219	WITHOUT_CLASSIFICATION	1.7938197107812126E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997220527542395	WITHOUT_CLASSIFICATION	2.779472457604806E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9997220527542395	WITHOUT_CLASSIFICATION	2.779472457604806E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999835333937762	WITHOUT_CLASSIFICATION	1.6466606223743396E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999725807826733	WITHOUT_CLASSIFICATION	2.741921732670362E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998015480797494	WITHOUT_CLASSIFICATION	1.9845192025056045E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9998015480797494	WITHOUT_CLASSIFICATION	1.9845192025056045E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999758119410872	WITHOUT_CLASSIFICATION	2.4188058912877126E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999749660706269	WITHOUT_CLASSIFICATION	2.503392937306569E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9961057967361221	WITHOUT_CLASSIFICATION	0.003894203263877897	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999357087821438	WITHOUT_CLASSIFICATION	6.429121785626783E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9994840545259258	WITHOUT_CLASSIFICATION	5.159454740742101E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9952770142806014	WITHOUT_CLASSIFICATION	0.004722985719398614	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999073036099813	WITHOUT_CLASSIFICATION	9.269639001868367E-5	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999939568900574	WITHOUT_CLASSIFICATION	6.043109942593387E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999412285437876	WITHOUT_CLASSIFICATION	5.877145621229561E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9633958832546287	WITHOUT_CLASSIFICATION	0.03660411674537129	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9998913168389798	WITHOUT_CLASSIFICATION	1.0868316102009209E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999043283612014	WITHOUT_CLASSIFICATION	9.567163879857466E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999223121040091	WITHOUT_CLASSIFICATION	7.768789599089005E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9997646216326219	WITHOUT_CLASSIFICATION	2.3537836737801517E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9998720322101482	WITHOUT_CLASSIFICATION	1.2796778985178558E-4	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9997391067292085	WITHOUT_CLASSIFICATION	2.60893270791459E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999876653093854	WITHOUT_CLASSIFICATION	1.23346906145106E-5	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9998058279447744	WITHOUT_CLASSIFICATION	1.9417205522560035E-4	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999165533748935	WITHOUT_CLASSIFICATION	8.34466251065191E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9998988856153328	WITHOUT_CLASSIFICATION	1.0111438466723961E-4	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999889265847268	WITHOUT_CLASSIFICATION	1.107341527325704E-5	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999906903985719	WITHOUT_CLASSIFICATION	9.30960142810649E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999977585146131	WITHOUT_CLASSIFICATION	2.2414853867643953E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998390137412877	WITHOUT_CLASSIFICATION	1.6098625871229804E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999218267155078	WITHOUT_CLASSIFICATION	7.817328449225168E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.999949395610851	WITHOUT_CLASSIFICATION	5.060438914898507E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9994621966246363	WITHOUT_CLASSIFICATION	5.378033753636505E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9997819265745309	WITHOUT_CLASSIFICATION	2.1807342546916925E-4	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9984909285875553	WITHOUT_CLASSIFICATION	0.0015090714124447932	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.999975657978008	WITHOUT_CLASSIFICATION	2.434202199206367E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9247496929645795	WITHOUT_CLASSIFICATION	0.07525030703542045	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9993819751695648	WITHOUT_CLASSIFICATION	6.180248304352379E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999385315832664	WITHOUT_CLASSIFICATION	6.146841673359472E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999631819405941	WITHOUT_CLASSIFICATION	3.681805940586493E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999213591510191	WITHOUT_CLASSIFICATION	7.864084898085291E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9997649277921717	WITHOUT_CLASSIFICATION	2.3507220782826877E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9992441704001614	WITHOUT_CLASSIFICATION	7.558295998386435E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.999993827293823	WITHOUT_CLASSIFICATION	6.172706176948662E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9997533784041055	WITHOUT_CLASSIFICATION	2.46621595894479E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999452890856447	WITHOUT_CLASSIFICATION	5.4710914355295623E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999777863355367	WITHOUT_CLASSIFICATION	2.2213664463322633E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9998809618321788	WITHOUT_CLASSIFICATION	1.1903816782114874E-4	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999226756494799	WITHOUT_CLASSIFICATION	7.732435052018889E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999945140703043	WITHOUT_CLASSIFICATION	5.485929695629253E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999769878369484	WITHOUT_CLASSIFICATION	2.3012163051633975E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999402493329475	WITHOUT_CLASSIFICATION	5.975066705248859E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999722157232943	WITHOUT_CLASSIFICATION	2.7784276705579917E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999250969155218	WITHOUT_CLASSIFICATION	7.490308447821461E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9971963498071807	WITHOUT_CLASSIFICATION	0.002803650192819322	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9996615704233589	WITHOUT_CLASSIFICATION	3.3842957664120143E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.999967691430499	WITHOUT_CLASSIFICATION	3.230856950088264E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999484977491357	WITHOUT_CLASSIFICATION	5.1502250864292524E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9993563294255605	WITHOUT_CLASSIFICATION	6.436705744394251E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9996158909127103	WITHOUT_CLASSIFICATION	3.8410908728973175E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999436478284048	WITHOUT_CLASSIFICATION	5.6352171595089265E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999318813035405	WITHOUT_CLASSIFICATION	6.811869645952066E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999080547522154	WITHOUT_CLASSIFICATION	9.194524778456381E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999345826180995	WITHOUT_CLASSIFICATION	6.541738190038686E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9998875747039763	WITHOUT_CLASSIFICATION	1.1242529602369682E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998322199252989	WITHOUT_CLASSIFICATION	1.6778007470109416E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999914392826549	WITHOUT_CLASSIFICATION	8.56071734506939E-6	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9997742844012194	WITHOUT_CLASSIFICATION	2.2571559878068959E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998322199252989	WITHOUT_CLASSIFICATION	1.6778007470109416E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999677269241309	WITHOUT_CLASSIFICATION	3.227307586910455E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998322199252989	WITHOUT_CLASSIFICATION	1.6778007470109416E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999425046281848	WITHOUT_CLASSIFICATION	5.7495371815141905E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.999997704802668	WITHOUT_CLASSIFICATION	2.2951973318815205E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9994931070578195	WITHOUT_CLASSIFICATION	5.068929421806006E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999665332817511	WITHOUT_CLASSIFICATION	3.346671824887132E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.999590895253294	WITHOUT_CLASSIFICATION	4.0910474670599985E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9996199751258328	WITHOUT_CLASSIFICATION	3.8002487416711583E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.996209370654711	WITHOUT_CLASSIFICATION	0.0037906293452890805	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999203720126061	WITHOUT_CLASSIFICATION	7.962798739389161E-5	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.999965630310297	WITHOUT_CLASSIFICATION	3.436968970311407E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.999968195546143	WITHOUT_CLASSIFICATION	3.180445385698632E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999349502771627	WITHOUT_CLASSIFICATION	6.504972283737087E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999386518181559	WITHOUT_CLASSIFICATION	6.134818184408601E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999849787978621	WITHOUT_CLASSIFICATION	1.5021202137995253E-5	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.999966329143937	WITHOUT_CLASSIFICATION	3.367085606295623E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999045469874843	WITHOUT_CLASSIFICATION	9.545301251568817E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999607757677939	WITHOUT_CLASSIFICATION	3.922423220612068E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9995897541602244	WITHOUT_CLASSIFICATION	4.1024583977566486E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999411430821648	WITHOUT_CLASSIFICATION	5.885691783535347E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9992754606015166	WITHOUT_CLASSIFICATION	7.24539398483311E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9982157320783301	WITHOUT_CLASSIFICATION	0.0017842679216698598	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999889873117894	WITHOUT_CLASSIFICATION	1.1012688210613281E-5	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999289360637175	WITHOUT_CLASSIFICATION	7.10639362824877E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9998946732830616	WITHOUT_CLASSIFICATION	1.0532671693836108E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999584368098459	WITHOUT_CLASSIFICATION	4.1563190154233744E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9997963198420249	WITHOUT_CLASSIFICATION	2.0368015797516385E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999081539032774	WITHOUT_CLASSIFICATION	9.184609672272538E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9987940508341773	WITHOUT_CLASSIFICATION	0.0012059491658227095	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9997722110303383	WITHOUT_CLASSIFICATION	2.2778896966164992E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9994172586985383	WITHOUT_CLASSIFICATION	5.827413014618404E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9997017135571692	WITHOUT_CLASSIFICATION	2.982864428307874E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999334153706977	WITHOUT_CLASSIFICATION	6.658462930232908E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999657926564097	WITHOUT_CLASSIFICATION	3.420734359035994E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.99996292383725	WITHOUT_CLASSIFICATION	3.7076162749865765E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999815906307746	WITHOUT_CLASSIFICATION	1.8409369225326253E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999753196200005	WITHOUT_CLASSIFICATION	2.468037999941518E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999646318042055	WITHOUT_CLASSIFICATION	3.53681957946197E-5	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9998385792963093	WITHOUT_CLASSIFICATION	1.6142070369075468E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9996490316384483	WITHOUT_CLASSIFICATION	3.509683615517778E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9998846691799603	WITHOUT_CLASSIFICATION	1.1533082003966776E-4	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9994008584934917	WITHOUT_CLASSIFICATION	5.991415065083922E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9996220803377631	WITHOUT_CLASSIFICATION	3.7791966223686273E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999887659532486	WITHOUT_CLASSIFICATION	1.1234046751400517E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999725501356331	WITHOUT_CLASSIFICATION	2.7449864366816303E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9996992057182303	WITHOUT_CLASSIFICATION	3.0079428176959323E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9997349749067467	WITHOUT_CLASSIFICATION	2.6502509325334857E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999828018327998	WITHOUT_CLASSIFICATION	1.719816720025242E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999720842376012	WITHOUT_CLASSIFICATION	2.7915762398736824E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9997930663012117	WITHOUT_CLASSIFICATION	2.069336987883717E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9998926474606252	WITHOUT_CLASSIFICATION	1.0735253937472324E-4	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9998143908280167	WITHOUT_CLASSIFICATION	1.856091719832908E-4	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999499937354914	WITHOUT_CLASSIFICATION	5.000626450850873E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999702082872859	WITHOUT_CLASSIFICATION	2.9791712714053665E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9998258382533407	WITHOUT_CLASSIFICATION	1.7416174665927018E-4	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999524297686222	WITHOUT_CLASSIFICATION	4.757023137774162E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999676915094222	WITHOUT_CLASSIFICATION	3.230849057782988E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9998309990919467	WITHOUT_CLASSIFICATION	1.6900090805324597E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9998322290695407	WITHOUT_CLASSIFICATION	1.6777093045933805E-4	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.999692538144497	WITHOUT_CLASSIFICATION	3.0746185550311494E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999267806771847	WITHOUT_CLASSIFICATION	7.321932281528849E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999089556851163	WITHOUT_CLASSIFICATION	9.104431488370985E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9997680104793822	WITHOUT_CLASSIFICATION	2.3198952061775167E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9998195969887562	WITHOUT_CLASSIFICATION	1.8040301124376803E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999323570133694	WITHOUT_CLASSIFICATION	6.764298663064707E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999419630525377	WITHOUT_CLASSIFICATION	5.8036947462341545E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9998013155900765	WITHOUT_CLASSIFICATION	1.9868440992347082E-4	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9998182527926437	WITHOUT_CLASSIFICATION	1.8174720735627932E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9997080342464574	WITHOUT_CLASSIFICATION	2.919657535425612E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999267806771847	WITHOUT_CLASSIFICATION	7.321932281528849E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999553299644726	WITHOUT_CLASSIFICATION	4.4670035527584446E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999617264534942	WITHOUT_CLASSIFICATION	3.8273546505750726E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999713046185946	WITHOUT_CLASSIFICATION	2.869538140540726E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9937661216506924	WITHOUT_CLASSIFICATION	0.006233878349307646	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999707369419127	WITHOUT_CLASSIFICATION	2.9263058087318044E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9738515055321246	WITHOUT_CLASSIFICATION	0.02614849446787531	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999376984729225	WITHOUT_CLASSIFICATION	6.230152707748275E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999376984729225	WITHOUT_CLASSIFICATION	6.230152707748275E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9958186909671424	WITHOUT_CLASSIFICATION	0.004181309032857636	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9958186909671424	WITHOUT_CLASSIFICATION	0.004181309032857636	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9882526775708089	WITHOUT_CLASSIFICATION	0.01174732242919109	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.999576750644965	WITHOUT_CLASSIFICATION	4.23249355034989E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9941455460514912	WITHOUT_CLASSIFICATION	0.005854453948508895	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9998615307529868	WITHOUT_CLASSIFICATION	1.3846924701314218E-4	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9998948423690102	WITHOUT_CLASSIFICATION	1.0515763098980196E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9998509817991906	WITHOUT_CLASSIFICATION	1.4901820080945799E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999869373991679	WITHOUT_CLASSIFICATION	1.3062600832095539E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9997291775328763	WITHOUT_CLASSIFICATION	2.7082246712372527E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9997691456838586	WITHOUT_CLASSIFICATION	2.308543161413527E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9991584869467854	WITHOUT_CLASSIFICATION	8.415130532144794E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9997919143424631	WITHOUT_CLASSIFICATION	2.0808565753682617E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997171714417756	WITHOUT_CLASSIFICATION	2.8282855822431003E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997171714417756	WITHOUT_CLASSIFICATION	2.8282855822431003E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9941455460514912	WITHOUT_CLASSIFICATION	0.005854453948508895	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9991584869467854	WITHOUT_CLASSIFICATION	8.415130532144794E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9924188473923554	WITHOUT_CLASSIFICATION	0.007581152607644604	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.999576750644965	WITHOUT_CLASSIFICATION	4.23249355034989E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999949696517693	WITHOUT_CLASSIFICATION	5.030348230720607E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9994807569427965	WITHOUT_CLASSIFICATION	5.192430572035052E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999912085771309	WITHOUT_CLASSIFICATION	8.791422869101784E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999912085771309	WITHOUT_CLASSIFICATION	8.791422869101784E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.99990556109014	WITHOUT_CLASSIFICATION	9.44389098600288E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.999996900790322	WITHOUT_CLASSIFICATION	3.099209677917217E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999314684657593	WITHOUT_CLASSIFICATION	6.853153424067691E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9994340288810248	WITHOUT_CLASSIFICATION	5.659711189750738E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9990815551744813	WITHOUT_CLASSIFICATION	9.18444825518739E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999406270984572	WITHOUT_CLASSIFICATION	5.9372901542746225E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998468668816378	WITHOUT_CLASSIFICATION	1.531331183623091E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9991163159777724	WITHOUT_CLASSIFICATION	8.836840222275229E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999308930771827	WITHOUT_CLASSIFICATION	6.910692281725748E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999307864356701	WITHOUT_CLASSIFICATION	6.9213564329868E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9998946719486831	WITHOUT_CLASSIFICATION	1.0532805131683272E-4	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9998947327312924	WITHOUT_CLASSIFICATION	1.0526726870763886E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9993678511869633	WITHOUT_CLASSIFICATION	6.321488130366959E-4	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997900707294277	WITHOUT_CLASSIFICATION	2.099292705723378E-4	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999436908206296	WITHOUT_CLASSIFICATION	5.6309179370433185E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999055915923427	WITHOUT_CLASSIFICATION	9.440840765722179E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999065825790419	WITHOUT_CLASSIFICATION	9.341742095811006E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999818159877077	WITHOUT_CLASSIFICATION	1.8184012292299864E-4	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9959561829119814	WITHOUT_CLASSIFICATION	0.0040438170880186825	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999490529984526	WITHOUT_CLASSIFICATION	5.0947001547279197E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9998490824748291	WITHOUT_CLASSIFICATION	1.5091752517090777E-4	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9998956366675189	WITHOUT_CLASSIFICATION	1.0436333248102297E-4	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9998863842870548	WITHOUT_CLASSIFICATION	1.1361571294517657E-4	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999399574150725	WITHOUT_CLASSIFICATION	6.004258492741305E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999825261990103	WITHOUT_CLASSIFICATION	1.747380098972082E-5	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9995357225251715	WITHOUT_CLASSIFICATION	4.6427747482850564E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999781416558048	WITHOUT_CLASSIFICATION	2.1858344195195403E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999643739411407	WITHOUT_CLASSIFICATION	3.562605885935909E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998666831552115	WITHOUT_CLASSIFICATION	1.333168447885169E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999755997514241	WITHOUT_CLASSIFICATION	2.4400248575926715E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999270616298234	WITHOUT_CLASSIFICATION	7.29383701765568E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999683417783569	WITHOUT_CLASSIFICATION	3.165822164310635E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999717101396162	WITHOUT_CLASSIFICATION	2.8289860383945258E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999716558130425	WITHOUT_CLASSIFICATION	2.8344186957513105E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999988609386793	WITHOUT_CLASSIFICATION	1.1390613206915764E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9995256441609974	WITHOUT_CLASSIFICATION	4.743558390025527E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9997900707294277	WITHOUT_CLASSIFICATION	2.099292705723378E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999985659227927	WITHOUT_CLASSIFICATION	1.4340772072931988E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999952131247383	WITHOUT_CLASSIFICATION	4.786875261708873E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999915538338277	WITHOUT_CLASSIFICATION	8.446166172307602E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999259613400171	WITHOUT_CLASSIFICATION	7.403865998294371E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999643739411407	WITHOUT_CLASSIFICATION	3.562605885935909E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9998666831552115	WITHOUT_CLASSIFICATION	1.333168447885169E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999755997514241	WITHOUT_CLASSIFICATION	2.4400248575926715E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999952666004532	WITHOUT_CLASSIFICATION	4.733399546771434E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995803500872	WITHOUT_CLASSIFICATION	4.1964991278619743E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999555308179698	WITHOUT_CLASSIFICATION	4.446918203026171E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999652831539028	WITHOUT_CLASSIFICATION	3.471684609726679E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978891440552629	WITHOUT_CLASSIFICATION	0.0021108559447372017	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993963410623681	WITHOUT_CLASSIFICATION	6.036589376318887E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9993593577168511	WITHOUT_CLASSIFICATION	6.406422831488324E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999975285031067	WITHOUT_CLASSIFICATION	2.4714968932279468E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9997674967840503	WITHOUT_CLASSIFICATION	2.3250321594960925E-4	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999469818419504	WITHOUT_CLASSIFICATION	5.301815804961207E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998615088286766	WITHOUT_CLASSIFICATION	1.384911713233647E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999639235422496	WITHOUT_CLASSIFICATION	3.6076457750483234E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999729158964893	WITHOUT_CLASSIFICATION	2.7084103510795465E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999781416558048	WITHOUT_CLASSIFICATION	2.1858344195195403E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999717101396162	WITHOUT_CLASSIFICATION	2.8289860383945258E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999716558130425	WITHOUT_CLASSIFICATION	2.8344186957513105E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.999988609386793	WITHOUT_CLASSIFICATION	1.1390613206915764E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999995803500872	WITHOUT_CLASSIFICATION	4.1964991278619743E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999555308179698	WITHOUT_CLASSIFICATION	4.446918203026171E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999652831539028	WITHOUT_CLASSIFICATION	3.471684609726679E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978891440552629	WITHOUT_CLASSIFICATION	0.0021108559447372017	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9993963410623681	WITHOUT_CLASSIFICATION	6.036589376318887E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999911103097303	WITHOUT_CLASSIFICATION	8.889690269752255E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.999659909965057	WITHOUT_CLASSIFICATION	3.400900349429467E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999799532927365	WITHOUT_CLASSIFICATION	2.0046707263532124E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999662028488662	WITHOUT_CLASSIFICATION	3.3797151133790134E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999662028488662	WITHOUT_CLASSIFICATION	3.3797151133790134E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999662028488662	WITHOUT_CLASSIFICATION	3.3797151133790134E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999662028488662	WITHOUT_CLASSIFICATION	3.3797151133790134E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999662028488662	WITHOUT_CLASSIFICATION	3.3797151133790134E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999245154213996	WITHOUT_CLASSIFICATION	7.548457860041098E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999331615531333	WITHOUT_CLASSIFICATION	6.683844686671013E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999098083451378	WITHOUT_CLASSIFICATION	9.019165486219932E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9950624052365502	WITHOUT_CLASSIFICATION	0.0049375947634498	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999708430128204	WITHOUT_CLASSIFICATION	2.9156987179672364E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999112929028002	WITHOUT_CLASSIFICATION	8.870709719969122E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999786825273765	WITHOUT_CLASSIFICATION	2.1317472623414125E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999196750773163	WITHOUT_CLASSIFICATION	8.032492268381108E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9994236256970122	WITHOUT_CLASSIFICATION	5.763743029879323E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998206180289219	WITHOUT_CLASSIFICATION	1.7938197107812126E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998206180289219	WITHOUT_CLASSIFICATION	1.7938197107812126E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998206180289219	WITHOUT_CLASSIFICATION	1.7938197107812126E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999232290171589	WITHOUT_CLASSIFICATION	7.67709828410903E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9989778525079079	WITHOUT_CLASSIFICATION	0.0010221474920921179	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999333220316083	WITHOUT_CLASSIFICATION	6.667796839170532E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998612604688049	WITHOUT_CLASSIFICATION	1.3873953119516115E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998612604688049	WITHOUT_CLASSIFICATION	1.3873953119516115E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999167861405617	WITHOUT_CLASSIFICATION	8.321385943836854E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998612604688049	WITHOUT_CLASSIFICATION	1.3873953119516115E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.999825808671727	WITHOUT_CLASSIFICATION	1.7419132827302291E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9997825845065165	WITHOUT_CLASSIFICATION	2.1741549348357718E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999422280444918	WITHOUT_CLASSIFICATION	5.777195550816888E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999765751333822	WITHOUT_CLASSIFICATION	2.3424866617736846E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999765751333822	WITHOUT_CLASSIFICATION	2.3424866617736846E-5	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9996813927443856	WITHOUT_CLASSIFICATION	3.1860725561436E-4	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9998772951154086	WITHOUT_CLASSIFICATION	1.2270488459139643E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9622539595078576	WITHOUT_CLASSIFICATION	0.03774604049214228	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9277301119372172	WITHOUT_CLASSIFICATION	0.0722698880627828	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999679993402629	WITHOUT_CLASSIFICATION	3.2000659736982355E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999614826744891	WITHOUT_CLASSIFICATION	3.851732551090192E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9996330955757899	WITHOUT_CLASSIFICATION	3.669044242100512E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999611176223436	WITHOUT_CLASSIFICATION	3.888237765644362E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998695818400566	WITHOUT_CLASSIFICATION	1.30418159943472E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999855363480176	WITHOUT_CLASSIFICATION	1.4463651982504557E-5	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997435632802237	WITHOUT_CLASSIFICATION	2.5643671977627615E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.998044971687503	WITHOUT_CLASSIFICATION	0.0019550283124969764	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997435632802237	WITHOUT_CLASSIFICATION	2.5643671977627615E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999380662224253	WITHOUT_CLASSIFICATION	6.193377757465194E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999163308088077	WITHOUT_CLASSIFICATION	8.366919119236472E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999696369559713	WITHOUT_CLASSIFICATION	3.0363044028714824E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9942400300219634	WITHOUT_CLASSIFICATION	0.005759969978036663	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9942400300219634	WITHOUT_CLASSIFICATION	0.005759969978036663	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9965265603207444	WITHOUT_CLASSIFICATION	0.0034734396792555863	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999969993170799	WITHOUT_CLASSIFICATION	3.0006829201956593E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999761736978333	WITHOUT_CLASSIFICATION	2.3826302166637298E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999969189193713	WITHOUT_CLASSIFICATION	3.0810806287516173E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999945319653059	WITHOUT_CLASSIFICATION	5.46803469412555E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999969755914307	WITHOUT_CLASSIFICATION	3.024408569199857E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999945319653059	WITHOUT_CLASSIFICATION	5.46803469412555E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999969887262306	WITHOUT_CLASSIFICATION	3.0112737695745127E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999969887262306	WITHOUT_CLASSIFICATION	3.0112737695745127E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999969887262306	WITHOUT_CLASSIFICATION	3.0112737695745127E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999969887262306	WITHOUT_CLASSIFICATION	3.0112737695745127E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999969993170799	WITHOUT_CLASSIFICATION	3.0006829201956593E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999969887262306	WITHOUT_CLASSIFICATION	3.0112737695745127E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.999831425019553	WITHOUT_CLASSIFICATION	1.6857498044709084E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.999831425019553	WITHOUT_CLASSIFICATION	1.6857498044709084E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999969189193713	WITHOUT_CLASSIFICATION	3.0810806287516173E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.999982970239253	WITHOUT_CLASSIFICATION	1.702976074699061E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.999982970239253	WITHOUT_CLASSIFICATION	1.702976074699061E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999945319653059	WITHOUT_CLASSIFICATION	5.46803469412555E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999969755914307	WITHOUT_CLASSIFICATION	3.024408569199857E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999945319653059	WITHOUT_CLASSIFICATION	5.46803469412555E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999970082768871	WITHOUT_CLASSIFICATION	2.991723112993558E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999969189193713	WITHOUT_CLASSIFICATION	3.0810806287516173E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999969993170799	WITHOUT_CLASSIFICATION	3.0006829201956593E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.999997013957548	WITHOUT_CLASSIFICATION	2.986042451923669E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999969676754872	WITHOUT_CLASSIFICATION	3.0323245127771584E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9996182771585553	WITHOUT_CLASSIFICATION	3.817228414447355E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999912817274076	WITHOUT_CLASSIFICATION	8.718272592349213E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999019154595015	WITHOUT_CLASSIFICATION	9.808454049846291E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.999915901244856	WITHOUT_CLASSIFICATION	8.409875514412683E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9998410802183565	WITHOUT_CLASSIFICATION	1.5891978164347053E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999867808629286	WITHOUT_CLASSIFICATION	1.3219137071359695E-5	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9998367576676312	WITHOUT_CLASSIFICATION	1.6324233236868E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999968287941403	WITHOUT_CLASSIFICATION	3.171205859694663E-5	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9994820316361811	WITHOUT_CLASSIFICATION	5.179683638188864E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9484186986240547	WITHOUT_CLASSIFICATION	0.05158130137594529	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999196096582271	WITHOUT_CLASSIFICATION	8.039034177296177E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999959913373929	WITHOUT_CLASSIFICATION	4.008662607077586E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9997996317432419	WITHOUT_CLASSIFICATION	2.003682567580383E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.99998480355325	WITHOUT_CLASSIFICATION	1.5196446750079383E-5	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999300939406462	WITHOUT_CLASSIFICATION	6.990605935378379E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9997308951865223	WITHOUT_CLASSIFICATION	2.691048134778117E-4	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.999680902366721	WITHOUT_CLASSIFICATION	3.1909763327887027E-4	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999838438284469	WITHOUT_CLASSIFICATION	1.615617155318136E-5	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999853735916	WITHOUT_CLASSIFICATION	1.462640836364909E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999853735916	WITHOUT_CLASSIFICATION	1.462640836364909E-8	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999853735916	WITHOUT_CLASSIFICATION	1.462640836364909E-8	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999745996455547	WITHOUT_CLASSIFICATION	2.540035444539519E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999853735916	WITHOUT_CLASSIFICATION	1.462640836364909E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9991737567696997	WITHOUT_CLASSIFICATION	8.262432303004257E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999779415084292	WITHOUT_CLASSIFICATION	2.2058491570806756E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9907896414526866	WITHOUT_CLASSIFICATION	0.009210358547313495	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999876994900002	WITHOUT_CLASSIFICATION	1.2300509999797074E-4	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999720513709734	WITHOUT_CLASSIFICATION	2.7948629026641607E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998137352703312	WITHOUT_CLASSIFICATION	1.862647296687952E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9994621966246363	WITHOUT_CLASSIFICATION	5.378033753636505E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999649084390583	WITHOUT_CLASSIFICATION	3.5091560941674925E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999310393127562	WITHOUT_CLASSIFICATION	6.896068724375861E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999513226273606	WITHOUT_CLASSIFICATION	4.867737263927834E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999632655738817	WITHOUT_CLASSIFICATION	3.673442611820209E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9986746003429614	WITHOUT_CLASSIFICATION	0.0013253996570386237	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999213591510191	WITHOUT_CLASSIFICATION	7.864084898085291E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9998963055923884	WITHOUT_CLASSIFICATION	1.0369440761162609E-4	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999644384869029	WITHOUT_CLASSIFICATION	3.5561513097224885E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999513746435716	WITHOUT_CLASSIFICATION	4.8625356428295606E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9997976962659513	WITHOUT_CLASSIFICATION	2.023037340488249E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998530444634945	WITHOUT_CLASSIFICATION	1.4695553650544667E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.999990813681426	WITHOUT_CLASSIFICATION	9.186318574132762E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9989114013557869	WITHOUT_CLASSIFICATION	0.0010885986442129936	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999715803530934	WITHOUT_CLASSIFICATION	2.841964690660661E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999829599763679	WITHOUT_CLASSIFICATION	1.7040023632011725E-5	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999131634959858	WITHOUT_CLASSIFICATION	8.68365040142101E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9998418251738188	WITHOUT_CLASSIFICATION	1.5817482618126345E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999217060765312	WITHOUT_CLASSIFICATION	7.829392346880424E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999217060765312	WITHOUT_CLASSIFICATION	7.829392346880424E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999729460259074	WITHOUT_CLASSIFICATION	2.7053974092626584E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9993784123728175	WITHOUT_CLASSIFICATION	6.21587627182526E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9998743868141062	WITHOUT_CLASSIFICATION	1.256131858937364E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9998591647445013	WITHOUT_CLASSIFICATION	1.408352554986117E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994860209702793	WITHOUT_CLASSIFICATION	5.139790297207496E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994860209702793	WITHOUT_CLASSIFICATION	5.139790297207496E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999578430510772	WITHOUT_CLASSIFICATION	4.2156948922806056E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9998983403171643	WITHOUT_CLASSIFICATION	1.0165968283565622E-4	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9977307172290546	WITHOUT_CLASSIFICATION	0.002269282770945364	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999272520370384	WITHOUT_CLASSIFICATION	7.274796296167051E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999723808144457	WITHOUT_CLASSIFICATION	2.761918555427742E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.994882203850204	WITHOUT_CLASSIFICATION	0.005117796149796067	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.994882203850204	WITHOUT_CLASSIFICATION	0.005117796149796067	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9993663220992677	WITHOUT_CLASSIFICATION	6.336779007322848E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9998450282032512	WITHOUT_CLASSIFICATION	1.5497179674887727E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9998494103819637	WITHOUT_CLASSIFICATION	1.5058961803627723E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9994444434436225	WITHOUT_CLASSIFICATION	5.555565563774717E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999267806771847	WITHOUT_CLASSIFICATION	7.321932281528849E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9946733013158355	WITHOUT_CLASSIFICATION	0.005326698684164527	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9995992024890001	WITHOUT_CLASSIFICATION	4.007975109998471E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999652653442055	WITHOUT_CLASSIFICATION	3.473465579447674E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9882526775708089	WITHOUT_CLASSIFICATION	0.01174732242919109	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9996657774010138	WITHOUT_CLASSIFICATION	3.342225989861781E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9998276212875217	WITHOUT_CLASSIFICATION	1.723787124784373E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999825990054961	WITHOUT_CLASSIFICATION	1.7400994503821687E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9838060684272967	WITHOUT_CLASSIFICATION	0.016193931572703397	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999632792322312	WITHOUT_CLASSIFICATION	3.672076776880308E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9995116729207191	WITHOUT_CLASSIFICATION	4.883270792809196E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999872569653856	WITHOUT_CLASSIFICATION	1.274303461439636E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9924188473923554	WITHOUT_CLASSIFICATION	0.007581152607644604	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9998657279410472	WITHOUT_CLASSIFICATION	1.342720589528938E-4	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999974966247427	WITHOUT_CLASSIFICATION	2.5033752573862025E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999974966247427	WITHOUT_CLASSIFICATION	2.5033752573862025E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999942223851469	WITHOUT_CLASSIFICATION	5.77761485306325E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9999536807487855	WITHOUT_CLASSIFICATION	4.631925121450895E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9972540237754564	WITHOUT_CLASSIFICATION	0.002745976224543517	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9998247740941139	WITHOUT_CLASSIFICATION	1.752259058861531E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.99997722340276	WITHOUT_CLASSIFICATION	2.2776597240112834E-5	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9998308118849104	WITHOUT_CLASSIFICATION	1.6918811508951547E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9998629608033907	WITHOUT_CLASSIFICATION	1.3703919660932007E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999720194849953	WITHOUT_CLASSIFICATION	2.798051500477115E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.999880189945197	WITHOUT_CLASSIFICATION	1.1981005480295478E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.999966014435794	WITHOUT_CLASSIFICATION	3.3985564206004244E-5	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9997141929106831	WITHOUT_CLASSIFICATION	2.8580708931700194E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9991710667166068	WITHOUT_CLASSIFICATION	8.28933283393122E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.992227652655338	WITHOUT_CLASSIFICATION	0.007772347344662029	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9996018818774602	WITHOUT_CLASSIFICATION	3.981181225398003E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9884784152030875	WITHOUT_CLASSIFICATION	0.01152158479691246	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9993350787997763	WITHOUT_CLASSIFICATION	6.649212002236254E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9996422269229072	WITHOUT_CLASSIFICATION	3.5777307709284966E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9996892309871367	WITHOUT_CLASSIFICATION	3.1076901286326164E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9998125511201423	WITHOUT_CLASSIFICATION	1.874488798577155E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9998879220022261	WITHOUT_CLASSIFICATION	1.1207799777385871E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9998879220022261	WITHOUT_CLASSIFICATION	1.1207799777385871E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9986362917792411	WITHOUT_CLASSIFICATION	0.001363708220758933	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999641442045152	WITHOUT_CLASSIFICATION	3.5855795484857566E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.99767543098302	WITHOUT_CLASSIFICATION	0.002324569016979964	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999348726948567	WITHOUT_CLASSIFICATION	6.512730514337507E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9997886916693126	WITHOUT_CLASSIFICATION	2.113083306874151E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9997881705233392	WITHOUT_CLASSIFICATION	2.1182947666070033E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.998518828507382	WITHOUT_CLASSIFICATION	0.001481171492617942	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997171714417756	WITHOUT_CLASSIFICATION	2.8282855822431003E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997171714417756	WITHOUT_CLASSIFICATION	2.8282855822431003E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9997171714417756	WITHOUT_CLASSIFICATION	2.8282855822431003E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9998420087543141	WITHOUT_CLASSIFICATION	1.579912456859525E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998844233156606	WITHOUT_CLASSIFICATION	1.1557668433935815E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9907849270345577	WITHOUT_CLASSIFICATION	0.009215072965442404	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999110391745802	WITHOUT_CLASSIFICATION	8.896082541983603E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999110391745802	WITHOUT_CLASSIFICATION	8.896082541983603E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999375949263827	WITHOUT_CLASSIFICATION	6.240507361732852E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9994645597150015	WITHOUT_CLASSIFICATION	5.354402849985242E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998980618490273	WITHOUT_CLASSIFICATION	1.019381509726743E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9969400045004105	WITHOUT_CLASSIFICATION	0.0030599954995894118	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999935447592505	WITHOUT_CLASSIFICATION	6.455240749482371E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999648064754658	WITHOUT_CLASSIFICATION	3.5193524534237205E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9997857660421678	WITHOUT_CLASSIFICATION	2.1423395783213593E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999181422841141	WITHOUT_CLASSIFICATION	8.18577158857723E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999866027179796	WITHOUT_CLASSIFICATION	1.339728202051934E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993648322267813	WITHOUT_CLASSIFICATION	6.351677732187496E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998487388523212	WITHOUT_CLASSIFICATION	1.5126114767876432E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997059355678408	WITHOUT_CLASSIFICATION	2.9406443215921615E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9997059355678408	WITHOUT_CLASSIFICATION	2.9406443215921615E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999516048507452	WITHOUT_CLASSIFICATION	4.8395149254791986E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999189988952072	WITHOUT_CLASSIFICATION	8.100110479284245E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999189988952072	WITHOUT_CLASSIFICATION	8.100110479284245E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999643485716083	WITHOUT_CLASSIFICATION	3.565142839169587E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.999879790891482	WITHOUT_CLASSIFICATION	1.2020910851792417E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9998724232899743	WITHOUT_CLASSIFICATION	1.275767100257699E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995769346187658	WITHOUT_CLASSIFICATION	4.2306538123418694E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994831936324233	WITHOUT_CLASSIFICATION	5.168063675765852E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.999985461543708	WITHOUT_CLASSIFICATION	1.4538456291998782E-5	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9990194951351876	WITHOUT_CLASSIFICATION	9.80504864812382E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9966057781877709	WITHOUT_CLASSIFICATION	0.003394221812229181	DEFECT
// EATM must fix isSet bits.	DEFECT	0.999844590956218	WITHOUT_CLASSIFICATION	1.5540904378200628E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.999844590956218	WITHOUT_CLASSIFICATION	1.5540904378200628E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9701588495707826	WITHOUT_CLASSIFICATION	0.029841150429217478	DEFECT
// is this an error???	DEFECT	0.9996468356624487	WITHOUT_CLASSIFICATION	3.5316433755127106E-4	DEFECT
// is this an error???	DEFECT	0.9996468356624487	WITHOUT_CLASSIFICATION	3.5316433755127106E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9997337845107074	WITHOUT_CLASSIFICATION	2.662154892925887E-4	DEFECT
