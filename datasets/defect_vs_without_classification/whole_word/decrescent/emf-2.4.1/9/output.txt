// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9995699452480702	WITHOUT_CLASSIFICATION	4.300547519297415E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997438329947075	WITHOUT_CLASSIFICATION	2.561670052925607E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999537595866119	WITHOUT_CLASSIFICATION	4.624041338815462E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999679065773666	WITHOUT_CLASSIFICATION	3.2093422633490277E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995129264401035	WITHOUT_CLASSIFICATION	4.870735598965183E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999733368834297	WITHOUT_CLASSIFICATION	2.6663116570268163E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998186500546035	WITHOUT_CLASSIFICATION	1.8134994539657258E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999048268172154	WITHOUT_CLASSIFICATION	9.517318278463552E-5	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999516625277812	WITHOUT_CLASSIFICATION	4.833747221865809E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999666159300898	WITHOUT_CLASSIFICATION	3.3384069910233314E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999794695142767	WITHOUT_CLASSIFICATION	2.0530485723213083E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999963914497698	WITHOUT_CLASSIFICATION	3.608550230203549E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817332532567	WITHOUT_CLASSIFICATION	2.182667467432544E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999303011841226	WITHOUT_CLASSIFICATION	6.969881587738305E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998721771611164	WITHOUT_CLASSIFICATION	1.2782283888364678E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999751167686508	WITHOUT_CLASSIFICATION	2.4883231349137793E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999509612971239	WITHOUT_CLASSIFICATION	4.9038702876170787E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998186500546035	WITHOUT_CLASSIFICATION	1.8134994539657258E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999551272892019	WITHOUT_CLASSIFICATION	4.48727107982316E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999805666717402	WITHOUT_CLASSIFICATION	1.9433328259812214E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996658947525848	WITHOUT_CLASSIFICATION	3.3410524741516476E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.990766490892669	WITHOUT_CLASSIFICATION	0.00923350910733094	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999533371203141	WITHOUT_CLASSIFICATION	4.6662879685951634E-5	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9994758918441553	WITHOUT_CLASSIFICATION	5.241081558447953E-4	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9892442475275688	WITHOUT_CLASSIFICATION	0.010755752472431346	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9989139209663948	WITHOUT_CLASSIFICATION	0.001086079033605301	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9930485724830178	WITHOUT_CLASSIFICATION	0.0069514275169821945	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998881261996921	WITHOUT_CLASSIFICATION	1.1187380030789167E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999402319671765	WITHOUT_CLASSIFICATION	5.9768032823502394E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999869252461426	WITHOUT_CLASSIFICATION	1.3074753857332755E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9983796620125174	WITHOUT_CLASSIFICATION	0.001620337987482691	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999568149850153	WITHOUT_CLASSIFICATION	4.31850149847362E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9987983217863733	WITHOUT_CLASSIFICATION	0.00120167821362674	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999936617987214	WITHOUT_CLASSIFICATION	6.338201278654181E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.999917544840827	WITHOUT_CLASSIFICATION	8.24551591730605E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999536503903008	WITHOUT_CLASSIFICATION	4.634960969918591E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9976479093357653	WITHOUT_CLASSIFICATION	0.002352090664234758	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999550757565132	WITHOUT_CLASSIFICATION	4.4924243486700344E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999803361879821	WITHOUT_CLASSIFICATION	1.9663812017810483E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9940444578045207	WITHOUT_CLASSIFICATION	0.005955542195479392	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999857226629935	WITHOUT_CLASSIFICATION	1.4277337006571367E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9997438329947075	WITHOUT_CLASSIFICATION	2.561670052925607E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997483643519841	WITHOUT_CLASSIFICATION	2.51635648015862E-4	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999963884875095	WITHOUT_CLASSIFICATION	3.6115124905045558E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9993613586687017	WITHOUT_CLASSIFICATION	6.38641331298326E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999330469063359	WITHOUT_CLASSIFICATION	6.695309366409535E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.8170286488200464	WITHOUT_CLASSIFICATION	0.18297135117995345	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999329774352875	WITHOUT_CLASSIFICATION	6.702256471249753E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999956124981375	WITHOUT_CLASSIFICATION	4.387501862496249E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9822056561249324	WITHOUT_CLASSIFICATION	0.01779434387506763	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999963914497698	WITHOUT_CLASSIFICATION	3.608550230203549E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817332532567	WITHOUT_CLASSIFICATION	2.182667467432544E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999303011841226	WITHOUT_CLASSIFICATION	6.969881587738305E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9998323443787436	WITHOUT_CLASSIFICATION	1.676556212564242E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998721771611164	WITHOUT_CLASSIFICATION	1.2782283888364678E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999751167686508	WITHOUT_CLASSIFICATION	2.4883231349137793E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999509612971239	WITHOUT_CLASSIFICATION	4.9038702876170787E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9931980339313821	WITHOUT_CLASSIFICATION	0.006801966068617964	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9931980339313821	WITHOUT_CLASSIFICATION	0.006801966068617964	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9931980339313821	WITHOUT_CLASSIFICATION	0.006801966068617964	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999733368834297	WITHOUT_CLASSIFICATION	2.6663116570268163E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.999520856331573	WITHOUT_CLASSIFICATION	4.791436684270061E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9998898036704015	WITHOUT_CLASSIFICATION	1.1019632959854044E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.999981667802221	WITHOUT_CLASSIFICATION	1.8332197779009184E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996658947525848	WITHOUT_CLASSIFICATION	3.3410524741516476E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996554633814196	WITHOUT_CLASSIFICATION	3.445366185803867E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998881261996921	WITHOUT_CLASSIFICATION	1.1187380030789167E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999402319671765	WITHOUT_CLASSIFICATION	5.9768032823502394E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9983796620125174	WITHOUT_CLASSIFICATION	0.001620337987482691	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999936617987214	WITHOUT_CLASSIFICATION	6.338201278654181E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9998861387881323	WITHOUT_CLASSIFICATION	1.1386121186776537E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9998685574145256	WITHOUT_CLASSIFICATION	1.3144258547447641E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999637694235334	WITHOUT_CLASSIFICATION	3.6230576466560356E-5	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999666217507386	WITHOUT_CLASSIFICATION	3.337824926150723E-5	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999714196418493	WITHOUT_CLASSIFICATION	2.8580358150737282E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999550757565132	WITHOUT_CLASSIFICATION	4.4924243486700344E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9940444578045207	WITHOUT_CLASSIFICATION	0.005955542195479392	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999758832419399	WITHOUT_CLASSIFICATION	2.411675806015155E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9995471023699573	WITHOUT_CLASSIFICATION	4.5289763004270996E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999892512806584	WITHOUT_CLASSIFICATION	1.0748719341560321E-5	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999898369368451	WITHOUT_CLASSIFICATION	1.0163063154813028E-5	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999262686487589	WITHOUT_CLASSIFICATION	7.373135124106225E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.998688787403358	WITHOUT_CLASSIFICATION	0.0013112125966420808	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998958620229644	WITHOUT_CLASSIFICATION	1.041379770356292E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9765995736714678	WITHOUT_CLASSIFICATION	0.023400426328532318	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9992212620184279	WITHOUT_CLASSIFICATION	7.787379815721817E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999835435040586	WITHOUT_CLASSIFICATION	1.6456495941433726E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999361591340734	WITHOUT_CLASSIFICATION	6.384086592663821E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999509181489347	WITHOUT_CLASSIFICATION	4.908185106542684E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9995236644851399	WITHOUT_CLASSIFICATION	4.763355148601337E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9996551627834427	WITHOUT_CLASSIFICATION	3.448372165573302E-4	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999835435040586	WITHOUT_CLASSIFICATION	1.6456495941433726E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999361591340734	WITHOUT_CLASSIFICATION	6.384086592663821E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9998468002552592	WITHOUT_CLASSIFICATION	1.5319974474082716E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9998468002552592	WITHOUT_CLASSIFICATION	1.5319974474082716E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997432954239334	WITHOUT_CLASSIFICATION	2.567045760667252E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9998881655694227	WITHOUT_CLASSIFICATION	1.118344305772312E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.99999061770704	WITHOUT_CLASSIFICATION	9.382292959960311E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9997432954239334	WITHOUT_CLASSIFICATION	2.567045760667252E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9998881655694227	WITHOUT_CLASSIFICATION	1.118344305772312E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999733874108553	WITHOUT_CLASSIFICATION	2.66125891447094E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999419936876517	WITHOUT_CLASSIFICATION	5.800631234832012E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999802531243722	WITHOUT_CLASSIFICATION	1.974687562779757E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999244741285361	WITHOUT_CLASSIFICATION	7.55258714638346E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999802531243722	WITHOUT_CLASSIFICATION	1.974687562779757E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999808322836015	WITHOUT_CLASSIFICATION	1.9167716398533362E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999161299955139	WITHOUT_CLASSIFICATION	8.387000448604428E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999161299955139	WITHOUT_CLASSIFICATION	8.387000448604428E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9998631591216912	WITHOUT_CLASSIFICATION	1.3684087830884611E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.999975678529615	WITHOUT_CLASSIFICATION	2.432147038495152E-5	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9998270201971479	WITHOUT_CLASSIFICATION	1.7297980285211855E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999807619594612	WITHOUT_CLASSIFICATION	1.923804053885887E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999920388315764	WITHOUT_CLASSIFICATION	7.96116842364792E-6	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9998869423545077	WITHOUT_CLASSIFICATION	1.1305764549218277E-4	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9998741460043598	WITHOUT_CLASSIFICATION	1.2585399564019902E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999638762331314	WITHOUT_CLASSIFICATION	3.612376686849095E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999956357978483	WITHOUT_CLASSIFICATION	4.364202151634258E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9998336043095039	WITHOUT_CLASSIFICATION	1.6639569049624442E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999947071762436	WITHOUT_CLASSIFICATION	5.292823756348556E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999276463138472	WITHOUT_CLASSIFICATION	7.235368615273598E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999294032104574	WITHOUT_CLASSIFICATION	7.05967895425657E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9998557683318621	WITHOUT_CLASSIFICATION	1.442316681379918E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9995984413067873	WITHOUT_CLASSIFICATION	4.0155869321271373E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998425367354264	WITHOUT_CLASSIFICATION	1.5746326457350202E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9997519775010723	WITHOUT_CLASSIFICATION	2.480224989277585E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999950986979	WITHOUT_CLASSIFICATION	4.901302224335907E-9	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999950986979	WITHOUT_CLASSIFICATION	4.901302224335907E-9	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999950128402439	WITHOUT_CLASSIFICATION	4.98715975610398E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999501669409869	WITHOUT_CLASSIFICATION	4.983305901301062E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9998949936749554	WITHOUT_CLASSIFICATION	1.0500632504464005E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9995428511570738	WITHOUT_CLASSIFICATION	4.571488429261877E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9986706385370939	WITHOUT_CLASSIFICATION	0.001329361462906066	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999777883784098	WITHOUT_CLASSIFICATION	2.221162159020055E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9998557683318621	WITHOUT_CLASSIFICATION	1.442316681379918E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9956341399559935	WITHOUT_CLASSIFICATION	0.004365860044006448	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999115140622564	WITHOUT_CLASSIFICATION	8.848593774359881E-5	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999765640406919	WITHOUT_CLASSIFICATION	2.3435959308006575E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999721474041855	WITHOUT_CLASSIFICATION	2.7852595814429027E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9995624653835281	WITHOUT_CLASSIFICATION	4.3753461647186667E-4	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9998089959762644	WITHOUT_CLASSIFICATION	1.9100402373559396E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999847685603582	WITHOUT_CLASSIFICATION	1.5231439641864186E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999578214263812	WITHOUT_CLASSIFICATION	4.2178573618811327E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9998478039958072	WITHOUT_CLASSIFICATION	1.5219600419287646E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995821464891382	WITHOUT_CLASSIFICATION	4.1785351086177236E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999996978024164	WITHOUT_CLASSIFICATION	3.021975835776938E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999482092001282	WITHOUT_CLASSIFICATION	5.1790799871782934E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999482092001282	WITHOUT_CLASSIFICATION	5.1790799871782934E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9968692217160007	WITHOUT_CLASSIFICATION	0.0031307782839993825	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999751203537394	WITHOUT_CLASSIFICATION	2.4879646260524133E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999397307354273	WITHOUT_CLASSIFICATION	6.0269264572785536E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999963323408286	WITHOUT_CLASSIFICATION	3.6676591714232427E-6	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999978418978491	WITHOUT_CLASSIFICATION	2.158102150748154E-6	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999947552900509	WITHOUT_CLASSIFICATION	5.2447099490481694E-6	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9965461721745351	WITHOUT_CLASSIFICATION	0.0034538278254649763	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999733206262207	WITHOUT_CLASSIFICATION	2.6679373779367778E-5	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9998604704138382	WITHOUT_CLASSIFICATION	1.3952958616181497E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9808382020800553	WITHOUT_CLASSIFICATION	0.019161797919944705	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999289877530876	WITHOUT_CLASSIFICATION	7.101224691241898E-5	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.998114899211918	WITHOUT_CLASSIFICATION	0.0018851007880820343	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9988083894850265	WITHOUT_CLASSIFICATION	0.0011916105149735227	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999425174020374	WITHOUT_CLASSIFICATION	5.748259796250095E-5	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9775672110975764	WITHOUT_CLASSIFICATION	0.022432788902423544	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999857303283992	WITHOUT_CLASSIFICATION	1.4269671600729128E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999157847844786	WITHOUT_CLASSIFICATION	8.421521552134096E-5	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999974445251942	WITHOUT_CLASSIFICATION	2.5554748058178517E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9994420643371701	WITHOUT_CLASSIFICATION	5.579356628299797E-4	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999991491932055	WITHOUT_CLASSIFICATION	8.508067943682388E-7	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999997881897	WITHOUT_CLASSIFICATION	2.1181030002360458E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999843296808487	WITHOUT_CLASSIFICATION	1.5670319151178823E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999941758611613	WITHOUT_CLASSIFICATION	5.824138838712546E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999274173933691	WITHOUT_CLASSIFICATION	7.258260663087965E-5	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9997728843312444	WITHOUT_CLASSIFICATION	2.271156687555311E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999965434069511	WITHOUT_CLASSIFICATION	3.456593048796053E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9992718890482357	WITHOUT_CLASSIFICATION	7.281109517642329E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9995261597622715	WITHOUT_CLASSIFICATION	4.7384023772852616E-4	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.99682511240281	WITHOUT_CLASSIFICATION	0.00317488759718997	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999673219525579	WITHOUT_CLASSIFICATION	3.267804744203707E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999944198445754	WITHOUT_CLASSIFICATION	5.580155424620905E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999944198445754	WITHOUT_CLASSIFICATION	5.580155424620905E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999782930484362	WITHOUT_CLASSIFICATION	2.1706951563740162E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999782930484362	WITHOUT_CLASSIFICATION	2.1706951563740162E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9992338045596577	WITHOUT_CLASSIFICATION	7.661954403423008E-4	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999774970853248	WITHOUT_CLASSIFICATION	2.2502914675164764E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999433925129741	WITHOUT_CLASSIFICATION	5.660748702589662E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999433925129741	WITHOUT_CLASSIFICATION	5.660748702589662E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.999936105625534	WITHOUT_CLASSIFICATION	6.389437446594327E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9996114280900144	WITHOUT_CLASSIFICATION	3.885719099856308E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999276463138472	WITHOUT_CLASSIFICATION	7.235368615273598E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999782413192112	WITHOUT_CLASSIFICATION	2.1758680788911333E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999782413192112	WITHOUT_CLASSIFICATION	2.1758680788911333E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999782413192112	WITHOUT_CLASSIFICATION	2.1758680788911333E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9996114280900144	WITHOUT_CLASSIFICATION	3.885719099856308E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999466524277276	WITHOUT_CLASSIFICATION	5.334757227252418E-5	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.999779077963912	WITHOUT_CLASSIFICATION	2.2092203608807366E-4	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9983366024181765	WITHOUT_CLASSIFICATION	0.0016633975818236147	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998863646061205	WITHOUT_CLASSIFICATION	1.1363539387950862E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.999923829503338	WITHOUT_CLASSIFICATION	7.617049666199225E-5	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9998152202080131	WITHOUT_CLASSIFICATION	1.8477979198697742E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999537595866119	WITHOUT_CLASSIFICATION	4.624041338815462E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999679065773666	WITHOUT_CLASSIFICATION	3.2093422633490277E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995129264401035	WITHOUT_CLASSIFICATION	4.870735598965183E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999733368834297	WITHOUT_CLASSIFICATION	2.6663116570268163E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999048268172154	WITHOUT_CLASSIFICATION	9.517318278463552E-5	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999516625277812	WITHOUT_CLASSIFICATION	4.833747221865809E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999666159300898	WITHOUT_CLASSIFICATION	3.3384069910233314E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999963914497698	WITHOUT_CLASSIFICATION	3.608550230203549E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817332532567	WITHOUT_CLASSIFICATION	2.182667467432544E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999303011841226	WITHOUT_CLASSIFICATION	6.969881587738305E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998804072382067	WITHOUT_CLASSIFICATION	1.1959276179332318E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998721771611164	WITHOUT_CLASSIFICATION	1.2782283888364678E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999751167686508	WITHOUT_CLASSIFICATION	2.4883231349137793E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999509612971239	WITHOUT_CLASSIFICATION	4.9038702876170787E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999551272892019	WITHOUT_CLASSIFICATION	4.48727107982316E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999805666717402	WITHOUT_CLASSIFICATION	1.9433328259812214E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998623003011523	WITHOUT_CLASSIFICATION	1.3769969884764712E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999531772898853	WITHOUT_CLASSIFICATION	4.682271011468714E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996658947525848	WITHOUT_CLASSIFICATION	3.3410524741516476E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.990766490892669	WITHOUT_CLASSIFICATION	0.00923350910733094	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999533371203141	WITHOUT_CLASSIFICATION	4.6662879685951634E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996554633814196	WITHOUT_CLASSIFICATION	3.445366185803867E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998881261996921	WITHOUT_CLASSIFICATION	1.1187380030789167E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999402319671765	WITHOUT_CLASSIFICATION	5.9768032823502394E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999869252461426	WITHOUT_CLASSIFICATION	1.3074753857332755E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9983796620125174	WITHOUT_CLASSIFICATION	0.001620337987482691	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999997718710759	WITHOUT_CLASSIFICATION	2.281289240909499E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999848478072472	WITHOUT_CLASSIFICATION	1.515219275290582E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999536503903008	WITHOUT_CLASSIFICATION	4.634960969918591E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999568149850153	WITHOUT_CLASSIFICATION	4.31850149847362E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999936617987214	WITHOUT_CLASSIFICATION	6.338201278654181E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9987983217863733	WITHOUT_CLASSIFICATION	0.00120167821362674	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995853254525664	WITHOUT_CLASSIFICATION	4.1467454743356725E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999706085748531	WITHOUT_CLASSIFICATION	2.9391425146939955E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999936617987214	WITHOUT_CLASSIFICATION	6.338201278654181E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999550757565132	WITHOUT_CLASSIFICATION	4.4924243486700344E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9976479093357653	WITHOUT_CLASSIFICATION	0.002352090664234758	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999857053829392	WITHOUT_CLASSIFICATION	1.4294617060738293E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9940444578045207	WITHOUT_CLASSIFICATION	0.005955542195479392	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999812719822396	WITHOUT_CLASSIFICATION	1.8728017760286112E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995853254525664	WITHOUT_CLASSIFICATION	4.1467454743356725E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9940444578045207	WITHOUT_CLASSIFICATION	0.005955542195479392	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.999790467709504	WITHOUT_CLASSIFICATION	2.0953229049604206E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999622120978361	WITHOUT_CLASSIFICATION	3.7787902163874404E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999872805962763	WITHOUT_CLASSIFICATION	1.2719403723845277E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999899308166007	WITHOUT_CLASSIFICATION	1.0069183399301721E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9994604344641327	WITHOUT_CLASSIFICATION	5.395655358673178E-4	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.999903595748298	WITHOUT_CLASSIFICATION	9.640425170196746E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9994604344641327	WITHOUT_CLASSIFICATION	5.395655358673178E-4	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9998925426475582	WITHOUT_CLASSIFICATION	1.074573524417165E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9995951863978823	WITHOUT_CLASSIFICATION	4.0481360211774224E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9978615610337515	WITHOUT_CLASSIFICATION	0.0021384389662484748	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999588677844098	WITHOUT_CLASSIFICATION	4.1132215590219815E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9997531317742615	WITHOUT_CLASSIFICATION	2.4686822573857244E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999122679528393	WITHOUT_CLASSIFICATION	8.773204716069861E-5	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9992188596285126	WITHOUT_CLASSIFICATION	7.81140371487442E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9987016399830105	WITHOUT_CLASSIFICATION	0.0012983600169895486	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999899773273248	WITHOUT_CLASSIFICATION	1.0022672675290719E-5	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9994634449723293	WITHOUT_CLASSIFICATION	5.365550276708036E-4	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9993418805463844	WITHOUT_CLASSIFICATION	6.581194536157273E-4	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999568111565869	WITHOUT_CLASSIFICATION	4.318884341313712E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9986838614866369	WITHOUT_CLASSIFICATION	0.0013161385133630852	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999380342855663	WITHOUT_CLASSIFICATION	6.196571443368765E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999938756066765	WITHOUT_CLASSIFICATION	6.124393323435748E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999814365298635	WITHOUT_CLASSIFICATION	1.856347013655186E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9962345613068966	WITHOUT_CLASSIFICATION	0.0037654386931033155	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9988458641100283	WITHOUT_CLASSIFICATION	0.0011541358899716998	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9998670928680568	WITHOUT_CLASSIFICATION	1.3290713194320867E-4	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999825525176652	WITHOUT_CLASSIFICATION	1.744748233482173E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999356557817405	WITHOUT_CLASSIFICATION	6.434421825951382E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999108762392619	WITHOUT_CLASSIFICATION	8.912376073812784E-5	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999614466631339	WITHOUT_CLASSIFICATION	3.8553336865989986E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999857226629935	WITHOUT_CLASSIFICATION	1.4277337006571367E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999734457932733	WITHOUT_CLASSIFICATION	2.655420672669528E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999510649411923	WITHOUT_CLASSIFICATION	4.893505880765517E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999972879220113	WITHOUT_CLASSIFICATION	2.7120779886720474E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999904568244837	WITHOUT_CLASSIFICATION	9.543175516250774E-6	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999730345143866	WITHOUT_CLASSIFICATION	2.696548561348311E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9997497320895771	WITHOUT_CLASSIFICATION	2.502679104229152E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999793810763122	WITHOUT_CLASSIFICATION	2.0618923687828283E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999291645004977	WITHOUT_CLASSIFICATION	7.083549950225454E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999778350057403	WITHOUT_CLASSIFICATION	2.216499425962379E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.999976466684686	WITHOUT_CLASSIFICATION	2.3533315314010965E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999698102381251	WITHOUT_CLASSIFICATION	3.0189761874889957E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9991050834040628	WITHOUT_CLASSIFICATION	8.94916595937293E-4	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999693677585767	WITHOUT_CLASSIFICATION	3.0632241423187445E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999900113798793	WITHOUT_CLASSIFICATION	9.98862012059761E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999758832419399	WITHOUT_CLASSIFICATION	2.411675806015155E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999513953614593	WITHOUT_CLASSIFICATION	4.860463854069466E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999796098849143	WITHOUT_CLASSIFICATION	2.0390115085745576E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999921865713073	WITHOUT_CLASSIFICATION	7.813428692685134E-6	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999949782482187	WITHOUT_CLASSIFICATION	5.021751781308732E-6	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999970018729682	WITHOUT_CLASSIFICATION	2.998127031878625E-6	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9905887118501121	WITHOUT_CLASSIFICATION	0.00941128814988801	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9953883036216481	WITHOUT_CLASSIFICATION	0.004611696378351914	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999276870135985	WITHOUT_CLASSIFICATION	7.231298640146816E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9998720381846514	WITHOUT_CLASSIFICATION	1.279618153484845E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.999975678529615	WITHOUT_CLASSIFICATION	2.432147038495152E-5	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9985657947073191	WITHOUT_CLASSIFICATION	0.0014342052926809828	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999362601397722	WITHOUT_CLASSIFICATION	6.373986022775586E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999826144427435	WITHOUT_CLASSIFICATION	1.7385557256467964E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999958470643207	WITHOUT_CLASSIFICATION	4.152935679350503E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999964776339486	WITHOUT_CLASSIFICATION	3.522366051339445E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998596911526693	WITHOUT_CLASSIFICATION	1.4030884733063454E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9996909847036036	WITHOUT_CLASSIFICATION	3.090152963963108E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.999833819132425	WITHOUT_CLASSIFICATION	1.6618086757497056E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999571445072072	WITHOUT_CLASSIFICATION	4.285549279283677E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999968381128	WITHOUT_CLASSIFICATION	3.1618872000230667E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999941418829111	WITHOUT_CLASSIFICATION	5.858117088936378E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9998425367354264	WITHOUT_CLASSIFICATION	1.5746326457350202E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9997519775010723	WITHOUT_CLASSIFICATION	2.480224989277585E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999777883784098	WITHOUT_CLASSIFICATION	2.221162159020055E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998596911526693	WITHOUT_CLASSIFICATION	1.4030884733063454E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999968381128	WITHOUT_CLASSIFICATION	3.1618872000230667E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999941418829111	WITHOUT_CLASSIFICATION	5.858117088936378E-6	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.999933868053281	WITHOUT_CLASSIFICATION	6.61319467190712E-5	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999794596838192	WITHOUT_CLASSIFICATION	2.0540316180850422E-5	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999240605212447	WITHOUT_CLASSIFICATION	7.593947875531043E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9996424641783966	WITHOUT_CLASSIFICATION	3.575358216033492E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999958470643207	WITHOUT_CLASSIFICATION	4.152935679350503E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999964776339486	WITHOUT_CLASSIFICATION	3.522366051339445E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999726714950666	WITHOUT_CLASSIFICATION	2.732850493329024E-5	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999932402534685	WITHOUT_CLASSIFICATION	6.759746531496743E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999902239096681	WITHOUT_CLASSIFICATION	9.776090331894197E-6	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998240965657221	WITHOUT_CLASSIFICATION	1.7590343427783742E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999949713844881	WITHOUT_CLASSIFICATION	5.028615511959211E-6	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9949884495586179	WITHOUT_CLASSIFICATION	0.005011550441382161	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999779067148596	WITHOUT_CLASSIFICATION	2.2093285140367823E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9998118131274941	WITHOUT_CLASSIFICATION	1.8818687250600374E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999285930999111	WITHOUT_CLASSIFICATION	7.140690008889456E-5	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999881204433377	WITHOUT_CLASSIFICATION	1.1879556662239656E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9923164612255235	WITHOUT_CLASSIFICATION	0.0076835387744764935	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999728679478694	WITHOUT_CLASSIFICATION	2.7132052130596867E-5	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999959797658804	WITHOUT_CLASSIFICATION	4.020234119615103E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999979435611768	WITHOUT_CLASSIFICATION	2.056438823162806E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999702985038001	WITHOUT_CLASSIFICATION	2.97014961998684E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999044953816	WITHOUT_CLASSIFICATION	9.550461841989398E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999958470643207	WITHOUT_CLASSIFICATION	4.152935679350503E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999964776339486	WITHOUT_CLASSIFICATION	3.522366051339445E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999854167123525	WITHOUT_CLASSIFICATION	1.4583287647465694E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9998963593015033	WITHOUT_CLASSIFICATION	1.0364069849673447E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999911861751815	WITHOUT_CLASSIFICATION	8.813824818603914E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999227910807794	WITHOUT_CLASSIFICATION	7.720891922062647E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999970295874219	WITHOUT_CLASSIFICATION	2.970412578223929E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999382756486194	WITHOUT_CLASSIFICATION	6.17243513806393E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9810430555137563	WITHOUT_CLASSIFICATION	0.01895694448624374	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9997279191873905	WITHOUT_CLASSIFICATION	2.720808126095197E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998209578227859	WITHOUT_CLASSIFICATION	1.7904217721405227E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998209578227859	WITHOUT_CLASSIFICATION	1.7904217721405227E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9982666644553781	WITHOUT_CLASSIFICATION	0.00173333554462174	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9997038953768397	WITHOUT_CLASSIFICATION	2.96104623160378E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9965134640780807	WITHOUT_CLASSIFICATION	0.0034865359219192877	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9997642462114764	WITHOUT_CLASSIFICATION	2.3575378852362734E-4	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999858712429531	WITHOUT_CLASSIFICATION	1.4128757046989246E-5	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999664772329017	WITHOUT_CLASSIFICATION	3.352276709835533E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9998772100914189	WITHOUT_CLASSIFICATION	1.2278990858106492E-4	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9998772100914189	WITHOUT_CLASSIFICATION	1.2278990858106492E-4	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999398399648585	WITHOUT_CLASSIFICATION	6.0160035141467834E-5	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999412225359737	WITHOUT_CLASSIFICATION	5.8777464026405804E-5	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999932318200093	WITHOUT_CLASSIFICATION	6.768179990656403E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999746433143142	WITHOUT_CLASSIFICATION	2.5356685685827564E-5	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999494933601604	WITHOUT_CLASSIFICATION	5.0506639839531415E-5	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9998807553890877	WITHOUT_CLASSIFICATION	1.1924461091224992E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999914033302187	WITHOUT_CLASSIFICATION	8.596669781315365E-6	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9998189266986031	WITHOUT_CLASSIFICATION	1.810733013969201E-4	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999419755566644	WITHOUT_CLASSIFICATION	5.802444333555925E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999975221293113	WITHOUT_CLASSIFICATION	2.4778706888310435E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.999987952848949	WITHOUT_CLASSIFICATION	1.2047151050988546E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999951670747018	WITHOUT_CLASSIFICATION	4.83292529825292E-6	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9997526765523184	WITHOUT_CLASSIFICATION	2.4732344768167426E-4	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999225023369772	WITHOUT_CLASSIFICATION	7.749766302283793E-5	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9996221753849861	WITHOUT_CLASSIFICATION	3.778246150138008E-4	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999892992609516	WITHOUT_CLASSIFICATION	1.0700739048424192E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999857859123318	WITHOUT_CLASSIFICATION	1.4214087668169968E-5	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999934178766756	WITHOUT_CLASSIFICATION	6.582123324388867E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999624713681812	WITHOUT_CLASSIFICATION	3.752863181888852E-5	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999661405391047	WITHOUT_CLASSIFICATION	3.3859460895200154E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.999637308725351	WITHOUT_CLASSIFICATION	3.6269127464903344E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999993627815874	WITHOUT_CLASSIFICATION	6.372184125472655E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999872654324855	WITHOUT_CLASSIFICATION	1.2734567514535026E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.998925955231619	WITHOUT_CLASSIFICATION	0.0010740447683810642	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9998214528501074	WITHOUT_CLASSIFICATION	1.785471498926689E-4	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999916100894428	WITHOUT_CLASSIFICATION	8.3899105571626E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999891519820745	WITHOUT_CLASSIFICATION	1.0848017925543945E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9998860269313564	WITHOUT_CLASSIFICATION	1.1397306864352821E-4	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999105251382236	WITHOUT_CLASSIFICATION	8.947486177640497E-5	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999967385547198	WITHOUT_CLASSIFICATION	3.261445280250426E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999922753906904	WITHOUT_CLASSIFICATION	7.724609309643453E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999447374831326	WITHOUT_CLASSIFICATION	5.5262516867405837E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9998008158973803	WITHOUT_CLASSIFICATION	1.9918410261968747E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999896530634671	WITHOUT_CLASSIFICATION	1.034693653297089E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9996072297872434	WITHOUT_CLASSIFICATION	3.9277021275668024E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9986419468664768	WITHOUT_CLASSIFICATION	0.0013580531335232067	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999980249537396	WITHOUT_CLASSIFICATION	1.9750462604948517E-6	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9998727542279212	WITHOUT_CLASSIFICATION	1.2724577207869794E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999907922686515	WITHOUT_CLASSIFICATION	9.207731348445207E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999634317163906	WITHOUT_CLASSIFICATION	3.656828360946868E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999948559652208	WITHOUT_CLASSIFICATION	5.144034779271642E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.999886952460436	WITHOUT_CLASSIFICATION	1.1304753956404327E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999745100936157	WITHOUT_CLASSIFICATION	2.5489906384347852E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999117498010883	WITHOUT_CLASSIFICATION	8.825019891164012E-5	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9992214537428514	WITHOUT_CLASSIFICATION	7.785462571485609E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999948559652208	WITHOUT_CLASSIFICATION	5.144034779271642E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999745100936157	WITHOUT_CLASSIFICATION	2.5489906384347852E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9986330827666692	WITHOUT_CLASSIFICATION	0.0013669172333307792	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999643629590692	WITHOUT_CLASSIFICATION	3.563704093069506E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9998883166425614	WITHOUT_CLASSIFICATION	1.116833574386284E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999860559564401	WITHOUT_CLASSIFICATION	1.394404355976393E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999634317163906	WITHOUT_CLASSIFICATION	3.656828360946868E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999634317163906	WITHOUT_CLASSIFICATION	3.656828360946868E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999948559652208	WITHOUT_CLASSIFICATION	5.144034779271642E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999909856460605	WITHOUT_CLASSIFICATION	9.014353939481431E-6	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999277645101275	WITHOUT_CLASSIFICATION	7.223548987244343E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.999976499820706	WITHOUT_CLASSIFICATION	2.3500179293999405E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.999976499820706	WITHOUT_CLASSIFICATION	2.3500179293999405E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998492331792774	WITHOUT_CLASSIFICATION	1.507668207224718E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998506599427226	WITHOUT_CLASSIFICATION	1.4934005727732072E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999562738952189	WITHOUT_CLASSIFICATION	4.3726104781194444E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999562738952189	WITHOUT_CLASSIFICATION	4.3726104781194444E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9993428847397653	WITHOUT_CLASSIFICATION	6.571152602347077E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998506599427226	WITHOUT_CLASSIFICATION	1.4934005727732072E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999562738952189	WITHOUT_CLASSIFICATION	4.3726104781194444E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9993428847397653	WITHOUT_CLASSIFICATION	6.571152602347077E-4	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999103776232566	WITHOUT_CLASSIFICATION	8.962237674336966E-5	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9996651037065276	WITHOUT_CLASSIFICATION	3.348962934724024E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9998780553913458	WITHOUT_CLASSIFICATION	1.2194460865424657E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.999808686541117	WITHOUT_CLASSIFICATION	1.9131345888304962E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9998377524873416	WITHOUT_CLASSIFICATION	1.6224751265836234E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999797768875235	WITHOUT_CLASSIFICATION	2.022311247649689E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998810591848946	WITHOUT_CLASSIFICATION	1.1894081510550967E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.999781382795589	WITHOUT_CLASSIFICATION	2.1861720441092061E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9997696833821998	WITHOUT_CLASSIFICATION	2.3031661780017148E-4	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999058682922501	WITHOUT_CLASSIFICATION	9.413170774983497E-5	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999940064732702	WITHOUT_CLASSIFICATION	5.993526729762879E-6	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999978873731714	WITHOUT_CLASSIFICATION	2.1126268285131442E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.999995224962049	WITHOUT_CLASSIFICATION	4.775037950979635E-6	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999921042494028	WITHOUT_CLASSIFICATION	7.895750597150887E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9998615193642305	WITHOUT_CLASSIFICATION	1.3848063576946926E-4	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999152724998612	WITHOUT_CLASSIFICATION	8.47275001388183E-5	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9994673161507288	WITHOUT_CLASSIFICATION	5.32683849271143E-4	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999044357879513	WITHOUT_CLASSIFICATION	9.556421204871148E-5	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999973369250764	WITHOUT_CLASSIFICATION	2.6630749235887715E-6	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999860388599411	WITHOUT_CLASSIFICATION	1.3961140058824999E-5	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.999990529774666	WITHOUT_CLASSIFICATION	9.470225333966668E-6	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.999988280917553	WITHOUT_CLASSIFICATION	1.1719082446994889E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999895805318229	WITHOUT_CLASSIFICATION	1.0419468177041028E-5	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999961873726254	WITHOUT_CLASSIFICATION	3.81262737462986E-6	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999082499906013	WITHOUT_CLASSIFICATION	9.175000939866877E-5	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.999954867278437	WITHOUT_CLASSIFICATION	4.513272156295208E-5	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999967884440969	WITHOUT_CLASSIFICATION	3.2115559029669912E-6	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999369320704973	WITHOUT_CLASSIFICATION	6.306792950271895E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9998478075077034	WITHOUT_CLASSIFICATION	1.521924922965884E-4	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999859951949349	WITHOUT_CLASSIFICATION	1.4004805065126458E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997232390015776	WITHOUT_CLASSIFICATION	2.76760998422377E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.999943197178152	WITHOUT_CLASSIFICATION	5.6802821847935324E-5	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999732992928995	WITHOUT_CLASSIFICATION	2.670070710055721E-5	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999251223536966	WITHOUT_CLASSIFICATION	7.487764630338033E-5	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999957362080321	WITHOUT_CLASSIFICATION	4.2637919678940356E-6	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999085058078034	WITHOUT_CLASSIFICATION	9.149419219656144E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999857993294311	WITHOUT_CLASSIFICATION	1.4200670568888005E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999857993294311	WITHOUT_CLASSIFICATION	1.4200670568888005E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999857993294311	WITHOUT_CLASSIFICATION	1.4200670568888005E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.999999675872096	WITHOUT_CLASSIFICATION	3.2412790402024133E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9998572050208303	WITHOUT_CLASSIFICATION	1.4279497916973953E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9967192542316419	WITHOUT_CLASSIFICATION	0.0032807457683581183	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9990636662889177	WITHOUT_CLASSIFICATION	9.363337110822377E-4	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999639905073365	WITHOUT_CLASSIFICATION	3.6009492663475276E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999681410995858	WITHOUT_CLASSIFICATION	3.18589004142455E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999992717193956	WITHOUT_CLASSIFICATION	7.282806044828753E-7	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999509800576349	WITHOUT_CLASSIFICATION	4.901994236511269E-5	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999556986227696	WITHOUT_CLASSIFICATION	4.430137723038911E-5	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.999978174772437	WITHOUT_CLASSIFICATION	2.1825227562915118E-5	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9981687280569461	WITHOUT_CLASSIFICATION	0.0018312719430539012	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999539458713889	WITHOUT_CLASSIFICATION	4.605412861108541E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999876810696032	WITHOUT_CLASSIFICATION	1.2318930396766626E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999235816335309	WITHOUT_CLASSIFICATION	7.641836646907583E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9995738340569468	WITHOUT_CLASSIFICATION	4.2616594305327945E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999997775834654	WITHOUT_CLASSIFICATION	2.224165346475635E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999887126124398	WITHOUT_CLASSIFICATION	1.128738756013687E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999983162108914	WITHOUT_CLASSIFICATION	1.6837891085490999E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999673475623373	WITHOUT_CLASSIFICATION	3.2652437662716966E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9998330302802578	WITHOUT_CLASSIFICATION	1.6696971974214763E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9998920075067688	WITHOUT_CLASSIFICATION	1.079924932312211E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.99970807412453	WITHOUT_CLASSIFICATION	2.9192587547000054E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9998251045250527	WITHOUT_CLASSIFICATION	1.748954749473767E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9993087550326141	WITHOUT_CLASSIFICATION	6.912449673858817E-4	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999992066756523	WITHOUT_CLASSIFICATION	7.933243476545343E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999825738395126	WITHOUT_CLASSIFICATION	1.7426160487373376E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.999996672240049	WITHOUT_CLASSIFICATION	3.3277599511149384E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999903755844889	WITHOUT_CLASSIFICATION	9.624415511187475E-6	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999522132187052	WITHOUT_CLASSIFICATION	4.77867812947516E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999740940322199	WITHOUT_CLASSIFICATION	2.590596778003947E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9994559664292072	WITHOUT_CLASSIFICATION	5.440335707927815E-4	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9980764670760098	WITHOUT_CLASSIFICATION	0.0019235329239901313	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9997335518671595	WITHOUT_CLASSIFICATION	2.6644813284044017E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999956331583169	WITHOUT_CLASSIFICATION	4.366841683104017E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9994010008674301	WITHOUT_CLASSIFICATION	5.989991325698448E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9997952910685526	WITHOUT_CLASSIFICATION	2.0470893144750412E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9998798553255709	WITHOUT_CLASSIFICATION	1.2014467442920985E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.999831870603328	WITHOUT_CLASSIFICATION	1.6812939667206785E-4	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999696557762162	WITHOUT_CLASSIFICATION	3.034422378376252E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999714326675184	WITHOUT_CLASSIFICATION	2.8567332481583934E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999786165483375	WITHOUT_CLASSIFICATION	2.1383451662455105E-5	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999689110482677	WITHOUT_CLASSIFICATION	3.108895173234487E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999382756486194	WITHOUT_CLASSIFICATION	6.17243513806393E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999967662062191	WITHOUT_CLASSIFICATION	3.2337937807307465E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9997630120011872	WITHOUT_CLASSIFICATION	2.369879988128125E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9998036654418849	WITHOUT_CLASSIFICATION	1.9633455811506105E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9967476257556548	WITHOUT_CLASSIFICATION	0.0032523742443452005	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9980381001452718	WITHOUT_CLASSIFICATION	0.0019618998547281676	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.998103407127581	WITHOUT_CLASSIFICATION	0.0018965928724189573	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999658155990648	WITHOUT_CLASSIFICATION	3.418440093521507E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999857555631012	WITHOUT_CLASSIFICATION	1.424443689878008E-5	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9988705697075139	WITHOUT_CLASSIFICATION	0.0011294302924862406	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999582724315105	WITHOUT_CLASSIFICATION	4.172756848962285E-5	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999539421379776	WITHOUT_CLASSIFICATION	4.6057862022365255E-5	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999904521481564	WITHOUT_CLASSIFICATION	9.547851843576377E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999381940045327	WITHOUT_CLASSIFICATION	6.180599546737531E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.998083395469773	WITHOUT_CLASSIFICATION	0.0019166045302269614	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999741268375487	WITHOUT_CLASSIFICATION	2.5873162451229787E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999485091001123	WITHOUT_CLASSIFICATION	5.149089988765299E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999157011996297	WITHOUT_CLASSIFICATION	8.429880037023843E-5	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998833235650573	WITHOUT_CLASSIFICATION	1.1667643494264506E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9998641948488949	WITHOUT_CLASSIFICATION	1.3580515110517348E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9996878224492342	WITHOUT_CLASSIFICATION	3.1217755076590973E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999310628109063	WITHOUT_CLASSIFICATION	6.893718909372876E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.991152360445416	WITHOUT_CLASSIFICATION	0.008847639554583883	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999665016744951	WITHOUT_CLASSIFICATION	3.34983255048298E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999147879907277	WITHOUT_CLASSIFICATION	8.521200927219852E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999903456391919	WITHOUT_CLASSIFICATION	9.654360808181036E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999903456391919	WITHOUT_CLASSIFICATION	9.654360808181036E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999665016744951	WITHOUT_CLASSIFICATION	3.34983255048298E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.999964934499358	WITHOUT_CLASSIFICATION	3.506550064205046E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999344769987334	WITHOUT_CLASSIFICATION	6.55230012666623E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999344769987334	WITHOUT_CLASSIFICATION	6.55230012666623E-5	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999479044404126	WITHOUT_CLASSIFICATION	5.2095559587468074E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999859547831116	WITHOUT_CLASSIFICATION	1.4045216888433205E-5	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999485838597693	WITHOUT_CLASSIFICATION	5.1416140230807635E-5	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9977325987462885	WITHOUT_CLASSIFICATION	0.0022674012537114807	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.999910507295172	WITHOUT_CLASSIFICATION	8.94927048279846E-5	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999713296681417	WITHOUT_CLASSIFICATION	2.8670331858248677E-5	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999308467399455	WITHOUT_CLASSIFICATION	6.915326005451867E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9997624012812839	WITHOUT_CLASSIFICATION	2.375987187161945E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9997626950076621	WITHOUT_CLASSIFICATION	2.3730499233794852E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999023781621628	WITHOUT_CLASSIFICATION	9.762183783731237E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999965752228408	WITHOUT_CLASSIFICATION	3.4247771593088215E-6	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999985648431169	WITHOUT_CLASSIFICATION	1.4351568831825784E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999813899994161	WITHOUT_CLASSIFICATION	1.861000058394386E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999679111722891	WITHOUT_CLASSIFICATION	3.208882771098553E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999469735849054	WITHOUT_CLASSIFICATION	5.302641509461937E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999908501407914	WITHOUT_CLASSIFICATION	9.14985920874855E-6	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.999991744952209	WITHOUT_CLASSIFICATION	8.255047790932163E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9998940094195831	WITHOUT_CLASSIFICATION	1.0599058041693689E-4	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9983323289499192	WITHOUT_CLASSIFICATION	0.0016676710500808654	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9998767775436468	WITHOUT_CLASSIFICATION	1.2322245635311898E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999994345754414	WITHOUT_CLASSIFICATION	5.654245585564526E-7	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9995128320282003	WITHOUT_CLASSIFICATION	4.871679717996282E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998777414109086	WITHOUT_CLASSIFICATION	1.2225858909140083E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999876013387571	WITHOUT_CLASSIFICATION	1.2398661242810985E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999876013387571	WITHOUT_CLASSIFICATION	1.2398661242810985E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9996993167123427	WITHOUT_CLASSIFICATION	3.006832876573095E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9991104947854971	WITHOUT_CLASSIFICATION	8.895052145028874E-4	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9996500772544155	WITHOUT_CLASSIFICATION	3.4992274558453564E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999170958975496	WITHOUT_CLASSIFICATION	8.290410245035662E-5	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999808407606858	WITHOUT_CLASSIFICATION	1.915923931419597E-5	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9998916599173611	WITHOUT_CLASSIFICATION	1.0834008263886409E-4	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.99995530843327	WITHOUT_CLASSIFICATION	4.469156673007176E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9998992730269675	WITHOUT_CLASSIFICATION	1.0072697303251392E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997966456597486	WITHOUT_CLASSIFICATION	2.0335434025148022E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9994550618751183	WITHOUT_CLASSIFICATION	5.449381248815546E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999633416299828	WITHOUT_CLASSIFICATION	3.665837001714671E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9998959274020816	WITHOUT_CLASSIFICATION	1.0407259791840033E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9998031598898016	WITHOUT_CLASSIFICATION	1.9684011019825457E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998637721001489	WITHOUT_CLASSIFICATION	1.362278998511292E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.999989612125869	WITHOUT_CLASSIFICATION	1.0387874131044255E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999863964436783	WITHOUT_CLASSIFICATION	1.3603556321700876E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9994003588970037	WITHOUT_CLASSIFICATION	5.996411029962615E-4	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999863964436783	WITHOUT_CLASSIFICATION	1.3603556321700876E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998958620229644	WITHOUT_CLASSIFICATION	1.041379770356292E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999402011246586	WITHOUT_CLASSIFICATION	5.979887534128534E-5	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9998753307012744	WITHOUT_CLASSIFICATION	1.246692987256293E-4	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999916055879319	WITHOUT_CLASSIFICATION	8.394412068102989E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.999607481046444	WITHOUT_CLASSIFICATION	3.925189535558762E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9995748310762038	WITHOUT_CLASSIFICATION	4.251689237962065E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999733222840334	WITHOUT_CLASSIFICATION	2.66777159666212E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999804488137723	WITHOUT_CLASSIFICATION	1.9551186227641628E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.999990021043933	WITHOUT_CLASSIFICATION	9.97895606695944E-6	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999578989119879	WITHOUT_CLASSIFICATION	4.210108801197695E-5	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999629250163233	WITHOUT_CLASSIFICATION	3.707498367657078E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999162338529155	WITHOUT_CLASSIFICATION	8.376614708448252E-5	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999547237698831	WITHOUT_CLASSIFICATION	4.527623011676372E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999983599007354	WITHOUT_CLASSIFICATION	1.640099264613285E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999303880533854	WITHOUT_CLASSIFICATION	6.961194661464501E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999497126465141	WITHOUT_CLASSIFICATION	5.0287353485812366E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9998106456322179	WITHOUT_CLASSIFICATION	1.8935436778220164E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999160894344704	WITHOUT_CLASSIFICATION	8.391056552963365E-5	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9998271696090203	WITHOUT_CLASSIFICATION	1.7283039097970674E-4	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999864537430327	WITHOUT_CLASSIFICATION	1.3546256967258565E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9990762955380312	WITHOUT_CLASSIFICATION	9.23704461968823E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9992682698187975	WITHOUT_CLASSIFICATION	7.317301812025957E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999964852335677	WITHOUT_CLASSIFICATION	3.5147664324109075E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.999978054322527	WITHOUT_CLASSIFICATION	2.194567747297651E-5	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999898048472031	WITHOUT_CLASSIFICATION	1.0195152796799034E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999537595866119	WITHOUT_CLASSIFICATION	4.624041338815462E-5	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999679065773666	WITHOUT_CLASSIFICATION	3.2093422633490277E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997966456597486	WITHOUT_CLASSIFICATION	2.0335434025148022E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9994550618751183	WITHOUT_CLASSIFICATION	5.449381248815546E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999633416299828	WITHOUT_CLASSIFICATION	3.665837001714671E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.999955038078257	WITHOUT_CLASSIFICATION	4.4961921743010056E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9998236384043108	WITHOUT_CLASSIFICATION	1.763615956892761E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999534988415185	WITHOUT_CLASSIFICATION	4.650115848146195E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9997957698522821	WITHOUT_CLASSIFICATION	2.0423014771795274E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9998271072981969	WITHOUT_CLASSIFICATION	1.7289270180308134E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9998396316218569	WITHOUT_CLASSIFICATION	1.6036837814308876E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9997481965697225	WITHOUT_CLASSIFICATION	2.5180343027758303E-4	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9996681856159999	WITHOUT_CLASSIFICATION	3.318143840000704E-4	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.999916928803135	WITHOUT_CLASSIFICATION	8.307119686498807E-5	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999834806431345	WITHOUT_CLASSIFICATION	1.6519356865574772E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9998444016152811	WITHOUT_CLASSIFICATION	1.555983847188232E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9998444016152811	WITHOUT_CLASSIFICATION	1.555983847188232E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999812957514906	WITHOUT_CLASSIFICATION	1.87042485094107E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999485145936904	WITHOUT_CLASSIFICATION	5.1485406309639416E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857242694318	WITHOUT_CLASSIFICATION	1.4275730568220438E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999877649623932	WITHOUT_CLASSIFICATION	1.2235037606937452E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999148995802909	WITHOUT_CLASSIFICATION	8.510041970901218E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999990787569951	WITHOUT_CLASSIFICATION	9.212430049069126E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999908031202435	WITHOUT_CLASSIFICATION	9.19687975641437E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999890166812185	WITHOUT_CLASSIFICATION	1.0983318781472891E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999744916873095	WITHOUT_CLASSIFICATION	2.550831269050468E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999967545705521	WITHOUT_CLASSIFICATION	3.2454294477796274E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998117265824	WITHOUT_CLASSIFICATION	1.8827341760282987E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999651926634322	WITHOUT_CLASSIFICATION	3.480733656788289E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999957814078382	WITHOUT_CLASSIFICATION	4.218592161918312E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9988551382734973	WITHOUT_CLASSIFICATION	0.0011448617265027992	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995783165392973	WITHOUT_CLASSIFICATION	4.2168346070282036E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9997542935043072	WITHOUT_CLASSIFICATION	2.457064956927401E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999794695142767	WITHOUT_CLASSIFICATION	2.0530485723213083E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995129264401035	WITHOUT_CLASSIFICATION	4.870735598965183E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999733368834297	WITHOUT_CLASSIFICATION	2.6663116570268163E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999048268172154	WITHOUT_CLASSIFICATION	9.517318278463552E-5	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999516625277812	WITHOUT_CLASSIFICATION	4.833747221865809E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999666159300898	WITHOUT_CLASSIFICATION	3.3384069910233314E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999963914497698	WITHOUT_CLASSIFICATION	3.608550230203549E-5	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9997817332532567	WITHOUT_CLASSIFICATION	2.182667467432544E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999303011841226	WITHOUT_CLASSIFICATION	6.969881587738305E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998804072382067	WITHOUT_CLASSIFICATION	1.1959276179332318E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998721771611164	WITHOUT_CLASSIFICATION	1.2782283888364678E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999751167686508	WITHOUT_CLASSIFICATION	2.4883231349137793E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999509612971239	WITHOUT_CLASSIFICATION	4.9038702876170787E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999551272892019	WITHOUT_CLASSIFICATION	4.48727107982316E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999805666717402	WITHOUT_CLASSIFICATION	1.9433328259812214E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9996658947525848	WITHOUT_CLASSIFICATION	3.3410524741516476E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.990766490892669	WITHOUT_CLASSIFICATION	0.00923350910733094	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999533371203141	WITHOUT_CLASSIFICATION	4.6662879685951634E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996554633814196	WITHOUT_CLASSIFICATION	3.445366185803867E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998881261996921	WITHOUT_CLASSIFICATION	1.1187380030789167E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999402319671765	WITHOUT_CLASSIFICATION	5.9768032823502394E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999869252461426	WITHOUT_CLASSIFICATION	1.3074753857332755E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999997718710759	WITHOUT_CLASSIFICATION	2.281289240909499E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999568149850153	WITHOUT_CLASSIFICATION	4.31850149847362E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9987983217863733	WITHOUT_CLASSIFICATION	0.00120167821362674	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995853254525664	WITHOUT_CLASSIFICATION	4.1467454743356725E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999536503903008	WITHOUT_CLASSIFICATION	4.634960969918591E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9976479093357653	WITHOUT_CLASSIFICATION	0.002352090664234758	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999550757565132	WITHOUT_CLASSIFICATION	4.4924243486700344E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9940444578045207	WITHOUT_CLASSIFICATION	0.005955542195479392	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999812957514906	WITHOUT_CLASSIFICATION	1.87042485094107E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999485145936904	WITHOUT_CLASSIFICATION	5.1485406309639416E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857242694318	WITHOUT_CLASSIFICATION	1.4275730568220438E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999877649623932	WITHOUT_CLASSIFICATION	1.2235037606937452E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999908031202435	WITHOUT_CLASSIFICATION	9.19687975641437E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999890166812185	WITHOUT_CLASSIFICATION	1.0983318781472891E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9965711775856739	WITHOUT_CLASSIFICATION	0.0034288224143262046	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999872805962763	WITHOUT_CLASSIFICATION	1.2719403723845277E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999899308166007	WITHOUT_CLASSIFICATION	1.0069183399301721E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998117265824	WITHOUT_CLASSIFICATION	1.8827341760282987E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999651926634322	WITHOUT_CLASSIFICATION	3.480733656788289E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999957814078382	WITHOUT_CLASSIFICATION	4.218592161918312E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9988551382734973	WITHOUT_CLASSIFICATION	0.0011448617265027992	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9997542935043072	WITHOUT_CLASSIFICATION	2.457064956927401E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999716212977616	WITHOUT_CLASSIFICATION	2.8378702238356706E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999716212977616	WITHOUT_CLASSIFICATION	2.8378702238356706E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999982139627384	WITHOUT_CLASSIFICATION	1.7860372617301474E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9997772355238235	WITHOUT_CLASSIFICATION	2.227644761764769E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999905769847203	WITHOUT_CLASSIFICATION	9.423015279724893E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.99997539674195	WITHOUT_CLASSIFICATION	2.4603258049878003E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9998785254726745	WITHOUT_CLASSIFICATION	1.2147452732554999E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9995699452480702	WITHOUT_CLASSIFICATION	4.300547519297415E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999772903490386	WITHOUT_CLASSIFICATION	2.2709650961416232E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999166000747074	WITHOUT_CLASSIFICATION	8.339992529264787E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.999772903490386	WITHOUT_CLASSIFICATION	2.2709650961416232E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9991655718792213	WITHOUT_CLASSIFICATION	8.344281207787262E-4	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999219291047735	WITHOUT_CLASSIFICATION	7.807089522638589E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9997433320523836	WITHOUT_CLASSIFICATION	2.566679476162848E-4	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9997433320523836	WITHOUT_CLASSIFICATION	2.566679476162848E-4	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9997540352853952	WITHOUT_CLASSIFICATION	2.4596471460484827E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9995490058639145	WITHOUT_CLASSIFICATION	4.509941360854914E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999672771247538	WITHOUT_CLASSIFICATION	3.2722875246258224E-5	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9997787899645298	WITHOUT_CLASSIFICATION	2.2121003547004027E-4	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9998839033363153	WITHOUT_CLASSIFICATION	1.1609666368476952E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999588902780636	WITHOUT_CLASSIFICATION	4.110972193630721E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9989004288344514	WITHOUT_CLASSIFICATION	0.0010995711655486648	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999839739489	WITHOUT_CLASSIFICATION	1.6026051099892437E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998926269255478	WITHOUT_CLASSIFICATION	1.0737307445220779E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9998977495248654	WITHOUT_CLASSIFICATION	1.022504751346094E-4	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999402634865014	WITHOUT_CLASSIFICATION	5.973651349840445E-5	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9998082773177239	WITHOUT_CLASSIFICATION	1.917226822761112E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.999966198904154	WITHOUT_CLASSIFICATION	3.3801095846142435E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.999966198904154	WITHOUT_CLASSIFICATION	3.3801095846142435E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999813057301424	WITHOUT_CLASSIFICATION	1.869426985766629E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9998703996903359	WITHOUT_CLASSIFICATION	1.2960030966408325E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9992583327987257	WITHOUT_CLASSIFICATION	7.416672012743586E-4	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9956044591505655	WITHOUT_CLASSIFICATION	0.004395540849434475	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9997427333072322	WITHOUT_CLASSIFICATION	2.5726669276776576E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999913760045028	WITHOUT_CLASSIFICATION	8.623995497058912E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999906026713703	WITHOUT_CLASSIFICATION	9.397328629660678E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999015114252201	WITHOUT_CLASSIFICATION	9.848857477982393E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999580890127671	WITHOUT_CLASSIFICATION	4.191098723292804E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999635787835376	WITHOUT_CLASSIFICATION	3.642121646247896E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999848274057394	WITHOUT_CLASSIFICATION	1.5172594260677755E-5	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999748105623286	WITHOUT_CLASSIFICATION	2.518943767135889E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.999989129507841	WITHOUT_CLASSIFICATION	1.0870492159037515E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9856531193451769	WITHOUT_CLASSIFICATION	0.014346880654823122	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999170958975496	WITHOUT_CLASSIFICATION	8.290410245035662E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999375785460977	WITHOUT_CLASSIFICATION	6.242145390237855E-5	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999190212723451	WITHOUT_CLASSIFICATION	8.097872765488078E-5	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999222931673436	WITHOUT_CLASSIFICATION	7.770683265644113E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9994700314392958	WITHOUT_CLASSIFICATION	5.29968560704221E-4	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9997857028006871	WITHOUT_CLASSIFICATION	2.142971993129559E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9997940036481637	WITHOUT_CLASSIFICATION	2.05996351836238E-4	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9998125041837644	WITHOUT_CLASSIFICATION	1.87495816235586E-4	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999582931338391	WITHOUT_CLASSIFICATION	4.1706866160814896E-5	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999877290847609	WITHOUT_CLASSIFICATION	1.2270915239124563E-5	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999528045591097	WITHOUT_CLASSIFICATION	4.719544089033557E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999825164086457	WITHOUT_CLASSIFICATION	1.7483591354364038E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999825164086457	WITHOUT_CLASSIFICATION	1.7483591354364038E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9993691456603867	WITHOUT_CLASSIFICATION	6.30854339613249E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9994433099549951	WITHOUT_CLASSIFICATION	5.56690045004947E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998640716275218	WITHOUT_CLASSIFICATION	1.3592837247812048E-4	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995210460223816	WITHOUT_CLASSIFICATION	4.7895397761853946E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999165813080592	WITHOUT_CLASSIFICATION	8.341869194090523E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999520811113056	WITHOUT_CLASSIFICATION	4.7918888694390316E-4	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9996647022229483	WITHOUT_CLASSIFICATION	3.3529777705171933E-4	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9991574843224763	WITHOUT_CLASSIFICATION	8.425156775238155E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999655172072126	WITHOUT_CLASSIFICATION	3.448279278740806E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998631444012647	WITHOUT_CLASSIFICATION	1.368555987353978E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999539237866693	WITHOUT_CLASSIFICATION	4.607621333066509E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997569415640855	WITHOUT_CLASSIFICATION	2.430584359145069E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999978584743405	WITHOUT_CLASSIFICATION	2.1415256593971273E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.999194133995198	WITHOUT_CLASSIFICATION	8.058660048020317E-4	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999811634590198	WITHOUT_CLASSIFICATION	1.8836540980190305E-5	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999492417755546	WITHOUT_CLASSIFICATION	5.0758224445348284E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999998016573031	WITHOUT_CLASSIFICATION	1.9834269704565415E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9670707686882454	WITHOUT_CLASSIFICATION	0.032929231311754584	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9740420465428075	WITHOUT_CLASSIFICATION	0.025957953457192505	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999508720706949	WITHOUT_CLASSIFICATION	4.91279293051893E-5	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9998790219965146	WITHOUT_CLASSIFICATION	1.2097800348535925E-4	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999814794700863	WITHOUT_CLASSIFICATION	1.852052991367234E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998804072382067	WITHOUT_CLASSIFICATION	1.1959276179332318E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998623003011523	WITHOUT_CLASSIFICATION	1.3769969884764712E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995853254525664	WITHOUT_CLASSIFICATION	4.1467454743356725E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.99997539674195	WITHOUT_CLASSIFICATION	2.4603258049878003E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9967100890905745	WITHOUT_CLASSIFICATION	0.0032899109094256815	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9991460297544564	WITHOUT_CLASSIFICATION	8.539702455435678E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999666159300898	WITHOUT_CLASSIFICATION	3.3384069910233314E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9968221866200522	WITHOUT_CLASSIFICATION	0.0031778133799477922	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9997475636594284	WITHOUT_CLASSIFICATION	2.524363405715284E-4	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999539449378535	WITHOUT_CLASSIFICATION	4.6055062146368996E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999739524918186	WITHOUT_CLASSIFICATION	2.60475081813694E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9995853254525664	WITHOUT_CLASSIFICATION	4.1467454743356725E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9991864640281822	WITHOUT_CLASSIFICATION	8.135359718176597E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9997279191873905	WITHOUT_CLASSIFICATION	2.720808126095197E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999930147265372	WITHOUT_CLASSIFICATION	6.985273462718445E-6	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999746323839831	WITHOUT_CLASSIFICATION	2.5367616016894768E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9934338054892442	WITHOUT_CLASSIFICATION	0.006566194510755701	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999992413575962	WITHOUT_CLASSIFICATION	7.58642403763714E-7	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999826346651176	WITHOUT_CLASSIFICATION	1.73653348824031E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999634317163906	WITHOUT_CLASSIFICATION	3.656828360946868E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9999992517443556	WITHOUT_CLASSIFICATION	7.482556444179077E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998492331792774	WITHOUT_CLASSIFICATION	1.507668207224718E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998492331792774	WITHOUT_CLASSIFICATION	1.507668207224718E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9998492331792774	WITHOUT_CLASSIFICATION	1.507668207224718E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999562738952189	WITHOUT_CLASSIFICATION	4.3726104781194444E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998235559903612	WITHOUT_CLASSIFICATION	1.764440096388368E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999279337727073	WITHOUT_CLASSIFICATION	7.206622729271873E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999797768875235	WITHOUT_CLASSIFICATION	2.022311247649689E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999988110347321	WITHOUT_CLASSIFICATION	1.1889652678877594E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999568199478097	WITHOUT_CLASSIFICATION	4.318005219022106E-5	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9976341788777785	WITHOUT_CLASSIFICATION	0.002365821122221568	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999416271989733	WITHOUT_CLASSIFICATION	5.8372801026800855E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9998353551969712	WITHOUT_CLASSIFICATION	1.6464480302882725E-4	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999997994738831	WITHOUT_CLASSIFICATION	2.0052611701257434E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999517623856354	WITHOUT_CLASSIFICATION	4.82376143646116E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999948804995251	WITHOUT_CLASSIFICATION	5.119500474945061E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999873499662121	WITHOUT_CLASSIFICATION	1.2650033787970312E-5	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999998756542066	WITHOUT_CLASSIFICATION	1.2434579342879593E-7	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999983168208929	WITHOUT_CLASSIFICATION	1.6831791069939487E-6	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999198464358504	WITHOUT_CLASSIFICATION	8.015356414960887E-5	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9998153690742211	WITHOUT_CLASSIFICATION	1.8463092577887012E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9986711618432954	WITHOUT_CLASSIFICATION	0.0013288381567045262	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9996911740665746	WITHOUT_CLASSIFICATION	3.088259334252964E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.999994689120538	WITHOUT_CLASSIFICATION	5.310879462000963E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999857993294311	WITHOUT_CLASSIFICATION	1.4200670568888005E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.99994321057521	WITHOUT_CLASSIFICATION	5.678942479015708E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999467999070596	WITHOUT_CLASSIFICATION	5.320009294028575E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999467999070596	WITHOUT_CLASSIFICATION	5.320009294028575E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999371867446348	WITHOUT_CLASSIFICATION	6.281325536524151E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999953746630303	WITHOUT_CLASSIFICATION	4.625336969716393E-6	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999786503584969	WITHOUT_CLASSIFICATION	2.1349641503176458E-5	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999739844931016	WITHOUT_CLASSIFICATION	2.6015506898394262E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999995138383843	WITHOUT_CLASSIFICATION	4.861616156976831E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999992293753611	WITHOUT_CLASSIFICATION	7.706246390043108E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9998899747880494	WITHOUT_CLASSIFICATION	1.1002521195054837E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999977975155435	WITHOUT_CLASSIFICATION	2.202484456434955E-6	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9998021577972449	WITHOUT_CLASSIFICATION	1.9784220275506498E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9994658652068096	WITHOUT_CLASSIFICATION	5.341347931905157E-4	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9996646017603789	WITHOUT_CLASSIFICATION	3.35398239621133E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.99988707281804	WITHOUT_CLASSIFICATION	1.1292718195993198E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.999413125072977	WITHOUT_CLASSIFICATION	5.868749270230763E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999813899994161	WITHOUT_CLASSIFICATION	1.861000058394386E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999813899994161	WITHOUT_CLASSIFICATION	1.861000058394386E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.999939672583962	WITHOUT_CLASSIFICATION	6.0327416038148844E-5	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9976157183536669	WITHOUT_CLASSIFICATION	0.0023842816463331843	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999963563720558	WITHOUT_CLASSIFICATION	3.643627944120542E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999903134038368	WITHOUT_CLASSIFICATION	9.686596163156632E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999903134038368	WITHOUT_CLASSIFICATION	9.686596163156632E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999903134038368	WITHOUT_CLASSIFICATION	9.686596163156632E-6	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9997985571399829	WITHOUT_CLASSIFICATION	2.0144286001703418E-4	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999751416034	WITHOUT_CLASSIFICATION	2.485839653742389E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9998959274020816	WITHOUT_CLASSIFICATION	1.0407259791840033E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999884577286285	WITHOUT_CLASSIFICATION	1.1542271371504128E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999707867539215	WITHOUT_CLASSIFICATION	2.9213246078506316E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9998444682019988	WITHOUT_CLASSIFICATION	1.5553179800121482E-4	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9995982065354831	WITHOUT_CLASSIFICATION	4.0179346451683744E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999778430966593	WITHOUT_CLASSIFICATION	2.2156903340700586E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999778430966593	WITHOUT_CLASSIFICATION	2.2156903340700586E-4	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999941372974305	WITHOUT_CLASSIFICATION	5.86270256947043E-6	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9998121057709086	WITHOUT_CLASSIFICATION	1.8789422909139389E-4	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9997950130187545	WITHOUT_CLASSIFICATION	2.049869812455194E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9955445717900874	WITHOUT_CLASSIFICATION	0.004455428209912651	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999979019411901	WITHOUT_CLASSIFICATION	2.0980588098016306E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9994426040845542	WITHOUT_CLASSIFICATION	5.573959154457775E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9998444016152811	WITHOUT_CLASSIFICATION	1.555983847188232E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999148995802909	WITHOUT_CLASSIFICATION	8.510041970901218E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999990787569951	WITHOUT_CLASSIFICATION	9.212430049069126E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999967545705521	WITHOUT_CLASSIFICATION	3.2454294477796274E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995783165392973	WITHOUT_CLASSIFICATION	4.2168346070282036E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999799783538987	WITHOUT_CLASSIFICATION	2.002164610121679E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999554751267246	WITHOUT_CLASSIFICATION	4.4524873275540554E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999378341685767	WITHOUT_CLASSIFICATION	6.216583142329704E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9998785254726745	WITHOUT_CLASSIFICATION	1.2147452732554999E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999813057301424	WITHOUT_CLASSIFICATION	1.869426985766629E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9998281976055059	WITHOUT_CLASSIFICATION	1.7180239449409622E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999699916289999	WITHOUT_CLASSIFICATION	3.0008371000030005E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999096662824	WITHOUT_CLASSIFICATION	9.033371759932064E-8	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.999679366077511	WITHOUT_CLASSIFICATION	3.2063392248903337E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9993046404000938	WITHOUT_CLASSIFICATION	6.953595999062285E-4	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999297919703847	WITHOUT_CLASSIFICATION	7.02080296153886E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.999936878993876	WITHOUT_CLASSIFICATION	6.312100612404881E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9997631656401362	WITHOUT_CLASSIFICATION	2.3683435986385101E-4	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999051561678	WITHOUT_CLASSIFICATION	9.484383215156469E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999614351022695	WITHOUT_CLASSIFICATION	3.856489773042543E-5	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999614351022695	WITHOUT_CLASSIFICATION	3.856489773042543E-5	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9950261738232139	WITHOUT_CLASSIFICATION	0.004973826176786135	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999649382498411	WITHOUT_CLASSIFICATION	3.506175015884333E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9987172080649469	WITHOUT_CLASSIFICATION	0.0012827919350530575	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9993777607294241	WITHOUT_CLASSIFICATION	6.222392705758311E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9993777607294241	WITHOUT_CLASSIFICATION	6.222392705758311E-4	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999947935941902	WITHOUT_CLASSIFICATION	5.206405809786478E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.999756204320436	WITHOUT_CLASSIFICATION	2.4379567956391273E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999906484902609	WITHOUT_CLASSIFICATION	9.35150973909344E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999958817592508	WITHOUT_CLASSIFICATION	4.118240749141991E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9982408924241841	WITHOUT_CLASSIFICATION	0.0017591075758158308	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999968921616705	WITHOUT_CLASSIFICATION	3.107838329526896E-6	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999921151278218	WITHOUT_CLASSIFICATION	7.884872178157092E-6	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999828880508672	WITHOUT_CLASSIFICATION	1.7111949132748476E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9996166132453035	WITHOUT_CLASSIFICATION	3.8338675469649317E-4	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9998641896723501	WITHOUT_CLASSIFICATION	1.3581032764981444E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999864957713	WITHOUT_CLASSIFICATION	1.350422870783306E-8	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999911369830888	WITHOUT_CLASSIFICATION	8.863016911160218E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999798686767248	WITHOUT_CLASSIFICATION	2.0131323275207958E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999620672707	WITHOUT_CLASSIFICATION	3.793272920880166E-8	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9997362739091743	WITHOUT_CLASSIFICATION	2.6372609082575153E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999890898948159	WITHOUT_CLASSIFICATION	1.0910105184115521E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999770093674901	WITHOUT_CLASSIFICATION	2.299063250979128E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998949189165557	WITHOUT_CLASSIFICATION	1.0508108344421011E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999948632902033	WITHOUT_CLASSIFICATION	5.13670979677481E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9997653265164842	WITHOUT_CLASSIFICATION	2.3467348351592472E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999961996435363	WITHOUT_CLASSIFICATION	3.8003564638469264E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998891107157396	WITHOUT_CLASSIFICATION	1.1088928426042176E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9993000545942076	WITHOUT_CLASSIFICATION	6.999454057924569E-4	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999456701012461	WITHOUT_CLASSIFICATION	5.432989875402591E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998662653208692	WITHOUT_CLASSIFICATION	1.3373467913075943E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998662653208692	WITHOUT_CLASSIFICATION	1.3373467913075943E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998662653208692	WITHOUT_CLASSIFICATION	1.3373467913075943E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998662653208692	WITHOUT_CLASSIFICATION	1.3373467913075943E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999667697902351	WITHOUT_CLASSIFICATION	3.3230209764785015E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999723923658169	WITHOUT_CLASSIFICATION	2.7607634183084812E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999734998721395	WITHOUT_CLASSIFICATION	2.6500127860532377E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999734998721395	WITHOUT_CLASSIFICATION	2.6500127860532377E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999734998721395	WITHOUT_CLASSIFICATION	2.6500127860532377E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999043070647371	WITHOUT_CLASSIFICATION	9.569293526286427E-5	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999662427279346	WITHOUT_CLASSIFICATION	3.3757272065515443E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999079646400775	WITHOUT_CLASSIFICATION	9.203535992251407E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999079646400775	WITHOUT_CLASSIFICATION	9.203535992251407E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9994700314392958	WITHOUT_CLASSIFICATION	5.29968560704221E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9994700314392958	WITHOUT_CLASSIFICATION	5.29968560704221E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997093175403262	WITHOUT_CLASSIFICATION	2.9068245967381627E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997093175403262	WITHOUT_CLASSIFICATION	2.9068245967381627E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999852325784149	WITHOUT_CLASSIFICATION	1.476742158514011E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9997997631551059	WITHOUT_CLASSIFICATION	2.0023684489408217E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9998636674444046	WITHOUT_CLASSIFICATION	1.3633255559552057E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999515868404053	WITHOUT_CLASSIFICATION	4.841315959467487E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9997802363497013	WITHOUT_CLASSIFICATION	2.197636502987302E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9998251762466226	WITHOUT_CLASSIFICATION	1.7482375337745572E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997853918771864	WITHOUT_CLASSIFICATION	2.146081228135553E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999362075969851	WITHOUT_CLASSIFICATION	6.379240301483432E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998641287280142	WITHOUT_CLASSIFICATION	1.358712719857093E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999517526383419	WITHOUT_CLASSIFICATION	4.824736165813457E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999261676559522	WITHOUT_CLASSIFICATION	7.383234404779054E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999777845556934	WITHOUT_CLASSIFICATION	2.2215444306549302E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999517763549265	WITHOUT_CLASSIFICATION	4.8223645073513224E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9998448202780391	WITHOUT_CLASSIFICATION	1.5517972196081554E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999556677800628	WITHOUT_CLASSIFICATION	4.433221993719184E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999558910059808	WITHOUT_CLASSIFICATION	4.4108994019184115E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999141048834238	WITHOUT_CLASSIFICATION	8.589511657625209E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998819947604594	WITHOUT_CLASSIFICATION	1.1800523954064302E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998819947604594	WITHOUT_CLASSIFICATION	1.1800523954064302E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999252434667668	WITHOUT_CLASSIFICATION	7.475653323318413E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9997465885750689	WITHOUT_CLASSIFICATION	2.534114249310349E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9998533577596715	WITHOUT_CLASSIFICATION	1.4664224032843692E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.999411098063635	WITHOUT_CLASSIFICATION	5.889019363649009E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999494004399998	WITHOUT_CLASSIFICATION	5.0599560000253866E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998653659958187	WITHOUT_CLASSIFICATION	1.346340041813741E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998653659958187	WITHOUT_CLASSIFICATION	1.346340041813741E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998653659958187	WITHOUT_CLASSIFICATION	1.346340041813741E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9998653659958187	WITHOUT_CLASSIFICATION	1.346340041813741E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9999841372559821	WITHOUT_CLASSIFICATION	1.5862744017870725E-5	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999915327491933	WITHOUT_CLASSIFICATION	8.46725080674178E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999362122738	WITHOUT_CLASSIFICATION	6.378772616814725E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999467452317218	WITHOUT_CLASSIFICATION	5.325476827829996E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999467452317218	WITHOUT_CLASSIFICATION	5.325476827829996E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999486169840648	WITHOUT_CLASSIFICATION	5.1383015935176456E-5	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9993737212097075	WITHOUT_CLASSIFICATION	6.262787902926309E-4	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9993737212097075	WITHOUT_CLASSIFICATION	6.262787902926309E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999828822870818	WITHOUT_CLASSIFICATION	1.7117712918229116E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999785335680542	WITHOUT_CLASSIFICATION	2.1466431945746675E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999743216908965	WITHOUT_CLASSIFICATION	2.567830910343302E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999979647149435	WITHOUT_CLASSIFICATION	2.035285056425737E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998985037041651	WITHOUT_CLASSIFICATION	1.0149629583489948E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9916476621198236	WITHOUT_CLASSIFICATION	0.008352337880176327	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9916476621198236	WITHOUT_CLASSIFICATION	0.008352337880176327	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999235264289794	WITHOUT_CLASSIFICATION	7.647357102055189E-5	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999826681422753	WITHOUT_CLASSIFICATION	1.733185772465773E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9998133489566439	WITHOUT_CLASSIFICATION	1.8665104335610167E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999983418817546	WITHOUT_CLASSIFICATION	1.6581182452650852E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999197109321432	WITHOUT_CLASSIFICATION	8.028906785685658E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999672194821236	WITHOUT_CLASSIFICATION	3.2780517876267275E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999672194821236	WITHOUT_CLASSIFICATION	3.2780517876267275E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999672194821236	WITHOUT_CLASSIFICATION	3.2780517876267275E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999908985532433	WITHOUT_CLASSIFICATION	9.101446756744644E-6	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999908985532433	WITHOUT_CLASSIFICATION	9.101446756744644E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999228430110731	WITHOUT_CLASSIFICATION	7.715698892682439E-5	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999952243268023	WITHOUT_CLASSIFICATION	4.775673197665809E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999952243268023	WITHOUT_CLASSIFICATION	4.775673197665809E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999043461223759	WITHOUT_CLASSIFICATION	9.565387762410514E-5	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.999983670375691	WITHOUT_CLASSIFICATION	1.6329624308876384E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995210460223816	WITHOUT_CLASSIFICATION	4.7895397761853946E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999930586220087	WITHOUT_CLASSIFICATION	6.94137799129949E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9974425593777064	WITHOUT_CLASSIFICATION	0.002557440622293644	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9974425593777064	WITHOUT_CLASSIFICATION	0.002557440622293644	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994335893268861	WITHOUT_CLASSIFICATION	5.664106731138873E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999550988356699	WITHOUT_CLASSIFICATION	4.49011643300704E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976971063453	WITHOUT_CLASSIFICATION	2.3028936547064822E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998278448209283	WITHOUT_CLASSIFICATION	1.7215517907164492E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999109694442303	WITHOUT_CLASSIFICATION	8.90305557696848E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999815248813432	WITHOUT_CLASSIFICATION	1.84751186568348E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999471230561479	WITHOUT_CLASSIFICATION	5.287694385209934E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993458257286643	WITHOUT_CLASSIFICATION	6.541742713357678E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999133339347799	WITHOUT_CLASSIFICATION	8.666606522010734E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999677599694884	WITHOUT_CLASSIFICATION	3.2240030511680344E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999388005427807	WITHOUT_CLASSIFICATION	6.119945721923197E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9998514391862087	WITHOUT_CLASSIFICATION	1.4856081379129165E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.99999061770704	WITHOUT_CLASSIFICATION	9.382292959960311E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999981718724693	WITHOUT_CLASSIFICATION	1.828127530778603E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999829159934264	WITHOUT_CLASSIFICATION	1.7084006573618194E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9992338045596577	WITHOUT_CLASSIFICATION	7.661954403423008E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999013430692532	WITHOUT_CLASSIFICATION	9.86569307468245E-5	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999472161786395	WITHOUT_CLASSIFICATION	5.278382136066204E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9997581710166444	WITHOUT_CLASSIFICATION	2.4182898335563068E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999822498719926	WITHOUT_CLASSIFICATION	1.775012800738051E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9997242109261282	WITHOUT_CLASSIFICATION	2.757890738718239E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999910714549755	WITHOUT_CLASSIFICATION	8.928545024502552E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9998640008094243	WITHOUT_CLASSIFICATION	1.3599919057574581E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999033229743347	WITHOUT_CLASSIFICATION	9.667702566519593E-5	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999023402563738	WITHOUT_CLASSIFICATION	9.765974362616343E-5	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9994869942335445	WITHOUT_CLASSIFICATION	5.130057664556024E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9992911834245861	WITHOUT_CLASSIFICATION	7.088165754138175E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9992911834245861	WITHOUT_CLASSIFICATION	7.088165754138175E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999609282932659	WITHOUT_CLASSIFICATION	3.9071706734190144E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998520389294978	WITHOUT_CLASSIFICATION	1.4796107050219176E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999674339153396	WITHOUT_CLASSIFICATION	3.256608466044136E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999025261407295	WITHOUT_CLASSIFICATION	9.747385927049534E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999848045596984	WITHOUT_CLASSIFICATION	1.5195440301667423E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999058780985781	WITHOUT_CLASSIFICATION	9.412190142190227E-5	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9998892048885758	WITHOUT_CLASSIFICATION	1.107951114242588E-4	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999838881655686	WITHOUT_CLASSIFICATION	1.6111834431486966E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999647552175802	WITHOUT_CLASSIFICATION	3.524478241972983E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997216380350629	WITHOUT_CLASSIFICATION	2.783619649371117E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997216380350629	WITHOUT_CLASSIFICATION	2.783619649371117E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998779622293316	WITHOUT_CLASSIFICATION	1.2203777066851438E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999788077030828	WITHOUT_CLASSIFICATION	2.119229691711462E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9991862733272666	WITHOUT_CLASSIFICATION	8.137266727333559E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9998790219965146	WITHOUT_CLASSIFICATION	1.2097800348535925E-4	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.999997036040086	WITHOUT_CLASSIFICATION	2.9639599139199575E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9997960368997807	WITHOUT_CLASSIFICATION	2.039631002193635E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9999013430692532	WITHOUT_CLASSIFICATION	9.86569307468245E-5	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999637511068811	WITHOUT_CLASSIFICATION	3.6248893118952285E-5	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999854884099048	WITHOUT_CLASSIFICATION	1.4511590095130046E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.999871333368949	WITHOUT_CLASSIFICATION	1.286666310510736E-4	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999537966008419	WITHOUT_CLASSIFICATION	4.620339915809051E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999910669401694	WITHOUT_CLASSIFICATION	8.933059830676426E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999869899308976	WITHOUT_CLASSIFICATION	1.3010069102270041E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999946674946644	WITHOUT_CLASSIFICATION	5.332505335633E-6	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999709519137482	WITHOUT_CLASSIFICATION	2.904808625184175E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9984773959594667	WITHOUT_CLASSIFICATION	0.0015226040405332138	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999515597742994	WITHOUT_CLASSIFICATION	4.844022570056842E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999609326778799	WITHOUT_CLASSIFICATION	3.906732212011973E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999515597742994	WITHOUT_CLASSIFICATION	4.844022570056842E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999609326778799	WITHOUT_CLASSIFICATION	3.906732212011973E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9985652515626273	WITHOUT_CLASSIFICATION	0.0014347484373726377	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9982254097707463	WITHOUT_CLASSIFICATION	0.001774590229253769	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9998520079384244	WITHOUT_CLASSIFICATION	1.479920615754963E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9822056561249324	WITHOUT_CLASSIFICATION	0.01779434387506763	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998453410121007	WITHOUT_CLASSIFICATION	1.5465898789937768E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999470543017971	WITHOUT_CLASSIFICATION	5.294569820281291E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999707867539215	WITHOUT_CLASSIFICATION	2.9213246078506316E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999601174808883	WITHOUT_CLASSIFICATION	3.988251911157838E-5	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9998895695916327	WITHOUT_CLASSIFICATION	1.1043040836728104E-4	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999513288682619	WITHOUT_CLASSIFICATION	4.8671131738045374E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999867807367527	WITHOUT_CLASSIFICATION	1.3219263247160864E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999243737155082	WITHOUT_CLASSIFICATION	7.562628449168043E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9996960190316464	WITHOUT_CLASSIFICATION	3.039809683535503E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9995697040217695	WITHOUT_CLASSIFICATION	4.3029597823056917E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999470543017971	WITHOUT_CLASSIFICATION	5.294569820281291E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999752225069491	WITHOUT_CLASSIFICATION	2.4777493050881244E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999756468856866	WITHOUT_CLASSIFICATION	2.4353114313439474E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999900113798793	WITHOUT_CLASSIFICATION	9.98862012059761E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999513953614593	WITHOUT_CLASSIFICATION	4.860463854069466E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999469405114907	WITHOUT_CLASSIFICATION	5.305948850945483E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995821464891382	WITHOUT_CLASSIFICATION	4.1785351086177236E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9945374998509193	WITHOUT_CLASSIFICATION	0.005462500149080601	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995821464891382	WITHOUT_CLASSIFICATION	4.1785351086177236E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995821464891382	WITHOUT_CLASSIFICATION	4.1785351086177236E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995831484657522	WITHOUT_CLASSIFICATION	4.168515342477967E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996526733478233	WITHOUT_CLASSIFICATION	3.4732665217674047E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9998699036332819	WITHOUT_CLASSIFICATION	1.300963667180041E-4	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999875309648055	WITHOUT_CLASSIFICATION	1.2469035194329388E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995821464891382	WITHOUT_CLASSIFICATION	4.1785351086177236E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999751203537394	WITHOUT_CLASSIFICATION	2.4879646260524133E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999639308751985	WITHOUT_CLASSIFICATION	3.60691248013943E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999942937341483	WITHOUT_CLASSIFICATION	5.706265851815235E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9997342579096388	WITHOUT_CLASSIFICATION	2.6574209036123566E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999474520174182	WITHOUT_CLASSIFICATION	5.254798258190657E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999637117579798	WITHOUT_CLASSIFICATION	3.628824202025947E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999154789349014	WITHOUT_CLASSIFICATION	8.45210650986371E-5	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999890137559043	WITHOUT_CLASSIFICATION	1.098624409560995E-5	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999524671973322	WITHOUT_CLASSIFICATION	4.753280266774432E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999639308751985	WITHOUT_CLASSIFICATION	3.60691248013943E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999942937341483	WITHOUT_CLASSIFICATION	5.706265851815235E-6	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9997342579096388	WITHOUT_CLASSIFICATION	2.6574209036123566E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.999867531878216	WITHOUT_CLASSIFICATION	1.324681217839964E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9997103118700896	WITHOUT_CLASSIFICATION	2.8968812991045546E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9996114280900144	WITHOUT_CLASSIFICATION	3.885719099856308E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9998995431728447	WITHOUT_CLASSIFICATION	1.0045682715525648E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.999955275099215	WITHOUT_CLASSIFICATION	4.472490078501824E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.999403740633051	WITHOUT_CLASSIFICATION	5.962593669489376E-4	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999318507080335	WITHOUT_CLASSIFICATION	6.81492919665124E-5	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.999977098425534	WITHOUT_CLASSIFICATION	2.2901574466041156E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999492979348845	WITHOUT_CLASSIFICATION	5.070206511543494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9988029446118092	WITHOUT_CLASSIFICATION	0.0011970553881908098	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999029758637547	WITHOUT_CLASSIFICATION	9.702413624533465E-5	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999848478072472	WITHOUT_CLASSIFICATION	1.515219275290582E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999821713894137	WITHOUT_CLASSIFICATION	1.7828610586304112E-5	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9986122896646423	WITHOUT_CLASSIFICATION	0.0013877103353576786	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999955565964718	WITHOUT_CLASSIFICATION	4.44340352821946E-6	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9980170198433881	WITHOUT_CLASSIFICATION	0.001982980156611921	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999800751395644	WITHOUT_CLASSIFICATION	1.9924860435534777E-5	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999537249627151	WITHOUT_CLASSIFICATION	4.627503728492685E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999463205794457	WITHOUT_CLASSIFICATION	5.367942055430473E-5	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9903805727478889	WITHOUT_CLASSIFICATION	0.009619427252111097	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9908639675996291	WITHOUT_CLASSIFICATION	0.009136032400370944	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9976192148246293	WITHOUT_CLASSIFICATION	0.0023807851753706133	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999109490142108	WITHOUT_CLASSIFICATION	8.905098578915705E-5	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999635307412558	WITHOUT_CLASSIFICATION	3.6469258744308856E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9977491461807168	WITHOUT_CLASSIFICATION	0.0022508538192831996	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999780567400991	WITHOUT_CLASSIFICATION	2.1943259900857488E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999743385210605	WITHOUT_CLASSIFICATION	2.566147893943745E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9998252915167081	WITHOUT_CLASSIFICATION	1.7470848329196063E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9978615610337515	WITHOUT_CLASSIFICATION	0.0021384389662484748	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9992770237743068	WITHOUT_CLASSIFICATION	7.229762256931437E-4	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9996584692962371	WITHOUT_CLASSIFICATION	3.415307037629142E-4	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.999751522347353	WITHOUT_CLASSIFICATION	2.48477652646969E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9997948203932071	WITHOUT_CLASSIFICATION	2.0517960679296128E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.999701085243642	WITHOUT_CLASSIFICATION	2.9891475635801713E-4	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9989243579624022	WITHOUT_CLASSIFICATION	0.0010756420375978494	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9998858544391457	WITHOUT_CLASSIFICATION	1.1414556085431323E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9986205381069687	WITHOUT_CLASSIFICATION	0.001379461893031259	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9885221419591294	WITHOUT_CLASSIFICATION	0.011477858040870786	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9997681168975628	WITHOUT_CLASSIFICATION	2.3188310243710863E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999910714549755	WITHOUT_CLASSIFICATION	8.928545024502552E-5	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9993497792565132	WITHOUT_CLASSIFICATION	6.502207434866448E-4	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999301372961936	WITHOUT_CLASSIFICATION	6.986270380639174E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999494516943519	WITHOUT_CLASSIFICATION	5.054830564810824E-5	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999480235634177	WITHOUT_CLASSIFICATION	5.197643658233848E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9974821548643585	WITHOUT_CLASSIFICATION	0.0025178451356413743	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998945971581465	WITHOUT_CLASSIFICATION	1.0540284185341336E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9974821548643585	WITHOUT_CLASSIFICATION	0.0025178451356413743	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999898667784897	WITHOUT_CLASSIFICATION	1.0133221510302516E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9996983595690643	WITHOUT_CLASSIFICATION	3.0164043093573403E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999595528437561	WITHOUT_CLASSIFICATION	4.044715624380158E-5	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999938721583504	WITHOUT_CLASSIFICATION	6.127841649508056E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999583534053843	WITHOUT_CLASSIFICATION	4.164659461573525E-5	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.99998687574302	WITHOUT_CLASSIFICATION	1.312425698004133E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999810801599667	WITHOUT_CLASSIFICATION	1.8919840033355853E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999825650641054	WITHOUT_CLASSIFICATION	1.7434935894612072E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999839829493313	WITHOUT_CLASSIFICATION	1.6017050668695123E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999780198753497	WITHOUT_CLASSIFICATION	2.198012465030245E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999568048025085	WITHOUT_CLASSIFICATION	4.3195197491558543E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9989387973312019	WITHOUT_CLASSIFICATION	0.0010612026687980608	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999856079096049	WITHOUT_CLASSIFICATION	1.4392090395072907E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.999998687729078	WITHOUT_CLASSIFICATION	1.3122709220993732E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999819682087692	WITHOUT_CLASSIFICATION	1.8031791230937276E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999902152493189	WITHOUT_CLASSIFICATION	9.784750681132047E-6	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9997283601893222	WITHOUT_CLASSIFICATION	2.716398106779007E-4	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.999841045860482	WITHOUT_CLASSIFICATION	1.5895413951798166E-4	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999887292422545	WITHOUT_CLASSIFICATION	1.1270757745477639E-5	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.998271743368394	WITHOUT_CLASSIFICATION	0.001728256631606043	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999774810520382	WITHOUT_CLASSIFICATION	2.251894796169755E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999322305685572	WITHOUT_CLASSIFICATION	6.77694314427892E-5	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999903755844889	WITHOUT_CLASSIFICATION	9.624415511187475E-6	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999924935823977	WITHOUT_CLASSIFICATION	7.506417602194589E-6	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9998065912560186	WITHOUT_CLASSIFICATION	1.9340874398132157E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999326988434534	WITHOUT_CLASSIFICATION	6.730115654658747E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999492824182745	WITHOUT_CLASSIFICATION	5.071758172557791E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.999159435539068	WITHOUT_CLASSIFICATION	8.405644609320374E-4	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9998741167067625	WITHOUT_CLASSIFICATION	1.2588329323748995E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9980560383553069	WITHOUT_CLASSIFICATION	0.0019439616446931026	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9994559664292072	WITHOUT_CLASSIFICATION	5.440335707927815E-4	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999978511161759	WITHOUT_CLASSIFICATION	2.148883824204424E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999579314695102	WITHOUT_CLASSIFICATION	4.2068530489704734E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999680682738371	WITHOUT_CLASSIFICATION	3.193172616281163E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999634904032145	WITHOUT_CLASSIFICATION	3.6509596785511016E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999491274944332	WITHOUT_CLASSIFICATION	5.0872505566684095E-5	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999752678482045	WITHOUT_CLASSIFICATION	2.473215179561427E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999494516943519	WITHOUT_CLASSIFICATION	5.054830564810824E-5	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.999957432855803	WITHOUT_CLASSIFICATION	4.256714419703438E-5	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999825304698681	WITHOUT_CLASSIFICATION	1.7469530131996883E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.999991060910057	WITHOUT_CLASSIFICATION	8.939089943025907E-6	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9996347497412028	WITHOUT_CLASSIFICATION	3.652502587971773E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9998945971581465	WITHOUT_CLASSIFICATION	1.0540284185341336E-4	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.999831870603328	WITHOUT_CLASSIFICATION	1.6812939667206785E-4	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999771730622724	WITHOUT_CLASSIFICATION	2.2826937727593063E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999790978063827	WITHOUT_CLASSIFICATION	2.0902193617270156E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999655744905936	WITHOUT_CLASSIFICATION	3.442550940634056E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.999840373814376	WITHOUT_CLASSIFICATION	1.5962618562405048E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9996528757939243	WITHOUT_CLASSIFICATION	3.4712420607584273E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9998853337803526	WITHOUT_CLASSIFICATION	1.1466621964738118E-4	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999754911876325	WITHOUT_CLASSIFICATION	2.4508812367530714E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999772621370961	WITHOUT_CLASSIFICATION	2.2737862903816075E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9960066753487958	WITHOUT_CLASSIFICATION	0.003993324651204172	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9998640008094243	WITHOUT_CLASSIFICATION	1.3599919057574581E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999689110482677	WITHOUT_CLASSIFICATION	3.108895173234487E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999666849935703	WITHOUT_CLASSIFICATION	3.3315006429715533E-5	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9996580779579969	WITHOUT_CLASSIFICATION	3.4192204200306334E-4	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999027283053494	WITHOUT_CLASSIFICATION	9.727169465067838E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999505526037962	WITHOUT_CLASSIFICATION	4.9447396203892444E-5	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9998519763566668	WITHOUT_CLASSIFICATION	1.480236433332781E-4	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999643777138295	WITHOUT_CLASSIFICATION	3.562228617045015E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999751455850684	WITHOUT_CLASSIFICATION	2.485441493163727E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999557179327941	WITHOUT_CLASSIFICATION	4.428206720599263E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999846251075145	WITHOUT_CLASSIFICATION	1.5374892485491552E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999751455850684	WITHOUT_CLASSIFICATION	2.485441493163727E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999873460781206	WITHOUT_CLASSIFICATION	1.2653921879399287E-5	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999873355993457	WITHOUT_CLASSIFICATION	1.2664400654182958E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9998873444921049	WITHOUT_CLASSIFICATION	1.126555078949608E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.999958846414572	WITHOUT_CLASSIFICATION	4.1153585428079634E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999887542899767	WITHOUT_CLASSIFICATION	1.1245710023267086E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999878822918067	WITHOUT_CLASSIFICATION	1.2117708193293345E-5	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.999982904275785	WITHOUT_CLASSIFICATION	1.7095724214944624E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999908823204628	WITHOUT_CLASSIFICATION	9.117679537162473E-6	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.999993088585207	WITHOUT_CLASSIFICATION	6.911414792919207E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999898081672439	WITHOUT_CLASSIFICATION	1.0191832756101359E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999766065546789	WITHOUT_CLASSIFICATION	2.3393445321076606E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999436743290333	WITHOUT_CLASSIFICATION	5.632567096663289E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999961760184709	WITHOUT_CLASSIFICATION	3.823981529051361E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999545467390881	WITHOUT_CLASSIFICATION	4.545326091187554E-5	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999467421147443	WITHOUT_CLASSIFICATION	5.325788525564556E-5	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9975542098468707	WITHOUT_CLASSIFICATION	0.0024457901531293423	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999588532874605	WITHOUT_CLASSIFICATION	4.114671253958885E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9998821449501766	WITHOUT_CLASSIFICATION	1.1785504982337455E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999816718549985	WITHOUT_CLASSIFICATION	1.832814500141424E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999817950978723	WITHOUT_CLASSIFICATION	1.8204902127605708E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999885333883066	WITHOUT_CLASSIFICATION	1.146661169336207E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999580576745535	WITHOUT_CLASSIFICATION	4.1942325446441185E-5	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998862825333834	WITHOUT_CLASSIFICATION	1.1371746661653303E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998862825333834	WITHOUT_CLASSIFICATION	1.1371746661653303E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998777414109086	WITHOUT_CLASSIFICATION	1.2225858909140083E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.999985392520859	WITHOUT_CLASSIFICATION	1.4607479140908379E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.999974444446766	WITHOUT_CLASSIFICATION	2.555555323395882E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9989886252983657	WITHOUT_CLASSIFICATION	0.0010113747016342934	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9992008404553346	WITHOUT_CLASSIFICATION	7.991595446653714E-4	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9990662000097156	WITHOUT_CLASSIFICATION	9.337999902844125E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999714326675184	WITHOUT_CLASSIFICATION	2.8567332481583934E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999887695019383	WITHOUT_CLASSIFICATION	1.1230498061689692E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999495418516774	WITHOUT_CLASSIFICATION	5.045814832253346E-5	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9977845780401629	WITHOUT_CLASSIFICATION	0.0022154219598370995	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999677040737425	WITHOUT_CLASSIFICATION	3.2295926257477844E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999714374494708	WITHOUT_CLASSIFICATION	2.856255052913806E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9998701080044159	WITHOUT_CLASSIFICATION	1.298919955840146E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999365724213807	WITHOUT_CLASSIFICATION	6.342757861929737E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.999918691766601	WITHOUT_CLASSIFICATION	8.130823339905365E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9998755221657386	WITHOUT_CLASSIFICATION	1.244778342613851E-4	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999993212905828	WITHOUT_CLASSIFICATION	6.78709417267859E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9998431151771047	WITHOUT_CLASSIFICATION	1.5688482289530069E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9998431151771047	WITHOUT_CLASSIFICATION	1.5688482289530069E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999682048231875	WITHOUT_CLASSIFICATION	3.179517681257106E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999682048231875	WITHOUT_CLASSIFICATION	3.179517681257106E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9998043776224833	WITHOUT_CLASSIFICATION	1.9562237751668564E-4	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999571522654981	WITHOUT_CLASSIFICATION	4.284773450190063E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9997658374827855	WITHOUT_CLASSIFICATION	2.3416251721447866E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999687104854385	WITHOUT_CLASSIFICATION	3.128951456147673E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999532866728578	WITHOUT_CLASSIFICATION	4.671332714222224E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999279337727073	WITHOUT_CLASSIFICATION	7.206622729271873E-5	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999574950553902	WITHOUT_CLASSIFICATION	4.250494460977174E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999705385399756	WITHOUT_CLASSIFICATION	2.9461460024438662E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999642377649662	WITHOUT_CLASSIFICATION	3.576223503367723E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999642377649662	WITHOUT_CLASSIFICATION	3.576223503367723E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999642377649662	WITHOUT_CLASSIFICATION	3.576223503367723E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999448841276383	WITHOUT_CLASSIFICATION	5.511587236177646E-5	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999547218202379	WITHOUT_CLASSIFICATION	4.527817976220506E-5	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9998791191107287	WITHOUT_CLASSIFICATION	1.2088088927127147E-4	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999549427413984	WITHOUT_CLASSIFICATION	4.505725860150351E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999550641731846	WITHOUT_CLASSIFICATION	4.493582681537206E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999029620677093	WITHOUT_CLASSIFICATION	9.703793229071292E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999191717378365	WITHOUT_CLASSIFICATION	8.082826216357929E-5	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9997924420990925	WITHOUT_CLASSIFICATION	2.075579009074134E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999909654721568	WITHOUT_CLASSIFICATION	9.034527843228889E-6	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998757983138006	WITHOUT_CLASSIFICATION	1.2420168619942115E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9997517571235569	WITHOUT_CLASSIFICATION	2.482428764430944E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9998125938770118	WITHOUT_CLASSIFICATION	1.8740612298823495E-4	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999517623856354	WITHOUT_CLASSIFICATION	4.82376143646116E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9998984867335234	WITHOUT_CLASSIFICATION	1.0151326647656266E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999822788897179	WITHOUT_CLASSIFICATION	1.7721110282077184E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999780707704176	WITHOUT_CLASSIFICATION	2.192922958242989E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999988949719281	WITHOUT_CLASSIFICATION	1.1050280719205216E-6	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998747334795971	WITHOUT_CLASSIFICATION	1.252665204029236E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.999950519506788	WITHOUT_CLASSIFICATION	4.948049321203741E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999933396168114	WITHOUT_CLASSIFICATION	6.660383188691284E-6	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999928465570633	WITHOUT_CLASSIFICATION	7.1534429365712965E-6	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9998153690742211	WITHOUT_CLASSIFICATION	1.8463092577887012E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9998153690742211	WITHOUT_CLASSIFICATION	1.8463092577887012E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9998153690742211	WITHOUT_CLASSIFICATION	1.8463092577887012E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9998153690742211	WITHOUT_CLASSIFICATION	1.8463092577887012E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999232175841717	WITHOUT_CLASSIFICATION	7.678241582836352E-5	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9996911740665746	WITHOUT_CLASSIFICATION	3.088259334252964E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.999974914807676	WITHOUT_CLASSIFICATION	2.5085192324070523E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9994481830358483	WITHOUT_CLASSIFICATION	5.518169641517347E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9996911740665746	WITHOUT_CLASSIFICATION	3.088259334252964E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9997209694116977	WITHOUT_CLASSIFICATION	2.790305883022027E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9997072413045383	WITHOUT_CLASSIFICATION	2.927586954617664E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9997138305805998	WITHOUT_CLASSIFICATION	2.8616941940025136E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9998554468309162	WITHOUT_CLASSIFICATION	1.445531690838215E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9988564826350036	WITHOUT_CLASSIFICATION	0.001143517364996381	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999567185202995	WITHOUT_CLASSIFICATION	4.328147970049417E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9998553935251477	WITHOUT_CLASSIFICATION	1.4460647485217505E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.999986553488041	WITHOUT_CLASSIFICATION	1.344651195903457E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.999986553488041	WITHOUT_CLASSIFICATION	1.344651195903457E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999467999070596	WITHOUT_CLASSIFICATION	5.320009294028575E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999283070347286	WITHOUT_CLASSIFICATION	7.169296527141262E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999467999070596	WITHOUT_CLASSIFICATION	5.320009294028575E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997385078423752	WITHOUT_CLASSIFICATION	2.614921576247483E-4	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999968865369254	WITHOUT_CLASSIFICATION	3.113463074615685E-6	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999095006747206	WITHOUT_CLASSIFICATION	9.049932527928441E-5	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999796049160182	WITHOUT_CLASSIFICATION	2.0395083981759024E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.999970232153871	WITHOUT_CLASSIFICATION	2.976784612908267E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999934587705057	WITHOUT_CLASSIFICATION	6.5412294942139925E-6	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999948358107192	WITHOUT_CLASSIFICATION	5.164189280806569E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999606240388411	WITHOUT_CLASSIFICATION	3.937596115888297E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9995997458102288	WITHOUT_CLASSIFICATION	4.0025418977118244E-4	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9998524205504417	WITHOUT_CLASSIFICATION	1.4757944955843435E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999930867854288	WITHOUT_CLASSIFICATION	6.913214571294223E-6	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.999998760803524	WITHOUT_CLASSIFICATION	1.2391964760108184E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9998264667864182	WITHOUT_CLASSIFICATION	1.7353321358177753E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998639224584016	WITHOUT_CLASSIFICATION	1.3607754159832735E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997385078423752	WITHOUT_CLASSIFICATION	2.614921576247483E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9997385078423752	WITHOUT_CLASSIFICATION	2.614921576247483E-4	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999327379356795	WITHOUT_CLASSIFICATION	6.72620643204653E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9996563808370581	WITHOUT_CLASSIFICATION	3.4361916294186956E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999977975155435	WITHOUT_CLASSIFICATION	2.202484456434955E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999314884521245	WITHOUT_CLASSIFICATION	6.851154787551612E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999314884521245	WITHOUT_CLASSIFICATION	6.851154787551612E-5	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999927213903204	WITHOUT_CLASSIFICATION	7.278609679636796E-6	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999978231718013	WITHOUT_CLASSIFICATION	2.1768281987019727E-6	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999094967437381	WITHOUT_CLASSIFICATION	9.050325626187985E-5	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999165585505282	WITHOUT_CLASSIFICATION	8.344144947183578E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9989263153346336	WITHOUT_CLASSIFICATION	0.0010736846653663526	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9998913360042744	WITHOUT_CLASSIFICATION	1.0866399572563991E-4	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.999906069565971	WITHOUT_CLASSIFICATION	9.393043402902269E-5	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999567262347475	WITHOUT_CLASSIFICATION	4.327376525255672E-5	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.999260831917613	WITHOUT_CLASSIFICATION	7.391680823869562E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.999797967812665	WITHOUT_CLASSIFICATION	2.02032187335035E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999609825792679	WITHOUT_CLASSIFICATION	3.901742073209782E-5	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999883323875439	WITHOUT_CLASSIFICATION	1.1667612456085013E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9989263153346336	WITHOUT_CLASSIFICATION	0.0010736846653663526	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9998978983337736	WITHOUT_CLASSIFICATION	1.0210166622635806E-4	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999453696360067	WITHOUT_CLASSIFICATION	5.463036399343732E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999047548902663	WITHOUT_CLASSIFICATION	9.524510973361027E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9993168395625828	WITHOUT_CLASSIFICATION	6.83160437417249E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9993168395625828	WITHOUT_CLASSIFICATION	6.83160437417249E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999847583666226	WITHOUT_CLASSIFICATION	1.524163337741137E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999674339153396	WITHOUT_CLASSIFICATION	3.256608466044136E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999025261407295	WITHOUT_CLASSIFICATION	9.747385927049534E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999715204040099	WITHOUT_CLASSIFICATION	2.8479595990036212E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999715204040099	WITHOUT_CLASSIFICATION	2.8479595990036212E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.999939672583962	WITHOUT_CLASSIFICATION	6.0327416038148844E-5	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999695847193818	WITHOUT_CLASSIFICATION	3.0415280618170437E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999570462659999	WITHOUT_CLASSIFICATION	4.2953734000071484E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9996599222957607	WITHOUT_CLASSIFICATION	3.400777042393506E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999903134038368	WITHOUT_CLASSIFICATION	9.686596163156632E-6	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999609883178795	WITHOUT_CLASSIFICATION	3.901168212045531E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999682048231875	WITHOUT_CLASSIFICATION	3.179517681257106E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.999983682996339	WITHOUT_CLASSIFICATION	1.631700366095923E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9998615280065457	WITHOUT_CLASSIFICATION	1.3847199345421574E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9997704078390961	WITHOUT_CLASSIFICATION	2.295921609038609E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999689051785066	WITHOUT_CLASSIFICATION	3.109482149340574E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999871256044292	WITHOUT_CLASSIFICATION	1.2874395570956825E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999737462127223	WITHOUT_CLASSIFICATION	2.6253787277631522E-5	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9998586596808904	WITHOUT_CLASSIFICATION	1.4134031910972223E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9994093249165095	WITHOUT_CLASSIFICATION	5.906750834905974E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999673824672997	WITHOUT_CLASSIFICATION	3.261753270032E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999884577286285	WITHOUT_CLASSIFICATION	1.1542271371504128E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999263088187237	WITHOUT_CLASSIFICATION	7.369118127626575E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999263088187237	WITHOUT_CLASSIFICATION	7.369118127626575E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999503243564993	WITHOUT_CLASSIFICATION	4.967564350062113E-5	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999778430966593	WITHOUT_CLASSIFICATION	2.2156903340700586E-4	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999778430966593	WITHOUT_CLASSIFICATION	2.2156903340700586E-4	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.999810337363829	WITHOUT_CLASSIFICATION	1.8966263617099823E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999515597742994	WITHOUT_CLASSIFICATION	4.844022570056842E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998958620229644	WITHOUT_CLASSIFICATION	1.041379770356292E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999295345779435	WITHOUT_CLASSIFICATION	7.046542205640225E-5	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999707867539215	WITHOUT_CLASSIFICATION	2.9213246078506316E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999371952635215	WITHOUT_CLASSIFICATION	6.280473647844457E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999707867539215	WITHOUT_CLASSIFICATION	2.9213246078506316E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999626849290989	WITHOUT_CLASSIFICATION	3.7315070901019354E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999866700556076	WITHOUT_CLASSIFICATION	1.3329944392393142E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9998008792596051	WITHOUT_CLASSIFICATION	1.9912074039487383E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9994093249165095	WITHOUT_CLASSIFICATION	5.906750834905974E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9998033307821088	WITHOUT_CLASSIFICATION	1.9666921789122108E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999470543017971	WITHOUT_CLASSIFICATION	5.294569820281291E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9997808507070655	WITHOUT_CLASSIFICATION	2.1914929293440034E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9995547079058407	WITHOUT_CLASSIFICATION	4.4529209415936517E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9996682169987051	WITHOUT_CLASSIFICATION	3.3178300129497145E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999759894377319	WITHOUT_CLASSIFICATION	2.401056226808963E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981378459811383	WITHOUT_CLASSIFICATION	0.0018621540188616774	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9981378459811383	WITHOUT_CLASSIFICATION	0.0018621540188616774	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9995950382803706	WITHOUT_CLASSIFICATION	4.049617196294197E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999616093937739	WITHOUT_CLASSIFICATION	3.8390606226151794E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999626849290989	WITHOUT_CLASSIFICATION	3.7315070901019354E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999626849290989	WITHOUT_CLASSIFICATION	3.7315070901019354E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999697381182908	WITHOUT_CLASSIFICATION	3.0261881709191305E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9964642967401798	WITHOUT_CLASSIFICATION	0.0035357032598201635	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9998807285661916	WITHOUT_CLASSIFICATION	1.1927143380848999E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9997159539747702	WITHOUT_CLASSIFICATION	2.840460252297638E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9998749834163563	WITHOUT_CLASSIFICATION	1.250165836438079E-4	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999685115129328	WITHOUT_CLASSIFICATION	3.148848706729792E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999921093900479	WITHOUT_CLASSIFICATION	7.890609952020746E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9998836719354711	WITHOUT_CLASSIFICATION	1.1632806452889654E-4	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9998494676256993	WITHOUT_CLASSIFICATION	1.5053237430080515E-4	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9991820552539076	WITHOUT_CLASSIFICATION	8.179447460923928E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999683552915516	WITHOUT_CLASSIFICATION	3.1644708448310626E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998722981410428	WITHOUT_CLASSIFICATION	1.2770185895724905E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998722981410428	WITHOUT_CLASSIFICATION	1.2770185895724905E-4	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999763442411972	WITHOUT_CLASSIFICATION	2.3655758802798285E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999572736952691	WITHOUT_CLASSIFICATION	4.2726304730863506E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999449030088338	WITHOUT_CLASSIFICATION	5.509699116626332E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999449030088338	WITHOUT_CLASSIFICATION	5.509699116626332E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999871437838045	WITHOUT_CLASSIFICATION	1.285621619544775E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9998077788143631	WITHOUT_CLASSIFICATION	1.9222118563680317E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998453410121007	WITHOUT_CLASSIFICATION	1.5465898789937768E-4	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999913760045028	WITHOUT_CLASSIFICATION	8.623995497058912E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9998281976055059	WITHOUT_CLASSIFICATION	1.7180239449409622E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9994597039772593	WITHOUT_CLASSIFICATION	5.402960227407486E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999699916289999	WITHOUT_CLASSIFICATION	3.0008371000030005E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999098363990814	WITHOUT_CLASSIFICATION	9.016360091862593E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999914419563731	WITHOUT_CLASSIFICATION	8.55804362673977E-6	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999729845666675	WITHOUT_CLASSIFICATION	2.701543333256595E-5	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999617984425911	WITHOUT_CLASSIFICATION	3.820155740886501E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995712842495226	WITHOUT_CLASSIFICATION	4.2871575047733217E-4	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9998077788143631	WITHOUT_CLASSIFICATION	1.9222118563680317E-4	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999892604049815	WITHOUT_CLASSIFICATION	1.0739595018616069E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999096662824	WITHOUT_CLASSIFICATION	9.033371759932064E-8	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999923809870827	WITHOUT_CLASSIFICATION	7.619012917345882E-6	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999768121840946	WITHOUT_CLASSIFICATION	2.3187815905374933E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999913659696812	WITHOUT_CLASSIFICATION	8.634030318866242E-6	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998575222259964	WITHOUT_CLASSIFICATION	1.424777740036241E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9985962947200461	WITHOUT_CLASSIFICATION	0.0014037052799540093	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999979772087411	WITHOUT_CLASSIFICATION	2.0227912588516067E-6	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999925869271622	WITHOUT_CLASSIFICATION	7.413072837743083E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.999779862978176	WITHOUT_CLASSIFICATION	2.201370218239037E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9993239305777846	WITHOUT_CLASSIFICATION	6.760694222154495E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9989986920583651	WITHOUT_CLASSIFICATION	0.0010013079416348982	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999919846780533	WITHOUT_CLASSIFICATION	8.015321946632905E-6	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9983092709759213	WITHOUT_CLASSIFICATION	0.0016907290240787216	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9992454062523543	WITHOUT_CLASSIFICATION	7.545937476457667E-4	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999051431133774	WITHOUT_CLASSIFICATION	9.485688662248004E-5	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999478764208267	WITHOUT_CLASSIFICATION	5.212357917338433E-5	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999321485692142	WITHOUT_CLASSIFICATION	6.785143078583364E-5	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.999991797176767	WITHOUT_CLASSIFICATION	8.202823232974047E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9993315085441927	WITHOUT_CLASSIFICATION	6.684914558073106E-4	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999767847803385	WITHOUT_CLASSIFICATION	2.3215219661514754E-5	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9997468075789544	WITHOUT_CLASSIFICATION	2.531924210455119E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.999936878993876	WITHOUT_CLASSIFICATION	6.312100612404881E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997991588559502	WITHOUT_CLASSIFICATION	2.0084114404989468E-4	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9998012572961386	WITHOUT_CLASSIFICATION	1.9874270386136553E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999974376246591	WITHOUT_CLASSIFICATION	2.5623753408264904E-6	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999664234256251	WITHOUT_CLASSIFICATION	3.357657437489705E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9997111236370703	WITHOUT_CLASSIFICATION	2.8887636292973935E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9983273358968048	WITHOUT_CLASSIFICATION	0.0016726641031951474	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9977549434119778	WITHOUT_CLASSIFICATION	0.002245056588022207	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9997353120753892	WITHOUT_CLASSIFICATION	2.646879246107718E-4	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999892630458891	WITHOUT_CLASSIFICATION	1.0736954110997998E-5	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999618471952468	WITHOUT_CLASSIFICATION	3.815280475318917E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9998661816311494	WITHOUT_CLASSIFICATION	1.338183688505386E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999802291339809	WITHOUT_CLASSIFICATION	1.9770866019020712E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9944192670079718	WITHOUT_CLASSIFICATION	0.005580732992028199	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999466923178751	WITHOUT_CLASSIFICATION	5.330768212475389E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9997991588559502	WITHOUT_CLASSIFICATION	2.0084114404989468E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999580890127671	WITHOUT_CLASSIFICATION	4.191098723292804E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999988563770844	WITHOUT_CLASSIFICATION	1.1436229156011526E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999988563770844	WITHOUT_CLASSIFICATION	1.1436229156011526E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999943107437356	WITHOUT_CLASSIFICATION	5.689256264430386E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999943107437356	WITHOUT_CLASSIFICATION	5.689256264430386E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9936159930763673	WITHOUT_CLASSIFICATION	0.006384006923632748	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999458417224035	WITHOUT_CLASSIFICATION	5.415827759635867E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999874297952799	WITHOUT_CLASSIFICATION	1.257020472013397E-5	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9998575031499443	WITHOUT_CLASSIFICATION	1.4249685005576605E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9997362542577165	WITHOUT_CLASSIFICATION	2.6374574228352037E-4	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9997619483261047	WITHOUT_CLASSIFICATION	2.380516738954302E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9992224201327454	WITHOUT_CLASSIFICATION	7.775798672546297E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999448601017253	WITHOUT_CLASSIFICATION	5.513989827466824E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999697800589712	WITHOUT_CLASSIFICATION	3.021994102881361E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999610041461207	WITHOUT_CLASSIFICATION	3.8995853879376855E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9997752738019998	WITHOUT_CLASSIFICATION	2.2472619800014283E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9998100662525594	WITHOUT_CLASSIFICATION	1.8993374744059348E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9970225002119718	WITHOUT_CLASSIFICATION	0.0029774997880282726	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999885403051527	WITHOUT_CLASSIFICATION	1.1459694847252048E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999637439327936	WITHOUT_CLASSIFICATION	3.6256067206411483E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9997808507070655	WITHOUT_CLASSIFICATION	2.1914929293440034E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9992233107753704	WITHOUT_CLASSIFICATION	7.766892246296446E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999334840763152	WITHOUT_CLASSIFICATION	6.651592368483546E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999334840763152	WITHOUT_CLASSIFICATION	6.651592368483546E-5	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9992128287033415	WITHOUT_CLASSIFICATION	7.871712966584906E-4	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9997881609518733	WITHOUT_CLASSIFICATION	2.1183904812683955E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9987172080649469	WITHOUT_CLASSIFICATION	0.0012827919350530575	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999906572240685	WITHOUT_CLASSIFICATION	9.342775931490011E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998050991685595	WITHOUT_CLASSIFICATION	1.9490083144051086E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998050991685595	WITHOUT_CLASSIFICATION	1.9490083144051086E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9988507279063958	WITHOUT_CLASSIFICATION	0.0011492720936041698	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999998225814669	WITHOUT_CLASSIFICATION	1.774185331663024E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999883388015451	WITHOUT_CLASSIFICATION	1.166119845488301E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999656876707057	WITHOUT_CLASSIFICATION	3.4312329294281715E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9996757154959455	WITHOUT_CLASSIFICATION	3.242845040544428E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999906572240685	WITHOUT_CLASSIFICATION	9.342775931490011E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998050991685595	WITHOUT_CLASSIFICATION	1.9490083144051086E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9998050991685595	WITHOUT_CLASSIFICATION	1.9490083144051086E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9988507279063958	WITHOUT_CLASSIFICATION	0.0011492720936041698	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9995319443127046	WITHOUT_CLASSIFICATION	4.6805568729541187E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999677126546959	WITHOUT_CLASSIFICATION	3.228734530412257E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9998437447355125	WITHOUT_CLASSIFICATION	1.5625526448753845E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999937299782199	WITHOUT_CLASSIFICATION	6.2700217801758855E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9980381001452718	WITHOUT_CLASSIFICATION	0.0019618998547281676	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9923682050292475	WITHOUT_CLASSIFICATION	0.007631794970752564	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999758173586669	WITHOUT_CLASSIFICATION	2.4182641333100697E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998817416866222	WITHOUT_CLASSIFICATION	1.1825831337773292E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998817416866222	WITHOUT_CLASSIFICATION	1.1825831337773292E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9998546119051716	WITHOUT_CLASSIFICATION	1.453880948284338E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9995681127808844	WITHOUT_CLASSIFICATION	4.318872191155429E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9998795209709449	WITHOUT_CLASSIFICATION	1.2047902905512057E-4	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.999793442566294	WITHOUT_CLASSIFICATION	2.065574337060124E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9997832242010085	WITHOUT_CLASSIFICATION	2.167757989915058E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9998913496571744	WITHOUT_CLASSIFICATION	1.0865034282555287E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999084461973254	WITHOUT_CLASSIFICATION	9.15538026745451E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999382848117723	WITHOUT_CLASSIFICATION	6.171518822764343E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9950821614723147	WITHOUT_CLASSIFICATION	0.004917838527685438	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9998966427835588	WITHOUT_CLASSIFICATION	1.0335721644120634E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999581466792093	WITHOUT_CLASSIFICATION	4.1853320790689945E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9997139980975196	WITHOUT_CLASSIFICATION	2.8600190248039584E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9998516398054104	WITHOUT_CLASSIFICATION	1.483601945896254E-4	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9979460799902281	WITHOUT_CLASSIFICATION	0.0020539200097718525	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9998701602775599	WITHOUT_CLASSIFICATION	1.298397224400775E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9998565290456678	WITHOUT_CLASSIFICATION	1.4347095433217658E-4	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9979713292378767	WITHOUT_CLASSIFICATION	0.0020286707621233703	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999119132430909	WITHOUT_CLASSIFICATION	8.80867569090721E-5	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999318002589674	WITHOUT_CLASSIFICATION	6.819974103256824E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9978562687629743	WITHOUT_CLASSIFICATION	0.002143731237025803	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9987835818067631	WITHOUT_CLASSIFICATION	0.0012164181932369374	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.999801426804804	WITHOUT_CLASSIFICATION	1.985731951960289E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9995685105872262	WITHOUT_CLASSIFICATION	4.314894127738144E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999282445344584	WITHOUT_CLASSIFICATION	7.175546554162532E-5	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999869772917958	WITHOUT_CLASSIFICATION	1.3022708204260006E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999590552447636	WITHOUT_CLASSIFICATION	4.094475523638174E-5	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9988136367183647	WITHOUT_CLASSIFICATION	0.0011863632816353866	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999992018304434	WITHOUT_CLASSIFICATION	7.981695566185321E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999992434392134	WITHOUT_CLASSIFICATION	7.565607865945067E-7	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999010089099022	WITHOUT_CLASSIFICATION	9.899109009769545E-5	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.999966319708686	WITHOUT_CLASSIFICATION	3.368029131392059E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999935610061191	WITHOUT_CLASSIFICATION	6.438993880850642E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999935610061191	WITHOUT_CLASSIFICATION	6.438993880850642E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9998550770002742	WITHOUT_CLASSIFICATION	1.4492299972576313E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9998602292243829	WITHOUT_CLASSIFICATION	1.3977077561707176E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999769301497552	WITHOUT_CLASSIFICATION	2.3069850244868718E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999701713157388	WITHOUT_CLASSIFICATION	2.9828684261078035E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9999075901769517	WITHOUT_CLASSIFICATION	9.240982304828E-5	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999908252450656	WITHOUT_CLASSIFICATION	9.17475493441076E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998958620229644	WITHOUT_CLASSIFICATION	1.041379770356292E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9997786529426835	WITHOUT_CLASSIFICATION	2.2134705731639406E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9988359593261198	WITHOUT_CLASSIFICATION	0.0011640406738802408	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9999011326477533	WITHOUT_CLASSIFICATION	9.886735224664201E-5	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.998884013277143	WITHOUT_CLASSIFICATION	0.0011159867228568662	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9990515048115972	WITHOUT_CLASSIFICATION	9.484951884028532E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998958620229644	WITHOUT_CLASSIFICATION	1.041379770356292E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998958620229644	WITHOUT_CLASSIFICATION	1.041379770356292E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999875354558644	WITHOUT_CLASSIFICATION	1.2464544135481345E-5	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999789670700416	WITHOUT_CLASSIFICATION	2.103292995836362E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9998228339151193	WITHOUT_CLASSIFICATION	1.7716608488070593E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999208855567285	WITHOUT_CLASSIFICATION	7.91144432714868E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999864957713	WITHOUT_CLASSIFICATION	1.350422870783306E-8	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.999909438182954	WITHOUT_CLASSIFICATION	9.056181704593672E-5	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999097838017853	WITHOUT_CLASSIFICATION	9.021619821463292E-5	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999097838017853	WITHOUT_CLASSIFICATION	9.021619821463292E-5	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999097838017853	WITHOUT_CLASSIFICATION	9.021619821463292E-5	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9996774921197352	WITHOUT_CLASSIFICATION	3.225078802647892E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.999953935733723	WITHOUT_CLASSIFICATION	4.606426627691612E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9983619754941777	WITHOUT_CLASSIFICATION	0.0016380245058223424	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999758295956027	WITHOUT_CLASSIFICATION	2.417040439723596E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.999896287712226	WITHOUT_CLASSIFICATION	1.0371228777396968E-4	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9998917459736292	WITHOUT_CLASSIFICATION	1.082540263707722E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999599324078775	WITHOUT_CLASSIFICATION	4.006759212251156E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9998890049784911	WITHOUT_CLASSIFICATION	1.1099502150889387E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9983619754941777	WITHOUT_CLASSIFICATION	0.0016380245058223424	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999875720712287	WITHOUT_CLASSIFICATION	1.2427928771325222E-5	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.999905957868382	WITHOUT_CLASSIFICATION	9.404213161804836E-5	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999468119516617	WITHOUT_CLASSIFICATION	5.318804833821555E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999692945861354	WITHOUT_CLASSIFICATION	3.070541386453651E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9995441987175635	WITHOUT_CLASSIFICATION	4.5580128243647035E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999511982838919	WITHOUT_CLASSIFICATION	4.880171610811548E-5	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999948071843391	WITHOUT_CLASSIFICATION	5.192815660871867E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9997285287654016	WITHOUT_CLASSIFICATION	2.714712345984155E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999960089137478	WITHOUT_CLASSIFICATION	3.991086252188228E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9998915605502062	WITHOUT_CLASSIFICATION	1.0843944979376423E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999960089137478	WITHOUT_CLASSIFICATION	3.991086252188228E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9997619732019207	WITHOUT_CLASSIFICATION	2.3802679807926794E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9997964008338331	WITHOUT_CLASSIFICATION	2.0359916616683634E-4	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999617935821057	WITHOUT_CLASSIFICATION	3.8206417894354734E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999580611014912	WITHOUT_CLASSIFICATION	4.193889850885608E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999442808339987	WITHOUT_CLASSIFICATION	5.571916600138373E-5	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.999997480986125	WITHOUT_CLASSIFICATION	2.519013875108367E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9942315927178403	WITHOUT_CLASSIFICATION	0.0057684072821596565	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9986385323652541	WITHOUT_CLASSIFICATION	0.001361467634745852	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999256053287723	WITHOUT_CLASSIFICATION	7.439467122762591E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9990332810406122	WITHOUT_CLASSIFICATION	9.667189593878252E-4	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9996555301535432	WITHOUT_CLASSIFICATION	3.4446984645666976E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9996609075670759	WITHOUT_CLASSIFICATION	3.3909243292415566E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9995120243793865	WITHOUT_CLASSIFICATION	4.8797562061354566E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9805046908065366	WITHOUT_CLASSIFICATION	0.019495309193463487	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9996603652877738	WITHOUT_CLASSIFICATION	3.396347122262408E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9997362739091743	WITHOUT_CLASSIFICATION	2.6372609082575153E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999477585914405	WITHOUT_CLASSIFICATION	5.224140855960022E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9658195881210291	WITHOUT_CLASSIFICATION	0.03418041187897089	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999822779375589	WITHOUT_CLASSIFICATION	1.7722062441012546E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999435108954483	WITHOUT_CLASSIFICATION	5.648910455169471E-5	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999824532203511	WITHOUT_CLASSIFICATION	1.7546779648919834E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999747834197327	WITHOUT_CLASSIFICATION	2.5216580267296033E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999468078054307	WITHOUT_CLASSIFICATION	5.319219456935712E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9942315927178403	WITHOUT_CLASSIFICATION	0.0057684072821596565	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9997878429419217	WITHOUT_CLASSIFICATION	2.1215705807835688E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9997878429419217	WITHOUT_CLASSIFICATION	2.1215705807835688E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999770093674901	WITHOUT_CLASSIFICATION	2.299063250979128E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999805026126212	WITHOUT_CLASSIFICATION	1.9497387378804344E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999805026126212	WITHOUT_CLASSIFICATION	1.9497387378804344E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9998047299030083	WITHOUT_CLASSIFICATION	1.9527009699163187E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9998047299030083	WITHOUT_CLASSIFICATION	1.9527009699163187E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9989169498987027	WITHOUT_CLASSIFICATION	0.001083050101297227	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999730507379685	WITHOUT_CLASSIFICATION	2.6949262031477803E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9998949189165557	WITHOUT_CLASSIFICATION	1.0508108344421011E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.999809733254271	WITHOUT_CLASSIFICATION	1.9026674572904804E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999646314625434	WITHOUT_CLASSIFICATION	3.536853745656645E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9998099041599141	WITHOUT_CLASSIFICATION	1.9009584008589675E-4	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999854284984775	WITHOUT_CLASSIFICATION	1.4571501522537975E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999812803346039	WITHOUT_CLASSIFICATION	1.8719665396155453E-5	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999527827985775	WITHOUT_CLASSIFICATION	4.7217201422532095E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999948632902033	WITHOUT_CLASSIFICATION	5.13670979677481E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9998748910386662	WITHOUT_CLASSIFICATION	1.2510896133385193E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999645463844693	WITHOUT_CLASSIFICATION	3.5453615530789974E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995977633106049	WITHOUT_CLASSIFICATION	4.0223668939510626E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995977633106049	WITHOUT_CLASSIFICATION	4.0223668939510626E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9997653265164842	WITHOUT_CLASSIFICATION	2.3467348351592472E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9990857003254408	WITHOUT_CLASSIFICATION	9.142996745593814E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999933450676318	WITHOUT_CLASSIFICATION	6.6549323681825145E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9989888513548114	WITHOUT_CLASSIFICATION	0.0010111486451886635	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999921860127589	WITHOUT_CLASSIFICATION	7.813987241017673E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999515451344069	WITHOUT_CLASSIFICATION	4.845486559324599E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999876362065725	WITHOUT_CLASSIFICATION	1.2363793427574323E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.999933764318125	WITHOUT_CLASSIFICATION	6.62356818750183E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.999906663870531	WITHOUT_CLASSIFICATION	9.333612946910505E-5	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9998855073538441	WITHOUT_CLASSIFICATION	1.1449264615589138E-4	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999982546554733	WITHOUT_CLASSIFICATION	1.7453445266275184E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999818376267435	WITHOUT_CLASSIFICATION	1.8162373256424273E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999926358207197	WITHOUT_CLASSIFICATION	7.364179280289315E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.999982570418539	WITHOUT_CLASSIFICATION	1.7429581460969426E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999011603361163	WITHOUT_CLASSIFICATION	9.883966388375481E-5	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999812275163517	WITHOUT_CLASSIFICATION	1.8772483648389312E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999371346973498	WITHOUT_CLASSIFICATION	6.286530265016228E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999532906755666	WITHOUT_CLASSIFICATION	4.6709324433379545E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999185629337635	WITHOUT_CLASSIFICATION	8.143706623652348E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999619965339971	WITHOUT_CLASSIFICATION	3.800346600299603E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9998901347612222	WITHOUT_CLASSIFICATION	1.0986523877774933E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999898946415642	WITHOUT_CLASSIFICATION	1.0105358435844704E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.999984889504564	WITHOUT_CLASSIFICATION	1.5110495436006701E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999649993459231	WITHOUT_CLASSIFICATION	3.5000654076890215E-5	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999649993459231	WITHOUT_CLASSIFICATION	3.5000654076890215E-5	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999796248434125	WITHOUT_CLASSIFICATION	2.037515658751934E-5	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999946386873235	WITHOUT_CLASSIFICATION	5.361312676551237E-6	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999856690670269	WITHOUT_CLASSIFICATION	1.433093297309321E-5	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9998286636267802	WITHOUT_CLASSIFICATION	1.7133637321969407E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999550169760094	WITHOUT_CLASSIFICATION	4.498302399059171E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9985058247721713	WITHOUT_CLASSIFICATION	0.0014941752278286797	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9991339567156313	WITHOUT_CLASSIFICATION	8.660432843688164E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999876227243912	WITHOUT_CLASSIFICATION	1.237727560880215E-4	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9992273441611231	WITHOUT_CLASSIFICATION	7.726558388768974E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9994242247838487	WITHOUT_CLASSIFICATION	5.757752161512282E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999724814840034	WITHOUT_CLASSIFICATION	2.7518515996543216E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9998662653208692	WITHOUT_CLASSIFICATION	1.3373467913075943E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999586550674332	WITHOUT_CLASSIFICATION	4.13449325668836E-5	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999410210601044	WITHOUT_CLASSIFICATION	5.897893989552147E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999682921279485	WITHOUT_CLASSIFICATION	3.170787205152925E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.999793860816715	WITHOUT_CLASSIFICATION	2.0613918328495252E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999667697902351	WITHOUT_CLASSIFICATION	3.3230209764785015E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999784784840907	WITHOUT_CLASSIFICATION	2.1521515909315617E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999738298793143	WITHOUT_CLASSIFICATION	2.6170120685801442E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.999635453760073	WITHOUT_CLASSIFICATION	3.645462399270629E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.999975949377095	WITHOUT_CLASSIFICATION	2.4050622905025427E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999273357606484	WITHOUT_CLASSIFICATION	7.266423935161768E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.999793860816715	WITHOUT_CLASSIFICATION	2.0613918328495252E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999784784840907	WITHOUT_CLASSIFICATION	2.1521515909315617E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999687356395309	WITHOUT_CLASSIFICATION	3.126436046913088E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999723923658169	WITHOUT_CLASSIFICATION	2.7607634183084812E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999566822374013	WITHOUT_CLASSIFICATION	4.331776259870069E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9998906651101968	WITHOUT_CLASSIFICATION	1.0933488980328042E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994553203921661	WITHOUT_CLASSIFICATION	5.44679607833861E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9991646937349585	WITHOUT_CLASSIFICATION	8.353062650414651E-4	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999495001579667	WITHOUT_CLASSIFICATION	5.049984203334668E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999457301872231	WITHOUT_CLASSIFICATION	5.426981277680812E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999734998721395	WITHOUT_CLASSIFICATION	2.6500127860532377E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999734998721395	WITHOUT_CLASSIFICATION	2.6500127860532377E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.999876956548676	WITHOUT_CLASSIFICATION	1.2304345132403184E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999332143983479	WITHOUT_CLASSIFICATION	6.67856016521097E-5	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9998731044718774	WITHOUT_CLASSIFICATION	1.2689552812255643E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999609883178795	WITHOUT_CLASSIFICATION	3.901168212045531E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999609883178795	WITHOUT_CLASSIFICATION	3.901168212045531E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999674339153396	WITHOUT_CLASSIFICATION	3.256608466044136E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999025261407295	WITHOUT_CLASSIFICATION	9.747385927049534E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999871256044292	WITHOUT_CLASSIFICATION	1.2874395570956825E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999737462127223	WITHOUT_CLASSIFICATION	2.6253787277631522E-5	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9996658718898379	WITHOUT_CLASSIFICATION	3.341281101621615E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999316492489302	WITHOUT_CLASSIFICATION	6.835075106982957E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999587788235336	WITHOUT_CLASSIFICATION	4.122117646646652E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998964948784723	WITHOUT_CLASSIFICATION	1.0350512152770207E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9998613118161929	WITHOUT_CLASSIFICATION	1.386881838071105E-4	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999948971639194	WITHOUT_CLASSIFICATION	5.1028360805751134E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999981592406781	WITHOUT_CLASSIFICATION	1.8407593218422073E-6	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9993396092603446	WITHOUT_CLASSIFICATION	6.603907396553686E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999871256044292	WITHOUT_CLASSIFICATION	1.2874395570956825E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999737462127223	WITHOUT_CLASSIFICATION	2.6253787277631522E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9998817416866222	WITHOUT_CLASSIFICATION	1.1825831337773292E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999170958975496	WITHOUT_CLASSIFICATION	8.290410245035662E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999625683160532	WITHOUT_CLASSIFICATION	3.7431683946721044E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9991431846026435	WITHOUT_CLASSIFICATION	8.568153973565812E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9991431846026435	WITHOUT_CLASSIFICATION	8.568153973565812E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999617470854189	WITHOUT_CLASSIFICATION	3.825291458110644E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999617470854189	WITHOUT_CLASSIFICATION	3.825291458110644E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999400913118456	WITHOUT_CLASSIFICATION	5.990868815440046E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.999952589120925	WITHOUT_CLASSIFICATION	4.741087907499585E-5	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999535462673889	WITHOUT_CLASSIFICATION	4.645373261123015E-5	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999382690094459	WITHOUT_CLASSIFICATION	6.173099055401665E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999205589198121	WITHOUT_CLASSIFICATION	7.944108018789292E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999384086065018	WITHOUT_CLASSIFICATION	6.159139349817899E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999776333201558	WITHOUT_CLASSIFICATION	2.2366679844213533E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9997093175403262	WITHOUT_CLASSIFICATION	2.9068245967381627E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999852325784149	WITHOUT_CLASSIFICATION	1.476742158514011E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999852325784149	WITHOUT_CLASSIFICATION	1.476742158514011E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995950519225212	WITHOUT_CLASSIFICATION	4.0494807747892066E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995950519225212	WITHOUT_CLASSIFICATION	4.0494807747892066E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9995950519225212	WITHOUT_CLASSIFICATION	4.0494807747892066E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997905921581448	WITHOUT_CLASSIFICATION	2.0940784185524838E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997905921581448	WITHOUT_CLASSIFICATION	2.0940784185524838E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997905921581448	WITHOUT_CLASSIFICATION	2.0940784185524838E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999933367657848	WITHOUT_CLASSIFICATION	6.663234215256822E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999933367657848	WITHOUT_CLASSIFICATION	6.663234215256822E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996534238337521	WITHOUT_CLASSIFICATION	3.4657616624794593E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996534238337521	WITHOUT_CLASSIFICATION	3.4657616624794593E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999472452160585	WITHOUT_CLASSIFICATION	5.275478394146008E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999472452160585	WITHOUT_CLASSIFICATION	5.275478394146008E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999375785460977	WITHOUT_CLASSIFICATION	6.242145390237855E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999375785460977	WITHOUT_CLASSIFICATION	6.242145390237855E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999169398875227	WITHOUT_CLASSIFICATION	8.306011247727154E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999169398875227	WITHOUT_CLASSIFICATION	8.306011247727154E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999513939629576	WITHOUT_CLASSIFICATION	4.860603704241054E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999513939629576	WITHOUT_CLASSIFICATION	4.860603704241054E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999963380870597	WITHOUT_CLASSIFICATION	3.6619129402727725E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999963380870597	WITHOUT_CLASSIFICATION	3.6619129402727725E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999933367657848	WITHOUT_CLASSIFICATION	6.663234215256822E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9996534238337521	WITHOUT_CLASSIFICATION	3.4657616624794593E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999472452160585	WITHOUT_CLASSIFICATION	5.275478394146008E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999169398875227	WITHOUT_CLASSIFICATION	8.306011247727154E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999513939629576	WITHOUT_CLASSIFICATION	4.860603704241054E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999963380870597	WITHOUT_CLASSIFICATION	3.6619129402727725E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.999865621639681	WITHOUT_CLASSIFICATION	1.3437836031910763E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.973884899312256	WITHOUT_CLASSIFICATION	0.026115100687743968	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9998592620960076	WITHOUT_CLASSIFICATION	1.4073790399237867E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998766075256739	WITHOUT_CLASSIFICATION	1.2339247432610438E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999716235840714	WITHOUT_CLASSIFICATION	2.837641592851621E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999626092711463	WITHOUT_CLASSIFICATION	3.739072885370879E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999557736699569	WITHOUT_CLASSIFICATION	4.4226330043039E-5	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999309476057358	WITHOUT_CLASSIFICATION	6.90523942642444E-5	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999556073935159	WITHOUT_CLASSIFICATION	4.439260648411452E-5	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9998636674444046	WITHOUT_CLASSIFICATION	1.3633255559552057E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9995844557066512	WITHOUT_CLASSIFICATION	4.155442933487673E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999515868404053	WITHOUT_CLASSIFICATION	4.841315959467487E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999575126179601	WITHOUT_CLASSIFICATION	4.248738203989761E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9997637894143885	WITHOUT_CLASSIFICATION	2.362105856114119E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9995828870078691	WITHOUT_CLASSIFICATION	4.1711299213081584E-4	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999602309346453	WITHOUT_CLASSIFICATION	3.9769065354734806E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9997853918771864	WITHOUT_CLASSIFICATION	2.146081228135553E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9997987625614019	WITHOUT_CLASSIFICATION	2.012374385980429E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9995444960327113	WITHOUT_CLASSIFICATION	4.555039672885908E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9998251762466226	WITHOUT_CLASSIFICATION	1.7482375337745572E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999120762157937	WITHOUT_CLASSIFICATION	8.79237842063024E-5	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9997802363497013	WITHOUT_CLASSIFICATION	2.197636502987302E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9997853918771864	WITHOUT_CLASSIFICATION	2.146081228135553E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999258913268079	WITHOUT_CLASSIFICATION	7.410867319205297E-5	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999258913268079	WITHOUT_CLASSIFICATION	7.410867319205297E-5	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9995444960327113	WITHOUT_CLASSIFICATION	4.555039672885908E-4	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9998255854612215	WITHOUT_CLASSIFICATION	1.7441453877858028E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9995795249014645	WITHOUT_CLASSIFICATION	4.204750985353917E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9998102237647812	WITHOUT_CLASSIFICATION	1.8977623521877014E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9998456209979746	WITHOUT_CLASSIFICATION	1.5437900202547666E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.999970790267575	WITHOUT_CLASSIFICATION	2.9209732425072216E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9998638437546752	WITHOUT_CLASSIFICATION	1.361562453248633E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9993300084039601	WITHOUT_CLASSIFICATION	6.699915960399023E-4	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9998628496475538	WITHOUT_CLASSIFICATION	1.3715035244620444E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998753653295657	WITHOUT_CLASSIFICATION	1.246346704343532E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998753653295657	WITHOUT_CLASSIFICATION	1.246346704343532E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998641287280142	WITHOUT_CLASSIFICATION	1.358712719857093E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998641287280142	WITHOUT_CLASSIFICATION	1.358712719857093E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9998641287280142	WITHOUT_CLASSIFICATION	1.358712719857093E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999856210827698	WITHOUT_CLASSIFICATION	1.4378917230126997E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999856210827698	WITHOUT_CLASSIFICATION	1.4378917230126997E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999517526383419	WITHOUT_CLASSIFICATION	4.824736165813457E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999517526383419	WITHOUT_CLASSIFICATION	4.824736165813457E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9997507278557697	WITHOUT_CLASSIFICATION	2.4927214423029755E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999202748065023	WITHOUT_CLASSIFICATION	7.972519349775407E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9997554599011078	WITHOUT_CLASSIFICATION	2.445400988922523E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999668019377511	WITHOUT_CLASSIFICATION	3.3198062248869446E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999927050348425	WITHOUT_CLASSIFICATION	7.294965157450298E-6	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.999877081553863	WITHOUT_CLASSIFICATION	1.2291844613698897E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999761919841786	WITHOUT_CLASSIFICATION	2.3808015821393484E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999238848167983	WITHOUT_CLASSIFICATION	7.611518320168773E-5	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.999961001247973	WITHOUT_CLASSIFICATION	3.899875202696681E-5	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9997150274663666	WITHOUT_CLASSIFICATION	2.8497253363339353E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999628389146572	WITHOUT_CLASSIFICATION	3.7161085342770854E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999892765958588	WITHOUT_CLASSIFICATION	1.0723404141254058E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9998656782636718	WITHOUT_CLASSIFICATION	1.3432173632815263E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9998628496475538	WITHOUT_CLASSIFICATION	1.3715035244620444E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9993011035547799	WITHOUT_CLASSIFICATION	6.988964452201272E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999662373531774	WITHOUT_CLASSIFICATION	3.376264682270867E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.999449428147978	WITHOUT_CLASSIFICATION	5.505718520220072E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999556677800628	WITHOUT_CLASSIFICATION	4.433221993719184E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999556677800628	WITHOUT_CLASSIFICATION	4.433221993719184E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999556677800628	WITHOUT_CLASSIFICATION	4.433221993719184E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999558910059808	WITHOUT_CLASSIFICATION	4.4108994019184115E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999558910059808	WITHOUT_CLASSIFICATION	4.4108994019184115E-5	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999522161876678	WITHOUT_CLASSIFICATION	4.778381233226006E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999522161876678	WITHOUT_CLASSIFICATION	4.778381233226006E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9998085962407	WITHOUT_CLASSIFICATION	1.9140375930006104E-4	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.999984431020257	WITHOUT_CLASSIFICATION	1.5568979743033302E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994264839230083	WITHOUT_CLASSIFICATION	5.735160769917722E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994264839230083	WITHOUT_CLASSIFICATION	5.735160769917722E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998819947604594	WITHOUT_CLASSIFICATION	1.1800523954064302E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9996096467198208	WITHOUT_CLASSIFICATION	3.903532801792606E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9962886806232226	WITHOUT_CLASSIFICATION	0.003711319376777485	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999629494031921	WITHOUT_CLASSIFICATION	3.705059680793715E-5	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999629494031921	WITHOUT_CLASSIFICATION	3.705059680793715E-5	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999739376005611	WITHOUT_CLASSIFICATION	2.6062399438926846E-5	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999595591121491	WITHOUT_CLASSIFICATION	4.044088785081297E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999421929314484	WITHOUT_CLASSIFICATION	5.780706855172307E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999856210827698	WITHOUT_CLASSIFICATION	1.4378917230126997E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999856210827698	WITHOUT_CLASSIFICATION	1.4378917230126997E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999517526383419	WITHOUT_CLASSIFICATION	4.824736165813457E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9998656782636718	WITHOUT_CLASSIFICATION	1.3432173632815263E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9998628496475538	WITHOUT_CLASSIFICATION	1.3715035244620444E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999517763549265	WITHOUT_CLASSIFICATION	4.8223645073513224E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999558910059808	WITHOUT_CLASSIFICATION	4.4108994019184115E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998819947604594	WITHOUT_CLASSIFICATION	1.1800523954064302E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.999938659893605	WITHOUT_CLASSIFICATION	6.13401063950469E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999006787885194	WITHOUT_CLASSIFICATION	9.93212114805411E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999040527760378	WITHOUT_CLASSIFICATION	9.594722396229694E-5	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9995844557066512	WITHOUT_CLASSIFICATION	4.155442933487673E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9997540310799248	WITHOUT_CLASSIFICATION	2.459689200752469E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9998121534754388	WITHOUT_CLASSIFICATION	1.8784652456109435E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999809713477057	WITHOUT_CLASSIFICATION	1.9028652294281403E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999143266327823	WITHOUT_CLASSIFICATION	8.567336721768544E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9998471444553287	WITHOUT_CLASSIFICATION	1.5285554467126986E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999935104239447	WITHOUT_CLASSIFICATION	6.4895760553035365E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999418443062771	WITHOUT_CLASSIFICATION	5.815569372293907E-5	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999595770271617	WITHOUT_CLASSIFICATION	4.042297283845555E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999517447918909	WITHOUT_CLASSIFICATION	4.825520810926997E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999255500027983	WITHOUT_CLASSIFICATION	7.444999720167135E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9998746891538416	WITHOUT_CLASSIFICATION	1.253108461583496E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999821565396895	WITHOUT_CLASSIFICATION	1.7843460310522492E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999695390897616	WITHOUT_CLASSIFICATION	3.046091023835736E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9982218336557308	WITHOUT_CLASSIFICATION	0.0017781663442692011	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.996736690427736	WITHOUT_CLASSIFICATION	0.003263309572263988	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999401986703684	WITHOUT_CLASSIFICATION	5.980132963161218E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999447847775317	WITHOUT_CLASSIFICATION	5.5215222468216245E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998952770639778	WITHOUT_CLASSIFICATION	1.047229360221385E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999915327491933	WITHOUT_CLASSIFICATION	8.46725080674178E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999915327491933	WITHOUT_CLASSIFICATION	8.46725080674178E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999582931338391	WITHOUT_CLASSIFICATION	4.1706866160814896E-5	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999752477880176	WITHOUT_CLASSIFICATION	2.475221198240994E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9968407118287211	WITHOUT_CLASSIFICATION	0.003159288171278906	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9989853907473627	WITHOUT_CLASSIFICATION	0.001014609252637337	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999142730994147	WITHOUT_CLASSIFICATION	8.572690058533858E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9997400556572001	WITHOUT_CLASSIFICATION	2.599443427999293E-4	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9999271384780553	WITHOUT_CLASSIFICATION	7.286152194475557E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999486169840648	WITHOUT_CLASSIFICATION	5.1383015935176456E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9966093104638913	WITHOUT_CLASSIFICATION	0.0033906895361085756	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.999978389888222	WITHOUT_CLASSIFICATION	2.1610111777990938E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.999849502176159	WITHOUT_CLASSIFICATION	1.5049782384108363E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999419206043143	WITHOUT_CLASSIFICATION	5.8079395685632376E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.999935365117878	WITHOUT_CLASSIFICATION	6.463488212206641E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999804051164224	WITHOUT_CLASSIFICATION	1.959488357761788E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999714828389141	WITHOUT_CLASSIFICATION	2.8517161085865822E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9998777853434695	WITHOUT_CLASSIFICATION	1.2221465653053316E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999279403966285	WITHOUT_CLASSIFICATION	7.205960337143427E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999653325591941	WITHOUT_CLASSIFICATION	3.466744080588775E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999653325591941	WITHOUT_CLASSIFICATION	3.466744080588775E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999828822870818	WITHOUT_CLASSIFICATION	1.7117712918229116E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999743216908965	WITHOUT_CLASSIFICATION	2.567830910343302E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999785335680542	WITHOUT_CLASSIFICATION	2.1466431945746675E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999743264941362	WITHOUT_CLASSIFICATION	2.5673505863840132E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.99997464374363	WITHOUT_CLASSIFICATION	2.535625637007635E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999562392494001	WITHOUT_CLASSIFICATION	4.376075059985387E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999979647149435	WITHOUT_CLASSIFICATION	2.035285056425737E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999740475188083	WITHOUT_CLASSIFICATION	2.5952481191675266E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999651628689468	WITHOUT_CLASSIFICATION	3.483713105315248E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9995353609057267	WITHOUT_CLASSIFICATION	4.6463909427330654E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999916693179716	WITHOUT_CLASSIFICATION	8.330682028537303E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9997205606810778	WITHOUT_CLASSIFICATION	2.794393189221589E-4	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999055866196216	WITHOUT_CLASSIFICATION	9.441338037842316E-5	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.99997322956418	WITHOUT_CLASSIFICATION	2.6770435819985213E-5	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999983418817546	WITHOUT_CLASSIFICATION	1.6581182452650852E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999970470858699	WITHOUT_CLASSIFICATION	2.9529141301684278E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999197109321432	WITHOUT_CLASSIFICATION	8.028906785685658E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9997959507232261	WITHOUT_CLASSIFICATION	2.0404927677384604E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9996916948985932	WITHOUT_CLASSIFICATION	3.083051014067995E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999005614382307	WITHOUT_CLASSIFICATION	9.943856176925875E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9992950337290645	WITHOUT_CLASSIFICATION	7.04966270935644E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998781890393865	WITHOUT_CLASSIFICATION	1.2181096061343969E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999858078392302	WITHOUT_CLASSIFICATION	1.4192160769852537E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998914141361254	WITHOUT_CLASSIFICATION	1.085858638746118E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999512598903231	WITHOUT_CLASSIFICATION	4.874010967702283E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999475490226148	WITHOUT_CLASSIFICATION	5.2450977385118126E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9998716725709813	WITHOUT_CLASSIFICATION	1.2832742901866979E-4	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998640716275218	WITHOUT_CLASSIFICATION	1.3592837247812048E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999672194821236	WITHOUT_CLASSIFICATION	3.2780517876267275E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999991118100646	WITHOUT_CLASSIFICATION	8.881899354052153E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9998036579332606	WITHOUT_CLASSIFICATION	1.9634206673938272E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9994969769828989	WITHOUT_CLASSIFICATION	5.030230171011665E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997828063148524	WITHOUT_CLASSIFICATION	2.1719368514753568E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999877290847609	WITHOUT_CLASSIFICATION	1.2270915239124563E-5	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999041312114876	WITHOUT_CLASSIFICATION	9.58687885123437E-5	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9995330662941867	WITHOUT_CLASSIFICATION	4.6693370581319494E-4	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9995832146211182	WITHOUT_CLASSIFICATION	4.1678537888178947E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999066619689547	WITHOUT_CLASSIFICATION	9.33380310453405E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9993834674133933	WITHOUT_CLASSIFICATION	6.165325866066328E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999281480770569	WITHOUT_CLASSIFICATION	7.185192294313514E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999140345749193	WITHOUT_CLASSIFICATION	8.596542508066531E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999444995308874	WITHOUT_CLASSIFICATION	5.550046911275985E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999224108614146	WITHOUT_CLASSIFICATION	7.758913858535705E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998582746169179	WITHOUT_CLASSIFICATION	1.4172538308210815E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999942499809885	WITHOUT_CLASSIFICATION	5.750019011527282E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999228430110731	WITHOUT_CLASSIFICATION	7.715698892682439E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996960747829908	WITHOUT_CLASSIFICATION	3.0392521700920436E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999171513678106	WITHOUT_CLASSIFICATION	8.284863218942661E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999623155012565	WITHOUT_CLASSIFICATION	3.768449874353508E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9991234964379198	WITHOUT_CLASSIFICATION	8.765035620802188E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9292081716968829	WITHOUT_CLASSIFICATION	0.07079182830311707	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9998128166471507	WITHOUT_CLASSIFICATION	1.871833528493393E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999671355780035	WITHOUT_CLASSIFICATION	3.2864421996459345E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9997717654474276	WITHOUT_CLASSIFICATION	2.282345525723192E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999698087345381	WITHOUT_CLASSIFICATION	3.0191265461905695E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999380139196762	WITHOUT_CLASSIFICATION	6.198608032379335E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999580695746034	WITHOUT_CLASSIFICATION	4.193042539659399E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9994433099549951	WITHOUT_CLASSIFICATION	5.56690045004947E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999315438509354	WITHOUT_CLASSIFICATION	6.84561490646593E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999043461223759	WITHOUT_CLASSIFICATION	9.565387762410514E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998757192575188	WITHOUT_CLASSIFICATION	1.2428074248115105E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9994461889113254	WITHOUT_CLASSIFICATION	5.538110886745812E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9985757441360409	WITHOUT_CLASSIFICATION	0.001424255863959138	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999680333432605	WITHOUT_CLASSIFICATION	3.1966656739588776E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999467452317218	WITHOUT_CLASSIFICATION	5.325476827829996E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998251722684197	WITHOUT_CLASSIFICATION	1.7482773158035604E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999826703495834	WITHOUT_CLASSIFICATION	1.7329650416588413E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9998210813321864	WITHOUT_CLASSIFICATION	1.789186678136832E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997284866682208	WITHOUT_CLASSIFICATION	2.7151333177916157E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9997783907537844	WITHOUT_CLASSIFICATION	2.216092462156457E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999864218316685	WITHOUT_CLASSIFICATION	1.3578168331362258E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999623309539836	WITHOUT_CLASSIFICATION	3.76690460164319E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999967769156312	WITHOUT_CLASSIFICATION	3.2230843687347233E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999525275470548	WITHOUT_CLASSIFICATION	4.7472452945248476E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998925673525756	WITHOUT_CLASSIFICATION	1.074326474244293E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9984485266552597	WITHOUT_CLASSIFICATION	0.0015514733447402342	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999677599694884	WITHOUT_CLASSIFICATION	3.2240030511680344E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999930586220087	WITHOUT_CLASSIFICATION	6.94137799129949E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999374586802355	WITHOUT_CLASSIFICATION	6.254131976446574E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999617548535782	WITHOUT_CLASSIFICATION	3.8245146421890994E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996109085436607	WITHOUT_CLASSIFICATION	3.89091456339221E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999583721486367	WITHOUT_CLASSIFICATION	4.162785136320972E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99996208460189	WITHOUT_CLASSIFICATION	3.7915398109948354E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999726830310945	WITHOUT_CLASSIFICATION	2.7316968905434174E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999856201238336	WITHOUT_CLASSIFICATION	1.4379876166399812E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999605775022091	WITHOUT_CLASSIFICATION	3.942249779088441E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999550988356699	WITHOUT_CLASSIFICATION	4.49011643300704E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999976971063453	WITHOUT_CLASSIFICATION	2.3028936547064822E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998541895358246	WITHOUT_CLASSIFICATION	1.4581046417541492E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995851237763376	WITHOUT_CLASSIFICATION	4.148762236623928E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999550502584214	WITHOUT_CLASSIFICATION	4.49497415787411E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999534480310409	WITHOUT_CLASSIFICATION	4.6551968959046824E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994894212930094	WITHOUT_CLASSIFICATION	5.105787069906318E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995271379719176	WITHOUT_CLASSIFICATION	4.728620280823541E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995709862960829	WITHOUT_CLASSIFICATION	4.2901370391719125E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995709862960829	WITHOUT_CLASSIFICATION	4.2901370391719125E-4	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999109694442303	WITHOUT_CLASSIFICATION	8.90305557696848E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997744549374349	WITHOUT_CLASSIFICATION	2.25545062565088E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994549344634248	WITHOUT_CLASSIFICATION	5.450655365751477E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999471230561479	WITHOUT_CLASSIFICATION	5.287694385209932E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999913815899797	WITHOUT_CLASSIFICATION	8.618410020309886E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982881893536816	WITHOUT_CLASSIFICATION	0.001711810646318442	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999520811113056	WITHOUT_CLASSIFICATION	4.7918888694390316E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998229069893293	WITHOUT_CLASSIFICATION	1.770930106706313E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999744719628217	WITHOUT_CLASSIFICATION	2.5528037178306857E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995851237763376	WITHOUT_CLASSIFICATION	4.148762236623928E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999301965527779	WITHOUT_CLASSIFICATION	6.980344722198856E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999471230561479	WITHOUT_CLASSIFICATION	5.287694385209934E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995966811179233	WITHOUT_CLASSIFICATION	4.033188820767152E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999033261963516	WITHOUT_CLASSIFICATION	9.667380364843387E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997744549374349	WITHOUT_CLASSIFICATION	2.25545062565088E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998170159284098	WITHOUT_CLASSIFICATION	1.8298407159021235E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999715029638694	WITHOUT_CLASSIFICATION	2.8497036130611217E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997751808170438	WITHOUT_CLASSIFICATION	2.248191829561852E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999133339347799	WITHOUT_CLASSIFICATION	8.666606522010734E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999677599694884	WITHOUT_CLASSIFICATION	3.2240030511680344E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999388005427807	WITHOUT_CLASSIFICATION	6.119945721923197E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997751808170438	WITHOUT_CLASSIFICATION	2.248191829561852E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999388005427807	WITHOUT_CLASSIFICATION	6.119945721923197E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995157350863584	WITHOUT_CLASSIFICATION	4.8426491364169635E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9990546823450013	WITHOUT_CLASSIFICATION	9.453176549985745E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995967800615816	WITHOUT_CLASSIFICATION	4.0321993841845526E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996391395395159	WITHOUT_CLASSIFICATION	3.6086046048413597E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9964241268128371	WITHOUT_CLASSIFICATION	0.0035758731871628393	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996340681896455	WITHOUT_CLASSIFICATION	3.6593181035453733E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999520811113056	WITHOUT_CLASSIFICATION	4.7918888694390316E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997498571716397	WITHOUT_CLASSIFICATION	2.501428283603235E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9984485266552597	WITHOUT_CLASSIFICATION	0.001551473344740235	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995851237763376	WITHOUT_CLASSIFICATION	4.148762236623929E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995265947942868	WITHOUT_CLASSIFICATION	4.734052057131155E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999424243176708	WITHOUT_CLASSIFICATION	5.757568232929857E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997498571716397	WITHOUT_CLASSIFICATION	2.501428283603235E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736144751842	WITHOUT_CLASSIFICATION	2.6385524815828412E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999847583666226	WITHOUT_CLASSIFICATION	1.524163337741137E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999394422993486	WITHOUT_CLASSIFICATION	6.0557700651413525E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999617418743341	WITHOUT_CLASSIFICATION	3.8258125665930575E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997956091915128	WITHOUT_CLASSIFICATION	2.043908084872762E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999741762266051	WITHOUT_CLASSIFICATION	2.5823773394911498E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997956091915128	WITHOUT_CLASSIFICATION	2.043908084872762E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999620472570483	WITHOUT_CLASSIFICATION	3.7952742951602534E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998771254887364	WITHOUT_CLASSIFICATION	1.2287451126359966E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995611444626411	WITHOUT_CLASSIFICATION	4.3885553735881916E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999423676095118	WITHOUT_CLASSIFICATION	5.763239048827901E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999534480310409	WITHOUT_CLASSIFICATION	4.6551968959046824E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999714828389141	WITHOUT_CLASSIFICATION	2.8517161085865822E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995712842495226	WITHOUT_CLASSIFICATION	4.2871575047733217E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994553203921661	WITHOUT_CLASSIFICATION	5.44679607833861E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999335457228241	WITHOUT_CLASSIFICATION	6.645427717584113E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997956091915128	WITHOUT_CLASSIFICATION	2.043908084872762E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999701713157388	WITHOUT_CLASSIFICATION	2.9828684261078035E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993399651616971	WITHOUT_CLASSIFICATION	6.60034838302901E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994850104526076	WITHOUT_CLASSIFICATION	5.149895473924246E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999719373387291	WITHOUT_CLASSIFICATION	2.8062661270851746E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999870961711418	WITHOUT_CLASSIFICATION	1.290382885823406E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999491212972818	WITHOUT_CLASSIFICATION	5.087870271838105E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999515547572542	WITHOUT_CLASSIFICATION	4.844524274585118E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9998777853434695	WITHOUT_CLASSIFICATION	1.2221465653053316E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9998177705727054	WITHOUT_CLASSIFICATION	1.8222942729451992E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999284301492477	WITHOUT_CLASSIFICATION	7.156985075228933E-5	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999660729218515	WITHOUT_CLASSIFICATION	3.392707814851644E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.996736690427736	WITHOUT_CLASSIFICATION	0.003263309572263988	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999401986703684	WITHOUT_CLASSIFICATION	5.980132963161218E-5	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999447847775317	WITHOUT_CLASSIFICATION	5.5215222468216245E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9998952770639778	WITHOUT_CLASSIFICATION	1.047229360221385E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999915327491933	WITHOUT_CLASSIFICATION	8.46725080674178E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999752477880176	WITHOUT_CLASSIFICATION	2.475221198240994E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9968407118287211	WITHOUT_CLASSIFICATION	0.003159288171278906	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9989853907473627	WITHOUT_CLASSIFICATION	0.001014609252637337	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999142730994147	WITHOUT_CLASSIFICATION	8.572690058533858E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9997400556572001	WITHOUT_CLASSIFICATION	2.599443427999293E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999528045591097	WITHOUT_CLASSIFICATION	4.719544089033557E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999467452317218	WITHOUT_CLASSIFICATION	5.325476827829996E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.999978389888222	WITHOUT_CLASSIFICATION	2.1610111777990938E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.999849502176159	WITHOUT_CLASSIFICATION	1.5049782384108363E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999419206043143	WITHOUT_CLASSIFICATION	5.8079395685632376E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.999935365117878	WITHOUT_CLASSIFICATION	6.463488212206641E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999804051164224	WITHOUT_CLASSIFICATION	1.959488357761788E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9966093104638913	WITHOUT_CLASSIFICATION	0.0033906895361085756	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999714828389141	WITHOUT_CLASSIFICATION	2.8517161085865822E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999279403966285	WITHOUT_CLASSIFICATION	7.205960337143427E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999653325591941	WITHOUT_CLASSIFICATION	3.466744080588775E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999653325591941	WITHOUT_CLASSIFICATION	3.466744080588775E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999913024777108	WITHOUT_CLASSIFICATION	8.697522289197673E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999697713401393	WITHOUT_CLASSIFICATION	3.022865986071541E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999743216908965	WITHOUT_CLASSIFICATION	2.567830910343302E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999743264941362	WITHOUT_CLASSIFICATION	2.5673505863840132E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999743216908965	WITHOUT_CLASSIFICATION	2.567830910343302E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.99997464374363	WITHOUT_CLASSIFICATION	2.535625637007635E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999562392494001	WITHOUT_CLASSIFICATION	4.376075059985387E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999740475188083	WITHOUT_CLASSIFICATION	2.5952481191675266E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998985037041651	WITHOUT_CLASSIFICATION	1.0149629583489948E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999651628689468	WITHOUT_CLASSIFICATION	3.483713105315248E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9995353609057267	WITHOUT_CLASSIFICATION	4.6463909427330654E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999916693179716	WITHOUT_CLASSIFICATION	8.330682028537303E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999235264289794	WITHOUT_CLASSIFICATION	7.647357102055189E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9997205606810778	WITHOUT_CLASSIFICATION	2.794393189221589E-4	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9998133489566439	WITHOUT_CLASSIFICATION	1.8665104335610167E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999970470858699	WITHOUT_CLASSIFICATION	2.9529141301684278E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999055866196216	WITHOUT_CLASSIFICATION	9.441338037842316E-5	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.99997322956418	WITHOUT_CLASSIFICATION	2.6770435819985213E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9997959507232261	WITHOUT_CLASSIFICATION	2.0404927677384604E-4	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9996916948985932	WITHOUT_CLASSIFICATION	3.083051014067995E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999005614382307	WITHOUT_CLASSIFICATION	9.943856176925875E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9993691456603867	WITHOUT_CLASSIFICATION	6.30854339613249E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9992950337290645	WITHOUT_CLASSIFICATION	7.04966270935644E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9998781890393865	WITHOUT_CLASSIFICATION	1.2181096061343969E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999858078392302	WITHOUT_CLASSIFICATION	1.4192160769852537E-5	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9998914141361254	WITHOUT_CLASSIFICATION	1.085858638746118E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999512598903231	WITHOUT_CLASSIFICATION	4.874010967702283E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999475490226148	WITHOUT_CLASSIFICATION	5.2450977385118126E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9998716725709813	WITHOUT_CLASSIFICATION	1.2832742901866979E-4	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998640716275218	WITHOUT_CLASSIFICATION	1.3592837247812048E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999672194821236	WITHOUT_CLASSIFICATION	3.2780517876267275E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999672194821236	WITHOUT_CLASSIFICATION	3.2780517876267275E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999991118100646	WITHOUT_CLASSIFICATION	8.881899354052153E-7	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9998036579332606	WITHOUT_CLASSIFICATION	1.9634206673938272E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9994969769828989	WITHOUT_CLASSIFICATION	5.030230171011665E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997828063148524	WITHOUT_CLASSIFICATION	2.1719368514753568E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999041312114876	WITHOUT_CLASSIFICATION	9.58687885123437E-5	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9995330662941867	WITHOUT_CLASSIFICATION	4.6693370581319494E-4	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9995832146211182	WITHOUT_CLASSIFICATION	4.1678537888178947E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999066619689547	WITHOUT_CLASSIFICATION	9.33380310453405E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999281480770569	WITHOUT_CLASSIFICATION	7.185192294313514E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9998640716275218	WITHOUT_CLASSIFICATION	1.3592837247812048E-4	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999140345749193	WITHOUT_CLASSIFICATION	8.596542508066531E-5	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999444995308874	WITHOUT_CLASSIFICATION	5.550046911275985E-5	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999224108614146	WITHOUT_CLASSIFICATION	7.758913858535705E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998582746169179	WITHOUT_CLASSIFICATION	1.4172538308210815E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999942499809885	WITHOUT_CLASSIFICATION	5.750019011527282E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9996960747829908	WITHOUT_CLASSIFICATION	3.0392521700920436E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999171513678106	WITHOUT_CLASSIFICATION	8.284863218942661E-5	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999623155012565	WITHOUT_CLASSIFICATION	3.768449874353508E-5	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9991234964379198	WITHOUT_CLASSIFICATION	8.765035620802188E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9292081716968829	WITHOUT_CLASSIFICATION	0.07079182830311707	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9998128166471507	WITHOUT_CLASSIFICATION	1.871833528493393E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999671355780035	WITHOUT_CLASSIFICATION	3.2864421996459345E-5	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9997717654474276	WITHOUT_CLASSIFICATION	2.282345525723192E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999698087345381	WITHOUT_CLASSIFICATION	3.0191265461905695E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999380139196762	WITHOUT_CLASSIFICATION	6.198608032379335E-5	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999580695746034	WITHOUT_CLASSIFICATION	4.193042539659399E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999315438509354	WITHOUT_CLASSIFICATION	6.84561490646593E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9998757192575188	WITHOUT_CLASSIFICATION	1.2428074248115105E-4	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9994461889113254	WITHOUT_CLASSIFICATION	5.538110886745812E-4	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9985757441360409	WITHOUT_CLASSIFICATION	0.001424255863959138	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999680333432605	WITHOUT_CLASSIFICATION	3.1966656739588776E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999165813080592	WITHOUT_CLASSIFICATION	8.341869194090523E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9996067742733619	WITHOUT_CLASSIFICATION	3.9322572663812974E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999016335277802	WITHOUT_CLASSIFICATION	9.836647221987917E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9998251722684197	WITHOUT_CLASSIFICATION	1.7482773158035604E-4	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999853498369118	WITHOUT_CLASSIFICATION	1.4650163088299027E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999826703495834	WITHOUT_CLASSIFICATION	1.7329650416588413E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9998210813321864	WITHOUT_CLASSIFICATION	1.789186678136832E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9997284866682208	WITHOUT_CLASSIFICATION	2.7151333177916157E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.999983670375691	WITHOUT_CLASSIFICATION	1.6329624308876384E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9997783907537844	WITHOUT_CLASSIFICATION	2.216092462156457E-4	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999864218316685	WITHOUT_CLASSIFICATION	1.3578168331362258E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999623309539836	WITHOUT_CLASSIFICATION	3.76690460164319E-5	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999967769156312	WITHOUT_CLASSIFICATION	3.2230843687347233E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999525275470548	WITHOUT_CLASSIFICATION	4.7472452945248476E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9998925673525756	WITHOUT_CLASSIFICATION	1.074326474244293E-4	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9984485266552597	WITHOUT_CLASSIFICATION	0.0015514733447402342	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999677599694884	WITHOUT_CLASSIFICATION	3.2240030511680344E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999374586802355	WITHOUT_CLASSIFICATION	6.254131976446574E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999617548535782	WITHOUT_CLASSIFICATION	3.8245146421890994E-5	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996109085436607	WITHOUT_CLASSIFICATION	3.89091456339221E-4	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999583721486367	WITHOUT_CLASSIFICATION	4.162785136320972E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99996208460189	WITHOUT_CLASSIFICATION	3.7915398109948354E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999726830310945	WITHOUT_CLASSIFICATION	2.7316968905434174E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999856201238336	WITHOUT_CLASSIFICATION	1.4379876166399812E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999605775022091	WITHOUT_CLASSIFICATION	3.942249779088441E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994335893268861	WITHOUT_CLASSIFICATION	5.664106731138873E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998541895358246	WITHOUT_CLASSIFICATION	1.4581046417541492E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995851237763376	WITHOUT_CLASSIFICATION	4.148762236623928E-4	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999550502584214	WITHOUT_CLASSIFICATION	4.49497415787411E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999534480310409	WITHOUT_CLASSIFICATION	4.6551968959046824E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994894212930094	WITHOUT_CLASSIFICATION	5.105787069906318E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998278448209283	WITHOUT_CLASSIFICATION	1.7215517907164492E-4	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995271379719176	WITHOUT_CLASSIFICATION	4.728620280823541E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995709862960829	WITHOUT_CLASSIFICATION	4.2901370391719125E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997744549374349	WITHOUT_CLASSIFICATION	2.25545062565088E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998229069893293	WITHOUT_CLASSIFICATION	1.770930106706313E-4	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995709862960829	WITHOUT_CLASSIFICATION	4.2901370391719125E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994549344634248	WITHOUT_CLASSIFICATION	5.450655365751477E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999471230561479	WITHOUT_CLASSIFICATION	5.287694385209932E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999913815899797	WITHOUT_CLASSIFICATION	8.618410020309886E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9982881893536816	WITHOUT_CLASSIFICATION	0.001711810646318442	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999520811113056	WITHOUT_CLASSIFICATION	4.7918888694390316E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999744719628217	WITHOUT_CLASSIFICATION	2.5528037178306857E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995851237763376	WITHOUT_CLASSIFICATION	4.148762236623928E-4	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999301965527779	WITHOUT_CLASSIFICATION	6.980344722198856E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999815248813432	WITHOUT_CLASSIFICATION	1.84751186568348E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9993458257286643	WITHOUT_CLASSIFICATION	6.541742713357678E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995966811179233	WITHOUT_CLASSIFICATION	4.033188820767152E-4	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999033261963516	WITHOUT_CLASSIFICATION	9.667380364843387E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998170159284098	WITHOUT_CLASSIFICATION	1.8298407159021235E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999820111024796	WITHOUT_CLASSIFICATION	1.798889752036662E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997744549374349	WITHOUT_CLASSIFICATION	2.25545062565088E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999715029638694	WITHOUT_CLASSIFICATION	2.8497036130611217E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997751808170438	WITHOUT_CLASSIFICATION	2.248191829561852E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999677599694884	WITHOUT_CLASSIFICATION	3.2240030511680344E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999677599694884	WITHOUT_CLASSIFICATION	3.2240030511680344E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999388005427807	WITHOUT_CLASSIFICATION	6.119945721923197E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9995157350863584	WITHOUT_CLASSIFICATION	4.8426491364169635E-4	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997751808170438	WITHOUT_CLASSIFICATION	2.248191829561852E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999578693084273	WITHOUT_CLASSIFICATION	4.2130691572634864E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9990546823450013	WITHOUT_CLASSIFICATION	9.453176549985745E-4	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9995967800615816	WITHOUT_CLASSIFICATION	4.0321993841845526E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996391395395159	WITHOUT_CLASSIFICATION	3.6086046048413597E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9964241268128371	WITHOUT_CLASSIFICATION	0.0035758731871628393	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9996340681896455	WITHOUT_CLASSIFICATION	3.6593181035453733E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999520811113056	WITHOUT_CLASSIFICATION	4.7918888694390316E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999520811113056	WITHOUT_CLASSIFICATION	4.7918888694390316E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997498571716397	WITHOUT_CLASSIFICATION	2.501428283603235E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9984485266552597	WITHOUT_CLASSIFICATION	0.001551473344740235	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995851237763376	WITHOUT_CLASSIFICATION	4.148762236623929E-4	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995265947942868	WITHOUT_CLASSIFICATION	4.734052057131155E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999613670686512	WITHOUT_CLASSIFICATION	3.8632931348810836E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997109621890533	WITHOUT_CLASSIFICATION	2.890378109467073E-4	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999424243176708	WITHOUT_CLASSIFICATION	5.757568232929857E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997498571716397	WITHOUT_CLASSIFICATION	2.501428283603235E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999736144751842	WITHOUT_CLASSIFICATION	2.6385524815828412E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999394422993486	WITHOUT_CLASSIFICATION	6.0557700651413525E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999617418743341	WITHOUT_CLASSIFICATION	3.8258125665930575E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997956091915128	WITHOUT_CLASSIFICATION	2.043908084872762E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999741762266051	WITHOUT_CLASSIFICATION	2.5823773394911498E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997956091915128	WITHOUT_CLASSIFICATION	2.043908084872762E-4	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999620472570483	WITHOUT_CLASSIFICATION	3.7952742951602534E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998771254887364	WITHOUT_CLASSIFICATION	1.2287451126359966E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9995611444626411	WITHOUT_CLASSIFICATION	4.3885553735881916E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999423676095118	WITHOUT_CLASSIFICATION	5.763239048827901E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999534480310409	WITHOUT_CLASSIFICATION	4.6551968959046824E-5	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999622337950951	WITHOUT_CLASSIFICATION	3.7766204905030366E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999578149275552	WITHOUT_CLASSIFICATION	4.218507244474518E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999701713157388	WITHOUT_CLASSIFICATION	2.9828684261078035E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999335457228241	WITHOUT_CLASSIFICATION	6.645427717584113E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997956091915128	WITHOUT_CLASSIFICATION	2.043908084872762E-4	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999701713157388	WITHOUT_CLASSIFICATION	2.9828684261078035E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9993399651616971	WITHOUT_CLASSIFICATION	6.60034838302901E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9994850104526076	WITHOUT_CLASSIFICATION	5.149895473924246E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999913024777108	WITHOUT_CLASSIFICATION	8.697522289197673E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999719373387291	WITHOUT_CLASSIFICATION	2.8062661270851746E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999870961711418	WITHOUT_CLASSIFICATION	1.290382885823406E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999491212972818	WITHOUT_CLASSIFICATION	5.087870271838105E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999515547572542	WITHOUT_CLASSIFICATION	4.844524274585118E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999714828389141	WITHOUT_CLASSIFICATION	2.8517161085865822E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9998177705727054	WITHOUT_CLASSIFICATION	1.8222942729451992E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999284301492477	WITHOUT_CLASSIFICATION	7.156985075228933E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999697713401393	WITHOUT_CLASSIFICATION	3.022865986071541E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999838213666471	WITHOUT_CLASSIFICATION	1.6178633352948856E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999838213666471	WITHOUT_CLASSIFICATION	1.6178633352948856E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999518095585944	WITHOUT_CLASSIFICATION	4.819044140557222E-5	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999956842978954	WITHOUT_CLASSIFICATION	4.315702104564643E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9995010158130225	WITHOUT_CLASSIFICATION	4.989841869774372E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999707011582815	WITHOUT_CLASSIFICATION	2.9298841718544094E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999783419186797	WITHOUT_CLASSIFICATION	2.1658081320275243E-5	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999379533480641	WITHOUT_CLASSIFICATION	6.20466519359648E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999447378884863	WITHOUT_CLASSIFICATION	5.526211151375357E-5	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999732628584787	WITHOUT_CLASSIFICATION	2.6737141521364023E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999838287252993	WITHOUT_CLASSIFICATION	1.6171274700654535E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999743549998138	WITHOUT_CLASSIFICATION	2.5645000186238567E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999969034246026	WITHOUT_CLASSIFICATION	3.096575397493879E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999905275157603	WITHOUT_CLASSIFICATION	9.472484239675456E-6	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999852391345462	WITHOUT_CLASSIFICATION	1.4760865453873012E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999994550782986	WITHOUT_CLASSIFICATION	5.449217015517547E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9998074088590718	WITHOUT_CLASSIFICATION	1.9259114092803174E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9998967763792526	WITHOUT_CLASSIFICATION	1.0322362074735499E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998922163131927	WITHOUT_CLASSIFICATION	1.0778368680732523E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9998981720236386	WITHOUT_CLASSIFICATION	1.0182797636133587E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999525338189629	WITHOUT_CLASSIFICATION	4.746618103721173E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999498801902957	WITHOUT_CLASSIFICATION	5.0119809704237814E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.999271593057344	WITHOUT_CLASSIFICATION	7.284069426559784E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9998840704486092	WITHOUT_CLASSIFICATION	1.1592955139071712E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9996494590465034	WITHOUT_CLASSIFICATION	3.5054095349658604E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998966503068115	WITHOUT_CLASSIFICATION	1.0334969318855407E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9998556973081875	WITHOUT_CLASSIFICATION	1.4430269181258933E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.999798999028286	WITHOUT_CLASSIFICATION	2.0100097171408694E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998096809010953	WITHOUT_CLASSIFICATION	1.9031909890457734E-4	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999775301391657	WITHOUT_CLASSIFICATION	2.2469860834307416E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999775301391657	WITHOUT_CLASSIFICATION	2.2469860834307416E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.999969608319891	WITHOUT_CLASSIFICATION	3.0391680108926453E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999998996224031	WITHOUT_CLASSIFICATION	1.0037759683011433E-7	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999489821125032	WITHOUT_CLASSIFICATION	5.1017887496907145E-5	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999407555788392	WITHOUT_CLASSIFICATION	5.924442116091645E-5	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999163508946601	WITHOUT_CLASSIFICATION	8.364910533987265E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999132149400205	WITHOUT_CLASSIFICATION	8.678505997948415E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999064000005058	WITHOUT_CLASSIFICATION	9.359999949416367E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999952818917072	WITHOUT_CLASSIFICATION	4.7181082927323495E-6	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999610397497308	WITHOUT_CLASSIFICATION	3.896025026910211E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999622432672546	WITHOUT_CLASSIFICATION	3.775673274541831E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999622432672546	WITHOUT_CLASSIFICATION	3.775673274541831E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996398547150714	WITHOUT_CLASSIFICATION	3.601452849285011E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996398547150714	WITHOUT_CLASSIFICATION	3.601452849285011E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999864686177306	WITHOUT_CLASSIFICATION	1.3531382269424975E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999884964582934	WITHOUT_CLASSIFICATION	1.1503541706671293E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999170208767195	WITHOUT_CLASSIFICATION	8.29791232805362E-5	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999938508346315	WITHOUT_CLASSIFICATION	6.149165368415667E-6	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.99966352252384	WITHOUT_CLASSIFICATION	3.364774761600234E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999247212578712	WITHOUT_CLASSIFICATION	7.527874212879632E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999947907803066	WITHOUT_CLASSIFICATION	5.209219693425348E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999918902995218	WITHOUT_CLASSIFICATION	8.109700478056273E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9945968167449816	WITHOUT_CLASSIFICATION	0.00540318325501836	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999758495597977	WITHOUT_CLASSIFICATION	2.41504402023062E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998714970023586	WITHOUT_CLASSIFICATION	1.285029976414315E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.999986933476196	WITHOUT_CLASSIFICATION	1.3066523803938671E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999359420458833	WITHOUT_CLASSIFICATION	6.405795411663441E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999973101358557	WITHOUT_CLASSIFICATION	2.68986414427858E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999993033321116	WITHOUT_CLASSIFICATION	6.966678884172165E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9998699820186907	WITHOUT_CLASSIFICATION	1.300179813092075E-4	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999130089251834	WITHOUT_CLASSIFICATION	8.69910748165683E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9998763420357468	WITHOUT_CLASSIFICATION	1.2365796425314405E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9990449524086752	WITHOUT_CLASSIFICATION	9.550475913249045E-4	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9998626891359366	WITHOUT_CLASSIFICATION	1.373108640634464E-4	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9996106867088779	WITHOUT_CLASSIFICATION	3.8931329112220584E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9993180285229873	WITHOUT_CLASSIFICATION	6.819714770126146E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.999966858551579	WITHOUT_CLASSIFICATION	3.3141448420925744E-5	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9998780782616827	WITHOUT_CLASSIFICATION	1.2192173831736229E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999976278744993	WITHOUT_CLASSIFICATION	2.372125500761764E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996767145056311	WITHOUT_CLASSIFICATION	3.232854943688439E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999960348313327	WITHOUT_CLASSIFICATION	3.965168667298544E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999250929393048	WITHOUT_CLASSIFICATION	7.490706069527099E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999250929393048	WITHOUT_CLASSIFICATION	7.490706069527099E-5	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999763774310656	WITHOUT_CLASSIFICATION	2.3622568934392882E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9997825957206804	WITHOUT_CLASSIFICATION	2.1740427931960307E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999346678965276	WITHOUT_CLASSIFICATION	6.53321034723841E-5	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999917840845347	WITHOUT_CLASSIFICATION	8.215915465304864E-5	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999459791156387	WITHOUT_CLASSIFICATION	5.4020884361351946E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999561314595237	WITHOUT_CLASSIFICATION	4.386854047638384E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999417385794939	WITHOUT_CLASSIFICATION	5.826142050614078E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999954360593033	WITHOUT_CLASSIFICATION	4.563940696695911E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996767145056311	WITHOUT_CLASSIFICATION	3.232854943688439E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998631444012647	WITHOUT_CLASSIFICATION	1.368555987353978E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999787859741739	WITHOUT_CLASSIFICATION	2.121402582613086E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999378365485845	WITHOUT_CLASSIFICATION	6.216345141550949E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9991060189804852	WITHOUT_CLASSIFICATION	8.939810195148337E-4	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999526152242721	WITHOUT_CLASSIFICATION	4.73847757278109E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999628650856806	WITHOUT_CLASSIFICATION	3.7134914319427774E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999840549636358	WITHOUT_CLASSIFICATION	1.594503636409142E-5	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999477627828327	WITHOUT_CLASSIFICATION	5.223721716723813E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999791579316292	WITHOUT_CLASSIFICATION	2.0842068370835806E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999610942012747	WITHOUT_CLASSIFICATION	3.890579872536197E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999483774770999	WITHOUT_CLASSIFICATION	5.162252290008558E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999741494154624	WITHOUT_CLASSIFICATION	2.5850584537606203E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999772174676208	WITHOUT_CLASSIFICATION	2.278253237927402E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999946524333231	WITHOUT_CLASSIFICATION	5.347566676891057E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9976856399244092	WITHOUT_CLASSIFICATION	0.0023143600755907933	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9995554627352052	WITHOUT_CLASSIFICATION	4.4453726479472456E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999965037430482	WITHOUT_CLASSIFICATION	3.4962569517766387E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999394585484978	WITHOUT_CLASSIFICATION	6.054145150220494E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999505248323582	WITHOUT_CLASSIFICATION	4.9475167641764474E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999881471737018	WITHOUT_CLASSIFICATION	1.1852826298206683E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999874012393914	WITHOUT_CLASSIFICATION	1.259876060859047E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999503215704064	WITHOUT_CLASSIFICATION	4.967842959363945E-5	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999468699950897	WITHOUT_CLASSIFICATION	5.3130004910228644E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999955867578519	WITHOUT_CLASSIFICATION	4.413242148043013E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999840549636358	WITHOUT_CLASSIFICATION	1.594503636409142E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999632682130807	WITHOUT_CLASSIFICATION	3.6731786919352974E-5	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999242172656491	WITHOUT_CLASSIFICATION	7.578273435094096E-5	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999649580397376	WITHOUT_CLASSIFICATION	3.504196026229548E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9928663237899982	WITHOUT_CLASSIFICATION	0.007133676210001746	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9995862934718796	WITHOUT_CLASSIFICATION	4.137065281204318E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9983254118133699	WITHOUT_CLASSIFICATION	0.0016745881866302356	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9998340646441877	WITHOUT_CLASSIFICATION	1.6593535581237777E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999265742008241	WITHOUT_CLASSIFICATION	7.342579917584777E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.99965918569777	WITHOUT_CLASSIFICATION	3.40814302230004E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999900043184009	WITHOUT_CLASSIFICATION	9.995681599168245E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.999947200669029	WITHOUT_CLASSIFICATION	5.2799330971057114E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.999947200669029	WITHOUT_CLASSIFICATION	5.2799330971057114E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999700330973598	WITHOUT_CLASSIFICATION	2.996690264019991E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.99983762918285	WITHOUT_CLASSIFICATION	1.623708171500262E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999795852087812	WITHOUT_CLASSIFICATION	2.0414791218794535E-5	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.999945525411955	WITHOUT_CLASSIFICATION	5.447458804493147E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999832028492441	WITHOUT_CLASSIFICATION	1.679715075591722E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999634793671374	WITHOUT_CLASSIFICATION	3.6520632862662126E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.999957116707387	WITHOUT_CLASSIFICATION	4.288329261314966E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999451586188766	WITHOUT_CLASSIFICATION	5.48413811234881E-5	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.999671840299624	WITHOUT_CLASSIFICATION	3.281597003760223E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999354016539491	WITHOUT_CLASSIFICATION	6.459834605085223E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999902836321097	WITHOUT_CLASSIFICATION	9.716367890216017E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9996398547150714	WITHOUT_CLASSIFICATION	3.601452849285011E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999947907803066	WITHOUT_CLASSIFICATION	5.209219693425348E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999832028492441	WITHOUT_CLASSIFICATION	1.679715075591722E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999634793671374	WITHOUT_CLASSIFICATION	3.6520632862662126E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999821081495295	WITHOUT_CLASSIFICATION	1.7891850470461425E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999984026299735	WITHOUT_CLASSIFICATION	1.5973700263663513E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999322546696442	WITHOUT_CLASSIFICATION	6.774533035577119E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9993269150338345	WITHOUT_CLASSIFICATION	6.730849661655189E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9961863364622707	WITHOUT_CLASSIFICATION	0.0038136635377292484	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999350930070222	WITHOUT_CLASSIFICATION	6.490699297768526E-5	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9990876837094519	WITHOUT_CLASSIFICATION	9.123162905481837E-4	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9996055398777359	WITHOUT_CLASSIFICATION	3.944601222640605E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999779217345305	WITHOUT_CLASSIFICATION	2.2078265469523684E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9993536411719077	WITHOUT_CLASSIFICATION	6.463588280923367E-4	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9995626408173254	WITHOUT_CLASSIFICATION	4.3735918267457025E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989987843538815	WITHOUT_CLASSIFICATION	0.0010012156461186254	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999670223271585	WITHOUT_CLASSIFICATION	3.297767284142857E-5	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.999638279548671	WITHOUT_CLASSIFICATION	3.617204513290565E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999918434915035	WITHOUT_CLASSIFICATION	8.15650849656917E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989987843538815	WITHOUT_CLASSIFICATION	0.0010012156461186254	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989987843538815	WITHOUT_CLASSIFICATION	0.0010012156461186254	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9989987843538815	WITHOUT_CLASSIFICATION	0.0010012156461186254	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9997112563410018	WITHOUT_CLASSIFICATION	2.8874365899824453E-4	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999807989263758	WITHOUT_CLASSIFICATION	1.9201073624209554E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999275033869719	WITHOUT_CLASSIFICATION	7.249661302816577E-5	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999901421055393	WITHOUT_CLASSIFICATION	9.857894460722514E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9998726168965801	WITHOUT_CLASSIFICATION	1.27383103419808E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.999993452806842	WITHOUT_CLASSIFICATION	6.547193157945887E-6	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.999504552636206	WITHOUT_CLASSIFICATION	4.954473637940974E-4	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999896443416908	WITHOUT_CLASSIFICATION	1.0355658309146402E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999962531240357	WITHOUT_CLASSIFICATION	3.7468759641547187E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999073179428751	WITHOUT_CLASSIFICATION	9.268205712490157E-5	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9996355125078477	WITHOUT_CLASSIFICATION	3.6448749215235986E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9997755019585881	WITHOUT_CLASSIFICATION	2.2449804141189575E-4	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999877649623932	WITHOUT_CLASSIFICATION	1.2235037606937452E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999995870524362	WITHOUT_CLASSIFICATION	4.1294756379284857E-7	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999331470896532	WITHOUT_CLASSIFICATION	6.685291034682256E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999889935766395	WITHOUT_CLASSIFICATION	1.1006423360442595E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9994500036463946	WITHOUT_CLASSIFICATION	5.499963536054482E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998982350444323	WITHOUT_CLASSIFICATION	1.0176495556770095E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997284630300695	WITHOUT_CLASSIFICATION	2.715369699305271E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997928035961826	WITHOUT_CLASSIFICATION	2.0719640381743163E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997928035961826	WITHOUT_CLASSIFICATION	2.0719640381743163E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9998007089904989	WITHOUT_CLASSIFICATION	1.9929100950114348E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9541293480537296	WITHOUT_CLASSIFICATION	0.045870651946270415	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9996037822112067	WITHOUT_CLASSIFICATION	3.96217788793279E-4	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9755395025784278	WITHOUT_CLASSIFICATION	0.024460497421572202	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.999958816967859	WITHOUT_CLASSIFICATION	4.118303214105259E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999690031704079	WITHOUT_CLASSIFICATION	3.099682959197906E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.999974853394404	WITHOUT_CLASSIFICATION	2.5146605596113715E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.999960472602374	WITHOUT_CLASSIFICATION	3.952739762606215E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999948435802344	WITHOUT_CLASSIFICATION	5.156419765511183E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9992603683126122	WITHOUT_CLASSIFICATION	7.396316873877507E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999973022497503	WITHOUT_CLASSIFICATION	2.697750249693177E-6	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999855373837391	WITHOUT_CLASSIFICATION	1.4462616261029884E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999868602485484	WITHOUT_CLASSIFICATION	1.3139751451597962E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999814003632418	WITHOUT_CLASSIFICATION	1.8599636758228233E-5	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999745093404835	WITHOUT_CLASSIFICATION	2.549065951647607E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999449980662934	WITHOUT_CLASSIFICATION	5.5001933706500996E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999889099207289	WITHOUT_CLASSIFICATION	1.1090079271139554E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999874773148093	WITHOUT_CLASSIFICATION	1.2522685190668782E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999474217537564	WITHOUT_CLASSIFICATION	5.257824624362219E-5	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999287282837979	WITHOUT_CLASSIFICATION	7.127171620208561E-5	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999932866863886	WITHOUT_CLASSIFICATION	6.713313611378186E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999952833214123	WITHOUT_CLASSIFICATION	4.716678587744767E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9998392348456036	WITHOUT_CLASSIFICATION	1.6076515439644964E-4	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9998392348456036	WITHOUT_CLASSIFICATION	1.6076515439644964E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993709868843201	WITHOUT_CLASSIFICATION	6.290131156798772E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9993709868843201	WITHOUT_CLASSIFICATION	6.290131156798772E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999978584743405	WITHOUT_CLASSIFICATION	2.1415256593971273E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9997655127305809	WITHOUT_CLASSIFICATION	2.3448726941912475E-4	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999940288363481	WITHOUT_CLASSIFICATION	5.971163651845867E-6	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999794752285498	WITHOUT_CLASSIFICATION	2.0524771450229343E-5	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999805454044599	WITHOUT_CLASSIFICATION	1.9454595540163734E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999659166782721	WITHOUT_CLASSIFICATION	3.408332172797174E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999702346024563	WITHOUT_CLASSIFICATION	2.9765397543698133E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9991539598286044	WITHOUT_CLASSIFICATION	8.460401713956428E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9997903587802731	WITHOUT_CLASSIFICATION	2.0964121972693236E-4	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9998178370502933	WITHOUT_CLASSIFICATION	1.8216294970683185E-4	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999672367988006	WITHOUT_CLASSIFICATION	3.2763201199261276E-5	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9998801251357322	WITHOUT_CLASSIFICATION	1.1987486426787952E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9992571223137567	WITHOUT_CLASSIFICATION	7.428776862432577E-4	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999980717786153	WITHOUT_CLASSIFICATION	1.9282213845705822E-6	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999462908027592	WITHOUT_CLASSIFICATION	5.3709197240759204E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999054903865301	WITHOUT_CLASSIFICATION	9.450961346991477E-5	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.999962201425012	WITHOUT_CLASSIFICATION	3.779857498804277E-5	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999855005121453	WITHOUT_CLASSIFICATION	1.4499487854626496E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999256345299877	WITHOUT_CLASSIFICATION	7.436547001228236E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999251103543448	WITHOUT_CLASSIFICATION	7.488964565515756E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999310764077111	WITHOUT_CLASSIFICATION	6.892359228885027E-5	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9998844981107106	WITHOUT_CLASSIFICATION	1.155018892894275E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999715493986849	WITHOUT_CLASSIFICATION	2.8450601315052923E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9993256079578074	WITHOUT_CLASSIFICATION	6.743920421924545E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999344037462008	WITHOUT_CLASSIFICATION	6.55962537992124E-5	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999860342113928	WITHOUT_CLASSIFICATION	1.3965788607317453E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999794548373354	WITHOUT_CLASSIFICATION	2.0545162664545225E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9995783967544349	WITHOUT_CLASSIFICATION	4.2160324556502523E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9901715016892888	WITHOUT_CLASSIFICATION	0.009828498310711083	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9993885970461784	WITHOUT_CLASSIFICATION	6.114029538215663E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999838213666471	WITHOUT_CLASSIFICATION	1.6178633352948856E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9993308682526424	WITHOUT_CLASSIFICATION	6.691317473575095E-4	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999995314591814	WITHOUT_CLASSIFICATION	4.685408186097416E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9995541485700109	WITHOUT_CLASSIFICATION	4.458514299891233E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9996092779719371	WITHOUT_CLASSIFICATION	3.907220280628563E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.999934450678334	WITHOUT_CLASSIFICATION	6.554932166600415E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9998887415940918	WITHOUT_CLASSIFICATION	1.1125840590817663E-4	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999291852278088	WITHOUT_CLASSIFICATION	7.081477219113944E-5	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999848416290347	WITHOUT_CLASSIFICATION	1.5158370965442764E-5	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9998627049047294	WITHOUT_CLASSIFICATION	1.3729509527057046E-4	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9881637247019743	WITHOUT_CLASSIFICATION	0.011836275298025705	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999990115641087	WITHOUT_CLASSIFICATION	9.884358913111654E-6	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9998542775078164	WITHOUT_CLASSIFICATION	1.4572249218361712E-4	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9640089272560282	WITHOUT_CLASSIFICATION	0.03599107274397188	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9998883694916816	WITHOUT_CLASSIFICATION	1.1163050831837028E-4	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.999475433499846	WITHOUT_CLASSIFICATION	5.245665001539869E-4	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9997830822699487	WITHOUT_CLASSIFICATION	2.1691773005128175E-4	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9997357459404124	WITHOUT_CLASSIFICATION	2.642540595876388E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9997534979620221	WITHOUT_CLASSIFICATION	2.4650203797800004E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999969602932598	WITHOUT_CLASSIFICATION	3.0397067402313715E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999950678032578	WITHOUT_CLASSIFICATION	4.932196742298385E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999237496522337	WITHOUT_CLASSIFICATION	7.625034776619896E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999190759584894	WITHOUT_CLASSIFICATION	8.092404151057415E-5	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999253405399317	WITHOUT_CLASSIFICATION	7.465946006845271E-5	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999944745523934	WITHOUT_CLASSIFICATION	5.5254476065764895E-6	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9998212904340118	WITHOUT_CLASSIFICATION	1.787095659883126E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999951846781925	WITHOUT_CLASSIFICATION	4.815321807591833E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999994933218151	WITHOUT_CLASSIFICATION	5.066781848376426E-7	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999968947532618	WITHOUT_CLASSIFICATION	3.105246738171514E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999654002768763	WITHOUT_CLASSIFICATION	3.459972312373017E-5	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999708744372823	WITHOUT_CLASSIFICATION	2.9125562717685928E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999319184437396	WITHOUT_CLASSIFICATION	6.808155626033322E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999810797928569	WITHOUT_CLASSIFICATION	1.8920207143068433E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999664675927352	WITHOUT_CLASSIFICATION	3.353240726477066E-5	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999951885646796	WITHOUT_CLASSIFICATION	4.8114353203480065E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.999968765266306	WITHOUT_CLASSIFICATION	3.123473369400199E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999867531604693	WITHOUT_CLASSIFICATION	1.3246839530844725E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9995588887773846	WITHOUT_CLASSIFICATION	4.411112226152831E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9995588887773846	WITHOUT_CLASSIFICATION	4.411112226152831E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9998605313740173	WITHOUT_CLASSIFICATION	1.3946862598269373E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.992714654577367	WITHOUT_CLASSIFICATION	0.007285345422633103	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999068876202536	WITHOUT_CLASSIFICATION	9.311237974637505E-5	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9998924869043719	WITHOUT_CLASSIFICATION	1.0751309562808702E-4	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999517176338033	WITHOUT_CLASSIFICATION	4.8282366196677056E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999745177162107	WITHOUT_CLASSIFICATION	2.54822837892577E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998991946676707	WITHOUT_CLASSIFICATION	1.0080533232915598E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999537008649341	WITHOUT_CLASSIFICATION	4.629913506587828E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999537008649341	WITHOUT_CLASSIFICATION	4.629913506587828E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999471621366167	WITHOUT_CLASSIFICATION	5.283786338327726E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999567422299495	WITHOUT_CLASSIFICATION	4.3257770050474696E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999301673664556	WITHOUT_CLASSIFICATION	6.983263354446348E-5	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999568423283058	WITHOUT_CLASSIFICATION	4.315767169420968E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9997045109294675	WITHOUT_CLASSIFICATION	2.95489070532509E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999915141546322	WITHOUT_CLASSIFICATION	8.485845367808429E-6	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9996835729992114	WITHOUT_CLASSIFICATION	3.164270007886058E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999478816377	WITHOUT_CLASSIFICATION	5.211836219359966E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999462719598532	WITHOUT_CLASSIFICATION	5.372804014693196E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999912289046813	WITHOUT_CLASSIFICATION	8.771095318631995E-6	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9998806136659406	WITHOUT_CLASSIFICATION	1.1938633405933044E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999551204262952	WITHOUT_CLASSIFICATION	4.487957370484953E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9990479893270133	WITHOUT_CLASSIFICATION	9.520106729865652E-4	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999575394372134	WITHOUT_CLASSIFICATION	4.246056278653479E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9886844829215328	WITHOUT_CLASSIFICATION	0.01131551707846728	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9998666314091234	WITHOUT_CLASSIFICATION	1.3336859087654032E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999965060914079	WITHOUT_CLASSIFICATION	3.4939085920548424E-6	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999916656673226	WITHOUT_CLASSIFICATION	8.334332677358556E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9995859618058598	WITHOUT_CLASSIFICATION	4.14038194140291E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999875417030355	WITHOUT_CLASSIFICATION	1.2458296964621801E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999845101727644	WITHOUT_CLASSIFICATION	1.5489827235605076E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999876018597998	WITHOUT_CLASSIFICATION	1.2398140200101419E-5	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999957713316779	WITHOUT_CLASSIFICATION	4.228668322072479E-6	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999838211221622	WITHOUT_CLASSIFICATION	1.617887783769106E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.999672319975886	WITHOUT_CLASSIFICATION	3.2768002411393086E-4	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9994677875045073	WITHOUT_CLASSIFICATION	5.322124954926894E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.999993889756095	WITHOUT_CLASSIFICATION	6.110243904928257E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9973289217959891	WITHOUT_CLASSIFICATION	0.0026710782040109135	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9998675523947846	WITHOUT_CLASSIFICATION	1.3244760521538432E-4	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999980812449878	WITHOUT_CLASSIFICATION	1.9187550122673334E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999225297753066	WITHOUT_CLASSIFICATION	7.747022469346421E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999810570483194	WITHOUT_CLASSIFICATION	1.8942951680577174E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9996604617808412	WITHOUT_CLASSIFICATION	3.395382191586768E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999785137878412	WITHOUT_CLASSIFICATION	2.1486212158781165E-5	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999945268657047	WITHOUT_CLASSIFICATION	5.47313429531097E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999836461675087	WITHOUT_CLASSIFICATION	1.6353832491353127E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.999948025227664	WITHOUT_CLASSIFICATION	5.197477233610895E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999741375030897	WITHOUT_CLASSIFICATION	2.5862496910240468E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.999968218271038	WITHOUT_CLASSIFICATION	3.1781728961965693E-5	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9933222110771133	WITHOUT_CLASSIFICATION	0.0066777889228867415	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9997569415640855	WITHOUT_CLASSIFICATION	2.430584359145069E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9998688589986677	WITHOUT_CLASSIFICATION	1.3114100133228244E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999177599379288	WITHOUT_CLASSIFICATION	8.22400620712283E-5	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9998710630105611	WITHOUT_CLASSIFICATION	1.2893698943904986E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9998551879814958	WITHOUT_CLASSIFICATION	1.4481201850426487E-4	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999105689633506	WITHOUT_CLASSIFICATION	8.94310366493297E-5	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998520389294978	WITHOUT_CLASSIFICATION	1.4796107050219176E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998520389294978	WITHOUT_CLASSIFICATION	1.4796107050219176E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998722981410428	WITHOUT_CLASSIFICATION	1.2770185895724905E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998722981410428	WITHOUT_CLASSIFICATION	1.2770185895724905E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999918434915035	WITHOUT_CLASSIFICATION	8.15650849656917E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9997284630300695	WITHOUT_CLASSIFICATION	2.715369699305271E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997928035961826	WITHOUT_CLASSIFICATION	2.0719640381743163E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9997928035961826	WITHOUT_CLASSIFICATION	2.0719640381743163E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999732921956554	WITHOUT_CLASSIFICATION	2.670780434461484E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999695200458621	WITHOUT_CLASSIFICATION	3.047995413788664E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9982110296462418	WITHOUT_CLASSIFICATION	0.0017889703537582525	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999475961340284	WITHOUT_CLASSIFICATION	5.240386597170409E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9996509207193491	WITHOUT_CLASSIFICATION	3.490792806508809E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999819150455218	WITHOUT_CLASSIFICATION	1.8084954478250006E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999655934031286	WITHOUT_CLASSIFICATION	3.440659687139123E-5	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999955131015199	WITHOUT_CLASSIFICATION	4.486898480088332E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.999950313229003	WITHOUT_CLASSIFICATION	4.96867709970952E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9988691848797685	WITHOUT_CLASSIFICATION	0.0011308151202315132	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.999917543833542	WITHOUT_CLASSIFICATION	8.245616645795126E-5	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.999960876964018	WITHOUT_CLASSIFICATION	3.912303598203803E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999488678268051	WITHOUT_CLASSIFICATION	5.113217319493689E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999159157924349	WITHOUT_CLASSIFICATION	8.408420756513388E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999465671865316	WITHOUT_CLASSIFICATION	5.343281346838283E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999065945893778	WITHOUT_CLASSIFICATION	9.340541062215439E-5	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999919218575428	WITHOUT_CLASSIFICATION	8.078142457154774E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999473463846859	WITHOUT_CLASSIFICATION	5.265361531419711E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998471219647164	WITHOUT_CLASSIFICATION	1.5287803528367592E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999713856957236	WITHOUT_CLASSIFICATION	2.8614304276310393E-5	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999936565386557	WITHOUT_CLASSIFICATION	6.34346134427782E-6	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999758615345504	WITHOUT_CLASSIFICATION	2.413846544956333E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999980322627142	WITHOUT_CLASSIFICATION	1.9677372858488247E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998712652933175	WITHOUT_CLASSIFICATION	1.2873470668243875E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999021613920585	WITHOUT_CLASSIFICATION	9.783860794160374E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999750469040724	WITHOUT_CLASSIFICATION	2.4953095927735854E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9997019872382376	WITHOUT_CLASSIFICATION	2.980127617624238E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999027634419394	WITHOUT_CLASSIFICATION	9.723655806062823E-5	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.999579973470136	WITHOUT_CLASSIFICATION	4.200265298638766E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999765289936824	WITHOUT_CLASSIFICATION	2.3471006317586712E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9524028626961191	WITHOUT_CLASSIFICATION	0.047597137303881015	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9998077542666657	WITHOUT_CLASSIFICATION	1.922457333342609E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999491895851271	WITHOUT_CLASSIFICATION	5.0810414872932276E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999970338182023	WITHOUT_CLASSIFICATION	2.9661817976508974E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999313477125479	WITHOUT_CLASSIFICATION	6.865228745211343E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9998897264265694	WITHOUT_CLASSIFICATION	1.1027357343052743E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9970026330713511	WITHOUT_CLASSIFICATION	0.0029973669286490223	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999987048881649	WITHOUT_CLASSIFICATION	1.295111835055937E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9998602113706129	WITHOUT_CLASSIFICATION	1.3978862938718374E-4	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999174913663312	WITHOUT_CLASSIFICATION	8.250863366873617E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999648971877213	WITHOUT_CLASSIFICATION	3.5102812278641854E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999552439277754	WITHOUT_CLASSIFICATION	4.47560722246114E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999436076567698	WITHOUT_CLASSIFICATION	5.639234323016992E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999910108286438	WITHOUT_CLASSIFICATION	8.989171356244257E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999853745968471	WITHOUT_CLASSIFICATION	1.4625403152952418E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999448790710633	WITHOUT_CLASSIFICATION	5.512092893676559E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999833475729198	WITHOUT_CLASSIFICATION	1.6652427080183256E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999582111094429	WITHOUT_CLASSIFICATION	4.1788890557126504E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9991659492679644	WITHOUT_CLASSIFICATION	8.340507320355208E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9991152524255207	WITHOUT_CLASSIFICATION	8.847475744793912E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.999995959999059	WITHOUT_CLASSIFICATION	4.040000941041019E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999812698152727	WITHOUT_CLASSIFICATION	1.873018472728106E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9998424065507507	WITHOUT_CLASSIFICATION	1.5759344924915072E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9998978797442618	WITHOUT_CLASSIFICATION	1.0212025573822975E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9999352732973832	WITHOUT_CLASSIFICATION	6.472670261675588E-5	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9999525367022781	WITHOUT_CLASSIFICATION	4.746329772184195E-5	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9998024905440118	WITHOUT_CLASSIFICATION	1.9750945598812384E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999760945977328	WITHOUT_CLASSIFICATION	2.3905402267207743E-5	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9999224227806877	WITHOUT_CLASSIFICATION	7.75772193124338E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998964152055759	WITHOUT_CLASSIFICATION	1.0358479442407099E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999966695136708	WITHOUT_CLASSIFICATION	3.3304863291001417E-6	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9998749928147828	WITHOUT_CLASSIFICATION	1.250071852172375E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998964152055759	WITHOUT_CLASSIFICATION	1.0358479442407099E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999888644359531	WITHOUT_CLASSIFICATION	1.1135564046821161E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998964152055759	WITHOUT_CLASSIFICATION	1.0358479442407099E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999567839898187	WITHOUT_CLASSIFICATION	4.3216010181183764E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999970374804612	WITHOUT_CLASSIFICATION	2.9625195388256487E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9997651567271058	WITHOUT_CLASSIFICATION	2.3484327289419483E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999951201605225	WITHOUT_CLASSIFICATION	4.879839477529844E-6	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9998865049001088	WITHOUT_CLASSIFICATION	1.134950998912511E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9998619959985793	WITHOUT_CLASSIFICATION	1.3800400142061807E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9993848024006964	WITHOUT_CLASSIFICATION	6.151975993037384E-4	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999948494208541	WITHOUT_CLASSIFICATION	5.150579145939566E-6	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.999978673319521	WITHOUT_CLASSIFICATION	2.1326680479135576E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999044607162683	WITHOUT_CLASSIFICATION	9.553928373173777E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999392053924028	WITHOUT_CLASSIFICATION	6.079460759714006E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999169071300139	WITHOUT_CLASSIFICATION	8.309286998608706E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.999995881401587	WITHOUT_CLASSIFICATION	4.118598413033797E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999882217667015	WITHOUT_CLASSIFICATION	1.1778233298508289E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9998281133037079	WITHOUT_CLASSIFICATION	1.718866962921594E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999868147977203	WITHOUT_CLASSIFICATION	1.3185202279571922E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9998855157911101	WITHOUT_CLASSIFICATION	1.14484208889904E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999590719271867	WITHOUT_CLASSIFICATION	4.092807281317204E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.999653260192177	WITHOUT_CLASSIFICATION	3.4673980782297007E-4	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9989447445717786	WITHOUT_CLASSIFICATION	0.0010552554282213672	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999971283655616	WITHOUT_CLASSIFICATION	2.87163443838173E-6	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999518398195807	WITHOUT_CLASSIFICATION	4.816018041935886E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999569852094462	WITHOUT_CLASSIFICATION	4.3014790553879784E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999703546489154	WITHOUT_CLASSIFICATION	2.964535108466613E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9998972820625214	WITHOUT_CLASSIFICATION	1.0271793747867188E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999592718702794	WITHOUT_CLASSIFICATION	4.072812972061303E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9996554686388096	WITHOUT_CLASSIFICATION	3.4453136119035386E-4	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999194861288593	WITHOUT_CLASSIFICATION	8.05138711407138E-5	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998328849935192	WITHOUT_CLASSIFICATION	1.671150064808882E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999481204011228	WITHOUT_CLASSIFICATION	5.187959887720012E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999601641596219	WITHOUT_CLASSIFICATION	3.9835840378196835E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999756198702833	WITHOUT_CLASSIFICATION	2.43801297168108E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999800000615879	WITHOUT_CLASSIFICATION	1.9999938412066643E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999877988992091	WITHOUT_CLASSIFICATION	1.2201100790923038E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.99998777007069	WITHOUT_CLASSIFICATION	1.222992931010168E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999931337999022	WITHOUT_CLASSIFICATION	6.866200097797702E-6	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999320709538156	WITHOUT_CLASSIFICATION	6.79290461843833E-5	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9997474373093157	WITHOUT_CLASSIFICATION	2.525626906843353E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999473007564915	WITHOUT_CLASSIFICATION	5.269924350847553E-5	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.999541251596131	WITHOUT_CLASSIFICATION	4.5874840386902387E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9997665804488348	WITHOUT_CLASSIFICATION	2.3341955116520748E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999971371289679	WITHOUT_CLASSIFICATION	2.862871032143087E-6	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999882383637335	WITHOUT_CLASSIFICATION	1.1761636266465812E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9998895706084365	WITHOUT_CLASSIFICATION	1.1042939156341514E-4	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998747843156034	WITHOUT_CLASSIFICATION	1.2521568439656283E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999876897242405	WITHOUT_CLASSIFICATION	1.231027575961307E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999897922795482	WITHOUT_CLASSIFICATION	1.0207720451820307E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9998841098437714	WITHOUT_CLASSIFICATION	1.1589015622854059E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999416110358955	WITHOUT_CLASSIFICATION	5.838896410442109E-5	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9998516600927081	WITHOUT_CLASSIFICATION	1.4833990729184055E-4	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999670511252293	WITHOUT_CLASSIFICATION	3.2948874770701524E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999860502365593	WITHOUT_CLASSIFICATION	1.3949763440725515E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999472627572284	WITHOUT_CLASSIFICATION	5.2737242771514765E-5	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999741150873823	WITHOUT_CLASSIFICATION	2.588491261779083E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999847233882253	WITHOUT_CLASSIFICATION	1.5276611774707845E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.999852242401592	WITHOUT_CLASSIFICATION	1.477575984079478E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999263272684764	WITHOUT_CLASSIFICATION	7.367273152366515E-5	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9998905999654195	WITHOUT_CLASSIFICATION	1.0940003458047385E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999522365372338	WITHOUT_CLASSIFICATION	4.7763462766157056E-5	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999554206850915	WITHOUT_CLASSIFICATION	4.457931490857939E-5	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9997338058281432	WITHOUT_CLASSIFICATION	2.661941718569024E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999147879907277	WITHOUT_CLASSIFICATION	8.521200927219852E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999246995667465	WITHOUT_CLASSIFICATION	7.530043325354856E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999288154395156	WITHOUT_CLASSIFICATION	7.11845604843645E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9997382544010226	WITHOUT_CLASSIFICATION	2.617455989773826E-4	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9998963779534432	WITHOUT_CLASSIFICATION	1.0362204655673605E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9997343878471916	WITHOUT_CLASSIFICATION	2.656121528083832E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999522365372338	WITHOUT_CLASSIFICATION	4.7763462766157056E-5	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.999982235320874	WITHOUT_CLASSIFICATION	1.7764679125953158E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999908711852415	WITHOUT_CLASSIFICATION	9.128814758333503E-6	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999733666811597	WITHOUT_CLASSIFICATION	2.6633318840241397E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9968120997207919	WITHOUT_CLASSIFICATION	0.0031879002792081826	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.999981068262662	WITHOUT_CLASSIFICATION	1.8931737338025128E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9955110808410862	WITHOUT_CLASSIFICATION	0.004488919158913806	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999636190136958	WITHOUT_CLASSIFICATION	3.638098630424039E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999636190136958	WITHOUT_CLASSIFICATION	3.638098630424039E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9979408145314255	WITHOUT_CLASSIFICATION	0.00205918546857444	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9979408145314255	WITHOUT_CLASSIFICATION	0.00205918546857444	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9964927527565426	WITHOUT_CLASSIFICATION	0.0035072472434574758	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9997516733338143	WITHOUT_CLASSIFICATION	2.483266661855964E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9978532796708907	WITHOUT_CLASSIFICATION	0.0021467203291093495	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9997611004984149	WITHOUT_CLASSIFICATION	2.388995015851088E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999674415417781	WITHOUT_CLASSIFICATION	3.2558458221915024E-5	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9997767626714389	WITHOUT_CLASSIFICATION	2.2323732856120606E-4	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9998166416260919	WITHOUT_CLASSIFICATION	1.8335837390817355E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999901949575847	WITHOUT_CLASSIFICATION	9.805042415314106E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9999355179116908	WITHOUT_CLASSIFICATION	6.448208830929439E-5	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9998480287487138	WITHOUT_CLASSIFICATION	1.5197125128618046E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996834384645894	WITHOUT_CLASSIFICATION	3.1656153541057496E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9998650457167687	WITHOUT_CLASSIFICATION	1.3495428323131488E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998982350444323	WITHOUT_CLASSIFICATION	1.0176495556770095E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998982350444323	WITHOUT_CLASSIFICATION	1.0176495556770095E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9978532796708907	WITHOUT_CLASSIFICATION	0.0021467203291093495	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996834384645894	WITHOUT_CLASSIFICATION	3.1656153541057496E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9978799627277732	WITHOUT_CLASSIFICATION	0.0021200372722267858	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9997541861123759	WITHOUT_CLASSIFICATION	2.45813887624198E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999914531942022	WITHOUT_CLASSIFICATION	8.546805797781723E-6	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.999770774986337	WITHOUT_CLASSIFICATION	2.2922501366306273E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999976517068124	WITHOUT_CLASSIFICATION	2.3482931876057625E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999976517068124	WITHOUT_CLASSIFICATION	2.3482931876057625E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999568930191945	WITHOUT_CLASSIFICATION	4.310698080557269E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999978581603359	WITHOUT_CLASSIFICATION	2.141839664044747E-6	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9997611004984149	WITHOUT_CLASSIFICATION	2.388995015851088E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.999974187632833	WITHOUT_CLASSIFICATION	2.5812367166988016E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9997494409531292	WITHOUT_CLASSIFICATION	2.5055904687083005E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999188770711916	WITHOUT_CLASSIFICATION	8.112292880836702E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999632246055319	WITHOUT_CLASSIFICATION	3.677539446816465E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9997611004984149	WITHOUT_CLASSIFICATION	2.388995015851088E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998647731427421	WITHOUT_CLASSIFICATION	1.35226857257861E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9995123706241512	WITHOUT_CLASSIFICATION	4.876293758488114E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999753178000008	WITHOUT_CLASSIFICATION	2.4682199999127538E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999556243056782	WITHOUT_CLASSIFICATION	4.437569432181181E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999573129607836	WITHOUT_CLASSIFICATION	4.268703921636057E-5	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999443666894838	WITHOUT_CLASSIFICATION	5.563331051628995E-5	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9999753452007363	WITHOUT_CLASSIFICATION	2.465479926376886E-5	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999468078054307	WITHOUT_CLASSIFICATION	5.319219456935712E-5	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999639436305179	WITHOUT_CLASSIFICATION	3.6056369482121915E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999287195431487	WITHOUT_CLASSIFICATION	7.128045685144946E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999633544169222	WITHOUT_CLASSIFICATION	3.664558307780582E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999898807800126	WITHOUT_CLASSIFICATION	1.0119219987313418E-5	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9978719091460642	WITHOUT_CLASSIFICATION	0.0021280908539358886	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999727313612001	WITHOUT_CLASSIFICATION	2.7268638799884236E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999524904997644	WITHOUT_CLASSIFICATION	4.750950023559285E-5	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999466857291488	WITHOUT_CLASSIFICATION	5.3314270851236064E-5	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999262040411562	WITHOUT_CLASSIFICATION	7.379595884382828E-5	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.999977212410575	WITHOUT_CLASSIFICATION	2.2787589424965898E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999977318581553	WITHOUT_CLASSIFICATION	2.268141844599337E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998186500546035	WITHOUT_CLASSIFICATION	1.8134994539657258E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9996754754493888	WITHOUT_CLASSIFICATION	3.24524550611244E-4	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999813899994161	WITHOUT_CLASSIFICATION	1.861000058394386E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999812957514906	WITHOUT_CLASSIFICATION	1.87042485094107E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999485145936904	WITHOUT_CLASSIFICATION	5.1485406309639416E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857242694318	WITHOUT_CLASSIFICATION	1.4275730568220438E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999877649623932	WITHOUT_CLASSIFICATION	1.2235037606937452E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999148995802909	WITHOUT_CLASSIFICATION	8.510041970901218E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999990787569951	WITHOUT_CLASSIFICATION	9.212430049069126E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999908031202435	WITHOUT_CLASSIFICATION	9.19687975641437E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999890166812185	WITHOUT_CLASSIFICATION	1.0983318781472891E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999349041169284	WITHOUT_CLASSIFICATION	6.509588307151535E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996993229469515	WITHOUT_CLASSIFICATION	3.006770530485864E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999468078054307	WITHOUT_CLASSIFICATION	5.319219456935712E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.999986826538155	WITHOUT_CLASSIFICATION	1.3173461845108514E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999599237386108	WITHOUT_CLASSIFICATION	4.007626138928831E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999877482365555	WITHOUT_CLASSIFICATION	1.2251763444460834E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999777751390767	WITHOUT_CLASSIFICATION	2.2224860923297976E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999812957514906	WITHOUT_CLASSIFICATION	1.87042485094107E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999485145936904	WITHOUT_CLASSIFICATION	5.1485406309639416E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999857242694318	WITHOUT_CLASSIFICATION	1.4275730568220438E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999967545705521	WITHOUT_CLASSIFICATION	3.2454294477796274E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998117265824	WITHOUT_CLASSIFICATION	1.8827341760282987E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999651926634322	WITHOUT_CLASSIFICATION	3.480733656788289E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999957814078382	WITHOUT_CLASSIFICATION	4.218592161918312E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9988551382734973	WITHOUT_CLASSIFICATION	0.0011448617265027992	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995783165392973	WITHOUT_CLASSIFICATION	4.2168346070282036E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9997542935043072	WITHOUT_CLASSIFICATION	2.457064956927401E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999973534848644	WITHOUT_CLASSIFICATION	2.6465151355130156E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999381503971401	WITHOUT_CLASSIFICATION	6.184960285992504E-5	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999710477180674	WITHOUT_CLASSIFICATION	2.8952281932529074E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.999855881166579	WITHOUT_CLASSIFICATION	1.4411883342106853E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999872805962763	WITHOUT_CLASSIFICATION	1.2719403723845277E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999899308166007	WITHOUT_CLASSIFICATION	1.0069183399301721E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999813899994161	WITHOUT_CLASSIFICATION	1.861000058394386E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.999990787569951	WITHOUT_CLASSIFICATION	9.212430049069126E-6	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999908031202435	WITHOUT_CLASSIFICATION	9.19687975641437E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999890166812185	WITHOUT_CLASSIFICATION	1.0983318781472891E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998117265824	WITHOUT_CLASSIFICATION	1.8827341760282987E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999651926634322	WITHOUT_CLASSIFICATION	3.480733656788289E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999957814078382	WITHOUT_CLASSIFICATION	4.218592161918312E-6	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9988551382734973	WITHOUT_CLASSIFICATION	0.0011448617265027992	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9995783165392973	WITHOUT_CLASSIFICATION	4.2168346070282036E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999982139627384	WITHOUT_CLASSIFICATION	1.7860372617301474E-6	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9997772355238235	WITHOUT_CLASSIFICATION	2.227644761764769E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999905769847203	WITHOUT_CLASSIFICATION	9.423015279724893E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998922163131927	WITHOUT_CLASSIFICATION	1.0778368680732523E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998922163131927	WITHOUT_CLASSIFICATION	1.0778368680732523E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998922163131927	WITHOUT_CLASSIFICATION	1.0778368680732523E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998922163131927	WITHOUT_CLASSIFICATION	1.0778368680732523E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9998922163131927	WITHOUT_CLASSIFICATION	1.0778368680732523E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9996494590465034	WITHOUT_CLASSIFICATION	3.5054095349658604E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999811961270624	WITHOUT_CLASSIFICATION	1.8803872937549722E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999343177374905	WITHOUT_CLASSIFICATION	6.568226250953184E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9980021849535344	WITHOUT_CLASSIFICATION	0.0019978150464655398	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999879282383894	WITHOUT_CLASSIFICATION	1.2071761610625725E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.999966579571431	WITHOUT_CLASSIFICATION	3.3420428568911156E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999930129274623	WITHOUT_CLASSIFICATION	6.987072537698117E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999249577783303	WITHOUT_CLASSIFICATION	7.504222166963976E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999085349213928	WITHOUT_CLASSIFICATION	9.146507860717946E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998520389294978	WITHOUT_CLASSIFICATION	1.4796107050219176E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998520389294978	WITHOUT_CLASSIFICATION	1.4796107050219176E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9998520389294978	WITHOUT_CLASSIFICATION	1.4796107050219176E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999960348313327	WITHOUT_CLASSIFICATION	3.965168667298544E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9996551627834427	WITHOUT_CLASSIFICATION	3.448372165573302E-4	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999738318819218	WITHOUT_CLASSIFICATION	2.6168118078257852E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999419936876517	WITHOUT_CLASSIFICATION	5.800631234832012E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999419936876517	WITHOUT_CLASSIFICATION	5.800631234832012E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.99992421274711	WITHOUT_CLASSIFICATION	7.578725289002816E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999419936876517	WITHOUT_CLASSIFICATION	5.800631234832012E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999505248323582	WITHOUT_CLASSIFICATION	4.9475167641764474E-5	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999881471737018	WITHOUT_CLASSIFICATION	1.1852826298206683E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999874012393914	WITHOUT_CLASSIFICATION	1.259876060859047E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999824173695546	WITHOUT_CLASSIFICATION	1.7582630445396496E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999824173695546	WITHOUT_CLASSIFICATION	1.7582630445396496E-5	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.999833361752453	WITHOUT_CLASSIFICATION	1.6663824754709395E-4	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999505057707196	WITHOUT_CLASSIFICATION	4.949422928035564E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9969068370059072	WITHOUT_CLASSIFICATION	0.0030931629940927035	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9942343863499505	WITHOUT_CLASSIFICATION	0.0057656136500494155	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999907202515255	WITHOUT_CLASSIFICATION	9.279748474515617E-6	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999925429534378	WITHOUT_CLASSIFICATION	7.457046562246522E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.999741413537809	WITHOUT_CLASSIFICATION	2.585864621910474E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999936407850366	WITHOUT_CLASSIFICATION	6.359214963318345E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997483643519841	WITHOUT_CLASSIFICATION	2.51635648015862E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999329530847261	WITHOUT_CLASSIFICATION	6.704691527390903E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997483643519841	WITHOUT_CLASSIFICATION	2.51635648015862E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996993229469515	WITHOUT_CLASSIFICATION	3.006770530485864E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999996520727021	WITHOUT_CLASSIFICATION	3.4792729788932114E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999642889837163	WITHOUT_CLASSIFICATION	3.571101628364028E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9997438329947075	WITHOUT_CLASSIFICATION	2.561670052925607E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996908267365937	WITHOUT_CLASSIFICATION	3.0917326340633775E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996993229469515	WITHOUT_CLASSIFICATION	3.006770530485864E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999642889837163	WITHOUT_CLASSIFICATION	3.571101628364028E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999602501651144	WITHOUT_CLASSIFICATION	3.974983488569767E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999292599407503	WITHOUT_CLASSIFICATION	7.074005924960871E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999690031704079	WITHOUT_CLASSIFICATION	3.099682959197906E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9952187289702273	WITHOUT_CLASSIFICATION	0.004781271029772626	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9952187289702273	WITHOUT_CLASSIFICATION	0.004781271029772626	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9956845256362691	WITHOUT_CLASSIFICATION	0.004315474363730999	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999980105963077	WITHOUT_CLASSIFICATION	1.9894036923671246E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999909084221763	WITHOUT_CLASSIFICATION	9.091577823787607E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999790605991244	WITHOUT_CLASSIFICATION	2.093940087554213E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999633777535378	WITHOUT_CLASSIFICATION	3.6622246462244584E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999979976876037	WITHOUT_CLASSIFICATION	2.00231239627793E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999633777535378	WITHOUT_CLASSIFICATION	3.6622246462244584E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999691469099	WITHOUT_CLASSIFICATION	3.0853090104658635E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999691469099	WITHOUT_CLASSIFICATION	3.0853090104658635E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999691469099	WITHOUT_CLASSIFICATION	3.0853090104658635E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999691469099	WITHOUT_CLASSIFICATION	3.0853090104658635E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999980105963077	WITHOUT_CLASSIFICATION	1.9894036923671246E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999691469099	WITHOUT_CLASSIFICATION	3.0853090104658635E-7	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997949357692187	WITHOUT_CLASSIFICATION	2.0506423078128785E-4	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9997949357692187	WITHOUT_CLASSIFICATION	2.0506423078128785E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999790605991244	WITHOUT_CLASSIFICATION	2.093940087554213E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999868303355696	WITHOUT_CLASSIFICATION	1.3169664430348711E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999868303355696	WITHOUT_CLASSIFICATION	1.3169664430348711E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999633777535378	WITHOUT_CLASSIFICATION	3.6622246462244584E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999979976876037	WITHOUT_CLASSIFICATION	2.00231239627793E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999633777535378	WITHOUT_CLASSIFICATION	3.6622246462244584E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999943380923939	WITHOUT_CLASSIFICATION	5.66190760609154E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999790605991244	WITHOUT_CLASSIFICATION	2.093940087554213E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999980105963077	WITHOUT_CLASSIFICATION	1.9894036923671246E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999980185539277	WITHOUT_CLASSIFICATION	1.9814460723817845E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999979934599638	WITHOUT_CLASSIFICATION	2.0065400362970533E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9998627909332973	WITHOUT_CLASSIFICATION	1.372090667025596E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999965995269174	WITHOUT_CLASSIFICATION	3.4004730825910476E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999523920212791	WITHOUT_CLASSIFICATION	4.760797872101724E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999534794030414	WITHOUT_CLASSIFICATION	4.6520596958616696E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9998837227481924	WITHOUT_CLASSIFICATION	1.1627725180765311E-4	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999965407971763	WITHOUT_CLASSIFICATION	3.4592028237449833E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9998178800976967	WITHOUT_CLASSIFICATION	1.8211990230337406E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.999990115641087	WITHOUT_CLASSIFICATION	9.884358913111654E-6	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9997581710166444	WITHOUT_CLASSIFICATION	2.4182898335563068E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9803211824249014	WITHOUT_CLASSIFICATION	0.019678817575098595	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999290451331423	WITHOUT_CLASSIFICATION	7.095486685767134E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999969056069079	WITHOUT_CLASSIFICATION	3.094393092171416E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9998557683318621	WITHOUT_CLASSIFICATION	1.442316681379918E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999935311058574	WITHOUT_CLASSIFICATION	6.468894142596549E-6	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999620481802381	WITHOUT_CLASSIFICATION	3.795181976183969E-5	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999487504900668	WITHOUT_CLASSIFICATION	5.124950993327357E-5	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999537149497508	WITHOUT_CLASSIFICATION	4.628505024919061E-5	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.999992155148444	WITHOUT_CLASSIFICATION	7.844851556088176E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999950949071	WITHOUT_CLASSIFICATION	4.905092850371366E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999950949071	WITHOUT_CLASSIFICATION	4.905092850371366E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999950949071	WITHOUT_CLASSIFICATION	4.905092850371366E-9	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999876018597998	WITHOUT_CLASSIFICATION	1.2398140200101419E-5	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999950986979	WITHOUT_CLASSIFICATION	4.901302224335907E-9	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9990754678270442	WITHOUT_CLASSIFICATION	9.245321729559565E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999912693770183	WITHOUT_CLASSIFICATION	8.730622981589951E-6	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.998416082060275	WITHOUT_CLASSIFICATION	0.00158391793972497	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999549130193987	WITHOUT_CLASSIFICATION	4.50869806012276E-5	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999996463049071	WITHOUT_CLASSIFICATION	3.5369509288157334E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999009786684769	WITHOUT_CLASSIFICATION	9.90213315230549E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9997019872382376	WITHOUT_CLASSIFICATION	2.980127617624238E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999787526949355	WITHOUT_CLASSIFICATION	2.1247305064513935E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999727807653896	WITHOUT_CLASSIFICATION	2.72192346103948E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999609883178795	WITHOUT_CLASSIFICATION	3.901168212045531E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.999972858427474	WITHOUT_CLASSIFICATION	2.7141572526028356E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997483643519841	WITHOUT_CLASSIFICATION	2.51635648015862E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997483643519841	WITHOUT_CLASSIFICATION	2.51635648015862E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9997438329947075	WITHOUT_CLASSIFICATION	2.561670052925607E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9994625613039015	WITHOUT_CLASSIFICATION	5.374386960984882E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999313477125479	WITHOUT_CLASSIFICATION	6.865228745211343E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999622779485104	WITHOUT_CLASSIFICATION	3.772205148957478E-5	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999901453733314	WITHOUT_CLASSIFICATION	9.854626668541138E-6	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999324652139738	WITHOUT_CLASSIFICATION	6.753478602616842E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999366766082887	WITHOUT_CLASSIFICATION	6.332339171137754E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9998597567941886	WITHOUT_CLASSIFICATION	1.402432058113891E-4	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999944577774432	WITHOUT_CLASSIFICATION	5.542222556816211E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9997483643519841	WITHOUT_CLASSIFICATION	2.51635648015862E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9998454985137457	WITHOUT_CLASSIFICATION	1.5450148625429806E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999831604608068	WITHOUT_CLASSIFICATION	1.6839539193194907E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999923421509768	WITHOUT_CLASSIFICATION	7.657849023291972E-6	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999819471360428	WITHOUT_CLASSIFICATION	1.805286395723121E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999170958975496	WITHOUT_CLASSIFICATION	8.290410245035662E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999173302366106	WITHOUT_CLASSIFICATION	8.266976338950472E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999173302366106	WITHOUT_CLASSIFICATION	8.266976338950472E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999847342268109	WITHOUT_CLASSIFICATION	1.5265773189018975E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9995428511570738	WITHOUT_CLASSIFICATION	4.571488429261877E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.999863848755886	WITHOUT_CLASSIFICATION	1.361512441140716E-4	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999825605765323	WITHOUT_CLASSIFICATION	1.743942346763811E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997216380350629	WITHOUT_CLASSIFICATION	2.783619649371117E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997216380350629	WITHOUT_CLASSIFICATION	2.783619649371117E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999708649110461	WITHOUT_CLASSIFICATION	2.9135088953751278E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999512775505861	WITHOUT_CLASSIFICATION	4.872244941394272E-5	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9992711216818091	WITHOUT_CLASSIFICATION	7.288783181907774E-4	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999673179909213	WITHOUT_CLASSIFICATION	3.268200907875626E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999824617551858	WITHOUT_CLASSIFICATION	1.7538244814135775E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.987976175934271	WITHOUT_CLASSIFICATION	0.012023824065728904	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.987976175934271	WITHOUT_CLASSIFICATION	0.012023824065728904	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9998046789922097	WITHOUT_CLASSIFICATION	1.9532100779032766E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999173380714689	WITHOUT_CLASSIFICATION	8.266192853110724E-5	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9998766968127162	WITHOUT_CLASSIFICATION	1.2330318728385876E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9992981768662742	WITHOUT_CLASSIFICATION	7.01823133725717E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999522365372338	WITHOUT_CLASSIFICATION	4.7763462766157056E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9968692217160007	WITHOUT_CLASSIFICATION	0.0031307782839993825	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9997645077165417	WITHOUT_CLASSIFICATION	2.354922834583914E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999314510452226	WITHOUT_CLASSIFICATION	6.854895477739036E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9964927527565426	WITHOUT_CLASSIFICATION	0.0035072472434574758	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9997150241391751	WITHOUT_CLASSIFICATION	2.849758608248593E-4	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999547930652847	WITHOUT_CLASSIFICATION	4.520693471527416E-5	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999815958115404	WITHOUT_CLASSIFICATION	1.840418845955839E-5	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9944402296224315	WITHOUT_CLASSIFICATION	0.005559770377568583	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9998290487945561	WITHOUT_CLASSIFICATION	1.7095120544387927E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9995765268217195	WITHOUT_CLASSIFICATION	4.234731782805422E-4	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9997611004984149	WITHOUT_CLASSIFICATION	2.388995015851088E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999883323875439	WITHOUT_CLASSIFICATION	1.1667612456085013E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9978799627277732	WITHOUT_CLASSIFICATION	0.0021200372722267858	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999447779791835	WITHOUT_CLASSIFICATION	5.5222020816486875E-5	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999952057581135	WITHOUT_CLASSIFICATION	4.7942418864904536E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999952057581135	WITHOUT_CLASSIFICATION	4.7942418864904536E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999981925182733	WITHOUT_CLASSIFICATION	1.8074817267956153E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.999937940745895	WITHOUT_CLASSIFICATION	6.205925410500308E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9984773959594667	WITHOUT_CLASSIFICATION	0.0015226040405332138	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9998644000225967	WITHOUT_CLASSIFICATION	1.3559997740322457E-4	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999990096216956	WITHOUT_CLASSIFICATION	9.903783043144995E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999073459761538	WITHOUT_CLASSIFICATION	9.26540238462488E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9998999614175461	WITHOUT_CLASSIFICATION	1.0003858245388885E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999644264219198	WITHOUT_CLASSIFICATION	3.5573578080026407E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9992658626057699	WITHOUT_CLASSIFICATION	7.341373942300783E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999958292301745	WITHOUT_CLASSIFICATION	4.17076982551118E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9997148712750572	WITHOUT_CLASSIFICATION	2.8512872494284094E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.999433925129741	WITHOUT_CLASSIFICATION	5.660748702589662E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9931980339313821	WITHOUT_CLASSIFICATION	0.006801966068617964	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9994777417837798	WITHOUT_CLASSIFICATION	5.222582162202607E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9978043949133969	WITHOUT_CLASSIFICATION	0.0021956050866031042	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9996410854775205	WITHOUT_CLASSIFICATION	3.5891452247947825E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9998659897290176	WITHOUT_CLASSIFICATION	1.3401027098228625E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9998027148030224	WITHOUT_CLASSIFICATION	1.9728519697752642E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999322440443704	WITHOUT_CLASSIFICATION	6.775595562954494E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999522572390482	WITHOUT_CLASSIFICATION	4.77427609517734E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999522572390482	WITHOUT_CLASSIFICATION	4.77427609517734E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9993834674133933	WITHOUT_CLASSIFICATION	6.165325866066328E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9996067742733619	WITHOUT_CLASSIFICATION	3.9322572663812974E-4	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999016335277802	WITHOUT_CLASSIFICATION	9.836647221987917E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999853498369118	WITHOUT_CLASSIFICATION	1.4650163088299027E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9998019738209574	WITHOUT_CLASSIFICATION	1.980261790426982E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999048268172154	WITHOUT_CLASSIFICATION	9.517318278463552E-5	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9988029446118092	WITHOUT_CLASSIFICATION	0.0011970553881908098	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998982350444323	WITHOUT_CLASSIFICATION	1.0176495556770095E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998982350444323	WITHOUT_CLASSIFICATION	1.0176495556770095E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998982350444323	WITHOUT_CLASSIFICATION	1.0176495556770095E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999012416791818	WITHOUT_CLASSIFICATION	9.875832081823944E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998623003011523	WITHOUT_CLASSIFICATION	1.3769969884764712E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9972923727791534	WITHOUT_CLASSIFICATION	0.0027076272208465227	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999531772898853	WITHOUT_CLASSIFICATION	4.682271011468714E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999531772898853	WITHOUT_CLASSIFICATION	4.682271011468714E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999533371203141	WITHOUT_CLASSIFICATION	4.6662879685951634E-5	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996554633814196	WITHOUT_CLASSIFICATION	3.445366185803867E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999402319671765	WITHOUT_CLASSIFICATION	5.9768032823502394E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9983796620125174	WITHOUT_CLASSIFICATION	0.001620337987482691	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999997718710759	WITHOUT_CLASSIFICATION	2.281289240909499E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999936617987214	WITHOUT_CLASSIFICATION	6.338201278654181E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9998743364878651	WITHOUT_CLASSIFICATION	1.25663512134908E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999497172068018	WITHOUT_CLASSIFICATION	5.028279319823415E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999896395761316	WITHOUT_CLASSIFICATION	1.0360423868465201E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9997390944419098	WITHOUT_CLASSIFICATION	2.6090555809022727E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998295405595652	WITHOUT_CLASSIFICATION	1.7045944043483178E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998453410121007	WITHOUT_CLASSIFICATION	1.5465898789937768E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9998453410121007	WITHOUT_CLASSIFICATION	1.5465898789937768E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9998513300174836	WITHOUT_CLASSIFICATION	1.4866998251633883E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999264232084883	WITHOUT_CLASSIFICATION	7.35767915116194E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999264232084883	WITHOUT_CLASSIFICATION	7.35767915116194E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9997610460382779	WITHOUT_CLASSIFICATION	2.3895396172214487E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999025818907668	WITHOUT_CLASSIFICATION	9.741810923325219E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9998818714772764	WITHOUT_CLASSIFICATION	1.1812852272355603E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998186500546035	WITHOUT_CLASSIFICATION	1.8134994539657258E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998186500546035	WITHOUT_CLASSIFICATION	1.8134994539657258E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998834085372563	WITHOUT_CLASSIFICATION	1.1659146274364464E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.999996407216636	WITHOUT_CLASSIFICATION	3.5927833640117555E-6	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9991890938885898	WITHOUT_CLASSIFICATION	8.109061114101512E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9786716903991322	WITHOUT_CLASSIFICATION	0.021328309600867797	DEFECT
// EATM must fix isSet bits.	DEFECT	0.998872562862684	WITHOUT_CLASSIFICATION	0.001127437137316068	DEFECT
// EATM must fix isSet bits.	DEFECT	0.998872562862684	WITHOUT_CLASSIFICATION	0.001127437137316068	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.5750238600542387	DEFECT	0.4249761399457614	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9996379157015663	WITHOUT_CLASSIFICATION	3.6208429843367E-4	DEFECT
// is this an error???	DEFECT	0.9996379157015663	WITHOUT_CLASSIFICATION	3.6208429843367E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9997351656251884	WITHOUT_CLASSIFICATION	2.6483437481153606E-4	DEFECT
