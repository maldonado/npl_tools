// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9996459926114821	WITHOUT_CLASSIFICATION	3.540073885178882E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.999842920356017	WITHOUT_CLASSIFICATION	1.5707964398301336E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999183794505225	WITHOUT_CLASSIFICATION	8.162054947745242E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995012875201318	WITHOUT_CLASSIFICATION	4.987124798681937E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999537693663805	WITHOUT_CLASSIFICATION	4.623063361944077E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9996878214037057	WITHOUT_CLASSIFICATION	3.121785962942887E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998976376295556	WITHOUT_CLASSIFICATION	1.0236237044446655E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999113003121888	WITHOUT_CLASSIFICATION	8.869968781118241E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999633664298894	WITHOUT_CLASSIFICATION	3.663357011058847E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9997202454919432	WITHOUT_CLASSIFICATION	2.7975450805680876E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998851348223955	WITHOUT_CLASSIFICATION	1.1486517760453459E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999320336448873	WITHOUT_CLASSIFICATION	6.796635511276885E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998763790894952	WITHOUT_CLASSIFICATION	1.2362091050476318E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999953803520208	WITHOUT_CLASSIFICATION	4.6196479791949046E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999265844146471	WITHOUT_CLASSIFICATION	7.341558535289415E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998887330874022	WITHOUT_CLASSIFICATION	1.1126691259782602E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999511278087888	WITHOUT_CLASSIFICATION	4.8872191211167426E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9982295250309128	WITHOUT_CLASSIFICATION	0.0017704749690871816	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9989193495125562	WITHOUT_CLASSIFICATION	0.0010806504874437308	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998989571181697	WITHOUT_CLASSIFICATION	1.0104288183038688E-4	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9975566177151839	WITHOUT_CLASSIFICATION	0.0024433822848161134	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9537822858595869	WITHOUT_CLASSIFICATION	0.04621771414041312	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9950900893906077	WITHOUT_CLASSIFICATION	0.004909910609392241	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9465180902633664	WITHOUT_CLASSIFICATION	0.05348190973663362	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998411049513344	WITHOUT_CLASSIFICATION	1.5889504866556492E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998851150752522	WITHOUT_CLASSIFICATION	1.1488492474784984E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999744127761266	WITHOUT_CLASSIFICATION	2.5587223873360104E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997475740184171	WITHOUT_CLASSIFICATION	2.5242598158296554E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9997969453545116	WITHOUT_CLASSIFICATION	2.0305464548838443E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9970837783467396	WITHOUT_CLASSIFICATION	0.002916221653260371	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998411822889794	WITHOUT_CLASSIFICATION	1.588177110206422E-4	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9997392133418942	WITHOUT_CLASSIFICATION	2.607866581057953E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998534997883495	WITHOUT_CLASSIFICATION	1.465002116504721E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9980824134971626	WITHOUT_CLASSIFICATION	0.0019175865028374104	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999090380828872	WITHOUT_CLASSIFICATION	9.09619171127131E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.999982609684428	WITHOUT_CLASSIFICATION	1.73903155720466E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9937147957853958	WITHOUT_CLASSIFICATION	0.006285204214604276	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999849064261885	WITHOUT_CLASSIFICATION	1.5093573811401709E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999949379961751	WITHOUT_CLASSIFICATION	5.062003824907774E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9995589753957401	WITHOUT_CLASSIFICATION	4.4102460425978136E-4	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.999912717619328	WITHOUT_CLASSIFICATION	8.728238067199495E-5	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9928512914805985	WITHOUT_CLASSIFICATION	0.007148708519401412	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999599521745534	WITHOUT_CLASSIFICATION	4.0047825446656846E-5	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9995942270245484	WITHOUT_CLASSIFICATION	4.057729754516905E-4	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9889157566625182	WITHOUT_CLASSIFICATION	0.011084243337481857	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9997202454919432	WITHOUT_CLASSIFICATION	2.7975450805680876E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998851348223955	WITHOUT_CLASSIFICATION	1.1486517760453459E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999320336448873	WITHOUT_CLASSIFICATION	6.796635511276885E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9998522508585073	WITHOUT_CLASSIFICATION	1.4774914149273414E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998763790894952	WITHOUT_CLASSIFICATION	1.2362091050476318E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999953803520208	WITHOUT_CLASSIFICATION	4.6196479791949046E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999265844146471	WITHOUT_CLASSIFICATION	7.341558535289415E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9936178235498189	WITHOUT_CLASSIFICATION	0.006382176450181108	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9936178235498189	WITHOUT_CLASSIFICATION	0.006382176450181108	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9936178235498189	WITHOUT_CLASSIFICATION	0.006382176450181108	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999537693663805	WITHOUT_CLASSIFICATION	4.623063361944077E-5	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9997123719957971	WITHOUT_CLASSIFICATION	2.8762800420298535E-4	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9996525148778632	WITHOUT_CLASSIFICATION	3.474851221368669E-4	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999307300517579	WITHOUT_CLASSIFICATION	6.926994824209238E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9982295250309128	WITHOUT_CLASSIFICATION	0.0017704749690871816	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996681489353602	WITHOUT_CLASSIFICATION	3.318510646397466E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998411049513344	WITHOUT_CLASSIFICATION	1.5889504866556492E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998851150752522	WITHOUT_CLASSIFICATION	1.1488492474784984E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997475740184171	WITHOUT_CLASSIFICATION	2.5242598158296554E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998411822889794	WITHOUT_CLASSIFICATION	1.588177110206422E-4	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9996669088524137	WITHOUT_CLASSIFICATION	3.330911475862405E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9995517143043895	WITHOUT_CLASSIFICATION	4.482856956104701E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9998517132109117	WITHOUT_CLASSIFICATION	1.4828678908833447E-4	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9998829737948576	WITHOUT_CLASSIFICATION	1.1702620514240694E-4	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999239455074563	WITHOUT_CLASSIFICATION	7.605449254368567E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999090380828872	WITHOUT_CLASSIFICATION	9.09619171127131E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9937147957853958	WITHOUT_CLASSIFICATION	0.006285204214604276	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999555313079068	WITHOUT_CLASSIFICATION	4.4468692093259826E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9991387017554902	WITHOUT_CLASSIFICATION	8.612982445097387E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9998808869344806	WITHOUT_CLASSIFICATION	1.1911306551940312E-4	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9998038555056183	WITHOUT_CLASSIFICATION	1.961444943816481E-4	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999036395182497	WITHOUT_CLASSIFICATION	9.636048175042267E-5	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.996372725281391	WITHOUT_CLASSIFICATION	0.003627274718609032	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.6483823730350516	WITHOUT_CLASSIFICATION	0.35161762696494836	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.997351079083218	WITHOUT_CLASSIFICATION	0.0026489209167820144	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999761546779564	WITHOUT_CLASSIFICATION	2.3845322043605077E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9996122109138773	WITHOUT_CLASSIFICATION	3.877890861227334E-4	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999454490380894	WITHOUT_CLASSIFICATION	5.455096191064052E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9997454310732536	WITHOUT_CLASSIFICATION	2.5456892674637153E-4	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9986925303934084	WITHOUT_CLASSIFICATION	0.0013074696065916152	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999761546779564	WITHOUT_CLASSIFICATION	2.3845322043605077E-5	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9996122109138773	WITHOUT_CLASSIFICATION	3.877890861227334E-4	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9987396677212603	WITHOUT_CLASSIFICATION	0.001260332278739631	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9987396677212603	WITHOUT_CLASSIFICATION	0.001260332278739631	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999894258191601	WITHOUT_CLASSIFICATION	1.0574180839887515E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999367958210622	WITHOUT_CLASSIFICATION	6.320417893776157E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999438295996789	WITHOUT_CLASSIFICATION	5.6170400321160796E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999894258191601	WITHOUT_CLASSIFICATION	1.0574180839887515E-4	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999367958210622	WITHOUT_CLASSIFICATION	6.320417893776157E-5	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999140406573049	WITHOUT_CLASSIFICATION	8.59593426950209E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999270310197146	WITHOUT_CLASSIFICATION	7.296898028539841E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999667926655753	WITHOUT_CLASSIFICATION	3.320733442460939E-5	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999667926655753	WITHOUT_CLASSIFICATION	3.320733442460939E-5	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9998959368976981	WITHOUT_CLASSIFICATION	1.0406310230194394E-4	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999677027622965	WITHOUT_CLASSIFICATION	3.229723770343485E-5	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999677027622965	WITHOUT_CLASSIFICATION	3.229723770343485E-5	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9998166096907445	WITHOUT_CLASSIFICATION	1.8339030925559782E-4	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999184778283973	WITHOUT_CLASSIFICATION	8.152217160274622E-5	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999562255282615	WITHOUT_CLASSIFICATION	4.3774471738451854E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999637798433644	WITHOUT_CLASSIFICATION	3.622015663568503E-5	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.999911112542206	WITHOUT_CLASSIFICATION	8.888745779397779E-5	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999756492894336	WITHOUT_CLASSIFICATION	2.435071056639451E-5	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9998280376980797	WITHOUT_CLASSIFICATION	1.7196230192026093E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9998677106354349	WITHOUT_CLASSIFICATION	1.3228936456503117E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999459804787317	WITHOUT_CLASSIFICATION	5.401952126816387E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9995950204346004	WITHOUT_CLASSIFICATION	4.0497956539971877E-4	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999079599189123	WITHOUT_CLASSIFICATION	9.204008108764754E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999176460955286	WITHOUT_CLASSIFICATION	8.23539044714964E-5	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999051964276758	WITHOUT_CLASSIFICATION	9.480357232419127E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9990916689251215	WITHOUT_CLASSIFICATION	9.083310748786006E-4	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9990693789742288	WITHOUT_CLASSIFICATION	9.306210257711101E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999770614802158	WITHOUT_CLASSIFICATION	2.2938519784203884E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9993949045576171	WITHOUT_CLASSIFICATION	6.050954423828688E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997809875775	WITHOUT_CLASSIFICATION	2.1901242245967972E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997809875775	WITHOUT_CLASSIFICATION	2.1901242245967972E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9985618181534656	WITHOUT_CLASSIFICATION	0.0014381818465344107	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9985618181534656	WITHOUT_CLASSIFICATION	0.0014381818465344107	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9997780320347819	WITHOUT_CLASSIFICATION	2.2196796521805018E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9996320011554729	WITHOUT_CLASSIFICATION	3.6799884452714204E-4	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9982393501693333	WITHOUT_CLASSIFICATION	0.0017606498306666349	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999978982912143	WITHOUT_CLASSIFICATION	2.10170878569353E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9990916689251215	WITHOUT_CLASSIFICATION	9.083310748786006E-4	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9993657133602224	WITHOUT_CLASSIFICATION	6.342866397775769E-4	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9998067876724371	WITHOUT_CLASSIFICATION	1.9321232756276883E-4	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999822366678648	WITHOUT_CLASSIFICATION	1.7763332135244372E-5	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999826793735983	WITHOUT_CLASSIFICATION	1.73206264017095E-5	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9990785066878438	WITHOUT_CLASSIFICATION	9.214933121561951E-4	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.99908971746829	WITHOUT_CLASSIFICATION	9.102825317099503E-4	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999696007897223	WITHOUT_CLASSIFICATION	3.039921027758001E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9998994700941499	WITHOUT_CLASSIFICATION	1.0052990585009907E-4	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999418087027343	WITHOUT_CLASSIFICATION	5.819129726561783E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991530346185474	WITHOUT_CLASSIFICATION	8.469653814525074E-4	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999987374528435	WITHOUT_CLASSIFICATION	1.2625471564432862E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999005938996672	WITHOUT_CLASSIFICATION	9.94061003327189E-5	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999005938996672	WITHOUT_CLASSIFICATION	9.94061003327189E-5	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9995464023759415	WITHOUT_CLASSIFICATION	4.535976240584081E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999764328190134	WITHOUT_CLASSIFICATION	2.356718098656194E-5	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9997266274850387	WITHOUT_CLASSIFICATION	2.7337251496123725E-4	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999716694870552	WITHOUT_CLASSIFICATION	2.8330512944855853E-5	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999815637793247	WITHOUT_CLASSIFICATION	1.843622067537236E-5	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999771011684473	WITHOUT_CLASSIFICATION	2.289883155267629E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.999358193729493	WITHOUT_CLASSIFICATION	6.418062705070886E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9998439984474317	WITHOUT_CLASSIFICATION	1.5600155256839145E-4	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9997586399572701	WITHOUT_CLASSIFICATION	2.4136004272984888E-4	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9983939758148637	WITHOUT_CLASSIFICATION	0.0016060241851363999	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9989794672765787	WITHOUT_CLASSIFICATION	0.0010205327234213133	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9988933269545774	WITHOUT_CLASSIFICATION	0.001106673045422571	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9992217143807144	WITHOUT_CLASSIFICATION	7.782856192855281E-4	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9990721531512097	WITHOUT_CLASSIFICATION	9.278468487902321E-4	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9996497582870807	WITHOUT_CLASSIFICATION	3.50241712919301E-4	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9998000896127128	WITHOUT_CLASSIFICATION	1.999103872871385E-4	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999923142076793	WITHOUT_CLASSIFICATION	7.685792320674953E-6	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999936672016212	WITHOUT_CLASSIFICATION	6.332798378838209E-6	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9995625352530952	WITHOUT_CLASSIFICATION	4.374647469047609E-4	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999841449089353	WITHOUT_CLASSIFICATION	1.5855091064793316E-5	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999985978149131	WITHOUT_CLASSIFICATION	1.4021850869649912E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999287878896326	WITHOUT_CLASSIFICATION	7.12121103674401E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.999997144507692	WITHOUT_CLASSIFICATION	2.855492308028074E-6	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9997592513814646	WITHOUT_CLASSIFICATION	2.4074861853536214E-4	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9998400024156927	WITHOUT_CLASSIFICATION	1.599975843073546E-4	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999896377855968	WITHOUT_CLASSIFICATION	1.0362214403164964E-5	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9992177032139172	WITHOUT_CLASSIFICATION	7.822967860828401E-4	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9998165962851193	WITHOUT_CLASSIFICATION	1.8340371488061E-4	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9990490337416873	WITHOUT_CLASSIFICATION	9.509662583127467E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.999987341736065	WITHOUT_CLASSIFICATION	1.2658263935119355E-5	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999970590420755	WITHOUT_CLASSIFICATION	2.9409579245569154E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999970590420755	WITHOUT_CLASSIFICATION	2.9409579245569154E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.999977657721366	WITHOUT_CLASSIFICATION	2.234227863389783E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.999977657721366	WITHOUT_CLASSIFICATION	2.234227863389783E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9957766700704921	WITHOUT_CLASSIFICATION	0.0042233299295079945	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999748145653798	WITHOUT_CLASSIFICATION	2.5185434620103274E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9993020739970465	WITHOUT_CLASSIFICATION	6.979260029533922E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9993020739970465	WITHOUT_CLASSIFICATION	6.979260029533922E-4	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9995953167594437	WITHOUT_CLASSIFICATION	4.046832405562841E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998494467275818	WITHOUT_CLASSIFICATION	1.5055327241811502E-4	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999176460955286	WITHOUT_CLASSIFICATION	8.23539044714964E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999178385770751	WITHOUT_CLASSIFICATION	8.21614229250538E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999178385770751	WITHOUT_CLASSIFICATION	8.21614229250538E-5	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999178385770751	WITHOUT_CLASSIFICATION	8.21614229250538E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998494467275818	WITHOUT_CLASSIFICATION	1.5055327241811502E-4	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9998116200504922	WITHOUT_CLASSIFICATION	1.8837994950784008E-4	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999684554282209	WITHOUT_CLASSIFICATION	3.154457177903813E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9975712548559956	WITHOUT_CLASSIFICATION	0.002428745144004312	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998786697872071	WITHOUT_CLASSIFICATION	1.2133021279295519E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9998097839148624	WITHOUT_CLASSIFICATION	1.9021608513769867E-4	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.999877690330321	WITHOUT_CLASSIFICATION	1.2230966967901818E-4	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.999842920356017	WITHOUT_CLASSIFICATION	1.5707964398301336E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999183794505225	WITHOUT_CLASSIFICATION	8.162054947745242E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995012875201318	WITHOUT_CLASSIFICATION	4.987124798681937E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999537693663805	WITHOUT_CLASSIFICATION	4.623063361944077E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9996878214037057	WITHOUT_CLASSIFICATION	3.121785962942887E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998976376295556	WITHOUT_CLASSIFICATION	1.0236237044446655E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999113003121888	WITHOUT_CLASSIFICATION	8.869968781118241E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9997202454919432	WITHOUT_CLASSIFICATION	2.7975450805680876E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998851348223955	WITHOUT_CLASSIFICATION	1.1486517760453459E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999320336448873	WITHOUT_CLASSIFICATION	6.796635511276885E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998865569102275	WITHOUT_CLASSIFICATION	1.1344308977254068E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998763790894952	WITHOUT_CLASSIFICATION	1.2362091050476318E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999953803520208	WITHOUT_CLASSIFICATION	4.6196479791949046E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999265844146471	WITHOUT_CLASSIFICATION	7.341558535289415E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998887330874022	WITHOUT_CLASSIFICATION	1.1126691259782602E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999511278087888	WITHOUT_CLASSIFICATION	4.8872191211167426E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998279573695128	WITHOUT_CLASSIFICATION	1.7204263048720906E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999944024620491	WITHOUT_CLASSIFICATION	5.5975379508992746E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9982295250309128	WITHOUT_CLASSIFICATION	0.0017704749690871816	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9989193495125562	WITHOUT_CLASSIFICATION	0.0010806504874437308	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998989571181697	WITHOUT_CLASSIFICATION	1.0104288183038688E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996681489353602	WITHOUT_CLASSIFICATION	3.318510646397466E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998411049513344	WITHOUT_CLASSIFICATION	1.5889504866556492E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998851150752522	WITHOUT_CLASSIFICATION	1.1488492474784984E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999744127761266	WITHOUT_CLASSIFICATION	2.5587223873360104E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997475740184171	WITHOUT_CLASSIFICATION	2.5242598158296554E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999934492242822	WITHOUT_CLASSIFICATION	6.55077571774874E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999754062207415	WITHOUT_CLASSIFICATION	2.459377925844965E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998534997883495	WITHOUT_CLASSIFICATION	1.465002116504721E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9997969453545116	WITHOUT_CLASSIFICATION	2.0305464548838443E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998411822889794	WITHOUT_CLASSIFICATION	1.588177110206422E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9970837783467396	WITHOUT_CLASSIFICATION	0.002916221653260371	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9992026774886712	WITHOUT_CLASSIFICATION	7.973225113287902E-4	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9998327369284586	WITHOUT_CLASSIFICATION	1.6726307154138652E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998411822889794	WITHOUT_CLASSIFICATION	1.588177110206422E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999090380828872	WITHOUT_CLASSIFICATION	9.09619171127131E-5	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9980824134971626	WITHOUT_CLASSIFICATION	0.0019175865028374104	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999931832266256	WITHOUT_CLASSIFICATION	6.81677337443747E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9937147957853958	WITHOUT_CLASSIFICATION	0.006285204214604276	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999511319691695	WITHOUT_CLASSIFICATION	4.886803083053265E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9992026774886712	WITHOUT_CLASSIFICATION	7.973225113287902E-4	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9937147957853958	WITHOUT_CLASSIFICATION	0.006285204214604276	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.999633141391775	WITHOUT_CLASSIFICATION	3.6685860822505215E-4	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9992601728494662	WITHOUT_CLASSIFICATION	7.398271505337471E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999307262663981	WITHOUT_CLASSIFICATION	6.927373360198137E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999494478956592	WITHOUT_CLASSIFICATION	5.055210434092335E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9988658113578635	WITHOUT_CLASSIFICATION	0.0011341886421365704	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9997780464255506	WITHOUT_CLASSIFICATION	2.219535744495372E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9988658113578635	WITHOUT_CLASSIFICATION	0.0011341886421365704	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9997511610430533	WITHOUT_CLASSIFICATION	2.488389569466705E-4	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9599401944388556	WITHOUT_CLASSIFICATION	0.040059805561144315	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9885651791518163	WITHOUT_CLASSIFICATION	0.011434820848183693	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.999981401462083	WITHOUT_CLASSIFICATION	1.859853791697047E-5	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9997856963915794	WITHOUT_CLASSIFICATION	2.1430360842060375E-4	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9998925919571149	WITHOUT_CLASSIFICATION	1.0740804288506452E-4	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9998216949007889	WITHOUT_CLASSIFICATION	1.7830509921104505E-4	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9996184574345196	WITHOUT_CLASSIFICATION	3.8154256548044064E-4	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9996850351962316	WITHOUT_CLASSIFICATION	3.1496480376839715E-4	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.99995370424337	WITHOUT_CLASSIFICATION	4.6295756629826755E-5	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999813616235802	WITHOUT_CLASSIFICATION	1.863837641971592E-5	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999543349355831	WITHOUT_CLASSIFICATION	4.566506441695806E-5	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9997087352175265	WITHOUT_CLASSIFICATION	2.912647824736282E-4	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999417128804549	WITHOUT_CLASSIFICATION	5.828711954500586E-5	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.999996232742978	WITHOUT_CLASSIFICATION	3.767257021962146E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999757576880516	WITHOUT_CLASSIFICATION	2.424231194848701E-5	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9974891953661815	WITHOUT_CLASSIFICATION	0.0025108046338184705	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9992636204167633	WITHOUT_CLASSIFICATION	7.36379583236693E-4	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999835397803666	WITHOUT_CLASSIFICATION	1.6460219633409477E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999742341561214	WITHOUT_CLASSIFICATION	2.5765843878579108E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999081983276816	WITHOUT_CLASSIFICATION	9.180167231827676E-5	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999672192298588	WITHOUT_CLASSIFICATION	3.278077014118988E-5	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999531414976752	WITHOUT_CLASSIFICATION	4.685850232484989E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999849064261885	WITHOUT_CLASSIFICATION	1.5093573811401709E-5	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9997271351181609	WITHOUT_CLASSIFICATION	2.728648818390178E-4	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999466411063684	WITHOUT_CLASSIFICATION	5.3358893631575036E-5	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9995386373258381	WITHOUT_CLASSIFICATION	4.6136267416189373E-4	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999670722661043	WITHOUT_CLASSIFICATION	3.292773389572771E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9998293345958312	WITHOUT_CLASSIFICATION	1.7066540416885422E-4	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9999111132980163	WITHOUT_CLASSIFICATION	8.888670198369021E-5	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999669795925162	WITHOUT_CLASSIFICATION	3.302040748379167E-5	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999693587421044	WITHOUT_CLASSIFICATION	3.064125789561932E-5	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999600622286176	WITHOUT_CLASSIFICATION	3.9937771382391895E-5	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999776151884087	WITHOUT_CLASSIFICATION	2.238481159138955E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999550210661184	WITHOUT_CLASSIFICATION	4.497893388152427E-5	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9984804937705951	WITHOUT_CLASSIFICATION	0.0015195062294049543	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999412987113574	WITHOUT_CLASSIFICATION	5.870128864266104E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999620358327768	WITHOUT_CLASSIFICATION	3.796416722323027E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999555313079068	WITHOUT_CLASSIFICATION	4.4468692093259826E-5	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999091421769616	WITHOUT_CLASSIFICATION	9.085782303841153E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9998667150638786	WITHOUT_CLASSIFICATION	1.3328493612140083E-4	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999874812136305	WITHOUT_CLASSIFICATION	1.2518786369469068E-5	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999272843461161	WITHOUT_CLASSIFICATION	7.27156538839303E-5	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9974908228647356	WITHOUT_CLASSIFICATION	0.0025091771352644654	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9644471157680108	WITHOUT_CLASSIFICATION	0.03555288423198922	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999061458371361	WITHOUT_CLASSIFICATION	9.385416286386646E-5	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999229064628838	WITHOUT_CLASSIFICATION	7.709353711614196E-5	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999184778283973	WITHOUT_CLASSIFICATION	8.152217160274622E-5	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9998533942252973	WITHOUT_CLASSIFICATION	1.4660577470267835E-4	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999123978802583	WITHOUT_CLASSIFICATION	8.760211974164639E-5	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999847806640639	WITHOUT_CLASSIFICATION	1.5219335936198663E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999914844673927	WITHOUT_CLASSIFICATION	8.515532607266918E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999920735417858	WITHOUT_CLASSIFICATION	7.926458214319266E-6	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998316973230921	WITHOUT_CLASSIFICATION	1.6830267690801014E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9997452969819743	WITHOUT_CLASSIFICATION	2.5470301802567704E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9995642143570969	WITHOUT_CLASSIFICATION	4.3578564290315324E-4	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.999954244860773	WITHOUT_CLASSIFICATION	4.5755139227040885E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999620682040307	WITHOUT_CLASSIFICATION	3.793179596941969E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999699639474343	WITHOUT_CLASSIFICATION	3.0036052565742952E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.999770614802158	WITHOUT_CLASSIFICATION	2.2938519784203884E-4	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9993949045576171	WITHOUT_CLASSIFICATION	6.050954423828688E-4	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999978982912143	WITHOUT_CLASSIFICATION	2.10170878569353E-5	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998316973230921	WITHOUT_CLASSIFICATION	1.6830267690801014E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999620682040307	WITHOUT_CLASSIFICATION	3.793179596941969E-5	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999699639474343	WITHOUT_CLASSIFICATION	3.0036052565742952E-5	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9996357197079124	WITHOUT_CLASSIFICATION	3.6428029208759535E-4	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999920919555637	WITHOUT_CLASSIFICATION	7.908044436286559E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999841143918992	WITHOUT_CLASSIFICATION	1.5885608100785904E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9998924177202064	WITHOUT_CLASSIFICATION	1.0758227979357671E-4	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999914844673927	WITHOUT_CLASSIFICATION	8.515532607266918E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999920735417858	WITHOUT_CLASSIFICATION	7.926458214319266E-6	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999465065775379	WITHOUT_CLASSIFICATION	5.3493422462094005E-5	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999697002272775	WITHOUT_CLASSIFICATION	3.029977272250499E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.999964367203036	WITHOUT_CLASSIFICATION	3.563279696386763E-5	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998807654041492	WITHOUT_CLASSIFICATION	1.1923459585081554E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.999871909047301	WITHOUT_CLASSIFICATION	1.2809095269905265E-4	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999067505918633	WITHOUT_CLASSIFICATION	9.324940813677594E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.999764601720794	WITHOUT_CLASSIFICATION	2.353982792060193E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9998651219278757	WITHOUT_CLASSIFICATION	1.3487807212435706E-4	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9997756572105158	WITHOUT_CLASSIFICATION	2.2434278948431398E-4	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999799390713074	WITHOUT_CLASSIFICATION	2.0060928692550868E-5	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9958816986577281	WITHOUT_CLASSIFICATION	0.004118301342271819	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9997649737048725	WITHOUT_CLASSIFICATION	2.350262951273729E-4	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.999993221150307	WITHOUT_CLASSIFICATION	6.778849693024569E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999836797796031	WITHOUT_CLASSIFICATION	1.6320220396964662E-5	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999346799781852	WITHOUT_CLASSIFICATION	6.532002181473358E-5	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999896555977413	WITHOUT_CLASSIFICATION	1.0344402258636744E-5	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999914844673927	WITHOUT_CLASSIFICATION	8.515532607266918E-6	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999920735417858	WITHOUT_CLASSIFICATION	7.926458214319266E-6	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.999915525141833	WITHOUT_CLASSIFICATION	8.447485816700557E-5	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9994749182039856	WITHOUT_CLASSIFICATION	5.250817960144086E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999967625057216	WITHOUT_CLASSIFICATION	3.2374942784508614E-6	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999741773151039	WITHOUT_CLASSIFICATION	2.5822684896072725E-5	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999928237431476	WITHOUT_CLASSIFICATION	7.176256852507223E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.999931806226214	WITHOUT_CLASSIFICATION	6.819377378601724E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9896239194935363	WITHOUT_CLASSIFICATION	0.01037608050646369	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9988261099322903	WITHOUT_CLASSIFICATION	0.0011738900677098017	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998686695465443	WITHOUT_CLASSIFICATION	1.3133045345565825E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9998686695465443	WITHOUT_CLASSIFICATION	1.3133045345565825E-4	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9974847951590543	WITHOUT_CLASSIFICATION	0.002515204840945662	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.999548427234843	WITHOUT_CLASSIFICATION	4.5157276515692666E-4	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9970395799263916	WITHOUT_CLASSIFICATION	0.002960420073608416	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9989861060012901	WITHOUT_CLASSIFICATION	0.001013893998709949	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9998767316139285	WITHOUT_CLASSIFICATION	1.2326838607136663E-4	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999641102059122	WITHOUT_CLASSIFICATION	3.588979408776652E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9986362839557115	WITHOUT_CLASSIFICATION	0.0013637160442885286	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9986362839557115	WITHOUT_CLASSIFICATION	0.0013637160442885286	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9998958720768547	WITHOUT_CLASSIFICATION	1.0412792314529194E-4	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9998620335024618	WITHOUT_CLASSIFICATION	1.3796649753818115E-4	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9998977894733502	WITHOUT_CLASSIFICATION	1.022105266497567E-4	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.999802831790542	WITHOUT_CLASSIFICATION	1.9716820945800919E-4	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999035246415185	WITHOUT_CLASSIFICATION	9.647535848148537E-5	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9995421898981576	WITHOUT_CLASSIFICATION	4.578101018424601E-4	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999030455336373	WITHOUT_CLASSIFICATION	9.695446636265666E-5	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9989434244442101	WITHOUT_CLASSIFICATION	0.001056575555789887	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999669959063578	WITHOUT_CLASSIFICATION	3.3004093642262196E-5	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999928770954271	WITHOUT_CLASSIFICATION	7.122904572896746E-6	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9998615617613051	WITHOUT_CLASSIFICATION	1.3843823869490258E-4	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999269856862962	WITHOUT_CLASSIFICATION	7.301431370374155E-5	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999222748911711	WITHOUT_CLASSIFICATION	7.772510882885555E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9997215500468968	WITHOUT_CLASSIFICATION	2.784499531031646E-4	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9995728257855956	WITHOUT_CLASSIFICATION	4.2717421440449725E-4	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999843950098305	WITHOUT_CLASSIFICATION	1.5604990169496934E-5	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999919908961024	WITHOUT_CLASSIFICATION	8.009103897693045E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999843905269516	WITHOUT_CLASSIFICATION	1.560947304836497E-5	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9998673908062458	WITHOUT_CLASSIFICATION	1.326091937541415E-4	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999313310681394	WITHOUT_CLASSIFICATION	6.866893186061499E-5	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9992971897372078	WITHOUT_CLASSIFICATION	7.028102627922269E-4	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999990922097712	WITHOUT_CLASSIFICATION	9.077902287251403E-7	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999701987266689	WITHOUT_CLASSIFICATION	2.9801273331159943E-5	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9998340637977778	WITHOUT_CLASSIFICATION	1.6593620222223895E-4	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999744200537375	WITHOUT_CLASSIFICATION	2.5579946262478266E-5	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999485298911992	WITHOUT_CLASSIFICATION	5.147010880083146E-5	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999040753283608	WITHOUT_CLASSIFICATION	9.592467163920683E-5	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999481635281673	WITHOUT_CLASSIFICATION	5.183647183263631E-5	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9997614520048065	WITHOUT_CLASSIFICATION	2.3854799519350595E-4	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999961092150008	WITHOUT_CLASSIFICATION	3.890784999166085E-6	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999223731815767	WITHOUT_CLASSIFICATION	7.762681842328711E-5	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999655863907587	WITHOUT_CLASSIFICATION	3.441360924119955E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9994852948422676	WITHOUT_CLASSIFICATION	5.147051577325048E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999470168293295	WITHOUT_CLASSIFICATION	5.298317067043037E-5	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9950765597145452	WITHOUT_CLASSIFICATION	0.004923440285454724	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9996746156342585	WITHOUT_CLASSIFICATION	3.253843657415713E-4	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999894938201268	WITHOUT_CLASSIFICATION	1.0506179873179521E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9986128174534681	WITHOUT_CLASSIFICATION	0.001387182546531817	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999622057166664	WITHOUT_CLASSIFICATION	3.779428333361112E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998803199509635	WITHOUT_CLASSIFICATION	1.1968004903646046E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999344146124951	WITHOUT_CLASSIFICATION	6.55853875048271E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9997243914225592	WITHOUT_CLASSIFICATION	2.7560857744083825E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999944779399626	WITHOUT_CLASSIFICATION	5.52206003739777E-5	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9998626648331594	WITHOUT_CLASSIFICATION	1.3733516684068465E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9995760351883215	WITHOUT_CLASSIFICATION	4.2396481167848954E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999344146124951	WITHOUT_CLASSIFICATION	6.55853875048271E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.999944779399626	WITHOUT_CLASSIFICATION	5.52206003739777E-5	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9988077357465774	WITHOUT_CLASSIFICATION	0.0011922642534225412	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999501733816923	WITHOUT_CLASSIFICATION	4.982661830772746E-5	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9998215280363574	WITHOUT_CLASSIFICATION	1.7847196364265176E-4	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999868945214138	WITHOUT_CLASSIFICATION	1.3105478586315744E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998803199509635	WITHOUT_CLASSIFICATION	1.1968004903646046E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998803199509635	WITHOUT_CLASSIFICATION	1.1968004903646046E-4	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999344146124951	WITHOUT_CLASSIFICATION	6.55853875048271E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999213457217401	WITHOUT_CLASSIFICATION	7.865427825999089E-5	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9993736493519213	WITHOUT_CLASSIFICATION	6.263506480787215E-4	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999010065026771	WITHOUT_CLASSIFICATION	9.899349732285695E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999010065026771	WITHOUT_CLASSIFICATION	9.899349732285695E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999928550134754	WITHOUT_CLASSIFICATION	7.144986524600112E-5	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998964377477242	WITHOUT_CLASSIFICATION	1.0356225227569679E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998437347727522	WITHOUT_CLASSIFICATION	1.5626522724778198E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998437347727522	WITHOUT_CLASSIFICATION	1.5626522724778198E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9996838785564928	WITHOUT_CLASSIFICATION	3.1612144350720063E-4	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9998964377477242	WITHOUT_CLASSIFICATION	1.0356225227569679E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998437347727522	WITHOUT_CLASSIFICATION	1.5626522724778198E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9996838785564928	WITHOUT_CLASSIFICATION	3.1612144350720063E-4	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999318633890686	WITHOUT_CLASSIFICATION	6.813661093139374E-5	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9997590676251449	WITHOUT_CLASSIFICATION	2.4093237485525376E-4	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9998416101358402	WITHOUT_CLASSIFICATION	1.58389864159774E-4	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.999873337699374	WITHOUT_CLASSIFICATION	1.2666230062589236E-4	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9997986153286711	WITHOUT_CLASSIFICATION	2.01384671328912E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999814402275018	WITHOUT_CLASSIFICATION	1.855977249817136E-5	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998265704343965	WITHOUT_CLASSIFICATION	1.7342956560344972E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9997815617779214	WITHOUT_CLASSIFICATION	2.1843822207847125E-4	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9968055563596031	WITHOUT_CLASSIFICATION	0.0031944436403968483	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9926077791580797	WITHOUT_CLASSIFICATION	0.007392220841920297	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999787423587209	WITHOUT_CLASSIFICATION	2.125764127913016E-5	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999938146785342	WITHOUT_CLASSIFICATION	6.185321465791477E-6	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999359472583685	WITHOUT_CLASSIFICATION	6.40527416314225E-5	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999875801414289	WITHOUT_CLASSIFICATION	1.2419858571099196E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999392782105139	WITHOUT_CLASSIFICATION	6.072178948608407E-5	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9998186676987866	WITHOUT_CLASSIFICATION	1.8133230121340153E-4	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9977028074815435	WITHOUT_CLASSIFICATION	0.0022971925184565004	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.999812925868317	WITHOUT_CLASSIFICATION	1.8707413168294278E-4	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9996599639979913	WITHOUT_CLASSIFICATION	3.400360020086914E-4	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9998961007002694	WITHOUT_CLASSIFICATION	1.0389929973074026E-4	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999696442170505	WITHOUT_CLASSIFICATION	3.0355782949613254E-5	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999691463451963	WITHOUT_CLASSIFICATION	3.085365480372216E-5	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9998628247833536	WITHOUT_CLASSIFICATION	1.371752166464208E-4	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999678366550806	WITHOUT_CLASSIFICATION	3.2163344919386974E-5	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9998784241969221	WITHOUT_CLASSIFICATION	1.2157580307784805E-4	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9997891676989187	WITHOUT_CLASSIFICATION	2.1083230108131758E-4	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9972592368552874	WITHOUT_CLASSIFICATION	0.002740763144712587	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.999903126018583	WITHOUT_CLASSIFICATION	9.687398141706237E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.999831365558321	WITHOUT_CLASSIFICATION	1.6863444167893537E-4	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999459719489914	WITHOUT_CLASSIFICATION	5.402805100853293E-5	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997630976158337	WITHOUT_CLASSIFICATION	2.369023841661471E-4	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9998809195860378	WITHOUT_CLASSIFICATION	1.1908041396234293E-4	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9998958809053117	WITHOUT_CLASSIFICATION	1.0411909468838225E-4	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9994166535509956	WITHOUT_CLASSIFICATION	5.833464490043279E-4	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999789190447025	WITHOUT_CLASSIFICATION	2.1080955297517738E-5	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998223803391776	WITHOUT_CLASSIFICATION	1.77619660822386E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998136356696559	WITHOUT_CLASSIFICATION	1.863643303441874E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998136356696559	WITHOUT_CLASSIFICATION	1.863643303441874E-4	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998136356696559	WITHOUT_CLASSIFICATION	1.863643303441874E-4	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.999997969407347	WITHOUT_CLASSIFICATION	2.0305926530920712E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9994061397120659	WITHOUT_CLASSIFICATION	5.938602879340027E-4	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9976563612669024	WITHOUT_CLASSIFICATION	0.0023436387330976983	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9997808943286359	WITHOUT_CLASSIFICATION	2.191056713639706E-4	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9998586691443409	WITHOUT_CLASSIFICATION	1.413308556592071E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999730005083562	WITHOUT_CLASSIFICATION	2.6999491643692412E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999813516389846	WITHOUT_CLASSIFICATION	1.8648361015439706E-5	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9995102447140949	WITHOUT_CLASSIFICATION	4.897552859050565E-4	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9997025999173255	WITHOUT_CLASSIFICATION	2.9740008267452534E-4	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9998787123433878	WITHOUT_CLASSIFICATION	1.2128765661218982E-4	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9957787228617572	WITHOUT_CLASSIFICATION	0.0042212771382428155	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9997423198013053	WITHOUT_CLASSIFICATION	2.576801986946508E-4	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999861406001687	WITHOUT_CLASSIFICATION	1.3859399831425405E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9969457272101551	WITHOUT_CLASSIFICATION	0.0030542727898449523	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9996329240718276	WITHOUT_CLASSIFICATION	3.670759281724394E-4	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999925336628145	WITHOUT_CLASSIFICATION	7.4663371854266925E-6	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999528342014221	WITHOUT_CLASSIFICATION	4.71657985778339E-5	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.999984982349111	WITHOUT_CLASSIFICATION	1.5017650888933082E-5	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9995426813518785	WITHOUT_CLASSIFICATION	4.573186481213695E-4	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9996703960866444	WITHOUT_CLASSIFICATION	3.2960391335551756E-4	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9998378814542892	WITHOUT_CLASSIFICATION	1.6211854571084486E-4	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.99967124849233	WITHOUT_CLASSIFICATION	3.287515076700681E-4	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9998534452322597	WITHOUT_CLASSIFICATION	1.465547677402475E-4	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.908963788942073	WITHOUT_CLASSIFICATION	0.09103621105792695	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999907400390127	WITHOUT_CLASSIFICATION	9.25996098732364E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9998705917734946	WITHOUT_CLASSIFICATION	1.2940822650532477E-4	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999515796467658	WITHOUT_CLASSIFICATION	4.84203532341361E-5	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999534601784985	WITHOUT_CLASSIFICATION	4.6539821501413285E-5	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999794727282748	WITHOUT_CLASSIFICATION	2.0527271725189246E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999709456080057	WITHOUT_CLASSIFICATION	2.9054391994283418E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9998983689588652	WITHOUT_CLASSIFICATION	1.0163104113480844E-4	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9322202808034151	WITHOUT_CLASSIFICATION	0.06777971919658479	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999631953702919	WITHOUT_CLASSIFICATION	3.6804629708187614E-5	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9998362464097897	WITHOUT_CLASSIFICATION	1.637535902102273E-4	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9997471877791106	WITHOUT_CLASSIFICATION	2.528122208893552E-4	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.999032029653901	WITHOUT_CLASSIFICATION	9.679703460989372E-4	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999997708330344	WITHOUT_CLASSIFICATION	2.2916696555842202E-7	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999219912356896	WITHOUT_CLASSIFICATION	7.800876431039402E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999814894962957	WITHOUT_CLASSIFICATION	1.8510503704382645E-5	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999007189008938	WITHOUT_CLASSIFICATION	9.92810991062401E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9998956776936626	WITHOUT_CLASSIFICATION	1.0432230633737824E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999184708956488	WITHOUT_CLASSIFICATION	8.152910435118288E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.999931806226214	WITHOUT_CLASSIFICATION	6.819377378601724E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999934707329855	WITHOUT_CLASSIFICATION	6.529267014539638E-6	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.999940230613196	WITHOUT_CLASSIFICATION	5.976938680396164E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9996191295801365	WITHOUT_CLASSIFICATION	3.8087041986342485E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9968141383620076	WITHOUT_CLASSIFICATION	0.003185861637992428	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9827844137637538	WITHOUT_CLASSIFICATION	0.017215586236246163	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9998078030270702	WITHOUT_CLASSIFICATION	1.9219697292977196E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999428759061041	WITHOUT_CLASSIFICATION	5.712409389578228E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999921010646511	WITHOUT_CLASSIFICATION	7.898935348914205E-6	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9995989242493564	WITHOUT_CLASSIFICATION	4.010757506436363E-4	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9998933446821707	WITHOUT_CLASSIFICATION	1.0665531782938403E-4	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9998962202225008	WITHOUT_CLASSIFICATION	1.0377977749928087E-4	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999701328528682	WITHOUT_CLASSIFICATION	2.9867147131819376E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999335794940413	WITHOUT_CLASSIFICATION	6.642050595870598E-5	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9990802888685617	WITHOUT_CLASSIFICATION	9.197111314381523E-4	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.999987265432094	WITHOUT_CLASSIFICATION	1.2734567905889997E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999658591232422	WITHOUT_CLASSIFICATION	3.4140876757746606E-5	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9997470413647076	WITHOUT_CLASSIFICATION	2.529586352924053E-4	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9996057536981215	WITHOUT_CLASSIFICATION	3.942463018784769E-4	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9997876725152718	WITHOUT_CLASSIFICATION	2.1232748472821704E-4	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.99989525160174	WITHOUT_CLASSIFICATION	1.0474839826007757E-4	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9995967681846539	WITHOUT_CLASSIFICATION	4.032318153460341E-4	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9907794496090891	WITHOUT_CLASSIFICATION	0.009220550390910765	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999178746173013	WITHOUT_CLASSIFICATION	8.212538269869846E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9998669981596916	WITHOUT_CLASSIFICATION	1.3300184030840776E-4	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999645594591526	WITHOUT_CLASSIFICATION	3.5440540847343026E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999645594591526	WITHOUT_CLASSIFICATION	3.5440540847343026E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999178746173013	WITHOUT_CLASSIFICATION	8.212538269869846E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999572517489597	WITHOUT_CLASSIFICATION	4.274825104033048E-5	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9997669891235405	WITHOUT_CLASSIFICATION	2.3301087645959218E-4	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9997669891235405	WITHOUT_CLASSIFICATION	2.3301087645959218E-4	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999468343918972	WITHOUT_CLASSIFICATION	5.316560810281861E-5	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9998901309906036	WITHOUT_CLASSIFICATION	1.0986900939627678E-4	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.997858392205661	WITHOUT_CLASSIFICATION	0.002141607794339085	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9953900339425193	WITHOUT_CLASSIFICATION	0.004609966057480583	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.999875516142799	WITHOUT_CLASSIFICATION	1.2448385720098597E-4	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999554710075289	WITHOUT_CLASSIFICATION	4.452899247110122E-5	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9997418321621273	WITHOUT_CLASSIFICATION	2.581678378727443E-4	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9995870870013892	WITHOUT_CLASSIFICATION	4.129129986108122E-4	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9997005418202187	WITHOUT_CLASSIFICATION	2.9945817978128145E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999492438950043	WITHOUT_CLASSIFICATION	5.075610499576979E-5	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999906491053452	WITHOUT_CLASSIFICATION	9.350894654872492E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999643560409727	WITHOUT_CLASSIFICATION	3.5643959027258876E-5	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999012318471642	WITHOUT_CLASSIFICATION	9.876815283586983E-5	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999457567728799	WITHOUT_CLASSIFICATION	5.4243227120046446E-5	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9997971855868715	WITHOUT_CLASSIFICATION	2.0281441312841846E-4	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999829507974161	WITHOUT_CLASSIFICATION	1.7049202583972593E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9970126608232522	WITHOUT_CLASSIFICATION	0.0029873391767478745	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9950477018357202	WITHOUT_CLASSIFICATION	0.004952298164279784	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9997823188404036	WITHOUT_CLASSIFICATION	2.1768115959638594E-4	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999790520474524	WITHOUT_CLASSIFICATION	2.0947952547571766E-5	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9996579761122503	WITHOUT_CLASSIFICATION	3.420238877497197E-4	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998230845706444	WITHOUT_CLASSIFICATION	1.769154293555872E-4	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999935119391126	WITHOUT_CLASSIFICATION	6.488060887400784E-5	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999935119391126	WITHOUT_CLASSIFICATION	6.488060887400784E-5	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9994006064289663	WITHOUT_CLASSIFICATION	5.99393571033644E-4	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9984255251342611	WITHOUT_CLASSIFICATION	0.0015744748657389067	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.999807490664582	WITHOUT_CLASSIFICATION	1.925093354179426E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998874113808662	WITHOUT_CLASSIFICATION	1.1258861913381572E-4	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9991237816849807	WITHOUT_CLASSIFICATION	8.762183150192058E-4	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.999984541484892	WITHOUT_CLASSIFICATION	1.5458515108004787E-5	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999249568716099	WITHOUT_CLASSIFICATION	7.504312839020067E-5	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999464748381068	WITHOUT_CLASSIFICATION	5.352516189314912E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9996027744763594	WITHOUT_CLASSIFICATION	3.972255236405551E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9995237463852249	WITHOUT_CLASSIFICATION	4.762536147750863E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999811503948328	WITHOUT_CLASSIFICATION	1.8849605167160658E-5	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9982756063217232	WITHOUT_CLASSIFICATION	0.0017243936782768302	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9998803874746593	WITHOUT_CLASSIFICATION	1.1961252534063629E-4	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9997606369893064	WITHOUT_CLASSIFICATION	2.3936301069366314E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999690239274593	WITHOUT_CLASSIFICATION	3.097607254056741E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.999987881819634	WITHOUT_CLASSIFICATION	1.2118180366074474E-5	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9907985792672247	WITHOUT_CLASSIFICATION	0.009201420732775427	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.999987881819634	WITHOUT_CLASSIFICATION	1.2118180366074474E-5	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9997926729625912	WITHOUT_CLASSIFICATION	2.0732703740878445E-4	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999169210676049	WITHOUT_CLASSIFICATION	8.307893239508526E-5	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.999997837573347	WITHOUT_CLASSIFICATION	2.1624266530523118E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9996133276636683	WITHOUT_CLASSIFICATION	3.86672336331722E-4	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9997287849487214	WITHOUT_CLASSIFICATION	2.712150512785068E-4	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999454430605252	WITHOUT_CLASSIFICATION	5.4556939474784226E-5	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9998990875614198	WITHOUT_CLASSIFICATION	1.0091243858021888E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.99998549419928	WITHOUT_CLASSIFICATION	1.4505800720063944E-5	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9998343539547253	WITHOUT_CLASSIFICATION	1.6564604527466965E-4	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.999937460328275	WITHOUT_CLASSIFICATION	6.253967172494241E-5	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9997804288359857	WITHOUT_CLASSIFICATION	2.195711640142384E-4	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999477176367785	WITHOUT_CLASSIFICATION	5.228236322149633E-5	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999983285421532	WITHOUT_CLASSIFICATION	1.6714578467647543E-6	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999227331768809	WITHOUT_CLASSIFICATION	7.72668231191378E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999233981283999	WITHOUT_CLASSIFICATION	7.660187160013421E-5	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9998106135588262	WITHOUT_CLASSIFICATION	1.8938644117394733E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9998877743332721	WITHOUT_CLASSIFICATION	1.1222566672777887E-4	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999889971520411	WITHOUT_CLASSIFICATION	1.1002847958855046E-5	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999422235851566	WITHOUT_CLASSIFICATION	5.777641484345314E-5	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.999871541394878	WITHOUT_CLASSIFICATION	1.2845860512209064E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9993565535791894	WITHOUT_CLASSIFICATION	6.434464208105963E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999976105472912	WITHOUT_CLASSIFICATION	2.3894527087819746E-6	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9998937612362101	WITHOUT_CLASSIFICATION	1.0623876378979959E-4	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999086544001172	WITHOUT_CLASSIFICATION	9.134559988282148E-5	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.999842920356017	WITHOUT_CLASSIFICATION	1.5707964398301336E-4	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999183794505225	WITHOUT_CLASSIFICATION	8.162054947745242E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9996027744763594	WITHOUT_CLASSIFICATION	3.972255236405551E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9995237463852249	WITHOUT_CLASSIFICATION	4.762536147750863E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999811503948328	WITHOUT_CLASSIFICATION	1.8849605167160658E-5	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999488122668774	WITHOUT_CLASSIFICATION	5.118773312267942E-5	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9995691250177737	WITHOUT_CLASSIFICATION	4.3087498222625105E-4	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999473808085824	WITHOUT_CLASSIFICATION	5.261919141758964E-5	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9996481362618023	WITHOUT_CLASSIFICATION	3.5186373819769964E-4	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9998927918313657	WITHOUT_CLASSIFICATION	1.0720816863421554E-4	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9996716082927583	WITHOUT_CLASSIFICATION	3.28391707241753E-4	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999063487839365	WITHOUT_CLASSIFICATION	9.365121606355266E-5	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999325220716986	WITHOUT_CLASSIFICATION	6.747792830138484E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999070511639037	WITHOUT_CLASSIFICATION	9.294883609636375E-5	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999352088432474	WITHOUT_CLASSIFICATION	6.479115675269279E-5	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997511008087391	WITHOUT_CLASSIFICATION	2.48899191260992E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997511008087391	WITHOUT_CLASSIFICATION	2.48899191260992E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999604550835117	WITHOUT_CLASSIFICATION	3.9544916488298867E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99974532963092	WITHOUT_CLASSIFICATION	2.5467036908006976E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999985829862986	WITHOUT_CLASSIFICATION	1.417013701403228E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999503497209921	WITHOUT_CLASSIFICATION	4.965027900800087E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9996080632812019	WITHOUT_CLASSIFICATION	3.919367187981585E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999467210530196	WITHOUT_CLASSIFICATION	5.327894698028741E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999321435231829	WITHOUT_CLASSIFICATION	6.78564768170732E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999790228899348	WITHOUT_CLASSIFICATION	2.0977110065209648E-5	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999053834012579	WITHOUT_CLASSIFICATION	9.461659874219907E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999970824709173	WITHOUT_CLASSIFICATION	2.9175290827157617E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999796597244932	WITHOUT_CLASSIFICATION	2.0340275506845777E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999659679879607	WITHOUT_CLASSIFICATION	3.4032012039294924E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999980659445561	WITHOUT_CLASSIFICATION	1.9340554438884497E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978884875175702	WITHOUT_CLASSIFICATION	0.0021115124824298303	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994226330511328	WITHOUT_CLASSIFICATION	5.773669488671704E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998104969174324	WITHOUT_CLASSIFICATION	1.8950308256760381E-4	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999633664298894	WITHOUT_CLASSIFICATION	3.663357011058847E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9995012875201318	WITHOUT_CLASSIFICATION	4.987124798681937E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999537693663805	WITHOUT_CLASSIFICATION	4.623063361944077E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9996878214037057	WITHOUT_CLASSIFICATION	3.121785962942887E-4	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9998976376295556	WITHOUT_CLASSIFICATION	1.0236237044446655E-4	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999113003121888	WITHOUT_CLASSIFICATION	8.869968781118241E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9997202454919432	WITHOUT_CLASSIFICATION	2.7975450805680876E-4	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9998851348223955	WITHOUT_CLASSIFICATION	1.1486517760453459E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999320336448873	WITHOUT_CLASSIFICATION	6.796635511276885E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998865569102275	WITHOUT_CLASSIFICATION	1.1344308977254068E-4	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9998763790894952	WITHOUT_CLASSIFICATION	1.2362091050476318E-4	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.999953803520208	WITHOUT_CLASSIFICATION	4.6196479791949046E-5	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999265844146471	WITHOUT_CLASSIFICATION	7.341558535289415E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998887330874022	WITHOUT_CLASSIFICATION	1.1126691259782602E-4	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999511278087888	WITHOUT_CLASSIFICATION	4.8872191211167426E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9982295250309128	WITHOUT_CLASSIFICATION	0.0017704749690871816	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9989193495125562	WITHOUT_CLASSIFICATION	0.0010806504874437308	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998989571181697	WITHOUT_CLASSIFICATION	1.0104288183038688E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996681489353602	WITHOUT_CLASSIFICATION	3.318510646397466E-4	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998411049513344	WITHOUT_CLASSIFICATION	1.5889504866556492E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998851150752522	WITHOUT_CLASSIFICATION	1.1488492474784984E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999744127761266	WITHOUT_CLASSIFICATION	2.5587223873360104E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999934492242822	WITHOUT_CLASSIFICATION	6.55077571774874E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9997969453545116	WITHOUT_CLASSIFICATION	2.0305464548838443E-4	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9970837783467396	WITHOUT_CLASSIFICATION	0.002916221653260371	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9992026774886712	WITHOUT_CLASSIFICATION	7.973225113287902E-4	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9998534997883495	WITHOUT_CLASSIFICATION	1.465002116504721E-4	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9980824134971626	WITHOUT_CLASSIFICATION	0.0019175865028374104	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999090380828872	WITHOUT_CLASSIFICATION	9.09619171127131E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9937147957853958	WITHOUT_CLASSIFICATION	0.006285204214604276	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999604550835117	WITHOUT_CLASSIFICATION	3.9544916488298867E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99974532963092	WITHOUT_CLASSIFICATION	2.5467036908006976E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999985829862986	WITHOUT_CLASSIFICATION	1.417013701403228E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999503497209921	WITHOUT_CLASSIFICATION	4.965027900800087E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999321435231829	WITHOUT_CLASSIFICATION	6.78564768170732E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999790228899348	WITHOUT_CLASSIFICATION	2.0977110065209648E-5	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9988705578766195	WITHOUT_CLASSIFICATION	0.0011294421233805174	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999307262663981	WITHOUT_CLASSIFICATION	6.927373360198137E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999494478956592	WITHOUT_CLASSIFICATION	5.055210434092335E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999796597244932	WITHOUT_CLASSIFICATION	2.0340275506845777E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999659679879607	WITHOUT_CLASSIFICATION	3.4032012039294924E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999980659445561	WITHOUT_CLASSIFICATION	1.9340554438884497E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978884875175702	WITHOUT_CLASSIFICATION	0.0021115124824298303	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998104969174324	WITHOUT_CLASSIFICATION	1.8950308256760381E-4	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.999886183300711	WITHOUT_CLASSIFICATION	1.1381669928905708E-4	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.999886183300711	WITHOUT_CLASSIFICATION	1.1381669928905708E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.999977627055101	WITHOUT_CLASSIFICATION	2.2372944899115452E-5	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9997715328675953	WITHOUT_CLASSIFICATION	2.284671324046022E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999595738937849	WITHOUT_CLASSIFICATION	4.042610621517628E-5	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999178527234687	WITHOUT_CLASSIFICATION	8.214727653136066E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997986905062077	WITHOUT_CLASSIFICATION	2.013094937923005E-4	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9996459926114821	WITHOUT_CLASSIFICATION	3.540073885178882E-4	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997630496021342	WITHOUT_CLASSIFICATION	2.3695039786580566E-4	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999032689144953	WITHOUT_CLASSIFICATION	9.673108550460933E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9997630496021342	WITHOUT_CLASSIFICATION	2.3695039786580566E-4	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9999943842069212	WITHOUT_CLASSIFICATION	5.615793078734164E-6	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999434595612372	WITHOUT_CLASSIFICATION	5.65404387628316E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999477905715942	WITHOUT_CLASSIFICATION	5.220942840581181E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999477905715942	WITHOUT_CLASSIFICATION	5.220942840581181E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9998037275660357	WITHOUT_CLASSIFICATION	1.962724339642587E-4	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9996115354428754	WITHOUT_CLASSIFICATION	3.884645571245607E-4	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999306376728141	WITHOUT_CLASSIFICATION	6.936232718582404E-5	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999402245769553	WITHOUT_CLASSIFICATION	5.977542304478225E-5	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9998974695466838	WITHOUT_CLASSIFICATION	1.0253045331620925E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999859129439586	WITHOUT_CLASSIFICATION	1.4087056041470708E-5	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.998795590560876	WITHOUT_CLASSIFICATION	0.001204409439124033	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999871451157472	WITHOUT_CLASSIFICATION	1.2854884252969494E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9998610321572878	WITHOUT_CLASSIFICATION	1.389678427122522E-4	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.999900623101943	WITHOUT_CLASSIFICATION	9.937689805695988E-5	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999881210037068	WITHOUT_CLASSIFICATION	1.1878996293308695E-5	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999645053578399	WITHOUT_CLASSIFICATION	3.54946421600385E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999100036800905	WITHOUT_CLASSIFICATION	8.99963199094815E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999100036800905	WITHOUT_CLASSIFICATION	8.99963199094815E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999960474097388	WITHOUT_CLASSIFICATION	3.952590261199535E-5	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9997306391858715	WITHOUT_CLASSIFICATION	2.6936081412858476E-4	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9971957743980799	WITHOUT_CLASSIFICATION	0.002804225601920079	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9988596076515868	WITHOUT_CLASSIFICATION	0.0011403923484132577	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9975763664130547	WITHOUT_CLASSIFICATION	0.0024236335869452998	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999747000813166	WITHOUT_CLASSIFICATION	2.5299918683459302E-5	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999655477774979	WITHOUT_CLASSIFICATION	3.445222250207443E-5	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9998989193628598	WITHOUT_CLASSIFICATION	1.0108063714020452E-4	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999700021607172	WITHOUT_CLASSIFICATION	2.9997839282754563E-5	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999648563909158	WITHOUT_CLASSIFICATION	3.514360908419793E-5	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999983060461345	WITHOUT_CLASSIFICATION	1.6939538655007693E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999350574941036	WITHOUT_CLASSIFICATION	6.494250589644765E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999460606388212	WITHOUT_CLASSIFICATION	5.393936117881276E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9694587125616045	WITHOUT_CLASSIFICATION	0.03054128743839537	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998874113808662	WITHOUT_CLASSIFICATION	1.1258861913381572E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.999746913722458	WITHOUT_CLASSIFICATION	2.530862775419042E-4	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9996652086022098	WITHOUT_CLASSIFICATION	3.3479139779026636E-4	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999689674555938	WITHOUT_CLASSIFICATION	3.103254440620383E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9927170408128423	WITHOUT_CLASSIFICATION	0.007282959187157642	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.999668079248141	WITHOUT_CLASSIFICATION	3.319207518590496E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999327807611192	WITHOUT_CLASSIFICATION	6.721923888070234E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999178382431356	WITHOUT_CLASSIFICATION	8.216175686436907E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9997153153906749	WITHOUT_CLASSIFICATION	2.84684609325117E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9997902970799812	WITHOUT_CLASSIFICATION	2.0970292001887261E-4	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999124815697331	WITHOUT_CLASSIFICATION	8.75184302668686E-5	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999124815697331	WITHOUT_CLASSIFICATION	8.75184302668686E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9962880740583838	WITHOUT_CLASSIFICATION	0.0037119259416162126	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9991834921012607	WITHOUT_CLASSIFICATION	8.165078987392526E-4	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999304481395437	WITHOUT_CLASSIFICATION	6.955186045633883E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9975723628742301	WITHOUT_CLASSIFICATION	0.002427637125769842	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999689131213215	WITHOUT_CLASSIFICATION	3.1086878678497696E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9997985210036832	WITHOUT_CLASSIFICATION	2.0147899631686985E-4	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9976356181084013	WITHOUT_CLASSIFICATION	0.0023643818915986183	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999731829526736	WITHOUT_CLASSIFICATION	2.681704732643661E-5	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.999849250843128	WITHOUT_CLASSIFICATION	1.5074915687199707E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999238773106038	WITHOUT_CLASSIFICATION	7.612268939622292E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9994599578574186	WITHOUT_CLASSIFICATION	5.40042142581402E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999810850046343	WITHOUT_CLASSIFICATION	1.8914995365651246E-5	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9954787993459504	WITHOUT_CLASSIFICATION	0.004521200654049558	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9996471162483649	WITHOUT_CLASSIFICATION	3.5288375163504957E-4	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999458850470871	WITHOUT_CLASSIFICATION	5.411495291290582E-5	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999995802826882	WITHOUT_CLASSIFICATION	4.1971731179366774E-7	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9229003961906198	WITHOUT_CLASSIFICATION	0.07709960380938015	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.8139078974560607	WITHOUT_CLASSIFICATION	0.1860921025439392	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9994295500411141	WITHOUT_CLASSIFICATION	5.704499588859028E-4	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999016466482621	WITHOUT_CLASSIFICATION	9.835335173791229E-5	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.999951084381603	WITHOUT_CLASSIFICATION	4.8915618397069664E-5	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9998865569102275	WITHOUT_CLASSIFICATION	1.1344308977254068E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998279573695128	WITHOUT_CLASSIFICATION	1.7204263048720906E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9992026774886712	WITHOUT_CLASSIFICATION	7.973225113287902E-4	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999178527234687	WITHOUT_CLASSIFICATION	8.214727653136066E-5	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9983593541439917	WITHOUT_CLASSIFICATION	0.0016406458560083229	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9968969771320628	WITHOUT_CLASSIFICATION	0.003103022867937227	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999113003121888	WITHOUT_CLASSIFICATION	8.869968781118241E-5	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9982076552137125	WITHOUT_CLASSIFICATION	0.0017923447862876038	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.998921278190266	WITHOUT_CLASSIFICATION	0.0010787218097339565	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9998888898843173	WITHOUT_CLASSIFICATION	1.111101156826678E-4	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999667703680314	WITHOUT_CLASSIFICATION	3.32296319686284E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9992026774886712	WITHOUT_CLASSIFICATION	7.973225113287902E-4	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9972510260428608	WITHOUT_CLASSIFICATION	0.002748973957139237	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9988261099322903	WITHOUT_CLASSIFICATION	0.0011738900677098017	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9998439075836449	WITHOUT_CLASSIFICATION	1.5609241635511953E-4	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999683281549203	WITHOUT_CLASSIFICATION	3.167184507970642E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9998428035590016	WITHOUT_CLASSIFICATION	1.571964409984172E-4	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999780683159928	WITHOUT_CLASSIFICATION	2.1931684007216743E-5	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999750518501432	WITHOUT_CLASSIFICATION	2.4948149856716773E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9998803199509635	WITHOUT_CLASSIFICATION	1.1968004903646046E-4	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.99967928410087	WITHOUT_CLASSIFICATION	3.2071589912996846E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999928550134754	WITHOUT_CLASSIFICATION	7.144986524600112E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999928550134754	WITHOUT_CLASSIFICATION	7.144986524600112E-5	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999928550134754	WITHOUT_CLASSIFICATION	7.144986524600112E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9998437347727522	WITHOUT_CLASSIFICATION	1.5626522724778198E-4	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998861680677815	WITHOUT_CLASSIFICATION	1.1383193221851042E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9997737514103313	WITHOUT_CLASSIFICATION	2.262485896687736E-4	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999814402275018	WITHOUT_CLASSIFICATION	1.855977249817136E-5	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999918015281084	WITHOUT_CLASSIFICATION	8.198471891624612E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9998296981923358	WITHOUT_CLASSIFICATION	1.7030180766432047E-4	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999497710864655	WITHOUT_CLASSIFICATION	5.022891353450032E-4	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9998702960944359	WITHOUT_CLASSIFICATION	1.2970390556409978E-4	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999084113339489	WITHOUT_CLASSIFICATION	9.15886660510634E-5	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999998713847374	WITHOUT_CLASSIFICATION	1.2861526257326598E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999393334118428	WITHOUT_CLASSIFICATION	6.066658815710635E-5	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999378923628418	WITHOUT_CLASSIFICATION	6.21076371582236E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9998616216805125	WITHOUT_CLASSIFICATION	1.3837831948757006E-4	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999970759150784	WITHOUT_CLASSIFICATION	2.924084921733178E-6	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9997865087263759	WITHOUT_CLASSIFICATION	2.1349127362406924E-4	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9998929432528078	WITHOUT_CLASSIFICATION	1.0705674719223815E-4	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9996949658783927	WITHOUT_CLASSIFICATION	3.050341216073276E-4	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9997819832093483	WITHOUT_CLASSIFICATION	2.1801679065176004E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997999097946417	WITHOUT_CLASSIFICATION	2.0009020535832194E-4	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999464109513296	WITHOUT_CLASSIFICATION	5.358904867047245E-5	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9998136356696559	WITHOUT_CLASSIFICATION	1.863643303441874E-4	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999137750898721	WITHOUT_CLASSIFICATION	8.622491012786548E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999505420673284	WITHOUT_CLASSIFICATION	4.9457932671572505E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999505420673284	WITHOUT_CLASSIFICATION	4.9457932671572505E-5	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999760437672641	WITHOUT_CLASSIFICATION	2.395623273577149E-5	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.999931016040792	WITHOUT_CLASSIFICATION	6.898395920794216E-5	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9996438806222306	WITHOUT_CLASSIFICATION	3.5611937776932695E-4	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999818636079036	WITHOUT_CLASSIFICATION	1.8136392096389652E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999930168690452	WITHOUT_CLASSIFICATION	6.983130954821554E-6	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999486441412004	WITHOUT_CLASSIFICATION	5.1355858799504694E-5	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9993785078594044	WITHOUT_CLASSIFICATION	6.214921405956556E-4	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999888978272883	WITHOUT_CLASSIFICATION	1.1102172711802306E-5	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9993913903132978	WITHOUT_CLASSIFICATION	6.086096867021368E-4	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9983547559108026	WITHOUT_CLASSIFICATION	0.0016452440891974616	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9989841316406705	WITHOUT_CLASSIFICATION	0.0010158683593295397	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9997777310472866	WITHOUT_CLASSIFICATION	2.2226895271347833E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999592575960805	WITHOUT_CLASSIFICATION	4.0742403919481755E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999643560409727	WITHOUT_CLASSIFICATION	3.5643959027258876E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999643560409727	WITHOUT_CLASSIFICATION	3.5643959027258876E-5	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9997323548789276	WITHOUT_CLASSIFICATION	2.676451210723574E-4	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.997304424200904	WITHOUT_CLASSIFICATION	0.0026955757990959925	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9992982764154269	WITHOUT_CLASSIFICATION	7.017235845731135E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999790071873054	WITHOUT_CLASSIFICATION	2.0992812694687925E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999790071873054	WITHOUT_CLASSIFICATION	2.0992812694687925E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999790071873054	WITHOUT_CLASSIFICATION	2.0992812694687925E-5	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.999969729504923	WITHOUT_CLASSIFICATION	3.0270495077000344E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999949287646988	WITHOUT_CLASSIFICATION	5.071235301205689E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9982756063217232	WITHOUT_CLASSIFICATION	0.0017243936782768302	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999533081763506	WITHOUT_CLASSIFICATION	4.669182364940155E-4	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999802873753771	WITHOUT_CLASSIFICATION	1.971262462277373E-5	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999085554639716	WITHOUT_CLASSIFICATION	9.144453602838941E-5	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999260434125509	WITHOUT_CLASSIFICATION	7.39565874491921E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999148057479187	WITHOUT_CLASSIFICATION	8.519425208123961E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999148057479187	WITHOUT_CLASSIFICATION	8.519425208123961E-5	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999919808206847	WITHOUT_CLASSIFICATION	8.019179315388591E-6	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999662157844376	WITHOUT_CLASSIFICATION	3.378421556233463E-5	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9997035080211488	WITHOUT_CLASSIFICATION	2.964919788512299E-4	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9971838301512448	WITHOUT_CLASSIFICATION	0.0028161698487553025	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999969855956317	WITHOUT_CLASSIFICATION	3.0144043683213627E-6	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9996334110314389	WITHOUT_CLASSIFICATION	3.6658896856110273E-4	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9997511008087391	WITHOUT_CLASSIFICATION	2.48899191260992E-4	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9996080632812019	WITHOUT_CLASSIFICATION	3.919367187981585E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999467210530196	WITHOUT_CLASSIFICATION	5.327894698028741E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999970824709173	WITHOUT_CLASSIFICATION	2.9175290827157617E-6	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994226330511328	WITHOUT_CLASSIFICATION	5.773669488671704E-4	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999590562076054	WITHOUT_CLASSIFICATION	4.094379239462367E-5	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999319833892907	WITHOUT_CLASSIFICATION	6.8016610709312E-5	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9998858271421303	WITHOUT_CLASSIFICATION	1.141728578697074E-4	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9997986905062077	WITHOUT_CLASSIFICATION	2.013094937923005E-4	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.999960474097388	WITHOUT_CLASSIFICATION	3.952590261199535E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9998682121613042	WITHOUT_CLASSIFICATION	1.317878386958503E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999075609251086	WITHOUT_CLASSIFICATION	9.243907489139506E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999996915032683	WITHOUT_CLASSIFICATION	3.0849673163374247E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9997501261861729	WITHOUT_CLASSIFICATION	2.498738138270864E-4	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9982746103354027	WITHOUT_CLASSIFICATION	0.0017253896645973894	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999902283244322	WITHOUT_CLASSIFICATION	9.771675567811108E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999835083467338	WITHOUT_CLASSIFICATION	1.649165326619871E-5	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9985955015652354	WITHOUT_CLASSIFICATION	0.001404498434764678	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999985842233304	WITHOUT_CLASSIFICATION	1.4157766695952003E-6	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9998376234898777	WITHOUT_CLASSIFICATION	1.6237651012240462E-4	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9998376234898777	WITHOUT_CLASSIFICATION	1.6237651012240462E-4	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9962214219876399	WITHOUT_CLASSIFICATION	0.0037785780123601974	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999287902379852	WITHOUT_CLASSIFICATION	7.120976201489247E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9994257514735732	WITHOUT_CLASSIFICATION	5.742485264269373E-4	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999081413145937	WITHOUT_CLASSIFICATION	9.185868540632633E-5	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999081413145937	WITHOUT_CLASSIFICATION	9.185868540632633E-5	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999854274759492	WITHOUT_CLASSIFICATION	1.4572524050905518E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9994555884146793	WITHOUT_CLASSIFICATION	5.444115853206524E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999934542023745	WITHOUT_CLASSIFICATION	6.545797625486457E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999977637657731	WITHOUT_CLASSIFICATION	2.236234226774517E-6	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9979895361538211	WITHOUT_CLASSIFICATION	0.002010463846178884	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.999966818919717	WITHOUT_CLASSIFICATION	3.318108028312678E-5	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999900669152996	WITHOUT_CLASSIFICATION	9.93308470046556E-6	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999748342874142	WITHOUT_CLASSIFICATION	2.5165712585863533E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.999307237487652	WITHOUT_CLASSIFICATION	6.92762512347951E-4	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999998447842255	WITHOUT_CLASSIFICATION	1.5521577448342818E-7	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.999981158129652	WITHOUT_CLASSIFICATION	1.8841870347955705E-5	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999471257331543	WITHOUT_CLASSIFICATION	5.287426684575429E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999996477306704	WITHOUT_CLASSIFICATION	3.522693296808976E-7	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9998125131179619	WITHOUT_CLASSIFICATION	1.8748688203800023E-4	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999680378176875	WITHOUT_CLASSIFICATION	3.1962182312436906E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999812113785492	WITHOUT_CLASSIFICATION	1.8788621450847783E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9997451156994094	WITHOUT_CLASSIFICATION	2.5488430059058723E-4	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999666805956035	WITHOUT_CLASSIFICATION	3.331940439663933E-5	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9991865776015286	WITHOUT_CLASSIFICATION	8.134223984714113E-4	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999740769654184	WITHOUT_CLASSIFICATION	2.592303458156234E-5	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999670607441732	WITHOUT_CLASSIFICATION	3.2939255826855804E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9992865217471636	WITHOUT_CLASSIFICATION	7.134782528364691E-4	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9998135631455478	WITHOUT_CLASSIFICATION	1.8643685445220333E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9992935140480678	WITHOUT_CLASSIFICATION	7.064859519322509E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9992935140480678	WITHOUT_CLASSIFICATION	7.064859519322509E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9992935140480678	WITHOUT_CLASSIFICATION	7.064859519322509E-4	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9992935140480678	WITHOUT_CLASSIFICATION	7.064859519322509E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999544729542807	WITHOUT_CLASSIFICATION	4.552704571929962E-5	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9998452441576821	WITHOUT_CLASSIFICATION	1.5475584231801549E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999470539327051	WITHOUT_CLASSIFICATION	5.2946067294834585E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999470539327051	WITHOUT_CLASSIFICATION	5.2946067294834585E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999470539327051	WITHOUT_CLASSIFICATION	5.2946067294834585E-5	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9998290666841673	WITHOUT_CLASSIFICATION	1.7093331583275053E-4	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999467125647221	WITHOUT_CLASSIFICATION	5.328743527781876E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9994269455472853	WITHOUT_CLASSIFICATION	5.730544527147779E-4	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9994269455472853	WITHOUT_CLASSIFICATION	5.730544527147779E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9927170408128423	WITHOUT_CLASSIFICATION	0.007282959187157642	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9927170408128423	WITHOUT_CLASSIFICATION	0.007282959187157642	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9982417672407479	WITHOUT_CLASSIFICATION	0.001758232759252105	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9982417672407479	WITHOUT_CLASSIFICATION	0.001758232759252105	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999702309309415	WITHOUT_CLASSIFICATION	2.976906905847704E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9994791381988573	WITHOUT_CLASSIFICATION	5.208618011427817E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997519667002489	WITHOUT_CLASSIFICATION	2.4803329975112365E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999016651377906	WITHOUT_CLASSIFICATION	9.83348622094698E-5	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9996653371628017	WITHOUT_CLASSIFICATION	3.346628371982909E-4	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997100143136299	WITHOUT_CLASSIFICATION	2.8998568637007E-4	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.999668079248141	WITHOUT_CLASSIFICATION	3.319207518590496E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999914794778194	WITHOUT_CLASSIFICATION	8.520522180625886E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9996121363697146	WITHOUT_CLASSIFICATION	3.87863630285343E-4	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999777988345734	WITHOUT_CLASSIFICATION	2.2201165426579847E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9997937416912168	WITHOUT_CLASSIFICATION	2.0625830878314816E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998988041683631	WITHOUT_CLASSIFICATION	1.011958316369978E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998989480447942	WITHOUT_CLASSIFICATION	1.0105195520591082E-4	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9998972978719868	WITHOUT_CLASSIFICATION	1.0270212801322982E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9995510903748773	WITHOUT_CLASSIFICATION	4.489096251226738E-4	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9997761771013914	WITHOUT_CLASSIFICATION	2.2382289860863652E-4	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9993285205728989	WITHOUT_CLASSIFICATION	6.71479427101035E-4	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9998566756102002	WITHOUT_CLASSIFICATION	1.4332438979978705E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.999017387315645	WITHOUT_CLASSIFICATION	9.826126843549812E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999942470438482	WITHOUT_CLASSIFICATION	5.752956151863064E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999435130904188	WITHOUT_CLASSIFICATION	5.648690958112833E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999441211453355	WITHOUT_CLASSIFICATION	5.587885466461096E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999441211453355	WITHOUT_CLASSIFICATION	5.587885466461096E-5	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999310653629784	WITHOUT_CLASSIFICATION	6.89346370216864E-5	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9975045759944763	WITHOUT_CLASSIFICATION	0.002495424005523675	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9975045759944763	WITHOUT_CLASSIFICATION	0.002495424005523675	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999744275710146	WITHOUT_CLASSIFICATION	2.5572428985396466E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999693035109786	WITHOUT_CLASSIFICATION	3.069648902144407E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999843929972898	WITHOUT_CLASSIFICATION	1.560700271016938E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9997974669745912	WITHOUT_CLASSIFICATION	2.025330254088001E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9992020041963129	WITHOUT_CLASSIFICATION	7.979958036871183E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9992020041963129	WITHOUT_CLASSIFICATION	7.979958036871183E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9998474031474276	WITHOUT_CLASSIFICATION	1.5259685257230465E-4	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999714716954259	WITHOUT_CLASSIFICATION	2.8528304574161765E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9993926322188468	WITHOUT_CLASSIFICATION	6.073677811532338E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.999997316919799	WITHOUT_CLASSIFICATION	2.6830802009665056E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998369207847907	WITHOUT_CLASSIFICATION	1.630792152092745E-4	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999467929995054	WITHOUT_CLASSIFICATION	5.320700049455506E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999467929995054	WITHOUT_CLASSIFICATION	5.320700049455506E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999467929995054	WITHOUT_CLASSIFICATION	5.320700049455506E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999796807672106	WITHOUT_CLASSIFICATION	2.031923278933929E-5	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999796807672106	WITHOUT_CLASSIFICATION	2.031923278933929E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9998450285295956	WITHOUT_CLASSIFICATION	1.5497147040455098E-4	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9998368028402076	WITHOUT_CLASSIFICATION	1.6319715979234045E-4	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9998368028402076	WITHOUT_CLASSIFICATION	1.6319715979234045E-4	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9981066375755404	WITHOUT_CLASSIFICATION	0.0018933624244594914	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999714204081903	WITHOUT_CLASSIFICATION	2.8579591809737543E-5	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9975723628742301	WITHOUT_CLASSIFICATION	0.002427637125769842	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997241970319323	WITHOUT_CLASSIFICATION	2.7580296806778323E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998649317211041	WITHOUT_CLASSIFICATION	0.0013506827889589602	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998649317211041	WITHOUT_CLASSIFICATION	0.0013506827889589602	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986958646549781	WITHOUT_CLASSIFICATION	0.0013041353450219035	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997875862377	WITHOUT_CLASSIFICATION	2.124137622999812E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998572944253776	WITHOUT_CLASSIFICATION	1.42705574622442E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988145415554717	WITHOUT_CLASSIFICATION	0.0011854584445283355	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994285878088587	WITHOUT_CLASSIFICATION	5.714121911413671E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998823526442372	WITHOUT_CLASSIFICATION	1.1764735576283889E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977447647597202	WITHOUT_CLASSIFICATION	0.0022552352402798424	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989894534378755	WITHOUT_CLASSIFICATION	0.0010105465621244552	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998272242010626	WITHOUT_CLASSIFICATION	1.7277579893738466E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998902104958728	WITHOUT_CLASSIFICATION	1.097895041273006E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997995453789608	WITHOUT_CLASSIFICATION	2.0045462103930283E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9996774782002418	WITHOUT_CLASSIFICATION	3.225217997581664E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999438295996789	WITHOUT_CLASSIFICATION	5.6170400321160796E-5	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999782179017657	WITHOUT_CLASSIFICATION	2.1782098234393123E-5	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999589068391564	WITHOUT_CLASSIFICATION	4.109316084356443E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9957766700704921	WITHOUT_CLASSIFICATION	0.0042233299295079945	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9997969222067504	WITHOUT_CLASSIFICATION	2.0307779324969113E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.999945160034186	WITHOUT_CLASSIFICATION	5.4839965814034686E-5	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9994468884836388	WITHOUT_CLASSIFICATION	5.531115163612406E-4	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999589693720946	WITHOUT_CLASSIFICATION	4.103062790535887E-5	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9992029928551581	WITHOUT_CLASSIFICATION	7.970071448418535E-4	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999944133767655	WITHOUT_CLASSIFICATION	5.5866232344965916E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9996278470167773	WITHOUT_CLASSIFICATION	3.721529832226952E-4	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9997610559869666	WITHOUT_CLASSIFICATION	2.3894401303339868E-4	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9998617250733847	WITHOUT_CLASSIFICATION	1.3827492661531966E-4	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9994410917782675	WITHOUT_CLASSIFICATION	5.589082217326074E-4	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9984621431069974	WITHOUT_CLASSIFICATION	0.0015378568930025807	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9984621431069974	WITHOUT_CLASSIFICATION	0.0015378568930025807	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9998829967513111	WITHOUT_CLASSIFICATION	1.1700324868890965E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996070556202383	WITHOUT_CLASSIFICATION	3.9294437976161235E-4	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999553002858815	WITHOUT_CLASSIFICATION	4.469971411850107E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999444842040218	WITHOUT_CLASSIFICATION	5.551579597827974E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999580860355033	WITHOUT_CLASSIFICATION	4.1913964496622776E-5	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.99973811098281	WITHOUT_CLASSIFICATION	2.6188901719009035E-4	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9998570710371908	WITHOUT_CLASSIFICATION	1.429289628092063E-4	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999811242095156	WITHOUT_CLASSIFICATION	1.88757904843465E-5	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.999958429433474	WITHOUT_CLASSIFICATION	4.1570566525951094E-5	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994526904851174	WITHOUT_CLASSIFICATION	5.473095148825607E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994526904851174	WITHOUT_CLASSIFICATION	5.473095148825607E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9998179589920182	WITHOUT_CLASSIFICATION	1.8204100798177258E-4	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999547510851551	WITHOUT_CLASSIFICATION	4.524891484479216E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9992826238700194	WITHOUT_CLASSIFICATION	7.173761299805763E-4	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999016466482621	WITHOUT_CLASSIFICATION	9.835335173791229E-5	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999906683714757	WITHOUT_CLASSIFICATION	9.331628524297037E-6	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9996769411193233	WITHOUT_CLASSIFICATION	3.2305888067668634E-4	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9997969222067504	WITHOUT_CLASSIFICATION	2.0307779324969113E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9990174319835714	WITHOUT_CLASSIFICATION	9.825680164285103E-4	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999539033942998	WITHOUT_CLASSIFICATION	4.6096605700302096E-5	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999451881239146	WITHOUT_CLASSIFICATION	5.481187608526574E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999288448217208	WITHOUT_CLASSIFICATION	7.115517827909016E-5	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.999989926457636	WITHOUT_CLASSIFICATION	1.0073542363960992E-5	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999500476362932	WITHOUT_CLASSIFICATION	4.9952363706682913E-5	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.999974346903519	WITHOUT_CLASSIFICATION	2.5653096480971897E-5	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9990634806940552	WITHOUT_CLASSIFICATION	9.365193059449839E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9974044896087758	WITHOUT_CLASSIFICATION	0.00259551039122418	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999605448474745	WITHOUT_CLASSIFICATION	3.945515252548644E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999651590239169	WITHOUT_CLASSIFICATION	3.484097608314925E-5	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999605448474745	WITHOUT_CLASSIFICATION	3.945515252548644E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999651590239169	WITHOUT_CLASSIFICATION	3.484097608314925E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999623018413049	WITHOUT_CLASSIFICATION	3.7698158695145584E-5	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9994715088350644	WITHOUT_CLASSIFICATION	5.284911649354771E-4	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9997494865293173	WITHOUT_CLASSIFICATION	2.505134706827152E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9889157566625182	WITHOUT_CLASSIFICATION	0.011084243337481857	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984633208199	WITHOUT_CLASSIFICATION	1.5366791800931487E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999135528644955	WITHOUT_CLASSIFICATION	8.644713550451776E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999802873753771	WITHOUT_CLASSIFICATION	1.971262462277373E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9994677469063266	WITHOUT_CLASSIFICATION	5.322530936733424E-4	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999259921767375	WITHOUT_CLASSIFICATION	7.40078232625187E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999286021905749	WITHOUT_CLASSIFICATION	7.139780942505759E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.999918181917564	WITHOUT_CLASSIFICATION	8.181808243598945E-5	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9991634135743852	WITHOUT_CLASSIFICATION	8.365864256149059E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9994274537525017	WITHOUT_CLASSIFICATION	5.725462474982649E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999135528644955	WITHOUT_CLASSIFICATION	8.644713550451776E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999539940016342	WITHOUT_CLASSIFICATION	4.600599836573326E-5	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999555769050877	WITHOUT_CLASSIFICATION	4.4423094912220374E-5	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999620358327768	WITHOUT_CLASSIFICATION	3.796416722323027E-5	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999176775774321	WITHOUT_CLASSIFICATION	8.232242256788775E-5	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991530346185474	WITHOUT_CLASSIFICATION	8.469653814525074E-4	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9948524600182994	WITHOUT_CLASSIFICATION	0.005147539981700626	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991530346185474	WITHOUT_CLASSIFICATION	8.469653814525074E-4	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991530346185474	WITHOUT_CLASSIFICATION	8.469653814525074E-4	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991568643149089	WITHOUT_CLASSIFICATION	8.431356850911353E-4	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991650709929224	WITHOUT_CLASSIFICATION	8.349290070776307E-4	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.999914733291986	WITHOUT_CLASSIFICATION	8.52667080140726E-5	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999705003090347	WITHOUT_CLASSIFICATION	2.949969096531114E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991530346185474	WITHOUT_CLASSIFICATION	8.469653814525074E-4	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999764328190134	WITHOUT_CLASSIFICATION	2.356718098656194E-5	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9998439884122432	WITHOUT_CLASSIFICATION	1.5601158775693048E-4	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999821735739529	WITHOUT_CLASSIFICATION	1.7826426047080904E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9998230295167225	WITHOUT_CLASSIFICATION	1.7697048327746154E-4	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.999953468896432	WITHOUT_CLASSIFICATION	4.653110356786668E-5	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.999943322755038	WITHOUT_CLASSIFICATION	5.667724496195795E-5	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9995917325782601	WITHOUT_CLASSIFICATION	4.0826742173984175E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999911130805749	WITHOUT_CLASSIFICATION	8.886919425135924E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9998466126132869	WITHOUT_CLASSIFICATION	1.5338738671316448E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9998439884122432	WITHOUT_CLASSIFICATION	1.5601158775693048E-4	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999821735739529	WITHOUT_CLASSIFICATION	1.7826426047080904E-5	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9998230295167225	WITHOUT_CLASSIFICATION	1.7697048327746154E-4	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9998644478481988	WITHOUT_CLASSIFICATION	1.3555215180122086E-4	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.999617676321945	WITHOUT_CLASSIFICATION	3.8232367805502506E-4	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9998494467275818	WITHOUT_CLASSIFICATION	1.5055327241811502E-4	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9997424529518241	WITHOUT_CLASSIFICATION	2.5754704817597504E-4	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999613516109224	WITHOUT_CLASSIFICATION	3.8648389077723104E-5	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.998879241872808	WITHOUT_CLASSIFICATION	0.0011207581271920712	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9997671024335045	WITHOUT_CLASSIFICATION	2.3289756649554793E-4	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999550171636947	WITHOUT_CLASSIFICATION	4.4982836305239745E-5	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999110672329212	WITHOUT_CLASSIFICATION	8.893276707880645E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.997129691243929	WITHOUT_CLASSIFICATION	0.0028703087560709977	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9995337623372714	WITHOUT_CLASSIFICATION	4.662376627285024E-4	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999754062207415	WITHOUT_CLASSIFICATION	2.459377925844965E-5	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9994658973489132	WITHOUT_CLASSIFICATION	5.341026510867974E-4	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.998557621291952	WITHOUT_CLASSIFICATION	0.0014423787080480126	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9998964372918326	WITHOUT_CLASSIFICATION	1.0356270816725122E-4	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9965067250540154	WITHOUT_CLASSIFICATION	0.0034932749459847074	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9998284898517852	WITHOUT_CLASSIFICATION	1.715101482147825E-4	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999442125199527	WITHOUT_CLASSIFICATION	5.578748004719465E-5	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.999884777794314	WITHOUT_CLASSIFICATION	1.152222056861104E-4	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9910261237427423	WITHOUT_CLASSIFICATION	0.008973876257257747	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9717689004457841	WITHOUT_CLASSIFICATION	0.02823109955421578	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9966778200663682	WITHOUT_CLASSIFICATION	0.0033221799336318174	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9992253485142922	WITHOUT_CLASSIFICATION	7.746514857078211E-4	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999104124439193	WITHOUT_CLASSIFICATION	8.958755608077349E-5	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9992265829137736	WITHOUT_CLASSIFICATION	7.73417086226335E-4	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999579293652855	WITHOUT_CLASSIFICATION	4.2070634714590804E-5	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999864078115256	WITHOUT_CLASSIFICATION	1.3592188474289613E-5	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9997808276663909	WITHOUT_CLASSIFICATION	2.1917233360911368E-4	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9885651791518163	WITHOUT_CLASSIFICATION	0.011434820848183693	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.998512254360771	WITHOUT_CLASSIFICATION	0.001487745639229011	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9989485204042085	WITHOUT_CLASSIFICATION	0.001051479595791608	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9995238279445354	WITHOUT_CLASSIFICATION	4.7617205546454715E-4	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9994481180093746	WITHOUT_CLASSIFICATION	5.518819906254455E-4	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.999894647704158	WITHOUT_CLASSIFICATION	1.0535229584194518E-4	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9986893477824867	WITHOUT_CLASSIFICATION	0.0013106522175133021	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.999853759839418	WITHOUT_CLASSIFICATION	1.462401605819216E-4	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9827408096964241	WITHOUT_CLASSIFICATION	0.017259190303576	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.990074299750548	WITHOUT_CLASSIFICATION	0.009925700249452036	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9995990383819203	WITHOUT_CLASSIFICATION	4.009616180796516E-4	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999944133767655	WITHOUT_CLASSIFICATION	5.5866232344965916E-5	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9986982698672894	WITHOUT_CLASSIFICATION	0.00130173013271063	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9996023652508995	WITHOUT_CLASSIFICATION	3.9763474910042065E-4	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999145271705853	WITHOUT_CLASSIFICATION	8.547282941471578E-5	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9998970698851896	WITHOUT_CLASSIFICATION	1.0293011481041567E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9983402730931217	WITHOUT_CLASSIFICATION	0.0016597269068782628	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999592192330057	WITHOUT_CLASSIFICATION	4.078076699432432E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9983402730931217	WITHOUT_CLASSIFICATION	0.0016597269068782628	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999703585452238	WITHOUT_CLASSIFICATION	2.9641454776345654E-5	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9994033394319652	WITHOUT_CLASSIFICATION	5.966605680347145E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9998081665221752	WITHOUT_CLASSIFICATION	1.9183347782488483E-4	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999920864450921	WITHOUT_CLASSIFICATION	7.913554907885699E-6	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9998459013870755	WITHOUT_CLASSIFICATION	1.5409861292456806E-4	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999743955871679	WITHOUT_CLASSIFICATION	2.5604412832080347E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999791120794387	WITHOUT_CLASSIFICATION	2.088792056140091E-5	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999715133190058	WITHOUT_CLASSIFICATION	2.8486680994223185E-5	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999854393013636	WITHOUT_CLASSIFICATION	1.4560698636403154E-5	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999803431903177	WITHOUT_CLASSIFICATION	1.9656809682332513E-5	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999244502266436	WITHOUT_CLASSIFICATION	7.554977335644537E-5	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9974987889379182	WITHOUT_CLASSIFICATION	0.0025012110620816676	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999532608450792	WITHOUT_CLASSIFICATION	4.673915492080872E-5	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999876320464097	WITHOUT_CLASSIFICATION	1.2367953590313631E-5	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999816028627722	WITHOUT_CLASSIFICATION	1.8397137227879427E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999182924147109	WITHOUT_CLASSIFICATION	8.170758528913157E-5	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999315365852417	WITHOUT_CLASSIFICATION	6.846341475830445E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999890981015341	WITHOUT_CLASSIFICATION	1.0901898465798899E-5	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999918051118833	WITHOUT_CLASSIFICATION	8.19488811667529E-6	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9975054033282728	WITHOUT_CLASSIFICATION	0.0024945966717272827	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999381039698189	WITHOUT_CLASSIFICATION	6.189603018112354E-5	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999353989578014	WITHOUT_CLASSIFICATION	6.460104219869003E-5	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999534601784985	WITHOUT_CLASSIFICATION	4.6539821501413285E-5	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999444907825555	WITHOUT_CLASSIFICATION	5.550921744441342E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9996308499385123	WITHOUT_CLASSIFICATION	3.691500614876375E-4	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999163330159411	WITHOUT_CLASSIFICATION	8.366698405897754E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999391870757198	WITHOUT_CLASSIFICATION	6.081292428015761E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9998055684404736	WITHOUT_CLASSIFICATION	1.944315595264059E-4	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9998756195441815	WITHOUT_CLASSIFICATION	1.243804558184635E-4	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9993413535917655	WITHOUT_CLASSIFICATION	6.586464082344451E-4	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9998983689588652	WITHOUT_CLASSIFICATION	1.0163104113480844E-4	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999936149582397	WITHOUT_CLASSIFICATION	6.3850417603513515E-6	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999720349932063	WITHOUT_CLASSIFICATION	2.7965006793726674E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999493546655096	WITHOUT_CLASSIFICATION	5.064533449036239E-5	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999270264203602	WITHOUT_CLASSIFICATION	7.297357963977614E-5	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999512411389562	WITHOUT_CLASSIFICATION	4.875886104389151E-5	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999320520562779	WITHOUT_CLASSIFICATION	6.794794372209891E-5	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999145271705853	WITHOUT_CLASSIFICATION	8.547282941471578E-5	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9998785306231021	WITHOUT_CLASSIFICATION	1.2146937689796261E-4	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999836057883255	WITHOUT_CLASSIFICATION	1.6394211674517848E-5	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999792664750072	WITHOUT_CLASSIFICATION	2.0733524992755313E-5	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9995606326210575	WITHOUT_CLASSIFICATION	4.393673789424836E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999592192330057	WITHOUT_CLASSIFICATION	4.078076699432432E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999219912356896	WITHOUT_CLASSIFICATION	7.800876431039402E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999377791499151	WITHOUT_CLASSIFICATION	6.222085008482448E-5	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.999949801279158	WITHOUT_CLASSIFICATION	5.0198720842052155E-5	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999406828213296	WITHOUT_CLASSIFICATION	5.9317178670406535E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9995883054152511	WITHOUT_CLASSIFICATION	4.1169458474888423E-4	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.999545280793306	WITHOUT_CLASSIFICATION	4.547192066940219E-4	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9983259634973302	WITHOUT_CLASSIFICATION	0.001674036502669785	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.999969640190526	WITHOUT_CLASSIFICATION	3.0359809473947126E-5	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999732416603425	WITHOUT_CLASSIFICATION	2.675833965744145E-5	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9964626581687289	WITHOUT_CLASSIFICATION	0.0035373418312709443	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9996278470167773	WITHOUT_CLASSIFICATION	3.721529832226952E-4	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999184708956488	WITHOUT_CLASSIFICATION	8.152910435118288E-5	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9998024792445418	WITHOUT_CLASSIFICATION	1.9752075545818502E-4	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999230892747419	WITHOUT_CLASSIFICATION	7.691072525811208E-5	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.999919127398075	WITHOUT_CLASSIFICATION	8.087260192506434E-5	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9998906881661901	WITHOUT_CLASSIFICATION	1.0931183380981253E-4	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999423790016465	WITHOUT_CLASSIFICATION	5.7620998353358467E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999861236323266	WITHOUT_CLASSIFICATION	1.3876367673355453E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999684207929319	WITHOUT_CLASSIFICATION	3.157920706800852E-5	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.999950285087679	WITHOUT_CLASSIFICATION	4.971491232105856E-5	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999818769585027	WITHOUT_CLASSIFICATION	1.8123041497329403E-5	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999684207929319	WITHOUT_CLASSIFICATION	3.157920706800852E-5	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999299921589303	WITHOUT_CLASSIFICATION	7.000784106976797E-5	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999766923488642	WITHOUT_CLASSIFICATION	2.330765113575946E-5	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9997180519385102	WITHOUT_CLASSIFICATION	2.8194806148985663E-4	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999838384304325	WITHOUT_CLASSIFICATION	1.616156956750818E-5	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999241119738466	WITHOUT_CLASSIFICATION	7.588802615350357E-5	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999937723709102	WITHOUT_CLASSIFICATION	6.227629089688724E-6	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999863864173762	WITHOUT_CLASSIFICATION	1.3613582623736987E-5	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999859201903035	WITHOUT_CLASSIFICATION	1.4079809696554015E-5	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999760462257672	WITHOUT_CLASSIFICATION	2.395377423280921E-5	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999817332941592	WITHOUT_CLASSIFICATION	1.826670584087189E-5	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999871840585624	WITHOUT_CLASSIFICATION	1.2815941437539703E-5	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999864566741161	WITHOUT_CLASSIFICATION	1.3543325883771425E-5	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999982999228166	WITHOUT_CLASSIFICATION	1.7000771833203588E-6	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9998843878621136	WITHOUT_CLASSIFICATION	1.1561213788636483E-4	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9998147150374166	WITHOUT_CLASSIFICATION	1.8528496258333235E-4	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9977968094624807	WITHOUT_CLASSIFICATION	0.0022031905375193236	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9998795540363455	WITHOUT_CLASSIFICATION	1.204459636544151E-4	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9996804012816141	WITHOUT_CLASSIFICATION	3.1959871838593053E-4	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.999983425794469	WITHOUT_CLASSIFICATION	1.6574205530974995E-5	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999837264928407	WITHOUT_CLASSIFICATION	1.627350715926086E-5	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999917471707201	WITHOUT_CLASSIFICATION	8.25282927991005E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999142367099568	WITHOUT_CLASSIFICATION	8.576329004314877E-5	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998239142410269	WITHOUT_CLASSIFICATION	1.760857589730196E-4	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9998239142410269	WITHOUT_CLASSIFICATION	1.760857589730196E-4	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9998230845706444	WITHOUT_CLASSIFICATION	1.769154293555872E-4	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999472307390885	WITHOUT_CLASSIFICATION	5.276926091149759E-5	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999547090343052	WITHOUT_CLASSIFICATION	4.529096569491234E-5	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9998176136294997	WITHOUT_CLASSIFICATION	1.8238637050019813E-4	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999175483695862	WITHOUT_CLASSIFICATION	8.245163041379566E-5	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9981883268296828	WITHOUT_CLASSIFICATION	0.001811673170317218	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999007189008938	WITHOUT_CLASSIFICATION	9.92810991062401E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999438671880386	WITHOUT_CLASSIFICATION	5.613281196131309E-5	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9997739432219657	WITHOUT_CLASSIFICATION	2.2605677803424798E-4	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9976550329528214	WITHOUT_CLASSIFICATION	0.002344967047178644	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999872245142073	WITHOUT_CLASSIFICATION	1.2775485792670241E-5	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999772438142599	WITHOUT_CLASSIFICATION	2.2756185740087316E-5	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9998511606019397	WITHOUT_CLASSIFICATION	1.4883939806029493E-4	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999240229492097	WITHOUT_CLASSIFICATION	7.597705079030861E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9998507496435874	WITHOUT_CLASSIFICATION	1.4925035641255853E-4	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999678404857486	WITHOUT_CLASSIFICATION	3.215951425130924E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999992848587781	WITHOUT_CLASSIFICATION	7.15141221998706E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9993968902260493	WITHOUT_CLASSIFICATION	6.031097739506599E-4	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9993968902260493	WITHOUT_CLASSIFICATION	6.031097739506599E-4	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999520214043225	WITHOUT_CLASSIFICATION	4.797859567740369E-5	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998895155978067	WITHOUT_CLASSIFICATION	1.104844021932377E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.999834959223909	WITHOUT_CLASSIFICATION	1.6504077609111735E-4	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.999945886516253	WITHOUT_CLASSIFICATION	5.411348374697887E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999360469235132	WITHOUT_CLASSIFICATION	6.395307648670101E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9997737514103313	WITHOUT_CLASSIFICATION	2.262485896687736E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999126113761938	WITHOUT_CLASSIFICATION	8.738862380615147E-5	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999258568442491	WITHOUT_CLASSIFICATION	7.414315575085435E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999564454377757	WITHOUT_CLASSIFICATION	4.3554562224221616E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999564454377757	WITHOUT_CLASSIFICATION	4.3554562224221616E-5	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999564454377757	WITHOUT_CLASSIFICATION	4.3554562224221616E-5	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9998798058096015	WITHOUT_CLASSIFICATION	1.2019419039857151E-4	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9998579827055645	WITHOUT_CLASSIFICATION	1.4201729443558266E-4	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999200656038877	WITHOUT_CLASSIFICATION	7.99343961123139E-5	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999491187000795	WITHOUT_CLASSIFICATION	5.088129992051287E-5	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999491187000795	WITHOUT_CLASSIFICATION	5.088129992051287E-5	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9998225193274156	WITHOUT_CLASSIFICATION	1.774806725844765E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.99993232543506	WITHOUT_CLASSIFICATION	6.767456494000382E-5	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9991575914399223	WITHOUT_CLASSIFICATION	8.424085600776903E-4	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999157524414145	WITHOUT_CLASSIFICATION	8.424755858557109E-5	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9998498691084349	WITHOUT_CLASSIFICATION	1.5013089156511262E-4	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9993582148912681	WITHOUT_CLASSIFICATION	6.417851087318834E-4	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9987048674514596	WITHOUT_CLASSIFICATION	0.001295132548540407	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999393334118428	WITHOUT_CLASSIFICATION	6.066658815710635E-5	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9997854755834918	WITHOUT_CLASSIFICATION	2.1452441650808663E-4	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999296663682508	WITHOUT_CLASSIFICATION	7.033363174919425E-5	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999285128578047	WITHOUT_CLASSIFICATION	7.14871421953277E-5	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999683142540126	WITHOUT_CLASSIFICATION	3.168574598750377E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998368433574997	WITHOUT_CLASSIFICATION	1.6315664250030488E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999195389827739	WITHOUT_CLASSIFICATION	8.046101722603118E-5	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9998755979106688	WITHOUT_CLASSIFICATION	1.2440208933123974E-4	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9997996583756548	WITHOUT_CLASSIFICATION	2.0034162434518619E-4	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9996949658783927	WITHOUT_CLASSIFICATION	3.050341216073276E-4	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9996949658783927	WITHOUT_CLASSIFICATION	3.050341216073276E-4	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9996949658783927	WITHOUT_CLASSIFICATION	3.050341216073276E-4	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9996949658783927	WITHOUT_CLASSIFICATION	3.050341216073276E-4	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9998709564769224	WITHOUT_CLASSIFICATION	1.2904352307766326E-4	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997999097946417	WITHOUT_CLASSIFICATION	2.0009020535832194E-4	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999852180008449	WITHOUT_CLASSIFICATION	1.4781999154998426E-5	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9996305579350017	WITHOUT_CLASSIFICATION	3.6944206499839387E-4	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9997999097946417	WITHOUT_CLASSIFICATION	2.0009020535832194E-4	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9998526266441176	WITHOUT_CLASSIFICATION	1.4737335588245817E-4	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.999637154487251	WITHOUT_CLASSIFICATION	3.62845512748985E-4	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9996384896469864	WITHOUT_CLASSIFICATION	3.6151035301351024E-4	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9996062264581328	WITHOUT_CLASSIFICATION	3.937735418671086E-4	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9995368084376436	WITHOUT_CLASSIFICATION	4.631915623563471E-4	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.999915651377743	WITHOUT_CLASSIFICATION	8.434862225705292E-5	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9996062264581328	WITHOUT_CLASSIFICATION	3.937735418671086E-4	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.999938449753552	WITHOUT_CLASSIFICATION	6.155024644802039E-5	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.999938449753552	WITHOUT_CLASSIFICATION	6.155024644802039E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999505420673284	WITHOUT_CLASSIFICATION	4.9457932671572505E-5	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999543623889079	WITHOUT_CLASSIFICATION	4.5637611092151894E-5	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999505420673284	WITHOUT_CLASSIFICATION	4.9457932671572505E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999572306011211	WITHOUT_CLASSIFICATION	4.276939887888956E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999659551924523	WITHOUT_CLASSIFICATION	3.404480754771099E-5	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999341857246976	WITHOUT_CLASSIFICATION	6.58142753024779E-5	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999696860486249	WITHOUT_CLASSIFICATION	3.0313951375123317E-5	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999605673691447	WITHOUT_CLASSIFICATION	3.943263085538556E-5	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999733112519692	WITHOUT_CLASSIFICATION	2.668874803073444E-5	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999944436879736	WITHOUT_CLASSIFICATION	5.55631202630776E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999602494553462	WITHOUT_CLASSIFICATION	3.975054465373917E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999256450217903	WITHOUT_CLASSIFICATION	7.435497820969932E-5	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9992437477443913	WITHOUT_CLASSIFICATION	7.562522556085888E-4	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.999965776815741	WITHOUT_CLASSIFICATION	3.422318425916017E-5	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999959016243487	WITHOUT_CLASSIFICATION	4.09837565126146E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9996631767952348	WITHOUT_CLASSIFICATION	3.3682320476524446E-4	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998438225802814	WITHOUT_CLASSIFICATION	1.5617741971851257E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999572306011211	WITHOUT_CLASSIFICATION	4.276939887888956E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999572306011211	WITHOUT_CLASSIFICATION	4.276939887888956E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999403499906845	WITHOUT_CLASSIFICATION	5.9650009315567015E-5	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9982208447904918	WITHOUT_CLASSIFICATION	0.0017791552095081011	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999888978272883	WITHOUT_CLASSIFICATION	1.1102172711802306E-5	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997479334723557	WITHOUT_CLASSIFICATION	2.520665276443402E-4	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9997479334723557	WITHOUT_CLASSIFICATION	2.520665276443402E-4	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999589860064472	WITHOUT_CLASSIFICATION	4.1013993552947694E-5	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999497774451789	WITHOUT_CLASSIFICATION	5.022255482106642E-5	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.999749935217569	WITHOUT_CLASSIFICATION	2.500647824310233E-4	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999242268251362	WITHOUT_CLASSIFICATION	7.577317486382639E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986313972262414	WITHOUT_CLASSIFICATION	0.0013686027737586262	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9983761095541867	WITHOUT_CLASSIFICATION	0.0016238904458133342	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9998799777389111	WITHOUT_CLASSIFICATION	1.2002226108883718E-4	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9998305560136999	WITHOUT_CLASSIFICATION	1.6944398630002635E-4	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9981358372388842	WITHOUT_CLASSIFICATION	0.001864162761115728	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9991576823639507	WITHOUT_CLASSIFICATION	8.423176360492934E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9998847995269774	WITHOUT_CLASSIFICATION	1.152004730226198E-4	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999771634786708	WITHOUT_CLASSIFICATION	2.2836521329192563E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986313972262414	WITHOUT_CLASSIFICATION	0.0013686027737586262	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999318160441644	WITHOUT_CLASSIFICATION	6.818395583560818E-5	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999217419221063	WITHOUT_CLASSIFICATION	7.825807789374799E-5	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9998342739749175	WITHOUT_CLASSIFICATION	1.6572602508242024E-4	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9946500862550873	WITHOUT_CLASSIFICATION	0.005349913744912691	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9946500862550873	WITHOUT_CLASSIFICATION	0.005349913744912691	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997874576633066	WITHOUT_CLASSIFICATION	2.125423366933318E-4	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999553002858815	WITHOUT_CLASSIFICATION	4.469971411850107E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999444842040218	WITHOUT_CLASSIFICATION	5.551579597827974E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999741538080995	WITHOUT_CLASSIFICATION	2.584619190041262E-5	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999741538080995	WITHOUT_CLASSIFICATION	2.584619190041262E-5	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9997323548789276	WITHOUT_CLASSIFICATION	2.676451210723574E-4	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999481024850831	WITHOUT_CLASSIFICATION	5.189751491674024E-5	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.999964863728363	WITHOUT_CLASSIFICATION	3.513627163692429E-5	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9996511963376139	WITHOUT_CLASSIFICATION	3.4880366238603335E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999790071873054	WITHOUT_CLASSIFICATION	2.0992812694687925E-5	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999946107243855	WITHOUT_CLASSIFICATION	5.3892756144942326E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.999954047375028	WITHOUT_CLASSIFICATION	4.5952624971957124E-5	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999813431754516	WITHOUT_CLASSIFICATION	1.865682454845048E-5	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999373371455614	WITHOUT_CLASSIFICATION	6.266285443863277E-5	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999322613326518	WITHOUT_CLASSIFICATION	6.773866734820412E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998832402980407	WITHOUT_CLASSIFICATION	1.1675970195942881E-4	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9998716748450338	WITHOUT_CLASSIFICATION	1.2832515496622322E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9998285650871255	WITHOUT_CLASSIFICATION	1.7143491287447795E-4	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999577599212622	WITHOUT_CLASSIFICATION	4.22400787376914E-5	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999533081763506	WITHOUT_CLASSIFICATION	4.669182364940155E-4	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999244387506993	WITHOUT_CLASSIFICATION	7.556124930076028E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999244387506993	WITHOUT_CLASSIFICATION	7.556124930076028E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9997944264355071	WITHOUT_CLASSIFICATION	2.055735644929649E-4	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999148057479187	WITHOUT_CLASSIFICATION	8.519425208123961E-5	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999148057479187	WITHOUT_CLASSIFICATION	8.519425208123961E-5	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9997862792628208	WITHOUT_CLASSIFICATION	2.1372073717917519E-4	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999605448474745	WITHOUT_CLASSIFICATION	3.945515252548644E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9998401180764406	WITHOUT_CLASSIFICATION	1.5988192355932755E-4	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999802873753771	WITHOUT_CLASSIFICATION	1.971262462277373E-5	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999359154671287	WITHOUT_CLASSIFICATION	6.408453287137182E-5	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999802873753771	WITHOUT_CLASSIFICATION	1.971262462277373E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999647617753045	WITHOUT_CLASSIFICATION	3.5238224695581684E-5	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999877874565317	WITHOUT_CLASSIFICATION	1.2212543468303732E-5	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9997642550448029	WITHOUT_CLASSIFICATION	2.357449551971094E-4	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9998285650871255	WITHOUT_CLASSIFICATION	1.7143491287447795E-4	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9997281540932533	WITHOUT_CLASSIFICATION	2.718459067466657E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999135528644955	WITHOUT_CLASSIFICATION	8.644713550451776E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9998498203321363	WITHOUT_CLASSIFICATION	1.5017966786359617E-4	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9993088773305465	WITHOUT_CLASSIFICATION	6.911226694534495E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999710440773015	WITHOUT_CLASSIFICATION	2.8955922698483065E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999673911963161	WITHOUT_CLASSIFICATION	3.2608803683965986E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980387454725352	WITHOUT_CLASSIFICATION	0.001961254527464867	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980387454725352	WITHOUT_CLASSIFICATION	0.001961254527464867	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9997902853683923	WITHOUT_CLASSIFICATION	2.0971463160771945E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9998848229600364	WITHOUT_CLASSIFICATION	1.151770399636327E-4	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999647617753045	WITHOUT_CLASSIFICATION	3.5238224695581684E-5	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999647617753045	WITHOUT_CLASSIFICATION	3.5238224695581684E-5	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999465958300872	WITHOUT_CLASSIFICATION	5.3404169912796844E-5	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9899993607596692	WITHOUT_CLASSIFICATION	0.010000639240330794	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9995715773597192	WITHOUT_CLASSIFICATION	4.2842264028068614E-4	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9998736794026706	WITHOUT_CLASSIFICATION	1.2632059732951988E-4	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9998557856531392	WITHOUT_CLASSIFICATION	1.4421434686086036E-4	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999425874222375	WITHOUT_CLASSIFICATION	5.741257776257308E-5	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999074659518729	WITHOUT_CLASSIFICATION	9.253404812715698E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999548008574776	WITHOUT_CLASSIFICATION	4.5199142522434886E-5	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999020605873996	WITHOUT_CLASSIFICATION	9.793941260038784E-5	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9998289470218008	WITHOUT_CLASSIFICATION	1.7105297819928537E-4	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999425874222375	WITHOUT_CLASSIFICATION	5.741257776257308E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999503892916538	WITHOUT_CLASSIFICATION	4.961070834623404E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999503892916538	WITHOUT_CLASSIFICATION	4.961070834623404E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999798708003268	WITHOUT_CLASSIFICATION	2.0129199673168848E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999134117499692	WITHOUT_CLASSIFICATION	8.658825003085117E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999346302730182	WITHOUT_CLASSIFICATION	6.536972698172379E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999346302730182	WITHOUT_CLASSIFICATION	6.536972698172379E-5	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999748741273664	WITHOUT_CLASSIFICATION	2.5125872633617385E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999171931670845	WITHOUT_CLASSIFICATION	8.280683291552669E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984633208199	WITHOUT_CLASSIFICATION	1.5366791800931487E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999747000813166	WITHOUT_CLASSIFICATION	2.5299918683459302E-5	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9998682121613042	WITHOUT_CLASSIFICATION	1.317878386958503E-4	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9998102222050422	WITHOUT_CLASSIFICATION	1.8977779495776807E-4	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999075609251086	WITHOUT_CLASSIFICATION	9.243907489139506E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999378567802037	WITHOUT_CLASSIFICATION	6.214321979628018E-5	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.999938515827426	WITHOUT_CLASSIFICATION	6.148417257404319E-5	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999908025207351	WITHOUT_CLASSIFICATION	9.197479264806806E-6	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999400498286123	WITHOUT_CLASSIFICATION	5.995017138769014E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999171931670845	WITHOUT_CLASSIFICATION	8.280683291552669E-5	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999306417469308	WITHOUT_CLASSIFICATION	6.935825306921078E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999996915032683	WITHOUT_CLASSIFICATION	3.0849673163374247E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999303423589261	WITHOUT_CLASSIFICATION	6.965764107390845E-5	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9996789093238375	WITHOUT_CLASSIFICATION	3.210906761623953E-4	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999531616997785	WITHOUT_CLASSIFICATION	4.683830022135617E-5	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9998631810995362	WITHOUT_CLASSIFICATION	1.3681890046387526E-4	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9997602631686985	WITHOUT_CLASSIFICATION	2.397368313015296E-4	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999572254396182	WITHOUT_CLASSIFICATION	4.2774560381895564E-5	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999988426095568	WITHOUT_CLASSIFICATION	1.1573904430891914E-6	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9998802345204566	WITHOUT_CLASSIFICATION	1.1976547954342422E-4	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9998203545813724	WITHOUT_CLASSIFICATION	1.7964541862757914E-4	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.999624766286241	WITHOUT_CLASSIFICATION	3.752337137589206E-4	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999782427847491	WITHOUT_CLASSIFICATION	2.175721525088847E-5	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9990334403283486	WITHOUT_CLASSIFICATION	9.665596716515263E-4	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9994707051986732	WITHOUT_CLASSIFICATION	5.292948013267577E-4	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9996877521995392	WITHOUT_CLASSIFICATION	3.122478004608E-4	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9997628229587842	WITHOUT_CLASSIFICATION	2.371770412158807E-4	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999567773298615	WITHOUT_CLASSIFICATION	4.3222670138435114E-5	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999941879153921	WITHOUT_CLASSIFICATION	5.812084607902673E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9996478500102566	WITHOUT_CLASSIFICATION	3.521499897435237E-4	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9998947905854516	WITHOUT_CLASSIFICATION	1.0520941454834772E-4	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9997879238133259	WITHOUT_CLASSIFICATION	2.1207618667407453E-4	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999835083467338	WITHOUT_CLASSIFICATION	1.649165326619871E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999878479959551	WITHOUT_CLASSIFICATION	1.2152004044869525E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9999346827457115	WITHOUT_CLASSIFICATION	6.53172542884458E-5	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9998964302829979	WITHOUT_CLASSIFICATION	1.0356971700211042E-4	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999437921079897	WITHOUT_CLASSIFICATION	5.620789201039395E-5	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9997523738481485	WITHOUT_CLASSIFICATION	2.4762615185148313E-4	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9993072288542957	WITHOUT_CLASSIFICATION	6.927711457042549E-4	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999034234349354	WITHOUT_CLASSIFICATION	9.657656506457332E-5	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999437056044564	WITHOUT_CLASSIFICATION	5.6294395543553884E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999884956298153	WITHOUT_CLASSIFICATION	1.1504370184732083E-5	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999677891565636	WITHOUT_CLASSIFICATION	3.2210843436430125E-5	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9998178046510369	WITHOUT_CLASSIFICATION	1.821953489631632E-4	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9998400868088116	WITHOUT_CLASSIFICATION	1.5991319118834055E-4	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9995991805779589	WITHOUT_CLASSIFICATION	4.008194220410824E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999557295454182	WITHOUT_CLASSIFICATION	4.427045458182061E-5	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999878479959551	WITHOUT_CLASSIFICATION	1.2152004044869525E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999700021607172	WITHOUT_CLASSIFICATION	2.9997839282754563E-5	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999988905052974	WITHOUT_CLASSIFICATION	1.109494702629236E-6	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999988905052974	WITHOUT_CLASSIFICATION	1.109494702629236E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999996691165697	WITHOUT_CLASSIFICATION	3.308834303052481E-6	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.999996691165697	WITHOUT_CLASSIFICATION	3.308834303052481E-6	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9998569949775473	WITHOUT_CLASSIFICATION	1.430050224527226E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999458574310451	WITHOUT_CLASSIFICATION	5.414256895487159E-5	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999930319670924	WITHOUT_CLASSIFICATION	6.9680329076074E-6	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9998799780172527	WITHOUT_CLASSIFICATION	1.2002198274740949E-4	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999882225764677	WITHOUT_CLASSIFICATION	1.1777423532343207E-5	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999619736287588	WITHOUT_CLASSIFICATION	3.8026371241210846E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9997835017250766	WITHOUT_CLASSIFICATION	2.1649827492342815E-4	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.999954172247429	WITHOUT_CLASSIFICATION	4.5827752570968054E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999712361766883	WITHOUT_CLASSIFICATION	2.8763823311783124E-5	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999579685850574	WITHOUT_CLASSIFICATION	4.203141494266934E-5	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9994980669601133	WITHOUT_CLASSIFICATION	5.019330398866591E-4	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.999686525482478	WITHOUT_CLASSIFICATION	3.134745175219506E-4	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9994054136518644	WITHOUT_CLASSIFICATION	5.945863481355362E-4	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999806680365176	WITHOUT_CLASSIFICATION	1.9331963482331497E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9995725746865384	WITHOUT_CLASSIFICATION	4.2742531346162655E-4	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9998498203321363	WITHOUT_CLASSIFICATION	1.5017966786359617E-4	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9978707191044645	WITHOUT_CLASSIFICATION	0.0021292808955354252	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999758365775331	WITHOUT_CLASSIFICATION	2.4163422466901092E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.999758365775331	WITHOUT_CLASSIFICATION	2.4163422466901092E-4	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9990552428307491	WITHOUT_CLASSIFICATION	9.447571692509697E-4	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999765893236077	WITHOUT_CLASSIFICATION	2.341067639237339E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9994257514735732	WITHOUT_CLASSIFICATION	5.742485264269373E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998257846977915	WITHOUT_CLASSIFICATION	1.7421530220847306E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9996776606019858	WITHOUT_CLASSIFICATION	3.223393980141994E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9996776606019858	WITHOUT_CLASSIFICATION	3.223393980141994E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9992327500350257	WITHOUT_CLASSIFICATION	7.672499649743182E-4	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999711245867683	WITHOUT_CLASSIFICATION	2.8875413231686547E-5	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999825244695426	WITHOUT_CLASSIFICATION	1.7475530457451352E-5	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.999938281476758	WITHOUT_CLASSIFICATION	6.171852324201967E-5	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9990334680463459	WITHOUT_CLASSIFICATION	9.665319536541631E-4	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9998257846977915	WITHOUT_CLASSIFICATION	1.7421530220847306E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9996776606019858	WITHOUT_CLASSIFICATION	3.223393980141994E-4	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9996776606019858	WITHOUT_CLASSIFICATION	3.223393980141994E-4	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9992327500350257	WITHOUT_CLASSIFICATION	7.672499649743182E-4	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9995920861198766	WITHOUT_CLASSIFICATION	4.0791388012341624E-4	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999637089418659	WITHOUT_CLASSIFICATION	3.629105813414255E-5	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9995008707281221	WITHOUT_CLASSIFICATION	4.991292718779893E-4	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999976645050017	WITHOUT_CLASSIFICATION	2.3354949982936185E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9827844137637538	WITHOUT_CLASSIFICATION	0.017215586236246163	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9990378209450245	WITHOUT_CLASSIFICATION	9.62179054975611E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999646758981163	WITHOUT_CLASSIFICATION	3.532410188371577E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997716953200736	WITHOUT_CLASSIFICATION	2.2830467992638912E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997716953200736	WITHOUT_CLASSIFICATION	2.2830467992638912E-4	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9997188044926519	WITHOUT_CLASSIFICATION	2.811955073481082E-4	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9998397860875522	WITHOUT_CLASSIFICATION	1.6021391244780794E-4	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9998969196199796	WITHOUT_CLASSIFICATION	1.0308038002040994E-4	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9997848451985163	WITHOUT_CLASSIFICATION	2.151548014837596E-4	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9997955096159912	WITHOUT_CLASSIFICATION	2.0449038400884582E-4	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9996565405236567	WITHOUT_CLASSIFICATION	3.434594763432669E-4	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999668825282247	WITHOUT_CLASSIFICATION	3.311747177519341E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.999977238367198	WITHOUT_CLASSIFICATION	2.276163280200133E-5	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9970478711203777	WITHOUT_CLASSIFICATION	0.0029521288796222353	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9998847329255178	WITHOUT_CLASSIFICATION	1.1526707448217392E-4	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999751767911348	WITHOUT_CLASSIFICATION	2.482320886520843E-5	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9994996365358567	WITHOUT_CLASSIFICATION	5.003634641433211E-4	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999776838485946	WITHOUT_CLASSIFICATION	2.231615140534324E-5	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9987894717675307	WITHOUT_CLASSIFICATION	0.0012105282324691871	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9997021226235047	WITHOUT_CLASSIFICATION	2.9787737649538575E-4	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999614428064211	WITHOUT_CLASSIFICATION	3.855719357894992E-5	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9991845473629307	WITHOUT_CLASSIFICATION	8.154526370693654E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9997904078968317	WITHOUT_CLASSIFICATION	2.095921031682156E-4	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999684332946934	WITHOUT_CLASSIFICATION	3.1566705306670356E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997354146567401	WITHOUT_CLASSIFICATION	2.6458534325991134E-4	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999983237976257	WITHOUT_CLASSIFICATION	1.676202374299551E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.999714262786082	WITHOUT_CLASSIFICATION	2.8573721391803215E-4	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9997414635484262	WITHOUT_CLASSIFICATION	2.585364515738535E-4	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9998747986326709	WITHOUT_CLASSIFICATION	1.2520136732905579E-4	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999353774175888	WITHOUT_CLASSIFICATION	6.462258241130964E-5	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999223676312872	WITHOUT_CLASSIFICATION	7.763236871281823E-5	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9621225190081335	WITHOUT_CLASSIFICATION	0.03787748099186654	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999890025612858	WITHOUT_CLASSIFICATION	1.099743871423954E-5	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999495929531159	WITHOUT_CLASSIFICATION	5.040704688414912E-5	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9987669942670951	WITHOUT_CLASSIFICATION	0.0012330057329048444	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999973469015079	WITHOUT_CLASSIFICATION	2.6530984921732717E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999840209553711	WITHOUT_CLASSIFICATION	1.5979044628906315E-5	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999840209553711	WITHOUT_CLASSIFICATION	1.5979044628906315E-5	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9998705393696717	WITHOUT_CLASSIFICATION	1.2946063032824405E-4	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999378746972061	WITHOUT_CLASSIFICATION	6.212530279392349E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999518798867276	WITHOUT_CLASSIFICATION	4.812011327225957E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998139661064349	WITHOUT_CLASSIFICATION	1.8603389356509168E-4	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999679055661146	WITHOUT_CLASSIFICATION	3.209443388531213E-5	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9997717562310816	WITHOUT_CLASSIFICATION	2.2824376891839439E-4	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9988284204665838	WITHOUT_CLASSIFICATION	0.0011715795334161202	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9997334691310437	WITHOUT_CLASSIFICATION	2.6653086895634927E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9988261491314799	WITHOUT_CLASSIFICATION	0.0011738508685200993	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9997274834914506	WITHOUT_CLASSIFICATION	2.7251650854945015E-4	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999928916249884	WITHOUT_CLASSIFICATION	7.108375011607622E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999828438162494	WITHOUT_CLASSIFICATION	1.715618375067696E-5	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9992654506439329	WITHOUT_CLASSIFICATION	7.345493560671564E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999436154671587	WITHOUT_CLASSIFICATION	5.6384532841304493E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999998447842255	WITHOUT_CLASSIFICATION	1.5521577448342818E-7	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999290474712774	WITHOUT_CLASSIFICATION	7.095252872259099E-5	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999290474712774	WITHOUT_CLASSIFICATION	7.095252872259099E-5	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999290474712774	WITHOUT_CLASSIFICATION	7.095252872259099E-5	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999290474712774	WITHOUT_CLASSIFICATION	7.095252872259099E-5	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9998620570112448	WITHOUT_CLASSIFICATION	1.3794298875527362E-4	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9998979746110725	WITHOUT_CLASSIFICATION	1.0202538892756866E-4	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9998610746154769	WITHOUT_CLASSIFICATION	1.389253845231507E-4	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999357906800814	WITHOUT_CLASSIFICATION	6.420931991861033E-5	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999645791222377	WITHOUT_CLASSIFICATION	3.5420877762396137E-5	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9996460054327423	WITHOUT_CLASSIFICATION	3.5399456725767497E-4	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999734907449775	WITHOUT_CLASSIFICATION	2.6509255022440085E-5	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9998033064642187	WITHOUT_CLASSIFICATION	1.9669353578136706E-4	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9998610746154769	WITHOUT_CLASSIFICATION	1.389253845231507E-4	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999902060680202	WITHOUT_CLASSIFICATION	9.79393197975419E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9993062879722321	WITHOUT_CLASSIFICATION	6.937120277678725E-4	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9998169578081026	WITHOUT_CLASSIFICATION	1.830421918973343E-4	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999167144700619	WITHOUT_CLASSIFICATION	8.328552993815811E-5	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9997076940826445	WITHOUT_CLASSIFICATION	2.9230591735542077E-4	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9993562955288818	WITHOUT_CLASSIFICATION	6.437044711181372E-4	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999877367891019	WITHOUT_CLASSIFICATION	1.2263210898033887E-5	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.999669892814827	WITHOUT_CLASSIFICATION	3.3010718517300893E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999375088117783	WITHOUT_CLASSIFICATION	6.249118822163596E-5	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9998384715894705	WITHOUT_CLASSIFICATION	1.615284105295285E-4	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999375088117783	WITHOUT_CLASSIFICATION	6.249118822163596E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9993935094123297	WITHOUT_CLASSIFICATION	6.064905876702753E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9984072806397325	WITHOUT_CLASSIFICATION	0.0015927193602674236	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999117862393961	WITHOUT_CLASSIFICATION	8.821376060397175E-5	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.999943785465891	WITHOUT_CLASSIFICATION	5.6214534109111194E-5	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9998661881221194	WITHOUT_CLASSIFICATION	1.3381187788066658E-4	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999946673424347	WITHOUT_CLASSIFICATION	5.332657565299083E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9986595074550184	WITHOUT_CLASSIFICATION	0.0013404925449814903	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9977354305052003	WITHOUT_CLASSIFICATION	0.0022645694947996523	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9989777556361944	WITHOUT_CLASSIFICATION	0.001022244363805606	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9982650004960116	WITHOUT_CLASSIFICATION	0.001734999503988422	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.999309281215862	WITHOUT_CLASSIFICATION	6.907187841380131E-4	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9996186664371645	WITHOUT_CLASSIFICATION	3.8133356283556903E-4	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9996280495246909	WITHOUT_CLASSIFICATION	3.7195047530915495E-4	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9942365650481814	WITHOUT_CLASSIFICATION	0.005763434951818709	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9997370648336332	WITHOUT_CLASSIFICATION	2.6293516636677377E-4	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9998125131179619	WITHOUT_CLASSIFICATION	1.8748688203800023E-4	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9972586201641505	WITHOUT_CLASSIFICATION	0.0027413798358495215	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9959653510945301	WITHOUT_CLASSIFICATION	0.004034648905469862	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9998688270308043	WITHOUT_CLASSIFICATION	1.3117296919582135E-4	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9998767453518556	WITHOUT_CLASSIFICATION	1.232546481444631E-4	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999177146310636	WITHOUT_CLASSIFICATION	8.228536893630883E-5	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9998850016203458	WITHOUT_CLASSIFICATION	1.1499837965428163E-4	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9986595074550184	WITHOUT_CLASSIFICATION	0.0013404925449814903	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9996222631330893	WITHOUT_CLASSIFICATION	3.7773686691074056E-4	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9996222631330893	WITHOUT_CLASSIFICATION	3.7773686691074056E-4	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999812113785492	WITHOUT_CLASSIFICATION	1.8788621450847783E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999832077935227	WITHOUT_CLASSIFICATION	1.679220647726564E-5	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999832077935227	WITHOUT_CLASSIFICATION	1.679220647726564E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.999705516856797	WITHOUT_CLASSIFICATION	2.9448314320299287E-4	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.999705516856797	WITHOUT_CLASSIFICATION	2.9448314320299287E-4	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9998589321380906	WITHOUT_CLASSIFICATION	1.4106786190933935E-4	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999574360367137	WITHOUT_CLASSIFICATION	4.256396328632809E-5	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9997451156994094	WITHOUT_CLASSIFICATION	2.5488430059058723E-4	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9998216550211906	WITHOUT_CLASSIFICATION	1.7834497880941973E-4	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999300213421662	WITHOUT_CLASSIFICATION	6.99786578337539E-5	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999207805176312	WITHOUT_CLASSIFICATION	7.921948236880018E-5	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999660586065172	WITHOUT_CLASSIFICATION	3.3941393482841375E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9998177306499499	WITHOUT_CLASSIFICATION	1.822693500501292E-4	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999349436492186	WITHOUT_CLASSIFICATION	6.505635078124984E-5	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999666805956035	WITHOUT_CLASSIFICATION	3.331940439663933E-5	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9998391705980028	WITHOUT_CLASSIFICATION	1.608294019972007E-4	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999396662306153	WITHOUT_CLASSIFICATION	6.033376938473615E-5	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995215177280501	WITHOUT_CLASSIFICATION	4.7848227194986233E-4	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9995215177280501	WITHOUT_CLASSIFICATION	4.7848227194986233E-4	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9991865776015286	WITHOUT_CLASSIFICATION	8.134223984714113E-4	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9921982930863846	WITHOUT_CLASSIFICATION	0.007801706913615408	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999770729802723	WITHOUT_CLASSIFICATION	2.2927019727639382E-5	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9997413354844679	WITHOUT_CLASSIFICATION	2.5866451553211773E-4	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999750082674485	WITHOUT_CLASSIFICATION	2.499173255157996E-5	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999420413127887	WITHOUT_CLASSIFICATION	5.795868721117441E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999301225465359	WITHOUT_CLASSIFICATION	6.987745346413356E-5	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999756537388222	WITHOUT_CLASSIFICATION	2.4346261177721547E-5	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9998525759642655	WITHOUT_CLASSIFICATION	1.4742403573460248E-4	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999062636938683	WITHOUT_CLASSIFICATION	9.373630613167525E-5	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999960129651755	WITHOUT_CLASSIFICATION	3.987034824492757E-6	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999045944336389	WITHOUT_CLASSIFICATION	9.540556636113548E-5	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999530583276643	WITHOUT_CLASSIFICATION	4.694167233570022E-5	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999567670407336	WITHOUT_CLASSIFICATION	4.32329592664569E-5	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9998338254616429	WITHOUT_CLASSIFICATION	1.661745383570872E-4	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999739274008619	WITHOUT_CLASSIFICATION	2.607259913804649E-5	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9997235904476004	WITHOUT_CLASSIFICATION	2.7640955239959555E-4	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9998412558076447	WITHOUT_CLASSIFICATION	1.587441923552862E-4	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9997595972394275	WITHOUT_CLASSIFICATION	2.4040276057254575E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999198184867074	WITHOUT_CLASSIFICATION	8.018151329258698E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9997569764053088	WITHOUT_CLASSIFICATION	2.4302359469108195E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999921067985928	WITHOUT_CLASSIFICATION	7.893201407211181E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999486278255552	WITHOUT_CLASSIFICATION	5.137217444481022E-5	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9998743345138068	WITHOUT_CLASSIFICATION	1.256654861930784E-4	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9998743345138068	WITHOUT_CLASSIFICATION	1.256654861930784E-4	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9998870544257706	WITHOUT_CLASSIFICATION	1.1294557422940185E-4	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999890291581665	WITHOUT_CLASSIFICATION	1.0970841833470571E-5	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999915265914711	WITHOUT_CLASSIFICATION	8.473408528872437E-6	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9995887040211252	WITHOUT_CLASSIFICATION	4.1129597887473436E-4	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999390836216876	WITHOUT_CLASSIFICATION	6.0916378312497375E-5	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9995846098325846	WITHOUT_CLASSIFICATION	4.1539016741553165E-4	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9997845094284109	WITHOUT_CLASSIFICATION	2.1549057158913468E-4	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999569275759408	WITHOUT_CLASSIFICATION	4.307242405916823E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9996339743913367	WITHOUT_CLASSIFICATION	3.660256086632672E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9995826954257768	WITHOUT_CLASSIFICATION	4.173045742231001E-4	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.999947142292719	WITHOUT_CLASSIFICATION	5.285770728102855E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9992935140480678	WITHOUT_CLASSIFICATION	7.064859519322509E-4	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9998608022781658	WITHOUT_CLASSIFICATION	1.39197721834154E-4	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999459877658827	WITHOUT_CLASSIFICATION	5.4012234117164725E-5	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9995921421042328	WITHOUT_CLASSIFICATION	4.0785789576728486E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9995951974727689	WITHOUT_CLASSIFICATION	4.048025272311426E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999544729542807	WITHOUT_CLASSIFICATION	4.552704571929962E-5	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999620363859215	WITHOUT_CLASSIFICATION	3.796361407842278E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999136616414893	WITHOUT_CLASSIFICATION	8.633835851062948E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9997447883628333	WITHOUT_CLASSIFICATION	2.5521163716663974E-4	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999725321625262	WITHOUT_CLASSIFICATION	2.7467837473828726E-5	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9997475942320655	WITHOUT_CLASSIFICATION	2.5240576793450476E-4	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9995951974727689	WITHOUT_CLASSIFICATION	4.048025272311426E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999620363859215	WITHOUT_CLASSIFICATION	3.796361407842278E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9997023855820284	WITHOUT_CLASSIFICATION	2.976144179716248E-4	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9998452441576821	WITHOUT_CLASSIFICATION	1.5475584231801549E-4	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9997456470013428	WITHOUT_CLASSIFICATION	2.543529986571434E-4	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.999882629288389	WITHOUT_CLASSIFICATION	1.1737071161093412E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991606485170266	WITHOUT_CLASSIFICATION	8.393514829734794E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999502222592641	WITHOUT_CLASSIFICATION	4.9777740735961644E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999433268341656	WITHOUT_CLASSIFICATION	5.66731658343608E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9998790512120317	WITHOUT_CLASSIFICATION	1.2094878796823163E-4	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999470539327051	WITHOUT_CLASSIFICATION	5.2946067294834585E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999470539327051	WITHOUT_CLASSIFICATION	5.2946067294834585E-5	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9997203141845923	WITHOUT_CLASSIFICATION	2.7968581540773174E-4	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.999298237391469	WITHOUT_CLASSIFICATION	7.017626085310474E-4	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999591534840272	WITHOUT_CLASSIFICATION	4.0846515972872394E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999946107243855	WITHOUT_CLASSIFICATION	5.3892756144942326E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999946107243855	WITHOUT_CLASSIFICATION	5.3892756144942326E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999553002858815	WITHOUT_CLASSIFICATION	4.469971411850107E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999444842040218	WITHOUT_CLASSIFICATION	5.551579597827974E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999322613326518	WITHOUT_CLASSIFICATION	6.773866734820412E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998832402980407	WITHOUT_CLASSIFICATION	1.1675970195942881E-4	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9998197064344299	WITHOUT_CLASSIFICATION	1.802935655702572E-4	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9998667594944848	WITHOUT_CLASSIFICATION	1.3324050551527774E-4	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999334271148331	WITHOUT_CLASSIFICATION	6.657288516692393E-5	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9998974668881179	WITHOUT_CLASSIFICATION	1.0253311188212683E-4	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999889216145028	WITHOUT_CLASSIFICATION	1.1078385497139144E-5	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.999995628351061	WITHOUT_CLASSIFICATION	4.371648938915012E-6	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.999924007270798	WITHOUT_CLASSIFICATION	7.599272920196059E-5	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9998652680764543	WITHOUT_CLASSIFICATION	1.3473192354572185E-4	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999322613326518	WITHOUT_CLASSIFICATION	6.773866734820412E-5	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9998832402980407	WITHOUT_CLASSIFICATION	1.1675970195942881E-4	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9997716953200736	WITHOUT_CLASSIFICATION	2.2830467992638912E-4	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998874113808662	WITHOUT_CLASSIFICATION	1.1258861913381572E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999751551168541	WITHOUT_CLASSIFICATION	2.4844883145818846E-5	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9992950867981781	WITHOUT_CLASSIFICATION	7.049132018218907E-4	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9992950867981781	WITHOUT_CLASSIFICATION	7.049132018218907E-4	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9995372006708987	WITHOUT_CLASSIFICATION	4.6279932910128096E-4	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9995372006708987	WITHOUT_CLASSIFICATION	4.6279932910128096E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999252614003399	WITHOUT_CLASSIFICATION	7.473859966005405E-5	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9998215195606346	WITHOUT_CLASSIFICATION	1.7848043936542315E-4	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9998836677497231	WITHOUT_CLASSIFICATION	1.1633225027692246E-4	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999243520262108	WITHOUT_CLASSIFICATION	7.564797378922477E-5	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.99982024921789	WITHOUT_CLASSIFICATION	1.7975078210995658E-4	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9998616476459167	WITHOUT_CLASSIFICATION	1.3835235408338903E-4	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999490622983896	WITHOUT_CLASSIFICATION	5.093770161035793E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9982417672407479	WITHOUT_CLASSIFICATION	0.001758232759252105	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999702309309415	WITHOUT_CLASSIFICATION	2.976906905847704E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999702309309415	WITHOUT_CLASSIFICATION	2.976906905847704E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9993003883871757	WITHOUT_CLASSIFICATION	6.996116128243281E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9993003883871757	WITHOUT_CLASSIFICATION	6.996116128243281E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9993003883871757	WITHOUT_CLASSIFICATION	6.996116128243281E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997882322522567	WITHOUT_CLASSIFICATION	2.1176774774344477E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997882322522567	WITHOUT_CLASSIFICATION	2.1176774774344477E-4	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9997882322522567	WITHOUT_CLASSIFICATION	2.1176774774344477E-4	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999800934023271	WITHOUT_CLASSIFICATION	1.990659767296062E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999800934023271	WITHOUT_CLASSIFICATION	1.990659767296062E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9994310455582758	WITHOUT_CLASSIFICATION	5.689544417241537E-4	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9994310455582758	WITHOUT_CLASSIFICATION	5.689544417241537E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999080274587909	WITHOUT_CLASSIFICATION	9.197254120913504E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999080274587909	WITHOUT_CLASSIFICATION	9.197254120913504E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.999746913722458	WITHOUT_CLASSIFICATION	2.530862775419042E-4	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.999746913722458	WITHOUT_CLASSIFICATION	2.530862775419042E-4	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999735127155559	WITHOUT_CLASSIFICATION	2.6487284444172306E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999735127155559	WITHOUT_CLASSIFICATION	2.6487284444172306E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999961240401457	WITHOUT_CLASSIFICATION	3.875959854301617E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999961240401457	WITHOUT_CLASSIFICATION	3.875959854301617E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999800934023271	WITHOUT_CLASSIFICATION	1.990659767296062E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9994310455582758	WITHOUT_CLASSIFICATION	5.689544417241537E-4	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999080274587909	WITHOUT_CLASSIFICATION	9.197254120913504E-5	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999735127155559	WITHOUT_CLASSIFICATION	2.6487284444172306E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.999961240401457	WITHOUT_CLASSIFICATION	3.875959854301617E-5	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.999760864315147	WITHOUT_CLASSIFICATION	2.3913568485307575E-4	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.954391019935185	WITHOUT_CLASSIFICATION	0.04560898006481491	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9998069564745937	WITHOUT_CLASSIFICATION	1.9304352540631703E-4	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9998405206416514	WITHOUT_CLASSIFICATION	1.594793583485201E-4	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999858277754474	WITHOUT_CLASSIFICATION	1.4172224552520888E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999201409831672	WITHOUT_CLASSIFICATION	7.985901683291638E-5	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9998989822800337	WITHOUT_CLASSIFICATION	1.0101771996626804E-4	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.99987255862816	WITHOUT_CLASSIFICATION	1.2744137184003668E-4	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9998986433664713	WITHOUT_CLASSIFICATION	1.0135663352874603E-4	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9997519667002489	WITHOUT_CLASSIFICATION	2.4803329975112365E-4	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9992830461781917	WITHOUT_CLASSIFICATION	7.169538218082668E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999016651377906	WITHOUT_CLASSIFICATION	9.83348622094698E-5	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9998078765539825	WITHOUT_CLASSIFICATION	1.9212344601737965E-4	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9987040144399615	WITHOUT_CLASSIFICATION	0.0012959855600384953	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9998683484887593	WITHOUT_CLASSIFICATION	1.3165151124067806E-4	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.999668079248141	WITHOUT_CLASSIFICATION	3.319207518590496E-4	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9996720914270749	WITHOUT_CLASSIFICATION	3.279085729251041E-4	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9986773460985885	WITHOUT_CLASSIFICATION	0.0013226539014114863	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9997100143136299	WITHOUT_CLASSIFICATION	2.8998568637007E-4	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9994730060392171	WITHOUT_CLASSIFICATION	5.269939607829273E-4	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9996653371628017	WITHOUT_CLASSIFICATION	3.346628371982909E-4	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.999668079248141	WITHOUT_CLASSIFICATION	3.319207518590496E-4	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9998112734193029	WITHOUT_CLASSIFICATION	1.8872658069706098E-4	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9998112734193029	WITHOUT_CLASSIFICATION	1.8872658069706098E-4	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9986773460985885	WITHOUT_CLASSIFICATION	0.0013226539014114863	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9992315880890187	WITHOUT_CLASSIFICATION	7.684119109813562E-4	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9993672111411883	WITHOUT_CLASSIFICATION	6.32788858811617E-4	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9998702997038846	WITHOUT_CLASSIFICATION	1.2970029611533682E-4	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9996881326474819	WITHOUT_CLASSIFICATION	3.1186735251811096E-4	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999567363305072	WITHOUT_CLASSIFICATION	4.326366949281033E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.999156423981178	WITHOUT_CLASSIFICATION	8.435760188220373E-4	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999594888769091	WITHOUT_CLASSIFICATION	4.0511123091009044E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999594888769091	WITHOUT_CLASSIFICATION	4.0511123091009044E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9991384552222415	WITHOUT_CLASSIFICATION	8.615447777583934E-4	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999204003894547	WITHOUT_CLASSIFICATION	7.959961054534565E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9991464444121089	WITHOUT_CLASSIFICATION	8.535555878910261E-4	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999498026736755	WITHOUT_CLASSIFICATION	5.0197326324447384E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999884858994859	WITHOUT_CLASSIFICATION	1.151410051402635E-5	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9998046450468263	WITHOUT_CLASSIFICATION	1.953549531736593E-4	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9999650952643336	WITHOUT_CLASSIFICATION	3.490473566633369E-5	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9995208809326264	WITHOUT_CLASSIFICATION	4.7911906737363626E-4	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9998976543057915	WITHOUT_CLASSIFICATION	1.0234569420856571E-4	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9998823356808133	WITHOUT_CLASSIFICATION	1.1766431918668041E-4	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999405515932653	WITHOUT_CLASSIFICATION	5.9448406734794605E-5	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999799415923036	WITHOUT_CLASSIFICATION	2.005840769631209E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9997777053893874	WITHOUT_CLASSIFICATION	2.2229461061256084E-4	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9998194867361302	WITHOUT_CLASSIFICATION	1.805132638697991E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9986828661027543	WITHOUT_CLASSIFICATION	0.0013171338972458014	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998988041683631	WITHOUT_CLASSIFICATION	1.011958316369978E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998988041683631	WITHOUT_CLASSIFICATION	1.011958316369978E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9998988041683631	WITHOUT_CLASSIFICATION	1.011958316369978E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998989480447942	WITHOUT_CLASSIFICATION	1.0105195520591082E-4	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998989480447942	WITHOUT_CLASSIFICATION	1.0105195520591082E-4	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9987927962459112	WITHOUT_CLASSIFICATION	0.0012072037540887086	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999427777569085	WITHOUT_CLASSIFICATION	5.722224309150498E-5	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994174811974605	WITHOUT_CLASSIFICATION	5.825188025394856E-4	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9994174811974605	WITHOUT_CLASSIFICATION	5.825188025394856E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9992688761317282	WITHOUT_CLASSIFICATION	7.311238682718369E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9957228198749241	WITHOUT_CLASSIFICATION	0.0042771801250759455	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9998540382551228	WITHOUT_CLASSIFICATION	1.459617448771896E-4	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9998540382551228	WITHOUT_CLASSIFICATION	1.459617448771896E-4	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9998483621960533	WITHOUT_CLASSIFICATION	1.516378039466601E-4	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999178930309541	WITHOUT_CLASSIFICATION	8.210696904577913E-5	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999594888769091	WITHOUT_CLASSIFICATION	4.0511123091009044E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999594888769091	WITHOUT_CLASSIFICATION	4.0511123091009044E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9998989480447942	WITHOUT_CLASSIFICATION	1.0105195520591082E-4	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999271410329947	WITHOUT_CLASSIFICATION	7.285896700532453E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999539016593115	WITHOUT_CLASSIFICATION	4.609834068842554E-5	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9998822867827906	WITHOUT_CLASSIFICATION	1.1771321720935151E-4	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9992830461781917	WITHOUT_CLASSIFICATION	7.169538218082668E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.999657186677942	WITHOUT_CLASSIFICATION	3.428133220579822E-4	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9997011301683169	WITHOUT_CLASSIFICATION	2.988698316830927E-4	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999581258025879	WITHOUT_CLASSIFICATION	4.187419741212434E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999109572477609	WITHOUT_CLASSIFICATION	8.904275223915739E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9997213852459677	WITHOUT_CLASSIFICATION	2.7861475403227287E-4	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999789241223003	WITHOUT_CLASSIFICATION	2.1075877699672792E-5	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9998244204213719	WITHOUT_CLASSIFICATION	1.7557957862826806E-4	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9998595797006379	WITHOUT_CLASSIFICATION	1.40420299362082E-4	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999852932796062	WITHOUT_CLASSIFICATION	1.4706720393926835E-5	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999397830696023	WITHOUT_CLASSIFICATION	6.0216930397565754E-5	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9975119186040591	WITHOUT_CLASSIFICATION	0.0024880813959408505	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9759617144517156	WITHOUT_CLASSIFICATION	0.024038285548284355	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9997038392308736	WITHOUT_CLASSIFICATION	2.961607691263548E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999510420701568	WITHOUT_CLASSIFICATION	4.895792984320702E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9997864650831284	WITHOUT_CLASSIFICATION	2.1353491687168142E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999942470438482	WITHOUT_CLASSIFICATION	5.752956151863064E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999942470438482	WITHOUT_CLASSIFICATION	5.752956151863064E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9997153153906749	WITHOUT_CLASSIFICATION	2.84684609325117E-4	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9991911294782196	WITHOUT_CLASSIFICATION	8.08870521780388E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9927076505621509	WITHOUT_CLASSIFICATION	0.007292349437849126	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9976881951024619	WITHOUT_CLASSIFICATION	0.0023118048975381902	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9998357967316662	WITHOUT_CLASSIFICATION	1.6420326833382933E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.998398165881089	WITHOUT_CLASSIFICATION	0.001601834118911	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.999604331517739	WITHOUT_CLASSIFICATION	3.956684822610208E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999310653629784	WITHOUT_CLASSIFICATION	6.89346370216864E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9993270983322247	WITHOUT_CLASSIFICATION	6.72901667775354E-4	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.999817303823228	WITHOUT_CLASSIFICATION	1.826961767721662E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9992670373065661	WITHOUT_CLASSIFICATION	7.329626934338185E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999202783366713	WITHOUT_CLASSIFICATION	7.972166332870726E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9997917648648483	WITHOUT_CLASSIFICATION	2.082351351516151E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9998612153507572	WITHOUT_CLASSIFICATION	1.3878464924280004E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999728455827315	WITHOUT_CLASSIFICATION	2.7154417268618266E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999369958070398	WITHOUT_CLASSIFICATION	6.30041929602457E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999082703039861	WITHOUT_CLASSIFICATION	9.172969601388254E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999953634625148	WITHOUT_CLASSIFICATION	4.6365374852032445E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999953634625148	WITHOUT_CLASSIFICATION	4.6365374852032445E-5	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999744275710146	WITHOUT_CLASSIFICATION	2.5572428985396466E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999693035109786	WITHOUT_CLASSIFICATION	3.069648902144407E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9998601662485259	WITHOUT_CLASSIFICATION	1.3983375147406368E-4	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999843929972898	WITHOUT_CLASSIFICATION	1.560700271016938E-5	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9998250736822292	WITHOUT_CLASSIFICATION	1.7492631777078554E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999418827955745	WITHOUT_CLASSIFICATION	5.811720442563221E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.999821261422619	WITHOUT_CLASSIFICATION	1.7873857738109894E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999362842804373	WITHOUT_CLASSIFICATION	6.371571956264655E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999140246829707	WITHOUT_CLASSIFICATION	8.597531702922067E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998871732804623	WITHOUT_CLASSIFICATION	1.1282671953767538E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9998609644782536	WITHOUT_CLASSIFICATION	1.3903552174636996E-4	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.999997316919799	WITHOUT_CLASSIFICATION	2.6830802009665056E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999972583833928	WITHOUT_CLASSIFICATION	2.741616607143236E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9998369207847907	WITHOUT_CLASSIFICATION	1.630792152092745E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999277613513718	WITHOUT_CLASSIFICATION	7.223864862815594E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.99952785623467	WITHOUT_CLASSIFICATION	4.7214376532994634E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999324830953547	WITHOUT_CLASSIFICATION	6.751690464529934E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9996388991607827	WITHOUT_CLASSIFICATION	3.6110083921728886E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9997292695742767	WITHOUT_CLASSIFICATION	2.7073042572331213E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9998835998499123	WITHOUT_CLASSIFICATION	1.1640015008778215E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999810875450887	WITHOUT_CLASSIFICATION	1.8912454911307132E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999578569583653	WITHOUT_CLASSIFICATION	4.2143041634699736E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999840130118643	WITHOUT_CLASSIFICATION	1.5986988135706244E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999577620368942	WITHOUT_CLASSIFICATION	4.223796310575043E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999304481395437	WITHOUT_CLASSIFICATION	6.955186045633883E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999467929995054	WITHOUT_CLASSIFICATION	5.320700049455506E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999966881718642	WITHOUT_CLASSIFICATION	3.3118281357442335E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9998684984256567	WITHOUT_CLASSIFICATION	1.3150157434333446E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9994231543249721	WITHOUT_CLASSIFICATION	5.768456750279656E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997899897691241	WITHOUT_CLASSIFICATION	2.1001023087591596E-4	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9997902970799812	WITHOUT_CLASSIFICATION	2.0970292001887261E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998721490033212	WITHOUT_CLASSIFICATION	1.2785099667877065E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9996174280292045	WITHOUT_CLASSIFICATION	3.8257197079547597E-4	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.999550114854007	WITHOUT_CLASSIFICATION	4.498851459929013E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998874238040515	WITHOUT_CLASSIFICATION	1.125761959485082E-4	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9996645873566685	WITHOUT_CLASSIFICATION	3.354126433313969E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999105536793116	WITHOUT_CLASSIFICATION	8.944632068840253E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9998401303068821	WITHOUT_CLASSIFICATION	1.5986969311784557E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9998831376567675	WITHOUT_CLASSIFICATION	1.1686234323255931E-4	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999624845519457	WITHOUT_CLASSIFICATION	3.751544805431012E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998439376061147	WITHOUT_CLASSIFICATION	1.5606239388521313E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9998337505963172	WITHOUT_CLASSIFICATION	1.6624940368275957E-4	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9998450285295956	WITHOUT_CLASSIFICATION	1.5497147040455098E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9997124142156726	WITHOUT_CLASSIFICATION	2.875857843274464E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.999883743333113	WITHOUT_CLASSIFICATION	1.1625666688700786E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9998559311690168	WITHOUT_CLASSIFICATION	1.4406883098323536E-4	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998110211806666	WITHOUT_CLASSIFICATION	1.889788193333472E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9847504637412149	WITHOUT_CLASSIFICATION	0.01524953625878519	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9997833905419433	WITHOUT_CLASSIFICATION	2.1660945805678097E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9996468438155283	WITHOUT_CLASSIFICATION	3.5315618447168145E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9997591530172559	WITHOUT_CLASSIFICATION	2.4084698274402704E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999084180847093	WITHOUT_CLASSIFICATION	9.158191529074461E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998248787961229	WITHOUT_CLASSIFICATION	1.75121203877079E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9998958249736088	WITHOUT_CLASSIFICATION	1.0417502639124035E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9991834921012607	WITHOUT_CLASSIFICATION	8.165078987392526E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999922222413507	WITHOUT_CLASSIFICATION	7.777758649297159E-5	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9981066375755404	WITHOUT_CLASSIFICATION	0.0018933624244594914	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999554280331182	WITHOUT_CLASSIFICATION	4.457196688178731E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.998385242181855	WITHOUT_CLASSIFICATION	0.0016147578181449644	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998799820765194	WITHOUT_CLASSIFICATION	1.2001792348048848E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.999863850762693	WITHOUT_CLASSIFICATION	1.3614923730695153E-4	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999441211453355	WITHOUT_CLASSIFICATION	5.587885466461096E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999625934844849	WITHOUT_CLASSIFICATION	3.7406515515046545E-5	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999511046018306	WITHOUT_CLASSIFICATION	4.889539816933341E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997703102551202	WITHOUT_CLASSIFICATION	2.296897448797989E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9990772191686798	WITHOUT_CLASSIFICATION	9.227808313202203E-4	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9989960734468339	WITHOUT_CLASSIFICATION	0.0010039265531661087	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998643458117852	WITHOUT_CLASSIFICATION	1.356541882147719E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9998938957712623	WITHOUT_CLASSIFICATION	1.0610422873772832E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999938135069957	WITHOUT_CLASSIFICATION	6.186493004354504E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999351098451912	WITHOUT_CLASSIFICATION	6.489015480884478E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999308154647845	WITHOUT_CLASSIFICATION	6.918453521556321E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.998177553217464	WITHOUT_CLASSIFICATION	0.0018224467825358874	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9998902104958728	WITHOUT_CLASSIFICATION	1.097895041273006E-4	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997241970319323	WITHOUT_CLASSIFICATION	2.7580296806778323E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997506541052158	WITHOUT_CLASSIFICATION	2.493458947841833E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979193270981334	WITHOUT_CLASSIFICATION	0.0020806729018665545	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998664238878208	WITHOUT_CLASSIFICATION	1.3357611217919136E-4	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998201570905194	WITHOUT_CLASSIFICATION	1.7984290948065994E-4	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997439852578449	WITHOUT_CLASSIFICATION	2.560147421550439E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998661945744576	WITHOUT_CLASSIFICATION	1.3380542554236054E-4	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997875862377	WITHOUT_CLASSIFICATION	2.124137622999812E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998572944253776	WITHOUT_CLASSIFICATION	1.42705574622442E-4	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998588137675896	WITHOUT_CLASSIFICATION	1.411862324105489E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998049573108	WITHOUT_CLASSIFICATION	0.0019504268919998944	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998663060839416	WITHOUT_CLASSIFICATION	1.3369391605845202E-4	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998708237419425	WITHOUT_CLASSIFICATION	1.2917625805755506E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9976660663843289	WITHOUT_CLASSIFICATION	0.0023339336156710327	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9978246432513844	WITHOUT_CLASSIFICATION	0.0021753567486155817	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9978246432513844	WITHOUT_CLASSIFICATION	0.0021753567486155817	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994285878088587	WITHOUT_CLASSIFICATION	5.714121911413671E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9984934740952026	WITHOUT_CLASSIFICATION	0.0015065259047973773	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9984814168831447	WITHOUT_CLASSIFICATION	0.0015185831168552909	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977447647597202	WITHOUT_CLASSIFICATION	0.0022552352402798424	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993840614377286	WITHOUT_CLASSIFICATION	6.159385622713323E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9983091508409061	WITHOUT_CLASSIFICATION	0.0016908491590938888	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988439966852555	WITHOUT_CLASSIFICATION	0.00115600331474449	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998271847098854	WITHOUT_CLASSIFICATION	1.7281529011457222E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998049573108	WITHOUT_CLASSIFICATION	0.0019504268919998944	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998144096059167	WITHOUT_CLASSIFICATION	1.8559039408333383E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9977447647597202	WITHOUT_CLASSIFICATION	0.0022552352402798424	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988146626510845	WITHOUT_CLASSIFICATION	0.0011853373489154422	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998605945502945	WITHOUT_CLASSIFICATION	1.3940544970546934E-4	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984934740952026	WITHOUT_CLASSIFICATION	0.0015065259047973773	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985468725685065	WITHOUT_CLASSIFICATION	0.0014531274314935417	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998615785341285	WITHOUT_CLASSIFICATION	1.3842146587155567E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999749931236611	WITHOUT_CLASSIFICATION	2.500687633890069E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998272242010626	WITHOUT_CLASSIFICATION	1.7277579893738466E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998902104958728	WITHOUT_CLASSIFICATION	1.097895041273006E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997995453789608	WITHOUT_CLASSIFICATION	2.0045462103930283E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999749931236611	WITHOUT_CLASSIFICATION	2.500687633890069E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997995453789608	WITHOUT_CLASSIFICATION	2.0045462103930283E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9978196661074367	WITHOUT_CLASSIFICATION	0.0021803338925632985	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982252930585063	WITHOUT_CLASSIFICATION	0.0017747069414937144	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994569162940058	WITHOUT_CLASSIFICATION	5.430837059941316E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984080129132776	WITHOUT_CLASSIFICATION	0.0015919870867224628	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986325524747148	WITHOUT_CLASSIFICATION	0.0013674475252851688	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980826182604186	WITHOUT_CLASSIFICATION	0.001917381739581455	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998062730983583	WITHOUT_CLASSIFICATION	1.9372690164158132E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.998177553217464	WITHOUT_CLASSIFICATION	0.0018224467825358876	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998049573108	WITHOUT_CLASSIFICATION	0.0019504268919998944	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979816727320125	WITHOUT_CLASSIFICATION	0.0020183272679874685	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997415711651909	WITHOUT_CLASSIFICATION	2.584288348090497E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998062730983583	WITHOUT_CLASSIFICATION	1.9372690164158132E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998231371617584	WITHOUT_CLASSIFICATION	1.7686283824156745E-4	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997874576633066	WITHOUT_CLASSIFICATION	2.125423366933318E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997764808482891	WITHOUT_CLASSIFICATION	2.2351915171091053E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998668257318832	WITHOUT_CLASSIFICATION	1.331742681168578E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983761988893657	WITHOUT_CLASSIFICATION	0.0016238011106342802	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999850787227869	WITHOUT_CLASSIFICATION	1.492127721310145E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9983761988893657	WITHOUT_CLASSIFICATION	0.0016238011106342802	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998808804862273	WITHOUT_CLASSIFICATION	1.1911951377271697E-4	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998653057811996	WITHOUT_CLASSIFICATION	1.346942188003236E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9976500619003897	WITHOUT_CLASSIFICATION	0.002349938099610274	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997695371374896	WITHOUT_CLASSIFICATION	2.3046286251035913E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998708237419425	WITHOUT_CLASSIFICATION	1.2917625805755506E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999728455827315	WITHOUT_CLASSIFICATION	2.7154417268618266E-5	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9991606485170266	WITHOUT_CLASSIFICATION	8.393514829734794E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997604950790298	WITHOUT_CLASSIFICATION	2.3950492097021218E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983761988893657	WITHOUT_CLASSIFICATION	0.0016238011106342802	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998139661064349	WITHOUT_CLASSIFICATION	1.8603389356509168E-4	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997979983155593	WITHOUT_CLASSIFICATION	2.020016844406419E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977567523415337	WITHOUT_CLASSIFICATION	0.0022432476584662887	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999331452337569	WITHOUT_CLASSIFICATION	6.68547662430475E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999651323778893	WITHOUT_CLASSIFICATION	3.4867622110731484E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.999908827047616	WITHOUT_CLASSIFICATION	9.117295238398617E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999351121924941	WITHOUT_CLASSIFICATION	6.488780750592694E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999369958070398	WITHOUT_CLASSIFICATION	6.30041929602457E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9997549984205455	WITHOUT_CLASSIFICATION	2.450015794545329E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9997571979488803	WITHOUT_CLASSIFICATION	2.4280205111976106E-4	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999415211891066	WITHOUT_CLASSIFICATION	5.847881089341713E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9759617144517156	WITHOUT_CLASSIFICATION	0.024038285548284355	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9997038392308736	WITHOUT_CLASSIFICATION	2.961607691263548E-4	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999510420701568	WITHOUT_CLASSIFICATION	4.895792984320702E-5	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9997864650831284	WITHOUT_CLASSIFICATION	2.1353491687168142E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999942470438482	WITHOUT_CLASSIFICATION	5.752956151863064E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9991911294782196	WITHOUT_CLASSIFICATION	8.08870521780388E-4	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9927076505621509	WITHOUT_CLASSIFICATION	0.007292349437849126	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9976881951024619	WITHOUT_CLASSIFICATION	0.0023118048975381902	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9998357967316662	WITHOUT_CLASSIFICATION	1.6420326833382933E-4	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.998398165881089	WITHOUT_CLASSIFICATION	0.001601834118911	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999441211453355	WITHOUT_CLASSIFICATION	5.587885466461096E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.999817303823228	WITHOUT_CLASSIFICATION	1.826961767721662E-4	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9992670373065661	WITHOUT_CLASSIFICATION	7.329626934338185E-4	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999202783366713	WITHOUT_CLASSIFICATION	7.972166332870726E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9997917648648483	WITHOUT_CLASSIFICATION	2.082351351516151E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9998612153507572	WITHOUT_CLASSIFICATION	1.3878464924280004E-4	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9993270983322247	WITHOUT_CLASSIFICATION	6.72901667775354E-4	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999728455827315	WITHOUT_CLASSIFICATION	2.7154417268618266E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999082703039861	WITHOUT_CLASSIFICATION	9.172969601388254E-5	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999953634625148	WITHOUT_CLASSIFICATION	4.6365374852032445E-5	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999953634625148	WITHOUT_CLASSIFICATION	4.6365374852032445E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998807448601787	WITHOUT_CLASSIFICATION	1.1925513982127872E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999725932624774	WITHOUT_CLASSIFICATION	2.7406737522539735E-5	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999676025311528	WITHOUT_CLASSIFICATION	3.2397468847195464E-5	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9998601662485259	WITHOUT_CLASSIFICATION	1.3983375147406368E-4	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9998250736822292	WITHOUT_CLASSIFICATION	1.7492631777078554E-4	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9997974669745912	WITHOUT_CLASSIFICATION	2.025330254088001E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999418827955745	WITHOUT_CLASSIFICATION	5.811720442563221E-5	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.999821261422619	WITHOUT_CLASSIFICATION	1.7873857738109894E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999362842804373	WITHOUT_CLASSIFICATION	6.371571956264655E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9998474031474276	WITHOUT_CLASSIFICATION	1.5259685257230465E-4	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999140246829707	WITHOUT_CLASSIFICATION	8.597531702922067E-5	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9993926322188468	WITHOUT_CLASSIFICATION	6.073677811532338E-4	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999972583833928	WITHOUT_CLASSIFICATION	2.741616607143236E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9998871732804623	WITHOUT_CLASSIFICATION	1.1282671953767538E-4	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9998609644782536	WITHOUT_CLASSIFICATION	1.3903552174636996E-4	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999277613513718	WITHOUT_CLASSIFICATION	7.223864862815594E-5	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.99952785623467	WITHOUT_CLASSIFICATION	4.7214376532994634E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999324830953547	WITHOUT_CLASSIFICATION	6.751690464529934E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9962880740583838	WITHOUT_CLASSIFICATION	0.0037119259416162126	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9996388991607827	WITHOUT_CLASSIFICATION	3.6110083921728886E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9997292695742767	WITHOUT_CLASSIFICATION	2.7073042572331213E-4	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9998835998499123	WITHOUT_CLASSIFICATION	1.1640015008778215E-4	DEFECT
// port	WITHOUT_CLASSIFICATION	0.999810875450887	WITHOUT_CLASSIFICATION	1.8912454911307132E-4	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999578569583653	WITHOUT_CLASSIFICATION	4.2143041634699736E-5	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999840130118643	WITHOUT_CLASSIFICATION	1.5986988135706244E-5	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999577620368942	WITHOUT_CLASSIFICATION	4.223796310575043E-5	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999304481395437	WITHOUT_CLASSIFICATION	6.955186045633883E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999467929995054	WITHOUT_CLASSIFICATION	5.320700049455506E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999467929995054	WITHOUT_CLASSIFICATION	5.320700049455506E-5	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999966881718642	WITHOUT_CLASSIFICATION	3.3118281357442335E-6	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9998684984256567	WITHOUT_CLASSIFICATION	1.3150157434333446E-4	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9994231543249721	WITHOUT_CLASSIFICATION	5.768456750279656E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9997899897691241	WITHOUT_CLASSIFICATION	2.1001023087591596E-4	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9998721490033212	WITHOUT_CLASSIFICATION	1.2785099667877065E-4	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9996174280292045	WITHOUT_CLASSIFICATION	3.8257197079547597E-4	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.999550114854007	WITHOUT_CLASSIFICATION	4.498851459929013E-4	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9998874238040515	WITHOUT_CLASSIFICATION	1.125761959485082E-4	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999105536793116	WITHOUT_CLASSIFICATION	8.944632068840253E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999304481395437	WITHOUT_CLASSIFICATION	6.955186045633883E-5	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9998401303068821	WITHOUT_CLASSIFICATION	1.5986969311784557E-4	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9998831376567675	WITHOUT_CLASSIFICATION	1.1686234323255931E-4	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999624845519457	WITHOUT_CLASSIFICATION	3.751544805431012E-5	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9998439376061147	WITHOUT_CLASSIFICATION	1.5606239388521313E-4	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9998337505963172	WITHOUT_CLASSIFICATION	1.6624940368275957E-4	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9997124142156726	WITHOUT_CLASSIFICATION	2.875857843274464E-4	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.999883743333113	WITHOUT_CLASSIFICATION	1.1625666688700786E-4	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9998559311690168	WITHOUT_CLASSIFICATION	1.4406883098323536E-4	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9998110211806666	WITHOUT_CLASSIFICATION	1.889788193333472E-4	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9847504637412149	WITHOUT_CLASSIFICATION	0.01524953625878519	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9997833905419433	WITHOUT_CLASSIFICATION	2.1660945805678097E-4	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9996468438155283	WITHOUT_CLASSIFICATION	3.5315618447168145E-4	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9997591530172559	WITHOUT_CLASSIFICATION	2.4084698274402704E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999084180847093	WITHOUT_CLASSIFICATION	9.158191529074461E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9998248787961229	WITHOUT_CLASSIFICATION	1.75121203877079E-4	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9998958249736088	WITHOUT_CLASSIFICATION	1.0417502639124035E-4	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.999922222413507	WITHOUT_CLASSIFICATION	7.777758649297159E-5	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999554280331182	WITHOUT_CLASSIFICATION	4.457196688178731E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.998385242181855	WITHOUT_CLASSIFICATION	0.0016147578181449644	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998799820765194	WITHOUT_CLASSIFICATION	1.2001792348048848E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.999863850762693	WITHOUT_CLASSIFICATION	1.3614923730695153E-4	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.999689131213215	WITHOUT_CLASSIFICATION	3.1086878678497696E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999934449845837	WITHOUT_CLASSIFICATION	6.55501541630799E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9949621689353464	WITHOUT_CLASSIFICATION	0.005037831064653534	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999625934844849	WITHOUT_CLASSIFICATION	3.7406515515046545E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998632362521173	WITHOUT_CLASSIFICATION	1.3676374788270095E-4	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999511046018306	WITHOUT_CLASSIFICATION	4.889539816933341E-5	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9997703102551202	WITHOUT_CLASSIFICATION	2.296897448797989E-4	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9990772191686798	WITHOUT_CLASSIFICATION	9.227808313202203E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999714204081903	WITHOUT_CLASSIFICATION	2.8579591809737543E-5	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9989960734468339	WITHOUT_CLASSIFICATION	0.0010039265531661087	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9998643458117852	WITHOUT_CLASSIFICATION	1.356541882147719E-4	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9998938957712623	WITHOUT_CLASSIFICATION	1.0610422873772832E-4	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999938135069957	WITHOUT_CLASSIFICATION	6.186493004354504E-6	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999351098451912	WITHOUT_CLASSIFICATION	6.489015480884478E-5	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999308154647845	WITHOUT_CLASSIFICATION	6.918453521556321E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.998177553217464	WITHOUT_CLASSIFICATION	0.0018224467825358874	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9998902104958728	WITHOUT_CLASSIFICATION	1.097895041273006E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997506541052158	WITHOUT_CLASSIFICATION	2.493458947841833E-4	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979193270981334	WITHOUT_CLASSIFICATION	0.0020806729018665545	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998664238878208	WITHOUT_CLASSIFICATION	1.3357611217919136E-4	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998201570905194	WITHOUT_CLASSIFICATION	1.7984290948065994E-4	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997439852578449	WITHOUT_CLASSIFICATION	2.560147421550439E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998661945744576	WITHOUT_CLASSIFICATION	1.3380542554236054E-4	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9986958646549781	WITHOUT_CLASSIFICATION	0.0013041353450219035	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998588137675896	WITHOUT_CLASSIFICATION	1.411862324105489E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998049573108	WITHOUT_CLASSIFICATION	0.0019504268919998944	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998663060839416	WITHOUT_CLASSIFICATION	1.3369391605845202E-4	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998708237419425	WITHOUT_CLASSIFICATION	1.2917625805755506E-4	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9976660663843289	WITHOUT_CLASSIFICATION	0.0023339336156710327	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988145415554717	WITHOUT_CLASSIFICATION	0.0011854584445283355	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9978246432513844	WITHOUT_CLASSIFICATION	0.0021753567486155817	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9984934740952026	WITHOUT_CLASSIFICATION	0.0015065259047973773	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9988439966852555	WITHOUT_CLASSIFICATION	0.00115600331474449	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9978246432513844	WITHOUT_CLASSIFICATION	0.0021753567486155817	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9984814168831447	WITHOUT_CLASSIFICATION	0.0015185831168552909	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977447647597202	WITHOUT_CLASSIFICATION	0.0022552352402798424	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993840614377286	WITHOUT_CLASSIFICATION	6.159385622713323E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9983091508409061	WITHOUT_CLASSIFICATION	0.0016908491590938888	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998271847098854	WITHOUT_CLASSIFICATION	1.7281529011457222E-4	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.998049573108	WITHOUT_CLASSIFICATION	0.0019504268919998944	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998144096059167	WITHOUT_CLASSIFICATION	1.8559039408333383E-4	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998823526442372	WITHOUT_CLASSIFICATION	1.1764735576283889E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9989894534378755	WITHOUT_CLASSIFICATION	0.0010105465621244552	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9988146626510845	WITHOUT_CLASSIFICATION	0.0011853373489154422	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998605945502945	WITHOUT_CLASSIFICATION	1.3940544970546934E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9985468725685065	WITHOUT_CLASSIFICATION	0.0014531274314935417	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999070467333611	WITHOUT_CLASSIFICATION	9.295326663892185E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984934740952026	WITHOUT_CLASSIFICATION	0.0015065259047973773	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998615785341285	WITHOUT_CLASSIFICATION	1.3842146587155567E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999749931236611	WITHOUT_CLASSIFICATION	2.500687633890069E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998902104958728	WITHOUT_CLASSIFICATION	1.097895041273006E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998902104958728	WITHOUT_CLASSIFICATION	1.097895041273006E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997995453789608	WITHOUT_CLASSIFICATION	2.0045462103930283E-4	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9978196661074367	WITHOUT_CLASSIFICATION	0.0021803338925632985	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999749931236611	WITHOUT_CLASSIFICATION	2.500687633890069E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9982252930585063	WITHOUT_CLASSIFICATION	0.0017747069414937144	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9994569162940058	WITHOUT_CLASSIFICATION	5.430837059941316E-4	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9984080129132776	WITHOUT_CLASSIFICATION	0.0015919870867224628	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9986325524747148	WITHOUT_CLASSIFICATION	0.0013674475252851688	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9980826182604186	WITHOUT_CLASSIFICATION	0.001917381739581455	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9975693483060852	WITHOUT_CLASSIFICATION	0.0024306516939147363	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998062730983583	WITHOUT_CLASSIFICATION	1.9372690164158132E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.998177553217464	WITHOUT_CLASSIFICATION	0.0018224467825358876	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.998049573108	WITHOUT_CLASSIFICATION	0.0019504268919998944	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9979816727320125	WITHOUT_CLASSIFICATION	0.0020183272679874685	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998653872688478	WITHOUT_CLASSIFICATION	1.3461273115225426E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9987841404165054	WITHOUT_CLASSIFICATION	0.0012158595834944905	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997415711651909	WITHOUT_CLASSIFICATION	2.584288348090497E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998062730983583	WITHOUT_CLASSIFICATION	1.9372690164158132E-4	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998231371617584	WITHOUT_CLASSIFICATION	1.7686283824156745E-4	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997764808482891	WITHOUT_CLASSIFICATION	2.2351915171091053E-4	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998668257318832	WITHOUT_CLASSIFICATION	1.331742681168578E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983761988893657	WITHOUT_CLASSIFICATION	0.0016238011106342802	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999850787227869	WITHOUT_CLASSIFICATION	1.492127721310145E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9983761988893657	WITHOUT_CLASSIFICATION	0.0016238011106342802	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998808804862273	WITHOUT_CLASSIFICATION	1.1911951377271697E-4	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998653057811996	WITHOUT_CLASSIFICATION	1.346942188003236E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9976500619003897	WITHOUT_CLASSIFICATION	0.002349938099610274	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997695371374896	WITHOUT_CLASSIFICATION	2.3046286251035913E-4	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998708237419425	WITHOUT_CLASSIFICATION	1.2917625805755506E-4	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998754084571976	WITHOUT_CLASSIFICATION	1.2459154280244417E-4	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998607530896222	WITHOUT_CLASSIFICATION	1.392469103777252E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998139661064349	WITHOUT_CLASSIFICATION	1.8603389356509168E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9997604950790298	WITHOUT_CLASSIFICATION	2.3950492097021218E-4	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9983761988893657	WITHOUT_CLASSIFICATION	0.0016238011106342802	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998139661064349	WITHOUT_CLASSIFICATION	1.8603389356509168E-4	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997979983155593	WITHOUT_CLASSIFICATION	2.020016844406419E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9977567523415337	WITHOUT_CLASSIFICATION	0.0022432476584662887	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998807448601787	WITHOUT_CLASSIFICATION	1.1925513982127872E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999331452337569	WITHOUT_CLASSIFICATION	6.68547662430475E-5	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999651323778893	WITHOUT_CLASSIFICATION	3.4867622110731484E-5	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.999908827047616	WITHOUT_CLASSIFICATION	9.117295238398617E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999351121924941	WITHOUT_CLASSIFICATION	6.488780750592694E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999728455827315	WITHOUT_CLASSIFICATION	2.7154417268618266E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9997549984205455	WITHOUT_CLASSIFICATION	2.450015794545329E-4	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9997571979488803	WITHOUT_CLASSIFICATION	2.4280205111976106E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999725932624774	WITHOUT_CLASSIFICATION	2.7406737522539735E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999478572106705	WITHOUT_CLASSIFICATION	5.2142789329604604E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999478572106705	WITHOUT_CLASSIFICATION	5.2142789329604604E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9995630338007454	WITHOUT_CLASSIFICATION	4.3696619925457324E-4	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999983635494436	WITHOUT_CLASSIFICATION	1.636450556423583E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9999644560889505	WITHOUT_CLASSIFICATION	3.5543911049499495E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999012511888669	WITHOUT_CLASSIFICATION	9.874881113319048E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999716991224886	WITHOUT_CLASSIFICATION	2.830087751140066E-5	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999828963860472	WITHOUT_CLASSIFICATION	1.710361395279473E-5	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999984460043083	WITHOUT_CLASSIFICATION	1.553995691623039E-6	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999270132742439	WITHOUT_CLASSIFICATION	7.298672575607035E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999491012900132	WITHOUT_CLASSIFICATION	5.089870998666254E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999396138950071	WITHOUT_CLASSIFICATION	6.0386104992816024E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999763975947831	WITHOUT_CLASSIFICATION	2.360240521696347E-5	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999587036712354	WITHOUT_CLASSIFICATION	4.129632876459095E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999894033679853	WITHOUT_CLASSIFICATION	1.0596632014719082E-5	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999974078262549	WITHOUT_CLASSIFICATION	2.5921737450926996E-6	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.998367410145631	WITHOUT_CLASSIFICATION	0.0016325898543690749	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9998745340921158	WITHOUT_CLASSIFICATION	1.2546590788414577E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996798419116082	WITHOUT_CLASSIFICATION	3.201580883918789E-4	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9998851650803593	WITHOUT_CLASSIFICATION	1.1483491964072907E-4	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999434822898069	WITHOUT_CLASSIFICATION	5.651771019319449E-5	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9996409962326083	WITHOUT_CLASSIFICATION	3.5900376739164485E-4	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9998263139314882	WITHOUT_CLASSIFICATION	1.736860685116632E-4	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999168506945512	WITHOUT_CLASSIFICATION	8.314930544881599E-5	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999606246694319	WITHOUT_CLASSIFICATION	3.937533056810474E-4	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9998717394204417	WITHOUT_CLASSIFICATION	1.282605795583352E-4	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9969651090005478	WITHOUT_CLASSIFICATION	0.0030348909994522798	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999635112331281	WITHOUT_CLASSIFICATION	3.6488766871936145E-5	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999407626161094	WITHOUT_CLASSIFICATION	5.923738389060575E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999979632411187	WITHOUT_CLASSIFICATION	2.0367588813018837E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999979632411187	WITHOUT_CLASSIFICATION	2.0367588813018837E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999840262045135	WITHOUT_CLASSIFICATION	1.5973795486471878E-5	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999932926668014	WITHOUT_CLASSIFICATION	6.707333198626198E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9997263113125231	WITHOUT_CLASSIFICATION	2.736886874768954E-4	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9998992030660458	WITHOUT_CLASSIFICATION	1.0079693395408183E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999607206637	WITHOUT_CLASSIFICATION	3.9279336299999914E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999877142828988	WITHOUT_CLASSIFICATION	1.2285717101193273E-5	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999640816461401	WITHOUT_CLASSIFICATION	3.5918353859736886E-5	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9997959102647161	WITHOUT_CLASSIFICATION	2.0408973528387056E-4	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9998293618513406	WITHOUT_CLASSIFICATION	1.7063814865932015E-4	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999128655999574	WITHOUT_CLASSIFICATION	8.713440004260318E-5	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999128655999574	WITHOUT_CLASSIFICATION	8.713440004260318E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995684811910386	WITHOUT_CLASSIFICATION	4.3151880896143987E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995684811910386	WITHOUT_CLASSIFICATION	4.3151880896143987E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999421455429243	WITHOUT_CLASSIFICATION	5.785445707580131E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999734262621202	WITHOUT_CLASSIFICATION	2.6573737879854248E-5	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9998099815024967	WITHOUT_CLASSIFICATION	1.9001849750326135E-4	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999243234503908	WITHOUT_CLASSIFICATION	7.567654960926344E-5	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9997291660530602	WITHOUT_CLASSIFICATION	2.708339469398137E-4	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9998913177956424	WITHOUT_CLASSIFICATION	1.086822043575412E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.999906423942154	WITHOUT_CLASSIFICATION	9.357605784599638E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999926285395918	WITHOUT_CLASSIFICATION	7.371460408215024E-6	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9969982753770791	WITHOUT_CLASSIFICATION	0.00300172462292097	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9998493949759696	WITHOUT_CLASSIFICATION	1.5060502403037304E-4	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9998340250115333	WITHOUT_CLASSIFICATION	1.6597498846672573E-4	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999823175065845	WITHOUT_CLASSIFICATION	1.7682493415477074E-5	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999568620995577	WITHOUT_CLASSIFICATION	4.313790044221898E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999886679757551	WITHOUT_CLASSIFICATION	1.1332024244833677E-5	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999917429772562	WITHOUT_CLASSIFICATION	8.25702274376125E-6	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999655985095265	WITHOUT_CLASSIFICATION	3.440149047354774E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999689991662983	WITHOUT_CLASSIFICATION	3.100083370165408E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999547108698211	WITHOUT_CLASSIFICATION	4.528913017894117E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9847594615924883	WITHOUT_CLASSIFICATION	0.015240538407511713	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999433327605819	WITHOUT_CLASSIFICATION	5.666723941812242E-5	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9999468432847782	WITHOUT_CLASSIFICATION	5.315671522180842E-5	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.999743944283352	WITHOUT_CLASSIFICATION	2.5605571664798183E-4	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9998661136837684	WITHOUT_CLASSIFICATION	1.3388631623155122E-4	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.999841799410124	WITHOUT_CLASSIFICATION	1.582005898759662E-4	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999705126603055	WITHOUT_CLASSIFICATION	2.9487339694555153E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997507887350384	WITHOUT_CLASSIFICATION	2.4921126496156424E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999502849139469	WITHOUT_CLASSIFICATION	4.971508605308395E-5	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998942652798841	WITHOUT_CLASSIFICATION	1.0573472011580215E-4	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9998942652798841	WITHOUT_CLASSIFICATION	1.0573472011580215E-4	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9996078872097659	WITHOUT_CLASSIFICATION	3.921127902341128E-4	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9998833855499604	WITHOUT_CLASSIFICATION	1.1661445003955687E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999751462033942	WITHOUT_CLASSIFICATION	2.4853796605744843E-5	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9988365621142401	WITHOUT_CLASSIFICATION	0.001163437885759867	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999495514849073	WITHOUT_CLASSIFICATION	5.0448515092819216E-5	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999757313421812	WITHOUT_CLASSIFICATION	2.4268657818693054E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.999927491064908	WITHOUT_CLASSIFICATION	7.250893509206168E-5	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9991922508014076	WITHOUT_CLASSIFICATION	8.077491985923874E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997507887350384	WITHOUT_CLASSIFICATION	2.4921126496156424E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.999849250843128	WITHOUT_CLASSIFICATION	1.5074915687199707E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999785281199366	WITHOUT_CLASSIFICATION	2.1471880063476024E-5	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999360508212344	WITHOUT_CLASSIFICATION	6.394917876568267E-5	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9875251303194579	WITHOUT_CLASSIFICATION	0.01247486968054206	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999565845001659	WITHOUT_CLASSIFICATION	4.341549983414152E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999340892195615	WITHOUT_CLASSIFICATION	6.591078043850615E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999334203465134	WITHOUT_CLASSIFICATION	6.657965348659111E-5	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999419309858767	WITHOUT_CLASSIFICATION	5.80690141232734E-5	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999759296972928	WITHOUT_CLASSIFICATION	2.407030270726447E-5	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.99995029232926	WITHOUT_CLASSIFICATION	4.970767073997211E-5	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999592284912835	WITHOUT_CLASSIFICATION	4.0771508716506935E-5	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999605155851048	WITHOUT_CLASSIFICATION	3.948441489512793E-5	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999813278968723	WITHOUT_CLASSIFICATION	1.8672103127644994E-5	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999900820154762	WITHOUT_CLASSIFICATION	9.917984523757507E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9704965688275616	WITHOUT_CLASSIFICATION	0.029503431172438407	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.999632900410978	WITHOUT_CLASSIFICATION	3.670995890219846E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999760870206593	WITHOUT_CLASSIFICATION	2.3912979340714164E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9995845978871477	WITHOUT_CLASSIFICATION	4.1540211285237517E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9998463152981895	WITHOUT_CLASSIFICATION	1.5368470181054673E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998479938197274	WITHOUT_CLASSIFICATION	1.520061802724786E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999564766972605	WITHOUT_CLASSIFICATION	4.3523302739453186E-5	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9998954648636416	WITHOUT_CLASSIFICATION	1.0453513635836685E-4	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9997372492660694	WITHOUT_CLASSIFICATION	2.6275073393057703E-4	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999916943815264	WITHOUT_CLASSIFICATION	8.305618473655789E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999334203465134	WITHOUT_CLASSIFICATION	6.657965348659111E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999778233458974	WITHOUT_CLASSIFICATION	2.217665410264999E-5	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9996727049831573	WITHOUT_CLASSIFICATION	3.272950168426952E-4	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999719095873627	WITHOUT_CLASSIFICATION	2.8090412637220458E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9468433026409511	WITHOUT_CLASSIFICATION	0.053156697359049036	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9994638538920977	WITHOUT_CLASSIFICATION	5.361461079022193E-4	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9972650290943009	WITHOUT_CLASSIFICATION	0.0027349709056990403	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9998369710280846	WITHOUT_CLASSIFICATION	1.6302897191558153E-4	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9991857378801093	WITHOUT_CLASSIFICATION	8.142621198906309E-4	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9994789526971717	WITHOUT_CLASSIFICATION	5.210473028283113E-4	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.999953467150493	WITHOUT_CLASSIFICATION	4.6532849506900935E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999458550616338	WITHOUT_CLASSIFICATION	5.4144938366249445E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999458550616338	WITHOUT_CLASSIFICATION	5.4144938366249445E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9998595354415721	WITHOUT_CLASSIFICATION	1.4046455842783373E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9994508686031707	WITHOUT_CLASSIFICATION	5.491313968293505E-4	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9998939227103292	WITHOUT_CLASSIFICATION	1.0607728967082538E-4	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999454490380894	WITHOUT_CLASSIFICATION	5.455096191064052E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998861268436592	WITHOUT_CLASSIFICATION	1.13873156340795E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999490325722339	WITHOUT_CLASSIFICATION	5.096742776624048E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999641602396515	WITHOUT_CLASSIFICATION	3.583976034857005E-5	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9998350869411338	WITHOUT_CLASSIFICATION	1.6491305886623584E-4	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9995141730969701	WITHOUT_CLASSIFICATION	4.858269030299869E-4	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999040820910887	WITHOUT_CLASSIFICATION	9.591790891127384E-5	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999424507110496	WITHOUT_CLASSIFICATION	5.754928895037287E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995684811910386	WITHOUT_CLASSIFICATION	4.3151880896143987E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.999906423942154	WITHOUT_CLASSIFICATION	9.357605784599638E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998861268436592	WITHOUT_CLASSIFICATION	1.13873156340795E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999490325722339	WITHOUT_CLASSIFICATION	5.096742776624048E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9998861989811616	WITHOUT_CLASSIFICATION	1.1380101883839824E-4	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999663305165757	WITHOUT_CLASSIFICATION	3.3669483424391364E-5	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999018435962647	WITHOUT_CLASSIFICATION	9.815640373539075E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9988371540348515	WITHOUT_CLASSIFICATION	0.0011628459651484005	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9955635285761977	WITHOUT_CLASSIFICATION	0.004436471423802293	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999026994129881	WITHOUT_CLASSIFICATION	9.730058701193954E-5	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9983351599542212	WITHOUT_CLASSIFICATION	0.0016648400457788053	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9997189636914445	WITHOUT_CLASSIFICATION	2.810363085555409E-4	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9997096515991571	WITHOUT_CLASSIFICATION	2.9034840084283983E-4	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9983246115247733	WITHOUT_CLASSIFICATION	0.001675388475226728	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9995784470276815	WITHOUT_CLASSIFICATION	4.215529723184789E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9996905296779849	WITHOUT_CLASSIFICATION	3.0947032201503584E-4	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9997788116191251	WITHOUT_CLASSIFICATION	2.21188380875012E-4	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9997104374003954	WITHOUT_CLASSIFICATION	2.895625996045258E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999518905427974	WITHOUT_CLASSIFICATION	4.810945720253815E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9996905296779849	WITHOUT_CLASSIFICATION	3.0947032201503584E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9996905296779849	WITHOUT_CLASSIFICATION	3.0947032201503584E-4	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9996905296779849	WITHOUT_CLASSIFICATION	3.0947032201503584E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999828505768235	WITHOUT_CLASSIFICATION	1.7149423176560357E-5	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999763901280306	WITHOUT_CLASSIFICATION	2.360987196942345E-5	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9998968590313345	WITHOUT_CLASSIFICATION	1.0314096866548579E-4	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999266128994244	WITHOUT_CLASSIFICATION	7.338710057551247E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9998353724828691	WITHOUT_CLASSIFICATION	1.646275171308576E-4	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999925123051123	WITHOUT_CLASSIFICATION	7.487694887616357E-6	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9988269872089531	WITHOUT_CLASSIFICATION	0.0011730127910469113	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.999908456303268	WITHOUT_CLASSIFICATION	9.154369673192695E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999800323085295	WITHOUT_CLASSIFICATION	1.9967691470559376E-5	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9998099243924593	WITHOUT_CLASSIFICATION	1.9007560754076794E-4	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9996771024753334	WITHOUT_CLASSIFICATION	3.2289752466664834E-4	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999298024195207	WITHOUT_CLASSIFICATION	7.019758047929448E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999503497209921	WITHOUT_CLASSIFICATION	4.965027900800087E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999988687175935	WITHOUT_CLASSIFICATION	1.1312824065377077E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9998668959497906	WITHOUT_CLASSIFICATION	1.331040502094016E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.999960013278162	WITHOUT_CLASSIFICATION	3.998672183801342E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9995312498623519	WITHOUT_CLASSIFICATION	4.6875013764815967E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.99940839438778	WITHOUT_CLASSIFICATION	5.916056122200742E-4	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996495725655785	WITHOUT_CLASSIFICATION	3.504274344214487E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996495725655785	WITHOUT_CLASSIFICATION	3.504274344214487E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9995966037264268	WITHOUT_CLASSIFICATION	4.033962735731591E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.8971307215460115	WITHOUT_CLASSIFICATION	0.1028692784539885	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999666896614785	WITHOUT_CLASSIFICATION	3.33103385215292E-5	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9883190972752539	WITHOUT_CLASSIFICATION	0.0116809027247461	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9998396133473855	WITHOUT_CLASSIFICATION	1.6038665261458197E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9998844722216043	WITHOUT_CLASSIFICATION	1.1552777839574694E-4	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.999956281684786	WITHOUT_CLASSIFICATION	4.371831521409563E-5	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9997043900902777	WITHOUT_CLASSIFICATION	2.956099097222789E-4	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999348472085372	WITHOUT_CLASSIFICATION	6.515279146284023E-5	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9993318453616422	WITHOUT_CLASSIFICATION	6.681546383577681E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999735843559547	WITHOUT_CLASSIFICATION	2.6415644045285582E-5	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999792956241266	WITHOUT_CLASSIFICATION	2.0704375873463065E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.999979645972344	WITHOUT_CLASSIFICATION	2.035402765597956E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9998877156276643	WITHOUT_CLASSIFICATION	1.1228437233561614E-4	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999097410507155	WITHOUT_CLASSIFICATION	9.025894928445047E-5	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999000155805924	WITHOUT_CLASSIFICATION	9.998441940767168E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999558169555488	WITHOUT_CLASSIFICATION	4.4183044451165764E-5	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.999909428449428	WITHOUT_CLASSIFICATION	9.057155057203845E-5	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9998750416149276	WITHOUT_CLASSIFICATION	1.249583850724055E-4	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999112785461647	WITHOUT_CLASSIFICATION	8.872145383535427E-5	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999893699550858	WITHOUT_CLASSIFICATION	1.0630044914205411E-5	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999941941161267	WITHOUT_CLASSIFICATION	5.805883873298394E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999569198712664	WITHOUT_CLASSIFICATION	4.3080128733618615E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999569198712664	WITHOUT_CLASSIFICATION	4.3080128733618615E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.998489491847252	WITHOUT_CLASSIFICATION	0.001510508152747974	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.998489491847252	WITHOUT_CLASSIFICATION	0.001510508152747974	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999810850046343	WITHOUT_CLASSIFICATION	1.8914995365651246E-5	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9978339627395495	WITHOUT_CLASSIFICATION	0.0021660372604504633	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999757124115675	WITHOUT_CLASSIFICATION	2.428758843254067E-5	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999099306708278	WITHOUT_CLASSIFICATION	9.006932917220433E-5	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999872837251277	WITHOUT_CLASSIFICATION	1.2716274872244369E-5	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999567360201655	WITHOUT_CLASSIFICATION	4.3263979834376846E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999398474391695	WITHOUT_CLASSIFICATION	6.0152560830373566E-5	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9992348731757561	WITHOUT_CLASSIFICATION	7.65126824243882E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9980602509412208	WITHOUT_CLASSIFICATION	0.001939749058779182	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999783196867125	WITHOUT_CLASSIFICATION	2.1680313287446962E-5	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999511592236925	WITHOUT_CLASSIFICATION	4.884077630761098E-5	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9990494813302675	WITHOUT_CLASSIFICATION	9.505186697324022E-4	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9987920467221263	WITHOUT_CLASSIFICATION	0.001207953277873718	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999889803499245	WITHOUT_CLASSIFICATION	1.1019650075492776E-5	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999527151863417	WITHOUT_CLASSIFICATION	4.7284813658293855E-5	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9995080548158465	WITHOUT_CLASSIFICATION	4.919451841535084E-4	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9998514356012869	WITHOUT_CLASSIFICATION	1.4856439871314424E-4	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999616229857632	WITHOUT_CLASSIFICATION	3.837701423675512E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999203515465441	WITHOUT_CLASSIFICATION	7.96484534558779E-5	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998705278609369	WITHOUT_CLASSIFICATION	1.294721390631213E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999438569318887	WITHOUT_CLASSIFICATION	5.6143068111321183E-5	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9998330408330603	WITHOUT_CLASSIFICATION	1.6695916693976903E-4	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999534979190163	WITHOUT_CLASSIFICATION	4.650208098366647E-5	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9987442744155395	WITHOUT_CLASSIFICATION	0.0012557255844604437	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999194299815753	WITHOUT_CLASSIFICATION	8.057001842471845E-5	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999354427391748	WITHOUT_CLASSIFICATION	6.45572608251631E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9998870830708239	WITHOUT_CLASSIFICATION	1.1291692917610935E-4	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9994762029883217	WITHOUT_CLASSIFICATION	5.237970116782632E-4	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9898342775775539	WITHOUT_CLASSIFICATION	0.010165722422446004	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999348033560979	WITHOUT_CLASSIFICATION	6.519664390211864E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999478572106705	WITHOUT_CLASSIFICATION	5.2142789329604604E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9997936410709464	WITHOUT_CLASSIFICATION	2.063589290536954E-4	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999896872622462	WITHOUT_CLASSIFICATION	1.0312737753629476E-5	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9994674117249002	WITHOUT_CLASSIFICATION	5.325882750998082E-4	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9994171727600222	WITHOUT_CLASSIFICATION	5.828272399777995E-4	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.999946092354414	WITHOUT_CLASSIFICATION	5.390764558594622E-5	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999954457454885	WITHOUT_CLASSIFICATION	4.554254511450301E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9998736748782984	WITHOUT_CLASSIFICATION	1.2632512170171437E-4	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9998928619426825	WITHOUT_CLASSIFICATION	1.0713805731758564E-4	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999111364767727	WITHOUT_CLASSIFICATION	8.886352322734796E-5	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.987049000569381	WITHOUT_CLASSIFICATION	0.012950999430619075	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.99977699807427	WITHOUT_CLASSIFICATION	2.2300192572997864E-4	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999107370161034	WITHOUT_CLASSIFICATION	8.926298389652366E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9366372648868945	WITHOUT_CLASSIFICATION	0.06336273511310543	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999468507065719	WITHOUT_CLASSIFICATION	5.3149293428168714E-5	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9988768251165091	WITHOUT_CLASSIFICATION	0.0011231748834909423	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9977170116334542	WITHOUT_CLASSIFICATION	0.002282988366545901	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9998135631562148	WITHOUT_CLASSIFICATION	1.8643684378523664E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9996163674969384	WITHOUT_CLASSIFICATION	3.8363250306166266E-4	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999982477952697	WITHOUT_CLASSIFICATION	1.7522047303662631E-6	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999942968809746	WITHOUT_CLASSIFICATION	5.70311902538942E-6	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999159493252493	WITHOUT_CLASSIFICATION	8.405067475063789E-5	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9998498681874841	WITHOUT_CLASSIFICATION	1.5013181251593937E-4	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999029376442674	WITHOUT_CLASSIFICATION	9.706235573265016E-5	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999767153842039	WITHOUT_CLASSIFICATION	2.32846157962062E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9998375265952929	WITHOUT_CLASSIFICATION	1.624734047070293E-4	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999171169390335	WITHOUT_CLASSIFICATION	8.288306096646858E-5	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999924710202047	WITHOUT_CLASSIFICATION	7.528979795306144E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999836672615899	WITHOUT_CLASSIFICATION	1.6332738409986546E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.999874770344719	WITHOUT_CLASSIFICATION	1.252296552809511E-4	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999466227779936	WITHOUT_CLASSIFICATION	5.337722200645938E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999592603129823	WITHOUT_CLASSIFICATION	4.073968701771378E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999090421241451	WITHOUT_CLASSIFICATION	9.095787585489264E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999268839632869	WITHOUT_CLASSIFICATION	7.311603671312153E-5	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999752386015892	WITHOUT_CLASSIFICATION	2.47613984108851E-5	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999633641319857	WITHOUT_CLASSIFICATION	3.6635868014261235E-5	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9995737158722946	WITHOUT_CLASSIFICATION	4.262841277053941E-4	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9997199300866738	WITHOUT_CLASSIFICATION	2.800699133262049E-4	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9997199300866738	WITHOUT_CLASSIFICATION	2.800699133262049E-4	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.999734848014349	WITHOUT_CLASSIFICATION	2.651519856511063E-4	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9826462631137554	WITHOUT_CLASSIFICATION	0.01735373688624461	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999041284729714	WITHOUT_CLASSIFICATION	9.587152702861502E-5	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9998952215162045	WITHOUT_CLASSIFICATION	1.0477848379549593E-4	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999529616833818	WITHOUT_CLASSIFICATION	4.703831661829402E-5	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999702462375889	WITHOUT_CLASSIFICATION	2.9753762411202592E-5	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9998723126146235	WITHOUT_CLASSIFICATION	1.2768738537658812E-4	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999405088367654	WITHOUT_CLASSIFICATION	5.949116323448959E-5	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999405088367654	WITHOUT_CLASSIFICATION	5.949116323448959E-5	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.999852914561704	WITHOUT_CLASSIFICATION	1.4708543829598848E-4	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.99993436487055	WITHOUT_CLASSIFICATION	6.563512944996651E-5	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999012174834068	WITHOUT_CLASSIFICATION	9.878251659317376E-5	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999438535904697	WITHOUT_CLASSIFICATION	5.614640953027908E-5	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9997439813572636	WITHOUT_CLASSIFICATION	2.5601864273640403E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999133292504483	WITHOUT_CLASSIFICATION	8.667074955167189E-5	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.999770226163346	WITHOUT_CLASSIFICATION	2.297738366540474E-4	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.999990181405855	WITHOUT_CLASSIFICATION	9.818594145042522E-6	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999455152372816	WITHOUT_CLASSIFICATION	5.448476271841569E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.999981458383424	WITHOUT_CLASSIFICATION	1.854161657599895E-5	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9998748812184627	WITHOUT_CLASSIFICATION	1.2511878153736953E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999252892787267	WITHOUT_CLASSIFICATION	7.471072127324467E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9989920670300501	WITHOUT_CLASSIFICATION	0.001007932969950007	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999769418999979	WITHOUT_CLASSIFICATION	2.305810000217364E-5	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999374944878524	WITHOUT_CLASSIFICATION	6.250551214752999E-5	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9994204292273818	WITHOUT_CLASSIFICATION	5.795707726182326E-4	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999419450735818	WITHOUT_CLASSIFICATION	5.805492641824582E-5	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999838067395576	WITHOUT_CLASSIFICATION	1.6193260442378854E-5	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9992582803249136	WITHOUT_CLASSIFICATION	7.417196750864465E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999385583319581	WITHOUT_CLASSIFICATION	6.144166804187389E-5	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.999811119684026	WITHOUT_CLASSIFICATION	1.8888031597403724E-4	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9998642276795742	WITHOUT_CLASSIFICATION	1.3577232042585858E-4	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999895375959584	WITHOUT_CLASSIFICATION	1.0462404041655457E-5	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999669437052375	WITHOUT_CLASSIFICATION	3.3056294762415366E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999812176852705	WITHOUT_CLASSIFICATION	1.8782314729529884E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9996838979440442	WITHOUT_CLASSIFICATION	3.161020559557648E-4	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999899868096854	WITHOUT_CLASSIFICATION	1.0013190314469384E-5	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9997790556624538	WITHOUT_CLASSIFICATION	2.209443375461055E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999581224438225	WITHOUT_CLASSIFICATION	4.187755617749261E-5	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.999992875433705	WITHOUT_CLASSIFICATION	7.124566295025881E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.999969661132916	WITHOUT_CLASSIFICATION	3.0338867083969688E-5	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999378055920572	WITHOUT_CLASSIFICATION	6.21944079427486E-5	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.999698099515893	WITHOUT_CLASSIFICATION	3.019004841069654E-4	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9998152998862386	WITHOUT_CLASSIFICATION	1.847001137613355E-4	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.999750812874617	WITHOUT_CLASSIFICATION	2.491871253829768E-4	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999344707834005	WITHOUT_CLASSIFICATION	6.55292165995341E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999201230118239	WITHOUT_CLASSIFICATION	7.987698817612944E-5	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999203674692244	WITHOUT_CLASSIFICATION	7.963253077548274E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999905230124901	WITHOUT_CLASSIFICATION	9.476987509898825E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.99179495150948	WITHOUT_CLASSIFICATION	0.00820504849051989	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9994599578574186	WITHOUT_CLASSIFICATION	5.40042142581402E-4	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9995326406429594	WITHOUT_CLASSIFICATION	4.6735935704063006E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999065437437515	WITHOUT_CLASSIFICATION	9.345625624842532E-5	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9997547518691157	WITHOUT_CLASSIFICATION	2.4524813088428176E-4	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999093077822482	WITHOUT_CLASSIFICATION	9.069221775180975E-5	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9994536393420417	WITHOUT_CLASSIFICATION	5.463606579582535E-4	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996070556202383	WITHOUT_CLASSIFICATION	3.9294437976161235E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996070556202383	WITHOUT_CLASSIFICATION	3.9294437976161235E-4	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999503892916538	WITHOUT_CLASSIFICATION	4.961070834623404E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999503892916538	WITHOUT_CLASSIFICATION	4.961070834623404E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999518905427974	WITHOUT_CLASSIFICATION	4.810945720253815E-5	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.99940839438778	WITHOUT_CLASSIFICATION	5.916056122200742E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996495725655785	WITHOUT_CLASSIFICATION	3.504274344214487E-4	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9996495725655785	WITHOUT_CLASSIFICATION	3.504274344214487E-4	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999623586762928	WITHOUT_CLASSIFICATION	3.76413237071831E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999608227851859	WITHOUT_CLASSIFICATION	3.9177214814013075E-5	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9978804222926911	WITHOUT_CLASSIFICATION	0.002119577707308851	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999262476333747	WITHOUT_CLASSIFICATION	7.375236662529602E-5	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9995412574349886	WITHOUT_CLASSIFICATION	4.58742565011416E-4	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9877938390463736	WITHOUT_CLASSIFICATION	0.012206160953626425	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9998795474762944	WITHOUT_CLASSIFICATION	1.2045252370569738E-4	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999925498433228	WITHOUT_CLASSIFICATION	7.450156677149863E-6	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999623231963539	WITHOUT_CLASSIFICATION	3.767680364607444E-5	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9976955823294266	WITHOUT_CLASSIFICATION	0.0023044176705734752	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9997764570312162	WITHOUT_CLASSIFICATION	2.235429687838576E-4	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9998207637916343	WITHOUT_CLASSIFICATION	1.7923620836566946E-4	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999150578137982	WITHOUT_CLASSIFICATION	8.494218620176854E-5	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9998226228186704	WITHOUT_CLASSIFICATION	1.77377181329498E-4	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999449404801147	WITHOUT_CLASSIFICATION	5.505951988533792E-5	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9997374603517273	WITHOUT_CLASSIFICATION	2.6253964827273584E-4	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999813481937041	WITHOUT_CLASSIFICATION	1.865180629596436E-5	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9996264384296711	WITHOUT_CLASSIFICATION	3.7356157032889924E-4	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9998735525883351	WITHOUT_CLASSIFICATION	1.2644741166481266E-4	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999153695077614	WITHOUT_CLASSIFICATION	8.463049223859043E-5	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.999991141206254	WITHOUT_CLASSIFICATION	8.858793745982589E-6	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999917476331314	WITHOUT_CLASSIFICATION	8.252366868608354E-5	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999951868650827	WITHOUT_CLASSIFICATION	4.813134917235974E-6	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9998487225530869	WITHOUT_CLASSIFICATION	1.5127744691312368E-4	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999529744321738	WITHOUT_CLASSIFICATION	4.702556782621916E-5	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999015729153049	WITHOUT_CLASSIFICATION	9.84270846950449E-5	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998997738741624	WITHOUT_CLASSIFICATION	1.0022612583763347E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.999980811341486	WITHOUT_CLASSIFICATION	1.918865851397769E-5	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9996244184483888	WITHOUT_CLASSIFICATION	3.7558155161126664E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999712023876699	WITHOUT_CLASSIFICATION	2.879761233013293E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9988029895858961	WITHOUT_CLASSIFICATION	0.0011970104141039858	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9997164323041877	WITHOUT_CLASSIFICATION	2.835676958123188E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999484106072424	WITHOUT_CLASSIFICATION	5.158939275749597E-5	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999305511143282	WITHOUT_CLASSIFICATION	6.94488856718505E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999327262309883	WITHOUT_CLASSIFICATION	6.727376901163721E-5	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9998864077430534	WITHOUT_CLASSIFICATION	1.1359225694665164E-4	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9997953556275779	WITHOUT_CLASSIFICATION	2.0464437242199057E-4	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999911270445268	WITHOUT_CLASSIFICATION	8.872955473214981E-6	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.999939433365001	WITHOUT_CLASSIFICATION	6.0566634998858335E-5	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999922255714931	WITHOUT_CLASSIFICATION	7.774428506809592E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999784625559733	WITHOUT_CLASSIFICATION	2.153744402666101E-5	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999497415097809	WITHOUT_CLASSIFICATION	5.025849021901142E-5	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999346170069698	WITHOUT_CLASSIFICATION	6.538299303013014E-5	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9998737631576976	WITHOUT_CLASSIFICATION	1.2623684230234685E-4	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999620901924893	WITHOUT_CLASSIFICATION	3.790980751082487E-5	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999429910154013	WITHOUT_CLASSIFICATION	5.7008984598736506E-5	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999856699211966	WITHOUT_CLASSIFICATION	1.4330078803470395E-5	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999382707551633	WITHOUT_CLASSIFICATION	6.172924483664083E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9990457048805002	WITHOUT_CLASSIFICATION	9.542951194998405E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9994084261029504	WITHOUT_CLASSIFICATION	5.915738970494956E-4	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.999898672895972	WITHOUT_CLASSIFICATION	1.0132710402807957E-4	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.999918799179114	WITHOUT_CLASSIFICATION	8.120082088608421E-5	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.999446591615435	WITHOUT_CLASSIFICATION	5.534083845650315E-4	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9997034286023702	WITHOUT_CLASSIFICATION	2.9657139762977836E-4	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9998827399800897	WITHOUT_CLASSIFICATION	1.1726001991030912E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.999807237189915	WITHOUT_CLASSIFICATION	1.927628100849433E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999811314592514	WITHOUT_CLASSIFICATION	1.8868540748700483E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9998966153117714	WITHOUT_CLASSIFICATION	1.0338468822864886E-4	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9997380983620865	WITHOUT_CLASSIFICATION	2.619016379135948E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9998781571305404	WITHOUT_CLASSIFICATION	1.2184286945962838E-4	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999795838743952	WITHOUT_CLASSIFICATION	2.0416125604767468E-5	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9997855275139029	WITHOUT_CLASSIFICATION	2.1447248609707663E-4	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9998781571305404	WITHOUT_CLASSIFICATION	1.2184286945962838E-4	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999666401640205	WITHOUT_CLASSIFICATION	3.335983597942805E-5	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9998781571305404	WITHOUT_CLASSIFICATION	1.2184286945962838E-4	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999495272732931	WITHOUT_CLASSIFICATION	5.0472726706924875E-5	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999951552422298	WITHOUT_CLASSIFICATION	4.844757770123753E-6	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9998097384734121	WITHOUT_CLASSIFICATION	1.9026152658794106E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999119235666186	WITHOUT_CLASSIFICATION	8.807643338127972E-5	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9992552563674099	WITHOUT_CLASSIFICATION	7.447436325901079E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9993003663211518	WITHOUT_CLASSIFICATION	6.99633678848146E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9990061563891427	WITHOUT_CLASSIFICATION	9.938436108573178E-4	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999887892486988	WITHOUT_CLASSIFICATION	1.1210751301170774E-5	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999833321910455	WITHOUT_CLASSIFICATION	1.6667808954556392E-5	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999894782893614	WITHOUT_CLASSIFICATION	1.0521710638727656E-5	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999592589750654	WITHOUT_CLASSIFICATION	4.0741024934643355E-5	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999285972494785	WITHOUT_CLASSIFICATION	7.14027505216216E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999743898689196	WITHOUT_CLASSIFICATION	2.5610131080408033E-5	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999838951958766	WITHOUT_CLASSIFICATION	1.6104804123395627E-5	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999141831896865	WITHOUT_CLASSIFICATION	8.581681031350848E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.999982800914658	WITHOUT_CLASSIFICATION	1.719908534209556E-5	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9996832370146047	WITHOUT_CLASSIFICATION	3.1676298539538297E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999236311914617	WITHOUT_CLASSIFICATION	7.636880853839818E-5	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9988295234880418	WITHOUT_CLASSIFICATION	0.0011704765119582938	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9976646703250845	WITHOUT_CLASSIFICATION	0.0023353296749154245	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999495959867218	WITHOUT_CLASSIFICATION	5.040401327823057E-5	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999643016859862	WITHOUT_CLASSIFICATION	3.569831401383767E-5	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9998790283961694	WITHOUT_CLASSIFICATION	1.2097160383061775E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999393000460237	WITHOUT_CLASSIFICATION	6.069995397634273E-5	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9998658556452367	WITHOUT_CLASSIFICATION	1.3414435476337958E-4	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999447726515743	WITHOUT_CLASSIFICATION	5.522734842556401E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.992059314649096	WITHOUT_CLASSIFICATION	0.007940685350904045	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9995957428135819	WITHOUT_CLASSIFICATION	4.042571864181112E-4	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9987860858202857	WITHOUT_CLASSIFICATION	0.0012139141797142619	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9993507536762254	WITHOUT_CLASSIFICATION	6.492463237745805E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999433232267689	WITHOUT_CLASSIFICATION	5.667677323105978E-5	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999437477342009	WITHOUT_CLASSIFICATION	5.625226579901348E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999490466244619	WITHOUT_CLASSIFICATION	5.095337553813215E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999573394466124	WITHOUT_CLASSIFICATION	4.266055338764861E-5	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999174626934778	WITHOUT_CLASSIFICATION	8.253730652220283E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9998975093636299	WITHOUT_CLASSIFICATION	1.0249063637013469E-4	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9997917854768733	WITHOUT_CLASSIFICATION	2.0821452312662497E-4	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9998723672709936	WITHOUT_CLASSIFICATION	1.2763272900638653E-4	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9998048278971275	WITHOUT_CLASSIFICATION	1.951721028724696E-4	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9992677361331112	WITHOUT_CLASSIFICATION	7.322638668889671E-4	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9995594026128279	WITHOUT_CLASSIFICATION	4.40597387172011E-4	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.999957385595344	WITHOUT_CLASSIFICATION	4.261440465589427E-5	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999596616203009	WITHOUT_CLASSIFICATION	4.033837969910387E-5	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999243945353826	WITHOUT_CLASSIFICATION	7.560546461738965E-5	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9998813480678156	WITHOUT_CLASSIFICATION	1.1865193218438308E-4	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.999980709647454	WITHOUT_CLASSIFICATION	1.9290352546005166E-5	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999315688515746	WITHOUT_CLASSIFICATION	6.843114842529259E-5	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9998382834950665	WITHOUT_CLASSIFICATION	1.6171650493338526E-4	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9998752649893072	WITHOUT_CLASSIFICATION	1.2473501069273994E-4	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999551123548046	WITHOUT_CLASSIFICATION	4.4887645195335945E-5	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999244443612041	WITHOUT_CLASSIFICATION	7.555563879585209E-5	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999789304568313	WITHOUT_CLASSIFICATION	2.1069543168683335E-5	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.999870567140133	WITHOUT_CLASSIFICATION	1.2943285986703802E-4	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999177408410407	WITHOUT_CLASSIFICATION	8.225915895939044E-5	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999653492503807	WITHOUT_CLASSIFICATION	3.465074961937027E-5	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9998002251195146	WITHOUT_CLASSIFICATION	1.9977488048546105E-4	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9997840874539456	WITHOUT_CLASSIFICATION	2.1591254605438307E-4	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9997365118032173	WITHOUT_CLASSIFICATION	2.634881967827749E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9998852300579282	WITHOUT_CLASSIFICATION	1.1476994207179812E-4	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9998696077712514	WITHOUT_CLASSIFICATION	1.3039222874854672E-4	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9998574527341658	WITHOUT_CLASSIFICATION	1.4254726583426774E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9998669981596916	WITHOUT_CLASSIFICATION	1.3300184030840776E-4	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999125653820115	WITHOUT_CLASSIFICATION	8.74346179886116E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999274580443422	WITHOUT_CLASSIFICATION	7.254195565774575E-5	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999366036410331	WITHOUT_CLASSIFICATION	6.339635896692812E-5	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.999894350594646	WITHOUT_CLASSIFICATION	1.0564940535394539E-4	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9995030638534461	WITHOUT_CLASSIFICATION	4.969361465539851E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9998852300579282	WITHOUT_CLASSIFICATION	1.1476994207179812E-4	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999554230515835	WITHOUT_CLASSIFICATION	4.4576948416534626E-5	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999425561617287	WITHOUT_CLASSIFICATION	5.744383827141648E-5	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999033292052126	WITHOUT_CLASSIFICATION	9.667079478730956E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9917532677448484	WITHOUT_CLASSIFICATION	0.00824673225515163	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999655706567034	WITHOUT_CLASSIFICATION	3.4429343296562644E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9934263599881678	WITHOUT_CLASSIFICATION	0.006573640011832197	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.999929521024017	WITHOUT_CLASSIFICATION	7.047897598308005E-5	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.999929521024017	WITHOUT_CLASSIFICATION	7.047897598308005E-5	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9959811381865645	WITHOUT_CLASSIFICATION	0.004018861813435519	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9959811381865645	WITHOUT_CLASSIFICATION	0.004018861813435519	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9862091621950364	WITHOUT_CLASSIFICATION	0.013790837804963572	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9990540141125	WITHOUT_CLASSIFICATION	9.459858874998657E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9839417801925461	WITHOUT_CLASSIFICATION	0.016058219807453977	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9983489812243175	WITHOUT_CLASSIFICATION	0.0016510187756825579	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999121040053891	WITHOUT_CLASSIFICATION	8.789599461095058E-5	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9996141333488454	WITHOUT_CLASSIFICATION	3.858666511545913E-4	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.999987165934448	WITHOUT_CLASSIFICATION	1.2834065551924362E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9997419334437649	WITHOUT_CLASSIFICATION	2.580665562350868E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9995538298063642	WITHOUT_CLASSIFICATION	4.4617019363579925E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996684711130581	WITHOUT_CLASSIFICATION	3.3152888694185464E-4	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9996801941000774	WITHOUT_CLASSIFICATION	3.1980589992256013E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9839417801925461	WITHOUT_CLASSIFICATION	0.016058219807453977	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9996684711130581	WITHOUT_CLASSIFICATION	3.3152888694185464E-4	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9020788770058796	WITHOUT_CLASSIFICATION	0.09792112299412033	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9990540141125	WITHOUT_CLASSIFICATION	9.459858874998657E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999874508120238	WITHOUT_CLASSIFICATION	1.254918797614945E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9998627267568266	WITHOUT_CLASSIFICATION	1.3727324317337002E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998932953544446	WITHOUT_CLASSIFICATION	1.067046455555239E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998932953544446	WITHOUT_CLASSIFICATION	1.067046455555239E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.999967070157652	WITHOUT_CLASSIFICATION	3.292984234800654E-5	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999864488269113	WITHOUT_CLASSIFICATION	1.3551173088595414E-5	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999495371101059	WITHOUT_CLASSIFICATION	5.0462889894046506E-5	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9996068773412913	WITHOUT_CLASSIFICATION	3.931226587087438E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9995813337108677	WITHOUT_CLASSIFICATION	4.1866628913237597E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9998770229560598	WITHOUT_CLASSIFICATION	1.2297704394018916E-4	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9998270021193754	WITHOUT_CLASSIFICATION	1.7299788062461794E-4	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9993811553231634	WITHOUT_CLASSIFICATION	6.188446768365326E-4	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999651405765942	WITHOUT_CLASSIFICATION	3.4859423405858307E-5	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999865904478252	WITHOUT_CLASSIFICATION	1.3409552174884397E-5	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9997890381277182	WITHOUT_CLASSIFICATION	2.1096187228181296E-4	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9998363249843796	WITHOUT_CLASSIFICATION	1.636750156204723E-4	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9986251588326803	WITHOUT_CLASSIFICATION	0.0013748411673196526	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999833361712389	WITHOUT_CLASSIFICATION	1.666382876104777E-5	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999678957742761	WITHOUT_CLASSIFICATION	3.210422572393811E-5	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999818302038186	WITHOUT_CLASSIFICATION	1.8169796181334368E-5	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9993523492309054	WITHOUT_CLASSIFICATION	6.476507690945842E-4	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9965616603618616	WITHOUT_CLASSIFICATION	0.003438339638138349	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999687437121685	WITHOUT_CLASSIFICATION	3.1256287831596265E-5	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9998767607058894	WITHOUT_CLASSIFICATION	1.2323929411063524E-4	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999166481758016	WITHOUT_CLASSIFICATION	8.335182419829392E-5	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999438191414913	WITHOUT_CLASSIFICATION	5.618085850871818E-5	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999494458109344	WITHOUT_CLASSIFICATION	5.055418906566026E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999927270524361	WITHOUT_CLASSIFICATION	7.272947563873398E-6	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999840050236156	WITHOUT_CLASSIFICATION	1.5994976384339173E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999643560409727	WITHOUT_CLASSIFICATION	3.5643959027258876E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999604550835117	WITHOUT_CLASSIFICATION	3.9544916488298867E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99974532963092	WITHOUT_CLASSIFICATION	2.5467036908006976E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999985829862986	WITHOUT_CLASSIFICATION	1.417013701403228E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999503497209921	WITHOUT_CLASSIFICATION	4.965027900800087E-5	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9996080632812019	WITHOUT_CLASSIFICATION	3.919367187981585E-4	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999467210530196	WITHOUT_CLASSIFICATION	5.327894698028741E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999321435231829	WITHOUT_CLASSIFICATION	6.78564768170732E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999790228899348	WITHOUT_CLASSIFICATION	2.0977110065209648E-5	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999256138779784	WITHOUT_CLASSIFICATION	7.438612202166328E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9998143760697665	WITHOUT_CLASSIFICATION	1.8562393023340386E-4	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999814600129708	WITHOUT_CLASSIFICATION	1.853998702914699E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999947964599446	WITHOUT_CLASSIFICATION	5.203540055398802E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999774171323623	WITHOUT_CLASSIFICATION	2.2582867637654504E-5	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999559118687775	WITHOUT_CLASSIFICATION	4.408813122258115E-5	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999604550835117	WITHOUT_CLASSIFICATION	3.9544916488298867E-5	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.99974532963092	WITHOUT_CLASSIFICATION	2.5467036908006976E-4	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.999985829862986	WITHOUT_CLASSIFICATION	1.417013701403228E-5	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999970824709173	WITHOUT_CLASSIFICATION	2.9175290827157617E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999796597244932	WITHOUT_CLASSIFICATION	2.0340275506845777E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999659679879607	WITHOUT_CLASSIFICATION	3.4032012039294924E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999980659445561	WITHOUT_CLASSIFICATION	1.9340554438884497E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978884875175702	WITHOUT_CLASSIFICATION	0.0021115124824298303	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994226330511328	WITHOUT_CLASSIFICATION	5.773669488671704E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9998104969174324	WITHOUT_CLASSIFICATION	1.8950308256760381E-4	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999899336517704	WITHOUT_CLASSIFICATION	1.006634822968793E-5	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.999847046575828	WITHOUT_CLASSIFICATION	1.5295342417196182E-4	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999504476848603	WITHOUT_CLASSIFICATION	4.9552315139802596E-5	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9997927184579699	WITHOUT_CLASSIFICATION	2.0728154203011193E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999307262663981	WITHOUT_CLASSIFICATION	6.927373360198137E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999494478956592	WITHOUT_CLASSIFICATION	5.055210434092335E-5	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999643560409727	WITHOUT_CLASSIFICATION	3.5643959027258876E-5	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999467210530196	WITHOUT_CLASSIFICATION	5.327894698028741E-5	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999321435231829	WITHOUT_CLASSIFICATION	6.78564768170732E-5	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999790228899348	WITHOUT_CLASSIFICATION	2.0977110065209648E-5	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999796597244932	WITHOUT_CLASSIFICATION	2.0340275506845777E-5	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999659679879607	WITHOUT_CLASSIFICATION	3.4032012039294924E-5	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999980659445561	WITHOUT_CLASSIFICATION	1.9340554438884497E-5	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9978884875175702	WITHOUT_CLASSIFICATION	0.0021115124824298303	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9994226330511328	WITHOUT_CLASSIFICATION	5.773669488671704E-4	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.999977627055101	WITHOUT_CLASSIFICATION	2.2372944899115452E-5	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9997715328675953	WITHOUT_CLASSIFICATION	2.284671324046022E-4	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999595738937849	WITHOUT_CLASSIFICATION	4.042610621517628E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996798419116082	WITHOUT_CLASSIFICATION	3.201580883918789E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996798419116082	WITHOUT_CLASSIFICATION	3.201580883918789E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996798419116082	WITHOUT_CLASSIFICATION	3.201580883918789E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996798419116082	WITHOUT_CLASSIFICATION	3.201580883918789E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9996798419116082	WITHOUT_CLASSIFICATION	3.201580883918789E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999606246694319	WITHOUT_CLASSIFICATION	3.937533056810474E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.999967227096335	WITHOUT_CLASSIFICATION	3.27729036649099E-5	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.999945965790467	WITHOUT_CLASSIFICATION	5.403420953287983E-5	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9942388867120426	WITHOUT_CLASSIFICATION	0.005761113287957354	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999409006731528	WITHOUT_CLASSIFICATION	5.9099326847261304E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999238185378544	WITHOUT_CLASSIFICATION	7.618146214560426E-5	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.999966595321057	WITHOUT_CLASSIFICATION	3.340467894304824E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999491599681973	WITHOUT_CLASSIFICATION	5.084003180265606E-5	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999216769897624	WITHOUT_CLASSIFICATION	7.83230102375131E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996070556202383	WITHOUT_CLASSIFICATION	3.9294437976161235E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996070556202383	WITHOUT_CLASSIFICATION	3.9294437976161235E-4	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9996070556202383	WITHOUT_CLASSIFICATION	3.9294437976161235E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999502849139469	WITHOUT_CLASSIFICATION	4.971508605308395E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9986925303934084	WITHOUT_CLASSIFICATION	0.0013074696065916152	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9998468534870386	WITHOUT_CLASSIFICATION	1.5314651296142418E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999270310197146	WITHOUT_CLASSIFICATION	7.296898028539841E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999270310197146	WITHOUT_CLASSIFICATION	7.296898028539841E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999181282052515	WITHOUT_CLASSIFICATION	8.18717947484978E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999270310197146	WITHOUT_CLASSIFICATION	7.296898028539841E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9998463152981895	WITHOUT_CLASSIFICATION	1.5368470181054673E-4	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9998479938197274	WITHOUT_CLASSIFICATION	1.520061802724786E-4	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999564766972605	WITHOUT_CLASSIFICATION	4.3523302739453186E-5	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9989806148073117	WITHOUT_CLASSIFICATION	0.0010193851926883122	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9989806148073117	WITHOUT_CLASSIFICATION	0.0010193851926883122	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9973709699129157	WITHOUT_CLASSIFICATION	0.002629030087084281	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9998528696432455	WITHOUT_CLASSIFICATION	1.471303567544876E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9857124314644672	WITHOUT_CLASSIFICATION	0.014287568535532758	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.8733402514212414	WITHOUT_CLASSIFICATION	0.12665974857875872	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999484649968294	WITHOUT_CLASSIFICATION	5.153500317062618E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999845629643838	WITHOUT_CLASSIFICATION	1.543703561622608E-5	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9996141376199843	WITHOUT_CLASSIFICATION	3.858623800156888E-4	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999815525925111	WITHOUT_CLASSIFICATION	1.8447407488992657E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9998927342307724	WITHOUT_CLASSIFICATION	1.0726576922755978E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999919157068524	WITHOUT_CLASSIFICATION	8.084293147514803E-6	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996846828730703	WITHOUT_CLASSIFICATION	3.15317126929674E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994750720991669	WITHOUT_CLASSIFICATION	5.249279008332091E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9996846828730703	WITHOUT_CLASSIFICATION	3.15317126929674E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999547325156917	WITHOUT_CLASSIFICATION	4.526748430834449E-5	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999161355737566	WITHOUT_CLASSIFICATION	8.386442624333103E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9998844722216043	WITHOUT_CLASSIFICATION	1.1552777839574694E-4	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9985844495047977	WITHOUT_CLASSIFICATION	0.0014155504952022837	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9985844495047977	WITHOUT_CLASSIFICATION	0.0014155504952022837	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9943606882467797	WITHOUT_CLASSIFICATION	0.005639311753220368	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999831767510641	WITHOUT_CLASSIFICATION	1.682324893588579E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999832492464993	WITHOUT_CLASSIFICATION	1.675075350077154E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999994754288326	WITHOUT_CLASSIFICATION	5.245711674406467E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989284330356	WITHOUT_CLASSIFICATION	1.0715669642896781E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.999983045795288	WITHOUT_CLASSIFICATION	1.6954204712033563E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989284330356	WITHOUT_CLASSIFICATION	1.0715669642896781E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999830990366108	WITHOUT_CLASSIFICATION	1.690096338927281E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999830990366108	WITHOUT_CLASSIFICATION	1.690096338927281E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999830990366108	WITHOUT_CLASSIFICATION	1.690096338927281E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999830990366108	WITHOUT_CLASSIFICATION	1.690096338927281E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999831767510641	WITHOUT_CLASSIFICATION	1.682324893588579E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999830990366108	WITHOUT_CLASSIFICATION	1.690096338927281E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999136690150889	WITHOUT_CLASSIFICATION	8.633098491104153E-5	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999136690150889	WITHOUT_CLASSIFICATION	8.633098491104153E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999994754288326	WITHOUT_CLASSIFICATION	5.245711674406467E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989284330356	WITHOUT_CLASSIFICATION	1.0715669642896781E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.999983045795288	WITHOUT_CLASSIFICATION	1.6954204712033563E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989284330356	WITHOUT_CLASSIFICATION	1.0715669642896781E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997361282815	WITHOUT_CLASSIFICATION	2.638717184708823E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999994754288326	WITHOUT_CLASSIFICATION	5.245711674406467E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999831767510641	WITHOUT_CLASSIFICATION	1.682324893588579E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999832517924742	WITHOUT_CLASSIFICATION	1.6748207525731713E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999830016803146	WITHOUT_CLASSIFICATION	1.6998319685408054E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
//	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999901107708673	WITHOUT_CLASSIFICATION	9.889229132699029E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999367395382951	WITHOUT_CLASSIFICATION	6.326046170482727E-5	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999760082674447	WITHOUT_CLASSIFICATION	2.399173255534261E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999364178993484	WITHOUT_CLASSIFICATION	6.358210065153725E-5	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999443830251333	WITHOUT_CLASSIFICATION	5.561697486661708E-5	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9978110712184729	WITHOUT_CLASSIFICATION	0.0021889287815271305	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.99977699807427	WITHOUT_CLASSIFICATION	2.2300192572997864E-4	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9994468884836388	WITHOUT_CLASSIFICATION	5.531115163612406E-4	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9709109815488767	WITHOUT_CLASSIFICATION	0.02908901845112338	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999284704484429	WITHOUT_CLASSIFICATION	7.152955155713654E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999419992861579	WITHOUT_CLASSIFICATION	5.800071384222377E-5	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9990916689251215	WITHOUT_CLASSIFICATION	9.083310748786006E-4	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999717484542163	WITHOUT_CLASSIFICATION	2.8251545783764504E-5	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9998035460126176	WITHOUT_CLASSIFICATION	1.9645398738242007E-4	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999261333059785	WITHOUT_CLASSIFICATION	7.386669402164442E-5	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9994614008137739	WITHOUT_CLASSIFICATION	5.385991862260332E-4	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9998347068162867	WITHOUT_CLASSIFICATION	1.6529318371330548E-4	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997809875775	WITHOUT_CLASSIFICATION	2.1901242245967972E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997809875775	WITHOUT_CLASSIFICATION	2.1901242245967972E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997809875775	WITHOUT_CLASSIFICATION	2.1901242245967972E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9998642276795742	WITHOUT_CLASSIFICATION	1.3577232042585858E-4	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999997809875775	WITHOUT_CLASSIFICATION	2.1901242245967972E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9982555701969638	WITHOUT_CLASSIFICATION	0.001744429803036237	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999698701176193	WITHOUT_CLASSIFICATION	3.0129882380668582E-5	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9678365951812645	WITHOUT_CLASSIFICATION	0.032163404818735454	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9998844185569221	WITHOUT_CLASSIFICATION	1.1558144307786916E-4	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999762137714279	WITHOUT_CLASSIFICATION	2.378622857210014E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9998722611669139	WITHOUT_CLASSIFICATION	1.2773883308606266E-4	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998997738741624	WITHOUT_CLASSIFICATION	1.0022612583763347E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999589411019415	WITHOUT_CLASSIFICATION	4.105889805846832E-5	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999447901540961	WITHOUT_CLASSIFICATION	5.520984590382425E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.999946107243855	WITHOUT_CLASSIFICATION	5.3892756144942326E-5	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9998595014866551	WITHOUT_CLASSIFICATION	1.4049851334490548E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9993068321416663	WITHOUT_CLASSIFICATION	6.931678583336938E-4	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999327262309883	WITHOUT_CLASSIFICATION	6.727376901163721E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999029058181468	WITHOUT_CLASSIFICATION	9.709418185322837E-5	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9999493783856463	WITHOUT_CLASSIFICATION	5.0621614353696254E-5	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999829636150314	WITHOUT_CLASSIFICATION	1.7036384968626453E-5	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9998791256709145	WITHOUT_CLASSIFICATION	1.2087432908542704E-4	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999266149283743	WITHOUT_CLASSIFICATION	7.338507162567104E-5	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999763815744465	WITHOUT_CLASSIFICATION	2.361842555360328E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9988514536668249	WITHOUT_CLASSIFICATION	0.0011485463331751215	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999673160407727	WITHOUT_CLASSIFICATION	3.268395922734119E-5	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9998457452580654	WITHOUT_CLASSIFICATION	1.5425474193464842E-4	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999909439538652	WITHOUT_CLASSIFICATION	9.05604613479793E-5	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9998874113808662	WITHOUT_CLASSIFICATION	1.1258861913381572E-4	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999686634991066	WITHOUT_CLASSIFICATION	3.133650089336428E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999686634991066	WITHOUT_CLASSIFICATION	3.133650089336428E-5	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999587725261886	WITHOUT_CLASSIFICATION	4.122747381134302E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9996320011554729	WITHOUT_CLASSIFICATION	3.6799884452714204E-4	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999503349666277	WITHOUT_CLASSIFICATION	4.96650333723666E-5	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9996023401137463	WITHOUT_CLASSIFICATION	3.976598862536764E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994526904851174	WITHOUT_CLASSIFICATION	5.473095148825607E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9994526904851174	WITHOUT_CLASSIFICATION	5.473095148825607E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9998979011305641	WITHOUT_CLASSIFICATION	1.0209886943586756E-4	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999348863562254	WITHOUT_CLASSIFICATION	6.511364377454974E-5	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9979145084379347	WITHOUT_CLASSIFICATION	0.002085491562065254	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999658226489457	WITHOUT_CLASSIFICATION	3.417735105419575E-5	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999777695212266	WITHOUT_CLASSIFICATION	2.2230478773337743E-5	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9997838670342009	WITHOUT_CLASSIFICATION	2.161329657991591E-4	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9997838670342009	WITHOUT_CLASSIFICATION	2.161329657991591E-4	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.999757374727816	WITHOUT_CLASSIFICATION	2.4262527218394804E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9996765601602292	WITHOUT_CLASSIFICATION	3.234398397708227E-4	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9994175324378363	WITHOUT_CLASSIFICATION	5.824675621636525E-4	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9995042480371823	WITHOUT_CLASSIFICATION	4.957519628178132E-4	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9998852300579282	WITHOUT_CLASSIFICATION	1.1476994207179812E-4	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9995464023759415	WITHOUT_CLASSIFICATION	4.535976240584081E-4	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9998288721548568	WITHOUT_CLASSIFICATION	1.7112784514326898E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9998593626374273	WITHOUT_CLASSIFICATION	1.4063736257273932E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9862091621950364	WITHOUT_CLASSIFICATION	0.013790837804963572	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999233723805634	WITHOUT_CLASSIFICATION	7.662761943655992E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9997691475410216	WITHOUT_CLASSIFICATION	2.3085245897823913E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999957886655092	WITHOUT_CLASSIFICATION	4.21133449077642E-6	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9995539003536537	WITHOUT_CLASSIFICATION	4.460996463463628E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9997591656569742	WITHOUT_CLASSIFICATION	2.408343430258687E-4	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.999951344194447	WITHOUT_CLASSIFICATION	4.865580555308644E-5	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999771634786708	WITHOUT_CLASSIFICATION	2.2836521329192563E-5	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9020788770058796	WITHOUT_CLASSIFICATION	0.09792112299412033	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9998087730461277	WITHOUT_CLASSIFICATION	1.9122695387233923E-4	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999992371825073	WITHOUT_CLASSIFICATION	7.628174927716465E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999992371825073	WITHOUT_CLASSIFICATION	7.628174927716465E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999613270430657	WITHOUT_CLASSIFICATION	3.867295693428567E-5	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9929451356422683	WITHOUT_CLASSIFICATION	0.007054864357731724	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9974044896087758	WITHOUT_CLASSIFICATION	0.00259551039122418	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.999927759044932	WITHOUT_CLASSIFICATION	7.224095506796094E-5	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999479894263503	WITHOUT_CLASSIFICATION	5.201057364958773E-5	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.999835142211923	WITHOUT_CLASSIFICATION	1.6485778807701773E-4	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.999853051632523	WITHOUT_CLASSIFICATION	1.4694836747705282E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999763526417512	WITHOUT_CLASSIFICATION	2.3647358248810824E-5	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9992131459391951	WITHOUT_CLASSIFICATION	7.868540608049147E-4	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999919020012463	WITHOUT_CLASSIFICATION	8.097998753667632E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.99985353997903	WITHOUT_CLASSIFICATION	1.4646002096995248E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9993020739970465	WITHOUT_CLASSIFICATION	6.979260029533922E-4	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9936178235498189	WITHOUT_CLASSIFICATION	0.006382176450181108	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9995339103297828	WITHOUT_CLASSIFICATION	4.660896702172716E-4	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9995128972490697	WITHOUT_CLASSIFICATION	4.871027509302347E-4	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9996286496545272	WITHOUT_CLASSIFICATION	3.7135034547275636E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9997512189737198	WITHOUT_CLASSIFICATION	2.487810262802769E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9997720904806574	WITHOUT_CLASSIFICATION	2.2790951934254617E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.999892461536697	WITHOUT_CLASSIFICATION	1.0753846330309447E-4	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999458688851847	WITHOUT_CLASSIFICATION	5.413111481529386E-5	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999458688851847	WITHOUT_CLASSIFICATION	5.413111481529386E-5	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9996645873566685	WITHOUT_CLASSIFICATION	3.354126433313969E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.999934449845837	WITHOUT_CLASSIFICATION	6.55501541630799E-5	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9949621689353464	WITHOUT_CLASSIFICATION	0.005037831064653534	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9998632362521173	WITHOUT_CLASSIFICATION	1.3676374788270095E-4	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9996752952389132	WITHOUT_CLASSIFICATION	3.2470476108686675E-4	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9996878214037057	WITHOUT_CLASSIFICATION	3.121785962942887E-4	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.997129691243929	WITHOUT_CLASSIFICATION	0.0028703087560709977	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9998078717212409	WITHOUT_CLASSIFICATION	1.9212827875905942E-4	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.999861086589069	WITHOUT_CLASSIFICATION	1.3891341093096198E-4	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9998279573695128	WITHOUT_CLASSIFICATION	1.7204263048720906E-4	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9991308980784849	WITHOUT_CLASSIFICATION	8.691019215151921E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999944024620491	WITHOUT_CLASSIFICATION	5.5975379508992746E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.999944024620491	WITHOUT_CLASSIFICATION	5.5975379508992746E-5	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9998989571181697	WITHOUT_CLASSIFICATION	1.0104288183038688E-4	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9996681489353602	WITHOUT_CLASSIFICATION	3.318510646397466E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998851150752522	WITHOUT_CLASSIFICATION	1.1488492474784984E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9997475740184171	WITHOUT_CLASSIFICATION	2.5242598158296554E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999934492242822	WITHOUT_CLASSIFICATION	6.55077571774874E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9998411822889794	WITHOUT_CLASSIFICATION	1.588177110206422E-4	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9998361424150982	WITHOUT_CLASSIFICATION	1.6385758490170037E-4	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999372291251004	WITHOUT_CLASSIFICATION	6.277087489952786E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999551165975938	WITHOUT_CLASSIFICATION	4.4883402406161395E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9993703016654177	WITHOUT_CLASSIFICATION	6.296983345822618E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989002141612	WITHOUT_CLASSIFICATION	1.0997858388205326E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984633208199	WITHOUT_CLASSIFICATION	1.5366791800931487E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999984633208199	WITHOUT_CLASSIFICATION	1.5366791800931487E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9996120906552706	WITHOUT_CLASSIFICATION	3.879093447294582E-4	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999191302448102	WITHOUT_CLASSIFICATION	8.086975518984293E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999191302448102	WITHOUT_CLASSIFICATION	8.086975518984293E-5	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9995852004010268	WITHOUT_CLASSIFICATION	4.147995989731657E-4	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999108237108316	WITHOUT_CLASSIFICATION	8.917628916845821E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9998602252715454	WITHOUT_CLASSIFICATION	1.3977472845461394E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9994258434283638	WITHOUT_CLASSIFICATION	5.741565716362498E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9995433202068099	WITHOUT_CLASSIFICATION	4.566797931899645E-4	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999990216988522	WITHOUT_CLASSIFICATION	9.783011477530414E-7	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9998489472220942	WITHOUT_CLASSIFICATION	1.5105277790575984E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9860080641900785	WITHOUT_CLASSIFICATION	0.013991935809921459	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9994347312613531	WITHOUT_CLASSIFICATION	5.652687386468693E-4	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9994347312613531	WITHOUT_CLASSIFICATION	5.652687386468693E-4	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9972329442499467	WITHOUT_CLASSIFICATION	0.002767055750053333	DEFECT
// is this an error???	DEFECT	0.9995227593190655	WITHOUT_CLASSIFICATION	4.7724068093444303E-4	DEFECT
// is this an error???	DEFECT	0.9995227593190655	WITHOUT_CLASSIFICATION	4.7724068093444303E-4	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9992141383578262	WITHOUT_CLASSIFICATION	7.858616421737068E-4	DEFECT
