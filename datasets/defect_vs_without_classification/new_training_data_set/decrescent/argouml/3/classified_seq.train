WITHOUT_CLASSIFICATION	set constants now that they're initialized
WITHOUT_CLASSIFICATION	line 335
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	Figure end-char. '\0' is special to indicate begin=end and that no nesting?
WITHOUT_CLASSIFICATION	line 362
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	line 391
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	^D
WITHOUT_CLASSIFICATION	^Z
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyLen 496
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDefRed 889
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyRindex 889
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	name
WITHOUT_CLASSIFICATION	Define System.getProperties() in ENV_JAVA
WITHOUT_CLASSIFICATION	Accessor methods.
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	call getpwent to fail early if unsupported
WITHOUT_CLASSIFICATION	fall back on env entry for USER
WITHOUT_CLASSIFICATION	try to read grent to fail fast
WITHOUT_CLASSIFICATION	define ARGV and $ for this runtime
WITHOUT_CLASSIFICATION	Version information:
WITHOUT_CLASSIFICATION	after defn of $stderr as the call may produce warnings
WITHOUT_CLASSIFICATION	ARGF, $< object
WITHOUT_CLASSIFICATION	if the environment variables can't be obtained, define an empty ENV
WITHOUT_CLASSIFICATION	On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.
WITHOUT_CLASSIFICATION	$@ returns nil if $!.backtrace is not an array
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.
WITHOUT_CLASSIFICATION	this _is_ legal (when removing an undef)
WITHOUT_CLASSIFICATION	What we passed to the constructor for method 'path'
WITHOUT_CLASSIFICATION	----- Ruby Class Methods ----------------------------------------------------
WITHOUT_CLASSIFICATION	CONSTANT TABLE METHODS - pass to delegate
WITHOUT_CLASSIFICATION	We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?
WITHOUT_CLASSIFICATION	MRI behavior
WITHOUT_CLASSIFICATION	----- Ruby Instance Methods -------------------------------------------------
WITHOUT_CLASSIFICATION	Make sure any read()s after close fail.
WITHOUT_CLASSIFICATION	----- Helper Methods --------------------------------------------------------
WITHOUT_CLASSIFICATION	try to use POSIX for this first
WITHOUT_CLASSIFICATION	otherwise fall back on the old way
WITHOUT_CLASSIFICATION	Proc class
WITHOUT_CLASSIFICATION	No passed in block, lets check next outer frame for one ('Proc.new')
WITHOUT_CLASSIFICATION	modify the block with a new backref/lastline-grabbing scope
WITHOUT_CLASSIFICATION	for future compatibility as constructors move toward not accepting metaclass?
WITHOUT_CLASSIFICATION	case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;
WITHOUT_CLASSIFICATION	This looks wrong, but it's the way MRI does it.
WITHOUT_CLASSIFICATION	rb_exc_new3
WITHOUT_CLASSIFICATION	NOTE: The indicies here match exactly the signal values; do not reorder
WITHOUT_CLASSIFICATION	registerThreadDumpSignalHandler(runtime);
WITHOUT_CLASSIFICATION	IOT is also 6
WITHOUT_CLASSIFICATION	CLD is also 20
WITHOUT_CLASSIFICATION	RubySignal
WITHOUT_CLASSIFICATION	ZStream actually isn't allocatable
WITHOUT_CLASSIFICATION	MRI behavior, enforced by tests
WITHOUT_CLASSIFICATION	it's safe since adler.update doesn't modify the array
WITHOUT_CLASSIFICATION	MRI behavior: in finished mode, we work as pass-through
WITHOUT_CLASSIFICATION	SYNC_FLUSH
WITHOUT_CLASSIFICATION	By default, NO_FLUSH
WITHOUT_CLASSIFICATION	io.finish();
WITHOUT_CLASSIFICATION	should invoke seek on realIo
WITHOUT_CLASSIFICATION	hmm...
WITHOUT_CLASSIFICATION	Called before any write to make sure the header is always written before the first bytes
WITHOUT_CLASSIFICATION	For JDK 1.4 we can use "cal.getTimeInMillis()"
WITHOUT_CLASSIFICATION	We can just use dt, since it is immutable
WITHOUT_CLASSIFICATION	float number of seconds
WITHOUT_CLASSIFICATION	modified to match how hash is calculated in 1.8.2
WITHOUT_CLASSIFICATION	dump usec, not msec
WITHOUT_CLASSIFICATION	Time class methods
WITHOUT_CLASSIFICATION	marsaling dumps usec, not msec
WITHOUT_CLASSIFICATION	MRI accepts additional wday argument which appears to be ignored.
WITHOUT_CLASSIFICATION	set up with min values and then add to allow rolling over
WITHOUT_CLASSIFICATION	the instant at which we will ask dtz what the difference between DST and standard time is
WITHOUT_CLASSIFICATION	if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST
WITHOUT_CLASSIFICATION	Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	If the value will fit in a Fixnum, return one of those.
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	no bignorm here needed
WITHOUT_CLASSIFICATION	wow, the only time we can use the java protocol ;)
WITHOUT_CLASSIFICATION	Pad with a 0
WITHOUT_CLASSIFICATION	BigInteger required a sign byte in incoming array
WITHOUT_CLASSIFICATION	This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	We do this b/c make_tmpname might be overridden
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	PID
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	elements and trailing nils
WITHOUT_CLASSIFICATION	Dir::tmpdir
WITHOUT_CLASSIFICATION	volatile to ensure that initial nil-fill is visible to other threads
WITHOUT_CLASSIFICATION	Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise
WITHOUT_CLASSIFICATION	rb_ary_new2 just allocates the internal array
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	plain internal array assignment
WITHOUT_CLASSIFICATION	Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour
WITHOUT_CLASSIFICATION	NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace
WITHOUT_CLASSIFICATION	Create global constants and variables
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.
WITHOUT_CLASSIFICATION	There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	1.9 seems to just do inspect for to_s now
WITHOUT_CLASSIFICATION	possibly should not in object space
WITHOUT_CLASSIFICATION	only fill if there actually will remain trailing storage
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	rb_ary_new4
WITHOUT_CLASSIFICATION	from DUP_SETUP
WITHOUT_CLASSIFICATION	If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	See [ruby-core:17483]
WITHOUT_CLASSIFICATION	See [ruby-core:17483]
WITHOUT_CLASSIFICATION	Satisfy java.util.List interface (for Java integration)
WITHOUT_CLASSIFICATION	pre-set for the sake of terminating recursive calls
WITHOUT_CLASSIFICATION	root fiber
WITHOUT_CLASSIFICATION	GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.
WITHOUT_CLASSIFICATION	See http:www.gzip.org/zlib/rfc-gzip.html
WITHOUT_CLASSIFICATION	extras flag
WITHOUT_CLASSIFICATION	Zlib::NO_FLUSH
WITHOUT_CLASSIFICATION	...nothing
WITHOUT_CLASSIFICATION	utility method
WITHOUT_CLASSIFICATION	Prepare LoadService and load path
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	flags 4 bytes of modified time
WITHOUT_CLASSIFICATION	range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	1.8 "include?"
WITHOUT_CLASSIFICATION	any BigInteger is bigger than Fixnum and we don't have FIXABLE
WITHOUT_CLASSIFICATION	beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal
WITHOUT_CLASSIFICATION	MRI does it!
WITHOUT_CLASSIFICATION	won't hurt fixnums
WITHOUT_CLASSIFICATION	it won't hurt fixnums
WITHOUT_CLASSIFICATION	RubyClassPathVariable
WITHOUT_CLASSIFICATION	not to be confused with RubyObject's flags
WITHOUT_CLASSIFICATION	second argument is allowed, but ignored (MRI)
WITHOUT_CLASSIFICATION	we are presumably running a precompiled class; load directly
WITHOUT_CLASSIFICATION	terminate; tryCompile will have printed out an error and we're done
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	do nothing, this iteration restarts
WITHOUT_CLASSIFICATION	recheck condition
WITHOUT_CLASSIFICATION	Get the main threadcontext (gets constructed for us)
WITHOUT_CLASSIFICATION	Construct key services
WITHOUT_CLASSIFICATION	initialize the root of the class hierarchy completely
WITHOUT_CLASSIFICATION	Construct the top-level execution frame and scope for the main thread
WITHOUT_CLASSIFICATION	Initialize all the core classes
WITHOUT_CLASSIFICATION	Initialize the "dummy" class used as a marker
WITHOUT_CLASSIFICATION	Initialize Kernel and include into Object
WITHOUT_CLASSIFICATION	Object is ready, create top self
WITHOUT_CLASSIFICATION	Pre-create all the core classes potentially referenced during startup
WITHOUT_CLASSIFICATION	Math depends on all numeric types
WITHOUT_CLASSIFICATION	depends on IO, FileTest
WITHOUT_CLASSIFICATION	initialize builtin libraries
WITHOUT_CLASSIFICATION	Require in all libraries specified on command line
WITHOUT_CLASSIFICATION	Bootstrap the top of the hierarchy
WITHOUT_CLASSIFICATION	we try to get the classloader that loaded JRuby, falling back on System
WITHOUT_CLASSIFICATION	determine spacing
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	For JSR 223 support: see http:scripting.java.net/
WITHOUT_CLASSIFICATION	use this for JRuby-internal finalizers
WITHOUT_CLASSIFICATION	this method is for finalizers registered via ObjectSpace
WITHOUT_CLASSIFICATION	new factory methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	Equivalent of Data_Wrap_Struct
WITHOUT_CLASSIFICATION	default: don't retain
WITHOUT_CLASSIFICATION	ChannelDescriptors opened by sysopen are cached to avoid collection
WITHOUT_CLASSIFICATION	Default objects
WITHOUT_CLASSIFICATION	record separator var, to speed up io ops that use it
WITHOUT_CLASSIFICATION	former java.lang.System concepts now internalized for MVM
WITHOUT_CLASSIFICATION	Java support
WITHOUT_CLASSIFICATION	Parser stats
WITHOUT_CLASSIFICATION	Compilation
WITHOUT_CLASSIFICATION	can't read non-standard properties
WITHOUT_CLASSIFICATION	can't create custom classloaders
WITHOUT_CLASSIFICATION	mutex that controls modifications of user-defined finalizers
WITHOUT_CLASSIFICATION	mutex that controls modifications of internal finalizers
WITHOUT_CLASSIFICATION	A thread pool to use for executing this runtime's Ruby threads
WITHOUT_CLASSIFICATION	A global object lock for class hierarchy mutations
WITHOUT_CLASSIFICATION	initial spaces spaces before "at"
WITHOUT_CLASSIFICATION	event name filename line numbers should be 1-based
WITHOUT_CLASSIFICATION	The method is intentionally not public, since it typically should not be used outside of the core.
WITHOUT_CLASSIFICATION	Note: this field and the following static initializer must be located be in this order!
WITHOUT_CLASSIFICATION	Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.
WITHOUT_CLASSIFICATION	quoted-printable
WITHOUT_CLASSIFICATION	default options
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	iso-2022-jp
WITHOUT_CLASSIFICATION	Shift_JIS
WITHOUT_CLASSIFICATION	Shift_JIS
WITHOUT_CLASSIFICATION	EUC-JP
WITHOUT_CLASSIFICATION	EUC-JP
WITHOUT_CLASSIFICATION	UTF-8
WITHOUT_CLASSIFICATION	UTF-8
WITHOUT_CLASSIFICATION	long name option
WITHOUT_CLASSIFICATION	conversion
WITHOUT_CLASSIFICATION	================ Singleton Methods ================
WITHOUT_CLASSIFICATION	string doesn't share any resources
WITHOUT_CLASSIFICATION	string has it's own ByteList, but it's pointing to a shared buffer (byte[])
WITHOUT_CLASSIFICATION	string doesn't have it's own ByteList (values)
WITHOUT_CLASSIFICATION	ENC_CODERANGE_ASCIIONLY
WITHOUT_CLASSIFICATION	rb_enc_str_asciionly_p
WITHOUT_CLASSIFICATION	rb_enc_str_coderange
WITHOUT_CLASSIFICATION	rb_str_hash_cmp
WITHOUT_CLASSIFICATION	Deprecated String construction routines
WITHOUT_CLASSIFICATION	String construction routines by NOT byte[] buffer and NOT making the target String shared
WITHOUT_CLASSIFICATION	rb_str_subseq
WITHOUT_CLASSIFICATION	no need to assign encoding, same bytelist shared
WITHOUT_CLASSIFICATION	if len == 0 then shared empty
WITHOUT_CLASSIFICATION	rb_str_cmp_m
WITHOUT_CLASSIFICATION	we limit to int because ByteBuffer can only allocate int sizes
WITHOUT_CLASSIFICATION	rb_str_buf_append
WITHOUT_CLASSIFICATION	encoding doesn't have to be copied.
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	must not reallocate
WITHOUT_CLASSIFICATION	Illegal combination
WITHOUT_CLASSIFICATION	use 1.8 impl
WITHOUT_CLASSIFICATION	RubyString aka rb_string_value
WITHOUT_CLASSIFICATION	bang: true, no match, no substitution
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	len + margin
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	copy pre-match substr
WITHOUT_CLASSIFICATION	string given
WITHOUT_CLASSIFICATION	hash given
WITHOUT_CLASSIFICATION	This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"
WITHOUT_CLASSIFICATION	substring longer than string
WITHOUT_CLASSIFICATION	rb_str_substr
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	rb_str_splice
WITHOUT_CLASSIFICATION	TODO: keep cr TODO: rb_str_splice_0
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	wrapped to \0...\0. search next valid char.
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	QTRUE
WITHOUT_CLASSIFICATION	retrieve last replacer
WITHOUT_CLASSIFICATION	Check the length every iteration, since the block can modify this string.
WITHOUT_CLASSIFICATION	long size bits in byte
WITHOUT_CLASSIFICATION	from encoding, special-casing ASCII to ASCII
WITHOUT_CLASSIFICATION	to encoding, same special-casing
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	decode from "from" and encode to "to"
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	Kernel is the only Module that doesn't need an implementor
WITHOUT_CLASSIFICATION	no binding given, use (eval)
WITHOUT_CLASSIFICATION	interned, OK for "fast" methods
WITHOUT_CLASSIFICATION	File to be loaded by autoload has already been or is being loaded.
WITHOUT_CLASSIFICATION	rb_cstr_to_dbl case
WITHOUT_CLASSIFICATION	We break if we know this sleep was explicitly woken up/interrupted
WITHOUT_CLASSIFICATION	exec process, create IO with process
WITHOUT_CLASSIFICATION	Zero sleeps forever
WITHOUT_CLASSIFICATION	file given, use it and force it into binding
WITHOUT_CLASSIFICATION	Explicit zero in MRI returns immediately
WITHOUT_CLASSIFICATION	Spurious wakeup-loop
WITHOUT_CLASSIFICATION	adjusts paths started with '/' or '\\', on windows.
WITHOUT_CLASSIFICATION	file not given
WITHOUT_CLASSIFICATION	string to eval
WITHOUT_CLASSIFICATION	binding given, use binding's file
WITHOUT_CLASSIFICATION	?g | boolean | True if file1 has the \CF{setgid} bit
WITHOUT_CLASSIFICATION	bomb out, it's not a binding or a proc
WITHOUT_CLASSIFICATION	Ordering of array traversal not important, just intuitive
WITHOUT_CLASSIFICATION	Catch active, throw for catch to handle
WITHOUT_CLASSIFICATION	No catch active for this throw
WITHOUT_CLASSIFICATION	without full tracing, many events will not fire
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	MRI behavior: use first byte of string value if len > 0
WITHOUT_CLASSIFICATION	MRI behavior: now check arg count
WITHOUT_CLASSIFICATION	?A | Time | Last access time for file1
WITHOUT_CLASSIFICATION	?b | boolean | True if file1 is a block device
WITHOUT_CLASSIFICATION	?c | boolean | True if file1 is a character device
WITHOUT_CLASSIFICATION	?C | Time | Last change time for file1
WITHOUT_CLASSIFICATION	?d | boolean | True if file1 exists and is a directory
WITHOUT_CLASSIFICATION	?e | boolean | True if file1 exists
WITHOUT_CLASSIFICATION	?f | boolean | True if file1 exists and is a regular file
WITHOUT_CLASSIFICATION	?G | boolean | True if file1 exists and has a group ownership equal to the caller's group
WITHOUT_CLASSIFICATION	?k | boolean | True if file1 exists and has the sticky bit set
WITHOUT_CLASSIFICATION	?M | Time | Last modification time for file1
WITHOUT_CLASSIFICATION	?o | boolean | True if file1 exists and is owned by the caller's effective uid
WITHOUT_CLASSIFICATION	?O | boolean | True if file1 exists and is owned by the caller's real uid
WITHOUT_CLASSIFICATION	?p | boolean | True if file1 exists and is a fifo
WITHOUT_CLASSIFICATION	?r | boolean | True if file1 is readable by the effective uid/gid of the caller
WITHOUT_CLASSIFICATION	?s | int/nil | If file1 has nonzero size, return the size, otherwise nil
WITHOUT_CLASSIFICATION	?S | boolean | True if file1 exists and is a socket
WITHOUT_CLASSIFICATION	?u | boolean | True if file1 has the setuid bit set
WITHOUT_CLASSIFICATION	?x | boolean | True if file1 exists and is executable by the effective uid/gid
WITHOUT_CLASSIFICATION	?X | boolean | True if file1 exists and is executable by the real uid/gid
WITHOUT_CLASSIFICATION	?z | boolean | True if file1 exists and has a zero length
WITHOUT_CLASSIFICATION	?= | boolean | True if the modification times of file1 and file2 are equal
WITHOUT_CLASSIFICATION	?< | boolean | True if the modification time of file1 is prior to that of file2
WITHOUT_CLASSIFICATION	?> | boolean | True if the modification time of file1 is after that of file2
WITHOUT_CLASSIFICATION	?- | boolean | True if file1 and file2 are identical
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	Error info is per-thread
WITHOUT_CLASSIFICATION	init errorInfo to nil
WITHOUT_CLASSIFICATION	if we're already aborting, we can receive no further mail
WITHOUT_CLASSIFICATION	If this thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	new interrupt, to hopefully wake it out of any blocking IO
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	for Thread::start, which does not call the subclass's initialize
WITHOUT_CLASSIFICATION	JRUBY-3568, inherit threadgroup or use default
WITHOUT_CLASSIFICATION	MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil
WITHOUT_CLASSIFICATION	If the target thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	We need this loop in order to be able to "unblock" the join call without actually calling interrupt.
WITHOUT_CLASSIFICATION	attempt to decriticalize all if we're the critical thread
WITHOUT_CLASSIFICATION	not valid for "dead" state
WITHOUT_CLASSIFICATION	If the killee thread is the same as the killer thread, just die
WITHOUT_CLASSIFICATION	check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...
WITHOUT_CLASSIFICATION	can't select, just have to do a blocking call
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	Create Constants class
WITHOUT_CLASSIFICATION	Create constants for open flags
WITHOUT_CLASSIFICATION	Strip off the O_ prefix, so they become File::RDONLY, and so on
WITHOUT_CLASSIFICATION	Create constants for flock
WITHOUT_CLASSIFICATION	File::Constants module is included in IO.
WITHOUT_CLASSIFICATION	Make sure any existing lock is released before we try and close the file
WITHOUT_CLASSIFICATION	null channel always succeeds for all locking operations
WITHOUT_CLASSIFICATION	Paths which end in "/" or "\\" must be stripped off.
WITHOUT_CLASSIFICATION	Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.
WITHOUT_CLASSIFICATION	Return false here
WITHOUT_CLASSIFICATION	Return false here
WITHOUT_CLASSIFICATION	We're not actually a real file, so we can't flock
WITHOUT_CLASSIFICATION	Should we do anything?
WITHOUT_CLASSIFICATION	File class methods
WITHOUT_CLASSIFICATION	MRI-compatible basename handling for windows drive letter paths
WITHOUT_CLASSIFICATION	strip c: away from relative-pathed name
WITHOUT_CLASSIFICATION	C:\ is returned unchanged
WITHOUT_CLASSIFICATION	-1 no match; 0 it is dot file not extension
WITHOUT_CLASSIFICATION	trim trailing slashes
WITHOUT_CLASSIFICATION	Dot is not at beginning and not at end of filename.
WITHOUT_CLASSIFICATION	Handle ~user paths
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")
WITHOUT_CLASSIFICATION	FNFException can be thrown in both cases, when the file is not found, or when permission is denied.
WITHOUT_CLASSIFICATION	No directory delimeter. Rest of string is username
WITHOUT_CLASSIFICATION	If there's a second argument, it's the path to which the first argument is relative.
WITHOUT_CLASSIFICATION	Handle ~user paths.
WITHOUT_CLASSIFICATION	If there's no second argument, simply use the working directory of the runtime.
WITHOUT_CLASSIFICATION	Find out which string to check.
WITHOUT_CLASSIFICATION	Single '~' as whole path to expand
WITHOUT_CLASSIFICATION	Count number of extra slashes in the beginning of the string.
WITHOUT_CLASSIFICATION	'~user/...' as path to expand
WITHOUT_CLASSIFICATION	'~/...' as path to expand
WITHOUT_CLASSIFICATION	Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.
WITHOUT_CLASSIFICATION	If there are N slashes, then we want N-1.
WITHOUT_CLASSIFICATION	no canonical path yet or length is zero, and we have a / followed by a dot...
WITHOUT_CLASSIFICATION	we don't have another slash after this, so replace /. with /
WITHOUT_CLASSIFICATION	we do have another slash; omit both / and . (JRUBY-1606)
WITHOUT_CLASSIFICATION	do nothing, we should not delete the drive letter
WITHOUT_CLASSIFICATION	rb: check_modifiable
WITHOUT_CLASSIFICATION	rb: readable
WITHOUT_CLASSIFICATION	rename is successful
WITHOUT_CLASSIFICATION	rename via Java API call wasn't successful, let's try some tricks, similar to MRI
WITHOUT_CLASSIFICATION	try to rename one more time
WITHOUT_CLASSIFICATION	Can we produce IOError which bypasses a close?
WITHOUT_CLASSIFICATION	Fast path since JNA stat is about 10x slower than this
WITHOUT_CLASSIFICATION	RubyContinuation
WITHOUT_CLASSIFICATION	Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field
WITHOUT_CLASSIFICATION	16 ?
WITHOUT_CLASSIFICATION	generation count for O(1) clears
WITHOUT_CLASSIFICATION	size + 1;
WITHOUT_CLASSIFICATION	suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	------------------------------
WITHOUT_CLASSIFICATION	put implementation
WITHOUT_CLASSIFICATION	get implementation
WITHOUT_CLASSIFICATION	specialized for value
WITHOUT_CLASSIFICATION	delete implementation
WITHOUT_CLASSIFICATION	n.b. we need to recompute the hash in case the key object was modified
WITHOUT_CLASSIFICATION	============================ End of hash internals ============================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	update the hash value
WITHOUT_CLASSIFICATION	other hash does not contain key
WITHOUT_CLASSIFICATION	rb_yield_values(2,...) equivalent
WITHOUT_CLASSIFICATION	Satisfy java.util.Set interface (for Java integration)
WITHOUT_CLASSIFICATION	remain where we are
WITHOUT_CLASSIFICATION	We use file test since it is faster than a stat; also euid == uid in Java always
WITHOUT_CLASSIFICATION	default: don't retain
WITHOUT_CLASSIFICATION	once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted
WITHOUT_CLASSIFICATION	Not exposed by filetest, but so similiar in nature that it is stored here
WITHOUT_CLASSIFICATION	We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.
WITHOUT_CLASSIFICATION	first try as directory
WITHOUT_CLASSIFICATION	next as regular file
WITHOUT_CLASSIFICATION	We only want IO objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	NIO-based
WITHOUT_CLASSIFICATION	NIO-based
WITHOUT_CLASSIFICATION	Stream-based
WITHOUT_CLASSIFICATION	special constructor that accepts stream, not channel
WITHOUT_CLASSIFICATION	We use FILE versus IO to match T_FILE in MRI.
WITHOUT_CLASSIFICATION	Constants for seek
WITHOUT_CLASSIFICATION	confirm we're not reopening self's channel
WITHOUT_CLASSIFICATION	check if we're a stdio IO, and ensure we're not badly mutilated
WITHOUT_CLASSIFICATION	dup2 new fd into self to preserve fileno and references to it
WITHOUT_CLASSIFICATION	re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	re-register the descriptor
WITHOUT_CLASSIFICATION	since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler
WITHOUT_CLASSIFICATION	re-register
WITHOUT_CLASSIFICATION	A potentially previously close IO is being 'reopened'.
WITHOUT_CLASSIFICATION	Ensure that separator is valid otherwise give it the default paragraph separator.
WITHOUT_CLASSIFICATION	loop until we see the nth separator char
WITHOUT_CLASSIFICATION	if we hit EOF or reached limit then we're done
WITHOUT_CLASSIFICATION	this is for a range check, near as I can tell
WITHOUT_CLASSIFICATION	IO class methods.
WITHOUT_CLASSIFICATION	use original modes
WITHOUT_CLASSIFICATION	See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).
WITHOUT_CLASSIFICATION	redundant, done above as well
WITHOUT_CLASSIFICATION	MRI behavior: swallow StandardErorrs
WITHOUT_CLASSIFICATION	-1 == don't set permissions
WITHOUT_CLASSIFICATION	isRetained=true
WITHOUT_CLASSIFICATION	This appears to be some windows-only mode. On a java platform this is a no-op
WITHOUT_CLASSIFICATION	if not sync, we switch to write buffered mode
WITHOUT_CLASSIFICATION	Throw bad file descriptor is we can not read on supplied descriptor.
WITHOUT_CLASSIFICATION	Everything written
WITHOUT_CLASSIFICATION	return len - n;
WITHOUT_CLASSIFICATION	Claims conversion is done via 'to_s' in docs.
WITHOUT_CLASSIFICATION	Of course this isn't particularly useful.
WITHOUT_CLASSIFICATION	Must be back on first line on rewind.
WITHOUT_CLASSIFICATION	Register the new descriptor
WITHOUT_CLASSIFICATION	cleanup, raising errors if any
WITHOUT_CLASSIFICATION	hmmmm
WITHOUT_CLASSIFICATION	I believe Ruby bails out with a "bug" if closing fails
WITHOUT_CLASSIFICATION	Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!
WITHOUT_CLASSIFICATION	Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.
WITHOUT_CLASSIFICATION	Length to read
WITHOUT_CLASSIFICATION	String/Buffer to read it into
WITHOUT_CLASSIFICATION	cryptic for the uninitiated...
WITHOUT_CLASSIFICATION	select until read is ready
WITHOUT_CLASSIFICATION	ByteList buffer = null;
WITHOUT_CLASSIFICATION	buffer = str.getByteList();
WITHOUT_CLASSIFICATION	READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	rb: writable
WITHOUT_CLASSIFICATION	READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);
WITHOUT_CLASSIFICATION	truncate buffer string to zero, if provided
WITHOUT_CLASSIFICATION	TODO: READ_CHECK from MRI
WITHOUT_CLASSIFICATION	class methods for IO
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	write
WITHOUT_CLASSIFICATION	Java's select doesn't do anything about this, so we leave it be.
WITHOUT_CLASSIFICATION	make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes
WITHOUT_CLASSIFICATION	FIXME: process options
WITHOUT_CLASSIFICATION	Enebo: annotation processing forced me to do pangea method here...
WITHOUT_CLASSIFICATION	NIO based pipe
WITHOUT_CLASSIFICATION	not using remove(Object) here to avoid the equals() call
WITHOUT_CLASSIFICATION	raise will also wake the thread from selection
WITHOUT_CLASSIFICATION	may need to handle ENC_CODERANGE_BROKEN
WITHOUT_CLASSIFICATION	TODO: rb_usascii_str_new2
WITHOUT_CLASSIFICATION	If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.
WITHOUT_CLASSIFICATION	The class of this object
WITHOUT_CLASSIFICATION	zeroed by jvm
WITHOUT_CLASSIFICATION	objectClass.defineAnnotatedMethods(BasicObjectMethods.class);
WITHOUT_CLASSIFICATION	JRUBY-4113: callers should not call setTaint on immediate objects
WITHOUT_CLASSIFICATION	rb_class_boot
WITHOUT_CLASSIFICATION	6:tags 16:addr 1:eos
WITHOUT_CLASSIFICATION	1.9 rb_check_to_integer
WITHOUT_CLASSIFICATION	for interface impls
WITHOUT_CLASSIFICATION	We're cloning ourselves, so we know the result should be a RubyObject
WITHOUT_CLASSIFICATION	Methods of the Object class (rb_obj_):
WITHOUT_CLASSIFICATION	can't use -v and stdin
WITHOUT_CLASSIFICATION	include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.
WITHOUT_CLASSIFICATION	COMMON VARIABLE METHODS
WITHOUT_CLASSIFICATION	INTERNAL VARIABLE METHODS
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE API METHODS
WITHOUT_CLASSIFICATION	Struct methods
WITHOUT_CLASSIFICATION	runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);
WITHOUT_CLASSIFICATION	define access methods.
WITHOUT_CLASSIFICATION	if we are storing a name as well, index is one too high for values
WITHOUT_CLASSIFICATION	Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.
WITHOUT_CLASSIFICATION	For binding purposes on the newly created struct types
WITHOUT_CLASSIFICATION	OBJ_INFECT
WITHOUT_CLASSIFICATION	These call assume ThreadContext = receiver.getRuntime().getCurrentContext()
WITHOUT_CLASSIFICATION	Execute iterateMethod again.
WITHOUT_CLASSIFICATION	@param nv number of times to cycle or -1 to cycle indefinitely
WITHOUT_CLASSIFICATION	Atomic ?
WITHOUT_CLASSIFICATION	Atomic ?
WITHOUT_CLASSIFICATION	MUST NOT be used across threads
WITHOUT_CLASSIFICATION	superClass may be null.
WITHOUT_CLASSIFICATION	Containing class...The parent of Object is null. Object should always be last in chain.
WITHOUT_CLASSIFICATION	ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.
WITHOUT_CLASSIFICATION	ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	Make sure the module we include does not already exist
WITHOUT_CLASSIFICATION	MRI checks all types first:
WITHOUT_CLASSIFICATION	we need full traces, use default (slow) populator
WITHOUT_CLASSIFICATION	module/singleton methods are all defined public
WITHOUT_CLASSIFICATION	See if module is in chain...Cannot match against itself so start at superClass.
WITHOUT_CLASSIFICATION	We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.
WITHOUT_CLASSIFICATION	we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway
WITHOUT_CLASSIFICATION	update all hierarchies into which this module has been included
WITHOUT_CLASSIFICATION	This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.
WITHOUT_CLASSIFICATION	need to skip IncludedModuleWrappers
WITHOUT_CLASSIFICATION	superClazz = null;
WITHOUT_CLASSIFICATION	reopen a java class
WITHOUT_CLASSIFICATION	This method is intended only for defining new modules in Ruby code
WITHOUT_CLASSIFICATION	reopen a java module
WITHOUT_CLASSIFICATION	FIXME warning
WITHOUT_CLASSIFICATION	FIXME warning
WITHOUT_CLASSIFICATION	a normal block passed to define_method changes to do arity checking; make it a lambda
WITHOUT_CLASSIFICATION	for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope
WITHOUT_CLASSIFICATION	just using required is broken...but no more broken than before zsuper refactoring
WITHOUT_CLASSIFICATION	class and module bodies default to public, so make the block's visibility public. JRUBY-1185.
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	MRI error message says Class, even though Module is ok
WITHOUT_CLASSIFICATION	scan class hierarchy for module
WITHOUT_CLASSIFICATION	Module class methods
WITHOUT_CLASSIFICATION	Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).
WITHOUT_CLASSIFICATION	next in hierarchy is an included version of the module we're attempting, so we skip including it
WITHOUT_CLASSIFICATION	if we haven't encountered a real superclass, use the found module as the new inclusion point
WITHOUT_CLASSIFICATION	build a list of all modules to consider for inclusion
WITHOUT_CLASSIFICATION	if the insertion point is a class, update subclass lists
WITHOUT_CLASSIFICATION	if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships
WITHOUT_CLASSIFICATION	CLASS VARIABLE RUBY METHODS
WITHOUT_CLASSIFICATION	CONSTANT RUBY METHODS
WITHOUT_CLASSIFICATION	Note: includes part of fix for JRUBY-1339
WITHOUT_CLASSIFICATION	CLASS VARIABLE API METHODS
WITHOUT_CLASSIFICATION	Wrong Parameter ?
WITHOUT_CLASSIFICATION	not actually called anywhere (all known uses call the fast version)
WITHOUT_CLASSIFICATION	Not that is loaded loop around to resolve it next pass
WITHOUT_CLASSIFICATION	if adding a module under a constant name, set that module's basename to the constant name
WITHOUT_CLASSIFICATION	Fix for JRUBY-1339 - search hierarchy for constant
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	removes and returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	we can't rename a file while it's open in windows
WITHOUT_CLASSIFICATION	reopen
WITHOUT_CLASSIFICATION	ARGF methods
WITHOUT_CLASSIFICATION	data.currentFile.callMethod(context, "lineno=", line);
WITHOUT_CLASSIFICATION	one optional, one required args
WITHOUT_CLASSIFICATION	one optional and no required args
WITHOUT_CLASSIFICATION	try to get errno value out of the class
WITHOUT_CLASSIFICATION	we got a valid errno value
WITHOUT_CLASSIFICATION	Ensure we're not running on GCJ, since it's not supported and leads to weird errors
WITHOUT_CLASSIFICATION	print out as a nice Ruby backtrace
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	set thread context JRuby classloader here, for the main thread
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	no script to run, return success below
WITHOUT_CLASSIFICATION	Skip /usr/bin/env if it's first
WITHOUT_CLASSIFICATION	Skip any assignments if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	Skip any commandline args if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	ignore error
WITHOUT_CLASSIFICATION	COMMON CONSTANT / CVAR METHODS
WITHOUT_CLASSIFICATION	INTERNAL MODULE VARIABLE API METHODS
WITHOUT_CLASSIFICATION	LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module
WITHOUT_CLASSIFICATION	odd
WITHOUT_CLASSIFICATION	JRubyClient
WITHOUT_CLASSIFICATION	x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)
WITHOUT_CLASSIFICATION	Make mantissa same sign so we only have one code path.
WITHOUT_CLASSIFICATION	Increase value to hit lower range.
WITHOUT_CLASSIFICATION	r = x 2 y
WITHOUT_CLASSIFICATION	0!
WITHOUT_CLASSIFICATION	1!
WITHOUT_CLASSIFICATION	2!
WITHOUT_CLASSIFICATION	3!
WITHOUT_CLASSIFICATION	4!
WITHOUT_CLASSIFICATION	5!
WITHOUT_CLASSIFICATION	6!
WITHOUT_CLASSIFICATION	7!
WITHOUT_CLASSIFICATION	8!
WITHOUT_CLASSIFICATION	9!
WITHOUT_CLASSIFICATION	11!
WITHOUT_CLASSIFICATION	12!
WITHOUT_CLASSIFICATION	13!
WITHOUT_CLASSIFICATION	15!
WITHOUT_CLASSIFICATION	16!
WITHOUT_CLASSIFICATION	17!
WITHOUT_CLASSIFICATION	19!
WITHOUT_CLASSIFICATION	20!
WITHOUT_CLASSIFICATION	21!
WITHOUT_CLASSIFICATION	Static constants
WITHOUT_CLASSIFICATION	Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators
WITHOUT_CLASSIFICATION	2. MRI allows underscores anywhere
WITHOUT_CLASSIFICATION	3. MRI ignores the trailing junk
WITHOUT_CLASSIFICATION	MRI behavior: -0 and +0 are two different things
WITHOUT_CLASSIFICATION	Java and MRI definitions of modulo are different.
WITHOUT_CLASSIFICATION	Java and MRI definitions of remainder are the same.
WITHOUT_CLASSIFICATION	Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:
WITHOUT_CLASSIFICATION	Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	TODO: why this: .setResult();
WITHOUT_CLASSIFICATION	integer division
WITHOUT_CLASSIFICATION	MRI behavior: "If digits is 0, the result is the same as the / operator."
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	Java and MRI definitions of divmod are different.
WITHOUT_CLASSIFICATION	JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it
WITHOUT_CLASSIFICATION	shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.
WITHOUT_CLASSIFICATION	...round to that digit
WITHOUT_CLASSIFICATION	...and shift the result back to the left (multiply by 10(abs(scale)))
WITHOUT_CLASSIFICATION	this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are
WITHOUT_CLASSIFICATION	sign
WITHOUT_CLASSIFICATION	significant digits and exponent
WITHOUT_CLASSIFICATION	normalize the value
WITHOUT_CLASSIFICATION	base
WITHOUT_CLASSIFICATION	NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.
WITHOUT_CLASSIFICATION	just in case, add a bit of extra precision
WITHOUT_CLASSIFICATION	eh?!
WITHOUT_CLASSIFICATION	Note: #fix has only no-arg form, but truncate allows optional parameter.
WITHOUT_CLASSIFICATION	General number and precision checking
WITHOUT_CLASSIFICATION	the requested precision
WITHOUT_CLASSIFICATION	Proc class
WITHOUT_CLASSIFICATION	.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")
WITHOUT_CLASSIFICATION	even shift.. ..floors to 62 or 63 bit BigInteger
WITHOUT_CLASSIFICATION	5 -> 2, -5 -> -3 need half a scale more..
WITHOUT_CLASSIFICATION	..where 100 -> 10 shifts the scale
WITHOUT_CLASSIFICATION	Initial x - use double root - multiply by halfBack to unshift - set new scale
WITHOUT_CLASSIFICATION	x0 ~ sqrt()
WITHOUT_CLASSIFICATION	for prec 15 root x0 must surely be OK return small prec roots without iterations
WITHOUT_CLASSIFICATION	Initial v - the reciprocal v0 = 1/(2x)
WITHOUT_CLASSIFICATION	Collect iteration precisions beforehand
WITHOUT_CLASSIFICATION	assume nInit = 16 <= prec
WITHOUT_CLASSIFICATION	The loop of "Square Root by Coupled Newton Iteration"
WITHOUT_CLASSIFICATION	Increase precision - next iteration supplies n exact digits
WITHOUT_CLASSIFICATION	Next x e = d - x^2
WITHOUT_CLASSIFICATION	x += ev ~ sqrt()
WITHOUT_CLASSIFICATION	root x is ready!
WITHOUT_CLASSIFICATION	Next v g = 1 - 2xv
WITHOUT_CLASSIFICATION	v += gv ~ 1/2/sqrt()
WITHOUT_CLASSIFICATION	RubyBigdecimal
WITHOUT_CLASSIFICATION	c: bind_eval
WITHOUT_CLASSIFICATION	================ Module Methods ================
WITHOUT_CLASSIFICATION	from CommandlineParser
WITHOUT_CLASSIFICATION	This property is a Boolean, to allow three values, so it can match MRI's nil, false and true
WITHOUT_CLASSIFICATION	default ClassCache using jitMax as a soft upper bound
WITHOUT_CLASSIFICATION	Until we get a little more solid on 1.9 support we will only run interpreted mode
WITHOUT_CLASSIFICATION	Setting the loader needs to reset the class cache
WITHOUT_CLASSIFICATION	try the normal property first
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	verify it if it's there
WITHOUT_CLASSIFICATION	try loading from classloader resources
WITHOUT_CLASSIFICATION	otherwise fall back on system temp location
WITHOUT_CLASSIFICATION	We require the home directory to be absolute
WITHOUT_CLASSIFICATION	consume the file name
WITHOUT_CLASSIFICATION	Specify something that can't separate
WITHOUT_CLASSIFICATION	try cwd first
WITHOUT_CLASSIFICATION	ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])
WITHOUT_CLASSIFICATION	KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "complex?")
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "exact?")
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "inexact?")
WITHOUT_CLASSIFICATION	symbol string must be interned
WITHOUT_CLASSIFICATION	assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";
WITHOUT_CLASSIFICATION	Symbol class methods.
WITHOUT_CLASSIFICATION	TODO: 1.9 rb_enc_symname_p
WITHOUT_CLASSIFICATION	This is needed to unpack stuff
WITHOUT_CLASSIFICATION	we already confirmed above that length > 0
WITHOUT_CLASSIFICATION	must be power of 2!
WITHOUT_CLASSIFICATION	note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.
WITHOUT_CLASSIFICATION	assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	backwards-compatibility, but threadsafe now
WITHOUT_CLASSIFICATION	Single node on list
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	Check the length every iteration, since the block can modify this string.
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	not so backwards-compatible here, but no one should have been calling this anyway.
WITHOUT_CLASSIFICATION	Profile
WITHOUT_CLASSIFICATION	static private final String TRANSLIT = "translit";
WITHOUT_CLASSIFICATION	treat start and end as start...end for end >= 0, start..end for end < 0
WITHOUT_CLASSIFICATION	invalid ranges result in an empty string
WITHOUT_CLASSIFICATION	Methods of the Nil Class (nil_):
WITHOUT_CLASSIFICATION	Has read/write been closed or is it still open for business
WITHOUT_CLASSIFICATION	Support IO modes that this object was opened with
WITHOUT_CLASSIFICATION	must let original string know we're modifying, so shared buffers aren't damaged
WITHOUT_CLASSIFICATION	reset the state
WITHOUT_CLASSIFICATION	Tainting here if we ever want it. (secure 4)
WITHOUT_CLASSIFICATION	rb_match_busy
WITHOUT_CLASSIFICATION	str is frozen
WITHOUT_CLASSIFICATION	MRI also does a pointer comparison here
WITHOUT_CLASSIFICATION	JRubyServer
WITHOUT_CLASSIFICATION	Class.allocate object is not allocatable before it is initialized
WITHOUT_CLASSIFICATION	boot the Object class
WITHOUT_CLASSIFICATION	Methods of the Object class (rb_obj_):
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));
WITHOUT_CLASSIFICATION	boot the Module and Class classes
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	use parent's marshal
WITHOUT_CLASSIFICATION	could be pulled down to RubyClass in future rb_class_boot
WITHOUT_CLASSIFICATION	remove us from old superclass's child classes
WITHOUT_CLASSIFICATION	add us to new superclass's child classes
WITHOUT_CLASSIFICATION	update all subclasses
WITHOUT_CLASSIFICATION	fields to hold Ruby and RubyClass references
WITHOUT_CLASSIFICATION	static initializing method
WITHOUT_CLASSIFICATION	standard constructor that accepts Ruby, RubyClass
WITHOUT_CLASSIFICATION	no-arg constructor using static references to Ruby and RubyClass
WITHOUT_CLASSIFICATION	non-signature signature with just IRubyObject
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	self method name
WITHOUT_CLASSIFICATION	the default allocator
WITHOUT_CLASSIFICATION	Equivalent of T_DATA
WITHOUT_CLASSIFICATION	do nothing, leave empty
WITHOUT_CLASSIFICATION	Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	================ Singleton Methods ================
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	Make sure all arguments are modules before calling the callbacks
WITHOUT_CLASSIFICATION	MRI extends in order from last to first
WITHOUT_CLASSIFICATION	NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.
WITHOUT_CLASSIFICATION	write out ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	rest in ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	0x3fff_ffff -0x4000_0000
WITHOUT_CLASSIFICATION	a gotcha
WITHOUT_CLASSIFICATION	Java / and % are not the same as ruby
WITHOUT_CLASSIFICATION	A gotcha for Long.MIN_VALUE: value = -value
WITHOUT_CLASSIFICATION	Piece of mri rb_to_id
WITHOUT_CLASSIFICATION	Java Doubles are 64 bit long:
WITHOUT_CLASSIFICATION	Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	don't override Numeric#div !
WITHOUT_CLASSIFICATION	Modelled after c ruby implementation (java /,% not same as ruby)
WITHOUT_CLASSIFICATION	MRI behavior:
WITHOUT_CLASSIFICATION	Numeric.equal
WITHOUT_CLASSIFICATION	provider is not available
WITHOUT_CLASSIFICATION	bouncy castle doesn't support algorithm
WITHOUT_CLASSIFICATION	fall back to system JCA providers
WITHOUT_CLASSIFICATION	RubyDigest
WITHOUT_CLASSIFICATION	ENEBO: Can these be fast?
WITHOUT_CLASSIFICATION	synchronize on the RubyThread for threadgroup updates
WITHOUT_CLASSIFICATION	we only add live threads
WITHOUT_CLASSIFICATION	use same ClassIndex as metaclass, since we're technically still of that type
WITHOUT_CLASSIFICATION	handle everything after -- as arguments to the jruby process
WITHOUT_CLASSIFICATION	JRubyService
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	\OOO
WITHOUT_CLASSIFICATION	CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.
WITHOUT_CLASSIFICATION	mask off "once" flag
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	internal usage (Complex/Rational)
WITHOUT_CLASSIFICATION	silent ?
WITHOUT_CLASSIFICATION	\xHH
WITHOUT_CLASSIFICATION	\M-X, \M-\C-X, \M-\cX
WITHOUT_CLASSIFICATION	\C-X, \C-\M-X
WITHOUT_CLASSIFICATION	\cX, \c\M-X
WITHOUT_CLASSIFICATION	\O, \OO, \OOO or backref
WITHOUT_CLASSIFICATION	MBCLEN_NEEDMORE_P
WITHOUT_CLASSIFICATION	MBCLEN_INVALID_P
WITHOUT_CLASSIFICATION	Unicode is can be only 21 bits long, int is enough
WITHOUT_CLASSIFICATION	Surrogates
WITHOUT_CLASSIFICATION	do not load the class if not used
WITHOUT_CLASSIFICATION	\0, \0O, \0OO
WITHOUT_CLASSIFICATION	\xHH
WITHOUT_CLASSIFICATION	\C-X, \C-\M-X
WITHOUT_CLASSIFICATION	\M-X, \M-\C-X, \M-\cX
WITHOUT_CLASSIFICATION	\\u{H HH HHH HHHH HHHHH HHHHHH ...}
WITHOUT_CLASSIFICATION	\\uHHHH
WITHOUT_CLASSIFICATION	\p{Hiragana}
WITHOUT_CLASSIFICATION	inner switch
WITHOUT_CLASSIFICATION	newInstance here
WITHOUT_CLASSIFICATION	rb_reg_raise
WITHOUT_CLASSIFICATION	rb_reg_desc
WITHOUT_CLASSIFICATION	rb_enc_reg_raise
WITHOUT_CLASSIFICATION	rb_enc_reg_error_desc
WITHOUT_CLASSIFICATION	rb_reg_initialize_str
WITHOUT_CLASSIFICATION	rb_reg_initialize
WITHOUT_CLASSIFICATION	JRUBY-3625: delay setting backref until the MatchData is completely initialized
WITHOUT_CLASSIFICATION	rb_reg_expr_str
WITHOUT_CLASSIFICATION	option_to_str
WITHOUT_CLASSIFICATION	Don't initialize with class Don't put in object space and don't taint
WITHOUT_CLASSIFICATION	args should be before block
WITHOUT_CLASSIFICATION	args should be at end
WITHOUT_CLASSIFICATION	minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	skip anything not related to jruby
WITHOUT_CLASSIFICATION	start a new populator
WITHOUT_CLASSIFICATION	check for frame field reads or writes
WITHOUT_CLASSIFICATION	add all names for this annotation
WITHOUT_CLASSIFICATION	no annotated methods found, skip
WITHOUT_CLASSIFICATION	write out a static initializer for frame names, so it only fires once
WITHOUT_CLASSIFICATION	single method, use normal logic
WITHOUT_CLASSIFICATION	multimethod, new logic
WITHOUT_CLASSIFICATION	declared type returns the qualified name without $ for inner classes!!!
WITHOUT_CLASSIFICATION	inner class, use $ to delimit
WITHOUT_CLASSIFICATION	RubyModule singletonClass = module.getSingletonClass();
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	fallback on non-pregenerated logic
WITHOUT_CLASSIFICATION	refresh call adapter, since it matters if this is iter-based or not
WITHOUT_CLASSIFICATION	If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	colon3
WITHOUT_CLASSIFICATION	Colon3
WITHOUT_CLASSIFICATION	array created for rescue args doesn't need to be in ObjectSpace.
WITHOUT_CLASSIFICATION	For b.foo
WITHOUT_CLASSIFICATION	instance config for the script run
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	RubyModule module = context.getRubyClass();
WITHOUT_CLASSIFICATION	For 'b.foo'
WITHOUT_CLASSIFICATION	We define an actual list to get around bug in java integration (1387115)
WITHOUT_CLASSIFICATION	something in here is used to build up ruby stack trace...
WITHOUT_CLASSIFICATION	Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	do nothing, allow loop to retry
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	never visited, should be fine
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	If we have more than one argument, then make sure the array is not ObjectSpaced.
WITHOUT_CLASSIFICATION	Only in ruby 1.9 methods
WITHOUT_CLASSIFICATION	Bind 'normal' parameter values to the local scope for this method.
WITHOUT_CLASSIFICATION	no arg grouping, just use bulk assignment methods
WITHOUT_CLASSIFICATION	optArgs and restArgs require more work, so isolate them and ArrayList creation here
WITHOUT_CLASSIFICATION	arity.checkArity(runtime, argsLength);
WITHOUT_CLASSIFICATION	no more values to stick in rest arg
WITHOUT_CLASSIFICATION	set argv from main's args
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";
WITHOUT_CLASSIFICATION	assign given optional arguments to their variables
WITHOUT_CLASSIFICATION	in-frame EvalState should already have receiver set as self, continue to use it
WITHOUT_CLASSIFICATION	assign the default values, adding to the end of allArgs
WITHOUT_CLASSIFICATION	Make sure the appropriate scope has proper size. See JRUBY-2046.
WITHOUT_CLASSIFICATION	Experimental class reification support, to create real Java classes for Ruby classes after the first opening
WITHOUT_CLASSIFICATION	This should never happen past parse, but just bulletproof this just in case
WITHOUT_CLASSIFICATION	Make a nil node if no body. Notice this is not part of AST.
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	never visited, should be ok
WITHOUT_CLASSIFICATION	If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil
WITHOUT_CLASSIFICATION	JRUBY-530 until case
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	The name of the variable
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode
WITHOUT_CLASSIFICATION	assert !(value instanceof RubyArray) : "Not an array";
WITHOUT_CLASSIFICATION	Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	We could probably also detect if LHS value came out of cache and avoid some of this
WITHOUT_CLASSIFICATION	assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";
WITHOUT_CLASSIFICATION	add in reverse order
WITHOUT_CLASSIFICATION	in order to make pragma's noops we set location to a special value
WITHOUT_CLASSIFICATION	ignore compiler pragmas
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	Make a nil node if no body. Notice this is not part of AST.
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	No actual test, so do 'when' if when expression is not nil
WITHOUT_CLASSIFICATION	save entering the try if there's nothing to ensure
WITHOUT_CLASSIFICATION	For 'foo'
WITHOUT_CLASSIFICATION	For 'foo'
WITHOUT_CLASSIFICATION	admittedly inefficient
WITHOUT_CLASSIFICATION	JRUBY-530, while case
WITHOUT_CLASSIFICATION	What static scoping relationship exists when it comes into being.
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	no takers; bubble up
WITHOUT_CLASSIFICATION	no takers; bubble up
WITHOUT_CLASSIFICATION	Execute rescue block
WITHOUT_CLASSIFICATION	If no exception is thrown execute else block
WITHOUT_CLASSIFICATION	index of variable for this arg
WITHOUT_CLASSIFICATION	only a marker interface
WITHOUT_CLASSIFICATION	don't attempt to coerce to array, just wrap and return
WITHOUT_CLASSIFICATION	pragmas
WITHOUT_CLASSIFICATION	The method also needs a scope, do both
WITHOUT_CLASSIFICATION	We're doing normal framed compilation or the method needs a frame
WITHOUT_CLASSIFICATION	The method doesn't need a scope or static scope; frame only
WITHOUT_CLASSIFICATION	The method doesn't need a scope, but has static scope needs; use a dummy scope
WITHOUT_CLASSIFICATION	Proc.new needs the caller's block to instantiate a proc
WITHOUT_CLASSIFICATION	check for Proc.new, an especially magic method
WITHOUT_CLASSIFICATION	long, slow way causes disabling
WITHOUT_CLASSIFICATION	ok, we have fast paths
WITHOUT_CLASSIFICATION	ok, we have fast paths
WITHOUT_CLASSIFICATION	long, slow way causes disabling for defined
WITHOUT_CLASSIFICATION	we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	Because Regexp#=== sets backref, we have to make this backref-aware
WITHOUT_CLASSIFICATION	encountered a node we don't recognize, set everything to true to disable optz
WITHOUT_CLASSIFICATION	only arrays that are "lightweight" are being used as args arrays
WITHOUT_CLASSIFICATION	otherwise, it's a literal array
WITHOUT_CLASSIFICATION	use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	compile first node as non-expr and then second node
WITHOUT_CLASSIFICATION	last node, either !instanceof WhenNode or null, is the else
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	splatted when, can't do it yet
WITHOUT_CLASSIFICATION	if __send__ with a literal symbol, compile it as a direct fcall
WITHOUT_CLASSIFICATION	NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.
WITHOUT_CLASSIFICATION	aggregate when nodes into a list, unfortunately, this is no
WITHOUT_CLASSIFICATION	one arg but it's an array, treat it as a proper array
WITHOUT_CLASSIFICATION	can't do it
WITHOUT_CLASSIFICATION	otherwise, use normal args compiler
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	these are all simple cases that don't require the heavier defined logic
WITHOUT_CLASSIFICATION	[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	[]
WITHOUT_CLASSIFICATION	context.swapValues(); context.consumeCurrentValue();
WITHOUT_CLASSIFICATION	[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]
WITHOUT_CLASSIFICATION	[RubyClass]
WITHOUT_CLASSIFICATION	[RubyClass] [RubyClass, RubyClass] [RubyClass] []
WITHOUT_CLASSIFICATION	if root of method is rescue, compile as a light rescue
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	if root of method is rescue, compile as light rescue
WITHOUT_CLASSIFICATION	invoke run with threadcontext and topself
WITHOUT_CLASSIFICATION	[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]
WITHOUT_CLASSIFICATION	[RubyClass] []
WITHOUT_CLASSIFICATION	[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]
WITHOUT_CLASSIFICATION	[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	not an expression, only compile the elements
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	force heap-scope behavior, since it uses parent's scope
WITHOUT_CLASSIFICATION	always false or nil
WITHOUT_CLASSIFICATION	optimizations if we know ahead of time it will always be true or false
WITHOUT_CLASSIFICATION	normal
WITHOUT_CLASSIFICATION	compile condition as non-expr and just compile "then" body
WITHOUT_CLASSIFICATION	need the array, use unoptz version
WITHOUT_CLASSIFICATION	just push nil for pragmas
WITHOUT_CLASSIFICATION	"assignment" means the value is already on the stack
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	eval new value, call operator on old value, and assign
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	normal items at the "head" of the masgn
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 10 values to the same number of assignees
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	RedoNode redoNode = (RedoNode)node;
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	if arity 1, just compile the one element to save us the array cost
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	[recv]
WITHOUT_CLASSIFICATION	compile into array
WITHOUT_CLASSIFICATION	compile first node as non-expr and compile second node
WITHOUT_CLASSIFICATION	check if it's an immediate, and don't outline
WITHOUT_CLASSIFICATION	condition is always true, just compile it and not body
WITHOUT_CLASSIFICATION	force static scope to claim restarg at 0, so it only implements the [] version of __file__
WITHOUT_CLASSIFICATION	create method for toplevel of script
WITHOUT_CLASSIFICATION	it's a multiple-statement body, iterate over all elements in turn and chain if it get too long
WITHOUT_CLASSIFICATION	send it along as arity-specific, we don't need the array
WITHOUT_CLASSIFICATION	single-statement body, just compile it
WITHOUT_CLASSIFICATION	leave as a normal array
WITHOUT_CLASSIFICATION	This method has JITed already or has been abandoned. Bail out.
WITHOUT_CLASSIFICATION	The cache is full. Abandon JIT for this method and bail out.
WITHOUT_CLASSIFICATION	check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	no args, do not pass args processor
WITHOUT_CLASSIFICATION	need the array, use unoptz version
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	head must not be null and there must be no "args" (like arg)
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	"head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	Check if the method has been explicitly excluded
WITHOUT_CLASSIFICATION	class could not be found nor generated; give up on JIT and bail out
WITHOUT_CLASSIFICATION	successfully got back a jitted method
WITHOUT_CLASSIFICATION	finally, grab the script
WITHOUT_CLASSIFICATION	logEvery n methods based on configuration
WITHOUT_CLASSIFICATION	Time the compilation
WITHOUT_CLASSIFICATION	we have a body, do a full-on method
WITHOUT_CLASSIFICATION	If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop
WITHOUT_CLASSIFICATION	if we haven't already decided on a do-nothing call
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 4 values to the same number of assignees
WITHOUT_CLASSIFICATION	normal items at the front or back of the masgn
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	Define the annotation for the method
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	value is already on stack, save it for later
WITHOUT_CLASSIFICATION	receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	arg2
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	check if it's true, ending if so
WITHOUT_CLASSIFICATION	not true, eval value and assign
WITHOUT_CLASSIFICATION	not true, eval value and assign
WITHOUT_CLASSIFICATION	thread context, receiver and original args
WITHOUT_CLASSIFICATION	thread context, receiver and original args
WITHOUT_CLASSIFICATION	eval value for assignment
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	check if it's true, ending if not
WITHOUT_CLASSIFICATION	eval value and save it
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	receiver, args, result, value
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	super uses current block if none given
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args, no block
WITHOUT_CLASSIFICATION	no args, with block
WITHOUT_CLASSIFICATION	with args, no block
WITHOUT_CLASSIFICATION	with args, with block
WITHOUT_CLASSIFICATION	adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	arg and receiver already present on the stack
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	[adapter, tc]
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	no args, no block
WITHOUT_CLASSIFICATION	no args, with block
WITHOUT_CLASSIFICATION	with args, no block
WITHOUT_CLASSIFICATION	with args, with block
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	retrieve scope from scopes array
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	retrieve call site from sites array
WITHOUT_CLASSIFICATION	add name to call site list
WITHOUT_CLASSIFICATION	module is on top of stack
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	generate call sites initialization code
WITHOUT_CLASSIFICATION	generate symbols initialization code
WITHOUT_CLASSIFICATION	generate fixnums initialization code
WITHOUT_CLASSIFICATION	generate constants initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	generate variable readers initialization code
WITHOUT_CLASSIFICATION	generate variable writers initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	generate bytelists initialization code
WITHOUT_CLASSIFICATION	generate method cache initialization code
WITHOUT_CLASSIFICATION	adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	use IRubyObject[]
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	No point in updating number if last number was same value.
WITHOUT_CLASSIFICATION	load Object under value
WITHOUT_CLASSIFICATION	put under object array already present
WITHOUT_CLASSIFICATION	if element count is less than 6, use helper methods
WITHOUT_CLASSIFICATION	This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	use specific-arity for as much as possible
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	call isTrue on the result
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	skip catch block
WITHOUT_CLASSIFICATION	catch logic for flow-control: next, break
WITHOUT_CLASSIFICATION	next jump
WITHOUT_CLASSIFICATION	exceptionNext target is for a next that doesn't push a new value, like this one
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	break jump
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	[reg]
WITHOUT_CLASSIFICATION	for regular expressions with the /o flag
WITHOUT_CLASSIFICATION	inside a loop, jump to body
WITHOUT_CLASSIFICATION	inside a loop, jump to conditional
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	if more than 4 vars, get values array too
WITHOUT_CLASSIFICATION	retry handling in the rescue block
WITHOUT_CLASSIFICATION	any exceptions raised must continue to be raised, skipping $! restoration
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	Handle Flow exceptions, just propagating them
WITHOUT_CLASSIFICATION	rethrow to outer flow catcher
WITHOUT_CLASSIFICATION	Handle Ruby exceptions (RaiseException)
WITHOUT_CLASSIFICATION	inside a loop, break out of it go to end of loop, leaving break value on stack
WITHOUT_CLASSIFICATION	false zero
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	retry handling in the rescue blocks
WITHOUT_CLASSIFICATION	push false
WITHOUT_CLASSIFICATION	method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));
WITHOUT_CLASSIFICATION	method.ifnonnull(trueLabel);
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) [C]
WITHOUT_CLASSIFICATION	[C, C] [C, C, String] [C, null|C]
WITHOUT_CLASSIFICATION	[C]
WITHOUT_CLASSIFICATION	push true
WITHOUT_CLASSIFICATION	EQ != 0 (i.e. true)
WITHOUT_CLASSIFICATION	[?, ?] [?, boolean]
WITHOUT_CLASSIFICATION	[RubyModule] [RubyModule, String]
WITHOUT_CLASSIFICATION	[boolean]
WITHOUT_CLASSIFICATION	no receiver for singleton class
WITHOUT_CLASSIFICATION	but there's a superclass passed in, use it
WITHOUT_CLASSIFICATION	we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	CLASS BODY
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	new instance to invoke run against
WITHOUT_CLASSIFICATION	CLASS BODY
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	finally with exception
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	otherwise, there's a receiver, so we pass that in directly for the sclass logic
WITHOUT_CLASSIFICATION	original exception is on stack
WITHOUT_CLASSIFICATION	RaiseException is on stack, get RubyException out
WITHOUT_CLASSIFICATION	updating position for same line; skip
WITHOUT_CLASSIFICATION	callbacks to fill in method body
WITHOUT_CLASSIFICATION	prepare to call "def" utility method to handle def logic
WITHOUT_CLASSIFICATION	script object
WITHOUT_CLASSIFICATION	arities
WITHOUT_CLASSIFICATION	TODO assuming case is a fixnum
WITHOUT_CLASSIFICATION	we have an input case, prepare branching logic
WITHOUT_CLASSIFICATION	we have optimized switch cases, build a lookupswitch
WITHOUT_CLASSIFICATION	checkcast the value; if match, fast path; otherwise proceed to slow logic
WITHOUT_CLASSIFICATION	expression-based tests + bodies
WITHOUT_CLASSIFICATION	normal case, create a new label
WITHOUT_CLASSIFICATION	last conditional case, use defaultCase
WITHOUT_CLASSIFICATION	do nothing; arity check is done before call
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	if there's args left and we want them, assign to rest arg
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	first, iterate over all pre args
WITHOUT_CLASSIFICATION	then optional args
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	if rest args, excluding post args
WITHOUT_CLASSIFICATION	finally, post args
WITHOUT_CLASSIFICATION	not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	unwrap scopes to appropriate depth
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	store the local vars in a local variable
WITHOUT_CLASSIFICATION	load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	return in a class body raises error
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	load block from [] version of method
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	store the local vars in a local variable if there are any
WITHOUT_CLASSIFICATION	if more than 4 locals, get and populate the locals array too
WITHOUT_CLASSIFICATION	fill local vars with nil, to avoid checking every access.
WITHOUT_CLASSIFICATION	default for starting tempVariableIndex is ok
WITHOUT_CLASSIFICATION	store the local vars in a local variable for preparing the class (using previous scope)
WITHOUT_CLASSIFICATION	store the new local vars in a local variable
WITHOUT_CLASSIFICATION	in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]
WITHOUT_CLASSIFICATION	no variable initialization, because we're reusing parent's scope (flat)
WITHOUT_CLASSIFICATION	for specific-index cases, clean up non-expression values
WITHOUT_CLASSIFICATION	set up a local Ruby variable
WITHOUT_CLASSIFICATION	if that succeeds, the others should as well
WITHOUT_CLASSIFICATION	verify the class
WITHOUT_CLASSIFICATION	create dir if necessary
WITHOUT_CLASSIFICATION	Create the class with the appropriate class name and source file
WITHOUT_CLASSIFICATION	add setPosition impl, which stores filename as constant to speed updates
WITHOUT_CLASSIFICATION	thread context
WITHOUT_CLASSIFICATION	line number
WITHOUT_CLASSIFICATION	invoke __file__ with threadcontext, self, args (null), and block (null)
WITHOUT_CLASSIFICATION	load always uses IRubyObject[], so simple closure offset calculation here
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	method is done, declare all variables
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method
WITHOUT_CLASSIFICATION	add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0
WITHOUT_CLASSIFICATION	construct static scope list of names
WITHOUT_CLASSIFICATION	JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	lazily create class init only if necessary
WITHOUT_CLASSIFICATION	boxed arg list __file__
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	exact arg list __file__
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	not using a new scope, use saved one for a flat closure
WITHOUT_CLASSIFICATION	normal closure
WITHOUT_CLASSIFICATION	end of scoping for closure's vars
WITHOUT_CLASSIFICATION	we only need full-on redo exception handling if there's logic that might produce it
WITHOUT_CLASSIFICATION	handle redos by restarting the block
WITHOUT_CLASSIFICATION	jump back to the top of the main body of this closure
WITHOUT_CLASSIFICATION	Ruby name
WITHOUT_CLASSIFICATION	Accumulate call arguments
WITHOUT_CLASSIFICATION	Fix FileNameCompletor to work mid-line
WITHOUT_CLASSIFICATION	We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!
WITHOUT_CLASSIFICATION	Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.
WITHOUT_CLASSIFICATION	Map of constants defined in this scope (not valid for methods!)
WITHOUT_CLASSIFICATION	NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases
WITHOUT_CLASSIFICATION	Map keep track of the next available variable index for a particular prefix
WITHOUT_CLASSIFICATION	Control flow graph for this scope
WITHOUT_CLASSIFICATION	_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;
WITHOUT_CLASSIFICATION	List of modules, classes, and methods defined in this scope!
WITHOUT_CLASSIFICATION	Returns the containing parent scope!
WITHOUT_CLASSIFICATION	Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	variable is never read, variable is never live
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	This method is called to build assignments for a multiple-assignment instruction
WITHOUT_CLASSIFICATION	Build the class body!
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	SSS FIXME: Can this ever be null?
WITHOUT_CLASSIFICATION	Run the pass on the passed in scope!
WITHOUT_CLASSIFICATION	done done done done
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	This method is called to build arguments for a block!
WITHOUT_CLASSIFICATION	build first node (and ignore its result) and then second node
WITHOUT_CLASSIFICATION	build first node only and return false
WITHOUT_CLASSIFICATION	Value of the last expression in the block
WITHOUT_CLASSIFICATION	If this is not a closure, the break is equivalent to jumping to the loop end label
WITHOUT_CLASSIFICATION	get the incoming case value
WITHOUT_CLASSIFICATION	the CASE instruction
WITHOUT_CLASSIFICATION	lists to aggregate variables and bodies for whens
WITHOUT_CLASSIFICATION	build each "when"
WITHOUT_CLASSIFICATION	multiple conditions for when
WITHOUT_CLASSIFICATION	build "else" if it exists
WITHOUT_CLASSIFICATION	now emit bodies
WITHOUT_CLASSIFICATION	close it out
WITHOUT_CLASSIFICATION	By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	Do we have a dynamic container?
WITHOUT_CLASSIFICATION	Return a meta object corresponding to the class
WITHOUT_CLASSIFICATION	1. Load the module first (lhs of node) 2. Then load the constant from the module
WITHOUT_CLASSIFICATION	Build IR for args
WITHOUT_CLASSIFICATION	Build IR for body
WITHOUT_CLASSIFICATION	if root of method is rescue, build as a light rescue
WITHOUT_CLASSIFICATION	Instance method
WITHOUT_CLASSIFICATION	Class method
WITHOUT_CLASSIFICATION	Other args begin at index 1
WITHOUT_CLASSIFICATION	Both for fixed arity and variable arity methods
WITHOUT_CLASSIFICATION	Now for the rest
WITHOUT_CLASSIFICATION	Jump to 'l' if this arg is not null. If null, fall through and build the default value!
WITHOUT_CLASSIFICATION	This is not an expression that computes anything
WITHOUT_CLASSIFICATION	Create a new closure context
WITHOUT_CLASSIFICATION	Build args
WITHOUT_CLASSIFICATION	Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	Create a new closure context
WITHOUT_CLASSIFICATION	Build args
WITHOUT_CLASSIFICATION	Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	Get the container for this new module
WITHOUT_CLASSIFICATION	Build the new module
WITHOUT_CLASSIFICATION	Build the module body
WITHOUT_CLASSIFICATION	First, build an assignment for a splat, if any, with the rest of the args!
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration
WITHOUT_CLASSIFICATION	get attr
WITHOUT_CLASSIFICATION	call operator
WITHOUT_CLASSIFICATION	set attr
WITHOUT_CLASSIFICATION	Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:
WITHOUT_CLASSIFICATION	This does the assignment!
WITHOUT_CLASSIFICATION	This does the assignment!
WITHOUT_CLASSIFICATION	if v1 is defined and true, we are done!
WITHOUT_CLASSIFICATION	build first node only and return true
WITHOUT_CLASSIFICATION	build first node as non-expr and build second node
WITHOUT_CLASSIFICATION	Top-level script!
WITHOUT_CLASSIFICATION	we won't enter the loop -- just build the condition node
WITHOUT_CLASSIFICATION	----------- Private Interface ------------
WITHOUT_CLASSIFICATION	What handles warnings
WITHOUT_CLASSIFICATION	Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop
WITHOUT_CLASSIFICATION	The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	Dummy top-level method for the class
WITHOUT_CLASSIFICATION	Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	------ Define the operations below ----
WITHOUT_CLASSIFICATION	value copy and type conversion operations
WITHOUT_CLASSIFICATION	alu operations
WITHOUT_CLASSIFICATION	method handle, arg receive, return value, and call instructions
WITHOUT_CLASSIFICATION	closure instructions
WITHOUT_CLASSIFICATION	eval instructions
WITHOUT_CLASSIFICATION	def instructions
WITHOUT_CLASSIFICATION	exception instructions
WITHOUT_CLASSIFICATION	Loads
WITHOUT_CLASSIFICATION	Stores
WITHOUT_CLASSIFICATION	jump and branch operations
WITHOUT_CLASSIFICATION	others
WITHOUT_CLASSIFICATION	a case/when branch
WITHOUT_CLASSIFICATION	optimization guards
WITHOUT_CLASSIFICATION	By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.
WITHOUT_CLASSIFICATION	Returns the containing parent scope -- can be a dynamic value (hence Operand)!
WITHOUT_CLASSIFICATION	scripts
WITHOUT_CLASSIFICATION	scripts and modules
WITHOUT_CLASSIFICATION	scripts, classes, and modules
WITHOUT_CLASSIFICATION	methods and closures
WITHOUT_CLASSIFICATION	create a new variable using the prefix
WITHOUT_CLASSIFICATION	create a new temporary variable
WITHOUT_CLASSIFICATION	Get a new label using a generic prefix
WITHOUT_CLASSIFICATION	Build the CFG for this scope -- supported only by methods & closures
WITHOUT_CLASSIFICATION	Get the control flow graph for this scope -- only valid for methods & closures
WITHOUT_CLASSIFICATION	While processing loops, this returns the loop that we are processing.
WITHOUT_CLASSIFICATION	Record the loop we are beginning to process
WITHOUT_CLASSIFICATION	Indicate that we are done processing the loop
WITHOUT_CLASSIFICATION	Run the passed in compiler pass on this scope!
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	Readline
WITHOUT_CLASSIFICATION	If the cfg of the method is around, print the CFG!
WITHOUT_CLASSIFICATION	Optimize some core class method calls for constant values
WITHOUT_CLASSIFICATION	If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.
WITHOUT_CLASSIFICATION	Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!
WITHOUT_CLASSIFICATION	If we got a simplified value, mark the call dead and insert a copy in its place!
WITHOUT_CLASSIFICATION	If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!
WITHOUT_CLASSIFICATION	----------- Public abstract methods ----------
WITHOUT_CLASSIFICATION	----------- Public methods with a default implementation ----------
WITHOUT_CLASSIFICATION	Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem
WITHOUT_CLASSIFICATION	If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.
WITHOUT_CLASSIFICATION	--------- Protected fields/methods below ---------
WITHOUT_CLASSIFICATION	Dataflow problem with which this node is associated CFG node for which this node contains info.
WITHOUT_CLASSIFICATION	-------------- Public fields and methods below ----------------
WITHOUT_CLASSIFICATION	------- Abstract methods without a default implementation -------
WITHOUT_CLASSIFICATION	------- Default implementation methods below -------
WITHOUT_CLASSIFICATION	Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.
WITHOUT_CLASSIFICATION	Individual analyses should override this
WITHOUT_CLASSIFICATION	Individual analyses should override this
WITHOUT_CLASSIFICATION	-------------- Packaged/protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	We want unique ids for dataflow variables
WITHOUT_CLASSIFICATION	-------------- Protected fields and methods below ----------------
WITHOUT_CLASSIFICATION	-------------- Private fields and methods below ----------------
WITHOUT_CLASSIFICATION	Initialize all flow graph nodes
WITHOUT_CLASSIFICATION	Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses
WITHOUT_CLASSIFICATION	PUBLIC INTERFACE
WITHOUT_CLASSIFICATION	Unique ID assigned to this variable
WITHOUT_CLASSIFICATION	start out with a default RubyObject allocator
WITHOUT_CLASSIFICATION	switch to an allocator based on a default constructor
WITHOUT_CLASSIFICATION	----------- Public Interface ------------
WITHOUT_CLASSIFICATION	class or module
WITHOUT_CLASSIFICATION	OUT = UNION(IN(succs))
WITHOUT_CLASSIFICATION	Traverse the instructions in this basic block in reverse order!
WITHOUT_CLASSIFICATION	v is defined => It is no longer live before 'i'
WITHOUT_CLASSIFICATION	IN is the same!
WITHOUT_CLASSIFICATION	IN changed!
WITHOUT_CLASSIFICATION	---------- Protected / package fields, methods ---------
WITHOUT_CLASSIFICATION	If 'v' is not live at the instruction site, and it has no side effects, mark it dead!
WITHOUT_CLASSIFICATION	Do not mark this instruction's operands live if the instruction itself is dead!
WITHOUT_CLASSIFICATION	---------- Private fields, methods ---------
WITHOUT_CLASSIFICATION	Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets
WITHOUT_CLASSIFICATION	Used during optimization passes to propagate type and other information
WITHOUT_CLASSIFICATION	Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes
WITHOUT_CLASSIFICATION	--------- "Abstract"/"please-override" methods ---------
WITHOUT_CLASSIFICATION	Array of all operands for this instruction
WITHOUT_CLASSIFICATION	List of all variables used by all operands of this instruction
WITHOUT_CLASSIFICATION	This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify
WITHOUT_CLASSIFICATION	By default, no simplifications!
WITHOUT_CLASSIFICATION	Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code
WITHOUT_CLASSIFICATION	By default, return instructions cannot be deleted
WITHOUT_CLASSIFICATION	If true, returns the rest of the array starting at the index
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	Map of label & basic blocks with that label
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	You can only value-replace atomic values
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value
WITHOUT_CLASSIFICATION	Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values
WITHOUT_CLASSIFICATION	Get the target class of this operand, if we know it!
WITHOUT_CLASSIFICATION	The following constants capture pre-known static call sites -- used to implement ruby internals
WITHOUT_CLASSIFICATION	Nothing to do by default
WITHOUT_CLASSIFICATION	Map of label & basic blocks which are waiting for a bb with that label
WITHOUT_CLASSIFICATION	Init before building basic blocks below!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id
WITHOUT_CLASSIFICATION	Jump instruction bbs dont add an edge to the succeeding bb by default
WITHOUT_CLASSIFICATION	Add forward ref. edges
WITHOUT_CLASSIFICATION	currBB cannot be null!
WITHOUT_CLASSIFICATION	Add a forward reference from tgt -> currBB
WITHOUT_CLASSIFICATION	root-level logic
WITHOUT_CLASSIFICATION	root-level methods
WITHOUT_CLASSIFICATION	root-level classes
WITHOUT_CLASSIFICATION	case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	case 4: case 5:
WITHOUT_CLASSIFICATION	Object[] args
WITHOUT_CLASSIFICATION	load handle
WITHOUT_CLASSIFICATION	args array
WITHOUT_CLASSIFICATION	i'th argument
WITHOUT_CLASSIFICATION	invoke specific arity version
WITHOUT_CLASSIFICATION	Object arg0
WITHOUT_CLASSIFICATION	useful for code completion inside the IRB
WITHOUT_CLASSIFICATION	No editing before startPos
WITHOUT_CLASSIFICATION	no silly ticks!
WITHOUT_CLASSIFICATION	no candidates? Fail.
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	Explicit reference to these vars as symbols...
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	\t\n\"\\'`@$><=;|&{(
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	no check for ''
WITHOUT_CLASSIFICATION	Binding provided for scope, use it
WITHOUT_CLASSIFICATION	this is ensured by the callers
WITHOUT_CLASSIFICATION	no binding, just eval in "current" frame (caller's frame)
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations
WITHOUT_CLASSIFICATION	Used by the compiler to simplify arg processing
WITHOUT_CLASSIFICATION	JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace
WITHOUT_CLASSIFICATION	MRI does similar thing on MacOS X with 'EditLine wrapper'.
WITHOUT_CLASSIFICATION	We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)
WITHOUT_CLASSIFICATION	JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)
WITHOUT_CLASSIFICATION	not overridden, let's go
WITHOUT_CLASSIFICATION	Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()
WITHOUT_CLASSIFICATION	FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	Complete using a Proc object
WITHOUT_CLASSIFICATION	clear basename so it's anonymous when raising
WITHOUT_CLASSIFICATION	These are not really used by timeout, but exposed for compatibility
WITHOUT_CLASSIFICATION	Timeout module methods
WITHOUT_CLASSIFICATION	Toplevel defines
WITHOUT_CLASSIFICATION	No seconds, just yield
WITHOUT_CLASSIFICATION	No timeout in critical section
WITHOUT_CLASSIFICATION	if it's the exception we're expecting
WITHOUT_CLASSIFICATION	and we were given a specific exception
WITHOUT_CLASSIFICATION	otherwise, rethrow
WITHOUT_CLASSIFICATION	Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them
WITHOUT_CLASSIFICATION	If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.
WITHOUT_CLASSIFICATION	NetProtocolBufferedIO
WITHOUT_CLASSIFICATION	When a length is given, read_string acts like get_bytes
WITHOUT_CLASSIFICATION	Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	ARRAY and STRUCT are only used internally
WITHOUT_CLASSIFICATION	If no release method is defined, then memory leaks will result.
WITHOUT_CLASSIFICATION	This variant of newStruct is called from StructLayoutBuilder
WITHOUT_CLASSIFICATION	This also handles unsigned int -> negative signed int conversion
WITHOUT_CLASSIFICATION	Windows is LLP64
WITHOUT_CLASSIFICATION	Older JDK on linux map 'c' to 'libc.so' which doesn't work
WITHOUT_CLASSIFICATION	Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	$blah
WITHOUT_CLASSIFICATION	Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	A specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed
WITHOUT_CLASSIFICATION	Add Pointer::NULL as a constant
WITHOUT_CLASSIFICATION	Create the ordered list of field names from the map
WITHOUT_CLASSIFICATION	Assemble a [ :name, offset ] array
WITHOUT_CLASSIFICATION	case FLOAT:
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	No auto cleanup needed
WITHOUT_CLASSIFICATION	Wire up Function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	Get the convention from the options hash
WITHOUT_CLASSIFICATION	Get the convention from the options hash
WITHOUT_CLASSIFICATION	If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	RubyUNIXServer
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	Set up for potentially fast-int operations
WITHOUT_CLASSIFICATION	Hook up the MemoryPointer class if its not already there
WITHOUT_CLASSIFICATION	This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases
WITHOUT_CLASSIFICATION	no UNIXSockets on Windows
WITHOUT_CLASSIFICATION	Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.
WITHOUT_CLASSIFICATION	There is something valid in the sun_path component
WITHOUT_CLASSIFICATION	RubyIPSocket
WITHOUT_CLASSIFICATION	host is nil or the empty string, bind to INADDR_ANY
WITHOUT_CLASSIFICATION	host and port given
WITHOUT_CLASSIFICATION	RubyUDPSocket
WITHOUT_CLASSIFICATION	By default we always reverse lookup unless do_not_reverse_lookup set.
WITHOUT_CLASSIFICATION	make sure descriptor is registered
WITHOUT_CLASSIFICATION	continue with normal initialization
WITHOUT_CLASSIFICATION	recv returns nil on EOF
WITHOUT_CLASSIFICATION	Can't support the rest with Java
WITHOUT_CLASSIFICATION	RubyBasicSocket
WITHOUT_CLASSIFICATION	we don't have to define any that we don't support; see socket.c
WITHOUT_CLASSIFICATION	mandatory constants we haven't implemented
WITHOUT_CLASSIFICATION	constants webrick crashes without
WITHOUT_CLASSIFICATION	More constants needed by specs
WITHOUT_CLASSIFICATION	normal file descriptor..try to work with it
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	255.255.255.255
WITHOUT_CLASSIFICATION	0.0.0.0
WITHOUT_CLASSIFICATION	def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)
WITHOUT_CLASSIFICATION	line 323
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	can't set TC classloader
WITHOUT_CLASSIFICATION	ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...
WITHOUT_CLASSIFICATION	datagram, set accordingly again, AF_INET
WITHOUT_CLASSIFICATION	IRubyObject family = args[2];
WITHOUT_CLASSIFICATION	When Socket::AI_PASSIVE and host is nil, return 'any' address.
WITHOUT_CLASSIFICATION	The value of 1 is for Socket::AI_PASSIVE.
WITHOUT_CLASSIFICATION	RubySocket
WITHOUT_CLASSIFICATION	numeric host, use it for port
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	we were woken up without being selected...poll for thread events and go back to sleep
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	no connection immediately accepted, let them try again
WITHOUT_CLASSIFICATION	do nothing, just exit
WITHOUT_CLASSIFICATION	nativeThread.setPriority(priority);
WITHOUT_CLASSIFICATION	set thread context JRuby classloader here, for Ruby-owned thread
WITHOUT_CLASSIFICATION	uber-ThreadKill catcher, since it should always just mean "be dead"
WITHOUT_CLASSIFICATION	Call the thread's code
WITHOUT_CLASSIFICATION	Someone called exit!, so we need to kill the main thread
WITHOUT_CLASSIFICATION	restore context classloader, in case we're using a thread pool
WITHOUT_CLASSIFICATION	be dead
WITHOUT_CLASSIFICATION	loop until a context is available, to clean up softrefs that might have been collected
WITHOUT_CLASSIFICATION	all threads in ruby thread group plus main thread
WITHOUT_CLASSIFICATION	thread is not alive, skip it
WITHOUT_CLASSIFICATION	future is done or cancelled, skip it
WITHOUT_CLASSIFICATION	first, check if the sender has unreceived mail
WITHOUT_CLASSIFICATION	then deliver mail to the target
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	Define a second version that doesn't take a block, so we have unique code paths for both cases.
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	main body
WITHOUT_CLASSIFICATION	return jump handling
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	return result if we're still good
WITHOUT_CLASSIFICATION	redo jump handling
WITHOUT_CLASSIFICATION	clear the redo
WITHOUT_CLASSIFICATION	get runtime, create jump error, and throw it
WITHOUT_CLASSIFICATION	throw redo error if we're still good
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	No required specified, check actual number of required args
WITHOUT_CLASSIFICATION	actual required is less than 3, so we use specific arity
WITHOUT_CLASSIFICATION	actual required is greater than 3, raise error (we don't support actual required > 3)
WITHOUT_CLASSIFICATION	simple path, no multimethod
WITHOUT_CLASSIFICATION	in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	normal all-rest method
WITHOUT_CLASSIFICATION	for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check
WITHOUT_CLASSIFICATION	promise to implement zero to N
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	just confirm args length == required
WITHOUT_CLASSIFICATION	confirm minimum args provided
WITHOUT_CLASSIFICATION	confirm maximum not greater than optional
WITHOUT_CLASSIFICATION	Raise an error if arity does not match requirements
WITHOUT_CLASSIFICATION	tc
WITHOUT_CLASSIFICATION	self name
WITHOUT_CLASSIFICATION	no args
WITHOUT_CLASSIFICATION	variable args with block
WITHOUT_CLASSIFICATION	variable args no block, load null block
WITHOUT_CLASSIFICATION	zero args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	one arg with block
WITHOUT_CLASSIFICATION	one arg, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	two args with block
WITHOUT_CLASSIFICATION	two args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	three args with block
WITHOUT_CLASSIFICATION	three args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	load block if it accepts block
WITHOUT_CLASSIFICATION	all other arg cases with block
WITHOUT_CLASSIFICATION	all other arg cases without block
WITHOUT_CLASSIFICATION	one arg, no block; do nothing
WITHOUT_CLASSIFICATION	two args, no block; do nothing
WITHOUT_CLASSIFICATION	three args, no block; do nothing
WITHOUT_CLASSIFICATION	load target for invocations
WITHOUT_CLASSIFICATION	load receiver as original type for virtual invocation
WITHOUT_CLASSIFICATION	static invocation
WITHOUT_CLASSIFICATION	virtual invocation
WITHOUT_CLASSIFICATION	void return type, so we need to load a nil for returning below
WITHOUT_CLASSIFICATION	normal finally and exit
WITHOUT_CLASSIFICATION	promise to implement one to N
WITHOUT_CLASSIFICATION	call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	these are only needed if we have a non-noop call config
WITHOUT_CLASSIFICATION	method itself ThreadContext invoked name
WITHOUT_CLASSIFICATION	method itself ThreadContext invoked name
WITHOUT_CLASSIFICATION	singleton classes don't get their own visibility domain
WITHOUT_CLASSIFICATION	For visibility we need real meta class and not anonymous one from class << self
WITHOUT_CLASSIFICATION	SimpleInvocationMethod
WITHOUT_CLASSIFICATION	never reached
WITHOUT_CLASSIFICATION	promise to implement N with block
WITHOUT_CLASSIFICATION	promise to implement zero to N with block
WITHOUT_CLASSIFICATION	promise to implement one to N with block
WITHOUT_CLASSIFICATION	promise to implement two to N with block
WITHOUT_CLASSIFICATION	promise to implement zero to three with block
WITHOUT_CLASSIFICATION	promise to implement one to three with block
WITHOUT_CLASSIFICATION	promise to implement two to three with block
WITHOUT_CLASSIFICATION	promise to implement three with block
WITHOUT_CLASSIFICATION	promise to implement N
WITHOUT_CLASSIFICATION	DumpingInvocationMethodFactory
WITHOUT_CLASSIFICATION	We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.
WITHOUT_CLASSIFICATION	Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.
WITHOUT_CLASSIFICATION	promise to implement two to N
WITHOUT_CLASSIFICATION	promise to implement three to N
WITHOUT_CLASSIFICATION	promise to implement zero to three
WITHOUT_CLASSIFICATION	promise to implement one to three
WITHOUT_CLASSIFICATION	promise to implement two to three
WITHOUT_CLASSIFICATION	promise to implement three
WITHOUT_CLASSIFICATION	all other arities use "n" dispatch path
WITHOUT_CLASSIFICATION	load up object and add a few useful methods
WITHOUT_CLASSIFICATION	open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel
WITHOUT_CLASSIFICATION	construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	wrap self and store the wrapper
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	start setup method
WITHOUT_CLASSIFICATION	set RubyClass
WITHOUT_CLASSIFICATION	set Ruby
WITHOUT_CLASSIFICATION	all methods dispatch to the simple version by default, which is method_missing normally
WITHOUT_CLASSIFICATION	try specific name first, falling back on simple name
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	load self, class, and name
WITHOUT_CLASSIFICATION	construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	convert to IRubyObject
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create static init, for a monitor object
WITHOUT_CLASSIFICATION	store the wrapper
WITHOUT_CLASSIFICATION	prepare temp locals
WITHOUT_CLASSIFICATION	Try to look up field for simple name get field; if nonnull, go straight to dispatch
WITHOUT_CLASSIFICATION	field is null, lock class and try to populate
WITHOUT_CLASSIFICATION	try/finally block to ensure unlock
WITHOUT_CLASSIFICATION	store it
WITHOUT_CLASSIFICATION	end of try block
WITHOUT_CLASSIFICATION	finally block to release monitor
WITHOUT_CLASSIFICATION	exception handling for monitor release
WITHOUT_CLASSIFICATION	re-get, re-check method; if not null now, go to dispatch
WITHOUT_CLASSIFICATION	load self, class, and name
WITHOUT_CLASSIFICATION	load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	convert to IRubyObject
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	method still not available, call method_missing
WITHOUT_CLASSIFICATION	perform the dispatch
WITHOUT_CLASSIFICATION	try to load the specified name; only if that fails, try to define the class
WITHOUT_CLASSIFICATION	up two slots, for long's two halves
WITHOUT_CLASSIFICATION	up two slots, for long's two halves
WITHOUT_CLASSIFICATION	setup the class
WITHOUT_CLASSIFICATION	now, create a method_added that can replace the DynamicMethod fields as they're redefined
WITHOUT_CLASSIFICATION	do nothing, it's a non-impl method
WITHOUT_CLASSIFICATION	probably a primitive
WITHOUT_CLASSIFICATION	interfaces are handled as modules
WITHOUT_CLASSIFICATION	construct the mirror class and parent classes
WITHOUT_CLASSIFICATION	set the full name
WITHOUT_CLASSIFICATION	include all interfaces
WITHOUT_CLASSIFICATION	if it's an array, only add methods for aref, aset, and length
WITHOUT_CLASSIFICATION	add array construction methods
WITHOUT_CLASSIFICATION	add all public constructors (note: getConstructors only returns public ones)
WITHOUT_CLASSIFICATION	add all instance and static methods
WITHOUT_CLASSIFICATION	proxy is complete, return it
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	only include static methods if specified
WITHOUT_CLASSIFICATION	add a few type-specific special methods
WITHOUT_CLASSIFICATION	add all static variables
WITHOUT_CLASSIFICATION	only public static fields that are valid constants
WITHOUT_CLASSIFICATION	looks like someone's trying to raise a Java exception. Let them.
WITHOUT_CLASSIFICATION	NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.
WITHOUT_CLASSIFICATION	TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive
WITHOUT_CLASSIFICATION	long first because it's what Fixnum claims to be
WITHOUT_CLASSIFICATION	double first because it's what float claims to be
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	we set all Java methods to optional, since many/most have overloads
WITHOUT_CLASSIFICATION	If we hold a Java object, we need a java_class accessor
WITHOUT_CLASSIFICATION	line 326
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	construct new array proxy (ArrayJavaProxy)
WITHOUT_CLASSIFICATION	Get map of all fields we want to define.
WITHOUT_CLASSIFICATION	Look through all mappings to find a match entry for this field
WITHOUT_CLASSIFICATION	Hit a non-java proxy class (included Modules can be a cause of this...skip)
WITHOUT_CLASSIFICATION	We could not find all of them print out first one (we could print them all?)
WITHOUT_CLASSIFICATION	dummy bodies for default impls
WITHOUT_CLASSIFICATION	initialize this if it hasn't been
WITHOUT_CLASSIFICATION	initialize these if they haven't been
WITHOUT_CLASSIFICATION	not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes
WITHOUT_CLASSIFICATION	setup new, etc unless this is a ConcreteJavaProxy subclass
WITHOUT_CLASSIFICATION	First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type
WITHOUT_CLASSIFICATION	list of interfaces we implement
WITHOUT_CLASSIFICATION	We capture the original "new" and make it private
WITHOUT_CLASSIFICATION	The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!
WITHOUT_CLASSIFICATION	Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object
WITHOUT_CLASSIFICATION	jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object
WITHOUT_CLASSIFICATION	Now we add an "implement" and "implement_all" methods to the class
WITHOUT_CLASSIFICATION	implement all forces implementation of all interfaces we intend for this class to implement
WITHOUT_CLASSIFICATION	we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface
WITHOUT_CLASSIFICATION	walk all superclasses aggregating interfaces
WITHOUT_CLASSIFICATION	construct the new interface impl and set it into the object
WITHOUT_CLASSIFICATION	assuming the user wants a collection of interfaces that can be included together. make it so.
WITHOUT_CLASSIFICATION	not allowed for existing Java interface modules
WITHOUT_CLASSIFICATION	To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well
WITHOUT_CLASSIFICATION	already set up append_features, just add the interface if we haven't already
WITHOUT_CLASSIFICATION	array-of-interface-type creation/identity
WITHOUT_CLASSIFICATION	keep this variant for kind_of? testing
WITHOUT_CLASSIFICATION	array creation should use this variant
WITHOUT_CLASSIFICATION	parent.setConstant(name, proxyClass); where the name should come from ?
WITHOUT_CLASSIFICATION	including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.
WITHOUT_CLASSIFICATION	add reference to interface module
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	proxy is complete, return it
WITHOUT_CLASSIFICATION	same as argument_types, but matches name in java.lang.reflect.Constructor/Method
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	weakly reserved names
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	modified only by addMethod; no synchronization required
WITHOUT_CLASSIFICATION	if there's no constructor, we must prevent construction
WITHOUT_CLASSIFICATION	caching constructors, as they're accessed for each new instance
WITHOUT_CLASSIFICATION	proxy module for interfaces
WITHOUT_CLASSIFICATION	proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields
WITHOUT_CLASSIFICATION	readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	Now add all aliases for the static methods (fields) as appropriate
WITHOUT_CLASSIFICATION	proxy is under construction, building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	Add property name aliases
WITHOUT_CLASSIFICATION	getFoo => foo getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	isFoo() => foo, isFoo() => foo()
WITHOUT_CLASSIFICATION	Additionally add ?-postfixed aliases to any boolean methods and properties.
WITHOUT_CLASSIFICATION	is_something?, contains_thing?
WITHOUT_CLASSIFICATION	something?
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	create constructorInstaller; if there are no constructors, it will disable construction
WITHOUT_CLASSIFICATION	we need to collect all methods, though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	now iterate over all installers and make sure they also have appropriate aliases
WITHOUT_CLASSIFICATION	old (quasi-deprecated) interface class
WITHOUT_CLASSIFICATION	1.9 support for encodings
WITHOUT_CLASSIFICATION	double-check the cache now that we're synchronized
WITHOUT_CLASSIFICATION	setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	isFoo() => foo, isFoo() => foo()
WITHOUT_CLASSIFICATION	is_something?, contains_thing?
WITHOUT_CLASSIFICATION	one word type name that starts lower-case...it may be a primitive type
WITHOUT_CLASSIFICATION	Java.getProxyClass deals with sync issues, so we won't duplicate the logic here
WITHOUT_CLASSIFICATION	note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.
WITHOUT_CLASSIFICATION	see note above re: return type
WITHOUT_CLASSIFICATION	restrictive security policy; no matter, we only want public classes anyway
WITHOUT_CLASSIFICATION	very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case
WITHOUT_CLASSIFICATION	one-dimensional array
WITHOUT_CLASSIFICATION	n-dimensional array
WITHOUT_CLASSIFICATION	if it's an array of arrays, recurse with the component type
WITHOUT_CLASSIFICATION	we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130
WITHOUT_CLASSIFICATION	Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface
WITHOUT_CLASSIFICATION	can't be converted any more, return it
WITHOUT_CLASSIFICATION	getFooBar() => fooBar?, foo_bar?()
WITHOUT_CLASSIFICATION	If not a property, but is boolean add ?-postfixed aliases.
WITHOUT_CLASSIFICATION	many cases are ok to convert to float; if not one of these, error
WITHOUT_CLASSIFICATION	for Object, default to natural wrapper type
WITHOUT_CLASSIFICATION	rubyObject is already of the required jruby class (or subclass)
WITHOUT_CLASSIFICATION	the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()
WITHOUT_CLASSIFICATION	it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	we've found a Java type to which we've coerced the Ruby value, wrap it
WITHOUT_CLASSIFICATION	set of utility methods for Java-based proxy objects
WITHOUT_CLASSIFICATION	the proxy (wrapper) type hierarchy
WITHOUT_CLASSIFICATION	InterfaceJavaProxy.createInterfaceJavaProxy(context);
WITHOUT_CLASSIFICATION	also create the JavaProxy classes
WITHOUT_CLASSIFICATION	The template for interface modules
WITHOUT_CLASSIFICATION	Now attach Java-related extras to core classes
WITHOUT_CLASSIFICATION	add all name-to-class mappings
WITHOUT_CLASSIFICATION	add some base Java classes everyone will need
WITHOUT_CLASSIFICATION	finally, set JavaSupport.isEnabled to true
WITHOUT_CLASSIFICATION	shouldn't happen, but if a superclass is specified, it's not ours
WITHOUT_CLASSIFICATION	include any interfaces we extend
WITHOUT_CLASSIFICATION	java.lang.Object is added at root of java proxy classes
WITHOUT_CLASSIFICATION	other java proxy classes added under their superclass' java proxy
WITHOUT_CLASSIFICATION	include interface modules into the proxy class
WITHOUT_CLASSIFICATION	JRUBY-2938 the proxy class might already exist
WITHOUT_CLASSIFICATION	add java_method for unbound use
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	we'll only map conventional class names to modules
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	Haven't found a class, continue on as though it were a package
WITHOUT_CLASSIFICATION	upper case name, so most likely a class
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	this is where we'll get connected when classes are opened using package module syntax.
WITHOUT_CLASSIFICATION	save package module as ivar in parent, and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	this covers primitives and (unlikely) lower-case class names
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	Create list of interfaces to proxy (and make sure they really are interfaces)
WITHOUT_CLASSIFICATION	hashcode is a combination of the interfaces and the Ruby class we're using to implement them
WITHOUT_CLASSIFICATION	if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode
WITHOUT_CLASSIFICATION	normal new class implementing interfaces
WITHOUT_CLASSIFICATION	Initialize some components.
WITHOUT_CLASSIFICATION	not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)
WITHOUT_CLASSIFICATION	Java reflection does not allow retrieving constructors like methods
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	no matching ctor found
WITHOUT_CLASSIFICATION	Create Ruby proxies for any input arguments that are not primitives.
WITHOUT_CLASSIFICATION	prepare a faster handle if handles are enabled and the method and class are public
WITHOUT_CLASSIFICATION	must be a public method
WITHOUT_CLASSIFICATION	must be a public class
WITHOUT_CLASSIFICATION	must have been loaded from our known classloader hierarchy
WITHOUT_CLASSIFICATION	Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).
WITHOUT_CLASSIFICATION	search through all declared methods to find a closest match
WITHOUT_CLASSIFICATION	no matching method found
WITHOUT_CLASSIFICATION	this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	First we need to register the JRuby engine.
WITHOUT_CLASSIFICATION	Now we create a new BSFManager.
WITHOUT_CLASSIFICATION	Initialize a simple Frame.
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	JRUBY-530, while case
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.
WITHOUT_CLASSIFICATION	Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)
WITHOUT_CLASSIFICATION	Execute a Ruby script (add the menubar to the frame).
WITHOUT_CLASSIFICATION	Execute Ruby statements.
WITHOUT_CLASSIFICATION	Evaluates a Ruby expression and display the result.
WITHOUT_CLASSIFICATION	Populate values for the parameter names
WITHOUT_CLASSIFICATION	package scope
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	Ruby-level methods
WITHOUT_CLASSIFICATION	need names ordered for key generation later
WITHOUT_CLASSIFICATION	we only collect methods and interfaces for user-defined proxy classes.
WITHOUT_CLASSIFICATION	get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.
WITHOUT_CLASSIFICATION	get any included interfaces
WITHOUT_CLASSIFICATION	lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.
WITHOUT_CLASSIFICATION	statically initialized below
WITHOUT_CLASSIFICATION	finish class initializer
WITHOUT_CLASSIFICATION	trigger class initialization for the class
WITHOUT_CLASSIFICATION	should not happen!
WITHOUT_CLASSIFICATION	start class
WITHOUT_CLASSIFICATION	make getter for handler
WITHOUT_CLASSIFICATION	make getter for proxy class
WITHOUT_CLASSIFICATION	add (potentially) overridden names to the key. TODO: see note above re: optimizations
WITHOUT_CLASSIFICATION	We generate all constructors and let some fail during invocation later
WITHOUT_CLASSIFICATION	create static private method field
WITHOUT_CLASSIFICATION	load static empty array
WITHOUT_CLASSIFICATION	box arguments
WITHOUT_CLASSIFICATION	this is a simple rethrow handler
WITHOUT_CLASSIFICATION	construct the super-proxy method
WITHOUT_CLASSIFICATION	do a void return
WITHOUT_CLASSIFICATION	utility methods
WITHOUT_CLASSIFICATION	Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	store call information so method_missing impl can use it
WITHOUT_CLASSIFICATION	use the same logic as in EvaluationState
WITHOUT_CLASSIFICATION	no opt, no rest, exact match
WITHOUT_CLASSIFICATION	only rest, must be at least required
WITHOUT_CLASSIFICATION	opt but no rest, must be at least required and no more than required + opt
WITHOUT_CLASSIFICATION	opt and rest, must be at least required
WITHOUT_CLASSIFICATION	No block from a nil proc
WITHOUT_CLASSIFICATION	If not already a proc then we should try and make it one.
WITHOUT_CLASSIFICATION	The current block is already associated with proc. No need to create a new one
WITHOUT_CLASSIFICATION	Has the method that is calling super received a block argument
WITHOUT_CLASSIFICATION	NUL
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	classes are directly in the hierarchy, so no special logic is necessary for implementer
WITHOUT_CLASSIFICATION	must be power of 2 must be power of 2
WITHOUT_CLASSIFICATION	Find power-of-two sizes best matching arguments
WITHOUT_CLASSIFICATION	note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)
WITHOUT_CLASSIFICATION	System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());
WITHOUT_CLASSIFICATION	protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }
WITHOUT_CLASSIFICATION	EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue
WITHOUT_CLASSIFICATION	Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.
WITHOUT_CLASSIFICATION	references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.
WITHOUT_CLASSIFICATION	ctor used by remove/rehash
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.
WITHOUT_CLASSIFICATION	temp method to verify tableSize value must be called under lock
WITHOUT_CLASSIFICATION	Single node in list
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	indirect read-/write- volatile
WITHOUT_CLASSIFICATION	entry exists, proxy has been gc'ed. replace entry.
WITHOUT_CLASSIFICATION	Where we get new positions from.
WITHOUT_CLASSIFICATION	Start of string ([, (, {, <, ', ", \n)
WITHOUT_CLASSIFICATION	Number of newlines read from the reader
WITHOUT_CLASSIFICATION	How many bytes into the source are we?
WITHOUT_CLASSIFICATION	For 'list' and only populated if list is not null.
WITHOUT_CLASSIFICATION	Last full line read.
WITHOUT_CLASSIFICATION	Save sourceLine for error reporting to display line where error occurred
WITHOUT_CLASSIFICATION	Get rest of line. lineBuffer filled as side-effect...
WITHOUT_CLASSIFICATION	Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	End of string (], ), }, >, ', ", \0)
WITHOUT_CLASSIFICATION	How many strings are nested in the current string term
WITHOUT_CLASSIFICATION	Single-quote fast path
WITHOUT_CLASSIFICATION	Regexp engine 'java'
WITHOUT_CLASSIFICATION	Was a goto in original ruby lexer
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	PUSH(1)
WITHOUT_CLASSIFICATION	POP
WITHOUT_CLASSIFICATION	PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.
WITHOUT_CLASSIFICATION	LEXPOP
WITHOUT_CLASSIFICATION	SET_P
WITHOUT_CLASSIFICATION	Marker delimiting heredoc boundary
WITHOUT_CLASSIFICATION	Found end marker for this heredoc
WITHOUT_CLASSIFICATION	Put back lastLine for any elements past start of heredoc marker
WITHOUT_CLASSIFICATION	Last token read via yylex().
WITHOUT_CLASSIFICATION	Value of last token which had a value associated with it.
WITHOUT_CLASSIFICATION	Stream of data that yylex() examines.
WITHOUT_CLASSIFICATION	Used for tiny smidgen of grammar in lexer (see setParserSupport())
WITHOUT_CLASSIFICATION	Give a name to a value. Enebo: This should be used more.
WITHOUT_CLASSIFICATION	When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').
WITHOUT_CLASSIFICATION	Are we lexing Ruby 1.8 or 1.9+ syntax
WITHOUT_CLASSIFICATION	Count of nested parentheses (1.9 only)
WITHOUT_CLASSIFICATION	1.9 only
WITHOUT_CLASSIFICATION	Short-hand (e.g. %{,%.,%!,... versus %Q{).
WITHOUT_CLASSIFICATION	Long-hand (e.g. %Q{}).
WITHOUT_CLASSIFICATION	no mb || ismbchar(term)
WITHOUT_CLASSIFICATION	Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.
WITHOUT_CLASSIFICATION	DEBUGGING HELP
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	end of script.
WITHOUT_CLASSIFICATION	white spaces
WITHOUT_CLASSIFICATION	'\v'
WITHOUT_CLASSIFICATION	it's a comment
WITHOUT_CLASSIFICATION	Replace a string of newlines with a single one
WITHOUT_CLASSIFICATION	$\: output record separator
WITHOUT_CLASSIFICATION	EOF (ENEBO: After default?
WITHOUT_CLASSIFICATION	documentation nodes
WITHOUT_CLASSIFICATION	In case last next was the newline.
WITHOUT_CLASSIFICATION	Just a plain bang
WITHOUT_CLASSIFICATION	$_: last read line string
WITHOUT_CLASSIFICATION	$~: match-data
WITHOUT_CLASSIFICATION	$: argv
WITHOUT_CLASSIFICATION	$$: pid
WITHOUT_CLASSIFICATION	$?: last status
WITHOUT_CLASSIFICATION	$!: error string
WITHOUT_CLASSIFICATION	$@: error position
WITHOUT_CLASSIFICATION	$/: input record separator
WITHOUT_CLASSIFICATION	$;: field separator
WITHOUT_CLASSIFICATION	$,: output field separator
WITHOUT_CLASSIFICATION	$.: last read line number
WITHOUT_CLASSIFICATION	$=: ignorecase
WITHOUT_CLASSIFICATION	$:: load path
WITHOUT_CLASSIFICATION	$<: reading filename
WITHOUT_CLASSIFICATION	$": already loaded files
WITHOUT_CLASSIFICATION	$&: last match
WITHOUT_CLASSIFICATION	$`: string before last match
WITHOUT_CLASSIFICATION	$': string after last match
WITHOUT_CLASSIFICATION	methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop
WITHOUT_CLASSIFICATION	See if it is a reserved word.
WITHOUT_CLASSIFICATION	enum lex_state
WITHOUT_CLASSIFICATION	block (primary)
WITHOUT_CLASSIFICATION	block (expr)
WITHOUT_CLASSIFICATION	hash
WITHOUT_CLASSIFICATION	ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.
WITHOUT_CLASSIFICATION	FIXME: peek('u') utf8 stuff for 1.9
WITHOUT_CLASSIFICATION	We don't append '+' since Java number parser gets confused
WITHOUT_CLASSIFICATION	hexadecimal
WITHOUT_CLASSIFICATION	binary
WITHOUT_CLASSIFICATION	decimal
WITHOUT_CLASSIFICATION	Octal
WITHOUT_CLASSIFICATION	'_' in number just ignored
WITHOUT_CLASSIFICATION	backslash
WITHOUT_CLASSIFICATION	newline
WITHOUT_CLASSIFICATION	horizontal tab
WITHOUT_CLASSIFICATION	form feed
WITHOUT_CLASSIFICATION	vertical tab
WITHOUT_CLASSIFICATION	alarm(bell)
WITHOUT_CLASSIFICATION	escape
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	char hexValue = scanHex(2);
WITHOUT_CLASSIFICATION	If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	space
WITHOUT_CLASSIFICATION	Where we started this marker match
WITHOUT_CLASSIFICATION	Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.
WITHOUT_CLASSIFICATION	We use offset here to keep track of extra newlines for windows
WITHOUT_CLASSIFICATION	If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	Where we get our newest char's
WITHOUT_CLASSIFICATION	Our readback/pushback buffer.
WITHOUT_CLASSIFICATION	index of last character in pushback buffer
WITHOUT_CLASSIFICATION	Character read before previous read
WITHOUT_CLASSIFICATION	keep value of twoAgo around so we can restore after we unread
WITHOUT_CLASSIFICATION	NetProtocolBufferedIOLibrary
WITHOUT_CLASSIFICATION	BigDecimalLibrary
WITHOUT_CLASSIFICATION	TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now
WITHOUT_CLASSIFICATION	Ruby's designation for some platforms, minus version numbers in some cases
WITHOUT_CLASSIFICATION	that's what JDK5 produces on Windows Vista
WITHOUT_CLASSIFICATION	Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));
WITHOUT_CLASSIFICATION	Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).
WITHOUT_CLASSIFICATION	this set is only for darwin
WITHOUT_CLASSIFICATION	DigestLibrary
WITHOUT_CLASSIFICATION	all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	do nothing, return dummy version below
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	line 329
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	shift to yyN
WITHOUT_CLASSIFICATION	reduce (yyN)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 271
WITHOUT_CLASSIFICATION	line 274
WITHOUT_CLASSIFICATION	line 303
WITHOUT_CLASSIFICATION	line 311
WITHOUT_CLASSIFICATION	line 314
WITHOUT_CLASSIFICATION	line 317
WITHOUT_CLASSIFICATION	line 332
WITHOUT_CLASSIFICATION	line 338
WITHOUT_CLASSIFICATION	line 341
WITHOUT_CLASSIFICATION	line 344
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 358
WITHOUT_CLASSIFICATION	line 367
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	line 378
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 407
WITHOUT_CLASSIFICATION	line 411
WITHOUT_CLASSIFICATION	line 414
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 434
WITHOUT_CLASSIFICATION	line 443
WITHOUT_CLASSIFICATION	line 446
WITHOUT_CLASSIFICATION	line 452
WITHOUT_CLASSIFICATION	line 457
WITHOUT_CLASSIFICATION	line 464
WITHOUT_CLASSIFICATION	line 467
WITHOUT_CLASSIFICATION	line 470
WITHOUT_CLASSIFICATION	line 479
WITHOUT_CLASSIFICATION	line 484
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	line 492
WITHOUT_CLASSIFICATION	line 498
WITHOUT_CLASSIFICATION	line 501
WITHOUT_CLASSIFICATION	line 504
WITHOUT_CLASSIFICATION	line 507
WITHOUT_CLASSIFICATION	line 510
WITHOUT_CLASSIFICATION	line 519
WITHOUT_CLASSIFICATION	line 525
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 556
WITHOUT_CLASSIFICATION	line 559
WITHOUT_CLASSIFICATION	line 563
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 569
WITHOUT_CLASSIFICATION	line 575
WITHOUT_CLASSIFICATION	line 578
WITHOUT_CLASSIFICATION	line 587
WITHOUT_CLASSIFICATION	line 596
WITHOUT_CLASSIFICATION	line 604
WITHOUT_CLASSIFICATION	line 607
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 613
WITHOUT_CLASSIFICATION	line 616
WITHOUT_CLASSIFICATION	line 634
WITHOUT_CLASSIFICATION	line 638
WITHOUT_CLASSIFICATION	line 643
WITHOUT_CLASSIFICATION	line 646
WITHOUT_CLASSIFICATION	line 655
WITHOUT_CLASSIFICATION	line 660
WITHOUT_CLASSIFICATION	line 667
WITHOUT_CLASSIFICATION	line 670
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 701
WITHOUT_CLASSIFICATION	line 717
WITHOUT_CLASSIFICATION	line 720
WITHOUT_CLASSIFICATION	line 726
WITHOUT_CLASSIFICATION	line 729
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 735
WITHOUT_CLASSIFICATION	line 738
WITHOUT_CLASSIFICATION	line 751
WITHOUT_CLASSIFICATION	line 754
WITHOUT_CLASSIFICATION	line 757
WITHOUT_CLASSIFICATION	line 760
WITHOUT_CLASSIFICATION	line 763
WITHOUT_CLASSIFICATION	line 769
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 775
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 797
WITHOUT_CLASSIFICATION	line 803
WITHOUT_CLASSIFICATION	line 806
WITHOUT_CLASSIFICATION	line 809
WITHOUT_CLASSIFICATION	line 815
WITHOUT_CLASSIFICATION	line 818
WITHOUT_CLASSIFICATION	line 821
WITHOUT_CLASSIFICATION	line 824
WITHOUT_CLASSIFICATION	line 830
WITHOUT_CLASSIFICATION	line 833
WITHOUT_CLASSIFICATION	line 836
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 852
WITHOUT_CLASSIFICATION	line 858
WITHOUT_CLASSIFICATION	line 861
WITHOUT_CLASSIFICATION	line 868
WITHOUT_CLASSIFICATION	line 871
WITHOUT_CLASSIFICATION	line 876
WITHOUT_CLASSIFICATION	line 879
WITHOUT_CLASSIFICATION	line 883
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 903
WITHOUT_CLASSIFICATION	line 907
WITHOUT_CLASSIFICATION	line 915
WITHOUT_CLASSIFICATION	line 920
WITHOUT_CLASSIFICATION	line 923
WITHOUT_CLASSIFICATION	line 926
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 936
WITHOUT_CLASSIFICATION	line 940
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 948
WITHOUT_CLASSIFICATION	line 956
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 964
WITHOUT_CLASSIFICATION	line 967
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 978
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 984
WITHOUT_CLASSIFICATION	line 986
WITHOUT_CLASSIFICATION	line 996
WITHOUT_CLASSIFICATION	line 1001
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1008
WITHOUT_CLASSIFICATION	line 1014
WITHOUT_CLASSIFICATION	line 1029
WITHOUT_CLASSIFICATION	line 1032
WITHOUT_CLASSIFICATION	line 1034
WITHOUT_CLASSIFICATION	line 1045
WITHOUT_CLASSIFICATION	line 1048
WITHOUT_CLASSIFICATION	line 1051
WITHOUT_CLASSIFICATION	line 1058
WITHOUT_CLASSIFICATION	line 1070
WITHOUT_CLASSIFICATION	line 1073
WITHOUT_CLASSIFICATION	line 1076
WITHOUT_CLASSIFICATION	line 1079
WITHOUT_CLASSIFICATION	line 1082
WITHOUT_CLASSIFICATION	line 1089
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1100
WITHOUT_CLASSIFICATION	line 1103
WITHOUT_CLASSIFICATION	line 1107
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1113
WITHOUT_CLASSIFICATION	line 1115
WITHOUT_CLASSIFICATION	line 1119
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1135
WITHOUT_CLASSIFICATION	line 1137
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1151
WITHOUT_CLASSIFICATION	line 1154
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1164
WITHOUT_CLASSIFICATION	line 1175
WITHOUT_CLASSIFICATION	line 1178
WITHOUT_CLASSIFICATION	line 1187
WITHOUT_CLASSIFICATION	line 1189
WITHOUT_CLASSIFICATION	line 1193
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1214
WITHOUT_CLASSIFICATION	line 1234
WITHOUT_CLASSIFICATION	line 1239
WITHOUT_CLASSIFICATION	line 1243
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1263
WITHOUT_CLASSIFICATION	line 1269
WITHOUT_CLASSIFICATION	line 1280
WITHOUT_CLASSIFICATION	line 1283
WITHOUT_CLASSIFICATION	line 1290
WITHOUT_CLASSIFICATION	line 1296
WITHOUT_CLASSIFICATION	line 1299
WITHOUT_CLASSIFICATION	line 1302
WITHOUT_CLASSIFICATION	line 1309
WITHOUT_CLASSIFICATION	line 1313
WITHOUT_CLASSIFICATION	line 1315
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1328
WITHOUT_CLASSIFICATION	line 1335
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1352
WITHOUT_CLASSIFICATION	line 1358
WITHOUT_CLASSIFICATION	line 1374
WITHOUT_CLASSIFICATION	line 1381
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1415
WITHOUT_CLASSIFICATION	line 1431
WITHOUT_CLASSIFICATION	line 1434
WITHOUT_CLASSIFICATION	line 1440
WITHOUT_CLASSIFICATION	line 1443
WITHOUT_CLASSIFICATION	line 1453
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1465
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1477
WITHOUT_CLASSIFICATION	line 1480
WITHOUT_CLASSIFICATION	line 1485
WITHOUT_CLASSIFICATION	line 1488
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1510
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1516
WITHOUT_CLASSIFICATION	line 1533
WITHOUT_CLASSIFICATION	line 1550
WITHOUT_CLASSIFICATION	line 1553
WITHOUT_CLASSIFICATION	line 1556
WITHOUT_CLASSIFICATION	line 1565
WITHOUT_CLASSIFICATION	line 1568
WITHOUT_CLASSIFICATION	line 1571
WITHOUT_CLASSIFICATION	line 1574
WITHOUT_CLASSIFICATION	line 1577
WITHOUT_CLASSIFICATION	line 1587
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1600
WITHOUT_CLASSIFICATION	line 1609
WITHOUT_CLASSIFICATION	line 1623
WITHOUT_CLASSIFICATION	line 1626
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1638
WITHOUT_CLASSIFICATION	line 1641
WITHOUT_CLASSIFICATION	line 1644
WITHOUT_CLASSIFICATION	line 1649
WITHOUT_CLASSIFICATION	line 1655
WITHOUT_CLASSIFICATION	line 1658
WITHOUT_CLASSIFICATION	line 1661
WITHOUT_CLASSIFICATION	line 1672
WITHOUT_CLASSIFICATION	line 1677
WITHOUT_CLASSIFICATION	line 1687
WITHOUT_CLASSIFICATION	line 1694
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1733
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1745
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1757
WITHOUT_CLASSIFICATION	line 1769
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1775
WITHOUT_CLASSIFICATION	line 1784
WITHOUT_CLASSIFICATION	line 1808
WITHOUT_CLASSIFICATION	line 1814
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	XXX 0;
WITHOUT_CLASSIFICATION	$$ = $3;
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	$8 == null ? NilImplicitNode.NIL : $8;
WITHOUT_CLASSIFICATION	$5 == null ? NilImplicitNode.NIL : $5;
WITHOUT_CLASSIFICATION	NOEX_PRIVATE for toplevel
WITHOUT_CLASSIFICATION	mirko: check
WITHOUT_CLASSIFICATION	Include pipes on multiple arg type
WITHOUT_CLASSIFICATION	line 529
WITHOUT_CLASSIFICATION	.setPosFrom($2);
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	DStrNode: :"some text #{some expression}"
WITHOUT_CLASSIFICATION	StrNode: :"some text"
WITHOUT_CLASSIFICATION	EvStrNode :"#{some expression}"
WITHOUT_CLASSIFICATION	line 1827 "DefaultRubyParser.y"
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	line 7713 "-"
WITHOUT_CLASSIFICATION	local scopes are argument scopes by default
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.
WITHOUT_CLASSIFICATION	ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic
WITHOUT_CLASSIFICATION	odd...but it is odd in ruby too.
WITHOUT_CLASSIFICATION	What linenumber will the source think it starts from?
WITHOUT_CLASSIFICATION	Is this inline source (aka -e "...source...")
WITHOUT_CLASSIFICATION	We parse evals more often in source so assume an eval parse.
WITHOUT_CLASSIFICATION	Should positions added extra IDE-friendly information and leave in all newline nodes
WITHOUT_CLASSIFICATION	Will parser parse Duby grammar Extensions
WITHOUT_CLASSIFICATION	Should we display extra debug information while parsing?
WITHOUT_CLASSIFICATION	__END__ marker offset (-1 means none present)
WITHOUT_CLASSIFICATION	Parser states:
WITHOUT_CLASSIFICATION	Is the parser current within a singleton (value is number of nested singletons)
WITHOUT_CLASSIFICATION	Is the parser currently within a method definition
WITHOUT_CLASSIFICATION	LOCALVAR
WITHOUT_CLASSIFICATION	CONSTANT
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE
WITHOUT_CLASSIFICATION	Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])
WITHOUT_CLASSIFICATION	MRI: block_append
WITHOUT_CLASSIFICATION	Reduces overhead in interp by not set position every single line we encounter.
WITHOUT_CLASSIFICATION	Assumption: tail is never a list node
WITHOUT_CLASSIFICATION	return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));
WITHOUT_CLASSIFICATION	Node
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	case CONSTNODE: handleUselessWarn(node, "a constant"); return;
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;
WITHOUT_CLASSIFICATION	case SELFNODE: handleUselessWarn(node, "self"); return;
WITHOUT_CLASSIFICATION	FIXME: DSTR,EVSTR,STR: warning "string literal in condition"
WITHOUT_CLASSIFICATION	MRI: range_op
WITHOUT_CLASSIFICATION	Block and block pass passed in at same time....uh oh
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	foo()
WITHOUT_CLASSIFICATION	tail must be EvStrNode at this point
WITHOUT_CLASSIFICATION	Do not add an empty string node
WITHOUT_CLASSIFICATION	Zero-Argument declaration
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyLen 542
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDefRed 945
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yyDgoto 152
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yySindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyRindex 945
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	yyGindex 152
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	shift to yyN
WITHOUT_CLASSIFICATION	reduce (yyN)
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	line 280
WITHOUT_CLASSIFICATION	line 283
WITHOUT_CLASSIFICATION	line 296
WITHOUT_CLASSIFICATION	line 324
WITHOUT_CLASSIFICATION	line 327
WITHOUT_CLASSIFICATION	line 331
WITHOUT_CLASSIFICATION	line 333
WITHOUT_CLASSIFICATION	line 336
WITHOUT_CLASSIFICATION	line 342
WITHOUT_CLASSIFICATION	line 345
WITHOUT_CLASSIFICATION	line 348
WITHOUT_CLASSIFICATION	line 354
WITHOUT_CLASSIFICATION	line 368
WITHOUT_CLASSIFICATION	line 377
WITHOUT_CLASSIFICATION	line 388
WITHOUT_CLASSIFICATION	line 392
WITHOUT_CLASSIFICATION	line 397
WITHOUT_CLASSIFICATION	line 429
WITHOUT_CLASSIFICATION	line 432
WITHOUT_CLASSIFICATION	line 436
WITHOUT_CLASSIFICATION	line 445
WITHOUT_CLASSIFICATION	line 448
WITHOUT_CLASSIFICATION	line 454
WITHOUT_CLASSIFICATION	line 459
WITHOUT_CLASSIFICATION	line 466
WITHOUT_CLASSIFICATION	line 469
WITHOUT_CLASSIFICATION	line 478
WITHOUT_CLASSIFICATION	line 481
WITHOUT_CLASSIFICATION	line 488
WITHOUT_CLASSIFICATION	line 494
WITHOUT_CLASSIFICATION	line 497
WITHOUT_CLASSIFICATION	line 503
WITHOUT_CLASSIFICATION	line 506
WITHOUT_CLASSIFICATION	line 509
WITHOUT_CLASSIFICATION	line 512
WITHOUT_CLASSIFICATION	line 521
WITHOUT_CLASSIFICATION	line 526
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 534
WITHOUT_CLASSIFICATION	line 549
WITHOUT_CLASSIFICATION	line 552
WITHOUT_CLASSIFICATION	line 558
WITHOUT_CLASSIFICATION	line 561
WITHOUT_CLASSIFICATION	line 571
WITHOUT_CLASSIFICATION	line 574
WITHOUT_CLASSIFICATION	line 579
WITHOUT_CLASSIFICATION	line 586
WITHOUT_CLASSIFICATION	line 589
WITHOUT_CLASSIFICATION	line 592
WITHOUT_CLASSIFICATION	line 595
WITHOUT_CLASSIFICATION	line 598
WITHOUT_CLASSIFICATION	line 623
WITHOUT_CLASSIFICATION	line 627
WITHOUT_CLASSIFICATION	line 630
WITHOUT_CLASSIFICATION	line 633
WITHOUT_CLASSIFICATION	line 639
WITHOUT_CLASSIFICATION	line 648
WITHOUT_CLASSIFICATION	line 657
WITHOUT_CLASSIFICATION	line 661
WITHOUT_CLASSIFICATION	line 666
WITHOUT_CLASSIFICATION	line 678
WITHOUT_CLASSIFICATION	line 682
WITHOUT_CLASSIFICATION	line 688
WITHOUT_CLASSIFICATION	line 699
WITHOUT_CLASSIFICATION	line 706
WITHOUT_CLASSIFICATION	line 708
WITHOUT_CLASSIFICATION	line 727
WITHOUT_CLASSIFICATION	line 737
WITHOUT_CLASSIFICATION	line 753
WITHOUT_CLASSIFICATION	line 779
WITHOUT_CLASSIFICATION	line 801
WITHOUT_CLASSIFICATION	line 808
WITHOUT_CLASSIFICATION	line 811
WITHOUT_CLASSIFICATION	line 817
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 820
WITHOUT_CLASSIFICATION	line 826
WITHOUT_CLASSIFICATION	line 829
WITHOUT_CLASSIFICATION	line 832
WITHOUT_CLASSIFICATION	line 851
WITHOUT_CLASSIFICATION	line 857
WITHOUT_CLASSIFICATION	line 860
WITHOUT_CLASSIFICATION	line 863
WITHOUT_CLASSIFICATION	line 866
WITHOUT_CLASSIFICATION	line 869
WITHOUT_CLASSIFICATION	line 875
WITHOUT_CLASSIFICATION	line 884
WITHOUT_CLASSIFICATION	line 887
WITHOUT_CLASSIFICATION	line 890
WITHOUT_CLASSIFICATION	line 902
WITHOUT_CLASSIFICATION	line 909
WITHOUT_CLASSIFICATION	line 912
WITHOUT_CLASSIFICATION	line 916
WITHOUT_CLASSIFICATION	line 922
WITHOUT_CLASSIFICATION	line 928
WITHOUT_CLASSIFICATION	line 941
WITHOUT_CLASSIFICATION	line 947
WITHOUT_CLASSIFICATION	line 951
WITHOUT_CLASSIFICATION	line 955
WITHOUT_CLASSIFICATION	line 965
WITHOUT_CLASSIFICATION	line 969
WITHOUT_CLASSIFICATION	line 977
WITHOUT_CLASSIFICATION	line 983
WITHOUT_CLASSIFICATION	line 1013
WITHOUT_CLASSIFICATION	line 1023
WITHOUT_CLASSIFICATION	line 1035
WITHOUT_CLASSIFICATION	line 1041
WITHOUT_CLASSIFICATION	line 1043
WITHOUT_CLASSIFICATION	line 1054
WITHOUT_CLASSIFICATION	line 1057
WITHOUT_CLASSIFICATION	line 1060
WITHOUT_CLASSIFICATION	line 1069
WITHOUT_CLASSIFICATION	line 1075
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1078
WITHOUT_CLASSIFICATION	line 1084
WITHOUT_CLASSIFICATION	line 1087
WITHOUT_CLASSIFICATION	line 1090
WITHOUT_CLASSIFICATION	line 1093
WITHOUT_CLASSIFICATION	line 1114
WITHOUT_CLASSIFICATION	line 1116
WITHOUT_CLASSIFICATION	line 1118
WITHOUT_CLASSIFICATION	line 1124
WITHOUT_CLASSIFICATION	line 1126
WITHOUT_CLASSIFICATION	line 1138
WITHOUT_CLASSIFICATION	line 1144
WITHOUT_CLASSIFICATION	line 1149
WITHOUT_CLASSIFICATION	line 1155
WITHOUT_CLASSIFICATION	line 1162
WITHOUT_CLASSIFICATION	line 1173
WITHOUT_CLASSIFICATION	line 1179
WITHOUT_CLASSIFICATION	line 1182
WITHOUT_CLASSIFICATION	line 1190
WITHOUT_CLASSIFICATION	line 1196
WITHOUT_CLASSIFICATION	line 1213
WITHOUT_CLASSIFICATION	line 1217
WITHOUT_CLASSIFICATION	line 1231
WITHOUT_CLASSIFICATION	line 1236
WITHOUT_CLASSIFICATION	line 1244
WITHOUT_CLASSIFICATION	line 1254
WITHOUT_CLASSIFICATION	line 1258
WITHOUT_CLASSIFICATION	line 1264
WITHOUT_CLASSIFICATION	line 1270
WITHOUT_CLASSIFICATION	line 1273
WITHOUT_CLASSIFICATION	line 1276
WITHOUT_CLASSIFICATION	line 1279
WITHOUT_CLASSIFICATION	line 1282
WITHOUT_CLASSIFICATION	line 1289
WITHOUT_CLASSIFICATION	line 1292
WITHOUT_CLASSIFICATION	line 1295
WITHOUT_CLASSIFICATION	line 1298
WITHOUT_CLASSIFICATION	line 1305
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1308
WITHOUT_CLASSIFICATION	line 1311
WITHOUT_CLASSIFICATION	line 1317
WITHOUT_CLASSIFICATION	line 1323
WITHOUT_CLASSIFICATION	line 1326
WITHOUT_CLASSIFICATION	line 1329
WITHOUT_CLASSIFICATION	line 1337
WITHOUT_CLASSIFICATION	line 1342
WITHOUT_CLASSIFICATION	line 1345
WITHOUT_CLASSIFICATION	line 1354
WITHOUT_CLASSIFICATION	line 1359
WITHOUT_CLASSIFICATION	line 1366
WITHOUT_CLASSIFICATION	line 1369
WITHOUT_CLASSIFICATION	line 1373
WITHOUT_CLASSIFICATION	line 1377
WITHOUT_CLASSIFICATION	line 1383
WITHOUT_CLASSIFICATION	line 1399
WITHOUT_CLASSIFICATION	line 1401
WITHOUT_CLASSIFICATION	line 1406
WITHOUT_CLASSIFICATION	line 1417
WITHOUT_CLASSIFICATION	line 1424
WITHOUT_CLASSIFICATION	line 1427
WITHOUT_CLASSIFICATION	line 1430
WITHOUT_CLASSIFICATION	line 1433
WITHOUT_CLASSIFICATION	line 1436
WITHOUT_CLASSIFICATION	line 1442
WITHOUT_CLASSIFICATION	line 1445
WITHOUT_CLASSIFICATION	line 1458
WITHOUT_CLASSIFICATION	line 1464
WITHOUT_CLASSIFICATION	line 1489
WITHOUT_CLASSIFICATION	line 1493
WITHOUT_CLASSIFICATION	line 1507
WITHOUT_CLASSIFICATION	line 1519
WITHOUT_CLASSIFICATION	line 1532
WITHOUT_CLASSIFICATION	line 1538
WITHOUT_CLASSIFICATION	line 1542
WITHOUT_CLASSIFICATION	line 1557
WITHOUT_CLASSIFICATION	line 1573
WITHOUT_CLASSIFICATION	line 1591
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	line 1607
WITHOUT_CLASSIFICATION	line 1610
WITHOUT_CLASSIFICATION	line 1622
WITHOUT_CLASSIFICATION	line 1625
WITHOUT_CLASSIFICATION	line 1636
WITHOUT_CLASSIFICATION	line 1639
WITHOUT_CLASSIFICATION	line 1647
WITHOUT_CLASSIFICATION	line 1651
WITHOUT_CLASSIFICATION	line 1657
WITHOUT_CLASSIFICATION	line 1660
WITHOUT_CLASSIFICATION	line 1663
WITHOUT_CLASSIFICATION	line 1678
WITHOUT_CLASSIFICATION	line 1702
WITHOUT_CLASSIFICATION	line 1711
WITHOUT_CLASSIFICATION	line 1719
WITHOUT_CLASSIFICATION	line 1722
WITHOUT_CLASSIFICATION	line 1731
WITHOUT_CLASSIFICATION	line 1734
WITHOUT_CLASSIFICATION	line 1738
WITHOUT_CLASSIFICATION	line 1746
WITHOUT_CLASSIFICATION	line 1756
WITHOUT_CLASSIFICATION	line 1758
WITHOUT_CLASSIFICATION	line 1761
WITHOUT_CLASSIFICATION	line 1767
WITHOUT_CLASSIFICATION	line 1776
WITHOUT_CLASSIFICATION	line 1782
WITHOUT_CLASSIFICATION	line 1785
WITHOUT_CLASSIFICATION	line 1788
WITHOUT_CLASSIFICATION	line 1791
WITHOUT_CLASSIFICATION	line 1797
WITHOUT_CLASSIFICATION	line 1800
WITHOUT_CLASSIFICATION	line 1803
WITHOUT_CLASSIFICATION	line 1806
WITHOUT_CLASSIFICATION	line 1809
WITHOUT_CLASSIFICATION	line 1815
WITHOUT_CLASSIFICATION	line 1825
WITHOUT_CLASSIFICATION	line 1828
WITHOUT_CLASSIFICATION	line 1831
WITHOUT_CLASSIFICATION	line 1847
WITHOUT_CLASSIFICATION	$8 == null ? NilImplicitNode.NIL : $8;
WITHOUT_CLASSIFICATION	$5 == null ? NilImplicitNode.NIL : $5;
WITHOUT_CLASSIFICATION	.setPosFrom($2);
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	DStrNode: :"some text #{some expression}"
WITHOUT_CLASSIFICATION	StrNode: :"some text"
WITHOUT_CLASSIFICATION	EvStrNode :"#{some expression}"
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE METHODS
WITHOUT_CLASSIFICATION	line 1854
WITHOUT_CLASSIFICATION	line 1869
WITHOUT_CLASSIFICATION	line 1872
WITHOUT_CLASSIFICATION	line 1877
WITHOUT_CLASSIFICATION	line 1886
WITHOUT_CLASSIFICATION	line 1898
WITHOUT_CLASSIFICATION	line 1902
WITHOUT_CLASSIFICATION	line 1905
WITHOUT_CLASSIFICATION	line 1911
WITHOUT_CLASSIFICATION	line 1918
WITHOUT_CLASSIFICATION	line 1935
WITHOUT_CLASSIFICATION	line 1938
WITHOUT_CLASSIFICATION	line 1942
WITHOUT_CLASSIFICATION	line 1948
WITHOUT_CLASSIFICATION	line 1960
WITHOUT_CLASSIFICATION	line 1963
WITHOUT_CLASSIFICATION	line 1968
WITHOUT_CLASSIFICATION	line 1972
WITHOUT_CLASSIFICATION	line 1982
WITHOUT_CLASSIFICATION	line 1995
WITHOUT_CLASSIFICATION	line 2000
WITHOUT_CLASSIFICATION	line 2006
WITHOUT_CLASSIFICATION	line 2010
WITHOUT_CLASSIFICATION	We may need to subtract addition offset off of first
WITHOUT_CLASSIFICATION	string fragment (we optimistically take one off in
WITHOUT_CLASSIFICATION	ParserSupport.literal_concat). Check token length
WITHOUT_CLASSIFICATION	and subtract as neeeded.
WITHOUT_CLASSIFICATION	$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);
WITHOUT_CLASSIFICATION	ENEBO: arg surrounded by in_defined set/unset
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	ENEBO: Removed !compile_for_eval which probably is to reduce warnings
WITHOUT_CLASSIFICATION	was $$ = null;
WITHOUT_CLASSIFICATION	line 2019 "Ruby19Parser.y"
WITHOUT_CLASSIFICATION	line 8143 "-"
WITHOUT_CLASSIFICATION	we know variables cannot be null since localstaticscope will create a 0 length one.
WITHOUT_CLASSIFICATION	No bit math to store level since we know level is zero for this case
WITHOUT_CLASSIFICATION	Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.
WITHOUT_CLASSIFICATION	Live reference to module
WITHOUT_CLASSIFICATION	Next CRef down the lexical structure
WITHOUT_CLASSIFICATION	Our name holder (offsets are assigned as variables are added
WITHOUT_CLASSIFICATION	number of variables in this scope representing required arguments
WITHOUT_CLASSIFICATION	number of variables in this scope representing optional arguments
WITHOUT_CLASSIFICATION	index of variable that represents a "rest" arg
WITHOUT_CLASSIFICATION	Note that this object equality check is intentional, to ensure the string and its interned version are the same object.
WITHOUT_CLASSIFICATION	Returns slot of variable
WITHOUT_CLASSIFICATION	Returns slot of variable
WITHOUT_CLASSIFICATION	Note: Only used by compiler until it can use getConstant again or use some other refactoring
WITHOUT_CLASSIFICATION	If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	Try and unload the autoload specified from internedName
WITHOUT_CLASSIFICATION	We override that the logic which uses this
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	Is this thread currently with in a function trace?
WITHOUT_CLASSIFICATION	Is this thread currently doing an defined? defined should set things like $!
WITHOUT_CLASSIFICATION	private UnsynchronizedStack parentStack;
WITHOUT_CLASSIFICATION	private UnsynchronizedStack frameStack;
WITHOUT_CLASSIFICATION	List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.
WITHOUT_CLASSIFICATION	File where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	Line where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.
WITHOUT_CLASSIFICATION	TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.
WITHOUT_CLASSIFICATION	CATCH MANAGEMENT
WITHOUT_CLASSIFICATION	FRAME MANAGEMENT
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	assert level == 0;
WITHOUT_CLASSIFICATION	assert level == 0;
WITHOUT_CLASSIFICATION	look for mangling markers for compiled Ruby in method name
WITHOUT_CLASSIFICATION	if it's not a rescue or ensure, there's a frame associated, so decrement
WITHOUT_CLASSIFICATION	look for __file__ method name for compiled roots
WITHOUT_CLASSIFICATION	All entries following removed node can stay in list, but all preceding ones need to be cloned.
WITHOUT_CLASSIFICATION	required and optional only
WITHOUT_CLASSIFICATION	do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	look for mangling markers for bound, unframed methods in class name
WITHOUT_CLASSIFICATION	set the binding's frame's "previous" file and line to current, so trace will show who called the block
WITHOUT_CLASSIFICATION	framed invokers will have Ruby frames associated with them
WITHOUT_CLASSIFICATION	look for mangling markers for bound, framed methods in class name
WITHOUT_CLASSIFICATION	unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line
WITHOUT_CLASSIFICATION	try to mine out a Ruby frame using our list of interpreter entry-point markers
WITHOUT_CLASSIFICATION	Frame matches one of our markers for "interpreted" calls
WITHOUT_CLASSIFICATION	Frame is extraneous runtime information, skip it unless debug
WITHOUT_CLASSIFICATION	Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.
WITHOUT_CLASSIFICATION	new scope for this invocation of the block, based on parent scope
WITHOUT_CLASSIFICATION	No argument blocks
WITHOUT_CLASSIFICATION	just push the same empty scope, since we won't use one
WITHOUT_CLASSIFICATION	Not sure if this is actually possible, but better safe than sorry
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).
WITHOUT_CLASSIFICATION	Highest reserved id
WITHOUT_CLASSIFICATION	binary typed calls
WITHOUT_CLASSIFICATION	id must always be even
WITHOUT_CLASSIFICATION	with block pass
WITHOUT_CLASSIFICATION	no block
WITHOUT_CLASSIFICATION	with block literal (iter)
WITHOUT_CLASSIFICATION	assert false : "can this happen?";
WITHOUT_CLASSIFICATION	if we have multiple asgn with just args, need a special type for that
WITHOUT_CLASSIFICATION	&& args.getMaxArgumentsCount() != 1) {
WITHOUT_CLASSIFICATION	return warnMultiReturnNil(ruby);
WITHOUT_CLASSIFICATION	ensure zero is devoted to no method name
WITHOUT_CLASSIFICATION	predefine a few other methods we invoke directly elsewhere
WITHOUT_CLASSIFICATION	fast and safe respond_to? call site logic
WITHOUT_CLASSIFICATION	Static scoping information for this scope
WITHOUT_CLASSIFICATION	Captured dynamic scopes
WITHOUT_CLASSIFICATION	Backref for $~, $1, etc
WITHOUT_CLASSIFICATION	Lastline
WITHOUT_CLASSIFICATION	No binding scope so we should create one
WITHOUT_CLASSIFICATION	bindings scopes must always be ManyVars scopes since evals can grow them
WITHOUT_CLASSIFICATION	Helper function to give a good view of current dynamic scope with captured scopes
WITHOUT_CLASSIFICATION	try count specific args to determine required
WITHOUT_CLASSIFICATION	Some helper functions:
WITHOUT_CLASSIFICATION	silently ignore
WITHOUT_CLASSIFICATION	used by compiler
WITHOUT_CLASSIFICATION	initialize the static settings to determine which factory to use
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE METHODS
WITHOUT_CLASSIFICATION	We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	Single node on list
WITHOUT_CLASSIFICATION	Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	Clone all remaining nodes
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.
WITHOUT_CLASSIFICATION	We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.
WITHOUT_CLASSIFICATION	If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.
WITHOUT_CLASSIFICATION	This is the proper behavior for all non-expanded assigners.
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore
WITHOUT_CLASSIFICATION	retrieve method module name
WITHOUT_CLASSIFICATION	call is ok, punch it!
WITHOUT_CLASSIFICATION	if undefined, branch to method_missing
WITHOUT_CLASSIFICATION	if we're not attempting to invoke method_missing and method is not visible, branch to method_missing
WITHOUT_CLASSIFICATION	method object already present, push various args tc self klazz name
WITHOUT_CLASSIFICATION	if it's method_missing, just invoke it
WITHOUT_CLASSIFICATION	invoke callMethodMissing
WITHOUT_CLASSIFICATION	caller
WITHOUT_CLASSIFICATION	calltype block
WITHOUT_CLASSIFICATION	if no exception raised, jump to end to leave result on stack for return
WITHOUT_CLASSIFICATION	load arity for check
WITHOUT_CLASSIFICATION	throw
WITHOUT_CLASSIFICATION	load arity for error
WITHOUT_CLASSIFICATION	arity ok, continue
WITHOUT_CLASSIFICATION	InvocationCallbackFactory
WITHOUT_CLASSIFICATION	ENEBO: Perhaps slow but simple for now
WITHOUT_CLASSIFICATION	FastInvocationCallback
WITHOUT_CLASSIFICATION	InvocationCallback
WITHOUT_CLASSIFICATION	DumpingInvocationCallbackFactory
WITHOUT_CLASSIFICATION	for fast lookup: encoding entry => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	load the encoding
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs
WITHOUT_CLASSIFICATION	BreakJump, ThreadContext
WITHOUT_CLASSIFICATION	ThreadContext
WITHOUT_CLASSIFICATION	BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	Make Java class files in the jar reachable from Ruby
WITHOUT_CLASSIFICATION	RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	add all startup load paths to the list first
WITHOUT_CLASSIFICATION	if it's a compiled JRuby script, instantiate and run it
WITHOUT_CLASSIFICATION	wrap in try/catch for security exceptions in an applet
WITHOUT_CLASSIFICATION	add $RUBYLIB paths
WITHOUT_CLASSIFICATION	Empty paths do not need to be added
WITHOUT_CLASSIFICATION	"." dir is used for relative path loads from a given file, as in require '../foo/bar'
WITHOUT_CLASSIFICATION	Add 1.8 libs
WITHOUT_CLASSIFICATION	Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.
WITHOUT_CLASSIFICATION	Library has already been loaded in some form, bail out
WITHOUT_CLASSIFICATION	We don't want a package name beginning with dots, so we remove them
WITHOUT_CLASSIFICATION	If there is a jar-file with the required name, we add this to the class path.
WITHOUT_CLASSIFICATION	quietly try to load the class
WITHOUT_CLASSIFICATION	If there was a good library before, we go back to that
WITHOUT_CLASSIFICATION	no library or extension found, try to load directly as a class
WITHOUT_CLASSIFICATION	if an extension is specified, try more targetted searches
WITHOUT_CLASSIFICATION	signed short, big-endian
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support
WITHOUT_CLASSIFICATION	This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed
WITHOUT_CLASSIFICATION	Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.
WITHOUT_CLASSIFICATION	It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	extension extensions
WITHOUT_CLASSIFICATION	unknown extension, fall back to search with extensions
WITHOUT_CLASSIFICATION	try all extensions
WITHOUT_CLASSIFICATION	if a source extension is specified, try all source extensions
WITHOUT_CLASSIFICATION	unknown extension, fall back to exact search
WITHOUT_CLASSIFICATION	try only literal search
WITHOUT_CLASSIFICATION	attempt to load the found library
WITHOUT_CLASSIFICATION	otherwise load the library we've found
WITHOUT_CLASSIFICATION	allow MainExitException to propagate out for exec and friends
WITHOUT_CLASSIFICATION	Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".
WITHOUT_CLASSIFICATION	check current directory; if file exists, retrieve URL and return resource
WITHOUT_CLASSIFICATION	if a jar or file URL, return load service resource directly without further searching
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	if it's a ./ baseName, use CWD logic
WITHOUT_CLASSIFICATION	if given path is absolute, just try it as-is (with extensions) and no load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));
WITHOUT_CLASSIFICATION	handle security-sensitive case
WITHOUT_CLASSIFICATION	if entry is an empty string, skip it
WITHOUT_CLASSIFICATION	if entry starts with a slash, skip it since classloader resources never start with a /
WITHOUT_CLASSIFICATION	otherwise, try to load from classpath (Note: Jar resources always uses '/')
WITHOUT_CLASSIFICATION	Make sure this is not a directory or unavailable in some way
WITHOUT_CLASSIFICATION	signed short, native
WITHOUT_CLASSIFICATION	If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.
WITHOUT_CLASSIFICATION	write `I' instance var signet if class is NOT a direct subclass of Object
WITHOUT_CLASSIFICATION	if name starts with a / we're done (classloader resources won't load with an initial /)
WITHOUT_CLASSIFICATION	Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")
WITHOUT_CLASSIFICATION	Directories and unavailable resources are not able to open a stream.
WITHOUT_CLASSIFICATION	Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.
WITHOUT_CLASSIFICATION	object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here
WITHOUT_CLASSIFICATION	flush afer whole dump is complete
WITHOUT_CLASSIFICATION	write('S');
WITHOUT_CLASSIFICATION	switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.
WITHOUT_CLASSIFICATION	object is a custom class that extended one of the native types other than Object
WITHOUT_CLASSIFICATION	We do not want to capture cached methods
WITHOUT_CLASSIFICATION	w_symbol
WITHOUT_CLASSIFICATION	w_unique
WITHOUT_CLASSIFICATION	call the proc, but not for symbols
WITHOUT_CLASSIFICATION	Major Minor
WITHOUT_CLASSIFICATION	any ivars, since we don't have __attached__ ivar now
WITHOUT_CLASSIFICATION	"hashdef" object, a hash with a default
WITHOUT_CLASSIFICATION	All "C" marshalled objects descend from core classes, which are all RubyObject
WITHOUT_CLASSIFICATION	sic
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	If we are setting post arguments we can assume there are no pre or others
WITHOUT_CLASSIFICATION	XXX: 0xffff0000 on BE?
WITHOUT_CLASSIFICATION	unsigned short, native
WITHOUT_CLASSIFICATION	int, native long, native
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	Look for slash, starting from 'start' position, until 'end'.
WITHOUT_CLASSIFICATION	Our values holder (name of variables are kept in staticScope)
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	SunSignalFacade
WITHOUT_CLASSIFICATION	All braces pushed..
WITHOUT_CLASSIFICATION	failed : try next recursion
WITHOUT_CLASSIFICATION	leftToken made us start as nest 1
WITHOUT_CLASSIFICATION	are we at ''
WITHOUT_CLASSIFICATION	No or mismatched braces..Move along..nothing to see here
WITHOUT_CLASSIFICATION	not enough bytes
WITHOUT_CLASSIFICATION	Get index of last read byte
WITHOUT_CLASSIFICATION	skip inner braces
WITHOUT_CLASSIFICATION	Process {}'s (example: Dir.glob("{jruby,jython}/README")
WITHOUT_CLASSIFICATION	complete, according to Posix.2
WITHOUT_CLASSIFICATION	Only accept an open brace if there is a close
WITHOUT_CLASSIFICATION	brace to match it. Bracket expressions must be
WITHOUT_CLASSIFICATION	index of left-most brace index of right-most brace
WITHOUT_CLASSIFICATION	Length check is a hack. We should not be reeiving "" as a filename ever.
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	NOT REACHED HERE
WITHOUT_CLASSIFICATION	Pickaxe says @ must be followed by a name character, but MRI does not require this.
WITHOUT_CLASSIFICATION	Pickaxe says @@ must be followed by a name character, but MRI does not require this.
WITHOUT_CLASSIFICATION	SimpleSampler
WITHOUT_CLASSIFICATION	convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )
WITHOUT_CLASSIFICATION	b64_xtable for decoding Base 64
WITHOUT_CLASSIFICATION	single precision, little-endian
WITHOUT_CLASSIFICATION	single precision, big-endian
WITHOUT_CLASSIFICATION	single precision, native
WITHOUT_CLASSIFICATION	single precision, native single precision, native
WITHOUT_CLASSIFICATION	double precision, little-endian
WITHOUT_CLASSIFICATION	double precision, big-endian
WITHOUT_CLASSIFICATION	double precision, native
WITHOUT_CLASSIFICATION	signed short, little-endian
WITHOUT_CLASSIFICATION	signed char
WITHOUT_CLASSIFICATION	unsigned char
WITHOUT_CLASSIFICATION	long, little-endian
WITHOUT_CLASSIFICATION	long, big-endian
WITHOUT_CLASSIFICATION	unsigned int, native
WITHOUT_CLASSIFICATION	int, native
WITHOUT_CLASSIFICATION	64-bit number, native (as fixnum)
WITHOUT_CLASSIFICATION	How many occurrences of 'type' we want
WITHOUT_CLASSIFICATION	See if we have a converter for the job...
WITHOUT_CLASSIFICATION	Otherwise the unpack should be here...
WITHOUT_CLASSIFICATION	Possible Checksum Byte
WITHOUT_CLASSIFICATION	obtain a
WITHOUT_CLASSIFICATION	obtain b
WITHOUT_CLASSIFICATION	obtain c
WITHOUT_CLASSIFICATION	obtain d
WITHOUT_CLASSIFICATION	encode.limit() -
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	4
WITHOUT_CLASSIFICATION	5
WITHOUT_CLASSIFICATION	6
WITHOUT_CLASSIFICATION	7
WITHOUT_CLASSIFICATION	Skip all whitespace in pack format string
WITHOUT_CLASSIFICATION	Skip embedded comments in pack format string
WITHOUT_CLASSIFICATION	In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.
WITHOUT_CLASSIFICATION	normal exit, this should be faster than a test at each iterations for string with more than about 40 char
WITHOUT_CLASSIFICATION	We encountered '\0' when were reading the buffer above, increment the number of read bytes.
WITHOUT_CLASSIFICATION	MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.
WITHOUT_CLASSIFICATION	Determine how many of type are needed (default: 1)
WITHOUT_CLASSIFICATION	'Z' adds extra null pad (versus 'a')
WITHOUT_CLASSIFICATION	if the low bit is set set the high bit of the result
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8, we are not on a byte boundary shift the byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	do some padding, I don't understand the padding strategy
WITHOUT_CLASSIFICATION	we filled up current byte; append it and create next one
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8, we are not on a byte boundary
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	we don't deal with negatives.
WITHOUT_CLASSIFICATION	populate commandline with NG-provided stuff
WITHOUT_CLASSIFICATION	are we recursing?
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	default PidGetter
WITHOUT_CLASSIFICATION	ignore and try windows version
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	try both
WITHOUT_CLASSIFICATION	just unix
WITHOUT_CLASSIFICATION	just windows
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	CON: popen is a case where I think we should just always shell out.
WITHOUT_CLASSIFICATION	single string command, pass to sh to expand wildcards
WITHOUT_CLASSIFICATION	direct invocation of the command
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.
WITHOUT_CLASSIFICATION	ignore, we're on the way out
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	popen caller wants to be able to write, provide subprocess out directly
WITHOUT_CLASSIFICATION	no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	execute command with sh -c this does shell expansion of wildcards
WITHOUT_CLASSIFICATION	We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".
WITHOUT_CLASSIFICATION	we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process
WITHOUT_CLASSIFICATION	The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!
WITHOUT_CLASSIFICATION	Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.
WITHOUT_CLASSIFICATION	Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.
WITHOUT_CLASSIFICATION	Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.
WITHOUT_CLASSIFICATION	sequential
WITHOUT_CLASSIFICATION	reverse the entire area of the array selected if it's reversed.
WITHOUT_CLASSIFICATION	do median of 7 if the array is over 200 elements.
WITHOUT_CLASSIFICATION	if it's less than 200 do median of 3
WITHOUT_CLASSIFICATION	SignalFacade
WITHOUT_CLASSIFICATION	this is the order in which MRI does these two tests
WITHOUT_CLASSIFICATION	this is the order in which MRI does these tests
WITHOUT_CLASSIFICATION	basically just forcing a TypeError here to match MRI
WITHOUT_CLASSIFICATION	not saving DFS instance, as it will only be used once (at most) per call
WITHOUT_CLASSIFICATION	Args
WITHOUT_CLASSIFICATION	static methods only
WITHOUT_CLASSIFICATION	System.err.println(" calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.
WITHOUT_CLASSIFICATION	last index (+1) accessed by next() last index (+1) accessed by get()
WITHOUT_CLASSIFICATION	Special form of sprintf that returns a RubyString and handles tainted strings correctly.
WITHOUT_CLASSIFICATION	Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.
WITHOUT_CLASSIFICATION	MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )
WITHOUT_CLASSIFICATION	let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])
WITHOUT_CLASSIFICATION	'd' and 'i' are the same
WITHOUT_CLASSIFICATION	'u' with space or plus flags is same as 'd'
WITHOUT_CLASSIFICATION	We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).
WITHOUT_CLASSIFICATION	skip '-' in bytes, will add where appropriate
WITHOUT_CLASSIFICATION	..
WITHOUT_CLASSIFICATION	the 1 is for the stripped sign char
WITHOUT_CLASSIFICATION	FIXME: what is correct 'recv' argument? (this does produce the desired behavior)
WITHOUT_CLASSIFICATION	gotta have at least a zero...
WITHOUT_CLASSIFICATION	OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.
WITHOUT_CLASSIFICATION	intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	intDigits = 1;
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong/reading c=" + data[s]);
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong/converted c=" + c);
WITHOUT_CLASSIFICATION	intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	intDigits = 1;
WITHOUT_CLASSIFICATION	precision for G/g includes integer digits
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	deal with length/width
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05
WITHOUT_CLASSIFICATION	'.' is printed
WITHOUT_CLASSIFICATION	all precision numebers printed
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	decimal form, like (but not just like!) 'f'
WITHOUT_CLASSIFICATION	digits array shifted, update all
WITHOUT_CLASSIFICATION	will have a trailing '.' g fills trailing zeroes if #
WITHOUT_CLASSIFICATION	s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	digits arr shifted, update all
WITHOUT_CLASSIFICATION	(1|intlen).prec
WITHOUT_CLASSIFICATION	(1|intlen)
WITHOUT_CLASSIFICATION	will have a trailing '.'
WITHOUT_CLASSIFICATION	fill up the rest with zeroes
WITHOUT_CLASSIFICATION	System.err.println(" main/len=" + len);
WITHOUT_CLASSIFICATION	5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	'.'
WITHOUT_CLASSIFICATION	equivalent to MRI case '\0':
WITHOUT_CLASSIFICATION	'.' and all precision digits printed
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	dangling '%' char
WITHOUT_CLASSIFICATION	main while loop (offset < length)
WITHOUT_CLASSIFICATION	debugging code, keeping for now
WITHOUT_CLASSIFICATION	MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do
WITHOUT_CLASSIFICATION	"%.0f" % 0.99
WITHOUT_CLASSIFICATION	limit the length of negatives if possible (also faster)
WITHOUT_CLASSIFICATION	negative values
WITHOUT_CLASSIFICATION	calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.
WITHOUT_CLASSIFICATION	relatively cheap test for 32-bit values
WITHOUT_CLASSIFICATION	no such luck...
WITHOUT_CLASSIFICATION	ok, now it gets expensive...
WITHOUT_CLASSIFICATION	go through negated powers of 32 until we find one small enough
WITHOUT_CLASSIFICATION	add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...
WITHOUT_CLASSIFICATION	constant vector a
WITHOUT_CLASSIFICATION	most significant w-r bits
WITHOUT_CLASSIFICATION	least significant r bits
WITHOUT_CLASSIFICATION	state[j] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	MSB is 1; assuring non-zero initial array
WITHOUT_CLASSIFICATION	Tempering
WITHOUT_CLASSIFICATION	MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.
WITHOUT_CLASSIFICATION	System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	\v
WITHOUT_CLASSIFICATION	System.err.println("getSign()");
WITHOUT_CLASSIFICATION	System.err.println(" getSign/" + sign);
WITHOUT_CLASSIFICATION	System.err.println("figureOutBase()/base=" + base);
WITHOUT_CLASSIFICATION	System.err.println(" figureOutBase/base=" + base);
WITHOUT_CLASSIFICATION	System.err.println("calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	System.err.println(" stringToLong=" + val);
WITHOUT_CLASSIFICATION	no number
WITHOUT_CLASSIFICATION	trailing garbage
WITHOUT_CLASSIFICATION	System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);
WITHOUT_CLASSIFICATION	it was not found at all!
WITHOUT_CLASSIFICATION	can be overridden to be informed when objects are removed
WITHOUT_CLASSIFICATION	we reached the end of a list
WITHOUT_CLASSIFICATION	goto next bucket
WITHOUT_CLASSIFICATION	we reached the end
WITHOUT_CLASSIFICATION	entry is the first element of this bucket
WITHOUT_CLASSIFICATION	states
WITHOUT_CLASSIFICATION	remove leading whitespace (includes _ for lax) get sign, if any
WITHOUT_CLASSIFICATION	optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible
WITHOUT_CLASSIFICATION	fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed
WITHOUT_CLASSIFICATION	drop through for sign
WITHOUT_CLASSIFICATION	switch will use this if we have to go back the slow way
WITHOUT_CLASSIFICATION	drop through for non-strict digits
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	no digits, go calc (will return +/- 0.0 for lax)
WITHOUT_CLASSIFICATION	ignore leading zeroes
WITHOUT_CLASSIFICATION	just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).
WITHOUT_CLASSIFICATION	ok, got a non-zero, have to own up to our horded zeroes
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	oh, well, it was worth a try. go let Double/FloatingDecimal handle it
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	end of parseable data, go to calc
WITHOUT_CLASSIFICATION	end of parseable data, go to calc
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	first non_underscore char must be digit
WITHOUT_CLASSIFICATION	no dec digits, end of parseable data, go to calc
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	difficult case, send to Double/FloatingDecimal
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	lax (str.to_f) allows underscores between e/E and sign
WITHOUT_CLASSIFICATION	switch for no exponent, so drop through for calculation
WITHOUT_CLASSIFICATION	switch for no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...
WITHOUT_CLASSIFICATION	no digits, error
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	first char must be digit
WITHOUT_CLASSIFICATION	no dec digits after '.', error for strict
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	Copy out any buffered bytes
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)
WITHOUT_CLASSIFICATION	Zlib behavior: negative win_bits means no header and no checksum.
WITHOUT_CLASSIFICATION	rb_enc_mbclen
WITHOUT_CLASSIFICATION	rb_enc_precise_mbclen
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	arg cannot be negative
WITHOUT_CLASSIFICATION	NoFunctionalitySignalFacade
WITHOUT_CLASSIFICATION	Change visibility so others can see it
WITHOUT_CLASSIFICATION	could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	strip off "_dot_rb" for .rb files
WITHOUT_CLASSIFICATION	Makes sure the key is not already in the hashtable.
WITHOUT_CLASSIFICATION	Rehash the table if the threshold is exceeded
WITHOUT_CLASSIFICATION	Creates the new entry.
WITHOUT_CLASSIFICATION	next entry to return current slot current entry
WITHOUT_CLASSIFICATION	advance to first entry
WITHOUT_CLASSIFICATION	The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.
WITHOUT_CLASSIFICATION	package-protected
WITHOUT_CLASSIFICATION	raw file URL, just open directly
WITHOUT_CLASSIFICATION	We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	if refcount is at or below zero, we're no longer valid
WITHOUT_CLASSIFICATION	if channel is already closed, we're no longer valid
WITHOUT_CLASSIFICATION	otherwise decrement and possibly close as normal
WITHOUT_CLASSIFICATION	r/w buffer are we reading or writing?
WITHOUT_CLASSIFICATION	this constructor is used by fdopen, so we don't increment descriptor ref count
WITHOUT_CLASSIFICATION	unread back
WITHOUT_CLASSIFICATION	iterate over remainder of buffer until we find a match
WITHOUT_CLASSIFICATION	terminate and advance buffer when we find our char
WITHOUT_CLASSIFICATION	no match, append remainder of buffer and continue with next block
WITHOUT_CLASSIFICATION	found a match above, check if remaining separator characters match, appending as we go
WITHOUT_CLASSIFICATION	Check file size - special files in /proc have zero size and need to be handled by the generic read path.
WITHOUT_CLASSIFICATION	Copy any buffered data (including ungetc byte)
WITHOUT_CLASSIFICATION	Now read unbuffered directly from the file
WITHOUT_CLASSIFICATION	Copy out any buffered bytes
WITHOUT_CLASSIFICATION	Need to clamp source (buffer) size to avoid overrun
WITHOUT_CLASSIFICATION	not closing from finalize
WITHOUT_CLASSIFICATION	clear runtime so it doesn't get stuck in memory (JRUBY-2933)
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	Don't bother
WITHOUT_CLASSIFICATION	Don't bother
WITHOUT_CLASSIFICATION	For Sockets, only write as much as will fit.
WITHOUT_CLASSIFICATION	Correct position for read / write buffering (we could invalidate, but expensive)
WITHOUT_CLASSIFICATION	Adjust for buffered data
WITHOUT_CLASSIFICATION	for SEEK_CUR, need to adjust for buffered data
WITHOUT_CLASSIFICATION	libc flushes writes on any read from the actual file, so we flush here
WITHOUT_CLASSIFICATION	we have read ahead, and need to back up
WITHOUT_CLASSIFICATION	128K seems to be the minimum at which the stat+seek is faster than reallocation
WITHOUT_CLASSIFICATION	limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	Copy what is in the buffer, if there is some buffered data
WITHOUT_CLASSIFICATION	Avoid double-copying for reads that are larger than the buffer size
WITHOUT_CLASSIFICATION	Complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	Complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.
WITHOUT_CLASSIFICATION	We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.
WITHOUT_CLASSIFICATION	Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	Doesn't fit in buffer. Write immediately. ensure nothing left to write
WITHOUT_CLASSIFICATION	truncate can't lengthen files, so we save position, seek/write, and go back
WITHOUT_CLASSIFICATION	how far ahead we are when reading
WITHOUT_CLASSIFICATION	if the read buffer is ahead, back up
WITHOUT_CLASSIFICATION	close without removing from finalizers
WITHOUT_CLASSIFICATION	putting a bit back, so we're not at EOF anymore
WITHOUT_CLASSIFICATION	save the ungot
WITHOUT_CLASSIFICATION	otherwise, we try an unbuffered read to get whatever's available
WITHOUT_CLASSIFICATION	ignore this; select() will set the correct mode when it is finished
WITHOUT_CLASSIFICATION	flush first
WITHOUT_CLASSIFICATION	Wake up any channels that became unblocked
WITHOUT_CLASSIFICATION	Register any new blocking I/O requests
WITHOUT_CLASSIFICATION	Now clear out any previously selected channels
WITHOUT_CLASSIFICATION	Wait for I/O on any channel
WITHOUT_CLASSIFICATION	Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'
WITHOUT_CLASSIFICATION	Java requires "w" for creating a file that does not exist
WITHOUT_CLASSIFICATION	seek to force underlying buffer to flush
WITHOUT_CLASSIFICATION	seek to force read buffer to invalidate
WITHOUT_CLASSIFICATION	result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);
WITHOUT_CLASSIFICATION	MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	make sure the pipe stream is set to null
WITHOUT_CLASSIFICATION	make sure the main stream is set to null
WITHOUT_CLASSIFICATION	first try our custom-generated Unsafe
WITHOUT_CLASSIFICATION	then try Sun's Unsafe
WITHOUT_CLASSIFICATION	if we get here, the class and field exist; construct our Unsafe impl that calls it directly
WITHOUT_CLASSIFICATION	else leave it null
WITHOUT_CLASSIFICATION	TypeMatcher
WITHOUT_CLASSIFICATION	This is now needed, since module Java isn't in by default
WITHOUT_CLASSIFICATION	Iterate over the RubyHash keySet, simultaneously iterating over the values()
WITHOUT_CLASSIFICATION	Get the value from the map via the key
WITHOUT_CLASSIFICATION	Get the value from the map via the values iterator
WITHOUT_CLASSIFICATION	Check the 2 values obtained via different means
WITHOUT_CLASSIFICATION	Set a value in the RubyHash
WITHOUT_CLASSIFICATION	Set a value in the RubyHash
WITHOUT_CLASSIFICATION	Check the entry.setValue values come back out ok
WITHOUT_CLASSIFICATION	If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.
WITHOUT_CLASSIFICATION	assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));
WITHOUT_CLASSIFICATION	Init
WITHOUT_CLASSIFICATION	Block
WITHOUT_CLASSIFICATION	Copy constructor
WITHOUT_CLASSIFICATION	presumably this require should fail
WITHOUT_CLASSIFICATION	JRUBY-646 presumably this require should fail
WITHOUT_CLASSIFICATION	Test that requiring a normal Java class raises an error (JRUBY-3214
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).
WITHOUT_CLASSIFICATION	load should work several times in a row
WITHOUT_CLASSIFICATION	reset the $loadTestvar
WITHOUT_CLASSIFICATION	call throwException via JRuby
WITHOUT_CLASSIFICATION	Notify the calling thread that we're about to go to sleep the first time
WITHOUT_CLASSIFICATION	wait for the go signal
WITHOUT_CLASSIFICATION	run ten separate calls into Ruby, with delay and explicit GC
WITHOUT_CLASSIFICATION	wait until thread has initialized
WITHOUT_CLASSIFICATION	notify thread to proceed
WITHOUT_CLASSIFICATION	wait until thread has completed
WITHOUT_CLASSIFICATION	we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.
WITHOUT_CLASSIFICATION	if any exceptions were raised, we fail
WITHOUT_CLASSIFICATION	there should only be one more thread in thread group than before we started
WITHOUT_CLASSIFICATION	construct a new cache with thread's classloader and no limit
WITHOUT_CLASSIFICATION	Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();
WITHOUT_CLASSIFICATION	assertSame(script1, script2);
WITHOUT_CLASSIFICATION	void methods should work
WITHOUT_CLASSIFICATION	methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649
WITHOUT_CLASSIFICATION	Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.
WITHOUT_CLASSIFICATION	Without a flush Ant will miss some of our output
WITHOUT_CLASSIFICATION	assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());
WITHOUT_CLASSIFICATION	int n = 10;
WITHOUT_CLASSIFICATION	there might be more test classes in a single file, so we iterate over them
WITHOUT_CLASSIFICATION	No ClassCastException!
WITHOUT_CLASSIFICATION	value equality
WITHOUT_CLASSIFICATION	identity equality
WITHOUT_CLASSIFICATION	bench straight-up integer fib(30)
WITHOUT_CLASSIFICATION	bench Integer fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fully-boxed fib
WITHOUT_CLASSIFICATION	bench fixnum-boxed fib
WITHOUT_CLASSIFICATION	bench straight-up long fib(30)
WITHOUT_CLASSIFICATION	bench Long fib
WITHOUT_CLASSIFICATION	skip this one, probably no 'ls' (windows)
WITHOUT_CLASSIFICATION	start off with a neutral parent
WITHOUT_CLASSIFICATION	public class Hello { public static String getMessage() { return "....."; } }
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.
WITHOUT_CLASSIFICATION	We are creating a new IO object that shares the same IOHandler (and fileno).
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:
WITHOUT_CLASSIFICATION	Force the client socket to be blocking
WITHOUT_CLASSIFICATION	Additional context surrounding tokens that both the lexer and grammar use.
WITHOUT_CLASSIFICATION	Enebo: c can never be antrhign but '.' Why did I put this here?
WITHOUT_CLASSIFICATION	save package module as ivar in parent, and add method to parent so we don't have to come back here.
WITHOUT_CLASSIFICATION	[C,C] [C, boolean]
WITHOUT_CLASSIFICATION	Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)
WITHOUT_CLASSIFICATION	ignore; job was cancelled FIXME: is this ok?
WITHOUT_CLASSIFICATION	check arity checkArity(mv, scope);
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.
WITHOUT_CLASSIFICATION	Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.
WITHOUT_CLASSIFICATION	proxy is under construction, building thread can safely read non-volatile value
WITHOUT_CLASSIFICATION	it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,
WITHOUT_CLASSIFICATION	construct the proxy method
WITHOUT_CLASSIFICATION	line 159 "-" %token constants
WITHOUT_CLASSIFICATION	+++ Helper Methods
WITHOUT_CLASSIFICATION	line 152 "-" %token constants
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	+++ Helper Methods
WITHOUT_CLASSIFICATION	We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.
WITHOUT_CLASSIFICATION	let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.
WITHOUT_CLASSIFICATION	TODO: make it 16 now ? MUST be power of 2!
WITHOUT_CLASSIFICATION	check visibility dup method
WITHOUT_CLASSIFICATION	&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	unsigned int, native unsigned long, native
WITHOUT_CLASSIFICATION	need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it
WITHOUT_CLASSIFICATION	MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	switch for no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem
WITHOUT_CLASSIFICATION	captures begin and end are used when not groups defined source string
WITHOUT_CLASSIFICATION	INSTANCE VARIABLE RUBY METHODS
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.
WITHOUT_CLASSIFICATION	This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.
WITHOUT_CLASSIFICATION	Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method
WITHOUT_CLASSIFICATION	Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	If a line is followed by a blank line put it back.
WITHOUT_CLASSIFICATION	$>: default output handle
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments
WITHOUT_CLASSIFICATION	re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	colon3, assign in Object
WITHOUT_CLASSIFICATION	if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass
WITHOUT_CLASSIFICATION	Wire up Function#call(args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	Decrease value to hit upper range.
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	"else" body
WITHOUT_CLASSIFICATION	done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done
WITHOUT_CLASSIFICATION	read-volatile
WITHOUT_CLASSIFICATION	$+: string matches last paren.
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out
WITHOUT_CLASSIFICATION	10!
WITHOUT_CLASSIFICATION	case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done
WITHOUT_CLASSIFICATION	Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.
WITHOUT_CLASSIFICATION	all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	first, iterate over all required args
WITHOUT_CLASSIFICATION	Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.
WITHOUT_CLASSIFICATION	Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	yyLhs 496
WITHOUT_CLASSIFICATION	initial size state stack value stack current input #tokens to shift
WITHOUT_CLASSIFICATION	line 449
WITHOUT_CLASSIFICATION	line 495
WITHOUT_CLASSIFICATION	Management/monitoring
WITHOUT_CLASSIFICATION	if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done
WITHOUT_CLASSIFICATION	14!
WITHOUT_CLASSIFICATION	Process any set of annotations No supported options
WITHOUT_CLASSIFICATION	add to the jitted methods set
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done
WITHOUT_CLASSIFICATION	Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run
WITHOUT_CLASSIFICATION	The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	Atomic integers for symbol and method IDs
WITHOUT_CLASSIFICATION	18!
WITHOUT_CLASSIFICATION	If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	set up a local IRuby variable
WITHOUT_CLASSIFICATION	NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction
WITHOUT_CLASSIFICATION	Can't support the rest with Java
WITHOUT_CLASSIFICATION	An atomic long for generating DynamicMethod serial numbers
WITHOUT_CLASSIFICATION	MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.
WITHOUT_CLASSIFICATION	22!
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	Build a new class and add it to the current scope (could be a script / module / class)
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	---------- These methods below are used during compile-time optimizations -------
WITHOUT_CLASSIFICATION	AF_INET
WITHOUT_CLASSIFICATION	Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.
WITHOUT_CLASSIFICATION	Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes
WITHOUT_CLASSIFICATION	BASE64
WITHOUT_CLASSIFICATION	note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy
WITHOUT_CLASSIFICATION	getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.
WITHOUT_CLASSIFICATION	IRubyObject protocol = args[4];
WITHOUT_CLASSIFICATION	promise to implement three to N with block
WITHOUT_CLASSIFICATION	Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.
WITHOUT_CLASSIFICATION	carriage return
WITHOUT_CLASSIFICATION	yyDgoto 136
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	String construction routines by NOT byte[] buffer and making the target String shared
WITHOUT_CLASSIFICATION	insert all nodes in sequence, hash them in the final instruction KEY
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions
WITHOUT_CLASSIFICATION	otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.
WITHOUT_CLASSIFICATION	implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing
WITHOUT_CLASSIFICATION	CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks
WITHOUT_CLASSIFICATION	check arity in the variable-arity version
WITHOUT_CLASSIFICATION	leave it null and fall back on our normal invocation logic
WITHOUT_CLASSIFICATION	Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Need to initialize
WITHOUT_CLASSIFICATION	Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	deal with case when "other" is not a string
WITHOUT_CLASSIFICATION	All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	in method body with no containing loop, issue jump error load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	store argument count information into scope
WITHOUT_CLASSIFICATION	the load method is used for loading as a top-level script, and prepares appropriate scoping around the code
WITHOUT_CLASSIFICATION	First, build assignments for specific named arguments
WITHOUT_CLASSIFICATION	public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	read
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	it doesn't handle special cases
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	bang: true, no match, no substitution
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	invoke static __file__
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	fall back on empty env when security disallows environment var access (like in an applet)
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	nothing else to here - the module version will be included in the class.
WITHOUT_CLASSIFICATION	JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:
WITHOUT_CLASSIFICATION	Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits
WITHOUT_CLASSIFICATION	We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	Assign the values.
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	No hex value after the 'x'.
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	6:tags 16:addr 1:eos
WITHOUT_CLASSIFICATION	Let m be the exact digits precision in an earlier! loop
WITHOUT_CLASSIFICATION	For 'foo()'. Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	Label for the start of the method Label for the end of the method
WITHOUT_CLASSIFICATION	comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...
WITHOUT_CLASSIFICATION	FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	all done with lookup attempts, release monitor
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl
WITHOUT_CLASSIFICATION	Construct local variables based on parameter names passed in
WITHOUT_CLASSIFICATION	Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.
WITHOUT_CLASSIFICATION	file given, use it and force it into binding
WITHOUT_CLASSIFICATION	ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it
WITHOUT_CLASSIFICATION	return sqrt(squarD) with precision of rootMC
WITHOUT_CLASSIFICATION	A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	Get a new label using the provided label prefix
WITHOUT_CLASSIFICATION	normal exit, perform finally and return
WITHOUT_CLASSIFICATION	coerce arguments
WITHOUT_CLASSIFICATION	0.0 is ok float range inverted float range? NaN +infinity -infinity
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.
WITHOUT_CLASSIFICATION	ignore backslashed spaces in %w
WITHOUT_CLASSIFICATION	Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".
WITHOUT_CLASSIFICATION	no binding given, use 0 for both
WITHOUT_CLASSIFICATION	<=> may return nil in many circumstances, e.g. 3 <=> NaN
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	Always use "GMT" since that's required by Java API.
WITHOUT_CLASSIFICATION	ignore if it's not a global var
WITHOUT_CLASSIFICATION	The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;
WITHOUT_CLASSIFICATION	Remaining arguments are for the script itself
WITHOUT_CLASSIFICATION	arg grouping, use slower arg walking logic
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.
WITHOUT_CLASSIFICATION	?l | boolean | True if file1 exists and is a symbolic link
WITHOUT_CLASSIFICATION	This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.
WITHOUT_CLASSIFICATION	Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	specific arity
WITHOUT_CLASSIFICATION	In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.
WITHOUT_CLASSIFICATION	?w | boolean | True if file1 exists and is writable by effective uid/gid
WITHOUT_CLASSIFICATION	COMMON VARIABLE METHODS
WITHOUT_CLASSIFICATION	@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	let RescuedBlock continue
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	================ Utility Methods ================
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	write-volatile
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	Add property name aliases
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	================ Instance Methods ================
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	INTERNAL VARIABLE METHODS
WITHOUT_CLASSIFICATION	backspace
WITHOUT_CLASSIFICATION	yySindex 889
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	yyGindex 136
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();
WITHOUT_CLASSIFICATION	interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();
WITHOUT_CLASSIFICATION	Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable
WITHOUT_CLASSIFICATION	We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	The name of this source (e.g. a filename: foo.rb)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact
WITHOUT_CLASSIFICATION	note that addMethod now does its own put, so any change made to functionality here should be made there as well
WITHOUT_CLASSIFICATION	Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }
WITHOUT_CLASSIFICATION	empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	No seconds, just yield
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	if it's an inner class and it's not public, we can't access it; skip population of declared elements
WITHOUT_CLASSIFICATION	getFoo => foo getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.
WITHOUT_CLASSIFICATION	this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	get "self"
WITHOUT_CLASSIFICATION	No timeout in critical section
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	only public methods
WITHOUT_CLASSIFICATION	If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	First try to use drive letter from supplied dir value, then try current work dir.
WITHOUT_CLASSIFICATION	JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.
WITHOUT_CLASSIFICATION	generate a real method signature for the method, with to/from coercions
WITHOUT_CLASSIFICATION	block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry
WITHOUT_CLASSIFICATION	Add aliases in Type::, NativeType:: and FFI::TYPE_
WITHOUT_CLASSIFICATION	Create constants for flock
WITHOUT_CLASSIFICATION	double-testing args.length here, but it avoids duplicating the proc-setup code in two places
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	Done with closure compilation
WITHOUT_CLASSIFICATION	snapshot of contents of directory current position in directory
WITHOUT_CLASSIFICATION	Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.
WITHOUT_CLASSIFICATION	explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	---------- Public fields, methods ---------
WITHOUT_CLASSIFICATION	A specific version was requested - use as is for search
WITHOUT_CLASSIFICATION	zero args, no block; do nothing
WITHOUT_CLASSIFICATION	we need to collect all methods, though we'll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	Store each line into this list if not null.
WITHOUT_CLASSIFICATION	Portion of line right after beginning marker
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	If an IO exception occurs (something odd, but possible) A directory may return null.
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	finally with no exception
WITHOUT_CLASSIFICATION	Now, for all variables used by 'i' mark them live before 'i'
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.
WITHOUT_CLASSIFICATION	This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF
WITHOUT_CLASSIFICATION	In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway
WITHOUT_CLASSIFICATION	rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);
WITHOUT_CLASSIFICATION	Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.
WITHOUT_CLASSIFICATION	CONSTANT API METHODS
WITHOUT_CLASSIFICATION	create the default thread group
WITHOUT_CLASSIFICATION	range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================
WITHOUT_CLASSIFICATION	LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	Used for the 'redo' command
WITHOUT_CLASSIFICATION	retuns null when not found to avoid unnecessary getRuntime().getNil() call
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	\cX, \c\M-X
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	line 286
WITHOUT_CLASSIFICATION	line 476
WITHOUT_CLASSIFICATION	line 513
WITHOUT_CLASSIFICATION	line 530
WITHOUT_CLASSIFICATION	line 533
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 551
WITHOUT_CLASSIFICATION	end loop
WITHOUT_CLASSIFICATION	MRI behavior: we don't print errno for actual Errno errors
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!
WITHOUT_CLASSIFICATION	fields should really be an immutable map as it is never modified after construction
WITHOUT_CLASSIFICATION	load self object as IRubyObject, for recv param
WITHOUT_CLASSIFICATION	TODO: varargs?
WITHOUT_CLASSIFICATION	If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated
WITHOUT_CLASSIFICATION	We only want IO objects with valid streams (better to error now).
WITHOUT_CLASSIFICATION	produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	yyLhs 542
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	MRI has extra pointer which makes our code look a little bit more strange in comparison
WITHOUT_CLASSIFICATION	Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.
WITHOUT_CLASSIFICATION	tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.
WITHOUT_CLASSIFICATION	What is \v in C? case '\v': c2 = 'v'; break;
WITHOUT_CLASSIFICATION	Consider Thread aspects of this
WITHOUT_CLASSIFICATION	Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.
WITHOUT_CLASSIFICATION	An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.
WITHOUT_CLASSIFICATION	line 572
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 625
WITHOUT_CLASSIFICATION	line 649
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 723
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 745
WITHOUT_CLASSIFICATION	line 766
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	line 800
WITHOUT_CLASSIFICATION	line 812
WITHOUT_CLASSIFICATION	line 827
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 864
WITHOUT_CLASSIFICATION	line 886
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	line 911
WITHOUT_CLASSIFICATION	line 929
WITHOUT_CLASSIFICATION	line 952
WITHOUT_CLASSIFICATION	line 970
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 991
WITHOUT_CLASSIFICATION	line 1011
WITHOUT_CLASSIFICATION	line 1026
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	line 1067
WITHOUT_CLASSIFICATION	line 1085
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	line 1145
WITHOUT_CLASSIFICATION	line 1169
WITHOUT_CLASSIFICATION	line 1201
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	line 1229
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 1287
WITHOUT_CLASSIFICATION	line 1293
WITHOUT_CLASSIFICATION	line 1307
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1325
WITHOUT_CLASSIFICATION	line 1363
WITHOUT_CLASSIFICATION	line 1398
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1473
WITHOUT_CLASSIFICATION	line 1492
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1523
WITHOUT_CLASSIFICATION	line 1562
WITHOUT_CLASSIFICATION	line 1582
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	line 1620
WITHOUT_CLASSIFICATION	line 1635
WITHOUT_CLASSIFICATION	line 1652
WITHOUT_CLASSIFICATION	line 1681
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1755
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	line 1789
WITHOUT_CLASSIFICATION	ACTIONS_END
WITHOUT_CLASSIFICATION	ACTIONS_END
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	ignore, no debugger present
WITHOUT_CLASSIFICATION	FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.
WITHOUT_CLASSIFICATION	line 313
WITHOUT_CLASSIFICATION	line 339
WITHOUT_CLASSIFICATION	line 361
WITHOUT_CLASSIFICATION	line 413
WITHOUT_CLASSIFICATION	line 451
WITHOUT_CLASSIFICATION	line 472
WITHOUT_CLASSIFICATION	line 500
WITHOUT_CLASSIFICATION	line 515
WITHOUT_CLASSIFICATION	line 555
WITHOUT_CLASSIFICATION	line 582
WITHOUT_CLASSIFICATION	line 619
WITHOUT_CLASSIFICATION	line 636
WITHOUT_CLASSIFICATION	line 669
WITHOUT_CLASSIFICATION	line 703
WITHOUT_CLASSIFICATION	line 776
WITHOUT_CLASSIFICATION	line 814
WITHOUT_CLASSIFICATION	line 823
WITHOUT_CLASSIFICATION	line 854
WITHOUT_CLASSIFICATION	line 872
WITHOUT_CLASSIFICATION	line 905
WITHOUT_CLASSIFICATION	line 925
WITHOUT_CLASSIFICATION	line 958
WITHOUT_CLASSIFICATION	line 992
WITHOUT_CLASSIFICATION	line 1047
WITHOUT_CLASSIFICATION	line 1072
WITHOUT_CLASSIFICATION	line 1081
WITHOUT_CLASSIFICATION	line 1108
WITHOUT_CLASSIFICATION	line 1136
WITHOUT_CLASSIFICATION	line 1168
WITHOUT_CLASSIFICATION	line 1192
WITHOUT_CLASSIFICATION	line 1241
WITHOUT_CLASSIFICATION	line 1267
WITHOUT_CLASSIFICATION	line 1286
WITHOUT_CLASSIFICATION	line 1301
WITHOUT_CLASSIFICATION	line 1314
WITHOUT_CLASSIFICATION	line 1333
WITHOUT_CLASSIFICATION	line 1362
WITHOUT_CLASSIFICATION	line 1395
WITHOUT_CLASSIFICATION	line 1420
WITHOUT_CLASSIFICATION	line 1439
WITHOUT_CLASSIFICATION	line 1476
WITHOUT_CLASSIFICATION	line 1535
WITHOUT_CLASSIFICATION	line 1588
WITHOUT_CLASSIFICATION	line 1618
WITHOUT_CLASSIFICATION	line 1643
WITHOUT_CLASSIFICATION	line 1669
WITHOUT_CLASSIFICATION	line 1728
WITHOUT_CLASSIFICATION	line 1753
WITHOUT_CLASSIFICATION	line 1779
WITHOUT_CLASSIFICATION	line 1794
WITHOUT_CLASSIFICATION	line 1812
WITHOUT_CLASSIFICATION	line 1837
WITHOUT_CLASSIFICATION	line 1895
WITHOUT_CLASSIFICATION	line 1925
WITHOUT_CLASSIFICATION	line 1950
WITHOUT_CLASSIFICATION	line 1992
WITHOUT_CLASSIFICATION	line 2014
WITHOUT_CLASSIFICATION	Whether this scope is used as the "argument scope" for e.g. zsuper
WITHOUT_CLASSIFICATION	If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	tc under method self under method name args
WITHOUT_CLASSIFICATION	allow it to bubble up
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	Check for a builtin first.
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e
WITHOUT_CLASSIFICATION	Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local
WITHOUT_CLASSIFICATION	This method handles '' patterns and delegates to fnmatch_helper for the main work.
WITHOUT_CLASSIFICATION	Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar
WITHOUT_CLASSIFICATION	double precision, native double precision, native
WITHOUT_CLASSIFICATION	64-bit number, native (as bignum)
WITHOUT_CLASSIFICATION	Next indicates to decode using native encoding format
WITHOUT_CLASSIFICATION	calculate based on a, b, c and d
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	MRI behavior: for 'Q', do not add trailing nils
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	an empirically derived rule: precision applies to significand length, irrespective of exponent
WITHOUT_CLASSIFICATION	an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form
WITHOUT_CLASSIFICATION	in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	MRI behavior: validate only the unnumbered arguments
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	call chmod after we created the RandomAccesFile because otherwise, the file could be read-only
WITHOUT_CLASSIFICATION	attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.
WITHOUT_CLASSIFICATION	When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M
WITHOUT_CLASSIFICATION	If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file
WITHOUT_CLASSIFICATION	Cannot discern the total read length - allocate at least enough for the buffered data
WITHOUT_CLASSIFICATION	Copy what is in the buffer, if there is some buffered data
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	already have some bytes buffered, just return those
WITHOUT_CLASSIFICATION	reset buffer
WITHOUT_CLASSIFICATION	Synchronize and re-check to avoid creating more than one Selector per provider
WITHOUT_CLASSIFICATION	TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	Is there something built into JRuby to do this?
WITHOUT_CLASSIFICATION	Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);
WITHOUT_CLASSIFICATION	value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);
WITHOUT_CLASSIFICATION	Uncomment the "puts" lines if you want to see more detail
WITHOUT_CLASSIFICATION	Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	change the thread context to include the class
DEFECT	FIXME: This is a system error based on errno
DEFECT	TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].
DEFECT	TODO: make sure it's really safe to not to copy it
DEFECT	TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.
DEFECT	FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe
DEFECT	dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812
DEFECT	FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.
DEFECT	TODO: need to isolate the "current" thread from class creation
DEFECT	FIXME: not correct exception
DEFECT	XXX actually only on windows...
DEFECT	Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?
DEFECT	FIXME can't use static; would interfere with other runtimes in the same JVM
DEFECT	TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close
DEFECT	TODO: This is an freopen in MRI, this is close, but not quite the same
DEFECT	TODO: sys fail
DEFECT	TODO: Ruby locks the string here
DEFECT	TODO: Ruby locks the string here
DEFECT	FIXME: check how ruby 1.9 handles this
DEFECT	FIXME: MRI has special case for constants here
DEFECT	FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.
DEFECT	ENEBO: Very wrong
DEFECT	ENEBO: Very wrong
DEFECT	synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code
DEFECT	FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...
DEFECT	FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.
DEFECT	TODO: full-precision remainder is 1000x slower than MRI!
DEFECT	TODO: take BigDecimal.mode into account.
DEFECT	TODO: full-precision divmod is 1000x slower than MRI!
DEFECT	TODO: proper sign
DEFECT	FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.
DEFECT	FIXME: -x flag not supported case 'x' : break;
DEFECT	FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.
DEFECT	FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);
DEFECT	FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);
DEFECT	TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";
DEFECT	TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	FIXME: this should reset to what it was before
DEFECT	FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body
DEFECT	SSS FIXME: Incorect!
DEFECT	SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.
DEFECT	SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later
DEFECT	IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!
DEFECT	Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?
DEFECT	Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?
DEFECT	Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?
DEFECT	SSS FIXME: Verify semantics of this instruction
DEFECT	The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?
DEFECT	SSS FIXME: For constant arrays, we should never get here!
DEFECT	FIXME: This is wrong
DEFECT	FIXME: may need to broaden for IPV6 IP address strings
DEFECT	XXX Wrong, but will have to do for now
DEFECT	FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error
DEFECT	FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();
DEFECT	If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).
DEFECT	FIXME: Broken but behaving
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!
DEFECT	MRI 1.8 behavior: this combination of flags is not allowed
DEFECT	FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?
DEFECT	TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.
DEFECT	This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"
DEFECT	We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff
DEFECT	Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?
DEFECT	This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.
DEFECT	FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.
DEFECT	SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!
DEFECT	TODO: full-precision remainder is 1000x slower than MRI!
DEFECT	TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";
DEFECT	FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not
DEFECT	FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body
DEFECT	zero args with block FIXME: omit args index; subtract one from normal block index
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	FIXME: Broken but behaving
DEFECT	TODO: we loose encoding information here, fix it
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	TODO: don't require pop
DEFECT	FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error
DEFECT	vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	TODO: We should use implicit nil for body, but problem (punt til later)
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here
DEFECT	TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).
WITHOUT_CLASSIFICATION	test out the optimizer:
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	| this | bean | args | raw bean |
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	astore 4 store the raw bean
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	local variables | target obj | each oldvalue |
WITHOUT_CLASSIFICATION	invokeinterface invoke Enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	putfield new value of the field
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	just decrement the lock, don't recache (we don't know which transaction won)
WITHOUT_CLASSIFICATION	decode row selection...
WITHOUT_CLASSIFICATION	disassembled state gets put in a new array (we write to cache by value!)
WITHOUT_CLASSIFICATION	again, CCS did not have such a concept; but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not JTA aware.
WITHOUT_CLASSIFICATION	CHECK
WITHOUT_CLASSIFICATION	ROW ID
WITHOUT_CLASSIFICATION	COMPOSITE-ID
WITHOUT_CLASSIFICATION	DISCRIMINATOR
WITHOUT_CLASSIFICATION	Property prop = new Property(); prop.setName("id"); prop.setPropertyAccessorName("embedded"); prop.setValue(id); entity.setIdentifierProperty(prop);
WITHOUT_CLASSIFICATION	DYNAMIC INSERT
WITHOUT_CLASSIFICATION	PERSISTER
WITHOUT_CLASSIFICATION	get meta's from <subclass>
WITHOUT_CLASSIFICATION	PROPERTIES
WITHOUT_CLASSIFICATION	PROPERTIES
WITHOUT_CLASSIFICATION	generated properties can never be insertable...
WITHOUT_CLASSIFICATION	TABLE
WITHOUT_CLASSIFICATION	by default, natural-ids are "immutable" (constant)
WITHOUT_CLASSIFICATION	( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() ).setNullable(false);
WITHOUT_CLASSIFICATION	we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself, making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result
WITHOUT_CLASSIFICATION	Build a ResultSetMappingDefinition given a containing element for the "return-XXX" elements @param resultSetElem The element containing the return definitions. @param path No clue... @param mappings The current processing state. @return The description of the mappings...
WITHOUT_CLASSIFICATION	private boolean showSql; private boolean formatSql;
WITHOUT_CLASSIFICATION	public boolean isShowSqlEnabled() { return showSql; } public boolean isFormatSqlEnabled() { return formatSql; }
WITHOUT_CLASSIFICATION	Set a custom entity resolver. This entity resolver must be set before addXXX(misc) call. Default value is {@link org.hibernate.util.DTDEntityResolver} @param entityResolver entity resolver to use
WITHOUT_CLASSIFICATION	final List extendsQueue,
WITHOUT_CLASSIFICATION	If close() is called, guarantee unbind()
WITHOUT_CLASSIFICATION	if a ThreadLocalSessionContext-bound session happens to get serialized, to be completely correct, we need to make sure that unbinding of that session occurs.
WITHOUT_CLASSIFICATION	on the inverse, it makes sense that if a ThreadLocalSessionContext- bound session then gets deserialized to go ahead and re-bind it to the ThreadLocalSessionContext session map.
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	60 second lock timeout
WITHOUT_CLASSIFICATION	OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	option.setDataVersion( NonLockingDataVersion.INSTANCE );
WITHOUT_CLASSIFICATION	do the put outside the scope of the JTA txn
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (NPEs)...
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	do the failfast put outside the scope of the JTA txn
WITHOUT_CLASSIFICATION	NOTE : evict() operates locally only (i.e., does not propogate to any other nodes in the potential cluster). This is exactly what is needed when we destroy() here; destroy() is used as part of the process of shutting down a SessionFactory; thus these removals should not be propogated
WITHOUT_CLASSIFICATION	protected RegionRootListener listener;
WITHOUT_CLASSIFICATION	Establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	If we've been blocking for the mutex, perhaps another thread has already reestablished the root. In case the node was reestablised via replication, confirm it's marked "resident" (a status which doesn't replicate)
WITHOUT_CLASSIFICATION	For pessimistic locking, we just want to toss out our ref to any old invalid root node and get the latest (may be null)
WITHOUT_CLASSIFICATION	The rest only matters for optimistic locking, where we need to establish the proper data version on the region root
WITHOUT_CLASSIFICATION	Don't hold a transactional lock for this
WITHOUT_CLASSIFICATION	Make sure the root node for the region exists and has a DataVersion that never complains
WITHOUT_CLASSIFICATION	Never evict this node
WITHOUT_CLASSIFICATION	Fix up the resident flag
WITHOUT_CLASSIFICATION	60 seconds
WITHOUT_CLASSIFICATION	We ignore minimalPutOverride. JBossCache putForExternalRead is already about as minimal as we can get; it will promptly return if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	no-op. We don't own the cache so we shouldn't stop it.
WITHOUT_CLASSIFICATION	This should only be possible if the caches are constructor injected
WITHOUT_CLASSIFICATION	We only build caches if none were passed in. Passing in caches counts as a clear statement of exactly what is wanted
WITHOUT_CLASSIFICATION	Set up the cache factory
WITHOUT_CLASSIFICATION	See if the user configured a multiplexer stack
WITHOUT_CLASSIFICATION	Default to collections sharing entity cache if there is one
WITHOUT_CLASSIFICATION	Default to sharing the entity cache if there is one
WITHOUT_CLASSIFICATION	For Timestamps, we default to a separate config
WITHOUT_CLASSIFICATION	We can't change the TM on a running cache; just check if the cache has no TM and we're OK with that
WITHOUT_CLASSIFICATION	Configure the cache to use our TM
WITHOUT_CLASSIFICATION	Make sure JBC doesn't look one up
WITHOUT_CLASSIFICATION	This method should be implemented assuming it's valid to do start/stop/start -- leave state appropriate for another start
WITHOUT_CLASSIFICATION	Make sure we don't re-release the same cache
WITHOUT_CLASSIFICATION	We use a different delegate than the non-optimistic superclass default
WITHOUT_CLASSIFICATION	Following methods we don't delegate since they have so little logic it's clearer to just implement them here
WITHOUT_CLASSIFICATION	If JBC is using INVALIDATION, we don't want to propagate changes. We use the Timestamps cache to manage invalidation
WITHOUT_CLASSIFICATION	We don't want to waste effort setting an option if JBC is already in LOCAL mode. If JBC is REPL_(A)SYNC then check if they passed an config option to disable query replication
WITHOUT_CLASSIFICATION	Don't hold the JBC node lock throughout the tx, as that prevents updates Add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit
WITHOUT_CLASSIFICATION	Double check the distributed cache
WITHOUT_CLASSIFICATION	Get an exclusive right to update JBC for this key from this node.
WITHOUT_CLASSIFICATION	We ensure ASYNC semantics (JBCACHE-1175)
WITHOUT_CLASSIFICATION	Initial load from JBC
WITHOUT_CLASSIFICATION	See if we had a 2nd invalidation from the same initial preinvalidation timestamp. If so, only increment if the new current value is an increase
WITHOUT_CLASSIFICATION	We ensure ASYNC semantics (JBCACHE-1175)
WITHOUT_CLASSIFICATION	If the workspace node has null as well, OK; if not we've been modified in a non-comparable manner, which we have to treat as us being newer
WITHOUT_CLASSIFICATION	The standard comparator types are not Serializable but are singletons
WITHOUT_CLASSIFICATION	ignore!
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	construct the cache
WITHOUT_CLASSIFICATION	local cache, so we use synchronization
WITHOUT_CLASSIFICATION	local cache, so we use synchronization
WITHOUT_CLASSIFICATION	ie. 60 seconds
WITHOUT_CLASSIFICATION	swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which hibernate sensibly lets default to minPoolSize, but we'll let users override it with the c3p0-style property if they want.
WITHOUT_CLASSIFICATION	DataSource unpooled = DataSources.unpooledDataSource(jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS));
WITHOUT_CLASSIFICATION	TRUE if the pool is borrowed from the outside, FALSE if we used to create it
WITHOUT_CLASSIFICATION	get a connection from the pool (thru DriverManager, cfr. Proxool doc)
WITHOUT_CLASSIFICATION	set the Transaction Isolation if defined
WITHOUT_CLASSIFICATION	toggle autoCommit to false if set
WITHOUT_CLASSIFICATION	return the connection
WITHOUT_CLASSIFICATION	Get the configurator files (if available)
WITHOUT_CLASSIFICATION	Default the Proxool alias setting
WITHOUT_CLASSIFICATION	Validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	Validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	Append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	Set the existing pool flag to true
WITHOUT_CLASSIFICATION	Configured using the JAXP Configurator
WITHOUT_CLASSIFICATION	Validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	Append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	Append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	Configured using the Properties File Configurator
WITHOUT_CLASSIFICATION	Remember Isolation level
WITHOUT_CLASSIFICATION	If the provider was leeching off an existing pool don't close it
WITHOUT_CLASSIFICATION	We have created the pool ourselves, so shut it down
WITHOUT_CLASSIFICATION	not really a many-to-one association necessarily
WITHOUT_CLASSIFICATION	not really a many-to-one association necessarily
WITHOUT_CLASSIFICATION	always overwrite nonversioned data
WITHOUT_CLASSIFICATION	public Currency getCurrency(int col) throws HibernateException;
WITHOUT_CLASSIFICATION	default is POJO
WITHOUT_CLASSIFICATION	use setParameter for null values
WITHOUT_CLASSIFICATION	use setParameter for null values
WITHOUT_CLASSIFICATION	private CacheEntry cacheEntry;
WITHOUT_CLASSIFICATION	Don't need to lock the cache here, since if someone else inserted the same pk first, the insert would fail
WITHOUT_CLASSIFICATION	Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!
WITHOUT_CLASSIFICATION	get the updated snapshot of the entity state by cloning current state; it is safe to copy in place, since by this time no-one else (should have) has a reference to the array
WITHOUT_CLASSIFICATION	this entity defines proeprty generation, so process those generated values...
WITHOUT_CLASSIFICATION	have the entity entry perform post-update processing, passing it the update state and the new version (if one).
WITHOUT_CLASSIFICATION	!persister.isCacheInvalidationRequired()
WITHOUT_CLASSIFICATION	need to look it up from the persistence-context
WITHOUT_CLASSIFICATION	sort first by role name
WITHOUT_CLASSIFICATION	Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!
WITHOUT_CLASSIFICATION	then by fk
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized, hibernate has no way of knowing if the collection is actually empty without querying the db)
WITHOUT_CLASSIFICATION	this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner
WITHOUT_CLASSIFICATION	boolean put = persister.getCache().insert(ck, cacheEntry);
WITHOUT_CLASSIFICATION	we need to grab the version value from the entity, otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	do nothing - we only need to notify the cache...
WITHOUT_CLASSIFICATION	sort first by entity name
WITHOUT_CLASSIFICATION	then by id
WITHOUT_CLASSIFICATION	to be safe...
WITHOUT_CLASSIFICATION	no transformations took place, so handle it as we would a non-instrumented class
WITHOUT_CLASSIFICATION	see if the entry represents a class file
WITHOUT_CLASSIFICATION	see if the entry represents a class file
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	test out the optimizer:
WITHOUT_CLASSIFICATION	set the name of bulk accessor.
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	invokespecial
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	aload_1 load bean
WITHOUT_CLASSIFICATION	checkcast cast bean
WITHOUT_CLASSIFICATION	astore_3 store bean
WITHOUT_CLASSIFICATION	aload_2 args
WITHOUT_CLASSIFICATION	iconst_i continue to aastore growing stack is 1
WITHOUT_CLASSIFICATION	new
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	aload_3 load the raw bean
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	aastore args
WITHOUT_CLASSIFICATION	| this | bean | args | i | raw bean | exception |
WITHOUT_CLASSIFICATION	required to exception table iconst_0 i
WITHOUT_CLASSIFICATION	istore_3 store i
WITHOUT_CLASSIFICATION	aload_1 load the bean
WITHOUT_CLASSIFICATION	checkcast cast the bean into a raw bean
WITHOUT_CLASSIFICATION	current stack len = 0
WITHOUT_CLASSIFICATION	start region to handling exception (BulkAccessorException)
WITHOUT_CLASSIFICATION	iinc 3, 1
WITHOUT_CLASSIFICATION	aload 4 load the raw bean
WITHOUT_CLASSIFICATION	aload_2 load the args
WITHOUT_CLASSIFICATION	iconst_i
WITHOUT_CLASSIFICATION	aaload
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	checkcast (case of primitive type) invokevirtual (case of primitive type)
WITHOUT_CLASSIFICATION	checkcast (case of reference type)
WITHOUT_CLASSIFICATION	current stack len = 2
WITHOUT_CLASSIFICATION	end region to handling exception (BulkAccessorException)
WITHOUT_CLASSIFICATION	register in exception table
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	aload_0
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	invokevirtual
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	local variables | target obj | each oldvalue |
WITHOUT_CLASSIFICATION	astore 5 store exception
WITHOUT_CLASSIFICATION	new BulkAccessorException
WITHOUT_CLASSIFICATION	aload 5 load exception
WITHOUT_CLASSIFICATION	iload_3 i
WITHOUT_CLASSIFICATION	invokespecial BulkAccessorException.<init>
WITHOUT_CLASSIFICATION	athrow
WITHOUT_CLASSIFICATION	WARNING: classfile only
WITHOUT_CLASSIFICATION	swallow
WITHOUT_CLASSIFICATION	local variable | this |
WITHOUT_CLASSIFICATION	aload_0 load this
WITHOUT_CLASSIFICATION	aload_0 load this
WITHOUT_CLASSIFICATION	getfield get field "$JAVASSIST_CALLBACK" defined already
WITHOUT_CLASSIFICATION	areturn return the value of the field
WITHOUT_CLASSIFICATION	local variables | this | callback |
WITHOUT_CLASSIFICATION	aload_1 load callback
WITHOUT_CLASSIFICATION	putfield put field "$JAVASSIST_CALLBACK" defined already
WITHOUT_CLASSIFICATION	case of non-static field
WITHOUT_CLASSIFICATION	getfield get each field
WITHOUT_CLASSIFICATION	invokeinterface invoke Enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	ifnonnull
WITHOUT_CLASSIFICATION	return each type
WITHOUT_CLASSIFICATION	return each type
WITHOUT_CLASSIFICATION	store_1 each type
WITHOUT_CLASSIFICATION	ldc name of the field
WITHOUT_CLASSIFICATION	load_1 each type
WITHOUT_CLASSIFICATION	invokeinterface invoke Callback.read() each type
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	dup
WITHOUT_CLASSIFICATION	invokeinterface
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	checkcast
WITHOUT_CLASSIFICATION	invokeinterface enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	invokeinterface enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	ifnonnull (label1)
WITHOUT_CLASSIFICATION	load_1
WITHOUT_CLASSIFICATION	load_1
WITHOUT_CLASSIFICATION	putfield
WITHOUT_CLASSIFICATION	return ;
WITHOUT_CLASSIFICATION	ldc field name
WITHOUT_CLASSIFICATION	getfield old value of the field
WITHOUT_CLASSIFICATION	invokeinterface callback.write(..)
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	not array
WITHOUT_CLASSIFICATION	array of reference type
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	byte
WITHOUT_CLASSIFICATION	char
WITHOUT_CLASSIFICATION	short
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	boolean, byte, char, int, short
WITHOUT_CLASSIFICATION	boolean, byte, char, int, short
WITHOUT_CLASSIFICATION	reference type
WITHOUT_CLASSIFICATION	double
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	float
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	bad type
WITHOUT_CLASSIFICATION	boolean, byte, char, int, short
WITHOUT_CLASSIFICATION	skip finalize methods
WITHOUT_CLASSIFICATION	Mainly for OSCache
WITHOUT_CLASSIFICATION	decrement the lock
WITHOUT_CLASSIFICATION	create new lock that times out immediately
WITHOUT_CLASSIFICATION	recache the updated state
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	null clientLock is remotely possible but will never happen in practice
WITHOUT_CLASSIFICATION	we really could refresh the item if it is not a lock, but it might be slower return freshTimestamp < txTimestamp
WITHOUT_CLASSIFICATION	by requiring <, we rely on lock timeout in the case of an unsuccessful update!
WITHOUT_CLASSIFICATION	the user provided resulttransformer, not the one used with "select new". Here to avoid mangling transformed/non-transformed results.
WITHOUT_CLASSIFICATION	disassemble positional parameters
WITHOUT_CLASSIFICATION	disassemble named parameters
WITHOUT_CLASSIFICATION	ie. 60 seconds
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	this is called from SettingsFactory irregardless; trivial to simply disregard
WITHOUT_CLASSIFICATION	Do nothing; subclasses may override.
WITHOUT_CLASSIFICATION	Do nothing; subclasses may override.
WITHOUT_CLASSIFICATION	throw new UnsupportedOperationException("Can't write to a readonly object");
WITHOUT_CLASSIFICATION	assembled state gets put in a new array (we read from cache by value!)
WITHOUT_CLASSIFICATION	persister.setIdentifier(result, id); before calling interceptor, for consistency with normal load
WITHOUT_CLASSIFICATION	no-op; CCS did not have such a concept
WITHOUT_CLASSIFICATION	no-op; CCS did not have such a concept
WITHOUT_CLASSIFICATION	again, CCS did not have such a concept; but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not JTA aware.
WITHOUT_CLASSIFICATION	again, CCS did not have such a concept; however a reasonable proximity is to clear the cache. For non-transaction aware caches, we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	again, CCS did not have such a concept; however a reasonable proximity is to clear the cache. For non-transaction aware caches, we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	classes mentioned in extends not available - so put it in queue
WITHOUT_CLASSIFICATION	get meta's from <hibernate-mapping>
WITHOUT_CLASSIFICATION	get meta's from <class>
WITHOUT_CLASSIFICATION	DB-OBJECTNAME
WITHOUT_CLASSIFICATION	MUTABLE
WITHOUT_CLASSIFICATION	WHERE
WITHOUT_CLASSIFICATION	CHECK
WITHOUT_CLASSIFICATION	POLYMORPHISM
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	ID
WITHOUT_CLASSIFICATION	VERSION / TIMESTAMP
WITHOUT_CLASSIFICATION	DISCRIMINATOR
WITHOUT_CLASSIFICATION	Primary key constraint
WITHOUT_CLASSIFICATION	this is either a <version/> tag with no type attribute, or a <timestamp/> tag
WITHOUT_CLASSIFICATION	for version properties marked as being generated, make sure they are "always" generated; aka, "insert" is invalid; this is dis-allowed by the DTD, but just to make sure...
WITHOUT_CLASSIFICATION	DISCRIMINATOR
WITHOUT_CLASSIFICATION	( (Column) discrim.getColumnIterator().next() ).setType(type);
WITHOUT_CLASSIFICATION	go ahead and set the lazy here, since pojo.proxy can override it.
WITHOUT_CLASSIFICATION	DYNAMIC UPDATE
WITHOUT_CLASSIFICATION	IMPORT
WITHOUT_CLASSIFICATION	BATCH SIZE
WITHOUT_CLASSIFICATION	SELECT BEFORE UPDATE
WITHOUT_CLASSIFICATION	OPTIMISTIC LOCK MODE
WITHOUT_CLASSIFICATION	PERSISTER
WITHOUT_CLASSIFICATION	CUSTOM SQL
WITHOUT_CLASSIFICATION	get meta's from <subclass>
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	joined subclasses
WITHOUT_CLASSIFICATION	KEY
WITHOUT_CLASSIFICATION	CHECK
WITHOUT_CLASSIFICATION	CUSTOM SQL
WITHOUT_CLASSIFICATION	properties
WITHOUT_CLASSIFICATION	KEY
WITHOUT_CLASSIFICATION	model.getKey().setType( new Type( model.getIdentifier() ) );
WITHOUT_CLASSIFICATION	TABLENAME
WITHOUT_CLASSIFICATION	join.getKey().setType( new Type( lazz.getIdentifier() ) );
WITHOUT_CLASSIFICATION	PROPERTIES
WITHOUT_CLASSIFICATION	COLUMN(S)
WITHOUT_CLASSIFICATION	column index
WITHOUT_CLASSIFICATION	column unique-key
WITHOUT_CLASSIFICATION	automatically makes a column with the default name if none is specifed by XML
WITHOUT_CLASSIFICATION	for an any
WITHOUT_CLASSIFICATION	insertable simply because that is the user did not specify anything; just override it
WITHOUT_CLASSIFICATION	the user specifically supplied insert="true", which constitutes an illegal combo
WITHOUT_CLASSIFICATION	properties generated on update can never be updateable...
WITHOUT_CLASSIFICATION	updateable only because the user did not specify anything; just override it
WITHOUT_CLASSIFICATION	the user specifically supplied update="true", which constitutes an illegal combo
WITHOUT_CLASSIFICATION	ROLENAME
WITHOUT_CLASSIFICATION	FETCH STRATEGY
WITHOUT_CLASSIFICATION	TABLE
WITHOUT_CLASSIFICATION	tableName = mappings.getNamingStrategy().propertyToTableName( className, path );
WITHOUT_CLASSIFICATION	SORT
WITHOUT_CLASSIFICATION	CUSTOM SQL
WITHOUT_CLASSIFICATION	unsorted, natural, comparator.class.name
WITHOUT_CLASSIFICATION	ORPHAN DELETE (used for programmer error detection)
WITHOUT_CLASSIFICATION	set up second pass
WITHOUT_CLASSIFICATION	an "embedded" component (composite ids and unique) note that this does not handle nested components
WITHOUT_CLASSIFICATION	a nested composite element
WITHOUT_CLASSIFICATION	for an any we will have to use reflection
WITHOUT_CLASSIFICATION	NOTE SPECIAL CASE: one-to-one constrained=false cannot be proxied, so default to join and non-lazy
WITHOUT_CLASSIFICATION	use old (HB 2.1) defaults if outer-join is specified
WITHOUT_CLASSIFICATION	lazy = !join;
WITHOUT_CLASSIFICATION	GENERATOR
WITHOUT_CLASSIFICATION	ID UNSAVED-VALUE
WITHOUT_CLASSIFICATION	VERSION UNSAVED-VALUE
WITHOUT_CLASSIFICATION	not necessarily a unique property reference
WITHOUT_CLASSIFICATION	( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() ).setNullable(false);
WITHOUT_CLASSIFICATION	contained elements:
WITHOUT_CLASSIFICATION	for non-inverse one-to-many, with a not-null fk, add a backref!
WITHOUT_CLASSIFICATION	Bind the where
WITHOUT_CLASSIFICATION	Bind the order-by
WITHOUT_CLASSIFICATION	Bind the filters
WITHOUT_CLASSIFICATION	overriding inherited meta attribute. HBX-621 & HBX-793
WITHOUT_CLASSIFICATION	first, iterate over all elements capable of defining an extends attribute collecting all found extends references if they cannot be resolved against the already processed mappings.
WITHOUT_CLASSIFICATION	mappings might contain either the "raw" extends name (in the case of an entity-name mapping) or a FQN (in the case of a POJO mapping).
WITHOUT_CLASSIFICATION	+ "_" + referencedColumnName not used for backward compatibility
WITHOUT_CLASSIFICATION	SessionFactory name:
WITHOUT_CLASSIFICATION	JDBC and connection settings:
WITHOUT_CLASSIFICATION	JDBC and connection settings:
WITHOUT_CLASSIFICATION	Interrogate JDBC metadata
WITHOUT_CLASSIFICATION	user supplied JDBC connections
WITHOUT_CLASSIFICATION	use dialect default properties
WITHOUT_CLASSIFICATION	Transaction settings:
WITHOUT_CLASSIFICATION	SQL Generation settings:
WITHOUT_CLASSIFICATION	Query parser settings:
WITHOUT_CLASSIFICATION	Second-level / query cache:
WITHOUT_CLASSIFICATION	The cache provider is needed when we either have second-level cache enabled or query cache enabled. Note that useSecondLevelCache is enabled by default
WITHOUT_CLASSIFICATION	SQL Exception converter:
WITHOUT_CLASSIFICATION	Statistics and logging:
WITHOUT_CLASSIFICATION	settings.setShowSqlEnabled(showSql);
WITHOUT_CLASSIFICATION	settings.setFormatSqlEnabled(formatSql);
WITHOUT_CLASSIFICATION	Schema export:
WITHOUT_CLASSIFICATION	String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); log.info( "Bytecode provider name : " + provider ); BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); settings.setBytecodeProvider( bytecodeProvider );
WITHOUT_CLASSIFICATION	legacy behavior, apply the bridge...
WITHOUT_CLASSIFICATION	maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment
WITHOUT_CLASSIFICATION	if dotted and not load-collection nor return-join regular property
WITHOUT_CLASSIFICATION	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 private BytecodeProvider bytecodeProvider;
WITHOUT_CLASSIFICATION	public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	public ComponentTuplizerFactory getComponentTuplizerFactory() { return componentTuplizerFactory; }
WITHOUT_CLASSIFICATION	package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	void setShowSqlEnabled(boolean b) { showSql = b; } void setFormatSqlEnabled(boolean b) { formatSql = b; }
WITHOUT_CLASSIFICATION	public BytecodeProvider getBytecodeProvider() { return bytecodeProvider; } void setBytecodeProvider(BytecodeProvider bytecodeProvider) { this.bytecodeProvider = bytecodeProvider; }
WITHOUT_CLASSIFICATION	using local since the inheritedMetas at this point is not the correct map since it is always the empty map
WITHOUT_CLASSIFICATION	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907
WITHOUT_CLASSIFICATION	protected List extendsQueue;
WITHOUT_CLASSIFICATION	extendsQueue = new ArrayList();
WITHOUT_CLASSIFICATION	componentTuplizerFactory = new ComponentTuplizerFactory();
WITHOUT_CLASSIFICATION	if doc is null, then for whatever reason, the cached file cannot be used...
WITHOUT_CLASSIFICATION	drop them in reverse order in case db needs it done that way...
WITHOUT_CLASSIFICATION	public ComponentTuplizerFactory getComponentTuplizerFactory() { return componentTuplizerFactory; }
WITHOUT_CLASSIFICATION	This method may be called many times!!
WITHOUT_CLASSIFICATION	Iterator iterator = extendsQueue.iterator();
WITHOUT_CLASSIFICATION	Iterator iter = extendsQueue.iterator();
WITHOUT_CLASSIFICATION	found
WITHOUT_CLASSIFICATION	found
WITHOUT_CLASSIFICATION	settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );
WITHOUT_CLASSIFICATION	private final List extendsQueue;
WITHOUT_CLASSIFICATION	<String, String>
WITHOUT_CLASSIFICATION	<String, String>
WITHOUT_CLASSIFICATION	+ "_" + referencedColumnName not used for backward compatibility
WITHOUT_CLASSIFICATION	Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227
WITHOUT_CLASSIFICATION	orphan delete not supported for EntityMode.DOM4J
WITHOUT_CLASSIFICATION	element = XMLHelper.generateDom4jElement( persister.getNodeName() );
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	orphan delete not supported for EntityMode.DOM4J
WITHOUT_CLASSIFICATION	element = XMLHelper.generateDom4jElement( persister.getNodeName() );
WITHOUT_CLASSIFICATION	needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	maintain correct duplication if loaded in a cartesian product
WITHOUT_CLASSIFICATION	the element has been removed from the set
WITHOUT_CLASSIFICATION	the element has changed
WITHOUT_CLASSIFICATION	Careful: these methods do not initialize the collection.
WITHOUT_CLASSIFICATION	needed so that we remove this collection from the second-level cache
WITHOUT_CLASSIFICATION	override on some subclasses
WITHOUT_CLASSIFICATION	override on some subclasses
WITHOUT_CLASSIFICATION	do this bit after setting initialized to true or it will recurse
WITHOUT_CLASSIFICATION	short-circuit(s) no new elements, the old list contains only Orphans no old elements, so no Orphans neither
WITHOUT_CLASSIFICATION	create the collection holding the Orphans
WITHOUT_CLASSIFICATION	collect EntityIdentifier(s) of the current elements - add them into a HashSet for fast access
WITHOUT_CLASSIFICATION	iterate over the old list
WITHOUT_CLASSIFICATION	(array==null) ? tempList.size() :
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	(array==null) ? tempList.get(i) :
WITHOUT_CLASSIFICATION	write(); -- doesn't
WITHOUT_CLASSIFICATION	write(); -- doesn't
WITHOUT_CLASSIFICATION	amazingly, these two will work because AbstractCollection uses iterator() to fill the array
WITHOUT_CLASSIFICATION	needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	finally, what it's all about...
WITHOUT_CLASSIFICATION	note that if we load this collection from a cartesian product the multiplicity would be broken ... so use an idbag instead
WITHOUT_CLASSIFICATION	Anyway, here we implement <set> semantics for a <one-to-many> <bag>!
WITHOUT_CLASSIFICATION	a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	search for it note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	search for it note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	public boolean equals(Object other) {read();return bag.equals(other);}public int hashCode(Object other) {read();return bag.hashCode();}
WITHOUT_CLASSIFICATION	List OPERATIONS:
WITHOUT_CLASSIFICATION	pad with nulls from the current last element up to the new index
WITHOUT_CLASSIFICATION	needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	from Map
WITHOUT_CLASSIFICATION	from SortedMap
WITHOUT_CLASSIFICATION	inject the data
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	default pool size 20
WITHOUT_CLASSIFICATION	trying via forName() first to be as close to DriverManager's semantics
WITHOUT_CLASSIFICATION	if debug level is enabled, then log the password, otherwise mask it
WITHOUT_CLASSIFICATION	register a cleanup synch
WITHOUT_CLASSIFICATION	wrap the session in the transaction-protection proxy
WITHOUT_CLASSIFICATION	then bind it
WITHOUT_CLASSIFICATION	try to make sure we don't wrap and already wrapped session
WITHOUT_CLASSIFICATION	allow these to go through the the real session no matter what
WITHOUT_CLASSIFICATION	limit the methods available if no transaction is active
WITHOUT_CLASSIFICATION	allow these (deprecated) methods to pass through
WITHOUT_CLASSIFICATION	serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	We could register the session against the transaction even though it is not started, but we'd have no guarentee of ever getting the map entries cleaned up (aside from spawning threads).
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	private String propertyName;
WITHOUT_CLASSIFICATION	public PropertyProjection project() {return Projections.property(getPropertyName());}
WITHOUT_CLASSIFICATION	String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );
WITHOUT_CLASSIFICATION	" collection_ where " +
WITHOUT_CLASSIFICATION	unsupported
WITHOUT_CLASSIFICATION	unsupported
WITHOUT_CLASSIFICATION	cannot be instantiated
WITHOUT_CLASSIFICATION	the following two lines were added to ensure that this.params is not null, which can happen with two-deep nested subqueries
WITHOUT_CLASSIFICATION	with two-deep subqueries, the same alias would get generated for both using the old method (criteriaQuery.generateSQLAlias()), so that is now used as a fallback if the main criteria alias isn't set
WITHOUT_CLASSIFICATION	implicit polymorphism not supported (would need a union)
WITHOUT_CLASSIFICATION	pull off the last ", "
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	we have the form: trim(trimSource) so we trim leading and trailing spaces
WITHOUT_CLASSIFICATION	we have the form: trim(from trimSource). This is functionally equivalent to trim(trimSource)
WITHOUT_CLASSIFICATION	NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method
WITHOUT_CLASSIFICATION	potentialTrimCharacterArgIndex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Oracle did add support for ANSI CASE statements in 9i
WITHOUT_CLASSIFICATION	the standard SQL function name is current_timestamp...
WITHOUT_CLASSIFICATION	Informix doesn't have a bit type
WITHOUT_CLASSIFICATION	or BYTE or TEXT? or MONEY
WITHOUT_CLASSIFICATION	strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"
WITHOUT_CLASSIFICATION	build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	pre H3.2 behavior: super.getReturnType(ct, m);
WITHOUT_CLASSIFICATION	finally use the sqltype if == on Hibernate types did not find a match.
WITHOUT_CLASSIFICATION	because numeric can be anything
WITHOUT_CLASSIFICATION	constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	standard sql92 functions (can be overridden by subclasses)
WITHOUT_CLASSIFICATION	map second/minute/hour/day/month/year to ANSI extract(), override on subclasses
WITHOUT_CLASSIFICATION	register hibernate types for default use in scalar sqlquery type auto detection
WITHOUT_CLASSIFICATION	database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	by default we report no support
WITHOUT_CLASSIFICATION	by default we report no support for NOWAIT lock semantics
WITHOUT_CLASSIFICATION	table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	grrr... for differentiation of mysql storage engines
WITHOUT_CLASSIFICATION	Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	return false here, as most databases do not properly support this construct...
WITHOUT_CLASSIFICATION	Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	Oracle8 and previous define only a "DATE" type which is used to represent all aspects of date/time
WITHOUT_CLASSIFICATION	starts with 1, implicitly
WITHOUT_CLASSIFICATION	" cascade";
WITHOUT_CLASSIFICATION	trim off the length/precision/scale
WITHOUT_CLASSIFICATION	public boolean dropTemporaryTableAfterUse() {we have to, because postgres sets current txto rollback only after a failed create tablereturn true;}
WITHOUT_CLASSIFICATION	CHECK VIOLATION
WITHOUT_CLASSIFICATION	UNIQUE VIOLATION
WITHOUT_CLASSIFICATION	FOREIGN KEY VIOLATION
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	NOT NULL VIOLATION
WITHOUT_CLASSIFICATION	ALL OTHER
WITHOUT_CLASSIFICATION	Register the type of the out param - PostgreSQL uses Types.OTHER
WITHOUT_CLASSIFICATION	seems to not really... public boolean supportsRowValueConstructorSyntax() { return true; }
WITHOUT_CLASSIFICATION	seems to have spotty LOB suppport
WITHOUT_CLASSIFICATION	HHH-2300
WITHOUT_CLASSIFICATION	ignore (probably H2 not in the classpath)
WITHOUT_CLASSIFICATION	Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not null is implicit
WITHOUT_CLASSIFICATION	23000: Check constraint violation: {0} 23001: Unique index or primary key violation: {0}
WITHOUT_CLASSIFICATION	Display the dialect version.
WITHOUT_CLASSIFICATION	The RDMS concat() function only supports 2 parameters
WITHOUT_CLASSIFICATION	Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Original Dialect.java returns " for update";
WITHOUT_CLASSIFICATION	Verify the state of this new method in Hibernate 3.0 Dialect.java
WITHOUT_CLASSIFICATION	Origial Dialect.java returns true;
WITHOUT_CLASSIFICATION	The keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	Sequence methods - start. The RDMS dialect needs these
WITHOUT_CLASSIFICATION	methods to make it possible to use the Native Id generator
WITHOUT_CLASSIFICATION	The where clause was added to eliminate this statement from Brute Force Searches.
WITHOUT_CLASSIFICATION	Sequence methods - end
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	starts with 1, implicitly
WITHOUT_CLASSIFICATION	We must return a valid RDMS/RSA command from this method to prevent RDMS/RSA from issuing ERROR 400
WITHOUT_CLASSIFICATION	Used with DROP TABLE to delete all records in the table.
WITHOUT_CLASSIFICATION	RDMS supports the UNION ALL clause.
WITHOUT_CLASSIFICATION	RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	Multi-param dialect functions...
WITHOUT_CLASSIFICATION	function templates
WITHOUT_CLASSIFICATION	not null is implicit
WITHOUT_CLASSIFICATION	this assumes schema support, which is present in 1.8.0 and later...
WITHOUT_CLASSIFICATION	HSQLDB only supports READ_UNCOMMITTED transaction isolation
WITHOUT_CLASSIFICATION	Multi-param string dialect functions...
WITHOUT_CLASSIFICATION	Multi-param numeric dialect functions...
WITHOUT_CLASSIFICATION	Multi-param date dialect functions...
WITHOUT_CLASSIFICATION	simple nullability constraint
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	register the type of the out param - an Oracle specific type
WITHOUT_CLASSIFICATION	TimesTen has no BLOB/CLOB support, but these types may be suitable for some applications. The length is limited to 4 million bytes.
WITHOUT_CLASSIFICATION	new methods in dialect3
WITHOUT_CLASSIFICATION	public boolean supportsForUpdateNowait() {return false;}
WITHOUT_CLASSIFICATION	TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	iterate entries ordered by capacity to find first fit
WITHOUT_CLASSIFICATION	add new ordered map
WITHOUT_CLASSIFICATION	registerColumnType( Types.VARCHAR, 16777215, "mediumtext" );
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	This assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	sql server just returns automatically
WITHOUT_CLASSIFICATION	return "select CURRENT_TIMESTAMP from RDB$DATABASE";
WITHOUT_CLASSIFICATION	registerColumnType data types
WITHOUT_CLASSIFICATION	hibernate seems to ignore this type...
WITHOUT_CLASSIFICATION	IBID for current_time and current_date
WITHOUT_CLASSIFICATION	Tell hibernate to use getBytes instead of getBinaryStream
WITHOUT_CLASSIFICATION	No batch statements
WITHOUT_CLASSIFICATION	We might want a special case for 19,2. This is very common for money types and here it is converted to 18,1
WITHOUT_CLASSIFICATION	no pointbase BIT
WITHOUT_CLASSIFICATION	no pointbase TINYINT
WITHOUT_CLASSIFICATION	Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	starts with 1, implicitly
WITHOUT_CLASSIFICATION	The current_timestamp is more accurate, but only known to be supported in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)
WITHOUT_CLASSIFICATION	SQL Server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table
WITHOUT_CLASSIFICATION	here assume SQLServer2005 using snapshot isolation, which does not have this problem
WITHOUT_CLASSIFICATION	registerColumnType( Types.BLOB, 16777215, "mediumblob" ); registerColumnType( Types.BLOB, 65535, "blob" );
WITHOUT_CLASSIFICATION	registerColumnType( Types.CLOB, 16777215, "mediumtext" ); registerColumnType( Types.CLOB, 65535, "text" );
WITHOUT_CLASSIFICATION	registerColumnType( Types.VARCHAR, 16777215, "mediumtext" ); registerColumnType( Types.VARCHAR, 65535, "text" );
WITHOUT_CLASSIFICATION	starts with 1, implicitly
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	sql server just returns automatically
WITHOUT_CLASSIFICATION	Sybase BIT type does not support null values
WITHOUT_CLASSIFICATION	This assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	You may still have other ResultSets or update counts left to process here but you can't do it now or the ResultSet you just got will be closed
WITHOUT_CLASSIFICATION	not null ... (start with 1) is implicit
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Oracle driver reports to support getGeneratedKeys(), but they only support the version taking an array of the names of the columns to be returned (via its RETURNING clause). No other driver seems to support this overloaded version.
WITHOUT_CLASSIFICATION	Multi-param string dialect functions...
WITHOUT_CLASSIFICATION	Multi-param numeric dialect functions...
WITHOUT_CLASSIFICATION	Multi-param date dialect functions...
WITHOUT_CLASSIFICATION	add another (inner) nested select add the main query close off the inner nested select
WITHOUT_CLASSIFICATION	add the main query
WITHOUT_CLASSIFICATION	add the restriction to the outer select
WITHOUT_CLASSIFICATION	This assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	You may still have other ResultSets or update counts left to process here but you can't do it now or the ResultSet you just got will be closed
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	starts with 1, implicitly
WITHOUT_CLASSIFICATION	simple nullability constraint
WITHOUT_CLASSIFICATION	not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	register the type of the out param - an Oracle specific type
WITHOUT_CLASSIFICATION	features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	binary %Stream character %Stream
WITHOUT_CLASSIFICATION	getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);
WITHOUT_CLASSIFICATION	hibernate impelemnts cast in Dialect.java
WITHOUT_CLASSIFICATION	aggregate functions shouldn't be registered, right? registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); stopped on $list
WITHOUT_CLASSIFICATION	DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	below is for Cache' that don't have str in 2007.1 there is str and we register str directly
WITHOUT_CLASSIFICATION	note that %string is deprecated
WITHOUT_CLASSIFICATION	%upper is deprecated
WITHOUT_CLASSIFICATION	The syntax used to add a foreign key constraint to a table.
WITHOUT_CLASSIFICATION	identifier-commalist
WITHOUT_CLASSIFICATION	IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	identifier-commalist
WITHOUT_CLASSIFICATION	The syntax used to add a column to a table
WITHOUT_CLASSIFICATION	Completely optional cascading drop clause.
WITHOUT_CLASSIFICATION	lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... Set your transaction mode to READ_COMMITTED before using
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	<String>
WITHOUT_CLASSIFICATION	callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	The keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?
WITHOUT_CLASSIFICATION	Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?
WITHOUT_CLASSIFICATION	The name of the SQL function that transforms a string to lowercase
WITHOUT_CLASSIFICATION	Create an OuterJoinGenerator for this dialect.
WITHOUT_CLASSIFICATION	The keyword used to insert a row without specifying any column values
WITHOUT_CLASSIFICATION	registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );
WITHOUT_CLASSIFICATION	skip the FROM keyword in params
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	potentialTrimCharacterArgIndex = 1 assumes that a trim-specification has been specified. we handle the exception to that explicitly
WITHOUT_CLASSIFICATION	SQLFunction implementation
WITHOUT_CLASSIFICATION	conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap
WITHOUT_CLASSIFICATION	register the standard dialect resolver
WITHOUT_CLASSIFICATION	register resolvers set via Environment property
WITHOUT_CLASSIFICATION	kept for backward compatibility until after the 3.1beta5 release of HA
WITHOUT_CLASSIFICATION	cache the hashcode
WITHOUT_CLASSIFICATION	the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	delete does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	orphans should be deleted during delete
WITHOUT_CLASSIFICATION	(LockMode) anything
WITHOUT_CLASSIFICATION	lock doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	refresh doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	evicts don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	orphans should be deleted during save/update
WITHOUT_CLASSIFICATION	for deprecated saveOrUpdateCopy()
WITHOUT_CLASSIFICATION	persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	a proxy cannot be transient and it breaks ForeignKeys.isTransient
WITHOUT_CLASSIFICATION	replicate does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	handles arrays and newly instantiated collections
WITHOUT_CLASSIFICATION	Actually the semantics of the next three are really "Bag" Note that, unlike objects, collection insertions, updates, deletions are not really remembered between flushes. We just re-use the same Lists for convenience.
WITHOUT_CLASSIFICATION	Add these directly to the executions queue
WITHOUT_CLASSIFICATION	continue loop
WITHOUT_CLASSIFICATION	sort the updates by fk
WITHOUT_CLASSIFICATION	sort the updates by pk
WITHOUT_CLASSIFICATION	the mapping of entity names to their latest batch numbers.
WITHOUT_CLASSIFICATION	the map of batch numbers to EntityInsertAction lists
WITHOUT_CLASSIFICATION	optimize the hash size to eliminate a rehash.
WITHOUT_CLASSIFICATION	the list of entity names that indicate the batch number
WITHOUT_CLASSIFICATION	remove the current element from insertions. It will be added back later.
WITHOUT_CLASSIFICATION	the entity associated with the current action.
WITHOUT_CLASSIFICATION	There is already an existing batch for this type of entity. Check to see if the latest batch is acceptable.
WITHOUT_CLASSIFICATION	now rebuild the insertions list. There is a batch for each entry in the name list.
WITHOUT_CLASSIFICATION	the current batch number is the latest batch for this entity type.
WITHOUT_CLASSIFICATION	loop through all the associations of the current entity and make sure that they are processed before the current batch number
WITHOUT_CLASSIFICATION	find the batch number associated with the current association, if any.
WITHOUT_CLASSIFICATION	create a new batch for this type. The batch number is the number of current batches.
WITHOUT_CLASSIFICATION	loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.
WITHOUT_CLASSIFICATION	since this entity will now be processed in the latest possible batch, we can be assured that it will come after all other associations, there's not need to continue checking.
WITHOUT_CLASSIFICATION	cascade to current collection elements
WITHOUT_CLASSIFICATION	not really necessary, but good for consistency...
WITHOUT_CLASSIFICATION	we can't cascade to non-embedded elements
WITHOUT_CLASSIFICATION	a newly instantiated collection can't have orphans
WITHOUT_CLASSIFICATION	handle orphaned entities!!
WITHOUT_CLASSIFICATION	Loaded entity instances, by EntityUniqueKey
WITHOUT_CLASSIFICATION	Identity map of EntityEntry instances, by the entity instance
WITHOUT_CLASSIFICATION	Entity proxies, by EntityKey
WITHOUT_CLASSIFICATION	Snapshots of current database state for entities that have not been loaded
WITHOUT_CLASSIFICATION	Identity map of array holder ArrayHolder instances, by the array instance
WITHOUT_CLASSIFICATION	Collection wrappers, by the CollectionKey key=CollectionKey, value=PersistentCollection
WITHOUT_CLASSIFICATION	Set of EntityKeys of deleted objects
WITHOUT_CLASSIFICATION	properties that we have tried to load, and not found in the database
WITHOUT_CLASSIFICATION	A list of collection wrappers that were instantiating during result set processing, that we will need to initialize at the end of the query
WITHOUT_CLASSIFICATION	A container for collections we load up when the owning entity is not yet loaded ... for now, this is purely transient!
WITHOUT_CLASSIFICATION	Downgrade locks
WITHOUT_CLASSIFICATION	any earlier proxy takes precedence
WITHOUT_CLASSIFICATION	unwrap the object
WITHOUT_CLASSIFICATION	initialize + unwrap the object
WITHOUT_CLASSIFICATION	return the proxied object
WITHOUT_CLASSIFICATION	overwrite old proxy
WITHOUT_CLASSIFICATION	early exit...
WITHOUT_CLASSIFICATION	or should it actually throw an exception?
WITHOUT_CLASSIFICATION	treat it just like a new collection
WITHOUT_CLASSIFICATION	do this work only at the very highest level of the load don't let this method be called recursively
WITHOUT_CLASSIFICATION	note that each iteration of the loop may add new elements
WITHOUT_CLASSIFICATION	it might be an unwrapped collection reference! try to find a wrapper (slowish)
WITHOUT_CLASSIFICATION	public boolean isNonExistant(EntityKey key) {return nonExistantEntityKeys.contains(key);}
WITHOUT_CLASSIFICATION	public boolean isNonExistant(EntityUniqueKey key) {return nonExistentEntityUniqueKeys.contains(key);}
WITHOUT_CLASSIFICATION	iterate all the entities currently associated with the persistence context.
WITHOUT_CLASSIFICATION	does this entity entry pertain to the entity persister in which we are interested (owner)?
WITHOUT_CLASSIFICATION	check if the managed object is the parent
WITHOUT_CLASSIFICATION	otherwise, the proxy was pruned during the serialization process
WITHOUT_CLASSIFICATION	adds remove as a sort-of alias for delete...
WITHOUT_CLASSIFICATION	bad cast
WITHOUT_CLASSIFICATION	return lhsPersister.getSubclassPropertyColumnNames(property);
WITHOUT_CLASSIFICATION	property-refs for associations defined on a component are not supported, so no need to slice
WITHOUT_CLASSIFICATION	if there is no property-ref, assume the join is to the subclass table (ie. the table of the subclass that the association belongs to)
WITHOUT_CLASSIFICATION	handle a property-ref
WITHOUT_CLASSIFICATION	NativeSQLQueryReturn
WITHOUT_CLASSIFICATION	final boolean forceCacheRefresh,
WITHOUT_CLASSIFICATION	why is all others non final ?
WITHOUT_CLASSIFICATION	this.forceCacheRefresh = forceCacheRefresh;
WITHOUT_CLASSIFICATION	HELLA IMPORTANT OPTIMIZATION!!!
WITHOUT_CLASSIFICATION	return that.type.equals(type) && EqualsHelper.equals(that.value, value);
WITHOUT_CLASSIFICATION	Must occur after resolving identifiers!
WITHOUT_CLASSIFICATION	take a snapshot
WITHOUT_CLASSIFICATION	do a check
WITHOUT_CLASSIFICATION	the owning entity may have been deleted and its identifier unset due to identifier-rollback; in which case, try to look up its identifier from the persistence context
WITHOUT_CLASSIFICATION	do the work
WITHOUT_CLASSIFICATION	We've been here before
WITHOUT_CLASSIFICATION	it is or was referenced _somewhere_
WITHOUT_CLASSIFICATION	do the work
WITHOUT_CLASSIFICATION	if either its role changed,
WITHOUT_CLASSIFICATION	or its key changed
WITHOUT_CLASSIFICATION	we will need to create new entries
WITHOUT_CLASSIFICATION	we will need to remove ye olde entries
WITHOUT_CLASSIFICATION	force initialize!
WITHOUT_CLASSIFICATION	else if it's elements changed
WITHOUT_CLASSIFICATION	ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES
WITHOUT_CLASSIFICATION	session-start/post-flush persistent state
WITHOUT_CLASSIFICATION	allow the CollectionSnapshot to be serialized
WITHOUT_CLASSIFICATION	ATTRIBUTES USED ONLY DURING FLUSH CYCLE
WITHOUT_CLASSIFICATION	"current" means the reference that was found during flush()
WITHOUT_CLASSIFICATION	"loaded" means the reference that is consistent with the current database state
WITHOUT_CLASSIFICATION	during flush, we navigate the object graph to collections and decide what to do with them
WITHOUT_CLASSIFICATION	if we instantiate a collection during the flush() process, we must ignore it for the rest of the flush()
WITHOUT_CLASSIFICATION	new collections that get found + wrapped during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	a newly wrapped collection is NOT dirty (or we get unnecessary version updates)
WITHOUT_CLASSIFICATION	collection.clearDirty()
WITHOUT_CLASSIFICATION	collection.clearDirty()
WITHOUT_CLASSIFICATION	detached collections that get found + reattached during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	optimization
WITHOUT_CLASSIFICATION	optimization optimization
WITHOUT_CLASSIFICATION	re-snapshot
WITHOUT_CLASSIFICATION	for convenience to save some lookups
WITHOUT_CLASSIFICATION	NOTE: this is not updated when properties are fetched lazily!
WITHOUT_CLASSIFICATION	memory optimization
WITHOUT_CLASSIFICATION	use the id value of a newly instantiated instance as the unsaved-value
WITHOUT_CLASSIFICATION	copied from Session:
WITHOUT_CLASSIFICATION	this should not happen since the DTD prevents it
WITHOUT_CLASSIFICATION	JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the SQL AST. 'hasFilterCondition' keeps track of that fact.
WITHOUT_CLASSIFICATION	the current join represents the join between a many-to-many association table and its "target" table. Here we need to apply any additional filters defined specifically on the many-to-many
WITHOUT_CLASSIFICATION	check basic level one nullablilty
WITHOUT_CLASSIFICATION	values is not null and is checkable, we'll look deeper
WITHOUT_CLASSIFICATION	for non null args, check for components and elements containing components
WITHOUT_CLASSIFICATION	cache the hashcode
WITHOUT_CLASSIFICATION	persistent collections may have components
WITHOUT_CLASSIFICATION	check for all components values in the collection
WITHOUT_CLASSIFICATION	will check current level if some of them are not null or sublevels if they exist
WITHOUT_CLASSIFICATION	do the test
WITHOUT_CLASSIFICATION	if its an uninitialized proxy it can't be transient
WITHOUT_CLASSIFICATION	unwrap it
WITHOUT_CLASSIFICATION	See if the entity is already bound to this session, if not look at the entity identifier and assume that the entity is persistent if the id is not "unsaved" (that is, we rely on foreign keys to keep database integrity)
WITHOUT_CLASSIFICATION	an unfetched association can only point to an entity that already exists in the db
WITHOUT_CLASSIFICATION	let the interceptor inspect the instance to decide
WITHOUT_CLASSIFICATION	let the persister inspect the instance to decide
WITHOUT_CLASSIFICATION	we use the assumed value, if there is one, to avoid hitting the database
WITHOUT_CLASSIFICATION	hit the database, after checking the session cache for a snapshot
WITHOUT_CLASSIFICATION	context-entity-identifier returns null explicitly if the entity is not associated with the persistence context; so make some deeper checks...
WITHOUT_CLASSIFICATION	int count = 0;
WITHOUT_CLASSIFICATION	the first key found after the given key
WITHOUT_CLASSIFICATION	checkForEnd = false;
WITHOUT_CLASSIFICATION	count++;
WITHOUT_CLASSIFICATION	end of array, start filling again from start
WITHOUT_CLASSIFICATION	we ran out of keys to try
WITHOUT_CLASSIFICATION	first element of array is reserved for the actual instance we are loading!
WITHOUT_CLASSIFICATION	the first id found after the given id
WITHOUT_CLASSIFICATION	we ran out of ids to try
WITHOUT_CLASSIFICATION	look for existing collection as part of the persistence context
WITHOUT_CLASSIFICATION	ignore this row of results! Note the early exit
WITHOUT_CLASSIFICATION	initialize this collection
WITHOUT_CLASSIFICATION	create one
WITHOUT_CLASSIFICATION	warning: can cause a recursive calls! (proxy initialization)
WITHOUT_CLASSIFICATION	there were no queued additions and the role has a cache
WITHOUT_CLASSIFICATION	and this is not a forced initialization during flush
WITHOUT_CLASSIFICATION	some filters affecting the collection are enabled on the session, so do not do the put into the cache.
WITHOUT_CLASSIFICATION	cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	simple cache of param metadata based on query string. Ideally, the original "user-supplied query" string should be used to retreive this metadata (i.e., not the para-list-expanded query string) to avoid unnecessary cache entries. Used solely for caching param metadata for native-sql queries, see getSQLParameterMetadata() for a discussion as to why...
WITHOUT_CLASSIFICATION	the cache of the actual plans...
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	for native-sql queries, the param metadata is determined outside any relation to a query plan, because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set, which might not be the case up-front when param metadata would be most useful
WITHOUT_CLASSIFICATION	don't care...
WITHOUT_CLASSIFICATION	Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	don't care...
WITHOUT_CLASSIFICATION	NOTE : firstRow is zero-based
WITHOUT_CLASSIFICATION	break the outer loop !!!
WITHOUT_CLASSIFICATION	named parameter
WITHOUT_CLASSIFICATION	could be either an ordinal or JPA-positional parameter
WITHOUT_CLASSIFICATION	a peek ahead showed this as an JPA-positional parameter
WITHOUT_CLASSIFICATION	make sure this "name" is an integral
WITHOUT_CLASSIFICATION	pre-determine and cache the hashcode
WITHOUT_CLASSIFICATION	perform the actual work
WITHOUT_CLASSIFICATION	if everything went ok, commit the transaction and close the obtained connection handle...
WITHOUT_CLASSIFICATION	at some point the processing went bad, so we need to: 1) make sure the connection handle gets released 2) try to cleanup the JTA context as much as possible
WITHOUT_CLASSIFICATION	finally handle the exception
WITHOUT_CLASSIFICATION	a "detached" collection that belonged to a different entity
WITHOUT_CLASSIFICATION	saveOrUpdateCopy() is deprecated!
WITHOUT_CLASSIFICATION	collectionPersister should not be null, but we don't want to throw an exception if it is null
WITHOUT_CLASSIFICATION	otherwise a null or brand new collection this will also (inefficiently) handle arrays, which have no snapshot, so we can't do any better processArrayOrNewCollection(collection, type);
WITHOUT_CLASSIFICATION	a "detached" collection that originally belonged to the same entity
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Force a substitution!
WITHOUT_CLASSIFICATION	The user requested a "greater" (i.e. more restrictive) form of pessimistic lock
WITHOUT_CLASSIFICATION	the database now holds a lock + the object is flushed from the cache, so release the soft lock
WITHOUT_CLASSIFICATION	now update the object .. has to be outside the main if block above (because of collections)
WITHOUT_CLASSIFICATION	Search for collections by reachability, updating their role. We don't want to touch collections reachable from a deleted object
WITHOUT_CLASSIFICATION	this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed
WITHOUT_CLASSIFICATION	NOTE: we need to do the wrap here even if its not "dirty", because collections need wrapping but changes to _them_ don't dirty the container. Also, for versioned data, we need to wrap before calling searchForDirtyCollections
WITHOUT_CLASSIFICATION	grab its state saved at deletion
WITHOUT_CLASSIFICATION	grab its current state
WITHOUT_CLASSIFICATION	schedule the update note that we intentionally do _not_ pass in currentPersistentState!
WITHOUT_CLASSIFICATION	substitutes into values by side-effect
WITHOUT_CLASSIFICATION	give the Interceptor a chance to process property values, if the properties were modified by the Interceptor, we need to set them back to the object
WITHOUT_CLASSIFICATION	compare to cached state (ignoring collections unless versioned)
WITHOUT_CLASSIFICATION	if it was dirtied by a collection only
WITHOUT_CLASSIFICATION	increment the version number (if necessary)
WITHOUT_CLASSIFICATION	check nullability but do not perform command execute we'll use scheduled updates for that.
WITHOUT_CLASSIFICATION	give the Interceptor a chance to modify property values
WITHOUT_CLASSIFICATION	now we might need to recalculate the dirtyProperties array
WITHOUT_CLASSIFICATION	use the current version
WITHOUT_CLASSIFICATION	Interceptor returned null, so do the dirtycheck ourself, if possible
WITHOUT_CLASSIFICATION	object loaded by update()
WITHOUT_CLASSIFICATION	dirty check against the usual snapshot of the entity
WITHOUT_CLASSIFICATION	dirty check against the database snapshot, if possible/necessary
WITHOUT_CLASSIFICATION	the Interceptor handled the dirty checking
WITHOUT_CLASSIFICATION	even process null collections
WITHOUT_CLASSIFICATION	get the id from the object
WITHOUT_CLASSIFICATION	always do an INSERT, and let it fail by constraint violation
WITHOUT_CLASSIFICATION	what is the version on the database?
WITHOUT_CLASSIFICATION	/ HHH-2378
WITHOUT_CLASSIFICATION	will result in a SQL UPDATE:
WITHOUT_CLASSIFICATION	else do nothing (don't even reassociate object!)
WITHOUT_CLASSIFICATION	no existing row - do an insert
WITHOUT_CLASSIFICATION	refresh() does not pass an entityName
WITHOUT_CLASSIFICATION	do not return a proxy! (this option indicates we are initializing a proxy)
WITHOUT_CLASSIFICATION	return a proxy if appropriate
WITHOUT_CLASSIFICATION	return existing object or initialized proxy (unless deleted)
WITHOUT_CLASSIFICATION	return new uninitialized proxy
WITHOUT_CLASSIFICATION	this object was already loaded
WITHOUT_CLASSIFICATION	Entity was found in second-level cache...
WITHOUT_CLASSIFICATION	make it circular-reference safe
WITHOUT_CLASSIFICATION	intializes result by side-effect
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Pre-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	some statistics
WITHOUT_CLASSIFICATION	safe from concurrent modification because of how entryList() is implemented on IdentityMap
WITHOUT_CLASSIFICATION	Initialize dirty flags for arrays + collections with composite elements and reset reached, doupdate, etc.
WITHOUT_CLASSIFICATION	Among other things, updateReachables() will recursively load all collections that are moving roles. This might cause entities to be loaded.
WITHOUT_CLASSIFICATION	So this needs to be safe from concurrent modification problems. It is safe because of how IdentityMap implements entrySet()
WITHOUT_CLASSIFICATION	Update the status of the object and if necessary, schedule an update
WITHOUT_CLASSIFICATION	Schedule updates to collections:
WITHOUT_CLASSIFICATION	we need to lock the collection caches before executing entity inserts/updates in order to account for bidi associations
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Post-flushing section ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the database has changed now, so the subselect results need to be invalidated
WITHOUT_CLASSIFICATION	if the collection is dereferenced, remove from the session cache iter.remove(); does not work, since the entrySet is not backed by the set
WITHOUT_CLASSIFICATION	otherwise recreate the mapping between the collection and its key
WITHOUT_CLASSIFICATION	get a snapshot
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	key is an entity involved with the operation performed by the listener; value is a flag indicating if the listener explicitly operates on the entity
WITHOUT_CLASSIFICATION	EARLY EXIT!!!
WITHOUT_CLASSIFICATION	ie. the entity came in from update()
WITHOUT_CLASSIFICATION	before any callbacks, etc, so subdeletions see that this deletion happened first
WITHOUT_CLASSIFICATION	Ensures that containing deletions happen before sub-deletions
WITHOUT_CLASSIFICATION	TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );
WITHOUT_CLASSIFICATION	cascade-delete to collections BEFORE the collection owner is deleted
WITHOUT_CLASSIFICATION	cascade-delete to many-to-one AFTER the parent was deleted
WITHOUT_CLASSIFICATION	if it is an initialized proxy, let cascade handle it later on
WITHOUT_CLASSIFICATION	assign the requested id to the proxy, before reassociating the proxy
WITHOUT_CLASSIFICATION	an uninitialized proxy, noop, don't even need to return an id, since it is never a save()
WITHOUT_CLASSIFICATION	initialize properties of the event:
WITHOUT_CLASSIFICATION	return the id in the event object
WITHOUT_CLASSIFICATION	TRANSIENT or DELETED
WITHOUT_CLASSIFICATION	use the id assigned to the instance
WITHOUT_CLASSIFICATION	assume this is a newly instantiated transient object which should be saved rather than updated
WITHOUT_CLASSIFICATION	this is a transient object with existing persistent state not loaded by the session
WITHOUT_CLASSIFICATION	a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()
WITHOUT_CLASSIFICATION	cachedState,
WITHOUT_CLASSIFICATION	assume true, since we don't really know, and it doesn't matter
WITHOUT_CLASSIFICATION	a "detached" collection!
WITHOUT_CLASSIFICATION	if the collection belonged to a different entity, clean up the existing state of the collection
WITHOUT_CLASSIFICATION	log.debug( "calling onLoad()" );
WITHOUT_CLASSIFICATION	EARLY EXIT!
WITHOUT_CLASSIFICATION	note: performExecutions() clears all collectionXxxxtion collections (the collection actions) in the session
WITHOUT_CLASSIFICATION	if no array holder we found an unwrappered array (this can't occur, because we now always call wrap() before getting to here) return (ah==null) ? true : searchForDirtyCollections(ah, type);
WITHOUT_CLASSIFICATION	if not wrappered yet, its dirty (this can't occur, because we now always call wrap() before getting to here) return ( ! (obj instanceof PersistentCollection) ) ? true : searchForDirtyCollections( (PersistentCollection) obj, type );
WITHOUT_CLASSIFICATION	we need to check even if it was not initialized, because of delayed adds!
WITHOUT_CLASSIFICATION	NOTE: EARLY EXIT!
WITHOUT_CLASSIFICATION	find any entities that are still transient after retry
WITHOUT_CLASSIFICATION	EARLY EXIT!
WITHOUT_CLASSIFICATION	Check the persistence context for an entry relating to this entity to be merged...
WITHOUT_CLASSIFICATION	we have specialized case of a detached entity from the perspective of the merge operation. Specifically, we have an incoming entity instance which has a corresponding entry in the current persistence context, but registered under a different entity instance
WITHOUT_CLASSIFICATION	DELETED
WITHOUT_CLASSIFICATION	before cascade!
WITHOUT_CLASSIFICATION	cascade first, so that all unsaved objects get their copy created before we actually copy cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);
WITHOUT_CLASSIFICATION	this bit is only really absolutely necessary for handling requestedId, but is also good if we merge multiple object graphs, since it helps ensure uniqueness
WITHOUT_CLASSIFICATION	continue...; we'll find out if it ends up not getting saved later
WITHOUT_CLASSIFICATION	cascade first, so that all unsaved objects get their copy created before we actually copy
WITHOUT_CLASSIFICATION	check that entity id = requestedId
WITHOUT_CLASSIFICATION	before cascade!
WITHOUT_CLASSIFICATION	we got here because we assumed that an instance with an assigned id was detached, when it was really persistent
WITHOUT_CLASSIFICATION	cascade first, so that all unsaved objects get their copy created before we actually copy
WITHOUT_CLASSIFICATION	copyValues works by reflection, so explicitly mark the entity instance dirty
WITHOUT_CLASSIFICATION	EARLY EXIT
WITHOUT_CLASSIFICATION	source.getBatcher().executeBatch(); found another way to ensure that all batched joined inserts have been executed
WITHOUT_CLASSIFICATION	substitutes into values by side-effect
WITHOUT_CLASSIFICATION	now done in EntityIdentityInsertAction persister.setIdentifier( entity, id, source.getEntityMode() );
WITHOUT_CLASSIFICATION	source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );
WITHOUT_CLASSIFICATION	keep the existing version number in the case of replicate!
WITHOUT_CLASSIFICATION	cascade-save to many-to-one BEFORE the parent is saved
WITHOUT_CLASSIFICATION	pass this as an argument only to avoid double looking
WITHOUT_CLASSIFICATION	the object is persistent
WITHOUT_CLASSIFICATION	the entity is associated with the session, so check its status
WITHOUT_CLASSIFICATION	do nothing for persistent instances
WITHOUT_CLASSIFICATION	ie. e.status==DELETED
WITHOUT_CLASSIFICATION	the object is transient or detached
WITHOUT_CLASSIFICATION	NOTE EARLY EXIT!
WITHOUT_CLASSIFICATION	Private constructor - stops checkstyle from complaining.
WITHOUT_CLASSIFICATION	First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...
WITHOUT_CLASSIFICATION	eat it and try next
WITHOUT_CLASSIFICATION	Otherwise, try to use the no-arg constructor
WITHOUT_CLASSIFICATION	oracle sql-state code for deadlock
WITHOUT_CLASSIFICATION	CollectionPropertyMapping processes everything except 'index'.
WITHOUT_CLASSIFICATION	remove initial ", "
WITHOUT_CLASSIFICATION	remove initial " and "
WITHOUT_CLASSIFICATION	beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!
WITHOUT_CLASSIFICATION	notAfterClassTokens.add(",");
WITHOUT_CLASSIFICATION	just especially for the trivial collection filter
WITHOUT_CLASSIFICATION	update last non-whitespace token, if necessary
WITHOUT_CLASSIFICATION	select-range is terminated by declaration of "from"
WITHOUT_CLASSIFICATION	scan for next non-whitespace token
WITHOUT_CLASSIFICATION	Note this!!
WITHOUT_CLASSIFICATION	Error message constants.
WITHOUT_CLASSIFICATION	handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Handle collection-fiter compilation. IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!
WITHOUT_CLASSIFICATION	Show the modified AST.
WITHOUT_CLASSIFICATION	Create a parameter specification for the collection filter...
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	Get the names of the columns used to link between the collection owner and the collection elements.
WITHOUT_CLASSIFICATION	The path AST should be a DotNode, and it should have been evaluated already.
WITHOUT_CLASSIFICATION	Tell the dot node about the join type.
WITHOUT_CLASSIFICATION	Re-arrange the tree so that the collection function is the root and the lhs is the path.
WITHOUT_CLASSIFICATION	Don't forget to resolve the argument! Resolve the collection function now.
WITHOUT_CLASSIFICATION	Resolve everything up to this dot, but don't resolve the placeholders yet.
WITHOUT_CLASSIFICATION	Should mean that no such property was found
WITHOUT_CLASSIFICATION	Was there an explicit select expression?
WITHOUT_CLASSIFICATION	Attach any mapping-defined "ORDER BY" fragments
WITHOUT_CLASSIFICATION	Use the explicitly declared select expression; determine the return types indicated by each select token
WITHOUT_CLASSIFICATION	After that, process the JOINs. Invoke a delegate to do the work, as this is farily complex.
WITHOUT_CLASSIFICATION	Make #@%$^#^&# sure no alias is applied to the table name
WITHOUT_CLASSIFICATION	We need to generate ids as part of this bulk insert. Note that this is only supported for sequence-style generators and post-insert-style generators; basically, only in-db generators
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	We need to seed the version value as part of this bulk insert
WITHOUT_CLASSIFICATION	we need to wrtap the param in a cast()
WITHOUT_CLASSIFICATION	This is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	Generate implicit joins, only if necessary.
WITHOUT_CLASSIFICATION	Notify the FROM element that it is being referenced by the select.
WITHOUT_CLASSIFICATION	Turn off includeSubclasses on all FromElements.
WITHOUT_CLASSIFICATION	create the node initially with the param name so that it shows appropriately in the "original text" attribute
WITHOUT_CLASSIFICATION	Use the delegate, resolve identifiers as FROM element aliases.
WITHOUT_CLASSIFICATION	select clauses for insert statements should alwasy be treated as shallow
WITHOUT_CLASSIFICATION	no need to even collect this information if the persister is considered multi-table
WITHOUT_CLASSIFICATION	Make sure that the persister is versioned
WITHOUT_CLASSIFICATION	handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	--Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();
WITHOUT_CLASSIFICATION	Alias references and identifiers use the same node class.
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	make a new one
WITHOUT_CLASSIFICATION	just do the regular thing if you can't find the ctor Your AST must have default ctor to use this.
WITHOUT_CLASSIFICATION	Initialize SQL nodes here.
WITHOUT_CLASSIFICATION	semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if template is null we just write the function out as it appears in the hql statement
WITHOUT_CLASSIFICATION	this function has a template -> redirect output and catch the arguments
WITHOUT_CLASSIFICATION	--- Inner classes (moved here from sql-gen.g) ---
WITHOUT_CLASSIFICATION	check two "adjecent" nodes at the top of the from-clause tree
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	these are just two unrelated table references
WITHOUT_CLASSIFICATION	again, both should be FromElements
WITHOUT_CLASSIFICATION	NOTE : firstRow is zero-based
WITHOUT_CLASSIFICATION	right represents a joins originating from left; or both right and left reprersent joins originating from the same FromElement
WITHOUT_CLASSIFICATION	check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them
WITHOUT_CLASSIFICATION	right represents a joins originating from left...
WITHOUT_CLASSIFICATION	all clear
WITHOUT_CLASSIFICATION	Ignore the token class name parameter, and use a specific token class.
WITHOUT_CLASSIFICATION	overriden to avoid System.exit
WITHOUT_CLASSIFICATION	overriden to avoid System.exit
WITHOUT_CLASSIFICATION	remember that ordinal parameters numbers are 1-based!!!
WITHOUT_CLASSIFICATION	don't care about other param types here, just those explicitly user-defined...
WITHOUT_CLASSIFICATION	If the query is already compiled, skip the compilation.
WITHOUT_CLASSIFICATION	Remember the parameters for the compilation.
WITHOUT_CLASSIFICATION	PHASE 1 : Parse the HQL into an AST.
WITHOUT_CLASSIFICATION	PHASE 2 : Analyze the HQL AST, and produce an SQL AST.
WITHOUT_CLASSIFICATION	PHASE 3 : Generate the SQL.
WITHOUT_CLASSIFICATION	we do not actually propogate ANTLRExceptions as a cause, so log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	we do not actually propogate ANTLRExceptions as a cause, so log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	only needed during compilation phase...
WITHOUT_CLASSIFICATION	Transform the tree.
WITHOUT_CLASSIFICATION	Parse the query string into an HQL AST.
WITHOUT_CLASSIFICATION	Delegate to the QueryLoader...
WITHOUT_CLASSIFICATION	Delegate to the QueryLoader...
WITHOUT_CLASSIFICATION	Delegate to the QueryLoader...
WITHOUT_CLASSIFICATION	NOTE : ( max - 1 ) because first is zero-based while max is not...
WITHOUT_CLASSIFICATION	-- Package local methods for the QueryLoader delegate --
WITHOUT_CLASSIFICATION	If there are no collection fetches, then no further checks are needed
WITHOUT_CLASSIFICATION	A shallow query is ok (although technically there should be no fetching here...)
WITHOUT_CLASSIFICATION	should be the first, but just to be safe...
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	Impl Note: allows multiple collection fetches as long as the entire fecthed graph still "points back" to a single root entity for return
WITHOUT_CLASSIFICATION	Otherwise, we have a non-scalar select with defined collection fetch(es). Make sure that there is only a single root entity in the return (no tuples)
WITHOUT_CLASSIFICATION	This is not strictly true. We actually just need to make sure that it is ordered by root-entity PK and that that order-by comes before any non-root-entity ordering...
WITHOUT_CLASSIFICATION	paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );
WITHOUT_CLASSIFICATION	we are already processing a dot-structure
WITHOUT_CLASSIFICATION	igndore it...
WITHOUT_CLASSIFICATION	we are now at a new tree level
WITHOUT_CLASSIFICATION	[jsd] The fix for HHH-558...
WITHOUT_CLASSIFICATION	If the token can tell us if it could be an identifier...
WITHOUT_CLASSIFICATION	... and the expected token type was an identifier, then:
WITHOUT_CLASSIFICATION	Use the token as an identifier.
WITHOUT_CLASSIFICATION	Add the token to the AST.
WITHOUT_CLASSIFICATION	(NOT (EQ a b) ) => (NE a b)
WITHOUT_CLASSIFICATION	(NOT (NE a b) ) => (EQ a b)
WITHOUT_CLASSIFICATION	(NOT (LT a b) ) => (GE a b)
WITHOUT_CLASSIFICATION	(NOT (GE a b) ) => (LT a b)
WITHOUT_CLASSIFICATION	(NOT (LE a b) ) => (GT a b)
WITHOUT_CLASSIFICATION	(NOT (LIKE a b) ) => (NOT_LIKE a b)
WITHOUT_CLASSIFICATION	(NOT (NOT_LIKE a b) ) => (LIKE a b)
WITHOUT_CLASSIFICATION	(NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)
WITHOUT_CLASSIFICATION	(NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)
WITHOUT_CLASSIFICATION	Initialize the error handling delegate.
WITHOUT_CLASSIFICATION	overriden to avoid System.exit
WITHOUT_CLASSIFICATION	if if Otherwise, handle the error normally.
WITHOUT_CLASSIFICATION	(NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)
WITHOUT_CLASSIFICATION	This can never happen because this rule will always eliminate the child NOT.case NOT:return x.getFirstChild(); (NOT (NOT x) ) => (x)
WITHOUT_CLASSIFICATION	Just add a 'not' parent.
WITHOUT_CLASSIFICATION	(EQ NULL b) => (IS_NULL b)
WITHOUT_CLASSIFICATION	(EQ a NULL) => (IS_NULL a)
WITHOUT_CLASSIFICATION	NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )
WITHOUT_CLASSIFICATION	Add NOT if it's negated.
WITHOUT_CLASSIFICATION	Create nodes that track line and column number.
WITHOUT_CLASSIFICATION	Case 1: Multi token keywords GROUP BY and ORDER BY The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.
WITHOUT_CLASSIFICATION	Case 2: The current token is after FROM and before '.'.
WITHOUT_CLASSIFICATION	This handles HHH-354, where there is a strange property name in a where clause. If the lookahead contains a DOT then something that isn't an IDENT...
WITHOUT_CLASSIFICATION	See if the second lookahed token can be an identifier.
WITHOUT_CLASSIFICATION	Set it!
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	strip the " where "
WITHOUT_CLASSIFICATION	Don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail
WITHOUT_CLASSIFICATION	at the very least cleanup the data :)
WITHOUT_CLASSIFICATION	First, save off the pertinent ids, as the return value
WITHOUT_CLASSIFICATION	jdbc params are 1-based
WITHOUT_CLASSIFICATION	jdbc params are 1-based
WITHOUT_CLASSIFICATION	Start performing the updates
WITHOUT_CLASSIFICATION	First, save off the pertinent ids, saving the number of pertinent ids for return
WITHOUT_CLASSIFICATION	Start performing the deletes
WITHOUT_CLASSIFICATION	otherwise, everything ok.
WITHOUT_CLASSIFICATION	visit width-first, then depth
WITHOUT_CLASSIFICATION	if the types report logical equivalence, return true...
WITHOUT_CLASSIFICATION	otherwise, perform a "deep equivalence" check...
WITHOUT_CLASSIFICATION	If there is no WHERE node, make one.
WITHOUT_CLASSIFICATION	inject the WHERE after the parent
WITHOUT_CLASSIFICATION	Never include subclasses for implied from elements.
WITHOUT_CLASSIFICATION	Moved here from SelectClause [jsd]
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Use the table fromElement and the property name to get the array of column names.
WITHOUT_CLASSIFICATION	Set the attributes of the property reference expression.
WITHOUT_CLASSIFICATION	If the uresolved property path isn't set yet, just use the property name.
WITHOUT_CLASSIFICATION	The 'from element' that the property is in.
WITHOUT_CLASSIFICATION	Prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	Prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	If this dot has already been resolved, stop now.
WITHOUT_CLASSIFICATION	If there is no data type for this node, and we're at the end of the path (top most dot node), then this might be a Java constant.
WITHOUT_CLASSIFICATION	The property is a collection...
WITHOUT_CLASSIFICATION	The property is a component...
WITHOUT_CLASSIFICATION	The property is another class..
WITHOUT_CLASSIFICATION	Otherwise, this is a primitive type.
WITHOUT_CLASSIFICATION	foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)
WITHOUT_CLASSIFICATION	This 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	Always add the collection's query spaces.
WITHOUT_CLASSIFICATION	in non-select queries, the only time we should need to join is if we are in a subquery from clause
WITHOUT_CLASSIFICATION	this is the regression style determination which matches the logic of the classic translator
WITHOUT_CLASSIFICATION	This 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	even though we might find a pre-existing element by join path, we may not be able to reuse it...
WITHOUT_CLASSIFICATION	NOTE : addDuplicateAlias() already performs nullness checks on the alias.
WITHOUT_CLASSIFICATION	if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse
WITHOUT_CLASSIFICATION	again, null != null here
WITHOUT_CLASSIFICATION	If this is an implied join in a from element, then use the impled join type which is part of the tree parser's state (set by the gramamar actions).
WITHOUT_CLASSIFICATION	otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery
WITHOUT_CLASSIFICATION	we know only the lhs-hand type, so use that
WITHOUT_CLASSIFICATION	the referenced node text is the special 'id'
WITHOUT_CLASSIFICATION	only the identifier property field name can be a reference to the associated entity's PK...
WITHOUT_CLASSIFICATION	special shortcut for id properties, skip the join! this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	Append the new property name onto the unresolved path.
WITHOUT_CLASSIFICATION	If the lhs is a collection, use CollectionPropertyMapping
WITHOUT_CLASSIFICATION	Tell the destination fromElement to 'includeSubclasses'.
WITHOUT_CLASSIFICATION	Use theta style (for regression) Move the node up, after the origin node.
WITHOUT_CLASSIFICATION	Don't resolve the node again.
WITHOUT_CLASSIFICATION	for expected parameter type injection, we expect that the lhs represents some form of property ref and that the children of the in-list represent one-or-more params.
WITHOUT_CLASSIFICATION	we need to strip off the embedded parens so that sql-gen does not double these up
WITHOUT_CLASSIFICATION	we have something like : "? [op] rhs"
WITHOUT_CLASSIFICATION	we have something like : "lhs [op] ?"
WITHOUT_CLASSIFICATION	we know only the rhs-hand type, so use that
WITHOUT_CLASSIFICATION	handle the (assumed) valid cases: #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)
WITHOUT_CLASSIFICATION	one or the other needs to be a datetime for us to get into this method in the first place...
WITHOUT_CLASSIFICATION	#3 - note that this is also true of "datetime - :param"...
WITHOUT_CLASSIFICATION	#2
WITHOUT_CLASSIFICATION	Generate the inner join -- The elements need to be joined to the collection they are in.
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	The 'from element' that represents the elements of the collection.
WITHOUT_CLASSIFICATION	Add the condition to the join sequence that qualifies the indexed element.
WITHOUT_CLASSIFICATION	Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)
WITHOUT_CLASSIFICATION	Now, set the text for this node. It should be the element columns.
WITHOUT_CLASSIFICATION	Get the function return value type, based on the type of the first argument.
WITHOUT_CLASSIFICATION	This will call initialize(tok)!
WITHOUT_CLASSIFICATION	mutation depends on the types of nodes invloved...
WITHOUT_CLASSIFICATION	"pass along" our initial embedded parameter node(s) to the first generated sql fragment so that it can be handled later for parameter binding...
WITHOUT_CLASSIFICATION	logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	Generated select expressions are already resolved, nothing to do.
WITHOUT_CLASSIFICATION	The path may be a reference to an alias defined in the parent query.
WITHOUT_CLASSIFICATION	The HQL class alias refers to the class name.
WITHOUT_CLASSIFICATION	Associate the table alias with the element.
WITHOUT_CLASSIFICATION	try the parent FromClause...
WITHOUT_CLASSIFICATION	Add the new node to the map so that we don't create it twice.
WITHOUT_CLASSIFICATION	Make sure that all from elements registered with this FROM clause are actually in the AST.
WITHOUT_CLASSIFICATION	Invoke setScalarColumnText on each constructor argument.
WITHOUT_CLASSIFICATION	Collect the select expressions, skip the first child because it is the class name.
WITHOUT_CLASSIFICATION	return an empty Type array
WITHOUT_CLASSIFICATION	Constructors are always considered scalar results.
WITHOUT_CLASSIFICATION	this is the exception returned by ReflectHelper.getConstructor() if it cannot locate an appropriate constructor
WITHOUT_CLASSIFICATION	if there is no order by, make one
WITHOUT_CLASSIFICATION	Find the WHERE; if there is no WHERE, find the FROM...
WITHOUT_CLASSIFICATION	Now, inject the newly built ORDER BY into the tree
WITHOUT_CLASSIFICATION	ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	logic operators by definition resolve to boolean.
WITHOUT_CLASSIFICATION	Render the identifier select fragment using the table alias.
WITHOUT_CLASSIFICATION	Class names in the FROM clause result in a JoinSequence (the old FromParser does this).
WITHOUT_CLASSIFICATION	For many-to-many joins, use the tablename from the queryable collection for the default text.
WITHOUT_CLASSIFICATION	Otherwise, use the property mapping.
WITHOUT_CLASSIFICATION	should be safe to only ever expect EntityPersister references here
WITHOUT_CLASSIFICATION	If the property is a special collection property name, return a CollectionPropertyMapping.
WITHOUT_CLASSIFICATION	Collection of components.
WITHOUT_CLASSIFICATION	make sure the lhs is "assignable"...
WITHOUT_CLASSIFICATION	false indicates to not generate parens around the assignment
WITHOUT_CLASSIFICATION	Register the FromElement with the FROM clause, now that we have the names and aliases.
WITHOUT_CLASSIFICATION	currently allowed...
WITHOUT_CLASSIFICATION	HHH-276 : implied joins in a subselect where clause - The destination needs to be added to the destination's from clause. Not sure if this is will fix everything, but it works.
WITHOUT_CLASSIFICATION	return classAlias == null ? className : classAlias;
WITHOUT_CLASSIFICATION	This is an explicit FROM element.
WITHOUT_CLASSIFICATION	ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Fetch can't be used with scroll() or iterate().
WITHOUT_CLASSIFICATION	If it's not implied or it is implied and it's a many to many join where the target wasn't found.
WITHOUT_CLASSIFICATION	Since this is an explicit FROM element, it can't be implied in the FROM clause.
WITHOUT_CLASSIFICATION	Do nothing, eplicit from elements are always in the projection list.
WITHOUT_CLASSIFICATION	propertyName refers to something like collection.size...
WITHOUT_CLASSIFICATION	property name is a sub-path of a component...
WITHOUT_CLASSIFICATION	Always add the collection's query spaces.
WITHOUT_CLASSIFICATION	nothing to do; even if the operand is a parameter, no way we could infer an appropriate expected type here
WITHOUT_CLASSIFICATION	logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	DotNode uses null here...
WITHOUT_CLASSIFICATION	We represent a from-clause alias
WITHOUT_CLASSIFICATION	we are the LHS of the DOT representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	we are the RHS of the DOT representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	we represent a naked (simple) prop-ref
WITHOUT_CLASSIFICATION	EARLY EXIT!!! return so the resolve call explicitly coming from DotNode can resolve this...
WITHOUT_CLASSIFICATION	assume this ident's text does not refer to a property on the given persister
WITHOUT_CLASSIFICATION	just ignore it for now, it'll get resolved later...
WITHOUT_CLASSIFICATION	This is not actually a constant, but a reference to FROM element.
WITHOUT_CLASSIFICATION	check to see if our "propPath" actually represents a property on the persister
WITHOUT_CLASSIFICATION	these pieces are needed for usage in select clause
WITHOUT_CLASSIFICATION	used to set the type of the parent dot node
WITHOUT_CLASSIFICATION	assume we do not refer to a property on the given persister
WITHOUT_CLASSIFICATION	assume we do not refer to a property on the given persister
WITHOUT_CLASSIFICATION	naked property-refs cannot be used with an aliased from element
WITHOUT_CLASSIFICATION	this piece is needed for usage in select clause
WITHOUT_CLASSIFICATION	do not over-write the column text, as that has already been "rendered" during resolve
WITHOUT_CLASSIFICATION	for some reason the antlr.CommonAST initialization routines force this method to get called twice. The first time with an empty string
WITHOUT_CLASSIFICATION	Look up class name using the first identifier in the path.
WITHOUT_CLASSIFICATION	Add to the query spaces.
WITHOUT_CLASSIFICATION	If the from element isn't in the same clause, create a new from element.
WITHOUT_CLASSIFICATION	This is the root level node. Generate an explicit from clause at the root.
WITHOUT_CLASSIFICATION	Correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ANSI-style join
WITHOUT_CLASSIFICATION	super-duper-classic-parser-regression-testing-mojo-magic...
WITHOUT_CLASSIFICATION	A collection of entities...
WITHOUT_CLASSIFICATION	A collection of components...
WITHOUT_CLASSIFICATION	A collection of scalar elements...
WITHOUT_CLASSIFICATION	according to both the ANSI-SQL and EJB3 specs, trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the SQL spec: <trim function> ::= TRIM <left paren> <trim operands> <right paren> <trim operands> ::= [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> <trim specification> ::= LEADING | TRAILING | BOTH If only <trim specification> is omitted, BOTH is assumed; if <trim character> is omitted, space is assumed
WITHOUT_CLASSIFICATION	Don't include sub-classes for implied collection joins or subquery joins.
WITHOUT_CLASSIFICATION	Treat explict from elements in sub-queries properly.
WITHOUT_CLASSIFICATION	( implied && DotNode.useThetaStyleImplicitJoins ) ) {
WITHOUT_CLASSIFICATION	the "root from-element" in correlated subqueries do need this piece
WITHOUT_CLASSIFICATION	Create the FROM element for the target (the elements of the collection).
WITHOUT_CLASSIFICATION	If the join is implied, then don't include sub-classes on the element.
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	The associated entity is implied, but it must be included in the FROM. The collection alias is the role.
WITHOUT_CLASSIFICATION	Tag this node as a JOIN. Don't include subclasses in the join. This is a clollection join.
WITHOUT_CLASSIFICATION	Get the class name of the associated entity.
WITHOUT_CLASSIFICATION	origin, path, implied, columns, classAlias,
WITHOUT_CLASSIFICATION	implied
WITHOUT_CLASSIFICATION	For implied many-to-many, just add the end join.
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	the standard SQL function name is current_timestamp...
WITHOUT_CLASSIFICATION	This causes the factory to instantiate the desired class.
WITHOUT_CLASSIFICATION	private Type[] sqlResultTypes;
WITHOUT_CLASSIFICATION	Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	The types represented in the SQL result set. @return The types represented in the SQL result set.
WITHOUT_CLASSIFICATION	public Type[] getSqlResultTypes() {return sqlResultTypes;}
WITHOUT_CLASSIFICATION	First, collect all of the select expressions. NOTE: This must be done before invoking setScalarColumnText() because setScalarColumnText() changes the AST!!!
WITHOUT_CLASSIFICATION	First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)
WITHOUT_CLASSIFICATION	sqlResultTypeList.addAll( constructorArgumentTypeList );
WITHOUT_CLASSIFICATION	If the data type is not an association type, it could not have been in the FROM clause.
WITHOUT_CLASSIFICATION	sqlResultTypeList.add( type );
WITHOUT_CLASSIFICATION	Always add the type to the return type list.
WITHOUT_CLASSIFICATION	add the fetched entities
WITHOUT_CLASSIFICATION	Get ready to start adding nodes.
WITHOUT_CLASSIFICATION	function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	If there are any scalars (non-entities) selected, render the select column aliases.
WITHOUT_CLASSIFICATION	sqlResultTypeList,
WITHOUT_CLASSIFICATION	ArrayList sqlResultTypeList,
WITHOUT_CLASSIFICATION	sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );
WITHOUT_CLASSIFICATION	lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	Add the type to the list of returned sqlResultTypes.
WITHOUT_CLASSIFICATION	Generate an 2d array of column names, the first dimension is parallel with the return types array. The second dimension is the list of column names for each type.
WITHOUT_CLASSIFICATION	Generate the select expression.
WITHOUT_CLASSIFICATION	union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Skip 'DISTINCT' and 'ALL', so we return the first expression node.
WITHOUT_CLASSIFICATION	Create SQL_TOKEN nodes for the columns.
WITHOUT_CLASSIFICATION	Generate the property select tokens.
WITHOUT_CLASSIFICATION	Get the function name node.
WITHOUT_CLASSIFICATION	Method expressions in a SELECT should always be considered scalar.
WITHOUT_CLASSIFICATION	If this is 'elements' then create a new FROM element.
WITHOUT_CLASSIFICATION	Not elements(x)
WITHOUT_CLASSIFICATION	Dialect function
WITHOUT_CLASSIFICATION	Collection 'property function'
WITHOUT_CLASSIFICATION	If the constant is an IDENT, figure out what it means...
WITHOUT_CLASSIFICATION	IDENT is a class alias in the FROM.
WITHOUT_CLASSIFICATION	Resolve to an identity column.
WITHOUT_CLASSIFICATION	Otherwise, it's a literal.
WITHOUT_CLASSIFICATION	the name of an entity class
WITHOUT_CLASSIFICATION	the class discriminator value
WITHOUT_CLASSIFICATION	Chop off the rest of the tree.
WITHOUT_CLASSIFICATION	Add a space before the display text.
WITHOUT_CLASSIFICATION	Find or create the WHERE clause
WITHOUT_CLASSIFICATION	child == parent.getFirstChild()
WITHOUT_CLASSIFICATION	Find or create the WHERE clause
WITHOUT_CLASSIFICATION	Filter conditions need to be inserted before the HQL where condition and the theta join node. This is because org.hibernate.loader.Loader binds the filter parameters first, then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().
WITHOUT_CLASSIFICATION	Put the FILTERS node before the HQL condition and theta joins
WITHOUT_CLASSIFICATION	add the current fragment to the FILTERS node
WITHOUT_CLASSIFICATION	Create a new THETA_JOINS node as a parent of all filters
WITHOUT_CLASSIFICATION	Put the THETA_JOINS node before the HQL condition, after the filters.
WITHOUT_CLASSIFICATION	add the current fragment to the THETA_JOINS node
WITHOUT_CLASSIFICATION	First, try to get the persister using the given name directly.
WITHOUT_CLASSIFICATION	unable to locate it using this name
WITHOUT_CLASSIFICATION	If that didn't work, try using the 'import' name.
WITHOUT_CLASSIFICATION	Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)
WITHOUT_CLASSIFICATION	locate the registered function by the given name
WITHOUT_CLASSIFICATION	determine the type of the first argument...
WITHOUT_CLASSIFICATION	Use the DOT node to emit the first column name. Create the column names, folled by the column aliases.
WITHOUT_CLASSIFICATION	Note: this simply constructs a "raw" SQL_TOKEN representing the where fragment and injects this into the tree. This "works"; however it is probably not the best long-term solution. At some point we probably want to apply an additional grammar to properly tokenize this where fragment into constituent parts focused on the operators embedded within the fragment.
WITHOUT_CLASSIFICATION	Append the text of the current node.
WITHOUT_CLASSIFICATION	If the node has a first child, recurse into the first child.
WITHOUT_CLASSIFICATION	If there is a second child (RHS), recurse into that child.
WITHOUT_CLASSIFICATION	Iterate through the alias,JoinSequence pairs and generate SQL token nodes.
WITHOUT_CLASSIFICATION	If the from element represents a JOIN_FRAGMENT and it is a theta-style join, convert its type from JOIN_FRAGMENT to FROM_FRAGMENT
WITHOUT_CLASSIFICATION	this is used during SqlGenerator processing
WITHOUT_CLASSIFICATION	If there is a FROM fragment and the FROM element is an explicit, then add the from part.
WITHOUT_CLASSIFICATION	&& StringHelper.isNotEmpty( frag )
WITHOUT_CLASSIFICATION	The FROM fragment will probably begin with ', '. Remove this if it is present.
WITHOUT_CLASSIFICATION	This uses a PathExpressionParser but notice that compound paths are not valid, only bare names and simple paths:
WITHOUT_CLASSIFICATION	SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p
WITHOUT_CLASSIFICATION	The reason for this is SQL doesn't let you sort by an expression you are not returning in the result set.
WITHOUT_CLASSIFICATION	named query parameter
WITHOUT_CLASSIFICATION	default mode
WITHOUT_CLASSIFICATION	QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);
WITHOUT_CLASSIFICATION	reset the dotcount (but not the path) after reset!
WITHOUT_CLASSIFICATION	after reset!
WITHOUT_CLASSIFICATION	we don't need to worry about any condition in the ON clause here (toFromFragmentString), since anything in the ON condition is already applied to the whole query
WITHOUT_CLASSIFICATION	bit_length feels a bit broken to me. We have to cast to char in order to pass when a numeric value is supplied. But of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. Jay Nance 2006-09-22
WITHOUT_CLASSIFICATION	dotcount>=2
WITHOUT_CLASSIFICATION	Do the corresponding RHS
WITHOUT_CLASSIFICATION	if its "id"
WITHOUT_CLASSIFICATION	or its the id property name
WITHOUT_CLASSIFICATION	join = q.createJoinFragment(useThetaStyleJoin);
WITHOUT_CLASSIFICATION	important!!
WITHOUT_CLASSIFICATION	String[] keyCols = collPersister.getKeyColumnNames();
WITHOUT_CLASSIFICATION	an association
WITHOUT_CLASSIFICATION	allow index() function:
WITHOUT_CLASSIFICATION	here assume SQLServer2005 using snapshot isolation, which does not have this problem
WITHOUT_CLASSIFICATION	The reason for this is SQL doesn't let you sort by an expression you are not returning in the result set.
WITHOUT_CLASSIFICATION	many-to-many
WITHOUT_CLASSIFICATION	collections of values
WITHOUT_CLASSIFICATION	opening paren in new Foo ( ... )
WITHOUT_CLASSIFICATION	if we are inside a new Result(), but not inside a nested function
WITHOUT_CLASSIFICATION	special case
WITHOUT_CLASSIFICATION	the name of an SQL function
WITHOUT_CLASSIFICATION	null child could occur for no from clause in a filter
WITHOUT_CLASSIFICATION	this is basically a copy/paste of OrderByParser ... might be worth refactoring
WITHOUT_CLASSIFICATION	SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p
WITHOUT_CLASSIFICATION	return aliases not supported in classic translator!
WITHOUT_CLASSIFICATION	register collection role
WITHOUT_CLASSIFICATION	The keyword used to specify an identity column, if identity column key generation is supported.
WITHOUT_CLASSIFICATION	.getElementPropertyMapping();
WITHOUT_CLASSIFICATION	crossJoins.add(name);
WITHOUT_CLASSIFICATION	ie no select clause in HQL
WITHOUT_CLASSIFICATION	initialize the Set of queried identifier spaces (ie. tables)
WITHOUT_CLASSIFICATION	ie. no select clause
WITHOUT_CLASSIFICATION	there _was_ a select clause
WITHOUT_CLASSIFICATION	return the concrete type, or the underlying type if a concrete type was not specified
WITHOUT_CLASSIFICATION	many-to-many
WITHOUT_CLASSIFICATION	q.addCollection(collectionName, collectionRole);
WITHOUT_CLASSIFICATION	classic parser does not support bulk manipulation statements
WITHOUT_CLASSIFICATION	can't cache this stuff either (per-invocation)
WITHOUT_CLASSIFICATION	unfortunately this stuff can't be cached because it is per-invocation, not constant for the QueryTranslator instance
WITHOUT_CLASSIFICATION	This is the legacy behaviour for HQL queries...
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	we have the form: trim(trimSource) so we trim leading and trailing spaces EARLY EXIT!!!!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	not known!
WITHOUT_CLASSIFICATION	Need this, since join condition can appear inside parens!
WITHOUT_CLASSIFICATION	tokens that close a sub expression tokens that open a sub expression tokens that would indicate a sub expression is a boolean expression
WITHOUT_CLASSIFICATION	expressionTerminators.add(","); deliberately excluded
WITHOUT_CLASSIFICATION	expressionOpeners.add(","); deliberately excluded
WITHOUT_CLASSIFICATION	we have the form: trim(from trimSource). This is functionally equivalent to trim(trimSource) EARLY EXIT!!!!
WITHOUT_CLASSIFICATION	otherwise, a trim-specification and/or a trim-character have been specified; we need to decide which options are present and "do the right thing" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character (what is to be trimmed off?) the trim-source (from where should it be trimmed?)
WITHOUT_CLASSIFICATION	Inside a BETWEEN ... AND ... expression
WITHOUT_CLASSIFICATION	were an odd or even number of NOTs encountered the join string built up by compound paths inside this expression a flag indicating if the subexpression is known to be boolean
WITHOUT_CLASSIFICATION	ie. a many-to-many
WITHOUT_CLASSIFICATION	Cope with [,]
WITHOUT_CLASSIFICATION	Cope with a continued path expression (ie. ].baz)
WITHOUT_CLASSIFICATION	NOTE: early return
WITHOUT_CLASSIFICATION	Cope with a subselect
WITHOUT_CLASSIFICATION	Cope with special cases of AND, NOT, ()
WITHOUT_CLASSIFICATION	Close extra brackets we opened
WITHOUT_CLASSIFICATION	take note when this is a boolean expression
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	process a token, mapping OO path expressions to SQL expressions
WITHOUT_CLASSIFICATION	Open any extra brackets we might need.
WITHOUT_CLASSIFICATION	Cope with special cases of AND, NOT, )
WITHOUT_CLASSIFICATION	the next one up must also be
WITHOUT_CLASSIFICATION	Add any joins
WITHOUT_CLASSIFICATION	assumes that types are all of span 1
WITHOUT_CLASSIFICATION	named query parameter
WITHOUT_CLASSIFICATION	path expression
WITHOUT_CLASSIFICATION	saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	anything else
WITHOUT_CLASSIFICATION	the path expression continues after a ]
WITHOUT_CLASSIFICATION	careful with this!
WITHOUT_CLASSIFICATION	the path expression ends at the ]
WITHOUT_CLASSIFICATION	"finish off" the join
WITHOUT_CLASSIFICATION	NOTICE: no " or . since they are part of (compound) identifiers
WITHOUT_CLASSIFICATION	cannot instantiate
WITHOUT_CLASSIFICATION	start by looking for HQL keywords...
WITHOUT_CLASSIFICATION	inner joins can be abbreviated to 'join'
WITHOUT_CLASSIFICATION	'outer' is optional and is ignored
WITHOUT_CLASSIFICATION	now anything that is not a HQL keyword
WITHOUT_CLASSIFICATION	process the "old" HQL style where aliases appear _first_ ie. using the IN or IN CLASS constructions
WITHOUT_CLASSIFICATION	treat it as a classname
WITHOUT_CLASSIFICATION	treat it as a path expression
WITHOUT_CLASSIFICATION	starts with the name of a mapped class (new style)
WITHOUT_CLASSIFICATION	starts with a path expression (new style)
WITHOUT_CLASSIFICATION	allow ODMG OQL style: from Person p, p.cars c
WITHOUT_CLASSIFICATION	handle quoted strings
WITHOUT_CLASSIFICATION	Object insertions, updates, and deletions have list semantics because they must happen in the right order so as to respect referential integrity
WITHOUT_CLASSIFICATION	"finish off" the join
WITHOUT_CLASSIFICATION	ignore whitespace
WITHOUT_CLASSIFICATION	do replacements
WITHOUT_CLASSIFICATION	handle HQL2 collection syntax
WITHOUT_CLASSIFICATION	uuid.hex is deprecated
WITHOUT_CLASSIFICATION	AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	hilo params
WITHOUT_CLASSIFICATION	sql = query;
WITHOUT_CLASSIFICATION	performance opt
WITHOUT_CLASSIFICATION	sql = update;
WITHOUT_CLASSIFICATION	hilo config
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	don't allow comments on these insert statements as comments totally blow up the Oracle getGeneratedKeys "support" :(
WITHOUT_CLASSIFICATION	abort the save (the object is already saved by a circular cascade)
WITHOUT_CLASSIFICATION	throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	do nothing to avoid a lazy property initialization
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	do nothing until we hit the rsult set containing the generated id
WITHOUT_CLASSIFICATION	COLUMN and TABLE should be renamed but it would break the public API
WITHOUT_CLASSIFICATION	Loaded entity instances, by EntityKey
WITHOUT_CLASSIFICATION	if the given name is un-qualified we may neen to qualify it
WITHOUT_CLASSIFICATION	the default...
WITHOUT_CLASSIFICATION	unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence...
WITHOUT_CLASSIFICATION	intentionally empty
WITHOUT_CLASSIFICATION	Identity map of CollectionEntry instances, by the collection wrapper
WITHOUT_CLASSIFICATION	general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	prepare and execute the insert
WITHOUT_CLASSIFICATION	prepare and execute the insert
WITHOUT_CLASSIFICATION	fetch the generated id in a separate query
WITHOUT_CLASSIFICATION	we just hit the last position
WITHOUT_CLASSIFICATION	scroll ahead
WITHOUT_CLASSIFICATION	scroll backward
WITHOUT_CLASSIFICATION	we have not yet hit the last result...
WITHOUT_CLASSIFICATION	Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.
WITHOUT_CLASSIFICATION	Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Caches
WITHOUT_CLASSIFICATION	Generators:
WITHOUT_CLASSIFICATION	cache region is defined by the root-class in the hierarchy...
WITHOUT_CLASSIFICATION	check if the detached object being merged is the parent
WITHOUT_CLASSIFICATION	after all persisters and named queries are registered
WITHOUT_CLASSIFICATION	if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... NOTE: decided to put this here rather than in the above loop as I was nervous about the performance of the loop-in-loop especially considering this is far more likely the 'edge case'
WITHOUT_CLASSIFICATION	JNDI + Serialization:
WITHOUT_CLASSIFICATION	checking for named queries
WITHOUT_CLASSIFICATION	stats
WITHOUT_CLASSIFICATION	EntityNotFoundDelegate
WITHOUT_CLASSIFICATION	Check named HQL queries
WITHOUT_CLASSIFICATION	this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	prevents this session from adding things to cache
WITHOUT_CLASSIFICATION	from javax.naming.Referenceable
WITHOUT_CLASSIFICATION	look for the instance by uuid
WITHOUT_CLASSIFICATION	for a dynamic-class
WITHOUT_CLASSIFICATION	test this entity to see if we must query it
WITHOUT_CLASSIFICATION	NOTE EARLY EXIT
WITHOUT_CLASSIFICATION	for backward-compatability
WITHOUT_CLASSIFICATION	ignore this error for now
WITHOUT_CLASSIFICATION	to stop the class from being unloaded
WITHOUT_CLASSIFICATION	in case we were deserialized in a different JVM, look for an instance with the same name (alternatively we could do an actual JNDI lookup here....)
WITHOUT_CLASSIFICATION	must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization
WITHOUT_CLASSIFICATION	Make sure this is a defined parameter and check the incoming value type
WITHOUT_CLASSIFICATION	for each of the defined parameters, make sure its value has been set
WITHOUT_CLASSIFICATION	we never need to apply locks to the SQL
WITHOUT_CLASSIFICATION	inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	during deserialization, we need to reconnect all proxies and collections to this session, as well as the EntityEntry and CollectionEntry instances; these associations are transient because serialization is used for different things.
WITHOUT_CLASSIFICATION	updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	final boolean forceCacheRefresh,
WITHOUT_CLASSIFICATION	final boolean forceCacheRefresh,
WITHOUT_CLASSIFICATION	first, try to load it from the temp PC associated to this SS
WITHOUT_CLASSIFICATION	if the metadata allowed proxy creation and caller did not request forceful eager loading, generate a proxy
WITHOUT_CLASSIFICATION	otherwise immediately materialize it
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	no auto-flushing to support in stateless session
WITHOUT_CLASSIFICATION	after setting values to object, entityMode
WITHOUT_CLASSIFICATION	for EJB3
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	do a check
WITHOUT_CLASSIFICATION	saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	do not auto-flush while outside a transaction
WITHOUT_CLASSIFICATION	this is an internal error of some sort...
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete
WITHOUT_CLASSIFICATION	if it was previously unreferenced, we need to flush in order to get its state into the database in order to execute query
WITHOUT_CLASSIFICATION	not for internal use:
WITHOUT_CLASSIFICATION	otherwise, we only need to flush if there are in-memory changes to the queried tables
WITHOUT_CLASSIFICATION	might need to run a different filter entirely after the flush because the collection role may have changed
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	if it is initialized, see if the underlying instance is contained, since we need to account for the fact that it might have been evicted
WITHOUT_CLASSIFICATION	basically just an adapted copy of find(CriteriaImpl)
WITHOUT_CLASSIFICATION	it is possible for this method to be called during flush processing, so make certain that we do not accidently initialize an uninitialized proxy
WITHOUT_CLASSIFICATION	nothing to do in a stateful session
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore this error for now
WITHOUT_CLASSIFICATION	we need to writeObject() on this since interceptor is user defined
WITHOUT_CLASSIFICATION	the old-time stand-by...
WITHOUT_CLASSIFICATION	parameter bind values...
WITHOUT_CLASSIFICATION	Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	prepend value and type list with null for any positions before the wanted position.
WITHOUT_CLASSIFICATION	Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	we have a CGLIB enhanced entity
WITHOUT_CLASSIFICATION	we have a CGLIB enhanced entity
WITHOUT_CLASSIFICATION	we have a Javassist enhanced entity
WITHOUT_CLASSIFICATION	we have a Javassist enhanced entity
WITHOUT_CLASSIFICATION	FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	let's assume that there is only one lazy fetch group, for now!
WITHOUT_CLASSIFICATION	FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	should not need to grow beyond the size of the total number of columns in the rs
WITHOUT_CLASSIFICATION	should probably no-op commit/rollback here, at least in JTA scenarios
WITHOUT_CLASSIFICATION	Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	explicitly perform no checking...
WITHOUT_CLASSIFICATION	used from testsuite
WITHOUT_CLASSIFICATION	assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	register synch; stats.connect()
WITHOUT_CLASSIFICATION	noncritical, swallow and let the other propagate!
WITHOUT_CLASSIFICATION	calls executeBatch()
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	no big deal
WITHOUT_CLASSIFICATION	sybase driver (jConnect) throwing NPE here in certain cases, but we'll just handle the general "unexpected" case
WITHOUT_CLASSIFICATION	see explanation above...
WITHOUT_CLASSIFICATION	If we are in the process of releasing, no sense checking for aggressive-release possibility.
WITHOUT_CLASSIFICATION	EARLY EXIT!!!!
WITHOUT_CLASSIFICATION	ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	refer to comment in StatefulPersistenceContext.addCollection()
WITHOUT_CLASSIFICATION	ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Note : success = false, because we don't know the outcome of the transaction
WITHOUT_CLASSIFICATION	we already have a callback registered; either a local (org.hibernate.Transaction) transaction has accepted callback responsibilities, or we have previously registered a transaction synch.
WITHOUT_CLASSIFICATION	the configured transaction-factory says it only supports local callback mode, so no sense attempting to register a JTA Synchronization
WITHOUT_CLASSIFICATION	transactions marked for rollback-only cause some TM impls to throw exceptions
WITHOUT_CLASSIFICATION	serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	postInitialize() will be called after initialization
WITHOUT_CLASSIFICATION	cannot handle single quotes
WITHOUT_CLASSIFICATION	todo : for 4.0 private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); this is the legacy logging 'category'...
WITHOUT_CLASSIFICATION	note that for sequential scrolling, we make the assumption that the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	don't even bother trying to read further
WITHOUT_CLASSIFICATION	don't even bother trying to read any further
WITHOUT_CLASSIFICATION	position cursor to the last row
WITHOUT_CLASSIFICATION	sequentially read the result set in reverse until we recognize a change in the key value. At that point, we are pointed at the last physical sequential row for the logical row in which we are interested in processing
WITHOUT_CLASSIFICATION	Read backwards until we read past the first physical sequential row with the key we are interested in loading
WITHOUT_CLASSIFICATION	Finally, read ahead one row to position result set cursor at the first physical row we are interested in loading
WITHOUT_CLASSIFICATION	now get an existing proxy for each row element (if there is one)
WITHOUT_CLASSIFICATION	force the proxy to resolve itself
WITHOUT_CLASSIFICATION	this is equivalent to the old behavior...
WITHOUT_CLASSIFICATION	if null, owner will be retrieved from session
WITHOUT_CLASSIFICATION	final String queryString,
WITHOUT_CLASSIFICATION	if it was a reference to self, don't need to nullify unless we are using native id generation, in which case we definitely need to nullify
WITHOUT_CLASSIFICATION	end of array, start filling again from start
WITHOUT_CLASSIFICATION	in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to PersistentCollection#endRead), we scan the internal loadingCollections map for matches and store those matches in a temp collection. the temp collection is then used to "drive" the #endRead processing.
WITHOUT_CLASSIFICATION	we can reuse it for each row
WITHOUT_CLASSIFICATION	can't reuse in this case
WITHOUT_CLASSIFICATION	First we need to suspend any current JTA transaction and obtain a JDBC connection
WITHOUT_CLASSIFICATION	getResultList(results);
WITHOUT_CLASSIFICATION	if we only returned one entity, query by key is more efficient
WITHOUT_CLASSIFICATION	a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()
WITHOUT_CLASSIFICATION	handle empty collection
WITHOUT_CLASSIFICATION	else no collection element, but also no owner
WITHOUT_CLASSIFICATION	handle empty collections
WITHOUT_CLASSIFICATION	else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)
WITHOUT_CLASSIFICATION	validate() instances of Validatable
WITHOUT_CLASSIFICATION	if we know there is exactly 1 row, we can skip. it would be great if we could _always_ skip this; it is a problem for <key-many-to-one>
WITHOUT_CLASSIFICATION	remove all collections for the entity from the session-level cache
WITHOUT_CLASSIFICATION	null version means the object is in the process of being loaded somewhere else in the ResultSet
WITHOUT_CLASSIFICATION	problematic for <key-many-to-one>!
WITHOUT_CLASSIFICATION	use the id passed in
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	prefer re-generation of identity!
WITHOUT_CLASSIFICATION	no point doing this if NONE was requested
WITHOUT_CLASSIFICATION	If the object is already loaded, return the loaded one
WITHOUT_CLASSIFICATION	its already loaded so don't need to hydrate it
WITHOUT_CLASSIFICATION	cascade the refresh prior to refreshing this entity
WITHOUT_CLASSIFICATION	the load() which takes an entity does not pass an entityName
WITHOUT_CLASSIFICATION	we only check the version when _upgrading_ lock modes
WITHOUT_CLASSIFICATION	look for a proxy
WITHOUT_CLASSIFICATION	we need to upgrade the lock mode to the mode requested
WITHOUT_CLASSIFICATION	its the given optional object
WITHOUT_CLASSIFICATION	instantiate a new instance
WITHOUT_CLASSIFICATION	need to hydrate it.
WITHOUT_CLASSIFICATION	return a newly loaded object
WITHOUT_CLASSIFICATION	will be ignored, using the existing Entry instead
WITHOUT_CLASSIFICATION	key is an entity involved with the operation performed by the listener; value can be either a copy of the entity or the entity itself
WITHOUT_CLASSIFICATION	materialize associations (and initialize the object) later
WITHOUT_CLASSIFICATION	Get the persister for the _subclass_
WITHOUT_CLASSIFICATION	ok in normal Hibernate usage to delete a detached entity; JPA however forbids it, thus this is a hook for HEM to affect this behavior
WITHOUT_CLASSIFICATION	the entry will be removed after the flush, and will no longer override the stale snapshot This is now handled by removeEntity() in EntityDeleteAction persistenceContext.removeDatabaseSnapshot(key);
WITHOUT_CLASSIFICATION	addInitializedCollection(collection, persister, id);
WITHOUT_CLASSIFICATION	EARLY EXIT!
WITHOUT_CLASSIFICATION	EARLY EXIT!
WITHOUT_CLASSIFICATION	|| oj.getJoinable().consumesCollectionAlias()
WITHOUT_CLASSIFICATION	here we do not bother with the discriminator.
WITHOUT_CLASSIFICATION	Code to handle subclasses of topClass
WITHOUT_CLASSIFICATION	woops we got an instance of another class hierarchy branch
WITHOUT_CLASSIFICATION	we can go straight to the first required row
WITHOUT_CLASSIFICATION	we need to step through the rows one row at a time (slow)
WITHOUT_CLASSIFICATION	synchronized to avoid multi-thread access issues; defined as method synch to avoid potential deadlock issues due to nature of code.
WITHOUT_CLASSIFICATION	Allows various loaders (ok mainly the QueryLoader :) to check whether scrolling of their result set should be allowed. By default it is allowed.
WITHOUT_CLASSIFICATION	before adding to collection!
WITHOUT_CLASSIFICATION	if the current depth is 0, the root thing being loaded is the many-to-many collection itself. Here, it is alright to use an inner join...
WITHOUT_CLASSIFICATION	operations which cascade as far as the collection also cascade to collection elements
WITHOUT_CLASSIFICATION	simple, because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element:
WITHOUT_CLASSIFICATION	a composite key
WITHOUT_CLASSIFICATION	if no batch, use "foo = ? and bar = ?"
WITHOUT_CLASSIFICATION	it must be a collection fetch
WITHOUT_CLASSIFICATION	needed later for many-to-many/filter application
WITHOUT_CLASSIFICATION	&& etype.isReferenceToPrimaryKey()
WITHOUT_CLASSIFICATION	it might still need to apply a collection ordering based on a many-to-many defined order-by...
WITHOUT_CLASSIFICATION	if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching TODO: unnecessary for databases with ANSI-style joins
WITHOUT_CLASSIFICATION	belong to other persister belong to other persister
WITHOUT_CLASSIFICATION	we found it
WITHOUT_CLASSIFICATION	we can use an inner join for the many-to-many
WITHOUT_CLASSIFICATION	disable a join back to this same association
WITHOUT_CLASSIFICATION	NOTE: unlike all other Loaders, this one is NOT multithreaded, or cacheable!!
WITHOUT_CLASSIFICATION	the user visible aliases, which are unknown to the superclass, these are not the actual "physical" SQL aliases
WITHOUT_CLASSIFICATION	root entity comes last
WITHOUT_CLASSIFICATION	deliberately ignore return value!
WITHOUT_CLASSIFICATION	alias may be null EARLY EXIT
WITHOUT_CLASSIFICATION	if it is a compound path
WITHOUT_CLASSIFICATION	otherwise assume the parent is the the criteria that created us
WITHOUT_CLASSIFICATION	if its the root criteria, we are done
WITHOUT_CLASSIFICATION	otherwise, recurse
WITHOUT_CLASSIFICATION	the criteria instance
WITHOUT_CLASSIFICATION	the entity name
WITHOUT_CLASSIFICATION	not found in inner query , try the outer query
WITHOUT_CLASSIFICATION	not found in inner query , try the outer query
WITHOUT_CLASSIFICATION	it refers to an alias of a projection
WITHOUT_CLASSIFICATION	should never happen, i think
WITHOUT_CLASSIFICATION	Detect discriminator values...
WITHOUT_CLASSIFICATION	Convert the string value into the proper type.
WITHOUT_CLASSIFICATION	and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us
WITHOUT_CLASSIFICATION	it does not refer to an alias of a projection, look for a property
WITHOUT_CLASSIFICATION	Otherwise, this is an ordinary value.
WITHOUT_CLASSIFICATION	Currently not cachable if autodiscover types is in effect (e.g. "select ...")
WITHOUT_CLASSIFICATION	private final String[] sqlAliases; private final String[] sqlAliasSuffixes;
WITHOUT_CLASSIFICATION	this is only needed (afaict) for ResultTransformer processing...
WITHOUT_CLASSIFICATION	determine if the collection elements are entities...
WITHOUT_CLASSIFICATION	build an array with indices equal to the total number of actual returns in the result Hibernate will return for this query (scalars + non-scalars)
WITHOUT_CLASSIFICATION	replace {....} with corresponding column aliases
WITHOUT_CLASSIFICATION	No additional open braces found in the string, append the rest of the string in its entirty and quit this loop
WITHOUT_CLASSIFICATION	apend everything up until the next encountered open brace
WITHOUT_CLASSIFICATION	it is a simple table alias {foo}
WITHOUT_CLASSIFICATION	passing through anything we do not know : to support jdbc escape sequences HB-898
WITHOUT_CLASSIFICATION	passing through anything we do not know : to support jdbc escape sequences HB-898
WITHOUT_CLASSIFICATION	The current alias is referencing the collection to be eagerly fetched
WITHOUT_CLASSIFICATION	it is a property reference {foo.bar}
WITHOUT_CLASSIFICATION	Possibly handle :something parameters for the query ?
WITHOUT_CLASSIFICATION	Let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	private final List persisters = new ArrayList();
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	NOTE: EARLY EXIT!
WITHOUT_CLASSIFICATION	private final List scalarTypes = new ArrayList(); private final List scalarColumnAliases = new ArrayList();
WITHOUT_CLASSIFICATION	Now, process the returns
WITHOUT_CLASSIFICATION	private List collectionOwnerAliases = new ArrayList(); private List collectionAliases = new ArrayList(); private List collectionPersisters = new ArrayList(); private List collectionResults = new ArrayList();
WITHOUT_CLASSIFICATION	already been processed...
WITHOUT_CLASSIFICATION	already been processed...
WITHOUT_CLASSIFICATION	Make sure the owner alias is known...
WITHOUT_CLASSIFICATION	first, break down the returns into maps keyed by alias so that role returns can be more easily resolved to their owners
WITHOUT_CLASSIFICATION	scalarColumnAliases.add( typeReturn.getColumnAlias() ); scalarTypes.add( typeReturn.getType() );
WITHOUT_CLASSIFICATION	If this return's alias has not been processed yet, do so b4 further processing of this return
WITHOUT_CLASSIFICATION	collectionOwnerAliases.add( ownerAlias );
WITHOUT_CLASSIFICATION	for merging of versioned entities, we consider the version having been changed only when: 1) the two version values are different; AND 2) The target actually represents database state! This second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved
WITHOUT_CLASSIFICATION	this is the second pass through on a merge op, so here we limit the replacement to associations types (value types were already replaced during the first pass)
WITHOUT_CLASSIFICATION	EARLY EXIT
WITHOUT_CLASSIFICATION	cascade-save to collections AFTER the collection owner was saved
WITHOUT_CLASSIFICATION	Initialize the error handling delegate.
WITHOUT_CLASSIFICATION	Use the delegate.
WITHOUT_CLASSIFICATION	currently only the Hibernate-supplied DbTimestampType is supported here
WITHOUT_CLASSIFICATION	This is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	make a new one
WITHOUT_CLASSIFICATION	not so sure this is even valid subtree. but if it was, it'd represent two unrelated table references...
WITHOUT_CLASSIFICATION	(NOT (GT a b) ) => (LE a b)
WITHOUT_CLASSIFICATION	private Type[] sqlResultTypes;
WITHOUT_CLASSIFICATION	include the discriminator and class-level where, but not filters
WITHOUT_CLASSIFICATION	sqlResultTypes = selectClause.getSqlResultTypes();
WITHOUT_CLASSIFICATION	by default
WITHOUT_CLASSIFICATION	This is now handled earlier in this method.
WITHOUT_CLASSIFICATION	-- Loader implementation --
WITHOUT_CLASSIFICATION	-- Loader overrides --
WITHOUT_CLASSIFICATION	(NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)
WITHOUT_CLASSIFICATION	NONE, because its the requested lock mode, not the actual!
WITHOUT_CLASSIFICATION	meant to handle dynamic instantiation queries...
WITHOUT_CLASSIFICATION	--- Query translator methods ---
WITHOUT_CLASSIFICATION	-- Implementation private methods --
WITHOUT_CLASSIFICATION	deduplicate unique constraints sharing the same columns this is needed by Hibernate Annotations since it creates automagically unique constraints for the user
WITHOUT_CLASSIFICATION	Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used
WITHOUT_CLASSIFICATION	to support dialects that have their own identity data type
WITHOUT_CLASSIFICATION	Prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	used also for generation of FK names!
WITHOUT_CLASSIFICATION	usually useless
WITHOUT_CLASSIFICATION	added this caching as I noticed that getType() is being called multiple times...
WITHOUT_CLASSIFICATION	do not add unique constraint on DB not supporting unique and nullable columns
WITHOUT_CLASSIFICATION	for backward compatibility, disable this:
WITHOUT_CLASSIFICATION	may be final may be final may be final
WITHOUT_CLASSIFICATION	may be final
WITHOUT_CLASSIFICATION	may be final
WITHOUT_CLASSIFICATION	Custom SQL
WITHOUT_CLASSIFICATION	Primary key constraint
WITHOUT_CLASSIFICATION	the root of the incoming property path matched one of the embedded composite identifier properties
WITHOUT_CLASSIFICATION	ignore it...
WITHOUT_CLASSIFICATION	flat recursive algorithm
WITHOUT_CLASSIFICATION	an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() and checked later, so it needs to be excluded
WITHOUT_CLASSIFICATION	if the hibernate-mapping did not specify a schema/catalog, use the defaults specified by properties - but note that if the schema/catalog were specified in hibernate-mapping, or as params, they will already be initialized and will override the values set here (they are in identifierGeneratorProperties)
WITHOUT_CLASSIFICATION	pass the entity-name, if not a collection-id
WITHOUT_CLASSIFICATION	Custom SQL
WITHOUT_CLASSIFICATION	Primary key constraint
WITHOUT_CLASSIFICATION	pass the column name (a generated id almost always has a single column)
WITHOUT_CLASSIFICATION	needed to satisfy KeyValue
WITHOUT_CLASSIFICATION	empty means no scoping
WITHOUT_CLASSIFICATION	index should be last column listed
WITHOUT_CLASSIFICATION	if it is a formula index, use the element columns in the PK
WITHOUT_CLASSIFICATION	don't create a unique key, 'cos some databases don't like a UK on nullable columns
WITHOUT_CLASSIFICATION	ArrayList list = new ArrayList();list.addAll( getKey().getConstraintColumns() );list.addAll( getIndex().getConstraintColumns() );getCollectionTable().createUniqueKey(list);
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	no foreign key element of for a one-to-many
WITHOUT_CLASSIFICATION	TODO: we could just return all false...
WITHOUT_CLASSIFICATION	the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints
WITHOUT_CLASSIFICATION	TODO: we could just return all false...
WITHOUT_CLASSIFICATION	if the property mapping consists of all formulas, make it non-updateable
WITHOUT_CLASSIFICATION	columnUpdateability.length==0 ||
WITHOUT_CLASSIFICATION	if the property mapping consists of all formulas, make it insertable
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	expected type is intrinsic here...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	return memberPersister.getPropertyType(propertyName);
WITHOUT_CLASSIFICATION	return memberPersister.toColumns(alias, propertyName);
WITHOUT_CLASSIFICATION	return memberPersister.getType();
WITHOUT_CLASSIFICATION	&& !indexIsFormula
WITHOUT_CLASSIFICATION	return !isOneToMany();
WITHOUT_CLASSIFICATION	instanceof AssociationType;
WITHOUT_CLASSIFICATION	we need to determine the best way to know that two joinables represent a single many-to-many...
WITHOUT_CLASSIFICATION	strip leading ','
WITHOUT_CLASSIFICATION	public boolean isSubselectLoadable();
WITHOUT_CLASSIFICATION	KEY
WITHOUT_CLASSIFICATION	columns
WITHOUT_CLASSIFICATION	SQL statements
WITHOUT_CLASSIFICATION	extra information about the element type
WITHOUT_CLASSIFICATION	types
WITHOUT_CLASSIFICATION	custom sql
WITHOUT_CLASSIFICATION	private final String unquotedIdentifierColumnName;
WITHOUT_CLASSIFICATION	dynamic filters specifically for many-to-many inside the collection
WITHOUT_CLASSIFICATION	dynamic filters for the collection
WITHOUT_CLASSIFICATION	NativeSQL: collect key column and auto-aliases
WITHOUT_CLASSIFICATION	unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);
WITHOUT_CLASSIFICATION	ELEMENT
WITHOUT_CLASSIFICATION	NativeSQL: collect element column and auto-aliases
WITHOUT_CLASSIFICATION	INDEX AND ROW SELECT
WITHOUT_CLASSIFICATION	NativeSQL: collect index column and auto-aliases
WITHOUT_CLASSIFICATION	unquotedIdentifierColumnName = identifierColumnAlias;
WITHOUT_CLASSIFICATION	unquotedIdentifierColumnName = null;
WITHOUT_CLASSIFICATION	GENERATE THE SQL:
WITHOUT_CLASSIFICATION	for non-arrays, we don't need to know the element class elementType.returnedClass();
WITHOUT_CLASSIFICATION	not all classpersisters implement PropertyMapping!
WITHOUT_CLASSIFICATION	Handle any filters applied to this collection
WITHOUT_CLASSIFICATION	Handle any filters applied to this collection for many-to-many
WITHOUT_CLASSIFICATION	if there is a user-specified loader, return that TODO: filters!?
WITHOUT_CLASSIFICATION	Take care of any entities that might have been evicted!
WITHOUT_CLASSIFICATION	strip leading ','
WITHOUT_CLASSIFICATION	Run a subquery loader
WITHOUT_CLASSIFICATION	needed by arrays
WITHOUT_CLASSIFICATION	TODO: something with formulas...
WITHOUT_CLASSIFICATION	an assertion
WITHOUT_CLASSIFICATION	Remove all the old entries
WITHOUT_CLASSIFICATION	create all the new entries
WITHOUT_CLASSIFICATION	&& !indexIsFormula
WITHOUT_CLASSIFICATION	&& !indexIsFormula
WITHOUT_CLASSIFICATION	delete all the deleted entries
WITHOUT_CLASSIFICATION	insert all the new entries
WITHOUT_CLASSIFICATION	==elementType ??
WITHOUT_CLASSIFICATION	update all the modified entries
WITHOUT_CLASSIFICATION	identifier collections not supported for 1-to-many
WITHOUT_CLASSIFICATION	update removed rows fks to null
WITHOUT_CLASSIFICATION	will still be issued when it used to be null
WITHOUT_CLASSIFICATION	now update all changed or added rows fks
WITHOUT_CLASSIFICATION	buf.append( selectFragment( lhsAlias, "" ) )ignore suffix for collection columns!
WITHOUT_CLASSIFICATION	use suffix for the entity columns
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	private final String rootTableName;
WITHOUT_CLASSIFICATION	INITIALIZATION:
WITHOUT_CLASSIFICATION	Custom SQL
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	Execute the SQL:
WITHOUT_CLASSIFICATION	This could also just be true all the time...
WITHOUT_CLASSIFICATION	chop the last union (all)
WITHOUT_CLASSIFICATION	TODO: check this....
WITHOUT_CLASSIFICATION	INITIALIZATION:
WITHOUT_CLASSIFICATION	properties of this class, including inherited properties
WITHOUT_CLASSIFICATION	the closure of all properties in the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	subclass discrimination works by assigning particular values to certain combinations of null primary key values in the outer join using an SQL CASE
WITHOUT_CLASSIFICATION	MULTITABLES
WITHOUT_CLASSIFICATION	Custom sql
WITHOUT_CLASSIFICATION	subclass closure properties
WITHOUT_CLASSIFICATION	SUBCLASSES
WITHOUT_CLASSIFICATION	( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();
WITHOUT_CLASSIFICATION	( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();
WITHOUT_CLASSIFICATION	don't need subclass tables, because they can't appear in conditions
WITHOUT_CLASSIFICATION	special case where we need to force incloude all subclass joins
WITHOUT_CLASSIFICATION	the class hierarchy structure
WITHOUT_CLASSIFICATION	properties of this class, including inherited properties
WITHOUT_CLASSIFICATION	the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	get em on the second pass!
WITHOUT_CLASSIFICATION	now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)
WITHOUT_CLASSIFICATION	discriminator column
WITHOUT_CLASSIFICATION	INITIALIZATION:
WITHOUT_CLASSIFICATION	private final Map propertyTableNumbersByName = new HashMap();
WITHOUT_CLASSIFICATION	CLASS + TABLE
WITHOUT_CLASSIFICATION	DISCRIMINATOR
WITHOUT_CLASSIFICATION	PROPERTIES
WITHOUT_CLASSIFICATION	SUBCLASSES
WITHOUT_CLASSIFICATION	Execute the SQL:
WITHOUT_CLASSIFICATION	JOINS
WITHOUT_CLASSIFICATION	propertyTableNumbersByName.put( prop.getName(), join );
WITHOUT_CLASSIFICATION	Access cached SQL
WITHOUT_CLASSIFICATION	figure out which tables need to be fetched
WITHOUT_CLASSIFICATION	figure out which columns are needed
WITHOUT_CLASSIFICATION	figure out which formulas are needed
WITHOUT_CLASSIFICATION	render the SQL
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	The optional SQL string defined in the where attribute
WITHOUT_CLASSIFICATION	information about lazy properties of this class
WITHOUT_CLASSIFICATION	information about all properties in class hierarchy
WITHOUT_CLASSIFICATION	information about all columns/formulas in class hierarchy
WITHOUT_CLASSIFICATION	dynamic filters attached to the class-level
WITHOUT_CLASSIFICATION	SQL strings
WITHOUT_CLASSIFICATION	for objects that came in via update()
WITHOUT_CLASSIFICATION	PROPERTIES
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	IDENTIFIER
WITHOUT_CLASSIFICATION	VERSION
WITHOUT_CLASSIFICATION	WHERE STRING
WITHOUT_CLASSIFICATION	SUBCLASS PROPERTY CLOSURE
WITHOUT_CLASSIFICATION	before add :-)
WITHOUT_CLASSIFICATION	Handle any filters applied to the class level
WITHOUT_CLASSIFICATION	only one-to-one is lazy fetched
WITHOUT_CLASSIFICATION	note early exit here:
WITHOUT_CLASSIFICATION	object have been loaded with setReadOnly(true); HHH-2236
WITHOUT_CLASSIFICATION	NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!
WITHOUT_CLASSIFICATION	strip leading ", "
WITHOUT_CLASSIFICATION	if there is no resulting row, return null
WITHOUT_CLASSIFICATION	otherwise return the "hydrated" state (ie. associations are not resolved)
WITHOUT_CLASSIFICATION	null owner ok??
WITHOUT_CLASSIFICATION	null sql means that the only lazy properties are shared PK one-to-one associations which are handled differently in the Type#nullSafeGet code...
WITHOUT_CLASSIFICATION	Create a new FROM node for the referenced class.
WITHOUT_CLASSIFICATION	the difficulty here is exactly what do we update in order to force the version to be incremented in the db...
WITHOUT_CLASSIFICATION	performance op to avoid the array search
WITHOUT_CLASSIFICATION	properly handle property-ref-based associations
WITHOUT_CLASSIFICATION	Enable for HHH-440, which we don't like:
WITHOUT_CLASSIFICATION	ALIASES
WITHOUT_CLASSIFICATION	aliases named identifier ( alias.idname )
WITHOUT_CLASSIFICATION	aliases for composite-id's
WITHOUT_CLASSIFICATION	Fetch embedded identifiers propertynames from the "virtual" identifier component
WITHOUT_CLASSIFICATION	embedded composite ids ( alias.idname1, alias.idname2 )
WITHOUT_CLASSIFICATION	TODO: skip formulas?
WITHOUT_CLASSIFICATION	don't need filters for the static loaders
WITHOUT_CLASSIFICATION	do two passes, for collection property-ref!
WITHOUT_CLASSIFICATION	select the correct row by either pk or rowid
WITHOUT_CLASSIFICATION	TODO: eventually, rowIdName[j]
WITHOUT_CLASSIFICATION	this is a property of the table, which we are updating
WITHOUT_CLASSIFICATION	special shortcut for id properties, skip the join! this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	we are using "all" or "dirty" property-based optimistic locking
WITHOUT_CLASSIFICATION	nothing to do; even if the operand is a parameter, no way we could infer an appropriate expected type here
WITHOUT_CLASSIFICATION	this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	add normal properties
WITHOUT_CLASSIFICATION	add the discriminator
WITHOUT_CLASSIFICATION	more specifically : "? [op] datetime" 1) if the operator is MINUS, the param needs to be of some datetime type 2) if the operator is PLUS, the param needs to be of some numeric type
WITHOUT_CLASSIFICATION	add normal properties
WITHOUT_CLASSIFICATION	this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	add the discriminator
WITHOUT_CLASSIFICATION	add the primary key
WITHOUT_CLASSIFICATION	delegate already handles PK columns
WITHOUT_CLASSIFICATION	we can't batch joined inserts, especially not if it is an identity insert; nor can we batch statements where the expectation is based on an output param
WITHOUT_CLASSIFICATION	Render the SQL query
WITHOUT_CLASSIFICATION	Write the values of fields onto the prepared statement - we MUST use the state at the time the insert was issued (cos of foreign key constraints). Not necessarily the object's current state
WITHOUT_CLASSIFICATION	TODO : shouldnt inserts be Expectations.NONE?
WITHOUT_CLASSIFICATION	don't bother trying to update, we know there is no row there yet
WITHOUT_CLASSIFICATION	if all fields are null, we might need to delete existing row
WITHOUT_CLASSIFICATION	there is probably a row there, so try to update if no rows were updated, we will find out
WITHOUT_CLASSIFICATION	note: updates to joined tables can't be batched...
WITHOUT_CLASSIFICATION	starting index
WITHOUT_CLASSIFICATION	Now write the values of fields onto the prepared statement
WITHOUT_CLASSIFICATION	Write any appropriate versioning conditional parameters
WITHOUT_CLASSIFICATION	Render the SQL query
WITHOUT_CLASSIFICATION	Do the key. The key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued
WITHOUT_CLASSIFICATION	We should use the _current_ object state (ie. after any updates that occurred during flush)
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)
WITHOUT_CLASSIFICATION	more specifically : "datetime [op] ?" 1) if the operator is MINUS, we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is PLUS, the param needs to be of some numeric type
WITHOUT_CLASSIFICATION	For the case of dynamic-update="true", we need to generate the UPDATE SQL
WITHOUT_CLASSIFICATION	don't need to check laziness (dirty checking algorithm handles that)
WITHOUT_CLASSIFICATION	For the case of dynamic-update="false", or no snapshot, we use the static SQL
WITHOUT_CLASSIFICATION	if not "get", then try "is"
WITHOUT_CLASSIFICATION	Now update only the tables with dirty properties (and the table with the version number)
WITHOUT_CLASSIFICATION	For the case of dynamic-insert="true", we need to generate the INSERT SQL
WITHOUT_CLASSIFICATION	For the case of dynamic-insert="true", we need to generate the INSERT SQL
WITHOUT_CLASSIFICATION	For the case of dynamic-insert="false", use the static SQL
WITHOUT_CLASSIFICATION	For the case of dynamic-insert="false", use the static SQL
WITHOUT_CLASSIFICATION	not supported
WITHOUT_CLASSIFICATION	this property belongs to the table and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	we need to utilize dynamic delete statements
WITHOUT_CLASSIFICATION	otherwise, utilize the static delete statements
WITHOUT_CLASSIFICATION	just a performance opt!
WITHOUT_CLASSIFICATION	just a performance opt!
WITHOUT_CLASSIFICATION	all joins join to the pk of the driving table
WITHOUT_CLASSIFICATION	notice that we skip the first table; it is the driving table!
WITHOUT_CLASSIFICATION	we can inner join to superclass tables (the row MUST be there) we can never inner join to subclass tables
WITHOUT_CLASSIFICATION	skip the driving table
WITHOUT_CLASSIFICATION	get 'em in the right order (not that it really matters)
WITHOUT_CLASSIFICATION	here, we work under the following assumptions: ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} : always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime : always results in a DOUBLE 3) datetime - {something other than datetime} : always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases
WITHOUT_CLASSIFICATION	render the where and from parts
WITHOUT_CLASSIFICATION	we could regerate this inside each called method!
WITHOUT_CLASSIFICATION	now render the joins
WITHOUT_CLASSIFICATION	This will add the new from element to the origin.
WITHOUT_CLASSIFICATION	now render the select clause
WITHOUT_CLASSIFICATION	now tie it all together
WITHOUT_CLASSIFICATION	insert/update/delete SQL
WITHOUT_CLASSIFICATION	select SQL
WITHOUT_CLASSIFICATION	no need to check laziness, dirty checking handles that
WITHOUT_CLASSIFICATION	Fully resolve the map reference, create implicit joins.
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	The basic implementation is to simply use the node's text
WITHOUT_CLASSIFICATION	for dialects which are known to not support ANSI-SQL row-value-constructor syntax, we should mutate the tree.
WITHOUT_CLASSIFICATION	Due to the complexity in initializing the SelectClause, do not generate one here. If it is not found; simply return null... Also, do not cache since it gets generated well after we are created.
WITHOUT_CLASSIFICATION	check the version unsaved-value, if appropriate
WITHOUT_CLASSIFICATION	let this take precedence if defined, since it works for assigned identifiers
WITHOUT_CLASSIFICATION	check the id unsaved-value
WITHOUT_CLASSIFICATION	check to see if it is in the second-level cache
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	For property references generate <tablealias>.<columnname> as <projectionalias>
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	if there is no resulting row, return null
WITHOUT_CLASSIFICATION	force immediate execution of the insert
WITHOUT_CLASSIFICATION	If this from element is a collection and the path is a collection property (maxIndex, etc.) then generate a sub-query.
WITHOUT_CLASSIFICATION	entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	cannot occur
WITHOUT_CLASSIFICATION	cannot occur
WITHOUT_CLASSIFICATION	only carry on if the method has no parameters
WITHOUT_CLASSIFICATION	try "get"
WITHOUT_CLASSIFICATION	do nothing...
WITHOUT_CLASSIFICATION	do nothing...
WITHOUT_CLASSIFICATION	should be safe to only ever expect EntityPersister references here
WITHOUT_CLASSIFICATION	this page intentionally left blank :)
WITHOUT_CLASSIFICATION	do not do anything
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	cant instantiate
WITHOUT_CLASSIFICATION	if it is a property of an embedded component, invoke on the "identifier"
WITHOUT_CLASSIFICATION	otherwise:
WITHOUT_CLASSIFICATION	skip finalize methods
WITHOUT_CLASSIFICATION	note: interfaces is assumed to already contain HibernateProxy.class
WITHOUT_CLASSIFICATION	note: interfaces is assumed to already contain HibernateProxy.class
WITHOUT_CLASSIFICATION	HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.
WITHOUT_CLASSIFICATION	while constructor is running
WITHOUT_CLASSIFICATION	while constructor is running
WITHOUT_CLASSIFICATION	note: interface is assumed to already contain HibernateProxy.class
WITHOUT_CLASSIFICATION	interfaces arguments
WITHOUT_CLASSIFICATION	TODO!
WITHOUT_CLASSIFICATION	Get the caller
WITHOUT_CLASSIFICATION	Get the caller principals
WITHOUT_CLASSIFICATION	private static final Alias DEFAULT_ALIAS = new Alias(10, null);
WITHOUT_CLASSIFICATION	Needed to bump this up to DotNode, because that is the only thing which currently knows about the property-ref path in the correct format; it is either this, or recurse over the DotNodes constructing the property path just like DotNode does internally
WITHOUT_CLASSIFICATION	if the identifier is quoted, remove the quotes
WITHOUT_CLASSIFICATION	truncate the identifier to the max alias length, less the suffix length
WITHOUT_CLASSIFICATION	full joins are not supported.. yet!
WITHOUT_CLASSIFICATION	null is not considered the same type as Integer. $NON-NLS-1 $NON-NLS-1
WITHOUT_CLASSIFICATION	the outerJoinsAfterWhere needs to come before where clause to properly handle dynamic filters
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	$NON-NLS-1
WITHOUT_CLASSIFICATION	strip off any leading 'and' token
WITHOUT_CLASSIFICATION	if the condition is not already there...
WITHOUT_CLASSIFICATION	dontSpace.add("'");
WITHOUT_CLASSIFICATION	for MySQL
WITHOUT_CLASSIFICATION	HashMap columnsUnique = new HashMap();
WITHOUT_CLASSIFICATION	null caused some problems
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	not sure if this would ever be null but wanted to be careful
WITHOUT_CLASSIFICATION	even on inverse="true"
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	If true then execute db updates, otherwise just generate and display updates
WITHOUT_CLASSIFICATION	we only release the connection
WITHOUT_CLASSIFICATION	deprecated option...
WITHOUT_CLASSIFICATION	if an exception occurs during flush, user must call rollback()
WITHOUT_CLASSIFICATION	actually, this last test is probably unnecessary, since beforeCompletion() doesn't get called during rollback
WITHOUT_CLASSIFICATION	this one only really needed for badly-behaved applications! (if the TransactionManager has a Sychronization registered, its a noop) (actually we do need it for downgrading locks)
WITHOUT_CLASSIFICATION	Create an DotNode AST for the path and resolve it.
WITHOUT_CLASSIFICATION	if an exception occurs during flush, user must call rollback()
WITHOUT_CLASSIFICATION	if we could not register a synchronization, do the before/after completion callbacks ourself (but we need to let jdbcContext know that this is what we are going to do, so it doesn't keep trying to register synchronizations)
WITHOUT_CLASSIFICATION	swallow it, and continue to roll back JTA transaction
WITHOUT_CLASSIFICATION	so the transaction is already rolled back, by JTA spec
WITHOUT_CLASSIFICATION	this method is a noop if there is a Synchronization!
WITHOUT_CLASSIFICATION	two conditions where we need to transform this to a theta-join syntax: 1) 'elem' is the "root from-element" in correlated subqueries 2) The DotNode.useThetaStyleImplicitJoins has been set to true and 'elem' represents an implicit join
WITHOUT_CLASSIFICATION	WebSphere, however, is not a sane JEE/JTA container...
WITHOUT_CLASSIFICATION	for sane JEE/JTA containers, the transaction itself functions as its identifier...
WITHOUT_CLASSIFICATION	swallow, the transaction was finished
WITHOUT_CLASSIFICATION	all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Create the join element under the from element.
WITHOUT_CLASSIFICATION	all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~
WITHOUT_CLASSIFICATION	map of EntityMode -> Tuplizer
WITHOUT_CLASSIFICATION	this is a virtual id property...
WITHOUT_CLASSIFICATION	this one needed only for guessEntityMode()
WITHOUT_CLASSIFICATION	create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel
WITHOUT_CLASSIFICATION	then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	Build the dynamic-map tuplizer...
WITHOUT_CLASSIFICATION	then dom4j tuplizer, if dom4j representation is available
WITHOUT_CLASSIFICATION	Build the dynamic-map tuplizer...
WITHOUT_CLASSIFICATION	put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	found a ctor, but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	private final SessionFactoryImplementor sessionFactory;
WITHOUT_CLASSIFICATION	cached for efficiency...
WITHOUT_CLASSIFICATION	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {
WITHOUT_CLASSIFICATION	this.sessionFactory = sessionFactory;
WITHOUT_CLASSIFICATION	it was not embedded, so the argument is just an id
WITHOUT_CLASSIFICATION	then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	then dom4j tuplizer, if dom4j representation is available
WITHOUT_CLASSIFICATION	put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	then handle any user-defined entity modes...
WITHOUT_CLASSIFICATION	return currentId;
WITHOUT_CLASSIFICATION	reset the id
WITHOUT_CLASSIFICATION	origin.addDestination( destination ); This was the cause of HHH-242 origin.setType( FROM_FRAGMENT ); Set the parent node type so that the AST is properly formed. The destination node will have all the FROM text. The parent node is a collection join too (voodoo - see JoinProcessor)
WITHOUT_CLASSIFICATION	reset the version
WITHOUT_CLASSIFICATION	the default is to simply not lazy fetch properties for now...
WITHOUT_CLASSIFICATION	Add the second join, the one that ends in the destination table.
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	found a ctor, but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy
WITHOUT_CLASSIFICATION	return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();
WITHOUT_CLASSIFICATION	not final because proxy factory creation can fail
WITHOUT_CLASSIFICATION	superclass entity-name
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	init the aliases, after initing the constructornode
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	legacy behavior (with no abstract attribute specified)
WITHOUT_CLASSIFICATION	Get ready to start adding nodes.
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	note: this affects the return value!
WITHOUT_CLASSIFICATION	Need to account for allowable '_' within the variant
WITHOUT_CLASSIFICATION	Add the type to the list of returned sqlResultTypes.
WITHOUT_CLASSIFICATION	Collection Types:
WITHOUT_CLASSIFICATION	convenience methods relating to operations across arrays of types...
WITHOUT_CLASSIFICATION	lobs cannot be compared
WITHOUT_CLASSIFICATION	Blobs are ignored by merge()
WITHOUT_CLASSIFICATION	value is the entity name
WITHOUT_CLASSIFICATION	EARLY EXIT!
WITHOUT_CLASSIFICATION	generate id select fragment and then property select fragment for each expression, just like generateSelectFragments().
WITHOUT_CLASSIFICATION	TODO!
WITHOUT_CLASSIFICATION	xml is the entity name
WITHOUT_CLASSIFICATION	special case ... this is the leaf of the containment graph, even though not immutable
WITHOUT_CLASSIFICATION	tolerates nulls
WITHOUT_CLASSIFICATION	sqlResultTypeList,
WITHOUT_CLASSIFICATION	metaType is assumed to be single-column type
WITHOUT_CLASSIFICATION	Get all the select expressions (that we just generated) and render the select.
WITHOUT_CLASSIFICATION	Look through the FromElement's children to find any collections of values that should be fetched...
WITHOUT_CLASSIFICATION	return AssociationType.FOREIGN_KEY_TO_PARENT; this is better but causes a transient object exception...
WITHOUT_CLASSIFICATION	Use the lower case function name. Remember whether we're in a SELECT clause or not.
WITHOUT_CLASSIFICATION	IDENT might be the name of a class.
WITHOUT_CLASSIFICATION	TODO!!!
WITHOUT_CLASSIFICATION	st.setTimestamp( index, new Timestamp( cal.getTimeInMillis() ), cal ); JDK 1.5 only
WITHOUT_CLASSIFICATION	st.setDate( index, new Date( cal.getTimeInMillis() ), cal ); JDK 1.5 only
WITHOUT_CLASSIFICATION	both are Timestamps
WITHOUT_CLASSIFICATION	at least one is a plain old Date
WITHOUT_CLASSIFICATION	noop
WITHOUT_CLASSIFICATION	if the corresponding SQL value is NULL, the reader we got is NULL as well
WITHOUT_CLASSIFICATION	Fetch Reader content up to the end - and put characters in a StringBuffer
WITHOUT_CLASSIFICATION	Return StringBuffer content as a large String
WITHOUT_CLASSIFICATION	or Types.LONGVARCHAR?
WITHOUT_CLASSIFICATION	Not called at runtime so doesn't matter if its slow :)
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Chop off the rest of the tree.
WITHOUT_CLASSIFICATION	different nullability rules for pk/fk
WITHOUT_CLASSIFICATION	cache this
WITHOUT_CLASSIFICATION	only really need new array during semiresolve!
WITHOUT_CLASSIFICATION	Forcefully remove leading ands from where fragments; the grammar will handle adding them
WITHOUT_CLASSIFICATION	TODO!!!!!!!
WITHOUT_CLASSIFICATION	Create a new FILTERS node as a parent of all filters
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Note : simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the TIMESTAMP datatype supported by Sybase and SQL Server, which are completely db-generated values...
WITHOUT_CLASSIFICATION	lobs cannot be compared
WITHOUT_CLASSIFICATION	not really necessary, I guess...
WITHOUT_CLASSIFICATION	Clobs are ignored by merge() operation
WITHOUT_CLASSIFICATION	we do not have to worry about queued additions to uninitialized collections, since they can only occur for inverse collections!
WITHOUT_CLASSIFICATION	collections cannot be compared
WITHOUT_CLASSIFICATION	remember the uk value
WITHOUT_CLASSIFICATION	NOOP
WITHOUT_CLASSIFICATION	processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);
WITHOUT_CLASSIFICATION	we must use the "remembered" uk value, since it is not available from the EntityEntry during assembly
WITHOUT_CLASSIFICATION	collections don't dirty an unversioned parent entity
WITHOUT_CLASSIFICATION	return false;
WITHOUT_CLASSIFICATION	This just handles a particular case of component projection, perhaps get rid of it and throw an exception
WITHOUT_CLASSIFICATION	NOTE: we avoid joining to the next table if the named property is just the foreign key value
WITHOUT_CLASSIFICATION	the key is the owning entity itself, so get the ID from the key
WITHOUT_CLASSIFICATION	if the original is a PersistentCollection, and that original was not flagged as dirty, then reset the target's dirty flag here after the copy operation. </p> One thing to be careful of here is a "bare" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know...
WITHOUT_CLASSIFICATION	ignore subselect keywords
WITHOUT_CLASSIFICATION	copy elements into newly empty target collection
WITHOUT_CLASSIFICATION	for a null target, or a target which is the same as the original, we need to put the merged elements in a new collection
WITHOUT_CLASSIFICATION	by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here...
WITHOUT_CLASSIFICATION	get the elements back into the target making sure to handle dirty flag
WITHOUT_CLASSIFICATION	check if collection is currently being loaded
WITHOUT_CLASSIFICATION	check if it is already completely loaded, but unowned
WITHOUT_CLASSIFICATION	cache the actual id of the object, not the value of the property-ref, which might not be initialized
WITHOUT_CLASSIFICATION	TODO!!!!!!!
WITHOUT_CLASSIFICATION	create a new collection wrapper, to be initialized later
WITHOUT_CLASSIFICATION	Some JDBC drivers erroneously return an empty array here for a null DB value :/
WITHOUT_CLASSIFICATION	our column span is the number of columns in the PK
WITHOUT_CLASSIFICATION	cannot batch fetch by unique key (property-ref associations)
WITHOUT_CLASSIFICATION	we already know current is not null...
WITHOUT_CLASSIFICATION	the ids are fully resolved, so compare them with isDirty(), not isModified()
WITHOUT_CLASSIFICATION	the owner of the association is not the owner of the id
WITHOUT_CLASSIFICATION	----------------------------------------------------------- Constructors
WITHOUT_CLASSIFICATION	----------------------------------------------------- Instance Variables
WITHOUT_CLASSIFICATION	public static JDBCException newJDBCException(String string, SQLException root, String sql) { string = string + " [" + sql + ']'; log.error(string, root); logExceptions(root); return new JDBCException(string, root, sql); } public static JDBCException newJDBCException(String string, SQLException root) { log.error(string, root); logExceptions(root); return new JDBCException(string, root); }
WITHOUT_CLASSIFICATION	--------------------------------------------------------- Public Methods
WITHOUT_CLASSIFICATION	Compare the two maps for equality
WITHOUT_CLASSIFICATION	Simple tests that require no synchronization
WITHOUT_CLASSIFICATION	Sybase fail if we don't do that, sigh...
WITHOUT_CLASSIFICATION	Handles things like: a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded "and") x in ( a, b, c ) (overloaded brackets) not not a a is not null (overloaded "not") etc...... and expressions like foo = bar (maps to: foo.id = bar.id) foo.Bar = 'foo' (maps to: foo.bar = 'foo') foo.Bar.Baz = 1.0 (maps to: foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.Bar.Baz (maps to: bar.baz = 1.0 and foo.Bar = bar.id) foo.Bar.Baz = a.B.C (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) foo.Bar.Baz + a.B.C (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) ( foo.Bar.Baz + 1.0 ) < 2.0 (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)
WITHOUT_CLASSIFICATION	release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	try to "pretty print" it
WITHOUT_CLASSIFICATION	otherwise, just dump it
WITHOUT_CLASSIFICATION	its an interface so we can't really tell anything...
WITHOUT_CLASSIFICATION	its an interface so we can't really tell anything...
WITHOUT_CLASSIFICATION	use default behavior
WITHOUT_CLASSIFICATION	NOTE: early return
WITHOUT_CLASSIFICATION	the MRU cache used to keep hard references to the most recently used query plans; note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the actual kept entries are the MRU entries
WITHOUT_CLASSIFICATION	we want to be able to just use the defaults, if JNDI environment properties are not supplied so don't put null in anywhere
WITHOUT_CLASSIFICATION	Clone -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Serialize -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	stream closed in the finally
WITHOUT_CLASSIFICATION	stream closed in the finally
WITHOUT_CLASSIFICATION	Deserialize -----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	static methods only - hide constructor
WITHOUT_CLASSIFICATION	&& !('_'==character)
WITHOUT_CLASSIFICATION	returnign null!
WITHOUT_CLASSIFICATION	returnign null!
WITHOUT_CLASSIFICATION	includes last '.'
WITHOUT_CLASSIFICATION	+1 to include the following '.'
WITHOUT_CLASSIFICATION	Impl note: takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method...
WITHOUT_CLASSIFICATION	first time we find match!
WITHOUT_CLASSIFICATION	entityNames may now include slashes for the representations classname may be an inner class
WITHOUT_CLASSIFICATION	wrapped iterators
WITHOUT_CLASSIFICATION	index of current iterator in the wrapped iterators array
WITHOUT_CLASSIFICATION	the current iterator
WITHOUT_CLASSIFICATION	the last used iterator
WITHOUT_CLASSIFICATION	it was a boolean expression
WITHOUT_CLASSIFICATION	public static Object[] clone(Class elementClass, Object[] array) {Object[] result = (Object[]) Array.newInstance( elementClass, array.length );System.arraycopy(array, 0, result, 0, array.length);return result;}
WITHOUT_CLASSIFICATION	call this before any Iterator method to make sure that the current Iterator is not exhausted
WITHOUT_CLASSIFICATION	doable if needed
WITHOUT_CLASSIFICATION	set last used iterator here, in case the user calls remove before calling hasNext() or next() (although they shouldn't)
WITHOUT_CLASSIFICATION	peek ahead
WITHOUT_CLASSIFICATION	if we reach the end of the string w/o finding the matching end, that is an exception
WITHOUT_CLASSIFICATION	we have a placeholder, spin forward till we find the end
WITHOUT_CLASSIFICATION	make sure spinning forward did not put us past the end of the buffer...
WITHOUT_CLASSIFICATION	First, try to locate this resource through the current context classloader.
WITHOUT_CLASSIFICATION	Next, try to locate this resource through this class's classloader
WITHOUT_CLASSIFICATION	Next, try to locate this resource through the system classloader
WITHOUT_CLASSIFICATION	Anywhere else we should look?
WITHOUT_CLASSIFICATION	would need an IdentitySet for this!
WITHOUT_CLASSIFICATION	Arrays.asList doesn't do primitive arrays
WITHOUT_CLASSIFICATION	faster?
WITHOUT_CLASSIFICATION	the name of a class
WITHOUT_CLASSIFICATION	Its the listener class name
WITHOUT_CLASSIFICATION	allow 9,8,7,6,5,4,3,2,1
WITHOUT_CLASSIFICATION	default to element set if no elements() specified
WITHOUT_CLASSIFICATION	look for the instance by uuid
WITHOUT_CLASSIFICATION	in case we were deserialized in a different JVM, look for an instance with the same name (alternatively we could do an actual JNDI lookup here....)
WITHOUT_CLASSIFICATION	first, lets determine whether to apply cglib or javassist based instrumentation...
WITHOUT_CLASSIFICATION	Make sure we don't override previous set values
WITHOUT_CLASSIFICATION	entirely optional!!
WITHOUT_CLASSIFICATION	Its the listener instance (or better be)
WITHOUT_CLASSIFICATION	context.unbind(boundName);
WITHOUT_CLASSIFICATION	readResolveObject
WITHOUT_CLASSIFICATION	cfg.setProperty("hibernate.show_sql", "true");
WITHOUT_CLASSIFICATION	Defensive, convenience methods
WITHOUT_CLASSIFICATION	Create the SessionFactory from hibernate.cfg.xml
WITHOUT_CLASSIFICATION	Make sure you log the exception, as it might be swallowed
WITHOUT_CLASSIFICATION	Begin unit of work
WITHOUT_CLASSIFICATION	Write HTML header
WITHOUT_CLASSIFICATION	Handle actions
WITHOUT_CLASSIFICATION	Print page
WITHOUT_CLASSIFICATION	Write HTML footer
WITHOUT_CLASSIFICATION	End unit of work
WITHOUT_CLASSIFICATION	Start the session to be used for this request
WITHOUT_CLASSIFICATION	make the session available to the session factory's "current context"
WITHOUT_CLASSIFICATION	pass control along to the rest of the processing chain
WITHOUT_CLASSIFICATION	remove session from "current context"
WITHOUT_CLASSIFICATION	Eager fetch the collection so we can use it detached
WITHOUT_CLASSIFICATION	If we want to handle it bidirectional and detached, we also need to load this collection with an eager outer-join fetch, this time with Criteria and not HQL:
WITHOUT_CLASSIFICATION	Event anEvent = (Event) session .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN) .add( Expression.eq("id", eventId) ) .uniqueResult(); Eager fetch the colleciton so we can use it detached
WITHOUT_CLASSIFICATION	End of first unit of work
WITHOUT_CLASSIFICATION	or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);
WITHOUT_CLASSIFICATION	Begin second unit of work
WITHOUT_CLASSIFICATION	Reattachment of aPerson
WITHOUT_CLASSIFICATION	The getEmailAddresses() might trigger a lazy load of the collection
WITHOUT_CLASSIFICATION	We need our tm, so get it now and avoid doing other work if there is a problem
WITHOUT_CLASSIFICATION	Don't hold the JBC node lock throughout the tx, as that prevents reads and other updates
WITHOUT_CLASSIFICATION	Don't hold the JBC node lock throughout the tx, as that prevents reads and other updates
WITHOUT_CLASSIFICATION	JBC put a version in the node when it created as part of some internal operation. We are always newer, but if the JBC version is > 1 something odd has happened
WITHOUT_CLASSIFICATION	swaldman 2006-08-28: define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations
WITHOUT_CLASSIFICATION	Not null if the Isolation level has been specified in the configuration file. Otherwise, it is left to the Driver's default value.
WITHOUT_CLASSIFICATION	Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container already has Proxool pools running, and this provider is to just borrow one of these
WITHOUT_CLASSIFICATION	If you're closing down the ConnectionProvider chances are an is not a real big deal, just warn
WITHOUT_CLASSIFICATION	(AS is always optional, for consistency with SQL/OQL)
WITHOUT_CLASSIFICATION	process the "new" HQL style where aliases are assigned _after_ the class name or path expression ie. using the AS construction
WITHOUT_CLASSIFICATION	the loaded owner will be set to null after the collection is removed, so capture its value as the affected owner so it is accessible to both pre- and post- events
WITHOUT_CLASSIFICATION	is a primitive type invokespecial
WITHOUT_CLASSIFICATION	array of primitive type do nothing
WITHOUT_CLASSIFICATION	handle a path expression or class name that appears at the start, in the "new" HQL style or an alias that appears at the start in the "old" HQL style
WITHOUT_CLASSIFICATION	handle <=, >=, !=, is not, not between, not in
WITHOUT_CLASSIFICATION	The loop ensures atomicity of the select + update even for no transaction or read committed isolation level
WITHOUT_CLASSIFICATION	transfer an explicitly defined entity name handle the lazy attribute
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	get meta's from <joined-subclass>
WITHOUT_CLASSIFICATION	parameters on the property mapping should override parameters in the typedef
WITHOUT_CLASSIFICATION	fetch="join" overrides default laziness fetch="join" overrides default laziness
WITHOUT_CLASSIFICATION	NOTE SPECIAL CASE: default to join and non-lazy for the "second join" of the many-to-many
WITHOUT_CLASSIFICATION	so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { this.componentTuplizerFactory = componentTuplizerFactory; }
WITHOUT_CLASSIFICATION	element index -> id
WITHOUT_CLASSIFICATION	note that it might be better to iterate the snapshot but this is safe, assuming the user implements equals() properly, as required by the Set contract!
WITHOUT_CLASSIFICATION	collections detect changes made via their public interface and mark themselves as dirty as a performance optimization
WITHOUT_CLASSIFICATION	essentially, if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception; NOTE that allowing close() above has the same basic effect, but we capture that there simply to perform the unbind...
WITHOUT_CLASSIFICATION	The default SQLExceptionConverter for all dialects is based on SQLState since SQLErrorCode is extremely vendor-specific. Specific Dialects may override to return whatever is most appropriate for that vendor.
WITHOUT_CLASSIFICATION	only necessary for postgre < 7.4 http:anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml
WITHOUT_CLASSIFICATION	select topic, syntax from information_schema.help where section like 'Function%' order by section, topic see also -> http:www.h2database.com/html/functions.html
WITHOUT_CLASSIFICATION	registerColumnType(Types.VARBINARY, "CHARACTER($l)"); registerColumnType(Types.BLOB, "CHARACTER($l)" ); For use prior to CP 11.0 registerColumnType(Types.CLOB, "CHARACTER($l)" );
WITHOUT_CLASSIFICATION	the BLOB type requires a size arguement - this defaults to bytes - no arg defaults to 1 whole byte! other argument mods include K - kilobyte, M - megabyte, G - gigabyte. refer to the PBdevelopers guide for more info.
WITHOUT_CLASSIFICATION	We must return a valid RDMS/RSA command from this method to prevent RDMS/RSA from issuing ERROR 400
WITHOUT_CLASSIFICATION	Oracle driver reports to support getGeneratedKeys(), but they only support the version taking an array of the names of the columns to be returned (via its RETURNING clause). No other driver seems to support this overloaded version.
WITHOUT_CLASSIFICATION	add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list
WITHOUT_CLASSIFICATION	You may still have other ResultSets or update counts left to process here but you can't do it now or the ResultSet you just got will be closed
WITHOUT_CLASSIFICATION	Note: For object <-> SQL datatype mappings see: Configuration Manager | Advanced | SQL | System DDL Datatype Mappings TBDregisterColumnType(Types.BINARY, "binary($1)"); changed 08-11-2005, jsl
WITHOUT_CLASSIFICATION	TRIM(end_keyword string-expression-1 FROM string-expression-2) use Hibernate implementation "From" is one of the parameters they pass in position ?3 registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );
WITHOUT_CLASSIFICATION	Whether this dialect has an Identity clause added to the data type or a completely seperate identity data type
WITHOUT_CLASSIFICATION	According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. at least one paramer (trimSource) is required. From the SQL spec: <trim function> ::= TRIM <left paren> <trim operands> <right paren> <trim operands> ::= [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> <trim specification> ::= LEADING | TRAILING | BOTH If <trim specification> is omitted, BOTH is assumed. If <trim character> is omitted, space is assumed
WITHOUT_CLASSIFICATION	/ Prepare persisters and link them up with their cache region/access-strategy
WITHOUT_CLASSIFICATION	Named Queries:
WITHOUT_CLASSIFICATION	this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	does not handle arrays (thats ok, cos they can't be lazy) or newly instantiated collections, so we can do the cast
WITHOUT_CLASSIFICATION	collection deletions are a special case since update() can add deletions of collections not loaded by the session.
WITHOUT_CLASSIFICATION	we can do the cast since orphan-delete does not apply to: 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)
WITHOUT_CLASSIFICATION	if the natural-id is marked as non-mutable, it is not retrieved during a normal database-snapshot operation...
WITHOUT_CLASSIFICATION	watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)
WITHOUT_CLASSIFICATION	slice, to get the columns for this component property
WITHOUT_CLASSIFICATION	int result = 17; result = 37 result + type.hashCode(); result = 37 result + ( value==null ? 0 : value.hashCode() ); return result;
WITHOUT_CLASSIFICATION	The CollectionEntry.isReached() stuff is just to detect any silly users who set up circular or shared references between/to collections.
WITHOUT_CLASSIFICATION	detached collection wrappers that get found + reattached during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	The unique property value represented here may or may not be serializable, so we do an explicit check here in order to generate a better error message
WITHOUT_CLASSIFICATION	if the version of a newly instantiated object is not the same as the version seed value, use that as the unsaved-value
WITHOUT_CLASSIFICATION	ie. we never have to null out a reference to an uninitialized proxy
WITHOUT_CLASSIFICATION	ignore this row, the collection is in process of being loaded somewhere further "up" the stack
WITHOUT_CLASSIFICATION	Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently, not yet used...
WITHOUT_CLASSIFICATION	should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. Besides, it makes the code much easier to read than the old TransactionHelper stuff...
WITHOUT_CLASSIFICATION	this implementation is supposed to tolerate incorrect unsaved-value mappings, for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	this implementation is supposed to tolerate incorrect unsaved-value mappings, for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	wrap up any new collections directly referenced by the object or its components
WITHOUT_CLASSIFICATION	remove any snapshot, not really for memory management purposes, but rather because it might now be stale, and there is no longer any EntityEntry to take precedence This is now handled by removeEntity() session.getPersistenceContext().removeDatabaseSnapshot(key);
WITHOUT_CLASSIFICATION	skip this check for composite-ids relating to dom4j entity-mode; alternatively, we could add a check to make sure the incoming id value is an instance of Element...
WITHOUT_CLASSIFICATION	upgrade the lock if necessary: lock(result, lockMode);
WITHOUT_CLASSIFICATION	now, any collections that are initialized inside this block do not get updated - they are ignored until the next flush
WITHOUT_CLASSIFICATION	we must clone embedded composite identifiers, or we will get back the same instance that we pass in
WITHOUT_CLASSIFICATION	Sub-insertions should occur before containing insertion so Try to do the callback now
WITHOUT_CLASSIFICATION	the entity is not associated with the session, so try interceptor and unsaved-value
WITHOUT_CLASSIFICATION	scan the query string for class names appearing in the from clause and replace with all persistent implementors of the class/interface, returning multiple query strings (make sure we don't pick up a class in the select clause!)
WITHOUT_CLASSIFICATION	save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	if it is an uninitialized proxy, pointing with this session, then when it is accessed, the underlying instance will be "contained"
WITHOUT_CLASSIFICATION	Generate an explicit join for the root dot node. The implied joins will be collected and passed up to the root dot node.
WITHOUT_CLASSIFICATION	A session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed
WITHOUT_CLASSIFICATION	Does the collection referenced by this FromElement specify an order-by attribute? If so, attach it to the query's order-by
WITHOUT_CLASSIFICATION	... and the token could be an identifer and the error is a mismatched token error ...
WITHOUT_CLASSIFICATION	If a where clause was specified in the update/delete query, use it to limit the returned ids here...
WITHOUT_CLASSIFICATION	int parameterStart = getWalker().getNumberOfParametersInSetClause(); List allParams = getIdSelectParameterSpecifications(); Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();
WITHOUT_CLASSIFICATION	Default implementation: If this node has a data type, and that data type is not an association, then this is scalar.
WITHOUT_CLASSIFICATION	Resolve the LHS fully, generate implicit joins. Pass in the property name so that the resolver can discover foreign key (id) properties.
WITHOUT_CLASSIFICATION	If the propertyType is null and there isn't a parent, just stop now... there was a problem resolving the node anyway.
WITHOUT_CLASSIFICATION	We do not look for an existing join on the same path, because it makes sense to join twice on the same collection role
WITHOUT_CLASSIFICATION	our parent is another dot node, meaning we are being further dereferenced. thus we need to generate a join unless the parent refers to the associated entity's PK (because 'our' table would know the FK).
WITHOUT_CLASSIFICATION	public final Currency getCurrency(int col) throws HibernateException {return (Currency) get(col);}
WITHOUT_CLASSIFICATION	here, we have two possibilities: 1) the property-name matches the explicitly identifier property name 2) the property-name matches the implicit 'id' property name
WITHOUT_CLASSIFICATION	Set the unresolved path in this node and the parent. Set the text for the parent.
WITHOUT_CLASSIFICATION	Get the first child to be considered. Sub-classes may do this differently in order to skip nodes that are not select expressions (e.g. DISTINCT).
WITHOUT_CLASSIFICATION	If this is an entity and the property is the identifier property, then use getIdentifierType(). Note that the propertyName.equals( propertyPath ) checks whether we have a component key reference, where the component class property name is the same as the entity id property name; if the two are not equal, this is the case and we'd need to "fall through" to using the property mapping.
WITHOUT_CLASSIFICATION	for a subquery, the alias to use depends on a few things (we already know this is not an overall SELECT): 1) if this FROM_ELEMENT represents a correlation to the outer-most query A) if the outer query represents a multi-table persister, we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the "id select" phase of that multi-table executor) B) otherwise, we need to use the persister's table name as the column qualification 2) otherwise (not correlated), use the given alias
WITHOUT_CLASSIFICATION	Not a collection? Return the entity property mapping.
WITHOUT_CLASSIFICATION	collection of <many-to-any/> mappings... used to circumvent the component-collection check below...
WITHOUT_CLASSIFICATION	Otherwise, the destination node was implied by the FROM clause and the FROM clause processor will automatically add it in the right place.
WITHOUT_CLASSIFICATION	If the first identifier in the path referrs to the class alias (not the class name), then this is a correlated subselect. If it's a correlated sub-select, use the existing table alias. Otherwise generate a new one.
WITHOUT_CLASSIFICATION	check to see if our "propPath" actually represents a property on the persister
WITHOUT_CLASSIFICATION	An ident node can represent an index expression if the ident represents a naked property ref Note: this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrExpr -> resolve()). The other option, if that changes, is to call resolve from here; but it is currently un-needed overhead.
WITHOUT_CLASSIFICATION	This uses a PathExpressionParser but notice that compound paths are not valid, only bare names and simple paths:
WITHOUT_CLASSIFICATION	If this is an implied join in a FROM clause, then use ANSI-style joining, and set the flag on the FromElement that indicates that it was implied in the FROM clause itself.
WITHOUT_CLASSIFICATION	origin.addDestination(destination); Add the query spaces.
WITHOUT_CLASSIFICATION	For an explicit many-to-many relationship, add a second join from the intermediate (many-to-many) table to the destination table. Also, make sure that the from element's idea of the destination is the destination table.
WITHOUT_CLASSIFICATION	Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was for the factory to create the right sub-class. This might get reset again later on anyway to make the SQL generation simpler.
WITHOUT_CLASSIFICATION	explicit = true; This is an explict Select. ArrayList sqlResultTypeList = new ArrayList();
WITHOUT_CLASSIFICATION	sqlResultTypeList.add( type ); Generate the select expression.
WITHOUT_CLASSIFICATION	If the expression list has exactly one expression, and the type of the expression is a collection then this might be a collection function, such as index(c) or size(c).
WITHOUT_CLASSIFICATION	Need to parse off the column qualifiers; this is assuming (which is true as of now) that this is only used from update and delete HQL statement parsing
WITHOUT_CLASSIFICATION	for regression testing against output from the old parser... found it easiest to simply reorder the FromElements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser; this is definitely another of those "only needed for regression purposes". The SyntheticAndFactory, then, simply injects them as it encounters them.
WITHOUT_CLASSIFICATION	The uber-rule here is that we need to include subclass joins if the FromElement is in any way dereferenced by a property from the subclass table; otherwise we end up with column references qualified by a non-existent table reference in the resulting SQL...
WITHOUT_CLASSIFICATION	classic translator does not support collection of ordinal param metadata
WITHOUT_CLASSIFICATION	The following variables are stacks that keep information about each subexpression in the list of nested subexpressions we are currently processing.
WITHOUT_CLASSIFICATION	The loop ensures atomicity of the select + update even for no transaction or read committed isolation level
WITHOUT_CLASSIFICATION	should not be able to reach last without maxPosition being set unless there are no results
WITHOUT_CLASSIFICATION	we found it in the temp PC. Should indicate we are in the midst of processing a result set containing eager fetches via join fetch
WITHOUT_CLASSIFICATION	do not use proxiesByKey, since not all proxies that point to this session's instances are in that collection!
WITHOUT_CLASSIFICATION	if there is no TM configured, we will not be able to access the javax.transaction.Transaction object in order to register a synch anyway.
WITHOUT_CLASSIFICATION	Since the result set cursor is always left at the first physical row after the "last processed", we need to jump back one position to get the key value we are interested in skipping
WITHOUT_CLASSIFICATION	true if this is a query and we are loading multiple instances of the same collection role otherwise this is a CollectionInitializer and we are loading up a single collection or batch
WITHOUT_CLASSIFICATION	we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode NONE)
WITHOUT_CLASSIFICATION	add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)
WITHOUT_CLASSIFICATION	assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	log a message about potential connection leaks
WITHOUT_CLASSIFICATION	ps.close(); just close it; do NOT try to return it to the pool! NOTE: early exit!
WITHOUT_CLASSIFICATION	this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through Hibernate's registered transaction synchronization on a separate "reaping" thread. In cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these CMEs occur. And though it is not "allowed" per-se, the end result without handling it specifically is infinite looping. So here, we simply break the loop
WITHOUT_CLASSIFICATION	unfortunately this stuff can't be cached because it is per-invocation, not constant for the QueryTranslator instance
WITHOUT_CLASSIFICATION	can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode
WITHOUT_CLASSIFICATION	don't create a unique key, 'cos some databases don't like a UK on nullable columns getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	isSet = collection.isSet(); isSorted = collection.isSorted();
WITHOUT_CLASSIFICATION	lists, arrays sets, maps, bags
WITHOUT_CLASSIFICATION	we finish all the "removes" first to take care of possible unique constraints and so that we can take better advantage of batching
WITHOUT_CLASSIFICATION	use a combination of foreign key columns and pk columns, since the ordering of removal and addition is not guaranteed when a child moves from one parent to another
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	information about properties of this class, including inherited properties (only really needed for updatable/insertable properties)
WITHOUT_CLASSIFICATION	all this only really needs to consider properties of this class, not its subclasses, but since we are reusing code used for sequential selects, we use the subclass closure
WITHOUT_CLASSIFICATION	Here we render the select column list based on the properties defined as being generated. For partial component generation, we currently just re-select the whole component rather than trying to handle the individual generated portions.
WITHOUT_CLASSIFICATION	this is the root (versioned) table, and we are using version-based optimistic locking; if we are not updating the version, also don't check it (unless this is a "generated" version column)!
WITHOUT_CLASSIFICATION	optimistic-lock="all", include all updatable properties optimistic-lock="dirty", include all properties we are updating this time
WITHOUT_CLASSIFICATION	this property belongs to the table, and it is not specifically excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a JTA transaction context, so MUST be autocommit mode)
WITHOUT_CLASSIFICATION	need to treat this as if it where optimistic-lock="all" (dirty does not make sense); first we need to locate the "loaded" state Note, it potentially could be a proxy, so perform the location the safe way...
WITHOUT_CLASSIFICATION	we always assume an instance with a null identifier or no identifier property is unsaved!
WITHOUT_CLASSIFICATION	Need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. Using the collection's key type causes problems with property-ref keys...
WITHOUT_CLASSIFICATION	allow any identifier quoted with backtick only recognizes identifiers beginning with a letter
WITHOUT_CLASSIFICATION	following doesn't handle (null, not null) but unnecessary since this would mean all rows
WITHOUT_CLASSIFICATION	IMPL NOTE : due to the delayed population of setters (setters cached for performance), we really cannot pro0perly define equality for this transformer
WITHOUT_CLASSIFICATION	we need to dirty check collections, since they can cause an owner version number increment
WITHOUT_CLASSIFICATION	return the id, so we can use it to reset the proxy id return result;
WITHOUT_CLASSIFICATION	optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( mappedClass, getterNames, setterNames, propTypes );
WITHOUT_CLASSIFICATION	cache the actual id of the object, not the value of the property-ref, which might not be initialized
WITHOUT_CLASSIFICATION	We now have the value of the property-ref we reference. However, we need to dig a little deeper, as that property might also be an entity type, in which case we need to resolve its identitifier
WITHOUT_CLASSIFICATION	Retrieve the value of the designated column in the current row of this ResultSet object as a java.io.Reader object
WITHOUT_CLASSIFICATION	not absolutely necessary, but helps for some equals()/hashCode() implementations
WITHOUT_CLASSIFICATION	this should be a call to resolve(), not resolveIdentifier(), 'cos it might be a property-ref, and we did not cache the referenced value
WITHOUT_CLASSIFICATION	If we have <tt>not-found="ignore"</tt> association mapped to a formula, we always need to dirty check it, so we can update the second-level cache
WITHOUT_CLASSIFICATION	can't just return null here, since that would cause an owning component to become null
WITHOUT_CLASSIFICATION	for arrays, replaceElements() may return a different reference, since the array length might not match
WITHOUT_CLASSIFICATION	actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the MRU entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).
WITHOUT_CLASSIFICATION	as soon as we encounter our first letter, return the substring from that position
WITHOUT_CLASSIFICATION	Note : expected in the syntax: type=listenerClass ({sep}type=listenerClass) where {sep} is any whitespace or comma
WITHOUT_CLASSIFICATION	isTransactionCallbackRegistered denotes whether any Hibernate Transaction has registered as a callback against this JDBCContext; only one such callback is allowed. Directly serializing this value causes problems with JDBCTransaction, or really any Transaction impl where the callback is local to the Transaction instance itself, since that Transaction is not serialized along with the JDBCContext. Thus we handle that fact here explicitly...
WITHOUT_CLASSIFICATION	note that for sequential scrolling, we make the assumption that the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	We call getKeyFromResultSet() here so that we can know the key value upon which to perform the breaking logic. However, it is also then called from getRowFromResultSet() which is certainly not the most efficient. But the call here is needed, and there currently is no other way without refactoring of the doQuery()/getRowFromResultSet() methods
WITHOUT_CLASSIFICATION	This check is needed since processing leaves the cursor after the last physical row for the current logical row; thus if we are after the last physical row, this might be caused by either: 1) scrolling to the last logical row 2) scrolling past the last logical row In the latter scenario, the previous logical row really is the last logical row. In all other cases, we should process back two logical records (the current logic row, plus the previous logical row).
WITHOUT_CLASSIFICATION	and perform the load
WITHOUT_CLASSIFICATION	important: reuse the same event instances for performance!
WITHOUT_CLASSIFICATION	this is a query and we are loading multiple instances of the same collection role
WITHOUT_CLASSIFICATION	we found a collection element in the result set
WITHOUT_CLASSIFICATION	we did not find a collection element in the result set, so we ensure that a collection is created with the owner's identifier, since what we have is an empty collection
WITHOUT_CLASSIFICATION	this is a collection initializer, so we must create a collection for each of the passed-in keys, to account for the possibility that the collection is empty and has no rows in the result set
WITHOUT_CLASSIFICATION	grab its state from the ResultSet and keep it in the Session (but don't yet initialize the object itself) note that we acquire LockMode.READ even if it was not requested
WITHOUT_CLASSIFICATION	a many-to-many; decrement currentDepth here to allow join across the association table without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)
WITHOUT_CLASSIFICATION	if not a composite key, use "foo in (?, ?, ?)" for batching if no batch, and not a composite key, use "foo = ?"
WITHOUT_CLASSIFICATION	the user visible aliases, which are unknown to the superclass, these are not the actual "physical" SQL aliases
WITHOUT_CLASSIFICATION	first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	it does not refer to an alias of a projection, look for a property
WITHOUT_CLASSIFICATION	determine if the collection elements are entities...
WITHOUT_CLASSIFICATION	Let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type. @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes) @return a JoinFragment.XXX join type. @see JoinFragment @see SqlTokenTypes
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	public List getCollectionAliases() { return collectionAliases; } public List getCollectionOwners() { return collectionOwners; } public List getCollectionOwnerAliases() { return collectionOwnerAliases; } public List getCollectionPersisters() { return collectionPersisters; } public Map getAlias2Persister() { return alias2Persister; } public boolean isCollectionInitializer() { return isCollectionInitializer; } public List getPersisters() { return persisters; } public Map getAlias2OwnerAlias() { return alias2OwnerAlias; } public List getScalarTypes() { return scalarTypes; } public List getScalarColumnAliases() { return scalarColumnAliases; } public List getPropertyResults() { return propertyResults; } public List getCollectionPropertyResults() { return collectionResults; } public Map getAlias2Return() { return alias2Return; }
WITHOUT_CLASSIFICATION	SQLQueryParser parser = new SQLQueryParser( sqlQuery, processor.getAlias2Persister(), processor.getAlias2Return(), aliases, collAliases, collPersisters, suffixes, collSuffixes ); sql = parser.process(); namedParameterBindPoints = parser.getNamedParameters();
WITHOUT_CLASSIFICATION	include the discriminator and class-level where, but not filters
WITHOUT_CLASSIFICATION	sqlAliasSuffixes[i] = element.getColumnAliasSuffix();
WITHOUT_CLASSIFICATION	NONE, because its the requested lock mode, not the actual!
WITHOUT_CLASSIFICATION	at this point we have (drivingSqlAlias) the SQL alias of the driving table corresponding to the given user alias. However, the driving table is not (necessarily) the table against which we want to apply locks. Mainly, the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies, it just happens that driving and root are the same).
WITHOUT_CLASSIFICATION	the column doesnt exist at all.
WITHOUT_CLASSIFICATION	we have a mapped identifier property and the root of the incoming property path matched that identifier property
WITHOUT_CLASSIFICATION	we have an embedded composite identifier
WITHOUT_CLASSIFICATION	both many-to-one and one-to-one are represented as a Property. EntityPersister is relying on this value to determine "lazy fetch groups" in terms of field-level interception. So we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy="no-proxy" impl note - lazy="no-proxy" currently forces both lazy and unwrap to be set to true. The other case we are extremely interested in here is that of lazy="proxy" where lazy is set to true, but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. If that assertion changes then this check needs to change as well. Partially, this is an issue with the overloading of the term "lazy" here...
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	rootTableName = persistentClass.getRootTable().getQualifiedName( factory.getDialect(), factory.getDefaultCatalog(), factory.getDefaultSchema() );
WITHOUT_CLASSIFICATION	SUBCLASSES
WITHOUT_CLASSIFICATION	Custom sql
WITHOUT_CLASSIFICATION	protected void initPropertyPaths(final String path,final Type type,final String[] columns,final String[] formulaTemplates,final Mapping factory)throws MappingException {addFormulaPropertyPath(path, type, formulaTemplates);initPropertyPaths(path, type, columns, formulaTemplates, factory);}
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	Custom SQL (would be better if these were private)
WITHOUT_CLASSIFICATION	moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'
WITHOUT_CLASSIFICATION	decide which ResultSet to get the property value from:
WITHOUT_CLASSIFICATION	note: it is conceptually possible that a UserType could map null to a non-null value, so the following is arguable:
WITHOUT_CLASSIFICATION	the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null is an indication that the specified entity-name (this.getEntityName) should be used.
WITHOUT_CLASSIFICATION	Need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. Using the collection's key type causes problems with property-ref keys...
WITHOUT_CLASSIFICATION	cache these since they are stateless this one could even be static...
WITHOUT_CLASSIFICATION	"as" is not in KEYWORDS
WITHOUT_CLASSIFICATION	--Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);
WITHOUT_CLASSIFICATION	use the id column alias
WITHOUT_CLASSIFICATION	private List aliases = new ArrayList();
WITHOUT_CLASSIFICATION	columns.add(columnName); aliases.add(tableAlias);
WITHOUT_CLASSIFICATION	where fragment must be empty!
WITHOUT_CLASSIFICATION	revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize unless otherwise specified with a c3p0.-style parameter.
WITHOUT_CLASSIFICATION	arbitrary on clause ignored!!
WITHOUT_CLASSIFICATION	might happen with a managed connection
WITHOUT_CLASSIFICATION	might happen with a managed connection
WITHOUT_CLASSIFICATION	if an exception occurs during flush, user must call rollback()
WITHOUT_CLASSIFICATION	Essentially: 1) If we have a local (Hibernate) transaction in progress and it already has the UserTransaction cached, use that UserTransaction to determine the status. 2) If a transaction manager has been located, use that transaction manager to determine the status. 3) Finally, as the last resort, try to lookup the UserTransaction via JNDI and use that to determine the status.
WITHOUT_CLASSIFICATION	package
WITHOUT_CLASSIFICATION	swallow it (the transaction _was_ successful or successfully rolled back)
WITHOUT_CLASSIFICATION	ignore it
WITHOUT_CLASSIFICATION	we need to dirty check many-to-ones with not-found="ignore" in order to update the cache (not the database), since in this case a null entity reference can lose information
WITHOUT_CLASSIFICATION	create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	Regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed), so suspend any ongoing tx
WITHOUT_CLASSIFICATION	then handle any user-defined entity modes...
WITHOUT_CLASSIFICATION	Establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	NOTE : this is being used from the process of shutting down a SessionFactory. Specific things to consider: (1) this clearing of the region should not propagate to other nodes on the cluster (if any); this is the cache-mode-local option bit... (2) really just trying a best effort to cleanup after ourselves; lock failures, etc are not critical here; this is the fail-silently option bit...
WITHOUT_CLASSIFICATION	need to extract the component values and check for subtype replacements...
WITHOUT_CLASSIFICATION	We ignore minimalPutOverride. JBossCache putForExternalRead is already about as minimal as we can get; it will promptly return if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)
WITHOUT_CLASSIFICATION	Configure the cache to use our TM
WITHOUT_CLASSIFICATION	This solution would allow us to eliminate the owner arg to disassemble(), but what if the collection was null, and then later had elements added? seems unsafe session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();
WITHOUT_CLASSIFICATION	Make sure JBC doesn't look one up
WITHOUT_CLASSIFICATION	some collections are not lazy:
WITHOUT_CLASSIFICATION	Here we don't want to suspend the tx. If we do: 1) We might be caching query results that reflect uncommitted changes. No tx == no WL on cache node, so other threads can prematurely see those query results 2) No tx == immediate replication. More overhead, plus we spread issue #1 above around the cluster
WITHOUT_CLASSIFICATION	return the (fully resolved) identifier value, but do not resolve to the actual referenced entity instance NOTE: the owner of the association is not really the owner of the id!
WITHOUT_CLASSIFICATION	Add a zero (or quite low) timeout option so we don't block. Ignore any TimeoutException. Basically we forego caching the query result in order to avoid blocking. Reads are done with suspended tx, so they should not hold the lock for long. Not caching the query result is OK, since any subsequent read will just see the old result with its out-of-date timestamp; that result will be discarded and the db query performed again.
WITHOUT_CLASSIFICATION	Impl note: takes advantage of the fact that an escpaed single quote embedded within a quote-block can really be handled as two seperate quote-blocks for the purposes of this method...
WITHOUT_CLASSIFICATION	We have the JBCWriteMutex, so no other local thread will be trying to write this key. It's possible here some remote thread has come in and changed the values again, but since we are reading the values to write to JBC right now, we know we are writing the latest values; i.e. we don't assume that what we cached in entry.update() above is what we should write to JBC now. Our write could be redundant, i.e. we are writing what some remote thread just came in an wrote. There is a chance that yet another remote thread will update us, and we'll then overwrite that later data in JBC. But, all remote nodes will ignore that change in their localCache; the only place it will live will be in JBC, where it can only effect the initial state transfer values on newly joined nodes (i.e. populateLocalCache()).
WITHOUT_CLASSIFICATION	local cache, so we use synchronization
WITHOUT_CLASSIFICATION	local cache, so we use synchronization
WITHOUT_CLASSIFICATION	Don't need to lock the cache here, since if someone else inserted the same pk first, the insert would fail
WITHOUT_CLASSIFICATION	we need to grab the version value from the entity, otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	we need to obtain the lock before any actions are executed, since this may be an inverse="true" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)
WITHOUT_CLASSIFICATION	postDelete: After actually deleting a row, record the fact that the instance no longer exists on the database (needed for identity-column key generation), and remove it from the session cache
WITHOUT_CLASSIFICATION	intentionally empty
DEFECT	FIXME we don't have the associated entity table name here, has to be done in a second pass
DEFECT	For a one-to-many, a <bag> is not really a bag; it is really a set, since it can't contain the same element twice. It could be considered a bug in the mapping dtd that <bag> allows <one-to-many>.
DEFECT	RDMS does not directly support the trim() function, we use rtrim() and ltrim()
DEFECT	The following types are not supported in RDMS/JDBC and therefore commented out. However, in some cases, mapping them to CHARACTER columns works for many applications, but does not work for all cases.
DEFECT	The preference here would be SQLFunctionTemplate( Hibernate.TIMESTAMP, "current_timestamp(?1)", false) but this appears not to work. Jay Nance 2006-09-22
DEFECT	note: at least my local SQL Server 2005 Express shows this not working...
DEFECT	note: at least my local MySQL 5.1 install shows this not working...
DEFECT	Algorithm Check for any level one nullability breaks Look at non null components to recursively check next level of nullability breaks Look at Collections contraining component to recursively check next level of nullability breaks In the previous implementation, not-null stuffs where checked filtering by level one only updateable or insertable columns. So setting a sub component as update="false" has no effect on not-null check if the main component had good checkeability In this implementation, we keep this feature. However, I never see any documentation mentioning that, but it's for sure a limitation.
DEFECT	Don't need this, because we should never ever be selecting no columns in an insert ... select... and because it causes a bug on DB2
DEFECT	TODO : this is broke for subqueries in statements other than selects...
DEFECT	TODO : should this be an error?
DEFECT	TODO : not sure which (either?) is correct, could not find docs on how to do this. did find various blogs and forums mentioning that select CURRENT_TIMESTAMP does not work...
DEFECT	TODO: figure out how this should be set. / This was the reason for failures regarding INDEX_OP and subclass joins on theta-join dialects; not sure what behaviour we were trying to emulate ;) joinSequence = joinSequence.getFromPart(); Emulate the old addFromOnly behavior.
DEFECT	TODO: would be nice to use false, but issues with MS SQL
DEFECT	TODO: would be nice to use false, but issues with MS SQL
DEFECT	TODO: cannot use generateSuffixes() - it handles the initial suffix differently.
DEFECT	starts with an alias (old style) semi-bad thing about this: can't re-alias another alias.....
DEFECT	TODO: BUG! this currently fails for named queries for non-POJO entities
DEFECT	this call is side-effecty
DEFECT	TODO: old version did not require hashmap lookup: keys[collectionOwner].getIdentifier()
DEFECT	TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!
DEFECT	this is only needed (afaict) for processing results from the query cache; however, this cannot possibly work in the case of discovered types...
DEFECT	TODO: this requires that the collection is defined after the referenced property in the mapping file (ok?)
DEFECT	TODO: is this completely correct?
DEFECT	three general cases we check here as to whether to render a physical SQL join: 1) is our parent a DotNode as well? If so, our property reference is being further de-referenced... 2) is this a DML statement 3) we were asked to generate any needed joins (generateJoins==true) OR we are currently processing a select or from clause (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check intended solely for use within the test suite. This forces the implicit join resolution to behave more like the classic parser. The underlying issue is that classic translator is simply wrong about its decisions on whether or not to render an implicit join into a physical SQL join in a lot of cases. The piece it generally tends to miss is that INNER joins effect the results by further restricting the data set! A particular manifestation of this is the fact that the classic translator will skip the physical join for ToOne implicit joins if the query is shallow; the result being that Query.list() and Query.iterate() could return different number of results!
DEFECT	TODO : currently we really do not handle ValueInclusion.PARTIAL... ValueInclusion.PARTIAL would indicate parts of a component need to be included in the select; currently we then just render the entire component into the select clause in that case.
DEFECT	TODO: inexact, what we really need to know is: are any outer joins used?
DEFECT	todo : this call will not work for anything other than pojos!
DEFECT	TODO: currently we don't know a SessionFactory reference when building the Tuplizer THIS IS A BUG (embedded-xml=false on component) TODO : fix this after HHH-1907 is complete
DEFECT	TODO: this disables laziness even in non-pojo entity modes:
DEFECT	TODO: currently broken for unique-key references (does not detect change to unique key property of the associated object) the owner of the association is not the owner of the id
DEFECT	TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....
DEFECT	TODO: entities CAN be compared, by PK and entity name, fix this!
DEFECT	TODO: this is kinda inconsistent with CollectionType
DEFECT	TODO: would be nice to use false, but issues with MS SQL
DEFECT	TODO: does not work for EntityMode.DOM4J yet!
DEFECT	TODO: currently broken for unique-key references (does not detect change to unique key property of the associated object)
DEFECT	TODO: not really completely correct, since the uoe could occur while resolving associations, leaving the PC in an inconsistent state
DEFECT	could happen for custom Criteria impls. Not likely, but... for long term solution, see HHH-3514
DEFECT	This does not support the Cache SQL 'DISTINCT BY (comma-list)' extensions, but this extension is not supported through Hibernate anyway.
DEFECT	note that this timestamp is not correct if the connection provider returns an older JDBC connection that was associated with a transaction that was already begun before openSession() was called (don't know any possible solution to this!)
DEFECT	no need to take a snapshot - this is a performance optimization, but not really important, except for entities with huge mutable property values
DEFECT	TODO : this really needs to be delayed unitl after we definitively know the operand node type; where this is currently a problem is parameters for which where we cannot unequivocally resolve an expected type
DEFECT	First, validate all the enabled filters... TODO: this implementation has bad performance
DEFECT	TODO: what if batchUpdate is a callablestatement ? calls executeBatch()
DEFECT	assume that the row was not there since it previously had only null values, so do an INSERT instead TODO: does not respect dynamic-insert
DEFECT	TODO: passing null here, because this method is not really used for DOM4J at the moment but it is still a bug, if we don't get rid of this!
DEFECT	note that this implementation is kinda broken for components with many-to-one associations
DEFECT	TODO: at the point where we are resolving collection references, we don't know if the uk value has been resolved (depends if it was earlier or later in the mapping document) - now, we could try and use e.getStatus() to decide to semiResolve(), trouble is that initializeEntity() reuses the same array for resolved and hydrated values
DEFECT	TODO: This is assertion is disabled because there is a bug that means the original owner of a transient, uninitialized collection is not known if the collection is re-referenced by a different object associated with the current Session throw new AssertionFailure("bug loading unowned collection");
DEFECT	This doesn't actually seem to work but it might work on some dbs. Also it doesn't work if there are multiple columns of results because it is not accounting for the suffix: return new String[] { getDiscriminatorColumnName() };
DEFECT	TODO: Deal with the "optional" attribute in the <join> mapping; this code assumes that optional defaults to "true" because it doesn't actually seem to work in the fetch="join" code Note that actual proper handling of optional-ality here is actually more involved than this patch assumes. Remember that we might have multiple <join/> mappings associated with a single entity. Really a couple of things need to happen to properly handle optional here: 1) First and foremost, when handling multiple <join/>s, we really should be using the entity root table as the driving table; another option here would be to choose some non-optional joined table to use as the driving table. In all likelihood, just using the root table is much simplier 2) Need to add the FK columns corresponding to each joined table to the generated select list; these would then be used when iterating the result set to determine whether all non-optional data is present My initial thoughts on the best way to deal with this would be to introduce a new SequentialSelect abstraction that actually gets generated in the persisters (ok, SingleTable...) and utilized here. It would encapsulated all this required optional-ality checking...
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Doing instanceof? Next node is a type.
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ParentDirectoryRenderer class
WITHOUT_CLASSIFICATION	{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	{{{ mouseClicked() method
WITHOUT_CLASSIFICATION	install man page
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	set proxy authentication
WITHOUT_CLASSIFICATION	{{{ autodetect() method
WITHOUT_CLASSIFICATION	file does not begin with UTF-8-Y signature. reset stream, read as UTF-8.
WITHOUT_CLASSIFICATION	Determine whether we are dealing with a one-, two-, three-, or four- byte sequence.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	1-byte sequence: 000000000xxxxxxx = 0xxxxxxx
WITHOUT_CLASSIFICATION	null object ref is not instance of any type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getDocument() method
WITHOUT_CLASSIFICATION	{{{ getParentElement() method
WITHOUT_CLASSIFICATION	{{{ getAttributes() method
WITHOUT_CLASSIFICATION	{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	{{{ RootElement constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	No super method, try to invoke regular method could be a superfluous "super." which is legal.
WITHOUT_CLASSIFICATION	Local Variables.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadClass() method
WITHOUT_CLASSIFICATION	{{{ getZipFile() method
WITHOUT_CLASSIFICATION	Defer to whoever loaded us (such as JShell, Echidna, etc)
WITHOUT_CLASSIFICATION	remember that this class doesn't exist for future reference
WITHOUT_CLASSIFICATION	{{{ getResourceAsStream() method
WITHOUT_CLASSIFICATION	{{{ getResource() method
WITHOUT_CLASSIFICATION	{{{ getResourceAsPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ dump() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ activate() method
WITHOUT_CLASSIFICATION	{{{ deactivate() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _loadClass() method
WITHOUT_CLASSIFICATION	{{{ ServiceListHandler constructor
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getElementCount() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ getCachedServices() method
WITHOUT_CLASSIFICATION	{{{ isLeaf() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	{{{ getMembers() method
WITHOUT_CLASSIFICATION	{{{ getMember() method
WITHOUT_CLASSIFICATION	{{{ getMemberIndex() method
WITHOUT_CLASSIFICATION	{{{ getMemberCount() method
WITHOUT_CLASSIFICATION	{{{ setSort() method
WITHOUT_CLASSIFICATION	{{{ insertionSort() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	{{{ removeFromBus() method
WITHOUT_CLASSIFICATION	{{{ addToBus() method
WITHOUT_CLASSIFICATION	{{{ getComponents() method
WITHOUT_CLASSIFICATION	{{{ send() method
WITHOUT_CLASSIFICATION	can't create new instances
WITHOUT_CLASSIFICATION	{{{ EditAction constructor
WITHOUT_CLASSIFICATION	{{{ getMouseOverText() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ isToggle() method
WITHOUT_CLASSIFICATION	{{{ isSelected() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ noRepeat() method
WITHOUT_CLASSIFICATION	{{{ noRecord() method
WITHOUT_CLASSIFICATION	{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Wrapper class
WITHOUT_CLASSIFICATION	{{{ setInterval() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	might come in handy useful some time
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Animator class
WITHOUT_CLASSIFICATION	{{{ AbbrevEditor constructor
WITHOUT_CLASSIFICATION	{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	{{{ setAbbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} {{{ KEY_RELEASED...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	on some Windows versions, connections to localhost fail if the network is not running. To avoid confusing newbies with weird error messages, log errors that occur while starting the server as NOTICE, not ERROR
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ handleClient() method
WITHOUT_CLASSIFICATION	{{{ handleClient() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	no background mode, and opening a new view
WITHOUT_CLASSIFICATION	no background mode, and reusing existing view
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ handleClient() method
WITHOUT_CLASSIFICATION	un-iconify using JDK 1.3 API
WITHOUT_CLASSIFICATION	{{{ isOK() method
WITHOUT_CLASSIFICATION	{{{ getPort method
WITHOUT_CLASSIFICATION	{{{ stopServer() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	Reset the timeout
WITHOUT_CLASSIFICATION	{{{ BeanShellAction constructor
WITHOUT_CLASSIFICATION	Some characters that we like to use in action names ('.', '-') are not allowed in BeanShell identifiers.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ isSelected() method
WITHOUT_CLASSIFICATION	{{{ noRepeat() method
WITHOUT_CLASSIFICATION	{{{ noRecord() method
WITHOUT_CLASSIFICATION	{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	so that in the future we don't see streams of exceptions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	Runtime runtime = Runtime.getRuntime();int freeMemory = (int)(runtime.freeMemory() / 1024);int totalMemory = (int)(runtime.totalMemory() / 1024);int usedMemory = (totalMemory - freeMemory);Log.log(Log.DEBUG,this,"Java heap: " + usedMemory + "Kb / "+ totalMemory + "Kb, " + (usedMemory 100 / totalMemory)+ "%");
WITHOUT_CLASSIFICATION	save list of open files
WITHOUT_CLASSIFICATION	flush log
WITHOUT_CLASSIFICATION	{{{ ActionListHandler constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ paste() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ copy() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ paste() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setRegister() method
WITHOUT_CLASSIFICATION	{{{ setRegister() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ clearRegister() method
WITHOUT_CLASSIFICATION	{{{ getRegisters() method
WITHOUT_CLASSIFICATION	{{{ getRegisterStatusPrompt() method
WITHOUT_CLASSIFICATION	{{{ saveRegisters() method
WITHOUT_CLASSIFICATION	{{{ loadRegisters() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,Registers.class,fnf);
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ Register interface
WITHOUT_CLASSIFICATION	{{{ ClipboardRegister class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	remove trailing \n
WITHOUT_CLASSIFICATION	{{{ StringRegister class
WITHOUT_CLASSIFICATION	{{{ RegistersHandler class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	{{{ getSource() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ getTextArea() method
WITHOUT_CLASSIFICATION	only do this if we are the current edit pane
WITHOUT_CLASSIFICATION	Only do this after all I/O requests are complete
WITHOUT_CLASSIFICATION	avoid a race condition see bug #834338
WITHOUT_CLASSIFICATION	{{{ prevBuffer() method
WITHOUT_CLASSIFICATION	{{{ nextBuffer() method
WITHOUT_CLASSIFICATION	{{{ recentBuffer() method
WITHOUT_CLASSIFICATION	{{{ focusOnTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	{{{ setLabel() method
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ addAction() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeAction() method
WITHOUT_CLASSIFICATION	{{{ removeAllActions() method
WITHOUT_CLASSIFICATION	{{{ getAction() method
WITHOUT_CLASSIFICATION	{{{ getActionCount() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getActions() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ getCacheableActionNames() method
WITHOUT_CLASSIFICATION	{{{ contains() method
WITHOUT_CLASSIFICATION	{{{ size() method
WITHOUT_CLASSIFICATION	{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	actions.clear();
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ dragAndDropCallback() method
WITHOUT_CLASSIFICATION	{{{ initTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initBufferSwitcher() method
WITHOUT_CLASSIFICATION	{{{ MyFocusManager class
WITHOUT_CLASSIFICATION	{{{ MyFocusTraversalPolicy class
WITHOUT_CLASSIFICATION	{{{ MouseWheelHandler class
WITHOUT_CLASSIFICATION	{{{ TextAreaTransferHandler class
WITHOUT_CLASSIFICATION	I assume that there can be only one drag operation at the time
WITHOUT_CLASSIFICATION	if user drops into the sameselection where they started, donothing.
WITHOUT_CLASSIFICATION	if user drops into a selection,replace selection
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	otherwise just insert the text
WITHOUT_CLASSIFICATION	correctly handle text flavor + file list flavor + text area read only, do an or of all flags
WITHOUT_CLASSIFICATION	{{{ DropHandler class
WITHOUT_CLASSIFICATION	textArea.getBuffer().beginCompoundEdit();
WITHOUT_CLASSIFICATION	textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	{{{ TextAreaSelection class
WITHOUT_CLASSIFICATION	{{{ showBufferSwitcher() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Path name methods
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ canonPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	get rid of mixed paths on Windows
WITHOUT_CLASSIFICATION	also get rid of trailing spaces on Windows
WITHOUT_CLASSIFICATION	do the same on OS X
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ resolveSymlinks() method
WITHOUT_CLASSIFICATION	{{{ isAbsolutePath() method
WITHOUT_CLASSIFICATION	not sure if this is correct for OpenVMS.
WITHOUT_CLASSIFICATION	nice and simple
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveCaretInfo() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ concatPath() method
WITHOUT_CLASSIFICATION	Make all child paths relative.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getFileExtension() method
WITHOUT_CLASSIFICATION	{{{ getFileName() method
WITHOUT_CLASSIFICATION	{{{ getFileNameNoExtension() method
WITHOUT_CLASSIFICATION	{{{ getFileParent() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ getFileProtocol() method
WITHOUT_CLASSIFICATION	{{{ getProtocolOfURL() method
WITHOUT_CLASSIFICATION	{{{ isURL() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	C:\AUTOEXEC.BAT
WITHOUT_CLASSIFICATION	/etc/passwd
WITHOUT_CLASSIFICATION	D:\WINDOWS, or doesn't contain : at all
WITHOUT_CLASSIFICATION	If backups is 1, create ~ file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Selection[] selection = (Selection[])buffer.getProperty(Buffer.SELECTION);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if backup file was created less than 'backupTimeDistance' ago, we do not create the backup
WITHOUT_CLASSIFICATION	If backups > 1, move old ~n~ files, create ~1~ file
WITHOUT_CLASSIFICATION	delete a backup created using above method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ fileToClass() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ classToFile() method
WITHOUT_CLASSIFICATION	Treat lhs and rhs as arbitrary objects and do the operation.(including NULL and VOID represented by their Primitive types)
WITHOUT_CLASSIFICATION	{{{ Text methods
WITHOUT_CLASSIFICATION	{{{ getLeadingWhiteSpace() method
WITHOUT_CLASSIFICATION	FALL THROUGH TO DEFAULT CASE!!!
WITHOUT_CLASSIFICATION	object is a non-null and non-void Primitive type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Bsh scripted object
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ getLeadingWhiteSpaceWidth() method
WITHOUT_CLASSIFICATION	{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ globToRE() method
WITHOUT_CLASSIFICATION	{{{ escapesToChars() method
WITHOUT_CLASSIFICATION	{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ compareVersions() method
WITHOUT_CLASSIFICATION	{{{ compareStrings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	_i--;
WITHOUT_CLASSIFICATION	_j--;
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ stringsEqual() method
WITHOUT_CLASSIFICATION	{{{ objectsEqual() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isVMS() method
WITHOUT_CLASSIFICATION	{{{ isMacOSLF() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ hasScreenMenuBar
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isJava14() method
WITHOUT_CLASSIFICATION	{{{ isJava15() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	for debugging, make jEdit think its using a different version of Java than it really is.
WITHOUT_CLASSIFICATION	{{{ Some constants
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ charsToEntities() method
WITHOUT_CLASSIFICATION	{{{ formatFileSize() method
WITHOUT_CLASSIFICATION	{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	delcaredOnly
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Sorting methods
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ Compare interface
WITHOUT_CLASSIFICATION	{{{ StringCompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ StringICaseCompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Java object
WITHOUT_CLASSIFICATION	{{{ MenuItemCompare class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Map types to assignable forms, need to keep this fast...
WITHOUT_CLASSIFICATION	{{{ buildToVersion() method
WITHOUT_CLASSIFICATION	First 2 chars are the major version number
WITHOUT_CLASSIFICATION	Second 2 are the minor number
WITHOUT_CLASSIFICATION	Then the pre-release status
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Finally the bug fix release
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 1. Check whether tools.jar is in the system classpath:
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG, MiscUtilities.class, "- is not in system classpath."); }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 2. Check whether it is in the jEdit user settings jars folder:
WITHOUT_CLASSIFICATION	jEdit will load it automatically
WITHOUT_CLASSIFICATION	jEdit will load it automatically
WITHOUT_CLASSIFICATION	{{{ 3. Check whether it is in jEdit's system jars folder:
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ 4. Check whether it is in <java.home>/lib:
WITHOUT_CLASSIFICATION	{{{ Load it, if not yet done:
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getEncodings() method
WITHOUT_CLASSIFICATION	{{{ isSupportedEncoding() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ compareChars()
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ maybeReload() method
WITHOUT_CLASSIFICATION	On Windows and MacOS, path names are case insensitive
WITHOUT_CLASSIFICATION	{{{ Input/output methods
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	unwrap any primitives
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	onlystatic
WITHOUT_CLASSIFICATION	no field, try property acces
WITHOUT_CLASSIFICATION	not a field, try property access
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getExpandOnInput() method
WITHOUT_CLASSIFICATION	{{{ setExpandOnInput() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	{{{ Figure out some minor things
WITHOUT_CLASSIFICATION	we reuse the 'pp' vector to save time
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	positional parameters will be inserted where $1, $2, $3, ... occurs in the expansion
WITHOUT_CLASSIFICATION	{{{ Handle abbrevs of the form abbrev#pos1#pos2#pos3#...
WITHOUT_CLASSIFICATION	have to check again since above might set NEW_FILE flag
WITHOUT_CLASSIFICATION	{{{ reload() method
WITHOUT_CLASSIFICATION	For `reload' command
WITHOUT_CLASSIFICATION	Only on initial load
WITHOUT_CLASSIFICATION	{{{ Do some stuff once loading is finished
WITHOUT_CLASSIFICATION	if reloading a file, clear dirty flag
WITHOUT_CLASSIFICATION	view text areas temporarily blank out while a buffer is being loaded, to indicate to the user that there is no data available yet.
WITHOUT_CLASSIFICATION	theoretically a segment could have seg.offset != 0 but SegmentBuffer never does that
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setMode() method
WITHOUT_CLASSIFICATION	{{{ setMode() method
WITHOUT_CLASSIFICATION	{{{ setMode() method
WITHOUT_CLASSIFICATION	This protects against stupid people (like me) doing stuff like buffer.setMode(jEdit.getMode(...));
WITHOUT_CLASSIFICATION	this must be in reverse order so that modes from the user catalog get checked first!
WITHOUT_CLASSIFICATION	{{{ markTokens() method
WITHOUT_CLASSIFICATION	{{{ Indentation
WITHOUT_CLASSIFICATION	{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	blank line
WITHOUT_CLASSIFICATION	no whitespace
WITHOUT_CLASSIFICATION	{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	{{{ getOpenParenIndent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	the first element of pp is the abbrev itself
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} {{{ Handle ordinary abbrevs
WITHOUT_CLASSIFICATION	{{{ Maybe show add abbrev dialog
WITHOUT_CLASSIFICATION	{{{ getGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ setGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getModeAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ setModeAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ addGlobalAbbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ addModeAbbrev() method
WITHOUT_CLASSIFICATION	only load global abbrevs if user abbrevs file could not be loaded
WITHOUT_CLASSIFICATION	{{{ countNewlines() method
WITHOUT_CLASSIFICATION	try mode-specific abbrevs first
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	write global abbrevs
WITHOUT_CLASSIFICATION	write mode abbrevs
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	number of positional parameters in abbreviation expansion
WITHOUT_CLASSIFICATION	{{{ Expansion constructor
WITHOUT_CLASSIFICATION	{{{ Handle backslash
WITHOUT_CLASSIFICATION	$n is 1-indexed, but vector contents is zero indexed
WITHOUT_CLASSIFICATION	$key will be $key, for example
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insertAtColumn() method
WITHOUT_CLASSIFICATION	{{{ insertIndented() method
WITHOUT_CLASSIFICATION	obtain the leading indent for later use
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ getClassName() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	this one only finds public (and in interfaces, etc.)
WITHOUT_CLASSIFICATION	try declaredField
WITHOUT_CLASSIFICATION	{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	{{{ createBrowserMenuItems() method
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	{{{ createOptionPanes() method
WITHOUT_CLASSIFICATION	{{{ getJAR() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	package-private members
WITHOUT_CLASSIFICATION	{{{ Deferred class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	package-private members
WITHOUT_CLASSIFICATION	{{{ JAR class
WITHOUT_CLASSIFICATION	{{{ getVersion() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBuild() method
WITHOUT_CLASSIFICATION	(major).(minor).(<99 = preX, 99 = final).(bug fix)
WITHOUT_CLASSIFICATION	{{{ main() method
WITHOUT_CLASSIFICATION	{{{ Check for Java 1.3 or later
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getNext() method
WITHOUT_CLASSIFICATION	MacOS users expect the app to keep running after all windows are closed
WITHOUT_CLASSIFICATION	{{{ getPrev() method
WITHOUT_CLASSIFICATION	{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	{{{ getIndex() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Parse command line
WITHOUT_CLASSIFICATION	open initial view?
WITHOUT_CLASSIFICATION	script to run
WITHOUT_CLASSIFICATION	{{{ We need these initializations very early on
WITHOUT_CLASSIFICATION	{{{ Try connecting to another running jEdit instance
WITHOUT_CLASSIFICATION	block until its closed
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Initialize settings directory
WITHOUT_CLASSIFICATION	Write a warning message:
WITHOUT_CLASSIFICATION	{{{ Get things rolling
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Initialize server
WITHOUT_CLASSIFICATION	{{{ Do more stuff
WITHOUT_CLASSIFICATION	Buffer sort
WITHOUT_CLASSIFICATION	{{{ Initialize Java 1.4-specific code
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Activate plugins that must be activated at startup
WITHOUT_CLASSIFICATION	{{{ Load macros and run startup scripts, after plugins and settings are loaded
WITHOUT_CLASSIFICATION	{{{ Run script specified with -run= parameter
WITHOUT_CLASSIFICATION	Open files, create the view and hide the splash screen.
WITHOUT_CLASSIFICATION	{{{ Property methods
WITHOUT_CLASSIFICATION	{{{ getProperties() method
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	{{{ getDoubleProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Not found, fall through to next class
WITHOUT_CLASSIFICATION	Now, on with the hunt...
WITHOUT_CLASSIFICATION	Quick check catches public fields include those in interfaces
WITHOUT_CLASSIFICATION	{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setColorProperty() method
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	{{{ setDoubleProperty() method
WITHOUT_CLASSIFICATION	{{{ setFontProperty() method
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	{{{ resetProperty() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	give all text areas the same font
WITHOUT_CLASSIFICATION	defaults.put("TextField.font",font);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Enable/Disable tooltips
WITHOUT_CLASSIFICATION	we do this here instead of adding buffers to the bus.
WITHOUT_CLASSIFICATION	{{{ getPluginJARs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPlugin() method
WITHOUT_CLASSIFICATION	{{{ Plugin management methods
WITHOUT_CLASSIFICATION	{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _getLineManager() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPlugin(String, boolean) method
WITHOUT_CLASSIFICATION	{{{ getPlugins() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addPluginJAR() method
WITHOUT_CLASSIFICATION	backwards compatibility...
WITHOUT_CLASSIFICATION	{{{ addPluginJARsFromDirectory() method
WITHOUT_CLASSIFICATION	remove this when 4.1 plugin API is deprecated
WITHOUT_CLASSIFICATION	{{{ removePluginJAR() method
WITHOUT_CLASSIFICATION	{{{ Action methods
WITHOUT_CLASSIFICATION	{{{ getActionContext() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addActionSet() method
WITHOUT_CLASSIFICATION	{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getAction() method
WITHOUT_CLASSIFICATION	{{{ getBuiltInActionSet() method
WITHOUT_CLASSIFICATION	{{{ getActionSets() method
WITHOUT_CLASSIFICATION	{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getActions() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	{{{ Edit mode methods
WITHOUT_CLASSIFICATION	{{{ reloadModes() method
WITHOUT_CLASSIFICATION	Try to guess the eventual size to avoid unnecessary copying
WITHOUT_CLASSIFICATION	{{{ Load the global catalog
WITHOUT_CLASSIFICATION	{{{ Load user catalog
WITHOUT_CLASSIFICATION	create dummy catalog
WITHOUT_CLASSIFICATION	{{{ getMode() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ getModes() method
WITHOUT_CLASSIFICATION	{{{ Buffer creation methods
WITHOUT_CLASSIFICATION	{{{ openFiles() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ openTemporary() method
WITHOUT_CLASSIFICATION	{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Buffer constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	if loadAutosave is false, we loaded an autosave file, so we set 'dirty' to true
WITHOUT_CLASSIFICATION	note that we don't use setDirty(), because a) that would send an unnecessary message, b) it would also set the AUTOSAVE_DIRTY flag, which will make the autosave thread write out a redundant autosave file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	{{{ keyPressed() method
WITHOUT_CLASSIFICATION	int
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	send full range of events to avoid breaking plugins
WITHOUT_CLASSIFICATION	{{{ newFile() method
WITHOUT_CLASSIFICATION	don't want 'New File' to create a read only buffer if current file is on SQL VFS or something
WITHOUT_CLASSIFICATION	return the newly created 'untitled-1'
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Find the highest Untitled-n file
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Buffer management methods
WITHOUT_CLASSIFICATION	{{{ closeBuffer() method
WITHOUT_CLASSIFICATION	send some EditBus messages
WITHOUT_CLASSIFICATION	EditBus.send(new BufferUpdate(Buffer.this, view,BufferUpdate.MARKERS_CHANGED));
WITHOUT_CLASSIFICATION	{{{ keyTyped() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insertFile() method
WITHOUT_CLASSIFICATION	this returns false if initial sanity checks (if the file is a directory, etc) fail
WITHOUT_CLASSIFICATION	{{{ checkFileStatus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ autosave() method
WITHOUT_CLASSIFICATION	{{{ saveAs() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	files[] should have length 1, since the dialog type is SAVE_DIALOG
WITHOUT_CLASSIFICATION	Once save is complete, do a few other things
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	\t handled above
WITHOUT_CLASSIFICATION	eg, foo<C+b>, will insert foobar,
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isFocusTraversable() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Getters/setter methods for various buffer meta-data
WITHOUT_CLASSIFICATION	{{{ getLastModified() method
WITHOUT_CLASSIFICATION	{{{ setLastModified() method
WITHOUT_CLASSIFICATION	{{{ getVFS() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ _closeBuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getSymlinkPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isClosed() method
WITHOUT_CLASSIFICATION	{{{ getDirectory() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isLoaded() method
WITHOUT_CLASSIFICATION	{{{ isPerformingIO() method
WITHOUT_CLASSIFICATION	{{{ isNewFile() method
WITHOUT_CLASSIFICATION	{{{ setNewFile() method
WITHOUT_CLASSIFICATION	{{{ isUntitled() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	zero it here so that BufferTabs doesn't have any problems
WITHOUT_CLASSIFICATION	{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ reloadAllBuffers() method
WITHOUT_CLASSIFICATION	save caret info. Buffer.load() will load it.
WITHOUT_CLASSIFICATION	{{{ _getBuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ getBuffers() method
WITHOUT_CLASSIFICATION	{{{ getBufferCount() method
WITHOUT_CLASSIFICATION	{{{ getFirstBuffer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLastBuffer() method
WITHOUT_CLASSIFICATION	{{{ checkBufferStatus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isDirty() method
WITHOUT_CLASSIFICATION	{{{ isReadOnly() method
WITHOUT_CLASSIFICATION	{{{ isEditable() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setDirty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setReadOnly() method
WITHOUT_CLASSIFICATION	fixes dirty flag not being reset on save/insert/undo/redo/undo
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	{{{ View methods
WITHOUT_CLASSIFICATION	{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isTemporary() method
WITHOUT_CLASSIFICATION	{{{ getIcon() method
WITHOUT_CLASSIFICATION	{{{ Thread safety
WITHOUT_CLASSIFICATION	{{{ readLock() method
WITHOUT_CLASSIFICATION	{{{ readUnlock() method
WITHOUT_CLASSIFICATION	{{{ writeLock() method
WITHOUT_CLASSIFICATION	{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	{{{ Line offset methods
WITHOUT_CLASSIFICATION	{{{ getLength() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	{{{ getLineCount() method
WITHOUT_CLASSIFICATION	{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLineLength() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ invalidateCachedScreenLineCounts() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Text getters and setters
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	otherwise it will be delivered later
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Undo
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ isTransactionInProgress() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ Buffer events
WITHOUT_CLASSIFICATION	{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeBufferChangeListener() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBufferChangeListeners() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getIndentSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getTabSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Now try buffer.<property>
WITHOUT_CLASSIFICATION	{{{ initProxy() method
WITHOUT_CLASSIFICATION	For backwards compatibility
WITHOUT_CLASSIFICATION	First try the buffer-local properties
WITHOUT_CLASSIFICATION	Now try mode.<mode>.<property>
WITHOUT_CLASSIFICATION	Try returning it as an integer first
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	set proxy host
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	{{{ newView() method
WITHOUT_CLASSIFICATION	set proxy port
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	show tip of the day
WITHOUT_CLASSIFICATION	set non proxy hosts list
WITHOUT_CLASSIFICATION	{{{ closeView() method
WITHOUT_CLASSIFICATION	{{{ getViews() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getViewCount() method
WITHOUT_CLASSIFICATION	{{{ getFirstView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getLastView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getActiveView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	eg user just closed a view and didn't focus another
WITHOUT_CLASSIFICATION	{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	{{{ isMainThread() method
WITHOUT_CLASSIFICATION	{{{ isBackgroundMode() method
WITHOUT_CLASSIFICATION	{{{ showMemoryStatusDialog() method
WITHOUT_CLASSIFICATION	{{{ getJEditHome() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getSettingsDirectory() method
WITHOUT_CLASSIFICATION	{{{ getJARCacheDirectory() method
WITHOUT_CLASSIFICATION	{{{ backupSettingsFile() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ exit() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveSettings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Wait for pending I/O requests
WITHOUT_CLASSIFICATION	Close dialog, view.close() call need a view...
WITHOUT_CLASSIFICATION	Send EditorExitRequested
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Close all buffers
WITHOUT_CLASSIFICATION	If we are running in background mode and reallyExit was not specified, then return here.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Save settings in case user kills the backgrounded jEdit process
WITHOUT_CLASSIFICATION	Save view properties here
WITHOUT_CLASSIFICATION	Stop autosave timer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Send EditorExiting
WITHOUT_CLASSIFICATION	Save settings
WITHOUT_CLASSIFICATION	Close activity log stream
WITHOUT_CLASSIFICATION	Byebye...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ getEditServer() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addMode() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadMode() method
WITHOUT_CLASSIFICATION	package-private
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	{{{ pluginError() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ setActiveView() method
WITHOUT_CLASSIFICATION	buffer link list
WITHOUT_CLASSIFICATION	makes openTemporary() thread-safe
WITHOUT_CLASSIFICATION	view link list
WITHOUT_CLASSIFICATION	{{{ usage() method
WITHOUT_CLASSIFICATION	{{{ version() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initMisc() method
WITHOUT_CLASSIFICATION	{{{ makeServerScript() method
WITHOUT_CLASSIFICATION	Add our protocols to java.net.URL's list
WITHOUT_CLASSIFICATION	Determine installation directory. If the jedit.home property is set, use that. Then, look for jedit.jar in the classpath. If that fails, assume this is the web start version.
WITHOUT_CLASSIFICATION	Set the User-Agent string used by the java.net HTTP handler
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	check if web start
WITHOUT_CLASSIFICATION	use user.dir as last resort
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	Add an EditBus component that will reload edit modes and macros if they are changed from within the editor
WITHOUT_CLASSIFICATION	{{{ initSiteProperties() method
WITHOUT_CLASSIFICATION	{{{ initSystemProperties() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	site properties are loaded as default properties, overwriting jEdit's system properties
WITHOUT_CLASSIFICATION	{{{ initResources() method
WITHOUT_CLASSIFICATION	{{{ initPlugins() method
WITHOUT_CLASSIFICATION	{{{ initUserProperties() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initPLAF() method
WITHOUT_CLASSIFICATION	give all Swing components our colors
WITHOUT_CLASSIFICATION	defaults.put(prefix + ".inactiveForeground",foreground);
WITHOUT_CLASSIFICATION	{{{ runStartupScripts() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	null not supported?
WITHOUT_CLASSIFICATION	{{{ FirewallAuthenticator class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ finishStartup() method
WITHOUT_CLASSIFICATION	Start I/O threads
WITHOUT_CLASSIFICATION	Start edit server
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Report any plugin errors
WITHOUT_CLASSIFICATION	{{{ showPluginErrorDialog() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	in one case not a single AWT class will have been touched (splash screen off + -nogui -nobackground switches on command line)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addBufferToList() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Can't happen
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	{{{ gotoMarker() method
WITHOUT_CLASSIFICATION	Handle line number
WITHOUT_CLASSIFICATION	Handle marker
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	default value
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Sort buffer list
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ removeViewFromList() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting
WITHOUT_CLASSIFICATION	{{{ addViewToList() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	{{{ getProperties() method
WITHOUT_CLASSIFICATION	{{{ closeView() method
WITHOUT_CLASSIFICATION	exit does editor event & save
WITHOUT_CLASSIFICATION	{{{ loadModeCatalog() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadSystemProps() method
WITHOUT_CLASSIFICATION	{{{ loadSiteProps() method
WITHOUT_CLASSIFICATION	{{{ loadUserProps() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveUserProps() method
WITHOUT_CLASSIFICATION	{{{ loadPluginProps() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	{{{ resetProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getDefaultProperty() method
WITHOUT_CLASSIFICATION	{{{ loadProps() method
WITHOUT_CLASSIFICATION	{{{ Mode constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getProperty() method
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setProperty() method
WITHOUT_CLASSIFICATION	{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ evalSelection() method
WITHOUT_CLASSIFICATION	{{{ showEvaluateDialog() method
WITHOUT_CLASSIFICATION	{{{ showEvaluateLinesDialog() method
WITHOUT_CLASSIFICATION	{{{ _runScript() method
WITHOUT_CLASSIFICATION	{{{ _runScript() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	user cancelled???
WITHOUT_CLASSIFICATION	{{{ getStringProperty() method
WITHOUT_CLASSIFICATION	{{{ setStringProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	will be cached from now on...
WITHOUT_CLASSIFICATION	{{{ getRegexpProperty() method
WITHOUT_CLASSIFICATION	{{{ getRuleSetAtOffset() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	{{{ _eval() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	{{{ cacheBlock() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	{{{ eval() method
WITHOUT_CLASSIFICATION	never called
WITHOUT_CLASSIFICATION	{{{ runCachedBlock() method
WITHOUT_CLASSIFICATION	{{{ isScriptRunning() method
WITHOUT_CLASSIFICATION	{{{ getNameSpace() method
WITHOUT_CLASSIFICATION	{{{ Deprecated functions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ resetClassManager() method
WITHOUT_CLASSIFICATION	{{{ setupDefaultVariables() method
WITHOUT_CLASSIFICATION	{{{ resetDefaultVariables() method
WITHOUT_CLASSIFICATION	{{{ unwrapException() method
WITHOUT_CLASSIFICATION	{{{ handleException() method
WITHOUT_CLASSIFICATION	{{{ createInterpreter() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	garbage collected
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clean up old listeners
WITHOUT_CLASSIFICATION	System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getKeywordMapAtOffset() method
WITHOUT_CLASSIFICATION	{{{ getContextSensitiveProperty() method
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Used to store property values
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clean up old listeners
WITHOUT_CLASSIFICATION	System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	garbage collected
WITHOUT_CLASSIFICATION	{{{ User interface
WITHOUT_CLASSIFICATION	{{{ Groups
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Common layers
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Layers for top group
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Layers for bottom group
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	{{{ getToolBar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	{{{ showWaitCursor() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	still needed even though glass pane has a wait cursor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ hideWaitCursor() method
WITHOUT_CLASSIFICATION	{{{ getStatus() method
WITHOUT_CLASSIFICATION	{{{ getActionBar() method
WITHOUT_CLASSIFICATION	{{{ getSearchBar() method
WITHOUT_CLASSIFICATION	{{{ quickIncrementalSearch() method
WITHOUT_CLASSIFICATION	{{{ quickHyperSearch() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	{{{ Input handling
WITHOUT_CLASSIFICATION	{{{ getKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	{{{ setKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	{{{ setInputHandler() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getMacroRecorder() method
WITHOUT_CLASSIFICATION	{{{ setMacroRecorder() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) FormalParameters
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Gather all of the methods of class and parents
WITHOUT_CLASSIFICATION	{{{ toggleWordWrap() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Buffers, edit panes, split panes
WITHOUT_CLASSIFICATION	{{{ splitHorizontally() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Type, name and expression syntax follows.
WITHOUT_CLASSIFICATION	{{{ splitVertically() method
WITHOUT_CLASSIFICATION	{{{ split() method
WITHOUT_CLASSIFICATION	{{{ unsplit() method
WITHOUT_CLASSIFICATION	{{{ unsplitCurrent() method
WITHOUT_CLASSIFICATION	find first split pane parenting current edit pane
WITHOUT_CLASSIFICATION	Succeeded. Cache the resolved method.
WITHOUT_CLASSIFICATION	Is the method public or are we in accessibility mode?
WITHOUT_CLASSIFICATION	Yes, it is.
WITHOUT_CLASSIFICATION	Found at least one matching method but couldn't use
WITHOUT_CLASSIFICATION	ignore and move on
WITHOUT_CLASSIFICATION	No, it is not.
WITHOUT_CLASSIFICATION	Is this a class?
WITHOUT_CLASSIFICATION	@bgen(jjtree) Type
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Find an appropriate constructor.use declared here to see package and private as well(there are no inherited constructors to worry about)
WITHOUT_CLASSIFICATION	get rid of any edit pane that is a child of the current edit pane's parent splitter
WITHOUT_CLASSIFICATION	{{{ nextTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Pull out the method signatures with matching names
WITHOUT_CLASSIFICATION	method matches name
WITHOUT_CLASSIFICATION	This method should parallel findMostSpecificMethod()
WITHOUT_CLASSIFICATION	{{{ prevTextArea() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ getSplitPane() method
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ goToBuffer() method
WITHOUT_CLASSIFICATION	ignore zero-height splits, etc
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getTextArea() method
WITHOUT_CLASSIFICATION	{{{ getEditPane() method
WITHOUT_CLASSIFICATION	{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	{{{ getViewConfig() method
WITHOUT_CLASSIFICATION	@bgen(jjtree) FormalParameter
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	why so cute?
WITHOUT_CLASSIFICATION	add interpereter and namespace to args list
WITHOUT_CLASSIFICATION	@bgen(jjtree)
WITHOUT_CLASSIFICATION	@bgen(jjtree)
WITHOUT_CLASSIFICATION	this originally handled postfix array dimensions...void VariableDeclaratorId() #VariableDeclaratorId :{ Token t; }{ t=<IDENTIFIER> { jjtThis.name = t.image; } ( "[" "]" { jjtThis.addUndefinedDimension(); } )}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Gather modifiers for a class, method, or field.I lookahead is true then we are being called as part of a lookahead and weshould not enforce any rules. Otherwise we validate based on context(field, method, class)
WITHOUT_CLASSIFICATION	@bgen(jjtree) ClassDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) MethodDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) PackageDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) ImportDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) VariableDeclarator
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnType
WITHOUT_CLASSIFICATION	@bgen(jjtree) PrimitiveType
WITHOUT_CLASSIFICATION	@bgen(jjtree) AmbiguousName
WITHOUT_CLASSIFICATION	@bgen(jjtree) Assignment
WITHOUT_CLASSIFICATION	This production is to determine lookahead only.
WITHOUT_CLASSIFICATION	@bgen(jjtree) CastExpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) PrimaryExpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) PrimarySuffix
WITHOUT_CLASSIFICATION	@bgen(jjtree) Literal
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	leave these on the stack for Arguments() to handle
WITHOUT_CLASSIFICATION	@bgen(jjtree) AllocationExpression
WITHOUT_CLASSIFICATION	@bgen(jjtree) ArrayDimensions
WITHOUT_CLASSIFICATION	Statement syntax follows.
WITHOUT_CLASSIFICATION	@bgen(jjtree) Block
WITHOUT_CLASSIFICATION	@bgen(jjtree) #FormalComment( retainComments)
WITHOUT_CLASSIFICATION	@bgen(jjtree) SwitchStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) SwitchLabel
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	@bgen(jjtree) WhileStatement
WITHOUT_CLASSIFICATION	Do statement is just a While statement with a special hook to executeat least once.
WITHOUT_CLASSIFICATION	@bgen(jjtree) ForStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) EnhancedForStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) TypedVariableDeclaration
WITHOUT_CLASSIFICATION	@bgen(jjtree) StatementExpressionList
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) ThrowStatement
WITHOUT_CLASSIFICATION	@bgen(jjtree) TryStatement
WITHOUT_CLASSIFICATION	All core AWT listeners
WITHOUT_CLASSIFICATION	All listeners in javax.swing.event as of Swing 1.1
WITHOUT_CLASSIFICATION	handleEvent gets all events
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	send to specific event handler
WITHOUT_CLASSIFICATION	Listener interfaces
WITHOUT_CLASSIFICATION	Listener interfaces
WITHOUT_CLASSIFICATION	used for the delayed evaluation...
WITHOUT_CLASSIFICATION	Token was accepted
WITHOUT_CLASSIFICATION	paramTypes
WITHOUT_CLASSIFICATION	returnType
WITHOUT_CLASSIFICATION	BSHType will cache the type for us
WITHOUT_CLASSIFICATION	Hashtable implements Map
WITHOUT_CLASSIFICATION	BSHFormalParameters will cache the type for us
WITHOUT_CLASSIFICATION	Hashtable implements Map
WITHOUT_CLASSIFICATION	Arrays incomplete... need to use the array setter
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Hypothetical question: can you have a RE that matches 1 times, 3 times, 5 times, but not 2 times or 4 times? Does having the subexpression back-reference operator allow that?
WITHOUT_CLASSIFICATION	{{{ isClosed() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Possible positions for the next repeat to match at
WITHOUT_CLASSIFICATION	Declare variables used in loop
WITHOUT_CLASSIFICATION	try next repeat at all possible positions
WITHOUT_CLASSIFICATION	add all items in current to doables array
WITHOUT_CLASSIFICATION	Find new doablesLast
WITHOUT_CLASSIFICATION	if none of the possibilities worked out, break out of do/while
WITHOUT_CLASSIFICATION	reassign where the next repeat can match
WITHOUT_CLASSIFICATION	increment how many repeats we've successfully found
WITHOUT_CLASSIFICATION	If there aren't enough repeats, then fail
WITHOUT_CLASSIFICATION	We're greedy, but ease off until a true match is found
WITHOUT_CLASSIFICATION	else did not match rest of the tokens, try again on smaller sample
WITHOUT_CLASSIFICATION	does this get all?
WITHOUT_CLASSIFICATION	If we fall out, no matches.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ isPlainView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	clone() separates a single match from the chain
WITHOUT_CLASSIFICATION	chain results to doneIndex
WITHOUT_CLASSIFICATION	Find new doneIndexLast
WITHOUT_CLASSIFICATION	matches after a newline
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	position in REToken.newline
WITHOUT_CLASSIFICATION	Don't match at all if REG_NOTBOL is set.
WITHOUT_CLASSIFICATION	value for end
WITHOUT_CLASSIFICATION	closer to end
WITHOUT_CLASSIFICATION	Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	value for end
WITHOUT_CLASSIFICATION	Big enough for a \r\n pair lookBehind[0] = most recent lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	set flag that next should fail next time?
WITHOUT_CLASSIFICATION	move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	This is prone to infinite loops if replace string turns out empty.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	closer to end
WITHOUT_CLASSIFICATION	Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	set flag that next should fail next time?
WITHOUT_CLASSIFICATION	move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	convert the byte read into a char
WITHOUT_CLASSIFICATION	Error conditions from GNU regcomp(3) manual
WITHOUT_CLASSIFICATION	Package scope constructor is used by RE.getMatchEnumeration()
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	no match
WITHOUT_CLASSIFICATION	doesn't happen
WITHOUT_CLASSIFICATION	need to deep clone?
WITHOUT_CLASSIFICATION	cut off alternates
WITHOUT_CLASSIFICATION	cut off alternates
WITHOUT_CLASSIFICATION	Anchor position refers to the index into the source input at which the matching operation began. This is also useful for the ANCHORINDEX option.
WITHOUT_CLASSIFICATION	Offset in source text where match was tried. This is zero-based; the actual position in the source text is given by (offset + anchor).
WITHOUT_CLASSIFICATION	Package scope; used by RE. used while matching to mark current match position in input start positions (relative to offset) for each (sub)exp. end positions for the same other possibility (to avoid having to use arrays)
WITHOUT_CLASSIFICATION	position in newline
WITHOUT_CLASSIFICATION	assume for now that next can only be one character
WITHOUT_CLASSIFICATION	Overrides REToken.chain() to optimize for strings
WITHOUT_CLASSIFICATION	Note that there is some debate over whether '_' should be included
WITHOUT_CLASSIFICATION	The RE constructor uses this to look up the constant for a string
WITHOUT_CLASSIFICATION	Array indices correspond to constants defined above.
WITHOUT_CLASSIFICATION	This is the number of subexpressions in this regular expression, with a minimum value of zero. Returned by getNumSubs()
WITHOUT_CLASSIFICATION	The localized strings are kept in a separate file
WITHOUT_CLASSIFICATION	This String will be returned by getVersion()
WITHOUT_CLASSIFICATION	Retrieves a message from the ResourceBundle
WITHOUT_CLASSIFICATION	internal constructor used for alternation
WITHOUT_CLASSIFICATION	Subexpression index of this token.
WITHOUT_CLASSIFICATION	For use by subclasses
WITHOUT_CLASSIFICATION	The meat of construction
WITHOUT_CLASSIFICATION	Number of subexpressions in this token.
WITHOUT_CLASSIFICATION	linked list of tokens (sort of -- some closed loops can exist)
WITHOUT_CLASSIFICATION	Precalculate these so we don't pay for the math every time we need to access them.
WITHOUT_CLASSIFICATION	This is the case of {x,}
WITHOUT_CLASSIFICATION	This is used for {x,y} calculations
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Buffer a token so we can create a TokenRepeated, etc.
WITHOUT_CLASSIFICATION	read the next character unit (including backslash escapes)
WITHOUT_CLASSIFICATION	make everything up to here be a branch. create vector if nec.
WITHOUT_CLASSIFICATION	LIST OPERATOR: [...] | [^...]
WITHOUT_CLASSIFICATION	Check for initial caret, negation
WITHOUT_CLASSIFICATION	Check for leading right bracket literal
WITHOUT_CLASSIFICATION	Create a new RETokenOneOf
WITHOUT_CLASSIFICATION	{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	find end of subexpression
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	not a comment subexpression
WITHOUT_CLASSIFICATION	{{{ getNext() method
WITHOUT_CLASSIFICATION	START OF LINE OPERATOR ^
WITHOUT_CLASSIFICATION	END OF LINE OPERATOR $
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Read string of digits
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	BACKREFERENCE OPERATOR \1 \2 ... \9 not available if RE_NO_BK_REFS is set
WITHOUT_CLASSIFICATION	Check for stingy matching on RETokenRepeated
WITHOUT_CLASSIFICATION	START OF STRING OPERATOR \A if RE_STRING_ANCHORS is set
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	WORD END OPERATOR \> if ????
WITHOUT_CLASSIFICATION	NON-WORD BREAK OPERATOR \B if ????
WITHOUT_CLASSIFICATION	NON-DIGIT OPERATOR \D
WITHOUT_CLASSIFICATION	NEWLINE ESCAPE \n
WITHOUT_CLASSIFICATION	RETURN ESCAPE \r
WITHOUT_CLASSIFICATION	WHITESPACE OPERATOR \s if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	ALPHANUMERIC OPERATOR \w
WITHOUT_CLASSIFICATION	NON-ALPHANUMERIC OPERATOR \W
WITHOUT_CLASSIFICATION	END OF STRING OPERATOR \Z
WITHOUT_CLASSIFICATION	not a special character
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	Add final buffered token and an EndSub marker
WITHOUT_CLASSIFICATION	compact the Vector
WITHOUT_CLASSIFICATION	Trivial case
WITHOUT_CLASSIFICATION	Overrides REToken.setUncle
WITHOUT_CLASSIFICATION	to deal with empty subexpressions
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	handle pathological case of zero-length match
WITHOUT_CLASSIFICATION	Implements abstract method REToken.match()
WITHOUT_CLASSIFICATION	Note the start of this subexpression
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Read string of digits
WITHOUT_CLASSIFICATION	Find longest match of them all to observe leftmost longest
WITHOUT_CLASSIFICATION	Append character to buffer if needed
WITHOUT_CLASSIFICATION	{{{ getPrev() method
WITHOUT_CLASSIFICATION	Helper function for constructor
WITHOUT_CLASSIFICATION	didn't match up
WITHOUT_CLASSIFICATION	Precondition: input[index-1] == '{', minMax != null
WITHOUT_CLASSIFICATION	This constructor is used for convenience when we know the set beforehand, e.g. \d --> new RETokenOneOf("0123456789",false, ..) \D --> new RETokenOneOf("0123456789",true, ..)
WITHOUT_CLASSIFICATION	We know min and max now, and they are valid.
WITHOUT_CLASSIFICATION	return the index following the '}'
WITHOUT_CLASSIFICATION	Cast input appropriately or throw exception
WITHOUT_CLASSIFICATION	do we lose index info?
WITHOUT_CLASSIFICATION	match was successful
WITHOUT_CLASSIFICATION	Add tryMatch to list of possibilities.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	set contents of mymatch equal to newMatch
WITHOUT_CLASSIFICATION	try each one that matched
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ View constructor
WITHOUT_CLASSIFICATION	index+1 works for [^abc] lists, not for generic lookahead (--> index)
WITHOUT_CLASSIFICATION	If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	check if input is at a valid position
WITHOUT_CLASSIFICATION	handled by RE
WITHOUT_CLASSIFICATION	true for the constant defined syntaxes
WITHOUT_CLASSIFICATION	Values for constants are bit indexes
WITHOUT_CLASSIFICATION	impl.
WITHOUT_CLASSIFICATION	single line mode (/s)
WITHOUT_CLASSIFICATION	Define syntaxes
WITHOUT_CLASSIFICATION	P1003.2/D11.2, section 4.20.7.1, lines 5078ff.
WITHOUT_CLASSIFICATION	Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added.
WITHOUT_CLASSIFICATION	There is no official Perl spec, but here's a "best guess"
WITHOUT_CLASSIFICATION	except for '{', apparently
WITHOUT_CLASSIFICATION	\d,\D,\w,\W,\s,\S
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	UNDONE
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	Unexpected EOF!
WITHOUT_CLASSIFICATION	Per Patrick Beard:
WITHOUT_CLASSIFICATION	always: in the range 0 .. 9. The current block size is 100000 this number.
WITHOUT_CLASSIFICATION	index of the last char in the block, so the block size == last + 1.
WITHOUT_CLASSIFICATION	index in zptr[] of original string after sorting.
WITHOUT_CLASSIFICATION	throw new CCoruptionError();
WITHOUT_CLASSIFICATION	throw new IOException("Invalid block size");
WITHOUT_CLASSIFICATION	not a char and not EOF
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	A bad CRC is considered a fatal error.
WITHOUT_CLASSIFICATION	currBlockNo++;
WITHOUT_CLASSIFICATION	Now the selectors
WITHOUT_CLASSIFICATION	Now the coding tables
WITHOUT_CLASSIFICATION	Create the Huffman decoding tables
WITHOUT_CLASSIFICATION	Receive the mapping table
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	If you are ever unlucky/improbable enough to get a stack overflow whilst sorting, increase the following constant and try again. In practice I have never seen the stack go above 27 elems, so the following limit seems very generous.
WITHOUT_CLASSIFICATION	Knuth's increments seem to work better than Incerpi-Sedgewick here. Possibly because the number of elems to sort is usually small, typically <= 20.
WITHOUT_CLASSIFICATION	Used when sorting. If too many long comparisons happen, we stop sorting, randomise the block slightly, and try again.
WITHOUT_CLASSIFICATION	ch = 0;
WITHOUT_CLASSIFICATION	index in zptr[] of original string after sorting.
WITHOUT_CLASSIFICATION	The back end needs a place to store the MTF values whilst it calculates the coding tables. We could put them in the zptr array. However, these values will fit in a short, so we overlay szptr at the start of zptr, in the hope of reducing the number of cache misses induced by the multiple traversals of the MTF values when calculating coding tables. Seems to improve compression speed by about 1%.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	throw new CError();
WITHOUT_CLASSIFICATION	szptr = zptr;
WITHOUT_CLASSIFICATION	blockNo++;
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	write 8-bit
WITHOUT_CLASSIFICATION	sort the block and establish posn of original string
WITHOUT_CLASSIFICATION	Now the block's CRC, so it is in a known place.
WITHOUT_CLASSIFICATION	Now a single bit indicating randomisation.
WITHOUT_CLASSIFICATION	Finally, block's contents proper.
WITHOUT_CLASSIFICATION	Now another magic 48-bit number, 0x177245385090, to indicate the end of the last block. (sqrt(pi), if you want to know. I did want to use e, but it contains too much repetition -- 27 18 28 18 28 46 -- for me to feel statistically comfortable. Call me paranoid.)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	In the various block-sized structures, live data runs from 0 to last+NUM_OVERSHOOT_BYTES inclusive. First, set up the overshoot area for block.
WITHOUT_CLASSIFICATION	Use simpleSort(), since the full sorting mechanism has quite a large constant overhead.
WITHOUT_CLASSIFICATION	Now ftab contains the first loc of every small bucket. Calculate the running order, from smallest to largest big bucket.
WITHOUT_CLASSIFICATION	The main sorting loop.
WITHOUT_CLASSIFICATION	Process big buckets, starting with the least full.
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	Decide how many coding tables to use
WITHOUT_CLASSIFICATION	Generate an initial set of coding tables
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Iterate up to N_ITERS times to improve the tables.
WITHOUT_CLASSIFICATION	Set group start & end marks.
WITHOUT_CLASSIFICATION	Calculate the cost of this group as coded by each of the coding tables.
WITHOUT_CLASSIFICATION	run jEditLauncher installation
WITHOUT_CLASSIFICATION	Increment the symbol frequencies for the selected table.
WITHOUT_CLASSIFICATION	Recompute the tables based on the accumulated frequencies.
WITHOUT_CLASSIFICATION	Compute MTF values for the selectors.
WITHOUT_CLASSIFICATION	Assign actual codes for the tables.
WITHOUT_CLASSIFICATION	Transmit the mapping table.
WITHOUT_CLASSIFICATION	Now the selectors.
WITHOUT_CLASSIFICATION	11
WITHOUT_CLASSIFICATION	And finally, the block data proper
WITHOUT_CLASSIFICATION	copy 1
WITHOUT_CLASSIFICATION	copy 2
WITHOUT_CLASSIFICATION	( (this.assemLen + numToWrite ) < this.recordBuf.length )
WITHOUT_CLASSIFICATION	When we get here we have EITHER: o An empty "assemble" buffer. o No bytes to write (numToWrite == 0)
WITHOUT_CLASSIFICATION	in.close();
WITHOUT_CLASSIFICATION	Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	synchronized
WITHOUT_CLASSIFICATION	on by default
WITHOUT_CLASSIFICATION	create app start script
WITHOUT_CLASSIFICATION	Delete existing copy
WITHOUT_CLASSIFICATION	Write simple script
WITHOUT_CLASSIFICATION	Make it executable
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	new JEditLauncherOSTask(installer)
WITHOUT_CLASSIFICATION	install user-selected packages
WITHOUT_CLASSIFICATION	do operating system specific stuff (creating startup scripts, installing man pages, etc.)
WITHOUT_CLASSIFICATION	System.err.println(fileName);
WITHOUT_CLASSIFICATION	label == null means no configurable options
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ getPosition() method
WITHOUT_CLASSIFICATION	{{{ Marker constructor
WITHOUT_CLASSIFICATION	{{{ setShortcut() method
WITHOUT_CLASSIFICATION	{{{ createPosition() method
WITHOUT_CLASSIFICATION	{{{ removePosition() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	forget the cached Position instance
WITHOUT_CLASSIFICATION	{{{ setPosition() method
WITHOUT_CLASSIFICATION	{{{ isPerspectiveDirty() method
WITHOUT_CLASSIFICATION	{{{ setPerspectiveDirty() method
WITHOUT_CLASSIFICATION	{{{ loadPerspective() method
WITHOUT_CLASSIFICATION	{{{ savePerspective() method
WITHOUT_CLASSIFICATION	backgrounded
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ PerspectiveHandler class
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ showRunScriptDialog() method
WITHOUT_CLASSIFICATION	{{{ message() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	save dockable window geometry, and close 'em
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	only executed if above loop falls through, ie there is no handler for this file
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ loadMacros() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ registerHandler() method
WITHOUT_CLASSIFICATION	{{{ getHandlers() method
WITHOUT_CLASSIFICATION	{{{ getHandlerForFileName() method
WITHOUT_CLASSIFICATION	{{{ getHandler() method
WITHOUT_CLASSIFICATION	{{{ getMacroHierarchy() method
WITHOUT_CLASSIFICATION	{{{ getMacroActionSet() method
WITHOUT_CLASSIFICATION	{{{ getMacro() method
WITHOUT_CLASSIFICATION	{{{ Macro class
WITHOUT_CLASSIFICATION	{{{ Macro constructor
WITHOUT_CLASSIFICATION	{{{ getPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getHandler() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ macroNameToLabel() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ loadMacros() method
WITHOUT_CLASSIFICATION	{{{ recordTemporaryMacro() method
WITHOUT_CLASSIFICATION	{{{ recordMacro() method
WITHOUT_CLASSIFICATION	{{{ stopRecording() method
WITHOUT_CLASSIFICATION	{{{ runTemporaryMacro() method
WITHOUT_CLASSIFICATION	I already wrote a comment expaining this in Macro.invoke().
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ recordMacro() method
WITHOUT_CLASSIFICATION	do nothing!
WITHOUT_CLASSIFICATION	{{{ try to merge with an existing menu first
WITHOUT_CLASSIFICATION	{{{ addMacro() method
WITHOUT_CLASSIFICATION	ignore if already added. see comment in loadMacros().
WITHOUT_CLASSIFICATION	setting the message to 'null' causes the status bar to check if a recording is in progress
WITHOUT_CLASSIFICATION	{{{ Recorder class
WITHOUT_CLASSIFICATION	{{{ Recorder constructor
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ recordInput() method
WITHOUT_CLASSIFICATION	{{{ recordInput() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ createMacro() method
WITHOUT_CLASSIFICATION	{{{ Handler class
WITHOUT_CLASSIFICATION	setting the message to 'null' causes the status bar to check if a recording is in progress
WITHOUT_CLASSIFICATION	{{{ flushInput() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getLabel() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ Handler constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ createMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ BeanShellHandler class
WITHOUT_CLASSIFICATION	{{{ BeanShellHandler constructor
WITHOUT_CLASSIFICATION	Remove '.bsh'
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Some predefined icons
WITHOUT_CLASSIFICATION	{{{ Icon methods
WITHOUT_CLASSIFICATION	{{{ setIconPath() method
WITHOUT_CLASSIFICATION	{{{ loadIcon() method
WITHOUT_CLASSIFICATION	check if there is a cached version first
WITHOUT_CLASSIFICATION	get the icon
WITHOUT_CLASSIFICATION	{{{ getEditorIcon() method
WITHOUT_CLASSIFICATION	{{{ getPluginIcon() method
WITHOUT_CLASSIFICATION	{{{ Menus, tool bars
WITHOUT_CLASSIFICATION	{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ message() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	{{{ input() method
WITHOUT_CLASSIFICATION	{{{ confirm() method
WITHOUT_CLASSIFICATION	{{{ inputProperty() method
WITHOUT_CLASSIFICATION	{{{ loadMenu() method
WITHOUT_CLASSIFICATION	{{{ loadMenu() method
WITHOUT_CLASSIFICATION	{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	{{{ inputProperty() method
WITHOUT_CLASSIFICATION	{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	{{{ prettifyMenuLabel() method
WITHOUT_CLASSIFICATION	{{{ showVFSFileDialog() method
WITHOUT_CLASSIFICATION	{{{ Canned dialog boxes
WITHOUT_CLASSIFICATION	{{{ Colors and styles
WITHOUT_CLASSIFICATION	{{{ parseColor() method
WITHOUT_CLASSIFICATION	{{{ parseColor() method
WITHOUT_CLASSIFICATION	{{{ parseStyle() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ parseStyle() method
WITHOUT_CLASSIFICATION	{{{ loadStyles() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ loadStyles() method
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	{{{ Loading, saving window geometry
WITHOUT_CLASSIFICATION	{{{ loadGeometry() method
WITHOUT_CLASSIFICATION	{{{ adjustForScreenBounds() method
WITHOUT_CLASSIFICATION	Make sure the window is displayed in visible region
WITHOUT_CLASSIFICATION	{{{ ComponentHandler class
WITHOUT_CLASSIFICATION	{{{ componentMoved() method
WITHOUT_CLASSIFICATION	{{{ componentResized() method
WITHOUT_CLASSIFICATION	{{{ WindowHandler class
WITHOUT_CLASSIFICATION	{{{ windowOpened() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ saveGeometry() method
WITHOUT_CLASSIFICATION	{{{ getExtendedState() method
WITHOUT_CLASSIFICATION	{{{ setExtendedState() method
WITHOUT_CLASSIFICATION	{{{ centerOnScreen() method
WITHOUT_CLASSIFICATION	{{{ hideSplashScreen() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ createMultilineLabel() method
WITHOUT_CLASSIFICATION	{{{ requestFocus() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ isMiddleButton() method
WITHOUT_CLASSIFICATION	{{{ isPopupTrigger() method
WITHOUT_CLASSIFICATION	{{{ isAncestorOf() method
WITHOUT_CLASSIFICATION	System.err.println("x overflow");
WITHOUT_CLASSIFICATION	{{{ isRightButton() method
WITHOUT_CLASSIFICATION	{{{ getComponentParent() method
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ advanceSplashProgress() method
WITHOUT_CLASSIFICATION	{{{ getParentDialog() method
WITHOUT_CLASSIFICATION	{{{ showSplashScreen() method
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ AbstractOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	Only show class decs in CLASSES
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getComponent() method
WITHOUT_CLASSIFICATION	final in 4.2
WITHOUT_CLASSIFICATION	final in 4.2
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	ALL
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ addSeparator() method
WITHOUT_CLASSIFICATION	cons.insets = new Insets(1,0,1,0);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ addSeparator() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getEntry() method
WITHOUT_CLASSIFICATION	{{{ setEntry() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getHistory() method
WITHOUT_CLASSIFICATION	{{{ getBufferHistory() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ addEntry() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Try to squeltch the native code stack trace if the exceptionwas caused by a reflective call back into the bsh interpreter(e.g. eval() or source()
WITHOUT_CLASSIFICATION	classExists caches info for us
WITHOUT_CLASSIFICATION	classExists caches info for us
WITHOUT_CLASSIFICATION	classExists caches the tests for us
WITHOUT_CLASSIFICATION	Note: do not change this to BshClassManager plainClassForName() or equivalent.This class must not touch any other bsh classes.
WITHOUT_CLASSIFICATION	Child is array initializer. Evaluate it and fill in the dimensions it returns. Initialized arrays are always fully defined(no undefined dimensions to worry about). The syntax uses the undefinedDimension count.e.g. int [][] { 1, 2 };
WITHOUT_CLASSIFICATION	fill in definedDimensions [] lengths
WITHOUT_CLASSIFICATION	Evaluate the defined dimensions of the array
WITHOUT_CLASSIFICATION	unsafe caching of types
WITHOUT_CLASSIFICATION	first label
WITHOUT_CLASSIFICATION	get the first label
WITHOUT_CLASSIFICATION	while more labels or blocks and haven't hit return control
WITHOUT_CLASSIFICATION	if label is default or equals switchVal
WITHOUT_CLASSIFICATION	eval it
WITHOUT_CLASSIFICATION	should check to disallow continue here?
WITHOUT_CLASSIFICATION	skip nodes until next label
WITHOUT_CLASSIFICATION	binaryOperation can return Primitive or wrapper type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ activatePlugin() method
WITHOUT_CLASSIFICATION	private
WITHOUT_CLASSIFICATION	{{{ removeEntry() method
WITHOUT_CLASSIFICATION	XXX e.printStackTrace();
WITHOUT_CLASSIFICATION	Delegate to the static method
WITHOUT_CLASSIFICATION	Create the class static namespace
WITHOUT_CLASSIFICATION	Evaluate any inner class class definitions in the block effectively recursively call this method for contained classes first
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	Generate the type for our class
WITHOUT_CLASSIFICATION	if debug, write out the class file to debugClasses directory
WITHOUT_CLASSIFICATION	Define the new class in the classloader
WITHOUT_CLASSIFICATION	bcm.doneDefiningClass( fqClassName );
WITHOUT_CLASSIFICATION	import the unq name into parent
WITHOUT_CLASSIFICATION	classStaticNameSpace.importClass( fqClassName.replace('$','.') );
WITHOUT_CLASSIFICATION	strictJava
WITHOUT_CLASSIFICATION	evaluate the static portion of the block in the static space
WITHOUT_CLASSIFICATION	Set the static bsh This callback
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	value error shouldn't happen
WITHOUT_CLASSIFICATION	declaringNameSpace
WITHOUT_CLASSIFICATION	{{{ getFile() method
WITHOUT_CLASSIFICATION	Also cache it in the static namespace... classStaticNameSpace.cacheClass( name, genClass );
WITHOUT_CLASSIFICATION	Give the static space its class static import important to do this after all classes are defined
WITHOUT_CLASSIFICATION	look for the specially named super delegate method
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	make all buttons the same size
WITHOUT_CLASSIFICATION	cancel button goes on far left
WITHOUT_CLASSIFICATION	prev and next buttons are on the right
WITHOUT_CLASSIFICATION	calculate size for current page
WITHOUT_CLASSIFICATION	{{{ getPath() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getCachePath() method
WITHOUT_CLASSIFICATION	{{{ getZipFile() method
WITHOUT_CLASSIFICATION	{{{ getClassLoader() method
WITHOUT_CLASSIFICATION	{{{ getActions() method
WITHOUT_CLASSIFICATION	{{{ getActionSet() method
WITHOUT_CLASSIFICATION	{{{ getBrowserActionSet() method
WITHOUT_CLASSIFICATION	{{{ checkDependencies() method
WITHOUT_CLASSIFICATION	{{{ getDependentPlugins() method
WITHOUT_CLASSIFICATION	{{{ getPlugin() method
WITHOUT_CLASSIFICATION	recursive call
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	package-private members package-private, not private, for speedy access by inner classes
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	for thread safety
WITHOUT_CLASSIFICATION	{{{ activateIfNecessary() method
WITHOUT_CLASSIFICATION	4.1 plugin
WITHOUT_CLASSIFICATION	4.2 plugin
WITHOUT_CLASSIFICATION	if at least one property listed here is true, load the plugin
WITHOUT_CLASSIFICATION	{{{ deactivatePlugin() method
WITHOUT_CLASSIFICATION	see if this is a 4.1-style plugin
WITHOUT_CLASSIFICATION	{{{ getDockablesURI() method
WITHOUT_CLASSIFICATION	{{{ getServicesURI() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Static methods
WITHOUT_CLASSIFICATION	{{{ getPluginCache() method
WITHOUT_CLASSIFICATION	returns false with outdated cache
WITHOUT_CLASSIFICATION	{{{ setPluginCache() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ PluginJAR constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ uninit() method
WITHOUT_CLASSIFICATION	{{{ getClasses() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Check if a plugin with the same name is already loaded
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ actionsPresentButNotCoreClass() method
WITHOUT_CLASSIFICATION	{{{ loadCache() method
WITHOUT_CLASSIFICATION	{{{ generateCache() method
WITHOUT_CLASSIFICATION	{{{ startPlugin() method
WITHOUT_CLASSIFICATION	old plugins expected jEdit 4.1-style behavior, where a PropertiesChanged was sent after plugins were started
WITHOUT_CLASSIFICATION	buffers retain a reference to the fold handler in question... and the easiest way to handle fold handler loading is this...
WITHOUT_CLASSIFICATION	== null before loaded
WITHOUT_CLASSIFICATION	{{{ startPluginLater() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ breakPlugin() method
WITHOUT_CLASSIFICATION	but we want properties to hang around
WITHOUT_CLASSIFICATION	{{{ PluginCacheEntry class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ read() method
WITHOUT_CLASSIFICATION	read() and write() must be kept perfectly in sync... its a very simple file format. doing it this way is faster than serializing since serialization calls reflection, etc.
WITHOUT_CLASSIFICATION	{{{ readStringArray() method
WITHOUT_CLASSIFICATION	{{{ readURI() method
WITHOUT_CLASSIFICATION	{{{ write() method
WITHOUT_CLASSIFICATION	{{{ readBooleanArray() method
WITHOUT_CLASSIFICATION	{{{ readMap() method
WITHOUT_CLASSIFICATION	{{{ writeStringArray() method
WITHOUT_CLASSIFICATION	{{{ writeBooleanArray() method
WITHOUT_CLASSIFICATION	{{{ writeMap() method
WITHOUT_CLASSIFICATION	{{{ Roster constructor
WITHOUT_CLASSIFICATION	{{{ addRemove() method
WITHOUT_CLASSIFICATION	{{{ addInstall() method
WITHOUT_CLASSIFICATION	{{{ getOperation() method
WITHOUT_CLASSIFICATION	{{{ getOperationCount() method
WITHOUT_CLASSIFICATION	{{{ isEmpty() method
WITHOUT_CLASSIFICATION	{{{ performOperationsInWorkThread() method
WITHOUT_CLASSIFICATION	{{{ performOperationsInAWTThread() method
WITHOUT_CLASSIFICATION	add the JARs before checking deps since dep check might require all JARs to be present
WITHOUT_CLASSIFICATION	now activate the plugins
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Operation interface
WITHOUT_CLASSIFICATION	{{{ addOperation() method
WITHOUT_CLASSIFICATION	{{{ getDownloadDir() method
WITHOUT_CLASSIFICATION	{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	{{{ Remove constructor
WITHOUT_CLASSIFICATION	{{{ Remove class
WITHOUT_CLASSIFICATION	{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	close JAR file and all JARs that depend on this
WITHOUT_CLASSIFICATION	remove cache file
WITHOUT_CLASSIFICATION	move JAR first
WITHOUT_CLASSIFICATION	{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ Install class
WITHOUT_CLASSIFICATION	{{{ Install constructor
WITHOUT_CLASSIFICATION	catch those hooligans passing null urls
WITHOUT_CLASSIFICATION	{{{ getMaximum() method
WITHOUT_CLASSIFICATION	{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	check if download failed
WITHOUT_CLASSIFICATION	if download OK, remove existing version
WITHOUT_CLASSIFICATION	even if installDirectory is different
WITHOUT_CLASSIFICATION	{{{ download() method
WITHOUT_CLASSIFICATION	do nothing, user clicked 'Stop'
WITHOUT_CLASSIFICATION	{{{ copy() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	{{{ ShowRecentMenuItem class
WITHOUT_CLASSIFICATION	allocate the array to store the initializers description of the array The other dimensions default to zero and are assigned when the values are set.
WITHOUT_CLASSIFICATION	Evaluate the initializers
WITHOUT_CLASSIFICATION	unwrap primitive to the wrapper type
WITHOUT_CLASSIFICATION	don't deal with object types here... unless above
WITHOUT_CLASSIFICATION	store the value in the array
WITHOUT_CLASSIFICATION	I think this can happen
WITHOUT_CLASSIFICATION	Supply any defaulted attributes.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Constants.
WITHOUT_CLASSIFICATION	Constants for element content type.
WITHOUT_CLASSIFICATION	Constants for the entity type.
WITHOUT_CLASSIFICATION	Constants for attribute type.
WITHOUT_CLASSIFICATION	Constants for supported encodings.
WITHOUT_CLASSIFICATION	Constants for attribute default value.
WITHOUT_CLASSIFICATION	Read the version.
WITHOUT_CLASSIFICATION	Try reading an encoding declaration.
WITHOUT_CLASSIFICATION	Try reading a standalone declaration
WITHOUT_CLASSIFICATION	Read an optional version.
WITHOUT_CLASSIFICATION	Read the encoding.
WITHOUT_CLASSIFICATION	8-bit encodings
WITHOUT_CLASSIFICATION	16-bit encodings
WITHOUT_CLASSIFICATION	32-bit encodings
WITHOUT_CLASSIFICATION	Read the document type name.
WITHOUT_CLASSIFICATION	Read the ExternalIDs.
WITHOUT_CLASSIFICATION	Look for a declaration subset.
WITHOUT_CLASSIFICATION	loop until the subset ends
WITHOUT_CLASSIFICATION	end of subset
WITHOUT_CLASSIFICATION	Read the external subset, if any
WITHOUT_CLASSIFICATION	Loop until we end up back at '>'
WITHOUT_CLASSIFICATION	No external subset.
WITHOUT_CLASSIFICATION	Read the element type name.
WITHOUT_CLASSIFICATION	Determine the current content type.
WITHOUT_CLASSIFICATION	Read the element type name.
WITHOUT_CLASSIFICATION	Flags for parsing context.
WITHOUT_CLASSIFICATION	Major syntactic productions.
WITHOUT_CLASSIFICATION	skip all white, PIs, and comments if this doesn't throw an exception...
WITHOUT_CLASSIFICATION	Expand general entities in default values of attributes. (Do this after the doctypeDecl event!). expandAttributeDefaultValues();
WITHOUT_CLASSIFICATION	This is the (global) counter for the array of specified attributes.
WITHOUT_CLASSIFICATION	Read the attributes, if any. After this loop, we should be just in front of the closing delimiter.
WITHOUT_CLASSIFICATION	See if it was specified.
WITHOUT_CLASSIFICATION	I guess not...
WITHOUT_CLASSIFICATION	Figure out if this is a start tag or an empty element, and dispatch an event accordingly.
WITHOUT_CLASSIFICATION	Restore the previous state.
WITHOUT_CLASSIFICATION	Read the attribute name.
WITHOUT_CLASSIFICATION	Parse '='
WITHOUT_CLASSIFICATION	Handle delimiters
WITHOUT_CLASSIFICATION	Found "&"
WITHOUT_CLASSIFICATION	Found "<"
WITHOUT_CLASSIFICATION	Found "<!"
WITHOUT_CLASSIFICATION	Found "<!-"
WITHOUT_CLASSIFICATION	Found "<!["
WITHOUT_CLASSIFICATION	Found "</"
WITHOUT_CLASSIFICATION	Found "<" followed by something else
WITHOUT_CLASSIFICATION	Read the content model.
WITHOUT_CLASSIFICATION	Parse the first content particle
WITHOUT_CLASSIFICATION	Check for end or for a separator.
WITHOUT_CLASSIFICATION	Register the separator.
WITHOUT_CLASSIFICATION	Parse the rest of the content model.
WITHOUT_CLASSIFICATION	Check for the occurrence indicator.
WITHOUT_CLASSIFICATION	Check for PCDATA alone.
WITHOUT_CLASSIFICATION	Parse mixed content.
WITHOUT_CLASSIFICATION	Read the attribute type.
WITHOUT_CLASSIFICATION	Read the default value.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Note that the attribute has been specified.
WITHOUT_CLASSIFICATION	Read the first token.
WITHOUT_CLASSIFICATION	Read the remaining tokens.
WITHOUT_CLASSIFICATION	no surrogates needed
WITHOUT_CLASSIFICATION	> 16 bits, surrogate needed
WITHOUT_CLASSIFICATION	too big for surrogate
WITHOUT_CLASSIFICATION	Check for a parameter entity.
WITHOUT_CLASSIFICATION	Read the entity name, and prepend '%' if necessary.
WITHOUT_CLASSIFICATION	Read the entity value.
WITHOUT_CLASSIFICATION	Internal entity.
WITHOUT_CLASSIFICATION	Read the external IDs
WITHOUT_CLASSIFICATION	Check for NDATA declaration.
WITHOUT_CLASSIFICATION	Finish the declaration.
WITHOUT_CLASSIFICATION	Read the external identifiers.
WITHOUT_CLASSIFICATION	Register the notation.
WITHOUT_CLASSIFICATION	Start with a little cheat -- in most cases, the entire sequence of character data will already be in the readBuffer; if not, fall through to the normal approach.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	High-level reading and scanning methods.
WITHOUT_CLASSIFICATION	else fall through...
WITHOUT_CLASSIFICATION	else fall through...
WITHOUT_CLASSIFICATION	OK, do it by the book.
WITHOUT_CLASSIFICATION	Read the first character.
WITHOUT_CLASSIFICATION	Find the delimiter.
WITHOUT_CLASSIFICATION	Read the literal.
WITHOUT_CLASSIFICATION	Literals never have line ends
WITHOUT_CLASSIFICATION	References may be allowed
WITHOUT_CLASSIFICATION	check the next character
WITHOUT_CLASSIFICATION	Return the value.
WITHOUT_CLASSIFICATION	public id
WITHOUT_CLASSIFICATION	system id
WITHOUT_CLASSIFICATION	Expand buffer if necessary.
WITHOUT_CLASSIFICATION	Skip whitespace at the start.
WITHOUT_CLASSIFICATION	Skip whitespace at the end.
WITHOUT_CLASSIFICATION	Start copying to the left.
WITHOUT_CLASSIFICATION	Normalise all other whitespace to a single space.
WITHOUT_CLASSIFICATION	Generate a hash code.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	error
WITHOUT_CLASSIFICATION	Get the bucket.
WITHOUT_CLASSIFICATION	Stop when we hit a null index.
WITHOUT_CLASSIFICATION	If they're the same length, check for a match. If the loop finishes, 'index' will contain the current bucket position.
WITHOUT_CLASSIFICATION	Stop if there are no more tuples.
WITHOUT_CLASSIFICATION	That's it, we have a match!
WITHOUT_CLASSIFICATION	Not found -- we'll have to add it.
WITHOUT_CLASSIFICATION	Do we have to grow the bucket?
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	XML query routines.
WITHOUT_CLASSIFICATION	Elements
WITHOUT_CLASSIFICATION	Try looking up the element
WITHOUT_CLASSIFICATION	Make a new one if necessary.
WITHOUT_CLASSIFICATION	Insert the content model, if any.
WITHOUT_CLASSIFICATION	Insert the attributes, if any.
WITHOUT_CLASSIFICATION	Save the element info.
WITHOUT_CLASSIFICATION	Create a new hashtable if necessary.
WITHOUT_CLASSIFICATION	Check that the attribute doesn't already exist!
WITHOUT_CLASSIFICATION	Use CONTENT_UNDECLARED to avoid overwriting existing element declaration.
WITHOUT_CLASSIFICATION	Entities
WITHOUT_CLASSIFICATION	Notations.
WITHOUT_CLASSIFICATION	Location.
WITHOUT_CLASSIFICATION	As long as there's nothing in the read buffer, try reading more data (for an external entity) or popping the entity stack (for either).
WITHOUT_CLASSIFICATION	Normal condition.
WITHOUT_CLASSIFICATION	Push the existing status.
WITHOUT_CLASSIFICATION	Create a new read buffer. (Note the four-character margin)
WITHOUT_CLASSIFICATION	Flush any remaining data.
WITHOUT_CLASSIFICATION	Make the URL absolute.
WITHOUT_CLASSIFICATION	See if the application wants to redirect the system ID and/or supply its own character stream.
WITHOUT_CLASSIFICATION	Start the entity.
WITHOUT_CLASSIFICATION	Figure out what we're reading from.
WITHOUT_CLASSIFICATION	There's an explicit character stream.
WITHOUT_CLASSIFICATION	We have to open our own stream to the URL.
WITHOUT_CLASSIFICATION	Set the new status
WITHOUT_CLASSIFICATION	If we get to here, there must be an InputStream available.
WITHOUT_CLASSIFICATION	Attempt to detect the encoding.
WITHOUT_CLASSIFICATION	Read an XML or text declaration.
WITHOUT_CLASSIFICATION	Read the XML/Encoding declaration.
WITHOUT_CLASSIFICATION	Read the first four bytes for autodetection.
WITHOUT_CLASSIFICATION	Look for a known signature.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x00 0x00 0x3c 0x00: UCS-4, unusual (2143)
WITHOUT_CLASSIFICATION	UCS-2 with a byte-order marker. 0xfe 0xff: UCS-2, big-endian (12)
WITHOUT_CLASSIFICATION	UCS-2 without a BOM must begin with "<?XML" 0x00 0x3c 0x00 0x3f: UCS-2, big-endian, no byte-order mark
WITHOUT_CLASSIFICATION	UCS-2 without a BOM must begin with "<?XML" 0x3c 0x00 0x3f 0x00: UCS-2, little-endian, no byte-order mark
WITHOUT_CLASSIFICATION	Some kind of 8-bit encoding with "<?XML" 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)
WITHOUT_CLASSIFICATION	Push the existing status
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Don't bother if there is no input.
WITHOUT_CLASSIFICATION	Push it onto the stack.
WITHOUT_CLASSIFICATION	Throw an EOFException if there is nothing else to pop.
WITHOUT_CLASSIFICATION	Read the character
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	See if we have any overflow.
WITHOUT_CLASSIFICATION	Special situation -- we're taking input from a character stream.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Filter out all carriage returns if we've seen any.
WITHOUT_CLASSIFICATION	Reset the position.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx (uuuuu = wwww + 1)
WITHOUT_CLASSIFICATION	Otherwise, the 8th bit may not be set in UTF-8
WITHOUT_CLASSIFICATION	How many characters have we read?
WITHOUT_CLASSIFICATION	Take a character from the buffer or from the actual input stream.
WITHOUT_CLASSIFICATION	Check for the correct bits at the start.
WITHOUT_CLASSIFICATION	Return the significant bits.
WITHOUT_CLASSIFICATION	No errors; first line
WITHOUT_CLASSIFICATION	Set up the buffers for data and names
WITHOUT_CLASSIFICATION	Set up the DTD hash tables
WITHOUT_CLASSIFICATION	Set up the variables for the current element context.
WITHOUT_CLASSIFICATION	Set up the input variables
WITHOUT_CLASSIFICATION	The current XML handler interface.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Hashtables for DTD information on elements, entities, and notations.
WITHOUT_CLASSIFICATION	Element type currently in force.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Base external identifiers for resolution.
WITHOUT_CLASSIFICATION	Stack of entity names, to help detect recursion.
WITHOUT_CLASSIFICATION	Are we in a context where PEs are allowed?
WITHOUT_CLASSIFICATION	Symbol table, for internalising names.
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	app.setServicesProvider(delegate);
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	Utility flag: have we noticed a CR while reading the last data chunk? If so, we will have to go back and normalise CR/LF.
WITHOUT_CLASSIFICATION	Set type/creator codes for files
WITHOUT_CLASSIFICATION	{{{ osok() method
WITHOUT_CLASSIFICATION	According to Slava this is better
WITHOUT_CLASSIFICATION	{{{ showInFinder() method
WITHOUT_CLASSIFICATION	{{{ runScript() method
WITHOUT_CLASSIFICATION	{{{ ScriptRunner class
WITHOUT_CLASSIFICATION	{{{ openSelection() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	Remember to make this an option later NSApplication.sharedApplication().hide(jEdit.getPlugin("MacOSPlugin"));
WITHOUT_CLASSIFICATION	SwingUtilities.invokeLater(new ScriptRunner(path)); }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ getSettings() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ Handlers
WITHOUT_CLASSIFICATION	{{{ handleAbout() method
WITHOUT_CLASSIFICATION	{{{ handleFileCodes() method
WITHOUT_CLASSIFICATION	Set type/creator on save
WITHOUT_CLASSIFICATION	Fail silently, since we may be using UFS
WITHOUT_CLASSIFICATION	Add type/creator to local buffer property list on open
WITHOUT_CLASSIFICATION	This will happen when a new file is created
WITHOUT_CLASSIFICATION	{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ handlePreferences() method
WITHOUT_CLASSIFICATION	{{{ handleQuit() method
WITHOUT_CLASSIFICATION	{{{ Delegate methods
WITHOUT_CLASSIFICATION	{{{ applicationDockMenu() method
WITHOUT_CLASSIFICATION	notify clients with -wait
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Buffers
WITHOUT_CLASSIFICATION	Recent Buffers
WITHOUT_CLASSIFICATION	Recent Directories
WITHOUT_CLASSIFICATION	Macros
WITHOUT_CLASSIFICATION	{{{ applicationOpenFiles() method
WITHOUT_CLASSIFICATION	{{{ applicationShouldTerminate() method
WITHOUT_CLASSIFICATION	{{{ Services
WITHOUT_CLASSIFICATION	{{{ openFile() method
WITHOUT_CLASSIFICATION	{{{ insertSelection() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ Dock Menu
WITHOUT_CLASSIFICATION	{{{ BufferMenu class
WITHOUT_CLASSIFICATION	item.setImage(NSWorkspace.sharedWorkspace().iconForFile( buffs[i].getPath()));
WITHOUT_CLASSIFICATION	{{{ MacrosMenu class
WITHOUT_CLASSIFICATION	{{{ RecentMenu class
WITHOUT_CLASSIFICATION	{{{ RecentDirMenu class
WITHOUT_CLASSIFICATION	{{{ MacroAction class
WITHOUT_CLASSIFICATION	{{{ NewViewAction class
WITHOUT_CLASSIFICATION	{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ construct() method
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	{{{ ShowRecentDirMenuItem class
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	{{{ ShowBufferMenuItem class
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ ShowDirAction class
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ accept() method
WITHOUT_CLASSIFICATION	{{{ createMacro() method
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runMacro() method
WITHOUT_CLASSIFICATION	{{{ Handler constructor
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	End BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	should normally be
WITHOUT_CLASSIFICATION	Do the for init
WITHOUT_CLASSIFICATION	do not invoke special override for block... (see above)
WITHOUT_CLASSIFICATION	put it back
WITHOUT_CLASSIFICATION	default impl
WITHOUT_CLASSIFICATION	{{{ stringToSelection() method
WITHOUT_CLASSIFICATION	declaringNameSpace
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Begin Method components
WITHOUT_CLASSIFICATION	Arguments
WITHOUT_CLASSIFICATION	Scripted method body
WITHOUT_CLASSIFICATION	Java Method
WITHOUT_CLASSIFICATION	End method components
WITHOUT_CLASSIFICATION	paramNames
WITHOUT_CLASSIFICATION	method.block
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	Note: bshmethod needs to re-evaluate arg types hereThis is broken.
WITHOUT_CLASSIFICATION	Note: bshmethod needs to re-evaluate the method return type here.This is broken.
WITHOUT_CLASSIFICATION	isNative
WITHOUT_CLASSIFICATION	is this a syncrhonized method?
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	Cardinality (number of args) mismatch
WITHOUT_CLASSIFICATION	Make the local namespace for the method invocation
WITHOUT_CLASSIFICATION	set the method parameters in the local namespace
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Set typed variable
WITHOUT_CLASSIFICATION	getAssignable would catch this for typed param
WITHOUT_CLASSIFICATION	Push the new namespace on the call stack
WITHOUT_CLASSIFICATION	save the callstack including the called method, just for error mess
WITHOUT_CLASSIFICATION	Get back to caller namespace
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	return type is a class
WITHOUT_CLASSIFICATION	Point to return statement point if we had one. (else it was implicit return? What's the case here?)
WITHOUT_CLASSIFICATION	The token.image text of the name... never changes.
WITHOUT_CLASSIFICATION	null value means no value
WITHOUT_CLASSIFICATION	check for easy mistake
WITHOUT_CLASSIFICATION	Need to scrape a value from the last line?
WITHOUT_CLASSIFICATION	I/O error
WITHOUT_CLASSIFICATION	read results...
WITHOUT_CLASSIFICATION	bad postURL
WITHOUT_CLASSIFICATION	?
WITHOUT_CLASSIFICATION	first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	Ease debugging... XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	If equals() is not explicitly defined we must override the default implemented by the This object protocol for scriptedobject. To support XThis equals() must test for equality with the generated proxy object, not the scripted bsh This object;otherwise callers from outside in Java will not see a the proxy object as equal to itself.
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	return cached type if available
WITHOUT_CLASSIFICATION	Ordinals for various reasons why an Error of this type can be thrown.
WITHOUT_CLASSIFICATION	put it back
WITHOUT_CLASSIFICATION	return cached type if available
WITHOUT_CLASSIFICATION	first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	finaly block
WITHOUT_CLASSIFICATION	Constructors of various flavors follow.
WITHOUT_CLASSIFICATION	unwrap the target error
WITHOUT_CLASSIFICATION	If the param is typed check assignability
WITHOUT_CLASSIFICATION	Get catch block
WITHOUT_CLASSIFICATION	If we have an exception, find a catch
WITHOUT_CLASSIFICATION	Found match, execute catch block
WITHOUT_CLASSIFICATION	set a typed variable (directly in the block)
WITHOUT_CLASSIFICATION	set an untyped variable directly in the block
WITHOUT_CLASSIFICATION	put cbNameSpace on the top of the stack
WITHOUT_CLASSIFICATION	handled target
WITHOUT_CLASSIFICATION	evaluate finally block
WITHOUT_CLASSIFICATION	exception fell through, throw it upward...
WITHOUT_CLASSIFICATION	Note: no way to mutate the Throwable message, must maintain our own
WITHOUT_CLASSIFICATION	freeze the callstack for the stack trace.
WITHOUT_CLASSIFICATION	Users should not normally see this.
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	type
WITHOUT_CLASSIFICATION	check this.value
WITHOUT_CLASSIFICATION	strictjava
WITHOUT_CLASSIFICATION	See notes in getThis()
WITHOUT_CLASSIFICATION	Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Prepare to execute the block. We must create a new BlockNameSpace to hold the catch parameter and swap it on the stack after initializing it.
WITHOUT_CLASSIFICATION	Begin instance data Note: if we add something here we should reset it in the clear() method.
WITHOUT_CLASSIFICATION	|| ( getParent()!=null && getParent().classStatic != null )
WITHOUT_CLASSIFICATION	End instance data
WITHOUT_CLASSIFICATION	Begin constructors
WITHOUT_CLASSIFICATION	Note: in this case parent must have a class manager.
WITHOUT_CLASSIFICATION	Register for notification of classloader change
WITHOUT_CLASSIFICATION	End constructors
WITHOUT_CLASSIFICATION	if localscoping switch follow strictJava, else recurse
WITHOUT_CLASSIFICATION	recurse
WITHOUT_CLASSIFICATION	primitives should have been wrapped
WITHOUT_CLASSIFICATION	Locate the variable definition if it exists.
WITHOUT_CLASSIFICATION	Found an existing variable here (or above if recurse allowed)
WITHOUT_CLASSIFICATION	No previous variable definition found here (or above if recurse)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	nameSpaceChanged() on new variable addition
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	recurse
WITHOUT_CLASSIFICATION	If we are disconnected from root we need to handle the def imports
WITHOUT_CLASSIFICATION	interp
WITHOUT_CLASSIFICATION	interp
WITHOUT_CLASSIFICATION	Interpreter.debug("No class manager namespace:" +this);
WITHOUT_CLASSIFICATION	try parent
WITHOUT_CLASSIFICATION	Change import precedence if we are a class body/instance
WITHOUT_CLASSIFICATION	Change import precedence if we are a class body/instance Get imported first.
WITHOUT_CLASSIFICATION	checkVariableModifiers( name, modifiers );
WITHOUT_CLASSIFICATION	Get variables declared in this namespace.
WITHOUT_CLASSIFICATION	Setting a typed variable is always a local operation.
WITHOUT_CLASSIFICATION	does the variable already exist?
WITHOUT_CLASSIFICATION	Is it typed?
WITHOUT_CLASSIFICATION	else set it and return
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	checkMethodModifiers( method );
WITHOUT_CLASSIFICATION	Vector
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	Change import precedence if we are a class body/instance Get import first.
WITHOUT_CLASSIFICATION	m contains either BshMethod or Vector of BshMethod
WITHOUT_CLASSIFICATION	unwrap
WITHOUT_CLASSIFICATION	Apply most specific signature matching
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Try object imports
WITHOUT_CLASSIFICATION	Try static imports
WITHOUT_CLASSIFICATION	object
WITHOUT_CLASSIFICATION	Here we catch any EvalError from the interpreter because we areusing it as a tool to load the command, not as part of theexecution path.
WITHOUT_CLASSIFICATION	Look for the loaded command
WITHOUT_CLASSIFICATION	cacheCount++; debug
WITHOUT_CLASSIFICATION	Check the cache
WITHOUT_CLASSIFICATION	Unqualified (simple, non-compound) name
WITHOUT_CLASSIFICATION	Unqualified name check imported
WITHOUT_CLASSIFICATION	Try imported class
WITHOUT_CLASSIFICATION	if found as imported also cache it
WITHOUT_CLASSIFICATION	Not found
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Try absolute
WITHOUT_CLASSIFICATION	Cache unqualified names to prevent import check again
WITHOUT_CLASSIFICATION	Try explicitly imported class, e.g. import foo.Bar;
WITHOUT_CLASSIFICATION	Found the full name in imported classes.
WITHOUT_CLASSIFICATION	Try to make the full imported name
WITHOUT_CLASSIFICATION	Handle imported inner class case
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	If found cache the full name in the BshClassManager
WITHOUT_CLASSIFICATION	Try imported packages, e.g. "import foo.bar.;"in reverse order of import...(give later imports precedence...)
WITHOUT_CLASSIFICATION	Try super import if availableNote: we do this last to allow explicitly imported classesand packages to take priority. This method will also throw anerror indicating ambiguity if it exists...
WITHOUT_CLASSIFICATION	For serialization.Don't serialize non-serializable objects.
WITHOUT_CLASSIFICATION	arbitrary flag
WITHOUT_CLASSIFICATION	volatile, transient
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	--- Begin static members ---
WITHOUT_CLASSIFICATION	--- End static members ---
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	End constructors
WITHOUT_CLASSIFICATION	--- End instance data ---
WITHOUT_CLASSIFICATION	Create the root "bsh" system object if it doesn't exist.
WITHOUT_CLASSIFICATION	onlyStatic
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	bsh
WITHOUT_CLASSIFICATION	bsh.system
WITHOUT_CLASSIFICATION	alias
WITHOUT_CLASSIFICATION	bsh.help
WITHOUT_CLASSIFICATION	bsh.cwd
WITHOUT_CLASSIFICATION	applets can't see sys props
WITHOUT_CLASSIFICATION	bsh.interactive
WITHOUT_CLASSIFICATION	BshClassManager
WITHOUT_CLASSIFICATION	init the callstack.
WITHOUT_CLASSIFICATION	try to sync up the console
WITHOUT_CLASSIFICATION	this helps a little
WITHOUT_CLASSIFICATION	sanity check during development
WITHOUT_CLASSIFICATION	reinit the callstack
WITHOUT_CLASSIFICATION	begin source and eval
WITHOUT_CLASSIFICATION	, CallStack callstack
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	nodes remember from where they were sourced
WITHOUT_CLASSIFICATION	non-interactive, return control now
WITHOUT_CLASSIFICATION	show extra "expecting..." info
WITHOUT_CLASSIFICATION	add the source file info and throw again
WITHOUT_CLASSIFICATION	failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	end source and eval
WITHOUT_CLASSIFICATION	End ConsoleInterface
WITHOUT_CLASSIFICATION	map null to Primtive.NULL coming in...
WITHOUT_CLASSIFICATION	optimization for common case
WITHOUT_CLASSIFICATION	We jump through some hoops here to handle arbitrary cases likeunset("bsh.foo");
WITHOUT_CLASSIFICATION	lhs.assign( null, false );
WITHOUT_CLASSIFICATION	end primary set and get methods
WITHOUT_CLASSIFICATION	Methods for interacting with Parser
WITHOUT_CLASSIFICATION	Default is c:\windows under win98, $HOME under Unix
WITHOUT_CLASSIFICATION	squeltch security exception, filenotfoundexception
WITHOUT_CLASSIFICATION	if relative, fix up to bsh.cwd
WITHOUT_CLASSIFICATION	set transient fields
WITHOUT_CLASSIFICATION	ug
WITHOUT_CLASSIFICATION	evaluate the expression
WITHOUT_CLASSIFICATION	Order of body and condition is swapped for do / while
WITHOUT_CLASSIFICATION	has body, else just for side effects
WITHOUT_CLASSIFICATION	no body?
WITHOUT_CLASSIFICATION	initCallStack( namespace );
WITHOUT_CLASSIFICATION	null callstack, one will be created for us
WITHOUT_CLASSIFICATION	declaringInterpreter
WITHOUT_CLASSIFICATION	Find the bsh method
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	a default equals() testing for equality with the This reference
WITHOUT_CLASSIFICATION	Call script "invoke( String methodName, Object [] args );
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ RecentHandler class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	These do not change during evaluation
WITHOUT_CLASSIFICATION	For evaluation
WITHOUT_CLASSIFICATION	number of times eval hit 'this.caller'
WITHOUT_CLASSIFICATION	End mutable instance variables. ---------------------------------------------------------
WITHOUT_CLASSIFICATION	{{{ updateTitle() method
WITHOUT_CLASSIFICATION	Begin Cached result structures These are optimizations
WITHOUT_CLASSIFICATION	End Cached result structures
WITHOUT_CLASSIFICATION	autoalloc
WITHOUT_CLASSIFICATION	switch namespace and special var visibility
WITHOUT_CLASSIFICATION	Resolved the variable
WITHOUT_CLASSIFICATION	Keep adding parts until we have a class
WITHOUT_CLASSIFICATION	not a class (or variable per above)
WITHOUT_CLASSIFICATION	If we didn't find a class or variable name (or prefix) abovethere are two possibilities:- If we are a simple name then we can pass as a void variable reference.- If we are compound then we must fail at this point.
WITHOUT_CLASSIFICATION	--------------------------------------------------------After this point we're definitely evaluating relative toa base object.--------------------------------------------------------
WITHOUT_CLASSIFICATION	Do some basic validity checks.
WITHOUT_CLASSIFICATION	previous round produced null
WITHOUT_CLASSIFICATION	previous round produced void
WITHOUT_CLASSIFICATION	Class qualified 'this' reference from inner class. e.g. 'MyOuterClass.this'
WITHOUT_CLASSIFICATION	find the enclosing class instance space of the class name
WITHOUT_CLASSIFICATION	&& thisNameSpace.getParent().classInstance != null
WITHOUT_CLASSIFICATION	static field?
WITHOUT_CLASSIFICATION	inner class?
WITHOUT_CLASSIFICATION	Some kind of field access?
WITHOUT_CLASSIFICATION	length access on array?
WITHOUT_CLASSIFICATION	not a field
WITHOUT_CLASSIFICATION	if we get here we have failed
WITHOUT_CLASSIFICATION	Some duplication for "super". See notes for "this" aboveIf we're in an enclsing class instance and have a superclassinstance our super is the superclass instance.
WITHOUT_CLASSIFICATION	Allow getSuper() to through BlockNameSpace to the method's super
WITHOUT_CLASSIFICATION	super is now the closure's super or class instance
WITHOUT_CLASSIFICATION	get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	early return
WITHOUT_CLASSIFICATION	"var" means untyped, return null class
WITHOUT_CLASSIFICATION	Try straightforward class name first
WITHOUT_CLASSIFICATION	Try toObject() which knows how to work through inner classesand see what we end up with
WITHOUT_CLASSIFICATION	Null interpreter and callstack references. class only resolution should not require them.
WITHOUT_CLASSIFICATION	couldn't resolve it
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Simple (non-compound) variable assignment e.g. x=5;
WITHOUT_CLASSIFICATION	Interpreter.debug("Simple var LHS...");
WITHOUT_CLASSIFICATION	Field e.g. foo.bar=5;
WITHOUT_CLASSIFICATION	autoallocthis
WITHOUT_CLASSIFICATION	found a non-backslash char.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	Finished eval and its a class.
WITHOUT_CLASSIFICATION	e.g. this.x=5; or someThisType.x=5;
WITHOUT_CLASSIFICATION	dissallow assignment to magic fields
WITHOUT_CLASSIFICATION	Superclass method invocation? (e.g. super.foo())
WITHOUT_CLASSIFICATION	Find target object or class identifier
WITHOUT_CLASSIFICATION	if we've got an object, resolve the method
WITHOUT_CLASSIFICATION	It's a class
WITHOUT_CLASSIFICATION	try static method
WITHOUT_CLASSIFICATION	cache the fact that this is a static method invocation on this class
WITHOUT_CLASSIFICATION	return null; ???
WITHOUT_CLASSIFICATION	, ReflectError, InvocationTargetException
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	If defined, invoke it
WITHOUT_CLASSIFICATION	Look for a BeanShell command
WITHOUT_CLASSIFICATION	should try to print usage here if nothing found
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	end compound name routines
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	checkonly
WITHOUT_CLASSIFICATION	fromValue
WITHOUT_CLASSIFICATION	checkOnly
WITHOUT_CLASSIFICATION	This should not happen with checkOnly true
WITHOUT_CLASSIFICATION	assignment to loose type, void type, or exactly same type
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	must be null in checkOnly
WITHOUT_CLASSIFICATION	Cannot cast from arbitrary object to primitive
WITHOUT_CLASSIFICATION	Casting to reference type
WITHOUT_CLASSIFICATION	primitive to wrapper type
WITHOUT_CLASSIFICATION	Primitive (not null or void) to Object.class type
WITHOUT_CLASSIFICATION	box it
WITHOUT_CLASSIFICATION	If type already assignable no cast necessary We do this last to allow various errors above to be caught. e.g cast Primitive.Void to Object would pass this
WITHOUT_CLASSIFICATION	Currently unused, but we'll probably need it later.
WITHOUT_CLASSIFICATION	Note: it may see like with the new 1.3 scoping this test could beremoved, but it cannot. When recurse is false we still need to set thevariable in our parent, not here.
WITHOUT_CLASSIFICATION	set the var here in the block namespace
WITHOUT_CLASSIFICATION	set the var in the enclosing (parent) namespace
WITHOUT_CLASSIFICATION	strict?
WITHOUT_CLASSIFICATION	super.variables.containsKey( name ) not any faster, I checked
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	ClassPathException is a type of UtilEvalError
WITHOUT_CLASSIFICATION	The interpretation of an ambiguous name is context sensitive.We disallow a generic eval( ).
WITHOUT_CLASSIFICATION	Should never come here
WITHOUT_CLASSIFICATION	Read all the backslashes
WITHOUT_CLASSIFICATION	Both numeric wrapper types? Try numeric style promotion wrapper cast
WITHOUT_CLASSIFICATION	Begin methods which simply delegate to our parent (enclosing scope)
WITHOUT_CLASSIFICATION	Here, we have seen an odd number of backslash's followed by a 'u'
WITHOUT_CLASSIFICATION	assign doesn't need the pre-value
WITHOUT_CLASSIFICATION	{{{ getSplitConfig() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	evaluate each child
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Determines whether the current node was actually closed and pushed. This should only be called in the final user action of a node scope.
WITHOUT_CLASSIFICATION	Call this to reinitialize the node stack. It is called automatically by the parser's ReInit() method.
WITHOUT_CLASSIFICATION	Returns the root node of the AST. It only makes sense to call this after a successful parse.
WITHOUT_CLASSIFICATION	Pushes a node on to the stack.
WITHOUT_CLASSIFICATION	Returns the node on the top of the stack, and remove it from the stack.
WITHOUT_CLASSIFICATION	Returns the node currently on the top of the stack.
WITHOUT_CLASSIFICATION	Returns the number of children on the stack in the current node scope.
WITHOUT_CLASSIFICATION	A conditional node is constructed if its condition is true. All the nodes that have been pushed since the node was opened are made children of the the conditional node, which is then pushed on to the stack. If the condition is false the node is not constructed and they are left on the stack.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	try scripted class
WITHOUT_CLASSIFICATION	end HandlerBase implementation
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	classloader wants no leading slash
WITHOUT_CLASSIFICATION	classloader wants no leading slash
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	offset
WITHOUT_CLASSIFICATION	len
WITHOUT_CLASSIFICATION	may have been axed previously
WITHOUT_CLASSIFICATION	no args method
WITHOUT_CLASSIFICATION	Note: this class is final because we may test == Primitive.class in places.If we need to change that search for those tests.
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	special primitive types
WITHOUT_CLASSIFICATION	keep track of the original types
WITHOUT_CLASSIFICATION	Unwrap primitives
WITHOUT_CLASSIFICATION	returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	bitwise
WITHOUT_CLASSIFICATION	bitwise
WITHOUT_CLASSIFICATION	returns Object covering both Integer and Boolean return types
WITHOUT_CLASSIFICATION	returns Object covering both Double and Boolean return types
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	can't shift floating-point values
WITHOUT_CLASSIFICATION	can't shift floats
WITHOUT_CLASSIFICATION	++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	Promote character to Number type for these purposes
WITHOUT_CLASSIFICATION	arbitrary
WITHOUT_CLASSIFICATION	map voids to nulls for the outside world
WITHOUT_CLASSIFICATION	fromValue
WITHOUT_CLASSIFICATION	checkOnly
WITHOUT_CLASSIFICATION	Lots of preconditions checked here...Once things are running smoothly we might comment these out(That's what assertions are for).
WITHOUT_CLASSIFICATION	unwrap primitives
WITHOUT_CLASSIFICATION	non boolean primitive, get appropriate flavor of zero
WITHOUT_CLASSIFICATION	fromType
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	unwrap, etc.
WITHOUT_CLASSIFICATION	Trying to cast null to primitive type?
WITHOUT_CLASSIFICATION	can only cast boolean to boolean
WITHOUT_CLASSIFICATION	Do numeric cast
WITHOUT_CLASSIFICATION	first promote char to Number type to avoid duplicating code
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	End BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	End BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	End BeanShell Modification - super constructor args
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	End BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	End BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	End BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	End BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	copied from generated getMessage()
WITHOUT_CLASSIFICATION	End BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	skip CR
WITHOUT_CLASSIFICATION	Test it
WITHOUT_CLASSIFICATION	for inner classes
WITHOUT_CLASSIFICATION	Force the class public for now...
WITHOUT_CLASSIFICATION	Generate the bsh instance 'This' reference holder field
WITHOUT_CLASSIFICATION	Generate the static bsh static reference holder field
WITHOUT_CLASSIFICATION	Generate the fields
WITHOUT_CLASSIFICATION	Generate the constructors
WITHOUT_CLASSIFICATION	Don't generate private constructors
WITHOUT_CLASSIFICATION	If no other constructors, generate a default constructor
WITHOUT_CLASSIFICATION	index
WITHOUT_CLASSIFICATION	Generate the delegate methods
WITHOUT_CLASSIFICATION	Don't generate private or loosely return typed methods
WITHOUT_CLASSIFICATION	|| returnType == null
WITHOUT_CLASSIFICATION	map loose return type to Object
WITHOUT_CLASSIFICATION	Generate method body
WITHOUT_CLASSIFICATION	The split config is recorded in a simple RPN "language".
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Get the instance field
WITHOUT_CLASSIFICATION	Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	Push the boolean constant 'true' (for declaredOnly)
WITHOUT_CLASSIFICATION	{{{ restoreSplitConfig() method
WITHOUT_CLASSIFICATION	Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	Invoke the method This.invokeMethod( name, Class [] sig, boolean )
WITHOUT_CLASSIFICATION	Generate code to unwrap bsh Primitive types
WITHOUT_CLASSIFICATION	Generate code to return the value
WITHOUT_CLASSIFICATION	Create this constructor method
WITHOUT_CLASSIFICATION	isStatic
WITHOUT_CLASSIFICATION	Generate the code implementing the alternate constructor switch
WITHOUT_CLASSIFICATION	Generate code to invoke the ClassGeneratorUtil initInstance() method
WITHOUT_CLASSIFICATION	push 'this'
WITHOUT_CLASSIFICATION	Push the class/constructor name as a constant
WITHOUT_CLASSIFICATION	Push arguments as an object array
WITHOUT_CLASSIFICATION	invoke the initInstance() method
WITHOUT_CLASSIFICATION	push super class name use superClassName var?
WITHOUT_CLASSIFICATION	push class static This object
WITHOUT_CLASSIFICATION	push args
WITHOUT_CLASSIFICATION	push this constructor index number onto stack
WITHOUT_CLASSIFICATION	invoke the ClassGeneratorUtil getConstructorsArgs() method
WITHOUT_CLASSIFICATION	store ConstructorArgs in consArgsVar
WITHOUT_CLASSIFICATION	{{{ toggleLineSeparator() method
WITHOUT_CLASSIFICATION	Get the ConstructorArgs selector field from ConstructorArgs
WITHOUT_CLASSIFICATION	push ConstructorArgs
WITHOUT_CLASSIFICATION	start switch
WITHOUT_CLASSIFICATION	max
WITHOUT_CLASSIFICATION	min
WITHOUT_CLASSIFICATION	generate switch body
WITHOUT_CLASSIFICATION	default branch always invokes no args super push 'this'
WITHOUT_CLASSIFICATION	done with switch
WITHOUT_CLASSIFICATION	cv.visitLineNumber( index, labels[index] ); push this before args
WITHOUT_CLASSIFICATION	Unload the arguments from the ConstructorArgs object
WITHOUT_CLASSIFICATION	invoke the iterator method on the ConstructorArgs push the ConstructorArgs
WITHOUT_CLASSIFICATION	if it's an object type we must do a check cast
WITHOUT_CLASSIFICATION	invoke the constructor for this branch
WITHOUT_CLASSIFICATION	Maybe combine this with generateMethod()
WITHOUT_CLASSIFICATION	map loose return to Object
WITHOUT_CLASSIFICATION	Add method body
WITHOUT_CLASSIFICATION	Push vars
WITHOUT_CLASSIFICATION	long
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	use default super constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	use default super constructor
WITHOUT_CLASSIFICATION	Make a tmp namespace to hold the original constructor args for use in eval of the parameters node
WITHOUT_CLASSIFICATION	evaluate the args
WITHOUT_CLASSIFICATION	find the matching super() constructor for the args
WITHOUT_CLASSIFICATION	find the matching this() constructor for the args
WITHOUT_CLASSIFICATION	Are we choosing ourselves recursively through a this() reference?
WITHOUT_CLASSIFICATION	Get the static This reference from the proto-instance
WITHOUT_CLASSIFICATION	Get the instance initializer block from the static This
WITHOUT_CLASSIFICATION	override
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Create the instance namespace
WITHOUT_CLASSIFICATION	Set the instance This reference on the instance
WITHOUT_CLASSIFICATION	Give the instance space its object import
WITHOUT_CLASSIFICATION	invoke the constructor method from the instanceThis
WITHOUT_CLASSIFICATION	Find the constructor (now in the instance namespace)
WITHOUT_CLASSIFICATION	if args, we must have constructor
WITHOUT_CLASSIFICATION	Evaluate the constructor
WITHOUT_CLASSIFICATION	overrideNameSpace
WITHOUT_CLASSIFICATION	callerInfo
WITHOUT_CLASSIFICATION	unwrap Primitive.Null to null
WITHOUT_CLASSIFICATION	right?
WITHOUT_CLASSIFICATION	unsafe caching of type here
WITHOUT_CLASSIFICATION	Begin Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	index of the first throws clause child node
WITHOUT_CLASSIFICATION	End Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	there is always a paramsNode
WITHOUT_CLASSIFICATION	skip throws
WITHOUT_CLASSIFICATION	skip throws
WITHOUT_CLASSIFICATION	Unsafe caching of type here. null (none), Void.TYPE, or a Class
WITHOUT_CLASSIFICATION	Install an instance of this method in the namespace. See notes in BshMethod
WITHOUT_CLASSIFICATION	validate that the throws names are class names
WITHOUT_CLASSIFICATION	if strictJava mode, check for loose parameters and return type
WITHOUT_CLASSIFICATION	do nothing - ch already contains correct character
WITHOUT_CLASSIFICATION	get next character
WITHOUT_CLASSIFICATION	get next character
WITHOUT_CLASSIFICATION	check the next two characters
WITHOUT_CLASSIFICATION	type is either a class name or a primitive type
WITHOUT_CLASSIFICATION	args is either constructor arguments or array dimensions
WITHOUT_CLASSIFICATION	Look for scripted class object
WITHOUT_CLASSIFICATION	force class
WITHOUT_CLASSIFICATION	Try regular class
WITHOUT_CLASSIFICATION	force class
WITHOUT_CLASSIFICATION	Is an inner class style object allocation
WITHOUT_CLASSIFICATION	No need to wrap this debug
WITHOUT_CLASSIFICATION	Is it an inner class?
WITHOUT_CLASSIFICATION	work through to class 'this'
WITHOUT_CLASSIFICATION	interfaces
WITHOUT_CLASSIFICATION	superClass
WITHOUT_CLASSIFICATION	isInterface
WITHOUT_CLASSIFICATION	statical import fields from the interface so that code inside can refer to the fields directly (e.g. HEIGHT)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	all printable ASCII characters
WITHOUT_CLASSIFICATION	SwingUtilities.updateComponentTreeUI(getRootPane()); }}}
WITHOUT_CLASSIFICATION	{{{ loadToolBars() method
WITHOUT_CLASSIFICATION	{{{ createEditPane() method
WITHOUT_CLASSIFICATION	{{{ setEditPane() method
WITHOUT_CLASSIFICATION	repaint the gutter so that the border color reflects the focus state
WITHOUT_CLASSIFICATION	{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	zeros
WITHOUT_CLASSIFICATION	First node is the expression on which to sync
WITHOUT_CLASSIFICATION	Do the actual synchronization
WITHOUT_CLASSIFICATION	filter
WITHOUT_CLASSIFICATION	Evaluate block in two passes: First do class declarations then do everything else.
WITHOUT_CLASSIFICATION	filter nodes
WITHOUT_CLASSIFICATION	statement or embedded block evaluated a return statement
WITHOUT_CLASSIFICATION	make sure we put the namespace back when we leave.
WITHOUT_CLASSIFICATION	Our children are a prefix expression and any number of suffixes.<p>We don't eval() any nodes until the suffixes have had anopportunity to work through them. This lets the suffixes decidehow to interpret an ambiguous name (e.g. for the .class operation).
WITHOUT_CLASSIFICATION	If the result is a Node eval() it to an object or LHS(as determined by toLHS)
WITHOUT_CLASSIFICATION	Some arbitrary kind of node
WITHOUT_CLASSIFICATION	return LHS or value object as determined by toLHS
WITHOUT_CLASSIFICATION	Type node is passed down the chain for array initializers which need it under some circumstances
WITHOUT_CLASSIFICATION	import the package we're in by default...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	field access
WITHOUT_CLASSIFICATION	Field access, .length on array, or a method invocationMust handle toLHS case for each.
WITHOUT_CLASSIFICATION	.length on array
WITHOUT_CLASSIFICATION	Property style access to Hashtable or Map
WITHOUT_CLASSIFICATION	++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	Method invocation (LHS or non LHS evaluation can both encounter method calls)
WITHOUT_CLASSIFICATION	key
WITHOUT_CLASSIFICATION	public SimpleNode getParent() { return (SimpleNode)parent; }
WITHOUT_CLASSIFICATION	Override this method if you want to customize how the node dumpsout its children.
WITHOUT_CLASSIFICATION	---- BeanShell specific stuff hereafter ----
WITHOUT_CLASSIFICATION	If this is a unary increment of decrement (either pre or postfix) then we need an LHS to which to assign the result. Otherwise just do the unary operation for the value.
WITHOUT_CLASSIFICATION	resolve superclass if any
WITHOUT_CLASSIFICATION	Get interfaces
WITHOUT_CLASSIFICATION	Get the class body BSHBlock
WITHOUT_CLASSIFICATION	type = VARIABLE;this.varName = varName;this.nameSpace = nameSpace;
WITHOUT_CLASSIFICATION	Set the variable in namespace according to localVar flag
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	pass along target error
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	General case - performe the instanceof based on assignability
WITHOUT_CLASSIFICATION	Look ahead and short circuit evaluation of the rhs if:we're a boolean AND and the lhs is false.
WITHOUT_CLASSIFICATION	Look ahead and short circuit evaluation of the rhs if:we're a boolean AND and the lhs is false.
WITHOUT_CLASSIFICATION	end stuff that was tacked on for boolean short-circuiting.
WITHOUT_CLASSIFICATION	Are both the lhs and rhs either wrappers or primitive values?do binary op
WITHOUT_CLASSIFICATION	Special case for EQ on two wrapper objects
WITHOUT_CLASSIFICATION	Don't auto-unwrap wrappers (preserve identity semantics)FALL THROUGH TO OBJECT OPERATIONS BELOW.
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	lazy instantiation
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	fix for the bug where key events in JTextComponents inside views are also handled by the input handler
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ WindowHandler class
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ handleEditPaneUpdate() method
WITHOUT_CLASSIFICATION	{{{ updateGutterBorders() method
WITHOUT_CLASSIFICATION	{{{ _preprocessKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ CaretHandler class
WITHOUT_CLASSIFICATION	{{{ FocusHandler class
WITHOUT_CLASSIFICATION	walk up hierarchy, looking for an EditPane
WITHOUT_CLASSIFICATION	{{{ ScrollHandler class
WITHOUT_CLASSIFICATION	People have reported hangs with JDK 1.4; might be caused by modal dialogs being displayed from windowActivated()
WITHOUT_CLASSIFICATION	{{{ ViewConfig class
WITHOUT_CLASSIFICATION	dockables
WITHOUT_CLASSIFICATION	this constructor keys the hash table
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getAction() method
WITHOUT_CLASSIFICATION	{{{ getActionNames() method
WITHOUT_CLASSIFICATION	{{{ addActionSet() method
WITHOUT_CLASSIFICATION	{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	{{{ getActionSets() method
WITHOUT_CLASSIFICATION	{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	{{{ loadServices() method
WITHOUT_CLASSIFICATION	{{{ invokeAction() method
WITHOUT_CLASSIFICATION	{{{ unloadServices() method
WITHOUT_CLASSIFICATION	{{{ registerService() method
WITHOUT_CLASSIFICATION	this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ registerService() method
WITHOUT_CLASSIFICATION	{{{ unregisterService() method
WITHOUT_CLASSIFICATION	{{{ getServiceTypes() method
WITHOUT_CLASSIFICATION	{{{ getServiceNames() method
WITHOUT_CLASSIFICATION	{{{ getService() method
WITHOUT_CLASSIFICATION	unknown service - <clazz,name> not in table
WITHOUT_CLASSIFICATION	{{{ Descriptor class
WITHOUT_CLASSIFICATION	avoid re-running script if it gives us null
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this constructor keys the hash table
WITHOUT_CLASSIFICATION	this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	lazy instantiation
WITHOUT_CLASSIFICATION	avoid re-running script if it gives us null
WITHOUT_CLASSIFICATION	{{{ EditServer constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ IOProgressMonitor constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ ErrorListCellRenderer constructor
WITHOUT_CLASSIFICATION	{{{ getListCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ ErrorEntry class
WITHOUT_CLASSIFICATION	{{{ ErrorListDialog constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ EditPane constructor
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	{{{ isX11() method
WITHOUT_CLASSIFICATION	Set up the right-click popup menu
WITHOUT_CLASSIFICATION	{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	use old property name for backwards compatibility
WITHOUT_CLASSIFICATION	{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	{{{ loadBufferSwitcher() method
WITHOUT_CLASSIFICATION	Don't add duplicates
WITHOUT_CLASSIFICATION	When closing the last buffer, the BufferUpdate.CLOSED handler doesn't call setBuffer(), because null buffers are not supported. Instead, it waits for the subsequent 'Untitled' file creation.
WITHOUT_CLASSIFICATION	shadow size
WITHOUT_CLASSIFICATION	shadow size
WITHOUT_CLASSIFICATION	{{{ isDOSDerived() method
WITHOUT_CLASSIFICATION	Pick screen with largest intersection
WITHOUT_CLASSIFICATION	{{{ isOS2() method
WITHOUT_CLASSIFICATION	Make adjustments for some OS's
WITHOUT_CLASSIFICATION	{{{ isWindows() method
WITHOUT_CLASSIFICATION	Yay, we're finally there
WITHOUT_CLASSIFICATION	{{{ getMarkers() method
WITHOUT_CLASSIFICATION	{{{ isWindows9x() method
WITHOUT_CLASSIFICATION	{{{ isUnix() method
WITHOUT_CLASSIFICATION	{{{ isWindowsNT() method
WITHOUT_CLASSIFICATION	{{{ indentLines() method
WITHOUT_CLASSIFICATION	{{{ isMacOS() method
WITHOUT_CLASSIFICATION	Do it
WITHOUT_CLASSIFICATION	{{{ indentLines() method
WITHOUT_CLASSIFICATION	{{{ Get properties
WITHOUT_CLASSIFICATION	{{{ indentLine() method
WITHOUT_CLASSIFICATION	{{{ indentLine() method
WITHOUT_CLASSIFICATION	{{{ getCurrentIndentForLine() method
WITHOUT_CLASSIFICATION	{{{ getIdealIndentForLine() method
WITHOUT_CLASSIFICATION	{{{ Get indent attributes of previous line
WITHOUT_CLASSIFICATION	{{{ getFile() method
WITHOUT_CLASSIFICATION	{{{ createPosition() method
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	{{{ markTokens() method
WITHOUT_CLASSIFICATION	{{{ Handle brackets
WITHOUT_CLASSIFICATION	{{{ Get indent attributes for current line
WITHOUT_CLASSIFICATION	{{{ putBooleanProperty() method
WITHOUT_CLASSIFICATION	Additional bracket indent For lining up closing and opening brackets
WITHOUT_CLASSIFICATION	{{{ Handle regexps
WITHOUT_CLASSIFICATION	{{{ Deep indenting
WITHOUT_CLASSIFICATION	{{{ isFoldStart() method
WITHOUT_CLASSIFICATION	no parenthesis on previous line (prevLineParenWeight == 0) so the normal indenting rules are used
WITHOUT_CLASSIFICATION	{{{ getRootElements() method
WITHOUT_CLASSIFICATION	If the previous line matches indentNextLine or indentNextLines, add a level of indent
WITHOUT_CLASSIFICATION	{{{ getLineParenWeight() method
WITHOUT_CLASSIFICATION	{{{ getParagraphElement() method
WITHOUT_CLASSIFICATION	{{{ putProperty() method
WITHOUT_CLASSIFICATION	{{{ isFoldEnd() method
WITHOUT_CLASSIFICATION	for backwards compatibility
WITHOUT_CLASSIFICATION	{{{ setFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ getDefaultRootElement() method
WITHOUT_CLASSIFICATION	{{{ invalidateCachedFoldLevels() method
WITHOUT_CLASSIFICATION	{{{ getCurrentIdentForLine() method
WITHOUT_CLASSIFICATION	{{{ Folding methods
WITHOUT_CLASSIFICATION	{{{ Position methods
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldAtLine() method
WITHOUT_CLASSIFICATION	{{{ Marker methods
WITHOUT_CLASSIFICATION	{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	{{{ getMarker() method
WITHOUT_CLASSIFICATION	notify clients with -wait
WITHOUT_CLASSIFICATION	Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	don't sort markers while buffer is being loaded
WITHOUT_CLASSIFICATION	{{{ getMarkerStatusPrompt() method
WITHOUT_CLASSIFICATION	{{{ checkFileForLoad() method
WITHOUT_CLASSIFICATION	{{{ addOrRemoveMarker() method
WITHOUT_CLASSIFICATION	{{{ getMarkerInRange() method
WITHOUT_CLASSIFICATION	{{{ addMarker() method
WITHOUT_CLASSIFICATION	this must be called before any EditBus messages are sent
WITHOUT_CLASSIFICATION	{{{ getMarkerAtLine() method
WITHOUT_CLASSIFICATION	{{{ resetCachedProperties() method
WITHOUT_CLASSIFICATION	{{{ removeMarker() method
WITHOUT_CLASSIFICATION	Magic: UNTITLED is only set if newFile param to constructor is set, NEW_FILE is also set if file doesn't exist on disk. This is so that we can tell apart files created with jEdit.newFile(), and those that just don't exist on disk. Why do we need to tell the difference between the two? jEdit.addBufferToList() checks if the only opened buffer is an untitled buffer, and if so, replaces it with the buffer to add. We don't want this behavior to occur with files that don't exist on disk; only untitled ones.
WITHOUT_CLASSIFICATION	{{{ removeAllMarkers() method
WITHOUT_CLASSIFICATION	Display
WITHOUT_CLASSIFICATION	{{{ Flags
WITHOUT_CLASSIFICATION	{{{ finishSaving() method
WITHOUT_CLASSIFICATION	{{{ setFlag() method
WITHOUT_CLASSIFICATION	{{{ setPath() method
WITHOUT_CLASSIFICATION	{{{ getFlag() method
WITHOUT_CLASSIFICATION	{{{ checkFileForSave() method
WITHOUT_CLASSIFICATION	{{{ Flag values
WITHOUT_CLASSIFICATION	{{{ recoverAutosave() method
WITHOUT_CLASSIFICATION	this method might get called at startup
WITHOUT_CLASSIFICATION	{{{ fireTransactionComplete() method
WITHOUT_CLASSIFICATION	{{{ finishLoading() method
WITHOUT_CLASSIFICATION	Create marker positions
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	if we don't do this, the autosave file won't be deleted after a save as
WITHOUT_CLASSIFICATION	Need to reset properties that were cached defaults, since the defaults might have changed.
WITHOUT_CLASSIFICATION	on a reload, the fold handler doesn't change, but we still need to re-collapse folds. don't do this on initial fold handler creation
WITHOUT_CLASSIFICATION	show this message when all I/O requests are complete
WITHOUT_CLASSIFICATION	if we save a file with the same name as one that's already open, we presume that we can close the existing file, since the user would have confirmed the overwrite in the 'save as' dialog box anyway
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	if we saved over an already open file using 'save a copy as', then reload the existing buffer
WITHOUT_CLASSIFICATION	{{{ Update this buffer for the new path
WITHOUT_CLASSIFICATION	this ensures that undo can clear the dirty flag properly when all edits up to a save are undone
WITHOUT_CLASSIFICATION	if user adds mode buffer-local property
WITHOUT_CLASSIFICATION	new message type introduced in 4.0pre4
WITHOUT_CLASSIFICATION	{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	first line for last 10 lines, make sure not to overlap with the first 10
WITHOUT_CLASSIFICATION	use the low-level property setting code so that if we have a buffer-local property with the same value as a default, later changes in the default don't affect the buffer-local property
WITHOUT_CLASSIFICATION	don't do this on initial token marker
WITHOUT_CLASSIFICATION	{{{ getPriorNonEmptyLine() method
WITHOUT_CLASSIFICATION	didn't find a line that contains non-whitespace chars so return index of prior whitespace line
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ Event firing methods
WITHOUT_CLASSIFICATION	{{{ getListener() method
WITHOUT_CLASSIFICATION	{{{ fireFoldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ fireContentInserted() method
WITHOUT_CLASSIFICATION	{{{ fireContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ firePreContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ fireFoldHandlerChanged() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	end HandlerBase implementation
WITHOUT_CLASSIFICATION	so you the avid code reader should use MODES as the DOCTYPE instead, but we still let old catalogs through to avoid annoying users.
WITHOUT_CLASSIFICATION	older jEdit versions used a DOCTYPE of CATALOG, which is incorrect since the DOCTYPE must be the name of the root element, which is MODES.
WITHOUT_CLASSIFICATION	1 because we've already 'seen' the first bracket
WITHOUT_CLASSIFICATION	{{{ findMatchingBracket() method
WITHOUT_CLASSIFICATION	to avoid slowdown with large files; only scan 10000 lines either way
WITHOUT_CLASSIFICATION	{{{ Forward search
WITHOUT_CLASSIFICATION	{{{ getTokenAtOffset() method
WITHOUT_CLASSIFICATION	corresponding character false - backwards, true - forwards
WITHOUT_CLASSIFICATION	}}} {{{ Backward search
WITHOUT_CLASSIFICATION	Get the syntax token at 'offset' only tokens with the same type will be checked for the corresponding bracket
WITHOUT_CLASSIFICATION	Nothing found
WITHOUT_CLASSIFICATION	{{{ Go on to next line
WITHOUT_CLASSIFICATION	{{{ Go on to previous line
WITHOUT_CLASSIFICATION	{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	{{{ findWordStart() method
WITHOUT_CLASSIFICATION	{{{ findWordStart() method
WITHOUT_CLASSIFICATION	{{{ findWordStart() method
WITHOUT_CLASSIFICATION	{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	{{{ Whitespace...
WITHOUT_CLASSIFICATION	{{{ Whitespace...
WITHOUT_CLASSIFICATION	only select other whitespace in this case
WITHOUT_CLASSIFICATION	only select other whitespace in this case
WITHOUT_CLASSIFICATION	word char or symbol; stop
WITHOUT_CLASSIFICATION	}}} {{{ Word character...
WITHOUT_CLASSIFICATION	word char; keep going
WITHOUT_CLASSIFICATION	whitespace; include in word if eating
WITHOUT_CLASSIFICATION	whitespace; include in word if eating
WITHOUT_CLASSIFICATION	}}} {{{ Symbol...
WITHOUT_CLASSIFICATION	{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	whitespace; include in word if eating
WITHOUT_CLASSIFICATION	}}} {{{ Symbol...
WITHOUT_CLASSIFICATION	align everything to paragraph's leading indent
WITHOUT_CLASSIFICATION	if we see whitespace, set flag.
WITHOUT_CLASSIFICATION	{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	{{{ createEncodingMenu() method
WITHOUT_CLASSIFICATION	{{{ format() method
WITHOUT_CLASSIFICATION	{{{ BrowserCommandsMenu constructor
WITHOUT_CLASSIFICATION	{{{ getStringCase() method
WITHOUT_CLASSIFICATION	set rename to false if > 1 file selected
WITHOUT_CLASSIFICATION	{{{ toTitleCase() method
WITHOUT_CLASSIFICATION	all good
WITHOUT_CLASSIFICATION	{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	show 'close' item if at least one selected file is currently open
WITHOUT_CLASSIFICATION	this will disable most operations if files of multiple types are selected
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ createMenuItem() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	{{{ FileCellRenderer constructor
WITHOUT_CLASSIFICATION	{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getEntryWidth() method
WITHOUT_CLASSIFICATION	{{{ ExpansionToggleBorder class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ExpansionToggleBorder constructor
WITHOUT_CLASSIFICATION	{{{ isExpansionToggle() method
WITHOUT_CLASSIFICATION	setColumnSelectionAllowed(true); setCellSelectionEnabled(false);
WITHOUT_CLASSIFICATION	{{{ paintBorder() method
WITHOUT_CLASSIFICATION	{{{ VFSDirectoryEntryTable constructor
WITHOUT_CLASSIFICATION	{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	{{{ selectFile() method
WITHOUT_CLASSIFICATION	TableColumn col1 = getColumnModel().getColumn(0);col1.setMinWidth(20);col1.setMaxWidth(20);col1.setPreferredWidth(20);
WITHOUT_CLASSIFICATION	{{{ setDirectory() method
WITHOUT_CLASSIFICATION	{{{ getExpandedDirectories() method
WITHOUT_CLASSIFICATION	{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	{{{ scrollRectToVisible() method
WITHOUT_CLASSIFICATION	{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	avoid scrolling to the right
WITHOUT_CLASSIFICATION	{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ expand() method
WITHOUT_CLASSIFICATION	{{{ resizeColumnsAppropriately() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ ClearTypeSelect class
WITHOUT_CLASSIFICATION	{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	{{{ Request types
WITHOUT_CLASSIFICATION	{{{ rename() method
WITHOUT_CLASSIFICATION	{{{ BrowserIORequest constructor
WITHOUT_CLASSIFICATION	fireTableRowsInserted(startIndex + 1,startIndex + list.size() + 1);
WITHOUT_CLASSIFICATION	{{{ listDirectory() method
WITHOUT_CLASSIFICATION	allow user to change name case
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ mkdir() method
WITHOUT_CLASSIFICATION	fireTableRowsUpdated(startIndex,startIndex);
WITHOUT_CLASSIFICATION	{{{ VFSDirectoryEntryTableModel constructor
WITHOUT_CLASSIFICATION	{{{ setRoot() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ collapse() method
WITHOUT_CLASSIFICATION	{{{ addExtendedAttributes() method
WITHOUT_CLASSIFICATION	fireTableRowsUpdated(index,index);fireTableRowsDeleted(index + 1,lastIndex);
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ removeExtendedAttributes() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ showFilePopup() method
WITHOUT_CLASSIFICATION	this vfs has an extended attribute which is not in the list. add it to the end with a ref count of 1
WITHOUT_CLASSIFICATION	this vfs has an extended attribute which is not in the list ???
WITHOUT_CLASSIFICATION	we no longer have any dirs using this extended attribute
WITHOUT_CLASSIFICATION	{{{ BrowserView constructor
WITHOUT_CLASSIFICATION	how deeply we are nested
WITHOUT_CLASSIFICATION	{{{ clearExpansionState() method
WITHOUT_CLASSIFICATION	{{{ ExtendedAttribute class
WITHOUT_CLASSIFICATION	{{{ focusOnFileView() method
WITHOUT_CLASSIFICATION	reference counter allows us to remove a column from the table when no directory using this column is visible
WITHOUT_CLASSIFICATION	{{{ updateFileView() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ loadDirectory() method
WITHOUT_CLASSIFICATION	{{{ selectNone() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ saveExpansionState() method
WITHOUT_CLASSIFICATION	{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	{{{ getBrowser() method
WITHOUT_CLASSIFICATION	{{{ If reloading root, update parent directory list
WITHOUT_CLASSIFICATION	for the parent directory right-click; on the click we select the clicked item, but when the popup goes away we select the currently showing directory.
WITHOUT_CLASSIFICATION	{{{ getTable() method
WITHOUT_CLASSIFICATION	{{{ getParentDirectoryList() method
WITHOUT_CLASSIFICATION	we use SwingUtilities.invokeLater() so that the action is executed before the popup is hidden.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	so that it doesn't resize...
WITHOUT_CLASSIFICATION	because this method is called for every VFS update, we don't want to scan the tree all the time. So we use the following algorithm to determine if the path might be part of the tree: - if the path starts with the browser's current directory, we do the tree scan - if the browser's directory is 'favorites:' -- we have to do the tree scan, as every path can appear under the favorites list - if the browser's directory is 'roots:' and path is on the local filesystem, do a tree scan
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	{{{ doComplete() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ VFSFileNameField constructor
WITHOUT_CLASSIFICATION	{{{ VFSFileChooserDialog constructor
WITHOUT_CLASSIFICATION	fix for bug #765507 we don't type complete in save dialog boxes. Press TAB to do an explicit complete
WITHOUT_CLASSIFICATION	fix for bug #765507 we don't type complete in save dialog boxes. Press TAB to do an explicit complete
WITHOUT_CLASSIFICATION	{{{ goToParent() method
WITHOUT_CLASSIFICATION	{{{ BrowserHandler class
WITHOUT_CLASSIFICATION	{{{ BackspaceAction class
WITHOUT_CLASSIFICATION	browser.getBrowserView().getTable().addKeyListener(new KeyHandler());
WITHOUT_CLASSIFICATION	String filename = filenameField.getText();
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ doFileExistsWarning() method
WITHOUT_CLASSIFICATION	{{{ filesSelected() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ getActionContext() method
WITHOUT_CLASSIFICATION	{{{ getMode() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ filesActivated() method
WITHOUT_CLASSIFICATION	non-existent file
WITHOUT_CLASSIFICATION	user pressed enter when the vfs table or file name field has focus, with nothing selected.
WITHOUT_CLASSIFICATION	{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	{{{ WorkThreadListener class
WITHOUT_CLASSIFICATION	{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	{{{ GetFileTypeRequest class
WITHOUT_CLASSIFICATION	because its preferred size can be quite wide, we don't want it to make the browser way too big, so set the preferred width to 0.
WITHOUT_CLASSIFICATION	{{{ Browser types
WITHOUT_CLASSIFICATION	{{{ browseDirectoryInNewWindow() method
WITHOUT_CLASSIFICATION	{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	{{{ browseDirectory() method
WITHOUT_CLASSIFICATION	see VFSBrowser.browseDirectory()
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	unknown value??!!!
WITHOUT_CLASSIFICATION	{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ newFile() method
WITHOUT_CLASSIFICATION	{{{ getDirectory() method
WITHOUT_CLASSIFICATION	{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	{{{ setDirectory() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ rename() method
WITHOUT_CLASSIFICATION	{{{ mkdir() method
WITHOUT_CLASSIFICATION	{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	{{{ filesSelected() method
WITHOUT_CLASSIFICATION	used by FTP plugin to clear directory cache
WITHOUT_CLASSIFICATION	{{{ isHorizontalLayout() method
WITHOUT_CLASSIFICATION	{{{ setShowHiddenFiles() method
WITHOUT_CLASSIFICATION	{{{ getShowHiddenFiles() method
WITHOUT_CLASSIFICATION	{{{ locateFile() method
WITHOUT_CLASSIFICATION	{{{ getFilenameFilter() method
WITHOUT_CLASSIFICATION	if a directory is selected, create new dir in there. if a file is selected, create new dir inside its parent.
WITHOUT_CLASSIFICATION	{{{ setFilenameFilter() method
WITHOUT_CLASSIFICATION	{{{ getDirectoryField() method
WITHOUT_CLASSIFICATION	path is the currently viewed directory in the browser
WITHOUT_CLASSIFICATION	{{{ rootDirectory() method
WITHOUT_CLASSIFICATION	{{{ addBrowserListener() method
WITHOUT_CLASSIFICATION	{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	{{{ removeBrowserListener() method
WITHOUT_CLASSIFICATION	{{{ getBrowserView() method
WITHOUT_CLASSIFICATION	{{{ pathsEqual() method
WITHOUT_CLASSIFICATION	{{{ updateFilenameFilter() method
WITHOUT_CLASSIFICATION	{{{ endRequest() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	We do this stuff because the browser is not able to handle more than one request yet
WITHOUT_CLASSIFICATION	close if this buffer is currently visible in the view.
WITHOUT_CLASSIFICATION	if a file is selected in OPEN_DIALOG or SAVE_DIALOG mode, just let the listener(s) handle it
WITHOUT_CLASSIFICATION	{{{ updatePopupMenu() method
WITHOUT_CLASSIFICATION	{{{ createMenuBar() method
WITHOUT_CLASSIFICATION	{{{ startRequest() method
WITHOUT_CLASSIFICATION	{{{ createToolBar() method
WITHOUT_CLASSIFICATION	Log.log(Log.WARNING,this,"VFS update: request already in progress");
WITHOUT_CLASSIFICATION	{{{ CommandsMenuButton class
WITHOUT_CLASSIFICATION	dump stack trace for debugging purposes
WITHOUT_CLASSIFICATION	save a file -> sends vfs update. if a VFS file dialog box is shown from the same event frame as the save, the VFSUpdate will be delivered before the directory is loaded, and before the path is set.
WITHOUT_CLASSIFICATION	{{{ updateFilterEnabled() method
WITHOUT_CLASSIFICATION	{{{ PluginsMenuButton class
WITHOUT_CLASSIFICATION	{{{ CommandsMenuButton constructor
WITHOUT_CLASSIFICATION	we're in a modal dialog
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ PluginsMenuButton constructor
WITHOUT_CLASSIFICATION	{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ FavoritesMenuButton class
WITHOUT_CLASSIFICATION	{{{ old API
WITHOUT_CLASSIFICATION	{{{ DirectoryLoadedAWTRequest class
WITHOUT_CLASSIFICATION	{{{ new API
WITHOUT_CLASSIFICATION	{{{ FavoritesMenuButton constructor
WITHOUT_CLASSIFICATION	This is the new, canonical path
WITHOUT_CLASSIFICATION	there was an error
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	if any directories are selected, add them, otherwise add current directory
WITHOUT_CLASSIFICATION	ensure consistent history; eg we don't want both foo/ and foo
WITHOUT_CLASSIFICATION	to notify listeners that any existing selection has been deactivated
WITHOUT_CLASSIFICATION	turns out under some circumstances this method can switch the current buffer in BROWSER mode.
WITHOUT_CLASSIFICATION	in any case, this is only needed for the directory chooser (why?), so we add a check. otherwise poor Rick will go insane.
WITHOUT_CLASSIFICATION	{{{ BrowserActionContext class
WITHOUT_CLASSIFICATION	in the future we will want something better, eg. having an 'evt' object passed to EditAction.invoke().
WITHOUT_CLASSIFICATION	for now, since all browser actions are written in beanshell we set the 'browser' variable directly.
WITHOUT_CLASSIFICATION	I guess ideally all browsers should have views, but since they don't, we just use the active view in that case, since some actions depend on a view being there and I don't want to add checks to them all
WITHOUT_CLASSIFICATION	{{{ getListModel() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	strings might be equal!
WITHOUT_CLASSIFICATION	no duplicates, check for all-whitespace string
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ read() method
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ KillRingHandler class
WITHOUT_CLASSIFICATION	we don't want duplicate entries in the kill ring
WITHOUT_CLASSIFICATION	{{{ RingListModel class
WITHOUT_CLASSIFICATION	we don't want duplicate entries in the kill ring
WITHOUT_CLASSIFICATION	True if a \n was read after a \r. Usually means this is a DOS/Windows file
WITHOUT_CLASSIFICATION	{{{ BufferIORequest constructor
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	auto-detect encoding within the gzip stream.
WITHOUT_CLASSIFICATION	do not reset the stream and just treat it like a normal UTF-8 file.
WITHOUT_CLASSIFICATION	we guess an initial size for the array
WITHOUT_CLASSIFICATION	only true if the file size is known
WITHOUT_CLASSIFICATION	if the file size is not known, start with a resonable default buffer size
WITHOUT_CLASSIFICATION	Number of characters in 'buf' array. InputStream.read() doesn't always fill the array (eg, the file size is not a multiple of IOBUFSIZE, or it is a GZipped file, etc)
WITHOUT_CLASSIFICATION	A \r was read, hence a MacOS file
WITHOUT_CLASSIFICATION	Was the previous read character a \r? If we read a \n and this is true, we assume we have a DOS/Windows file
WITHOUT_CLASSIFICATION	If we read a \r and lastWasCR is also true, it is probably a Mac file (\r\r in stream)
WITHOUT_CLASSIFICATION	Number of lines read. Every 100 lines, we update the progress bar
WITHOUT_CLASSIFICATION	Offset of previous line, relative to the start of the I/O buffer (NOT relative to the start of the document)
WITHOUT_CLASSIFICATION	Look for line endings.
WITHOUT_CLASSIFICATION	Otherwise set a flag, so that \n knows that last was a \r
WITHOUT_CLASSIFICATION	This is i+1 to take the trailing \n into account
WITHOUT_CLASSIFICATION	Insert a line
WITHOUT_CLASSIFICATION	If lastWasCR is true, we just read a \r followed by a \n. We specify that this is a Windows file, but take no further action and just ignore the \r.
WITHOUT_CLASSIFICATION	Bump lastLine so that the next line doesn't erronously pick up the \r
WITHOUT_CLASSIFICATION	Otherwise, we found a \n that follows some other character, hence we have a Unix file
WITHOUT_CLASSIFICATION	If we find some other character that follows a \r, so it is not a Windows file, and probably a Mac file
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ write() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	For `reload' command
WITHOUT_CLASSIFICATION	{{{ autosave() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	Chop trailing newline and/or ^Z (if any)
WITHOUT_CLASSIFICATION	Add remaining stuff from buffer
WITHOUT_CLASSIFICATION	the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	to avoid having to deal with read/write locks and such, we insert the loaded data into the buffer in the post-load cleanup runnable, which runs in the AWT thread.
WITHOUT_CLASSIFICATION	DOS ^Z
WITHOUT_CLASSIFICATION	{{{ readMarkers() method
WITHOUT_CLASSIFICATION	add a line marker at the end for proper offset manager operation
WITHOUT_CLASSIFICATION	used in insert()
WITHOUT_CLASSIFICATION	the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	if the VFS supports renaming files, we first save to #<filename>#save#, then rename that to <filename>, so that if the save fails, data will not be lost. as of 4.1pre7 we now call vfs.getTwoStageSaveName() instead of constructing the path directly since some VFS's might not allow # in filenames.
WITHOUT_CLASSIFICATION	buffer.readLock();
WITHOUT_CLASSIFICATION	Only backup once per session
WITHOUT_CLASSIFICATION	this must be after the stream is created or we deadlock with SSHTools.
WITHOUT_CLASSIFICATION	We only save markers to VFS's that support deletion. Otherwise, we will accumilate stale marks files.
WITHOUT_CLASSIFICATION	Can't use buffer.getName() here because it is not changed until the save is complete
WITHOUT_CLASSIFICATION	buffer.readUnlock();
WITHOUT_CLASSIFICATION	{{{ writeMarkers() method
WITHOUT_CLASSIFICATION	buffer has been saved while we were waiting.
WITHOUT_CLASSIFICATION	{{{ setLimit() method
WITHOUT_CLASSIFICATION	not supported by Java...
WITHOUT_CLASSIFICATION	{{{ UndoManager constructor
WITHOUT_CLASSIFICATION	we don't do this in Buffer.insert() so that we can insert multiple files at once
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	nothing done between begin/end calls
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ bufferSaved() method
WITHOUT_CLASSIFICATION	{{{ Remove class
WITHOUT_CLASSIFICATION	{{{ Remove constructor
WITHOUT_CLASSIFICATION	{{{ Remove constructor
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ undo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ redo() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	queue of undos. last is most recent, first is oldest
WITHOUT_CLASSIFICATION	{{{ Insert class
WITHOUT_CLASSIFICATION	queue of redos. first is most recent, last is oldest
WITHOUT_CLASSIFICATION	{{{ addEdit() method
WITHOUT_CLASSIFICATION	{{{ Insert constructor
WITHOUT_CLASSIFICATION	{{{ getMergeEdit() method
WITHOUT_CLASSIFICATION	{{{ Insert constructor
WITHOUT_CLASSIFICATION	{{{ getLastEdit() method
WITHOUT_CLASSIFICATION	{{{ Edit class
WITHOUT_CLASSIFICATION	{{{ CompoundEdit class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ createPosition() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	get all positions from offset to the end, inclusive
WITHOUT_CLASSIFICATION	get all positions from offset to the end, inclusive
WITHOUT_CLASSIFICATION	{{{ PosTopHalf class
WITHOUT_CLASSIFICATION	{{{ unref() method
WITHOUT_CLASSIFICATION	{{{ PosTopHalf constructor
WITHOUT_CLASSIFICATION	{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	{{{ getOffset() method
WITHOUT_CLASSIFICATION	{{{ compareTo() method
WITHOUT_CLASSIFICATION	{{{ PosBottomHalf class
WITHOUT_CLASSIFICATION	{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	{{{ PosBottomHalf constructor
WITHOUT_CLASSIFICATION	{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ ref() method
WITHOUT_CLASSIFICATION	{{{ LineElement constructor
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	{{{ getDocument() method
WITHOUT_CLASSIFICATION	{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getParentElement() method
WITHOUT_CLASSIFICATION	{{{ getAttributes() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getLength() method
WITHOUT_CLASSIFICATION	{{{ getLineCount() method
WITHOUT_CLASSIFICATION	{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	copy text after gap
WITHOUT_CLASSIFICATION	{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ getElementCount() method
WITHOUT_CLASSIFICATION	{{{ _setContent() method
WITHOUT_CLASSIFICATION	{{{ getElement() method
WITHOUT_CLASSIFICATION	limitations...
WITHOUT_CLASSIFICATION	{{{ isLeaf() method
WITHOUT_CLASSIFICATION	{{{ moveGapStart() method
WITHOUT_CLASSIFICATION	{{{ ExplicitFoldHandler constructor
WITHOUT_CLASSIFICATION	limitations...
WITHOUT_CLASSIFICATION	copy text before gap
WITHOUT_CLASSIFICATION	{{{ moveGapEnd() method
WITHOUT_CLASSIFICATION	{{{ setFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ DummyFoldHandler constructor
WITHOUT_CLASSIFICATION	{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ LineManager constructor
WITHOUT_CLASSIFICATION	{{{ getFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ isScreenLineCountValid() method
WITHOUT_CLASSIFICATION	{{{ getLineContext() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	{{{ setLineContext() method
WITHOUT_CLASSIFICATION	{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	{{{ setFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	{{{ getFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	moveGap(-1,0,"contentInserted");
WITHOUT_CLASSIFICATION	{{{ invalidateScreenLineCounts() method
WITHOUT_CLASSIFICATION	{{{ setLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ _contentInserted() method
WITHOUT_CLASSIFICATION	Having all the info packed into an int is not very OO and makes the code somewhat more complicated, but it saves a lot of memory. The new document model has just 12 bytes of overhead per line. LineContext instances are now internalized, so only a few should actually be in the heap. In the old document model there were 5 objects per line, for a total of about 100 bytes, plus a cached token list, which used another 100 or so bytes.
WITHOUT_CLASSIFICATION	moveGap(-1,0,"contentRemoved");
WITHOUT_CLASSIFICATION	{{{ registerFoldHandler() method
WITHOUT_CLASSIFICATION	{{{ moveGap() method
WITHOUT_CLASSIFICATION	{{{ unregisterFoldHandler() method
WITHOUT_CLASSIFICATION	Default implementation... subclasses can extend this.
WITHOUT_CLASSIFICATION	{{{ getFoldHandlers() method
WITHOUT_CLASSIFICATION	{{{ hashCode() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ stop() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ getIcon() method
WITHOUT_CLASSIFICATION	{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	{{{ getFoldModes() method
WITHOUT_CLASSIFICATION	empty line. inherit previous line's fold level
WITHOUT_CLASSIFICATION	{{{ FoldHandler() constructor
WITHOUT_CLASSIFICATION	{{{ getExpansion() method
WITHOUT_CLASSIFICATION	{{{ Static initializer
WITHOUT_CLASSIFICATION	{{{ AnimatedIcon constructor
WITHOUT_CLASSIFICATION	{{{ getFrames() method
WITHOUT_CLASSIFICATION	{{{ setExpansion() method
WITHOUT_CLASSIFICATION	{{{ getRate() method
WITHOUT_CLASSIFICATION	{{{ getField() method
WITHOUT_CLASSIFICATION	{{{ setFrames() method
WITHOUT_CLASSIFICATION	{{{ getAbbrevField() method
WITHOUT_CLASSIFICATION	{{{ setIcon() method
WITHOUT_CLASSIFICATION	{{{ setRate() method
WITHOUT_CLASSIFICATION	{{{ getBeforeCaretTextArea() method
WITHOUT_CLASSIFICATION	{{{ goToActionBar() method
WITHOUT_CLASSIFICATION	{{{ getAfterCaretTextArea() method
WITHOUT_CLASSIFICATION	{{{ ActionBar constructor
WITHOUT_CLASSIFICATION	construct a BeanShell snippet instead of invoking directly so that user can record property changes in macros.
WITHOUT_CLASSIFICATION	{{{ getCompletions() method
WITHOUT_CLASSIFICATION	{{{ complete() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ isOK() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	{{{ ActionTextField class
WITHOUT_CLASSIFICATION	{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ TipOfTheDay constructor
WITHOUT_CLASSIFICATION	{{{ CompletionPopup class
WITHOUT_CLASSIFICATION	{{{ CompletionList class
WITHOUT_CLASSIFICATION	{{{ CompletionPopup constructor
WITHOUT_CLASSIFICATION	we need this public not protected
WITHOUT_CLASSIFICATION	Recursively adds our key listener to sub-components
WITHOUT_CLASSIFICATION	{{{ nextTip() method
WITHOUT_CLASSIFICATION	{{{ SelectLineRange constructor
WITHOUT_CLASSIFICATION	{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	{{{ CloseDialog constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ getCompletions() method
WITHOUT_CLASSIFICATION	{{{ getCompletions() method
WITHOUT_CLASSIFICATION	only set if all buffers saved/closed
WITHOUT_CLASSIFICATION	so that we don't see the same tip again if the user clicks 'Next Tip'
WITHOUT_CLASSIFICATION	{{{ completeWord() method
WITHOUT_CLASSIFICATION	do nothing }}}
WITHOUT_CLASSIFICATION	{{{ completeWord() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ CompleteWord constructor
WITHOUT_CLASSIFICATION	}}} {{{ show popup if > 1
WITHOUT_CLASSIFICATION	{{{ if there is only one competion, insert in buffer
WITHOUT_CLASSIFICATION	attempting to expand non-word char
WITHOUT_CLASSIFICATION	figure out what constitutes a word character and what doesn't
WITHOUT_CLASSIFICATION	{{{ getNonAlphaNumericWordChars() method
WITHOUT_CLASSIFICATION	{{{ getWordToComplete() method
WITHOUT_CLASSIFICATION	build a list of unique words in all visible buffers
WITHOUT_CLASSIFICATION	only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	{{{ try to find matching keywords
WITHOUT_CLASSIFICATION	{{{ loop through all lines of current buffer
WITHOUT_CLASSIFICATION	check for match at start of line
WITHOUT_CLASSIFICATION	check for match inside line
WITHOUT_CLASSIFICATION	'+ 1' so that findWordEnd() doesn't pick up the space at the start
WITHOUT_CLASSIFICATION	{{{ insertSelected() method
WITHOUT_CLASSIFICATION	{{{ Completion class
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ setMessageAndClear() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ updateCaption() method
WITHOUT_CLASSIFICATION	{{{ ThreadProgress constructor
WITHOUT_CLASSIFICATION	{{{ WorkThreadHandler class
WITHOUT_CLASSIFICATION	{{{ StatusBar constructor
WITHOUT_CLASSIFICATION	{{{ ThreadProgress class
WITHOUT_CLASSIFICATION	System.err.println("value: " + thread.getProgressValue());
WITHOUT_CLASSIFICATION	{{{ setMessageComponent() method
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	{{{ WorkThreadListener implementation
WITHOUT_CLASSIFICATION	so if view is closed in the meantime...
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	don't obscure existing message
WITHOUT_CLASSIFICATION	{{{ updateCaretStatus() method
WITHOUT_CLASSIFICATION	{{{ setMessage() method
WITHOUT_CLASSIFICATION	can happen when switching buffers sometimes
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	hopefully another caret update will come?
WITHOUT_CLASSIFICATION	{{{ ToolTipLabel class
WITHOUT_CLASSIFICATION	see above
WITHOUT_CLASSIFICATION	{{{ updateMiscStatus() method
WITHOUT_CLASSIFICATION	{{{ updateBufferStatus() method
WITHOUT_CLASSIFICATION	{{{ MemoryStatus class
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	package-private for speed
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ Clock class
WITHOUT_CLASSIFICATION	MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	FontRenderContext frc = new FontRenderContext(null,false,false);Rectangle2D bounds = getFont().getStringBounds(getTime(),frc);Dimension dim = new Dimension((int)bounds.getWidth(),(int)bounds.getHeight());setPreferredSize(dim);setMaximumSize(dim);
WITHOUT_CLASSIFICATION	{{{ Clock constructor
WITHOUT_CLASSIFICATION	{{{ getTime() method
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	{{{ setSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	{{{ Clock constructor
WITHOUT_CLASSIFICATION	FontRenderContext frc = new FontRenderContext(null,false,false);Rectangle2D bounds = getFont().getStringBounds(getTime(),frc);Dimension dim = new Dimension((int)bounds.getWidth(),(int)bounds.getHeight());setPreferredSize(dim);setMaximumSize(dim);
WITHOUT_CLASSIFICATION	{{{ getTime() method
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	{{{ setInstantPopups() method
WITHOUT_CLASSIFICATION	{{{ getInstantPopups() method
WITHOUT_CLASSIFICATION	{{{ getSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	{{{ setEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	{{{ getEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	{{{ getModel() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ historyPrevious() method
WITHOUT_CLASSIFICATION	{{{ addCurrentToHistory() method
WITHOUT_CLASSIFICATION	{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	{{{ fireActionPerformed() method
WITHOUT_CLASSIFICATION	{{{ doBackwardSearch() method
WITHOUT_CLASSIFICATION	have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	{{{ doForwardSearch() method
WITHOUT_CLASSIFICATION	down arrow
WITHOUT_CLASSIFICATION	have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	{{{ historyNext() method
WITHOUT_CLASSIFICATION	{{{ ColorWellButton constructor
WITHOUT_CLASSIFICATION	{{{ HistoryBorder class
WITHOUT_CLASSIFICATION	according to krisk this looks better on OS X...
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	we don't handle key pressed A+
WITHOUT_CLASSIFICATION	{{{ getSelectedColor() method
WITHOUT_CLASSIFICATION	{{{ ColorPickerDialog class
WITHOUT_CLASSIFICATION	{{{ setSelectedColor() method
WITHOUT_CLASSIFICATION	}}} {{{ KEY_TYPED...
WITHOUT_CLASSIFICATION	{{{ ColorWell class
WITHOUT_CLASSIFICATION	{{{ KEY_PRESSED...
WITHOUT_CLASSIFICATION	they're too troublesome
WITHOUT_CLASSIFICATION	get rid of keys we never need to handle
WITHOUT_CLASSIFICATION	need to let \b through so that backspace will work in HistoryTextFields
WITHOUT_CLASSIFICATION	case KeyEvent.VK_SEPARATOR:
WITHOUT_CLASSIFICATION	{{{ updateButtons() method
WITHOUT_CLASSIFICATION	if the last key was a numeric keypad key and NumLock is off, filter it out
WITHOUT_CLASSIFICATION	{{{ PasteFromListDialog constructor
WITHOUT_CLASSIFICATION	{{{ numericKeypadKey() method
WITHOUT_CLASSIFICATION	{{{ getSelectedClipText()
WITHOUT_CLASSIFICATION	{{{ showClipText() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ reload() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	{{{ InputHandler constructor
WITHOUT_CLASSIFICATION	{{{ selectAll() method
WITHOUT_CLASSIFICATION	{{{ valueChanged() method
WITHOUT_CLASSIFICATION	{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	for ABI compatibility
WITHOUT_CLASSIFICATION	is it a header?
WITHOUT_CLASSIFICATION	{{{ FilesChangedDialog constructor
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	remove empty category branches
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	selected a header; skip to the next row
WITHOUT_CLASSIFICATION	{{{ getLastAction() method
WITHOUT_CLASSIFICATION	{{{ TreeHandler class
WITHOUT_CLASSIFICATION	{{{ handleKey() method
WITHOUT_CLASSIFICATION	{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	{{{ getLastActionCount() method
WITHOUT_CLASSIFICATION	{{{ getRepeatCount() method
WITHOUT_CLASSIFICATION	{{{ setRepeatCount() method
WITHOUT_CLASSIFICATION	{{{ readNextChar() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ invokeAction() method
WITHOUT_CLASSIFICATION	{{{ invokeAction() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ setModel() method
WITHOUT_CLASSIFICATION	{{{ selectAll() method
WITHOUT_CLASSIFICATION	{{{ readNextChar() method
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	{{{ resetLastActionCount() method
WITHOUT_CLASSIFICATION	If repeat was true originally, clear it Otherwise it might have been set by the action, etc
WITHOUT_CLASSIFICATION	remember the last executed action
WITHOUT_CLASSIFICATION	{{{ invokeReadNextChar() method
WITHOUT_CLASSIFICATION	remember old values, in case action changes them
WITHOUT_CLASSIFICATION	first of all, if this action set a readNextChar, do not clear the repeat
WITHOUT_CLASSIFICATION	execute the action
WITHOUT_CLASSIFICATION	{{{ getValues() method
WITHOUT_CLASSIFICATION	stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	{{{ invokeLastAction() method
WITHOUT_CLASSIFICATION	this might be a bit slow if __char__ occurs a lot
WITHOUT_CLASSIFICATION	{{{ userInput() method
WITHOUT_CLASSIFICATION	{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	{{{ getSelectedValue() method
WITHOUT_CLASSIFICATION	{{{ getCheckedValues() method
WITHOUT_CLASSIFICATION	hasFocus
WITHOUT_CLASSIFICATION	{{{ getCellRenderer() method
WITHOUT_CLASSIFICATION	{{{ DummyRenderer class
WITHOUT_CLASSIFICATION	{{{ LabelRenderer class
WITHOUT_CLASSIFICATION	{{{ AboutDialog constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	{{{ createDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ AboutPanel class
WITHOUT_CLASSIFICATION	{{{ cacheDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ Static part of class
WITHOUT_CLASSIFICATION	{{{ getCachedDockableNames() method
WITHOUT_CLASSIFICATION	{{{ loadDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ registerDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ unloadDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ getRegisteredDockableWindows() method
WITHOUT_CLASSIFICATION	{{{ getCachedDockableActionFlags() method
WITHOUT_CLASSIFICATION	{{{ DockableListHandler class
WITHOUT_CLASSIFICATION	{{{ OpenAction class
WITHOUT_CLASSIFICATION	{{{ DockableListHandler constructor
WITHOUT_CLASSIFICATION	{{{ Factory class
WITHOUT_CLASSIFICATION	{{{ Factory constructor
WITHOUT_CLASSIFICATION	{{{ OpenAction constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ invoke() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ isSelected() method
WITHOUT_CLASSIFICATION	{{{ Static initializer
WITHOUT_CLASSIFICATION	{{{ showDockableWindow() method
WITHOUT_CLASSIFICATION	make default be true for the next action
WITHOUT_CLASSIFICATION	{{{ Instance part of class
WITHOUT_CLASSIFICATION	{{{ ToggleAction class
WITHOUT_CLASSIFICATION	{{{ removeDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ ToggleAction constructor
WITHOUT_CLASSIFICATION	{{{ DockableWindowManager constructor
WITHOUT_CLASSIFICATION	{{{ FloatAction class
WITHOUT_CLASSIFICATION	an error occurred
WITHOUT_CLASSIFICATION	{{{ FloatAction constructor
WITHOUT_CLASSIFICATION	{{{ floatDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ closeCurrentArea() method
WITHOUT_CLASSIFICATION	create a copy of this dockable window and float it
WITHOUT_CLASSIFICATION	{{{ toggleDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ addDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ getDockableTitle() method
WITHOUT_CLASSIFICATION	{{{ hideDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ getDockableWindow() method
WITHOUT_CLASSIFICATION	{{{ isDockableWindowVisible() method
WITHOUT_CLASSIFICATION	{{{ getDockable() method
WITHOUT_CLASSIFICATION	System.err.println(comp.getClass());
WITHOUT_CLASSIFICATION	{{{ isDockableWindowDocked() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ addEntry() method
WITHOUT_CLASSIFICATION	{{{ getTopDockingArea() method
WITHOUT_CLASSIFICATION	we don't care
WITHOUT_CLASSIFICATION	{{{ close() method
WITHOUT_CLASSIFICATION	{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getLeftDockingArea() method
WITHOUT_CLASSIFICATION	{{{ getAllPluginEntries() method
WITHOUT_CLASSIFICATION	{{{ setResizePos() method
WITHOUT_CLASSIFICATION	{{{ getBottomDockingArea() method
WITHOUT_CLASSIFICATION	{{{ getRightDockingArea() method
WITHOUT_CLASSIFICATION	{{{ finishResizing() method
WITHOUT_CLASSIFICATION	{{{ paintChildren() method
WITHOUT_CLASSIFICATION	{{{ DockableLayout class
WITHOUT_CLASSIFICATION	don't show menu items to dock into a plain view
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ maximumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	I'm lazy
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	{{{ Position tool bars if they are managed by us
WITHOUT_CLASSIFICATION	{{{ Position center (edit pane, or split pane)
WITHOUT_CLASSIFICATION	{{{ adjustDockingAreasToFit() method
WITHOUT_CLASSIFICATION	{{{ getLayoutAlignmentX() method
WITHOUT_CLASSIFICATION	{{{ getLayoutAlignmentY() method
WITHOUT_CLASSIFICATION	{{{ invalidateLayout() method
WITHOUT_CLASSIFICATION	only set if open
WITHOUT_CLASSIFICATION	only for docked
WITHOUT_CLASSIFICATION	{{{ Entry constructor
WITHOUT_CLASSIFICATION	{{{ Entry constructor
WITHOUT_CLASSIFICATION	get the title here, not in the factory constructor, since the factory might be created before a plugin's props are loaded
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ isOK() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	eg, trying to bind C+n C+p if C+n already bound
WITHOUT_CLASSIFICATION	{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	{{{ Instance variables this is a bad hack
WITHOUT_CLASSIFICATION	show "remove" button
WITHOUT_CLASSIFICATION	create a panel with a BoxLayout. Can't use Box here because Box doesn't have setBorder().
WITHOUT_CLASSIFICATION	{{{ updateAssignedTo() method
WITHOUT_CLASSIFICATION	{{{ getSymbolicName() method
WITHOUT_CLASSIFICATION	create a temporary (synthetic) prefix KeyBinding, that won't be saved
WITHOUT_CLASSIFICATION	{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ InputPane class
WITHOUT_CLASSIFICATION	eg, trying to bind C+e if C+e is a prefix
WITHOUT_CLASSIFICATION	ask whether to remove the old shortcut
WITHOUT_CLASSIFICATION	{{{ KeyBinding class
WITHOUT_CLASSIFICATION	we don't need two identical shortcuts
WITHOUT_CLASSIFICATION	{{{ canClose() method
WITHOUT_CLASSIFICATION	check whether the other shortcut is the alt. shortcut
WITHOUT_CLASSIFICATION	check whether this shortcut already exists
WITHOUT_CLASSIFICATION	check whether shortcut is a prefix to others
WITHOUT_CLASSIFICATION	can't override prefix shortcuts
WITHOUT_CLASSIFICATION	ask whether to override that other shortcut
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	Pass 3: layout components
WITHOUT_CLASSIFICATION	synchronized
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ valueChanged() method
WITHOUT_CLASSIFICATION	in case saved geometry is too small
WITHOUT_CLASSIFICATION	{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	Save settings to disk
WITHOUT_CLASSIFICATION	This will fire the PROPERTIES_CHANGED event
WITHOUT_CLASSIFICATION	register the Options dialog as a TreeSelectionListener. this is done before the initial selection to ensure that the first selected OptionPane is displayed on startup.
WITHOUT_CLASSIFICATION	get rid of this dialog if necessary
WITHOUT_CLASSIFICATION	{{{ updateSize() method
WITHOUT_CLASSIFICATION	{{{ OptionTreeModel class
WITHOUT_CLASSIFICATION	{{{ selectPane() method
WITHOUT_CLASSIFICATION	{{{ selectPane() method
WITHOUT_CLASSIFICATION	{{{ PaneNameRenderer class
WITHOUT_CLASSIFICATION	this model may not be changed by the TableCellEditor
WITHOUT_CLASSIFICATION	{{{ BufferOptions constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ Line separator
WITHOUT_CLASSIFICATION	returns false if no such pane exists; calling with null param selects first option pane found
WITHOUT_CLASSIFICATION	setFont(new Font("Dialog",Font.BOLD,10));
WITHOUT_CLASSIFICATION	wait for it to be painted to ensure progress is updated continuously
WITHOUT_CLASSIFICATION	{{{ Max line length
WITHOUT_CLASSIFICATION	{{{ Encoding
WITHOUT_CLASSIFICATION	{{{ GZipped setting
WITHOUT_CLASSIFICATION	{{{ Tab size
WITHOUT_CLASSIFICATION	{{{ Edit mode
WITHOUT_CLASSIFICATION	{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	{{{ Fold mode
WITHOUT_CLASSIFICATION	{{{ Indent size
WITHOUT_CLASSIFICATION	{{{ Wrap mode
WITHOUT_CLASSIFICATION	{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	{{{ Soft tabs
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog class
WITHOUT_CLASSIFICATION	{{{ Buttons
WITHOUT_CLASSIFICATION	{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	{{{ updateText() method
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ updatePreview() method
WITHOUT_CLASSIFICATION	if the buffer count becomes 0, then it is guaranteed to become 1 very soon, so don't do anything in that case.
WITHOUT_CLASSIFICATION	{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	fonts = getToolkit().getFontList();
WITHOUT_CLASSIFICATION	{{{ getSelectedFont() method
WITHOUT_CLASSIFICATION	for SPACE or S+SPACE we pass the key typed since international keyboards sometimes produce a KEY_PRESSED SPACE but not a KEY_TYPED SPACE, eg if you have to do a "<space> to insert ".
WITHOUT_CLASSIFICATION	Log.log(Log.ERROR,this,"Using deprecated Toolkit.getFontList()");
WITHOUT_CLASSIFICATION	{{{ getFontList() method
WITHOUT_CLASSIFICATION	{{{ addTranslation() method
WITHOUT_CLASSIFICATION	{{{ createTextFieldAndListPanel() method
WITHOUT_CLASSIFICATION	on MacOS, A+ can be user input
WITHOUT_CLASSIFICATION	{{{ translateKeyEvent() method
WITHOUT_CLASSIFICATION	on MacOS, A+ can be user input
WITHOUT_CLASSIFICATION	{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	{{{ parseKey() method
WITHOUT_CLASSIFICATION	{{{ setModifierMapping() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	M+ discarded by key event workaround!
WITHOUT_CLASSIFICATION	== C+
WITHOUT_CLASSIFICATION	== A+
WITHOUT_CLASSIFICATION	== M+
WITHOUT_CLASSIFICATION	{{{ DockableWindowCompare class
WITHOUT_CLASSIFICATION	{{{ register() method
WITHOUT_CLASSIFICATION	== S+
WITHOUT_CLASSIFICATION	removing last component, so remove border
WITHOUT_CLASSIFICATION	{{{ Key class
WITHOUT_CLASSIFICATION	{{{ Create button
WITHOUT_CLASSIFICATION	{{{ PanelWindowContainer constructor
WITHOUT_CLASSIFICATION	{{{ setDimension() method
WITHOUT_CLASSIFICATION	{{{ Button box setup
WITHOUT_CLASSIFICATION	{{{ isVisible() method
WITHOUT_CLASSIFICATION	{{{ unregister() method
WITHOUT_CLASSIFICATION	{{{ showMostRecent() method
WITHOUT_CLASSIFICATION	{{{ getCurrent() method
WITHOUT_CLASSIFICATION	{{{ show() method
WITHOUT_CLASSIFICATION	{{{ sortDockables() method
WITHOUT_CLASSIFICATION	{{{ getDimension() method
WITHOUT_CLASSIFICATION	{{{ MenuMouseHandler class
WITHOUT_CLASSIFICATION	{{{ getDockables() method
WITHOUT_CLASSIFICATION	{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	remember the most recent dockable
WITHOUT_CLASSIFICATION	{{{ DockBorder class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ paintBorder() method
WITHOUT_CLASSIFICATION	{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	{{{ removeLayoutComponent() method }}}
WITHOUT_CLASSIFICATION	{{{ DockBorder constructor
WITHOUT_CLASSIFICATION	{{{ RotatedTextIcon class
WITHOUT_CLASSIFICATION	{{{ paintHorizBorder() method
WITHOUT_CLASSIFICATION	{{{ getIconHeight() method
WITHOUT_CLASSIFICATION	{{{ paintVertBorder() method
WITHOUT_CLASSIFICATION	{{{ RotatedTextIcon constructor
WITHOUT_CLASSIFICATION	{{{ updateColors() method
WITHOUT_CLASSIFICATION	}}} {{{ Counterclockwise rotation
WITHOUT_CLASSIFICATION	height = (int)glyphs.getLogicalBounds().getHeight();
WITHOUT_CLASSIFICATION	{{{ paintIcon() method
WITHOUT_CLASSIFICATION	{{{ getIconWidth() method
WITHOUT_CLASSIFICATION	{{{ DockablePanel constructor
WITHOUT_CLASSIFICATION	{{{ No rotation
WITHOUT_CLASSIFICATION	{{{ ButtonLayout class
WITHOUT_CLASSIFICATION	}}} {{{ Clockwise rotation
WITHOUT_CLASSIFICATION	nothing 'cept close box
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method }}}
WITHOUT_CLASSIFICATION	{{{ setBounds() method
WITHOUT_CLASSIFICATION	{{{ getWindowContainer() method
WITHOUT_CLASSIFICATION	{{{ DockablePanel class
WITHOUT_CLASSIFICATION	{{{ ResizeMouseHandler class
WITHOUT_CLASSIFICATION	{{{ showDockable() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	collapsed
WITHOUT_CLASSIFICATION	{{{ Top...
WITHOUT_CLASSIFICATION	{{{ Top...
WITHOUT_CLASSIFICATION	}}} {{{ Left...
WITHOUT_CLASSIFICATION	}}} {{{ Left...
WITHOUT_CLASSIFICATION	}}} {{{ Bottom...
WITHOUT_CLASSIFICATION	}}} {{{ Bottom...
WITHOUT_CLASSIFICATION	}}} {{{ Right...
WITHOUT_CLASSIFICATION	}}} {{{ Right...
WITHOUT_CLASSIFICATION	can't happen?
WITHOUT_CLASSIFICATION	{{{ mouseExited() method
WITHOUT_CLASSIFICATION	{{{ getCursor() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ register() method
WITHOUT_CLASSIFICATION	{{{ unregister() method
WITHOUT_CLASSIFICATION	{{{ show() method
WITHOUT_CLASSIFICATION	{{{ isVisible() method
WITHOUT_CLASSIFICATION	{{{ FloatingWindowContainer constructor
WITHOUT_CLASSIFICATION	{{{ LogViewer constructor
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	{{{ getExpansion() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ checkForExistingAbbrev() method
WITHOUT_CLASSIFICATION	{{{ LogList class
WITHOUT_CLASSIFICATION	{{{ setEnabled() method
WITHOUT_CLASSIFICATION	{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	{{{ updateUI() method
WITHOUT_CLASSIFICATION	{{{ setBorderPainted() method
WITHOUT_CLASSIFICATION	{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	{{{ isOpaque() method
WITHOUT_CLASSIFICATION	{{{ revalidate() method
WITHOUT_CLASSIFICATION	{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	user asks to remove non-existent
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	to avoid data loss, only do this if the above completed successfully
WITHOUT_CLASSIFICATION	{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getModel() method
WITHOUT_CLASSIFICATION	case KeyEvent.VK_SEPARATOR:
WITHOUT_CLASSIFICATION	{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	{{{ handleKey() method
WITHOUT_CLASSIFICATION	{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	{{{ _addKeyBinding() method
WITHOUT_CLASSIFICATION	Don't beep if the user presses some key we don't know about unless a prefix is active. Otherwise it will beep when caps lock is pressed, etc.
WITHOUT_CLASSIFICATION	{{{ saveHistory() method
WITHOUT_CLASSIFICATION	F10 should be passed on, but C+e F10 shouldn't
WITHOUT_CLASSIFICATION	{{{ getSize() method
WITHOUT_CLASSIFICATION	{{{ parseKeyStroke() method
WITHOUT_CLASSIFICATION	{{{ HistoryModel constructor
WITHOUT_CLASSIFICATION	Stores prefix name in bindings hashtable
WITHOUT_CLASSIFICATION	{{{ setCurrentBindings() method
WITHOUT_CLASSIFICATION	{{{ loadHistory() method
WITHOUT_CLASSIFICATION	{{{ addItem() method
WITHOUT_CLASSIFICATION	{{{ ToolBarManager constructor
WITHOUT_CLASSIFICATION	{{{ getItem() method
WITHOUT_CLASSIFICATION	{{{ getElementAt() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,HistoryModel.class,fnf);
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ addToolBar() method
WITHOUT_CLASSIFICATION	{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ HelpSearchPanel constructor
WITHOUT_CLASSIFICATION	See if we should place this toolbar before any others
WITHOUT_CLASSIFICATION	select the appropriate tree node.
WITHOUT_CLASSIFICATION	Place the toolbar at the bottom of the group
WITHOUT_CLASSIFICATION	{{{ ResultIcon class
WITHOUT_CLASSIFICATION	EnhancedDialog implementation
WITHOUT_CLASSIFICATION	we later use this to compute a relative ranking
WITHOUT_CLASSIFICATION	end EnhancedDialog implementation
WITHOUT_CLASSIFICATION	what to do?
WITHOUT_CLASSIFICATION	{{{ ResultRenderer class
WITHOUT_CLASSIFICATION	multiple files w/ word bonus
WITHOUT_CLASSIFICATION	{{{ Result class
WITHOUT_CLASSIFICATION	{{{ ResultCompare class
WITHOUT_CLASSIFICATION	turn the rankings into relative rankings, from 1 to 4
WITHOUT_CLASSIFICATION	{{{ gotoURL() method
WITHOUT_CLASSIFICATION	{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	{{{ getBaseURL() method
WITHOUT_CLASSIFICATION	don't show loading msg because we won't receive a propertyChanged
WITHOUT_CLASSIFICATION	{{{ queueTOCReload() method
WITHOUT_CLASSIFICATION	{{{ getShortURL() method
WITHOUT_CLASSIFICATION	{{{ Instance members
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ getFile() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	reset default cursor so that the hand cursor doesn't stick around
WITHOUT_CLASSIFICATION	the TOC pane looks up user's guide URLs relative to the doc directory...
WITHOUT_CLASSIFICATION	{{{ HelpIndex constructor
WITHOUT_CLASSIFICATION	{{{ indexJAR() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() class
WITHOUT_CLASSIFICATION	{{{ HelpIndex constructorpublic HelpIndex(String fileListPath, String wordIndexPath){this();} }}}
WITHOUT_CLASSIFICATION	{{{ LinkHandler class
WITHOUT_CLASSIFICATION	{{{ HelpFile class
WITHOUT_CLASSIFICATION	{{{ hyperlinkUpdate() method
WITHOUT_CLASSIFICATION	{{{ indexEditorHelp() method
WITHOUT_CLASSIFICATION	{{{ PropertyChangeHandler class
WITHOUT_CLASSIFICATION	|| lname.endsWith(".txt")
WITHOUT_CLASSIFICATION	{{{ ignoreWord() method
WITHOUT_CLASSIFICATION	{{{ indexDirectory() method
WITHOUT_CLASSIFICATION	how much an occurrence in the title is worth
WITHOUT_CLASSIFICATION	{{{ indexStream() method
WITHOUT_CLASSIFICATION	{{{ indexURL() method
WITHOUT_CLASSIFICATION	{{{ lookupWord() method
WITHOUT_CLASSIFICATION	{{{ addWord() method
WITHOUT_CLASSIFICATION	the word
WITHOUT_CLASSIFICATION	{{{ Word class
WITHOUT_CLASSIFICATION	{{{ HelpTOCPanel constructor
WITHOUT_CLASSIFICATION	files it occurs in
WITHOUT_CLASSIFICATION	{{{ createTOC() method
WITHOUT_CLASSIFICATION	{{{ HelpNode class
WITHOUT_CLASSIFICATION	{{{ selectNode() method
WITHOUT_CLASSIFICATION	so that HelpViewer constructor doesn't try to expand
WITHOUT_CLASSIFICATION	{{{ createNode() method
WITHOUT_CLASSIFICATION	{{{ loadTOC() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	{{{ TOCHandler constructor
WITHOUT_CLASSIFICATION	{{{ Private members used to mark words to ignore (see constructor for the list)
WITHOUT_CLASSIFICATION	{{{ TOCHandler class
WITHOUT_CLASSIFICATION	{{{ HelpNode constructor
WITHOUT_CLASSIFICATION	ToolTipManager ttm = ToolTipManager.sharedInstance();
WITHOUT_CLASSIFICATION	{{{ TOCTree constructor
WITHOUT_CLASSIFICATION	{{{ TOCTree class
WITHOUT_CLASSIFICATION	case MouseEvent.MOUSE_ENTERED:toolTipInitialDelay = ttm.getInitialDelay();toolTipReshowDelay = ttm.getReshowDelay();ttm.setInitialDelay(200);ttm.setReshowDelay(0);super.processMouseEvent(evt);break;case MouseEvent.MOUSE_EXITED:ttm.setInitialDelay(toolTipInitialDelay);ttm.setReshowDelay(toolTipReshowDelay);super.processMouseEvent(evt);break;
WITHOUT_CLASSIFICATION	{{{ cellRectIsVisible() method
WITHOUT_CLASSIFICATION	{{{ TOCCellRenderer class
WITHOUT_CLASSIFICATION	{{{ PluginCompare class
WITHOUT_CLASSIFICATION	{{{ VFS methods
WITHOUT_CLASSIFICATION	{{{ getFileVFS() method
WITHOUT_CLASSIFICATION	{{{ getUrlVFS() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	in new api, protocol always equals name
WITHOUT_CLASSIFICATION	{{{ getVFSByName() method
WITHOUT_CLASSIFICATION	{{{ getFilesystems() method
WITHOUT_CLASSIFICATION	{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	{{{ getVFSForProtocol() method
WITHOUT_CLASSIFICATION	{{{ getVFSs() method
WITHOUT_CLASSIFICATION	{{{ getVFSForPath() method
WITHOUT_CLASSIFICATION	we were the first to add an update; add update sending runnable to AWT thread
WITHOUT_CLASSIFICATION	{{{ registerVFS() method
WITHOUT_CLASSIFICATION	{{{ errorOccurred() method
WITHOUT_CLASSIFICATION	{{{ I/O request methods
WITHOUT_CLASSIFICATION	{{{ sendVFSUpdate() method
WITHOUT_CLASSIFICATION	{{{ getIOThreadPool() method
WITHOUT_CLASSIFICATION	the vfs browser has what you might call a design flaw, it doesn't update properly unless the vfs update for a parent arrives before any updates for the children. sorting the list alphanumerically guarantees this.
WITHOUT_CLASSIFICATION	{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	don't send two updates for the same path
WITHOUT_CLASSIFICATION	if we are already in the AWT thread, take a shortcut
WITHOUT_CLASSIFICATION	{{{ SendVFSUpdatesSafely class
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	{{{ UrlVFS constructor
WITHOUT_CLASSIFICATION	{{{ _canonPath() method
WITHOUT_CLASSIFICATION	{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	Check for backup.directory, and create that directory if it doesn't exist
WITHOUT_CLASSIFICATION	{{{ FileVFS method
WITHOUT_CLASSIFICATION	{{{ LocalDirectoryEntry class
WITHOUT_CLASSIFICATION	{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	{{{ Check if file is valid
WITHOUT_CLASSIFICATION	{{{ _rename() method
WITHOUT_CLASSIFICATION	use system default short format
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ _backup() method
WITHOUT_CLASSIFICATION	do some platforms throw exceptions if the file does not exist when we ask for the canonical path?
WITHOUT_CLASSIFICATION	this is needed because on OS X renaming to a non-existent directory causes problems
WITHOUT_CLASSIFICATION	Fetch properties
WITHOUT_CLASSIFICATION	{{{ _mkdir() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ setPermissions() method
WITHOUT_CLASSIFICATION	{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	{{{ addToFavorites() method
WITHOUT_CLASSIFICATION	{{{ Permission preservation code
WITHOUT_CLASSIFICATION	{{{ getPermissions() method
WITHOUT_CLASSIFICATION	{{{ FavoritesVFS constructor
WITHOUT_CLASSIFICATION	{{{ saveFavorites() method
WITHOUT_CLASSIFICATION	{{{ loadFavorites() method
WITHOUT_CLASSIFICATION	don't want it to show "0 bytes" for size, etc.
WITHOUT_CLASSIFICATION	{{{ listRoots() method
WITHOUT_CLASSIFICATION	{{{ getFavorites() method
WITHOUT_CLASSIFICATION	{{{ FileRootsVFS constructor
WITHOUT_CLASSIFICATION	{{{ FavoritesEntry class
WITHOUT_CLASSIFICATION	JDK 1.4 adds methods to obtain a drive letter label and list the desktop on Windows
WITHOUT_CLASSIFICATION	Make sure people don't do stupid things like putting files in /Volumes
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	{{{ getFileName() method
WITHOUT_CLASSIFICATION	{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	{{{ insert() method
WITHOUT_CLASSIFICATION	{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	{{{ _canonPath() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	don't want it to show "0 bytes" for size, etc.
WITHOUT_CLASSIFICATION	{{{ showBrowseDialog() method
WITHOUT_CLASSIFICATION	{{{ RootsEntry class
WITHOUT_CLASSIFICATION	so an empty cd drive is not reported as a file
WITHOUT_CLASSIFICATION	REMIND: calling isDirectory() on a floppy drive displays stupid I/O error dialog box on Windows
WITHOUT_CLASSIFICATION	reasonable defaults (?)
WITHOUT_CLASSIFICATION	to prevent windows looking for a disk in the floppy drive
WITHOUT_CLASSIFICATION	{{{ Capabilities
WITHOUT_CLASSIFICATION	this ensures that getFileParent("protocol:"), for example, is "protocol:" and not "".
WITHOUT_CLASSIFICATION	{{{ Extended attributes
WITHOUT_CLASSIFICATION	{{{ getCapabilities() method
WITHOUT_CLASSIFICATION	{{{ VFS constructor
WITHOUT_CLASSIFICATION	{{{ VFS constructor
WITHOUT_CLASSIFICATION	{{{ VFS constructor
WITHOUT_CLASSIFICATION	don't want getFileName("roots:") to return ""
WITHOUT_CLASSIFICATION	{{{ getExtendedAttributes() method
WITHOUT_CLASSIFICATION	this makes HyperSearch much faster
WITHOUT_CLASSIFICATION	{{{ getTwoStageSaveName() method
WITHOUT_CLASSIFICATION	ignore last character of path to properly handle paths like /foo/bar/
WITHOUT_CLASSIFICATION	When doing a 'save as', the path to save to (path) will not be the same as the buffer's previous path (buffer.getPath()). In that case, we want to create a backup of the new path, even if the old path was backed up as well (BACKED_UP property set)
WITHOUT_CLASSIFICATION	{{{ createVFSSession() method
WITHOUT_CLASSIFICATION	A method name that starts with _ requires a session object
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	{{{ _delete() method
WITHOUT_CLASSIFICATION	{{{ _rename() method
WITHOUT_CLASSIFICATION	{{{ _mkdir() method
WITHOUT_CLASSIFICATION	{{{ _backup() method
WITHOUT_CLASSIFICATION	{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	{{{ _endVFSSession() method
WITHOUT_CLASSIFICATION	{{{ DirectoryEntry class
WITHOUT_CLASSIFICATION	{{{ File types
WITHOUT_CLASSIFICATION	{{{ getDefaultColorFor() method
WITHOUT_CLASSIFICATION	{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	{{{ ColorEntry class
WITHOUT_CLASSIFICATION	maintain backwards compatibility
WITHOUT_CLASSIFICATION	{{{ DirectoryEntryCompare class
WITHOUT_CLASSIFICATION	{{{ getColor() method
WITHOUT_CLASSIFICATION	skip autosave files
WITHOUT_CLASSIFICATION	{{{ DirectoryProvider constructor
WITHOUT_CLASSIFICATION	resolve symlinks to avoid loops
WITHOUT_CLASSIFICATION	{{{ loadColors() method
WITHOUT_CLASSIFICATION	{{{ ActionListeners
WITHOUT_CLASSIFICATION	skip backup files
WITHOUT_CLASSIFICATION	for filtering out backups
WITHOUT_CLASSIFICATION	skip marker files
WITHOUT_CLASSIFICATION	current.addSeparator();
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ old API
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ ActionListeners
WITHOUT_CLASSIFICATION	current.addSeparator();
WITHOUT_CLASSIFICATION	We build a set of lists, each list contains plugin menu items that begin with a given letter.
WITHOUT_CLASSIFICATION	{{{ addToLetterMap() method
WITHOUT_CLASSIFICATION	Sort each letter
WITHOUT_CLASSIFICATION	if less than 20 items, put them directly in the menu
WITHOUT_CLASSIFICATION	{{{ MarkersMenuItem class
WITHOUT_CLASSIFICATION	Collect blocks of up to maxItems of consecutive letters
WITHOUT_CLASSIFICATION	{{{ MarkersMenuItem constructor
WITHOUT_CLASSIFICATION	{{{ EnhancedMenuItem constructor
WITHOUT_CLASSIFICATION	{{{ EnhancedCheckBoxMenuItem constructor
WITHOUT_CLASSIFICATION	{{{ Model class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ menuSelected() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getShortcut() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ finalize() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ paint() method
WITHOUT_CLASSIFICATION	{{{ ViewUpdate constructor
WITHOUT_CLASSIFICATION	{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	{{{ createMacrosMenu() method
WITHOUT_CLASSIFICATION	{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	{{{ ActionListener...
WITHOUT_CLASSIFICATION	{{{ ActionListener...
WITHOUT_CLASSIFICATION	{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	{{{ MouseListener...
WITHOUT_CLASSIFICATION	{{{ MouseListener...
WITHOUT_CLASSIFICATION	{{{ EditBusStub class
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	EnhancedMenu has a reference to EditBusStub, but not the other way around. So when the EnhancedMenu is being garbage collected its finalize() method removes the EditBusStub from the edit bus.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ getDockable() method
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	{{{ getWhat() method
WITHOUT_CLASSIFICATION	{{{ getMenuName() method
WITHOUT_CLASSIFICATION	{{{ Message types
WITHOUT_CLASSIFICATION	{{{ Message types
WITHOUT_CLASSIFICATION	{{{ Message types
WITHOUT_CLASSIFICATION	{{{ DockableWindowUpdate constructor
WITHOUT_CLASSIFICATION	{{{ BufferUpdate constructor
WITHOUT_CLASSIFICATION	{{{ PluginUpdate constructor
WITHOUT_CLASSIFICATION	{{{ isExiting() method
WITHOUT_CLASSIFICATION	{{{ BrowserColorsOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ DynamicMenuChanged constructor
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ BrowserColorsModel class
WITHOUT_CLASSIFICATION	{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ moveUp() method
WITHOUT_CLASSIFICATION	{{{ moveUp() method
WITHOUT_CLASSIFICATION	{{{ moveDown() method
WITHOUT_CLASSIFICATION	{{{ moveDown() method
WITHOUT_CLASSIFICATION	{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	Text color
WITHOUT_CLASSIFICATION	{{{ TextAreaOptionPane constructor
WITHOUT_CLASSIFICATION	Multiple selection color
WITHOUT_CLASSIFICATION	Font
WITHOUT_CLASSIFICATION	Fractional font metrics
WITHOUT_CLASSIFICATION	Background color
WITHOUT_CLASSIFICATION	Line highlight
WITHOUT_CLASSIFICATION	Caret color, caret blink, block caret
WITHOUT_CLASSIFICATION	Wrap guide
WITHOUT_CLASSIFICATION	Selection color
WITHOUT_CLASSIFICATION	Skip certain actions this way
WITHOUT_CLASSIFICATION	Structure highlight
WITHOUT_CLASSIFICATION	Electric borders
WITHOUT_CLASSIFICATION	EOL markers
WITHOUT_CLASSIFICATION	{{{ EditingOptionPane constructor
WITHOUT_CLASSIFICATION	Anti-aliasing
WITHOUT_CLASSIFICATION	redraw the whole table because a second shortcut might have changed, too
WITHOUT_CLASSIFICATION	{{{ selectMode() method
WITHOUT_CLASSIFICATION	{{{ saveMode() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ updateButtons() method
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	{{{ ModeProperties class
WITHOUT_CLASSIFICATION	don't do anything if the user didn't change any settings
WITHOUT_CLASSIFICATION	{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	need to call Mode.init() if the file name or first line globs change
WITHOUT_CLASSIFICATION	Old API
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	initialize the Plugins branch of the options tree
WITHOUT_CLASSIFICATION	{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	{{{ Ceate icons list
WITHOUT_CLASSIFICATION	Query plugins for option panes
WITHOUT_CLASSIFICATION	{{{ NoPluginsPane class
WITHOUT_CLASSIFICATION	only add the Plugins branch if there are OptionPanes
WITHOUT_CLASSIFICATION	Show toolbar
WITHOUT_CLASSIFICATION	{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	{{{ ToolBarOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Create buttons
WITHOUT_CLASSIFICATION	}}} /}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	protected members
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ ListHandler class
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	{{{ ButtonCompare class
WITHOUT_CLASSIFICATION	{{{ IconListEntry class
WITHOUT_CLASSIFICATION	{{{ Button class
WITHOUT_CLASSIFICATION	{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	{{{ ButtonCellRenderer class
WITHOUT_CLASSIFICATION	{{{ IconCellRenderer class
WITHOUT_CLASSIFICATION	Icon selection
WITHOUT_CLASSIFICATION	{{{ ToolBarEditDialog class
WITHOUT_CLASSIFICATION	{{{ updateList() method
WITHOUT_CLASSIFICATION	Icon selection
WITHOUT_CLASSIFICATION	{{{ updateList() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	{{{ StyleOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ createStyleTableScroller() method
WITHOUT_CLASSIFICATION	{{{ StyleTableModel class
WITHOUT_CLASSIFICATION	{{{ createStyleTableModel() method
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	{{{ StyleChoice class
WITHOUT_CLASSIFICATION	{{{ StyleEditor class
WITHOUT_CLASSIFICATION	{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	{{{ getStyle() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	Text color
WITHOUT_CLASSIFICATION	Background color
WITHOUT_CLASSIFICATION	Structure highlight
WITHOUT_CLASSIFICATION	{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	{{{ StyleChoice class
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	for sorting
WITHOUT_CLASSIFICATION	{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	{{{ getStyle() method
WITHOUT_CLASSIFICATION	Text font
WITHOUT_CLASSIFICATION	{{{ GutterOptionPane constructor
WITHOUT_CLASSIFICATION	Line numbering
WITHOUT_CLASSIFICATION	Number alignment
WITHOUT_CLASSIFICATION	Border width
WITHOUT_CLASSIFICATION	Marker highlight
WITHOUT_CLASSIFICATION	gutterBorderWidth = new JTextField(jEdit.getProperty("view.gutter.borderWidth"));addComponent(jEdit.getProperty("options.gutter.borderWidth"),gutterBorderWidth);
WITHOUT_CLASSIFICATION	Current line highlight
WITHOUT_CLASSIFICATION	unfocused border color
WITHOUT_CLASSIFICATION	Highlight interval and color
WITHOUT_CLASSIFICATION	Fold marker color
WITHOUT_CLASSIFICATION	Focused border color
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	Background color
WITHOUT_CLASSIFICATION	Status bar visible
WITHOUT_CLASSIFICATION	{{{ StatusBarOptionPane constructor
WITHOUT_CLASSIFICATION	Edit mode
WITHOUT_CLASSIFICATION	Wrap
WITHOUT_CLASSIFICATION	Foreground color
WITHOUT_CLASSIFICATION	Fold mode
WITHOUT_CLASSIFICATION	Caret status
WITHOUT_CLASSIFICATION	Memory status
WITHOUT_CLASSIFICATION	Multi select
WITHOUT_CLASSIFICATION	Encoding
WITHOUT_CLASSIFICATION	Overwrite
WITHOUT_CLASSIFICATION	Memory background color
WITHOUT_CLASSIFICATION	Rect select
WITHOUT_CLASSIFICATION	Line seperator
WITHOUT_CLASSIFICATION	{{{ MouseOptionPane constructor
WITHOUT_CLASSIFICATION	Memory foreground color
WITHOUT_CLASSIFICATION	Clock
WITHOUT_CLASSIFICATION	Non word character selection behavior
WITHOUT_CLASSIFICATION	Text drag and drop
WITHOUT_CLASSIFICATION	Middle mouse button click pastes % register
WITHOUT_CLASSIFICATION	Gutter mouse actions
WITHOUT_CLASSIFICATION	{{{ FirewallOptionPane constructor
WITHOUT_CLASSIFICATION	checkbox
WITHOUT_CLASSIFICATION	checkbox
WITHOUT_CLASSIFICATION	proxy host
WITHOUT_CLASSIFICATION	proxy host
WITHOUT_CLASSIFICATION	proxy port
WITHOUT_CLASSIFICATION	proxy port
WITHOUT_CLASSIFICATION	proxy username
WITHOUT_CLASSIFICATION	proxy password
WITHOUT_CLASSIFICATION	no proxy for
WITHOUT_CLASSIFICATION	{{{ DockingOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	{{{ createWindowTableScroller() method
WITHOUT_CLASSIFICATION	{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	{{{ createWindowModel() method
WITHOUT_CLASSIFICATION	{{{ DockPositionCellRenderer class
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ WindowTableModel class
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ WindowCompare class
WITHOUT_CLASSIFICATION	{{{ WindowCompare class
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	{{{ AutosaveBackupOptionPane constructor
WITHOUT_CLASSIFICATION	initialize the jEdit branch of the options tree
WITHOUT_CLASSIFICATION	Backup on every save
WITHOUT_CLASSIFICATION	Autosave interval
WITHOUT_CLASSIFICATION	Install location
WITHOUT_CLASSIFICATION	Backup count
WITHOUT_CLASSIFICATION	Download mirror
WITHOUT_CLASSIFICATION	Backup directory
WITHOUT_CLASSIFICATION	{{{ DownloadMirrorsThread class
WITHOUT_CLASSIFICATION	Backup filename prefix
WITHOUT_CLASSIFICATION	Update mirror list
WITHOUT_CLASSIFICATION	Backup suffix
WITHOUT_CLASSIFICATION	Insert code to update the plugin managers list here later
WITHOUT_CLASSIFICATION	Download source
WITHOUT_CLASSIFICATION	Delete downloaded files
WITHOUT_CLASSIFICATION	{{{ MirrorModel class
WITHOUT_CLASSIFICATION	{{{ AbbrevsOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ SingleSelectionModel class
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ remove() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ Renderer class
WITHOUT_CLASSIFICATION	{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ edit() method
WITHOUT_CLASSIFICATION	{{{ toHashtable() method
WITHOUT_CLASSIFICATION	{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	{{{ toHashtable() method
WITHOUT_CLASSIFICATION	{{{ AbbrevsModel class
WITHOUT_CLASSIFICATION	{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	{{{ Abbrev class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	Ignore case when sorting
WITHOUT_CLASSIFICATION	{{{ BrowserOptionPane constructor
WITHOUT_CLASSIFICATION	Show menu bar
WITHOUT_CLASSIFICATION	Default directory
WITHOUT_CLASSIFICATION	split VFSFileDialog horizontally
WITHOUT_CLASSIFICATION	Show tool bar
WITHOUT_CLASSIFICATION	Show icons
WITHOUT_CLASSIFICATION	Mix files and directories
WITHOUT_CLASSIFICATION	Show hidden files
WITHOUT_CLASSIFICATION	Beep on search auto wrap
WITHOUT_CLASSIFICATION	{{{ ViewOptionPane constructor
WITHOUT_CLASSIFICATION	Double-click close
WITHOUT_CLASSIFICATION	Show full path
WITHOUT_CLASSIFICATION	{{{ AppearanceOptionPane constructor
WITHOUT_CLASSIFICATION	View dock layout
WITHOUT_CLASSIFICATION	Show search bar
WITHOUT_CLASSIFICATION	Primary Metal L&F font
WITHOUT_CLASSIFICATION	Show buffer switcher
WITHOUT_CLASSIFICATION	Menu spillover count
WITHOUT_CLASSIFICATION	Look and feel
WITHOUT_CLASSIFICATION	History count
WITHOUT_CLASSIFICATION	Secondary Metal L&F font
WITHOUT_CLASSIFICATION	Use jEdit colors in all text components
WITHOUT_CLASSIFICATION	Show tip of the day
WITHOUT_CLASSIFICATION	Show splash screen
WITHOUT_CLASSIFICATION	Decorate frames with look and feel (JDK 1.4 only)
WITHOUT_CLASSIFICATION	Decorate dialogs with look and feel (JDK 1.4 only)
WITHOUT_CLASSIFICATION	{{{ PrintOptionPane constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _init() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ _save() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ getEntry() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	Font
WITHOUT_CLASSIFICATION	Line numbering
WITHOUT_CLASSIFICATION	Tab size
WITHOUT_CLASSIFICATION	Header
WITHOUT_CLASSIFICATION	Persistent markers
WITHOUT_CLASSIFICATION	Footer
WITHOUT_CLASSIFICATION	{{{ GeneralOptionPane constructor
WITHOUT_CLASSIFICATION	Color
WITHOUT_CLASSIFICATION	Auto detect encoding
WITHOUT_CLASSIFICATION	Line separator
WITHOUT_CLASSIFICATION	Sort recent file list
WITHOUT_CLASSIFICATION	Force 1.3 print dialog
WITHOUT_CLASSIFICATION	Default file encoding
WITHOUT_CLASSIFICATION	Check mod status on focus
WITHOUT_CLASSIFICATION	Create the plugin table
WITHOUT_CLASSIFICATION	Recent file list size
WITHOUT_CLASSIFICATION	Save caret positions
WITHOUT_CLASSIFICATION	Sort buffers by names
WITHOUT_CLASSIFICATION	Session management
WITHOUT_CLASSIFICATION	Confirm save all
WITHOUT_CLASSIFICATION	Sort buffers
WITHOUT_CLASSIFICATION	Two-stage save
WITHOUT_CLASSIFICATION	{{{ ManagePanel constructor
WITHOUT_CLASSIFICATION	Strip trailing EOL
WITHOUT_CLASSIFICATION	Create button panel
WITHOUT_CLASSIFICATION	{{{ showListConfirm() method
WITHOUT_CLASSIFICATION	{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	{{{ Mirror class
WITHOUT_CLASSIFICATION	{{{ setSortType() method
WITHOUT_CLASSIFICATION	{{{ unloadPluginJARWithDialog() method
WITHOUT_CLASSIFICATION	{{{ loadExtraJARsIfNecessary() method
WITHOUT_CLASSIFICATION	{{{ HelpButton class
WITHOUT_CLASSIFICATION	{{{ transitiveClosure() method
WITHOUT_CLASSIFICATION	{{{ TextRenderer class
WITHOUT_CLASSIFICATION	{{{ EntryCompare class
WITHOUT_CLASSIFICATION	{{{ HideLibrariesButton class
WITHOUT_CLASSIFICATION	{{{ MirrorCompare class
WITHOUT_CLASSIFICATION	{{{ RemoveButton class
WITHOUT_CLASSIFICATION	{{{ MirrorList constructor
WITHOUT_CLASSIFICATION	{{{ finished() method
WITHOUT_CLASSIFICATION	{{{ PluginList constructor
WITHOUT_CLASSIFICATION	{{{ addPlugin() method
WITHOUT_CLASSIFICATION	{{{ addPluginSet() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	end HandlerBase implementation
WITHOUT_CLASSIFICATION	{{{ dump() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ finished() method
WITHOUT_CLASSIFICATION	{{{ Dependency class
WITHOUT_CLASSIFICATION	after the entire list is loaded, fill out plugin field in dependencies
WITHOUT_CLASSIFICATION	{{{ PluginSet class
WITHOUT_CLASSIFICATION	branch.satisfyDependencies(roster,installDirectory, downloadSource);
WITHOUT_CLASSIFICATION	{{{ Plugin class
WITHOUT_CLASSIFICATION	String installed; String installedVersion;
WITHOUT_CLASSIFICATION	{{{ Branch class
WITHOUT_CLASSIFICATION	Force the install tab to refresh for possible change of mirror
WITHOUT_CLASSIFICATION	only used if what is "plugin"
WITHOUT_CLASSIFICATION	{{{ getPluginList() method
WITHOUT_CLASSIFICATION	{{{ getInstance() method
WITHOUT_CLASSIFICATION	{{{ showPluginManager() method
WITHOUT_CLASSIFICATION	Setup panes
WITHOUT_CLASSIFICATION	{{{ PluginManager constructor
WITHOUT_CLASSIFICATION	{{{ updatePluginList() method
WITHOUT_CLASSIFICATION	Create the buttons
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	{{{ getRowCount() method
WITHOUT_CLASSIFICATION	{{{ getColumnName() method
WITHOUT_CLASSIFICATION	{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	{{{ getValueAt() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	{{{ setValueAt() method
WITHOUT_CLASSIFICATION	{{{ sort() method
WITHOUT_CLASSIFICATION	{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	{{{ setSortType() method
WITHOUT_CLASSIFICATION	{{{ EntryCompare class
WITHOUT_CLASSIFICATION	{{{ PluginInfoBox class
WITHOUT_CLASSIFICATION	{{{ ListUpdater class
WITHOUT_CLASSIFICATION	Create buttons
WITHOUT_CLASSIFICATION	{{{ InstallPanel constructor
WITHOUT_CLASSIFICATION	Setup the table
WITHOUT_CLASSIFICATION	{{{ updateModel() method
WITHOUT_CLASSIFICATION	Create description
WITHOUT_CLASSIFICATION	{{{ SizeLabel class
WITHOUT_CLASSIFICATION	{{{ formatSize() method
WITHOUT_CLASSIFICATION	{{{ setSelectAll() method
WITHOUT_CLASSIFICATION	{{{ SelectallButton class
WITHOUT_CLASSIFICATION	{{{ isDownloadingList() method
WITHOUT_CLASSIFICATION	{{{ InstallButton class
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Constructor
WITHOUT_CLASSIFICATION	{{{ Variables
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ WindowHandler class
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ PluginManagerProgress constructor
WITHOUT_CLASSIFICATION	{{{ TextRenderer
WITHOUT_CLASSIFICATION	{{{ RosterThread class
WITHOUT_CLASSIFICATION	{{{ endDocument() method
WITHOUT_CLASSIFICATION	{{{ setValue() method
WITHOUT_CLASSIFICATION	{{{ BufferPrintable constructor
WITHOUT_CLASSIFICATION	{{{ done() method
WITHOUT_CLASSIFICATION	progress value as of start of current task
WITHOUT_CLASSIFICATION	Change any white text to black
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	buffer.readLock();
WITHOUT_CLASSIFICATION	buffer.readUnlock();
WITHOUT_CLASSIFICATION	{{{ printPage() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ print() method
WITHOUT_CLASSIFICATION	{{{ calculate tab size
WITHOUT_CLASSIFICATION	{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	{{{ determine line number width
WITHOUT_CLASSIFICATION	{{{ paintHeader() method
WITHOUT_CLASSIFICATION	the +1's ensure that 99 gets 3 digits, 103 gets 4 digits, and so on.
WITHOUT_CLASSIFICATION	no need to always keep the same job name for every printout.
WITHOUT_CLASSIFICATION	now that we know how many chars there are, get the width.
WITHOUT_CLASSIFICATION	{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	{{{ paintFooter() method
WITHOUT_CLASSIFICATION	{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	{{{ PrintTabExpander class
WITHOUT_CLASSIFICATION	{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	{{{ PrintTabExpander constructor
WITHOUT_CLASSIFICATION	{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	format.setOrientation(PageFormat.PORTRAIT);
WITHOUT_CLASSIFICATION	{{{ pageSetup() method
WITHOUT_CLASSIFICATION	{{{ pageSetup() method
WITHOUT_CLASSIFICATION	for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	convert from PrintRequestAttributeSet to the pageFormat
WITHOUT_CLASSIFICATION	{{{ savePrintSpec() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ update() method
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	doesnt exist?? pf.setOrientation(PageFormat.REVERSE_PORTRAIT); then just do the next best thing
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	{{{ getField() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	{{{ Occur constructor
WITHOUT_CLASSIFICATION	{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	cached for speed
WITHOUT_CLASSIFICATION	{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	{{{ goTo() method
WITHOUT_CLASSIFICATION	{{{ Create the timer used by incremental search
WITHOUT_CLASSIFICATION	{{{ HyperSearchResult constructor
WITHOUT_CLASSIFICATION	{{{ addOccur() method
WITHOUT_CLASSIFICATION	{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	{{{ pathEquals() method
WITHOUT_CLASSIFICATION	{{{ getFileCount() method
WITHOUT_CLASSIFICATION	{{{ Occur class
WITHOUT_CLASSIFICATION	{{{ getNextFile() method
WITHOUT_CLASSIFICATION	not supported for arbitriary filesets
WITHOUT_CLASSIFICATION	-1 so that the last isn't checked
WITHOUT_CLASSIFICATION	not found at all.
WITHOUT_CLASSIFICATION	{{{ getFiles() method
WITHOUT_CLASSIFICATION	{{{ invalidateCachedList() method
WITHOUT_CLASSIFICATION	{{{ SearchBar constructor
WITHOUT_CLASSIFICATION	{{{ setHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ getDirectory() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ setDirectory() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	not found at all.
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	close button only there if 'temp' is true
WITHOUT_CLASSIFICATION	{{{ If nothing entered, show search and replace dialog box
WITHOUT_CLASSIFICATION	}}} {{{ HyperSearch
WITHOUT_CLASSIFICATION	}}} {{{ Incremental search
WITHOUT_CLASSIFICATION	on enter, start search from end of current match to find next one
WITHOUT_CLASSIFICATION	not found. start from beginning
WITHOUT_CLASSIFICATION	inform user search restarted
WITHOUT_CLASSIFICATION	beep if beep property set
WITHOUT_CLASSIFICATION	{{{ incrementalSearch() method
WITHOUT_CLASSIFICATION	For example, if the current fileset is a directory, C+g will find the next match within that fileset. This can be annoying if you have just done an incremental search and want the next occurrence in the current buffer.
WITHOUT_CLASSIFICATION	{{{ timerIncrementalSearch() method
WITHOUT_CLASSIFICATION	on insert, start search from beginning of current match. This will continue to highlight the current match until another match is found
WITHOUT_CLASSIFICATION	on backspace, restart from beginning
WITHOUT_CLASSIFICATION	on backspace, restart from beginning
WITHOUT_CLASSIFICATION	don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.
WITHOUT_CLASSIFICATION	{{{ DirectoryListSet constructor
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ KeyHandler class
WITHOUT_CLASSIFICATION	{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	on insert, start search from beginning of current match. This will continue to highlight the current match until another match is found
WITHOUT_CLASSIFICATION	don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.
WITHOUT_CLASSIFICATION	{{{ setRecursive() method
WITHOUT_CLASSIFICATION	reverse regexp search not supported yet, so 'simulate' with restart
WITHOUT_CLASSIFICATION	reverse regexp search not supported yet, so 'simulate' with restart
WITHOUT_CLASSIFICATION	{{{ getTreeModel() method
WITHOUT_CLASSIFICATION	{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	{{{ _getFiles() method
WITHOUT_CLASSIFICATION	{{{ setFileFilter() method
WITHOUT_CLASSIFICATION	{{{ isRecursive() method
WITHOUT_CLASSIFICATION	{{{ getTree() method
WITHOUT_CLASSIFICATION	{{{ HyperSearchResults constructor
WITHOUT_CLASSIFICATION	{{{ searchDone() method
WITHOUT_CLASSIFICATION	{{{ visitBuffers() method
WITHOUT_CLASSIFICATION	{{{ searchStarted() method
WITHOUT_CLASSIFICATION	BufferUpdate.CLOSED
WITHOUT_CLASSIFICATION	{{{ updateMultiStatus() method
WITHOUT_CLASSIFICATION	{{{ searchFailed() method
WITHOUT_CLASSIFICATION	collapse all nodes, as suggested on user mailing list...
WITHOUT_CLASSIFICATION	{{{ goToSelectedNode() method
WITHOUT_CLASSIFICATION	do nothing if clicked "foo (showing n occurrences in m files)"
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	{{{ showPopupMenu method
WITHOUT_CLASSIFICATION	{{{ ResultCellRenderer class
WITHOUT_CLASSIFICATION	{{{ RemoveTreeNodeAction class
WITHOUT_CLASSIFICATION	{{{ ResultVisitor interface
WITHOUT_CLASSIFICATION	{{{ RemoveAllTreeNodesAction class
WITHOUT_CLASSIFICATION	{{{ ResultCellRenderer constructor
WITHOUT_CLASSIFICATION	{{{ getRegexp() method
WITHOUT_CLASSIFICATION	{{{ getTreeCellRendererComponent() method
WITHOUT_CLASSIFICATION	{{{ BufferLoadedVisitor class
WITHOUT_CLASSIFICATION	{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ BufferClosedVisitor class
WITHOUT_CLASSIFICATION	{{{ Match class
WITHOUT_CLASSIFICATION	{{{ setReverseSearch() method
WITHOUT_CLASSIFICATION	{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getBeanShellReplace() method
WITHOUT_CLASSIFICATION	{{{ setRegexp() method
WITHOUT_CLASSIFICATION	{{{ getReverseSearch() method
WITHOUT_CLASSIFICATION	{{{ setAutoWrap() method
WITHOUT_CLASSIFICATION	{{{ setBeanShellReplace() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	{{{ find() method
WITHOUT_CLASSIFICATION	beep if beep property set
WITHOUT_CLASSIFICATION	{{{ setSearchFileSet() method
WITHOUT_CLASSIFICATION	{{{ getAutoWrap() method
WITHOUT_CLASSIFICATION	{{{ setSearchMatcher() method
WITHOUT_CLASSIFICATION	start search from beginning
WITHOUT_CLASSIFICATION	{{{ getSearchMatcher() method
WITHOUT_CLASSIFICATION	{{{ Actions
WITHOUT_CLASSIFICATION	{{{ getSearchFileSet() method
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	{{{ getSmartCaseReplace() method
WITHOUT_CLASSIFICATION	{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	Wait for the buffer to load
WITHOUT_CLASSIFICATION	the start and end flags will be wrong with reverse search enabled, but they are only used by the regexp matcher, which doesn't support reverse search yet. REMIND: fix flags when adding reverse regexp search.
WITHOUT_CLASSIFICATION	make sure end of match is visible
WITHOUT_CLASSIFICATION	make sure start of match is visible
WITHOUT_CLASSIFICATION	{{{ replace() method
WITHOUT_CLASSIFICATION	{{{ replace() method
WITHOUT_CLASSIFICATION	so that Replace and Find continues from the right location
WITHOUT_CLASSIFICATION	{{{ replaceAll() method
WITHOUT_CLASSIFICATION	Wait for buffer to finish loading
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ handleMessage() method
WITHOUT_CLASSIFICATION	{{{ record() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ ok() method
WITHOUT_CLASSIFICATION	{{{ cancel() method
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	{{{ preloadSearchDialog() method
WITHOUT_CLASSIFICATION	Don't do this when playing a macro, cos it's annoying
WITHOUT_CLASSIFICATION	{{{ handleError() method
WITHOUT_CLASSIFICATION	Tags plugin likes to call this method at times other than startup; so we need to fire a SearchSettingsChanged to notify the search bar and so on.
WITHOUT_CLASSIFICATION	{{{ regexpBeanShellReplace() method
WITHOUT_CLASSIFICATION	{{{ initReplace() method
WITHOUT_CLASSIFICATION	only record this if doing a find next
WITHOUT_CLASSIFICATION	{{{ regexpReplace() method
WITHOUT_CLASSIFICATION	{{{ replaceInSelection() method
WITHOUT_CLASSIFICATION	{{{ showSearchDialog() method
WITHOUT_CLASSIFICATION	{{{ _replace() method
WITHOUT_CLASSIFICATION	{{{ literalBeanShellReplace() method
WITHOUT_CLASSIFICATION	{{{ replaceOne() method
WITHOUT_CLASSIFICATION	{{{ replaceOne() method
WITHOUT_CLASSIFICATION	{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	{{{ getSearchDialog() method
WITHOUT_CLASSIFICATION	might be already selected, see above.
WITHOUT_CLASSIFICATION	this property is only loaded and saved if the 'current buffer' file set is selected. otherwise, it defaults to on.
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ save() method
WITHOUT_CLASSIFICATION	{{{ load() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	{{{ SearchDialog constructor
WITHOUT_CLASSIFICATION	fields
WITHOUT_CLASSIFICATION	search settings
WITHOUT_CLASSIFICATION	replaceBtn = new JButton(jEdit.getProperty("search.replaceBtn"));replaceBtn.setMnemonic(jEdit.getProperty("search.replaceBtn.mnemonic").charAt(0));grid.add(replaceBtn);replaceBtn.addActionListener(actionHandler);
WITHOUT_CLASSIFICATION	multifile settings
WITHOUT_CLASSIFICATION	{{{ createSearchSettingsPanel() method
WITHOUT_CLASSIFICATION	buttons
WITHOUT_CLASSIFICATION	{{{ closeOrKeepDialog() method
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	replaceBtn,
WITHOUT_CLASSIFICATION	prevents us from handling SearchSettingsChanged as a result of below
WITHOUT_CLASSIFICATION	{{{ createMultiFilePanel() method
WITHOUT_CLASSIFICATION	source is directory or filter field
WITHOUT_CLASSIFICATION	{{{ createButtonsPanel() method
WITHOUT_CLASSIFICATION	{{{ synchronizeMultiFileSettings() method
WITHOUT_CLASSIFICATION	{{{ ReplaceActionHandler class
WITHOUT_CLASSIFICATION	source is directory or filter field
WITHOUT_CLASSIFICATION	{{{ SettingsActionHandler class
WITHOUT_CLASSIFICATION	{{{ MyJRadioButton class
WITHOUT_CLASSIFICATION	{{{ MultiFileActionHandler class
WITHOUT_CLASSIFICATION	{{{ ButtonActionHandler class
WITHOUT_CLASSIFICATION	{{{ AllBufferSet constructor
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ getCode() method
WITHOUT_CLASSIFICATION	{{{ run() method
WITHOUT_CLASSIFICATION	{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	{{{ getNextFile() method
WITHOUT_CLASSIFICATION	{{{ getFiles() method
WITHOUT_CLASSIFICATION	{{{ getFileCount() method
WITHOUT_CLASSIFICATION	{{{ _getFiles() method
WITHOUT_CLASSIFICATION	{{{ searchInSelection() method
WITHOUT_CLASSIFICATION	just as if Enter was pressed in another text field
WITHOUT_CLASSIFICATION	just as if Enter was pressed in another text field
WITHOUT_CLASSIFICATION	to minimise synchronization and stuff like that, we only show a status message at most twice a second
WITHOUT_CLASSIFICATION	{{{ HyperSearchRequest constructor
WITHOUT_CLASSIFICATION	{{{ match() method
WITHOUT_CLASSIFICATION	initially zero, so that we always show the first message
WITHOUT_CLASSIFICATION	{{{ BoyerMooreSearchMatcher constructor
WITHOUT_CLASSIFICATION	{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	{{{ nextMatch() method
WITHOUT_CLASSIFICATION	position variable for pattern test position
WITHOUT_CLASSIFICATION	a good introduction to the Boyer-Moore fast string matching algorithm may be found on Moore's website at: http:www.cs.utexas.edu/users/moore/best-ideas/string-searching/
WITHOUT_CLASSIFICATION	pattern test
WITHOUT_CLASSIFICATION	position variable for pattern start
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ nextMatch() method
WITHOUT_CLASSIFICATION	heuristic #2
WITHOUT_CLASSIFICATION	last possible start position of a match with this pattern; this is negative if the pattern is longer than the text causing the search loop below to immediately fail int last_anchor = reverseSearch ? offset + pattern.length - 1 : length - pattern.length;
WITHOUT_CLASSIFICATION	the search works by starting the anchor (first character of the pattern) at the initial offset. as long as the anchor is far enough from the enough of the text for the pattern to match, and until the pattern matches, we compare the pattern to the text from the last character to the first character in reverse order. where a character in the pattern mismatches, we use the two heuristics based on the mismatch character and its position in the pattern to determine the furthest we can move the anchor without missing any potential pattern matches.
WITHOUT_CLASSIFICATION	character mismatch, determine how many characters to skip
WITHOUT_CLASSIFICATION	go back to the while loop
WITHOUT_CLASSIFICATION	heuristic #1
WITHOUT_CLASSIFICATION	MISMATCH: return -1 as defined by API
WITHOUT_CLASSIFICATION	skip the greater of the two distances provided by the heuristics
WITHOUT_CLASSIFICATION	Boyer-Moore helper methods
WITHOUT_CLASSIFICATION	MATCH: return the position of its first character
WITHOUT_CLASSIFICATION	leave the table cleanly-initialized for an empty pattern
WITHOUT_CLASSIFICATION	Boyer-Moore member fields
WITHOUT_CLASSIFICATION	the 'skip' array is used to determine for each index in the hashed alphabet how many characters can be skipped if a mismatch occurs on a characater hashing to that index.
WITHOUT_CLASSIFICATION	{{{ generateSkipArray() method
WITHOUT_CLASSIFICATION	initialize the skip array to all zeros
WITHOUT_CLASSIFICATION	to avoid our skip table having a length of 2 ^ 16, we hash each character of the input into a character in the alphabet [\x00-\xFF] using the lower 8 bits of the character's value (resulting in a more reasonable skip table of length 2 ^ 8). the result of this is that more than one character can hash to the same index, but since the skip table encodes the position of occurence of the character furthest into the string with a particular index (whether or not it is the only character with that index), an index collision only means that that this heuristic will give a sub-optimal skip (i.e. a complete skip table could use the differences between colliding characters to maximal effect, at the expense of building a table that is over 2 orders of magnitude larger and very sparse).
WITHOUT_CLASSIFICATION	{{{ getSkipIndex() method
WITHOUT_CLASSIFICATION	{{{ generateSuffixArray() method
WITHOUT_CLASSIFICATION	{{{ RESearchMatcher constructor
WITHOUT_CLASSIFICATION	never mind
WITHOUT_CLASSIFICATION	{{{ stringToToken() method
WITHOUT_CLASSIFICATION	{{{ createToken() method
WITHOUT_CLASSIFICATION	{{{ addToken() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ getLineContext() method
WITHOUT_CLASSIFICATION	{{{ setLineContext() method
WITHOUT_CLASSIFICATION	{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	unless we are matching to the end of the buffer, $ should not match on the end of the substring
WITHOUT_CLASSIFICATION	unless we are matching from the start of the buffer, ^ should not match on the beginning of the substring
WITHOUT_CLASSIFICATION	{{{ lookup() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ Token types
WITHOUT_CLASSIFICATION	{{{ getTokens() method
WITHOUT_CLASSIFICATION	Special:
WITHOUT_CLASSIFICATION	{{{ getNonAlphaNumericChars() method
WITHOUT_CLASSIFICATION	{{{ Token constructor
WITHOUT_CLASSIFICATION	{{{ handleToken() method
WITHOUT_CLASSIFICATION	{{{ regionMatches() method
WITHOUT_CLASSIFICATION	{{{ TokenMarker constructor
WITHOUT_CLASSIFICATION	{{{ getParserRuleSet() method
WITHOUT_CLASSIFICATION	{{{ getKeywords() method
WITHOUT_CLASSIFICATION	{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	{{{ getStringMapKey() method
WITHOUT_CLASSIFICATION	{{{ getSegmentMapKey() method
WITHOUT_CLASSIFICATION	{{{ Keyword class
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ markTokens() method
WITHOUT_CLASSIFICATION	{{{ check if we have to stop parsing
WITHOUT_CLASSIFICATION	{{{ getMainRuleSet() method
WITHOUT_CLASSIFICATION	{{{ Set up some instance variables this is to avoid having to pass around lots and lots of parameters.
WITHOUT_CLASSIFICATION	{{{ getRuleSet() method
WITHOUT_CLASSIFICATION	{{{ See if the rule's start or end sequence matches here
WITHOUT_CLASSIFICATION	{{{ getRuleSets() method
WITHOUT_CLASSIFICATION	{{{ Main parser loop
WITHOUT_CLASSIFICATION	stop checking rules if there was a match
WITHOUT_CLASSIFICATION	{{{ check for end of delegate
WITHOUT_CLASSIFICATION	{{{ Mark all remaining characters
WITHOUT_CLASSIFICATION	{{{ check every rule
WITHOUT_CLASSIFICATION	{{{ check if current character is a word separator
WITHOUT_CLASSIFICATION	{{{ checkDelegateEnd() method
WITHOUT_CLASSIFICATION	{{{ Unwind any NO_LINE_BREAK parent delegates
WITHOUT_CLASSIFICATION	{{{ handleRule() method
WITHOUT_CLASSIFICATION	move pos to last character of match sequence
WITHOUT_CLASSIFICATION	check escape rule of parent
WITHOUT_CLASSIFICATION	{{{ Some rules can only match in certain locations
WITHOUT_CLASSIFICATION	{{{ SEQ
WITHOUT_CLASSIFICATION	the end cannot be a regular expression
WITHOUT_CLASSIFICATION	substitute result of matching the rule start into the end string. eg, in shell script mode, <<\s(\w+) is matched into \<$1\> to construct rules for highlighting read-ins like this <<EOF ... EOF
WITHOUT_CLASSIFICATION	{{{ Check for an escape sequence
WITHOUT_CLASSIFICATION	{{{ handleNoWordBreak() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ equals() method
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	{{{ attribute() method
WITHOUT_CLASSIFICATION	{{{ hashCode() method
WITHOUT_CLASSIFICATION	}}} {{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	Instead of passing these around to each method, we just store them as instance variables. Note that this is not thread-safe.
WITHOUT_CLASSIFICATION	move pos to last character of match sequence
WITHOUT_CLASSIFICATION	note that all regexps start with \A so they only match the start of the string
WITHOUT_CLASSIFICATION	a DELEGATE attribute on a SEQ changes the ruleset from the end of the SEQ onwards
WITHOUT_CLASSIFICATION	}}} {{{ Handle start of rule
WITHOUT_CLASSIFICATION	break out of inner for loop to check next char }}} {{{ Handle end of MARK_FOLLOWING
WITHOUT_CLASSIFICATION	}}} {{{ SPAN, EOL_SPAN
WITHOUT_CLASSIFICATION	{{{ markKeyword() method
WITHOUT_CLASSIFICATION	}}} {{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	{{{ substitute() method
WITHOUT_CLASSIFICATION	{{{ handleTokenWithSpaces() method
WITHOUT_CLASSIFICATION	{{{ Do keywords
WITHOUT_CLASSIFICATION	{{{ Do digits
WITHOUT_CLASSIFICATION	used for SPAN_REGEXP rules; otherwise null
WITHOUT_CLASSIFICATION	only match against regexp if its not all digits; if all digits, no point matching
WITHOUT_CLASSIFICATION	{{{ Handle any remaining crud
WITHOUT_CLASSIFICATION	{{{ clone() method
WITHOUT_CLASSIFICATION	{{{ LineContext class
WITHOUT_CLASSIFICATION	{{{ intern() method
WITHOUT_CLASSIFICATION	{{{ LineContext constructor
WITHOUT_CLASSIFICATION	{{{ LineContext constructor
WITHOUT_CLASSIFICATION	{{{ XModeHandler constructor
WITHOUT_CLASSIFICATION	{{{ charArraysEqual() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	can't happen
WITHOUT_CLASSIFICATION	{{{ error() method
WITHOUT_CLASSIFICATION	{{{ Protected members
WITHOUT_CLASSIFICATION	{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	{{{ charData() method
WITHOUT_CLASSIFICATION	{{{ startElement() method
WITHOUT_CLASSIFICATION	{{{ endElement() method
WITHOUT_CLASSIFICATION	{{{ startDocument() method
WITHOUT_CLASSIFICATION	{{{ pushElement() method
WITHOUT_CLASSIFICATION	{{{ peekElement() method
WITHOUT_CLASSIFICATION	{{{ popElement() method
WITHOUT_CLASSIFICATION	{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	{{{ endDocument() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ handleToken() method
WITHOUT_CLASSIFICATION	}}} {{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	}}} {{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	}}} {{{ EOL_SPAN
WITHOUT_CLASSIFICATION	mixed digit/alpha keyword, and no regexp... don't highlight as DIGIT
WITHOUT_CLASSIFICATION	}}} {{{ RULES
WITHOUT_CLASSIFICATION	{{{ PROPERTY
WITHOUT_CLASSIFICATION	}}} {{{ TERMINATE
WITHOUT_CLASSIFICATION	}}} {{{ PROPS
WITHOUT_CLASSIFICATION	}}} {{{ IMPORT
WITHOUT_CLASSIFICATION	}}} {{{ SEQ_REGEXP
WITHOUT_CLASSIFICATION	}}} {{{ SEQ
WITHOUT_CLASSIFICATION	}}} {{{ SPAN_REGEXP
WITHOUT_CLASSIFICATION	}}} {{{ SPAN
WITHOUT_CLASSIFICATION	{{{ getModeProperties() method
WITHOUT_CLASSIFICATION	}}} {{{ Keywords
WITHOUT_CLASSIFICATION	}}} {{{ EOL_SPAN_REGEXP
WITHOUT_CLASSIFICATION	{{{ addKeyword() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ setLineContext() method
WITHOUT_CLASSIFICATION	{{{ Major actions
WITHOUT_CLASSIFICATION	{{{ paintChunkList() method
WITHOUT_CLASSIFICATION	{{{ paintChunkBackgrounds() method
WITHOUT_CLASSIFICATION	only paint visible chunks
WITHOUT_CLASSIFICATION	only paint visible chunks
WITHOUT_CLASSIFICATION	{{{ Chunk constructor
WITHOUT_CLASSIFICATION	Useful for debugging purposes
WITHOUT_CLASSIFICATION	{{{ Paint token background color if necessary
WITHOUT_CLASSIFICATION	{{{ Chunk constructor
WITHOUT_CLASSIFICATION	{{{ offsetToX() method
WITHOUT_CLASSIFICATION	{{{ offsetToX() method
WITHOUT_CLASSIFICATION	{{{ createSpanRule() method
WITHOUT_CLASSIFICATION	{{{ xToOffset() method
WITHOUT_CLASSIFICATION	{{{ xToOffset() method
WITHOUT_CLASSIFICATION	{{{ getPositions() method
WITHOUT_CLASSIFICATION	set up after init()
WITHOUT_CLASSIFICATION	{{{ Action hints
WITHOUT_CLASSIFICATION	{{{ Position match hints
WITHOUT_CLASSIFICATION	{{{ createRegexpSpanRule() method
WITHOUT_CLASSIFICATION	{{{ createSequenceRule() method
WITHOUT_CLASSIFICATION	{{{ createEOLSpanRule() method
WITHOUT_CLASSIFICATION	{{{ createRegexpSequenceRule() method
WITHOUT_CLASSIFICATION	{{{ createRegexpEOLSpanRule() method
WITHOUT_CLASSIFICATION	{{{ createMarkFollowingRule() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ getName() method
WITHOUT_CLASSIFICATION	{{{ getProperties() method
WITHOUT_CLASSIFICATION	{{{ setProperties() method
WITHOUT_CLASSIFICATION	{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	{{{ getKeywords() method
WITHOUT_CLASSIFICATION	{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	{{{ getModeName() method
WITHOUT_CLASSIFICATION	{{{ createMarkPreviousRule() method
WITHOUT_CLASSIFICATION	{{{ setEscapeRule() method
WITHOUT_CLASSIFICATION	{{{ createEscapeRule() method
WITHOUT_CLASSIFICATION	{{{ getSetName() method
WITHOUT_CLASSIFICATION	{{{ getStandardRuleSet() method
WITHOUT_CLASSIFICATION	{{{ setKeywords() method
WITHOUT_CLASSIFICATION	{{{ ParserRuleSet constructor
WITHOUT_CLASSIFICATION	{{{ resolveImports() method
WITHOUT_CLASSIFICATION	{{{ getHighlightDigits() method
WITHOUT_CLASSIFICATION	{{{ addRule() method
WITHOUT_CLASSIFICATION	{{{ getDefault() method
WITHOUT_CLASSIFICATION	{{{ getRules() method
WITHOUT_CLASSIFICATION	{{{ setHighlightDigits() method
WITHOUT_CLASSIFICATION	{{{ getRuleCount() method
WITHOUT_CLASSIFICATION	{{{ getTerminateChar() method
WITHOUT_CLASSIFICATION	{{{ getDigitRegexp() method
WITHOUT_CLASSIFICATION	{{{ setTerminateChar() method
WITHOUT_CLASSIFICATION	{{{ setDefault() method
WITHOUT_CLASSIFICATION	{{{ setDigitRegexp() method
WITHOUT_CLASSIFICATION	{{{ getEscapeRule() method
WITHOUT_CLASSIFICATION	{{{ getNoWordSep() method
WITHOUT_CLASSIFICATION	{{{ setNoWordSep() method
WITHOUT_CLASSIFICATION	{{{ isBuiltIn() method
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	{{{ handleToken() method
WITHOUT_CLASSIFICATION	{{{ setCharWidth() method
WITHOUT_CLASSIFICATION	SILLY: allow for anti-aliased characters' "fuzz"
WITHOUT_CLASSIFICATION	{{{ canMerge() method
WITHOUT_CLASSIFICATION	don't have chunks longer than 100 characters to avoid slowing things down
WITHOUT_CLASSIFICATION	{{{ getChunkList() method
WITHOUT_CLASSIFICATION	{{{ textAreaDisposed() method
WITHOUT_CLASSIFICATION	{{{ SyntaxStyle constructor
WITHOUT_CLASSIFICATION	{{{ createChunk() method
WITHOUT_CLASSIFICATION	{{{ Static part
WITHOUT_CLASSIFICATION	{{{ initChunk() method
WITHOUT_CLASSIFICATION	{{{ getForegroundColor() method
WITHOUT_CLASSIFICATION	{{{ merge() method
WITHOUT_CLASSIFICATION	in case already initialized; un-initialize it
WITHOUT_CLASSIFICATION	{{{ getBackgroundColor() method
WITHOUT_CLASSIFICATION	{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	{{{ getFont() method
WITHOUT_CLASSIFICATION	{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	if we got here, no unused display manager in list
WITHOUT_CLASSIFICATION	{{{ isLineVisible() method
WITHOUT_CLASSIFICATION	{{{ releaseDisplayManager() method
WITHOUT_CLASSIFICATION	{{{ getFirstVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ getNextVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ getLastVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ getPrevVisibleLine() method
WITHOUT_CLASSIFICATION	start of next expanded range
WITHOUT_CLASSIFICATION	in collapsed range
WITHOUT_CLASSIFICATION	in collapsed range
WITHOUT_CLASSIFICATION	start of next expanded range
WITHOUT_CLASSIFICATION	beyond last visible line
WITHOUT_CLASSIFICATION	equal to last visible line
WITHOUT_CLASSIFICATION	last in expanded range
WITHOUT_CLASSIFICATION	end of prev expanded range
WITHOUT_CLASSIFICATION	next in expanded range
WITHOUT_CLASSIFICATION	end of prev expanded range
WITHOUT_CLASSIFICATION	before first visible line
WITHOUT_CLASSIFICATION	prev in expanded range
WITHOUT_CLASSIFICATION	equal to first visible line
WITHOUT_CLASSIFICATION	first in expanded range
WITHOUT_CLASSIFICATION	{{{ Find fold start and end...
WITHOUT_CLASSIFICATION	{{{ collapseFold() method
WITHOUT_CLASSIFICATION	{{{ getScrollLineCount() method
WITHOUT_CLASSIFICATION	scan backwards looking for the start
WITHOUT_CLASSIFICATION	this line is the start of a fold
WITHOUT_CLASSIFICATION	this line is the start of a fold
WITHOUT_CLASSIFICATION	no folds in buffer
WITHOUT_CLASSIFICATION	Collapse the fold...
WITHOUT_CLASSIFICATION	{{{ expandFold() method
WITHOUT_CLASSIFICATION	the first sub-fold. used by JEditTextArea.expandFold().
WITHOUT_CLASSIFICATION	{{{ Find fold start and fold end...
WITHOUT_CLASSIFICATION	isLineVisible(i) &&
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	{{{ Expand the fold...
WITHOUT_CLASSIFICATION	we need a different value of initialFoldLevel here!
WITHOUT_CLASSIFICATION	{{{ expandAllFolds() method
WITHOUT_CLASSIFICATION	{{{ expandFolds() method
WITHOUT_CLASSIFICATION	{{{ expandFolds() method
WITHOUT_CLASSIFICATION	this ensures that the first line is always visible
WITHOUT_CLASSIFICATION	{{{ narrow() method
WITHOUT_CLASSIFICATION	if we narrowed to a single collapsed fold
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	{{{ changed() method
WITHOUT_CLASSIFICATION	{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	when the text area switches to us, it will do a reset anyway
WITHOUT_CLASSIFICATION	this notifies each display manager editing this buffer of the screen line count change
WITHOUT_CLASSIFICATION	{{{ fvmget() method
WITHOUT_CLASSIFICATION	{{{ updateWrapSettings() method
WITHOUT_CLASSIFICATION	{{{ DisplayManager constructor
WITHOUT_CLASSIFICATION	{{{ showLineRange() method
WITHOUT_CLASSIFICATION	{{{ fvmput() method
WITHOUT_CLASSIFICATION	{{{ hideLineRange() method
WITHOUT_CLASSIFICATION	{{{ fvmreset() method
WITHOUT_CLASSIFICATION	important: not lineMgr.getScreenLineCount()
WITHOUT_CLASSIFICATION	{{{ fvmput2() method
WITHOUT_CLASSIFICATION	ScrollLineCount.changed() does the same thing
WITHOUT_CLASSIFICATION	{{{ fvmdump() method
WITHOUT_CLASSIFICATION	{{{ _setScreenLineCount() method
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	{{{ FirstLine class
WITHOUT_CLASSIFICATION	{{{ Anchor class
WITHOUT_CLASSIFICATION	{{{ Debug code
WITHOUT_CLASSIFICATION	{{{ ScrollLineCount class
WITHOUT_CLASSIFICATION	{{{ Debug code
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	update fold visibility map.
WITHOUT_CLASSIFICATION	{{{ Debug code
WITHOUT_CLASSIFICATION	JEditTextArea.scrollTo() needs this to simplify its code
WITHOUT_CLASSIFICATION	JEditTextArea.scrollTo() needs this to simplify its code
WITHOUT_CLASSIFICATION	{{{ physUp() method scroll up by physical line amount
WITHOUT_CLASSIFICATION	{{{ scrollDown() method scroll down by screen line amount
WITHOUT_CLASSIFICATION	{{{ scrollUp() method scroll up by screen line amount
WITHOUT_CLASSIFICATION	{{{ ensurePhysicalLineIsVisible() method
WITHOUT_CLASSIFICATION	{{{ BufferChangeHandler class
WITHOUT_CLASSIFICATION	System.err.println("foldLevelChanged " + (start-1) + " to " + textArea.getLastPhysicalLine() + "," + end);
WITHOUT_CLASSIFICATION	{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	both have same visibility; just remove anything in between.
WITHOUT_CLASSIFICATION	we're removing from before the first visible to after the last visible
WITHOUT_CLASSIFICATION	collapse 2
WITHOUT_CLASSIFICATION	we're removing from the first visible to after the last visible
WITHOUT_CLASSIFICATION	shift
WITHOUT_CLASSIFICATION	update
WITHOUT_CLASSIFICATION	will be handled later. see comments at the end of transactionComplete().
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	XXX
WITHOUT_CLASSIFICATION	{{{ setBorder() method
WITHOUT_CLASSIFICATION	{{{ doDelayedUpdate() method
WITHOUT_CLASSIFICATION	must update screen line counts before we call _notifyScreenLineChanges() since that calls updateScrollBars() which needs valid info
WITHOUT_CLASSIFICATION	must be before the below call so that the chunk cache is not updated with an invisible first line (see above)
WITHOUT_CLASSIFICATION	update visible lines
WITHOUT_CLASSIFICATION	force the fold levels to be updated.
WITHOUT_CLASSIFICATION	when painting the last line of a buffer, Buffer.isFoldStart() doesn't call getFoldLevel(), hence the foldLevelChanged() event might not be sent for the previous line.
WITHOUT_CLASSIFICATION	{{{ delayedUpdate() method
WITHOUT_CLASSIFICATION	{{{ caretAutoScroll() method
WITHOUT_CLASSIFICATION	{{{ updateBorder() method
WITHOUT_CLASSIFICATION	{{{ Layers
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ Match class
WITHOUT_CLASSIFICATION	{{{ paintInvalidLine() method
WITHOUT_CLASSIFICATION	{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ selectMatch() method
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	fill the background
WITHOUT_CLASSIFICATION	{{{ MouseActions constructor
WITHOUT_CLASSIFICATION	{{{ BracketMatcher class
WITHOUT_CLASSIFICATION	{{{ getActionForEvent() method
WITHOUT_CLASSIFICATION	{{{ removeExtension() method
WITHOUT_CLASSIFICATION	{{{ getMatch() method
WITHOUT_CLASSIFICATION	if buffer is loading, don't paint anything
WITHOUT_CLASSIFICATION	{{{ Highlight class
WITHOUT_CLASSIFICATION	{{{ Gutter constructor
WITHOUT_CLASSIFICATION	{{{ getExtensions() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ setBorder() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	Component.getPreferredSize() is overridden here to support the collapsing behavior.
WITHOUT_CLASSIFICATION	JComponent.setBorder(Border) is overridden here to cache the left inset of the border (if any) to avoid having to fetch it during every repaint.
WITHOUT_CLASSIFICATION	{{{ getHighlightedForeground() method
WITHOUT_CLASSIFICATION	{{{ setFont() method
WITHOUT_CLASSIFICATION	{{{ setHighlightInterval() method
WITHOUT_CLASSIFICATION	JComponent.setFont(Font) is overridden here to cache the baseline for the font. This avoids having to get the font metrics during every repaint.
WITHOUT_CLASSIFICATION	{{{ setHighlightedForeground() method
WITHOUT_CLASSIFICATION	{{{ getLineNumberAlignment() method
WITHOUT_CLASSIFICATION	{{{ getCurrentLineForeground() method
WITHOUT_CLASSIFICATION	{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setCurrentLineForeground() method
WITHOUT_CLASSIFICATION	{{{ setLineNumberAlignment() method
WITHOUT_CLASSIFICATION	{{{ getFoldColor() method
WITHOUT_CLASSIFICATION	{{{ isCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setFoldColor() method
WITHOUT_CLASSIFICATION	{{{ isMarkerHighlightEnabled()
WITHOUT_CLASSIFICATION	{{{ isExpanded() method
WITHOUT_CLASSIFICATION	{{{ setCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setExpanded() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ getHighlightInterval() method
WITHOUT_CLASSIFICATION	{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ getMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ isMarkerHighlightEnabled() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ Layers
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	{{{ setBounds() method
WITHOUT_CLASSIFICATION	{{{ mouseExited() method
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	{{{ mouseEntered() method
WITHOUT_CLASSIFICATION	{{{ paintLine() method
WITHOUT_CLASSIFICATION	draw |
WITHOUT_CLASSIFICATION	Skip lines beyond EOF
WITHOUT_CLASSIFICATION	{{{ Handle actions
WITHOUT_CLASSIFICATION	{{{ Paint fold triangles
WITHOUT_CLASSIFICATION	draw |^
WITHOUT_CLASSIFICATION	draw |_
WITHOUT_CLASSIFICATION	{{{ Paint line numbers
WITHOUT_CLASSIFICATION	{{{ MarkerHighlight class
WITHOUT_CLASSIFICATION	{{{ Determine action
WITHOUT_CLASSIFICATION	{{{ setStyles() method
WITHOUT_CLASSIFICATION	&& e.getX() >= getWidth() - borderWidth 2
WITHOUT_CLASSIFICATION	{{{ getStyles() method
WITHOUT_CLASSIFICATION	{{{ setCaretColor() method
WITHOUT_CLASSIFICATION	{{{ getCaretColor() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ isBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	assumed this is called after a font render context is set up. changing font render context settings without a setStyles() call will not reset cached monospaced font info.
WITHOUT_CLASSIFICATION	{{{ getMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ getSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ getWrapGuideColor() method
WITHOUT_CLASSIFICATION	{{{ setSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ setMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	{{{ setBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	{{{ getLineHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ setLineHighlightColor() method
WITHOUT_CLASSIFICATION	{{{ getEOLMarkerColor() method
WITHOUT_CLASSIFICATION	{{{ isLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setWrapGuideColor() method
WITHOUT_CLASSIFICATION	{{{ setLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	{{{ setFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	{{{ setEOLMarkerColor() method
WITHOUT_CLASSIFICATION	{{{ isWrapGuidePainted() method
WITHOUT_CLASSIFICATION	{{{ getEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	{{{ setEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	{{{ isFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	{{{ setWrapGuidePainted() method
WITHOUT_CLASSIFICATION	{{{ getFoldLineStyle() method
WITHOUT_CLASSIFICATION	{{{ setFoldLineStyle() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	{{{ paintComponent() method
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ removeExtension() method
WITHOUT_CLASSIFICATION	{{{ getExtensions() method
WITHOUT_CLASSIFICATION	{{{ setFont() method
WITHOUT_CLASSIFICATION	{{{ getFontRenderContext() method
WITHOUT_CLASSIFICATION	{{{ getStringWidth() method
WITHOUT_CLASSIFICATION	{{{ getFontMetrics() method
WITHOUT_CLASSIFICATION	{{{ updateRenderingHints() method
WITHOUT_CLASSIFICATION	package-private since they are accessed by inner classes and we want this to be fast
WITHOUT_CLASSIFICATION	{{{ Paint line highlight and collapsed fold highlight
WITHOUT_CLASSIFICATION	should try to use this as little as possible.
WITHOUT_CLASSIFICATION	hints.put(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
WITHOUT_CLASSIFICATION	{{{ TextAreaPainter constructor
WITHOUT_CLASSIFICATION	{{{ PaintLineBackground class
WITHOUT_CLASSIFICATION	{{{ Paint token backgrounds
WITHOUT_CLASSIFICATION	minimise access$ methods
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ dispose() method
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ getView() method
WITHOUT_CLASSIFICATION	{{{ getBuffer() method
WITHOUT_CLASSIFICATION	{{{ Getters and setters
WITHOUT_CLASSIFICATION	{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	horizontal.setBorder(null);
WITHOUT_CLASSIFICATION	Because the clipRect's height is usually an even multiple of the font height, we subtract 1 from it, otherwise one too many lines will always be painted.
WITHOUT_CLASSIFICATION	{{{ PaintSelection class
WITHOUT_CLASSIFICATION	{{{ JEditTextArea constructor
WITHOUT_CLASSIFICATION	{{{ paintSelection() method
WITHOUT_CLASSIFICATION	{{{ PaintWrapGuide class
WITHOUT_CLASSIFICATION	{{{ Initialize some misc. stuff
WITHOUT_CLASSIFICATION	{{{ PaintText class
WITHOUT_CLASSIFICATION	{{{ Add some event listeners
WITHOUT_CLASSIFICATION	{{{ PaintCaret class
WITHOUT_CLASSIFICATION	{{{ Initialize the GUI
WITHOUT_CLASSIFICATION	{{{ setCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	some plugins add stuff in a "right-hand" gutter
WITHOUT_CLASSIFICATION	{{{ setQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	{{{ getPainter() method
WITHOUT_CLASSIFICATION	{{{ getElectricScroll() method
WITHOUT_CLASSIFICATION	{{{ getGutter() method
WITHOUT_CLASSIFICATION	{{{ isCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	{{{ setElectricScroll() method
WITHOUT_CLASSIFICATION	{{{ isQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	{{{ isEditable() method
WITHOUT_CLASSIFICATION	JEditTextArea.scrollTo() needs this to simplify its code
WITHOUT_CLASSIFICATION	dubious? setFirstLine(0);
WITHOUT_CLASSIFICATION	{{{ this ensures that the text area's look is slightly more consistent with the rest of the metal l&f. while it depends on not-so-well-documented portions of Swing, it only affects appearance, so future breakage shouldn't matter
WITHOUT_CLASSIFICATION	{{{ setDragEnabled() method
WITHOUT_CLASSIFICATION	{{{ getDragAndDropCallback() method
WITHOUT_CLASSIFICATION	{{{ scrollUpPage() method
WITHOUT_CLASSIFICATION	{{{ Scrolling
WITHOUT_CLASSIFICATION	{{{ setDragAndDropCallback() method
WITHOUT_CLASSIFICATION	we have to be careful
WITHOUT_CLASSIFICATION	{{{ isDragInProgress() method
WITHOUT_CLASSIFICATION	{{{ Debugging code
WITHOUT_CLASSIFICATION	{{{ setDragInProgress() method
WITHOUT_CLASSIFICATION	we have to be careful
WITHOUT_CLASSIFICATION	{{{ isDragEnabled() method
WITHOUT_CLASSIFICATION	{{{ getVisibleLines() method
WITHOUT_CLASSIFICATION	{{{ getFirstLine() method
WITHOUT_CLASSIFICATION	{{{ getFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ setFirstLine() method
WITHOUT_CLASSIFICATION	{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ getHorizontalOffset() method
WITHOUT_CLASSIFICATION	{{{ getLastPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ scrollDownLine() method
WITHOUT_CLASSIFICATION	{{{ setHorizontalOffset() method
WITHOUT_CLASSIFICATION	{{{ scrollUpLine() method
WITHOUT_CLASSIFICATION	{{{ getLineCount() method
WITHOUT_CLASSIFICATION	{{{ addScrollListener() method
WITHOUT_CLASSIFICATION	{{{ scrollDownPage() method
WITHOUT_CLASSIFICATION	{{{ scrollToCaret() method
WITHOUT_CLASSIFICATION	{{{ removeScrollListener() method
WITHOUT_CLASSIFICATION	{{{ scrollTo() method
WITHOUT_CLASSIFICATION	{{{ scrollTo() method
WITHOUT_CLASSIFICATION	{{{ Offset conversion
WITHOUT_CLASSIFICATION	{{{ Get ready
WITHOUT_CLASSIFICATION	{{{ Screen line stuff
WITHOUT_CLASSIFICATION	{{{ Scroll vertically
WITHOUT_CLASSIFICATION	{{{ invalidateScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ Scroll horizontally
WITHOUT_CLASSIFICATION	{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	{{{ getPhysicalLineOfScreenLine() method
WITHOUT_CLASSIFICATION	{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ Convenience methods
WITHOUT_CLASSIFICATION	{{{ getScreenLineStartOffset() method
WITHOUT_CLASSIFICATION	{{{ xToScreenLineOffset() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ invalidateLine() method
WITHOUT_CLASSIFICATION	{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	{{{ Painting
WITHOUT_CLASSIFICATION	{{{ invalidateLineRange() method
WITHOUT_CLASSIFICATION	{{{ getBufferLength() method
WITHOUT_CLASSIFICATION	{{{ invalidateSelectedLines() method
WITHOUT_CLASSIFICATION	to hide line highlight if selections are being added later on
WITHOUT_CLASSIFICATION	{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	{{{ getLineLength() method
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	{{{ getLineText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ selectNone() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ selectAll() method
WITHOUT_CLASSIFICATION	{{{ getSelection() method
WITHOUT_CLASSIFICATION	Scan backwards, trying to find a bracket
WITHOUT_CLASSIFICATION	{{{ Selection
WITHOUT_CLASSIFICATION	{{{ selectLine() method
WITHOUT_CLASSIFICATION	{{{ getSelectionCount() method
WITHOUT_CLASSIFICATION	{{{ selectParagraph() method
WITHOUT_CLASSIFICATION	We can't do the backward scan if start == 0
WITHOUT_CLASSIFICATION	{{{ selectWord() method
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	Reset count
WITHOUT_CLASSIFICATION	{{{ selectBlock() method
WITHOUT_CLASSIFICATION	{{{ setSelection() method
WITHOUT_CLASSIFICATION	{{{ setSelection() method
WITHOUT_CLASSIFICATION	Scan forward, matching that bracket
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ lineInStructureScope() method
WITHOUT_CLASSIFICATION	invalidate the old selection
WITHOUT_CLASSIFICATION	{{{ invertSelection() method
WITHOUT_CLASSIFICATION	{{{ addToSelection() method
WITHOUT_CLASSIFICATION	{{{ addToSelection() method
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	to hide current line highlight
WITHOUT_CLASSIFICATION	{{{ getSelectionAtOffset() method
WITHOUT_CLASSIFICATION	{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	{{{ resizeSelection() method
WITHOUT_CLASSIFICATION	{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	{{{ extendSelection() method
WITHOUT_CLASSIFICATION	{{{ extendSelection() method
WITHOUT_CLASSIFICATION	{{{ Caret
WITHOUT_CLASSIFICATION	{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	no no no!!!! selectNone(); }}}
WITHOUT_CLASSIFICATION	{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	for compatibility with older jEdit versions
WITHOUT_CLASSIFICATION	{{{ addStructureMatcher() method
WITHOUT_CLASSIFICATION	{{{ getSelectedLines() method
WITHOUT_CLASSIFICATION	{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ showSelectLineRangeDialog() method
WITHOUT_CLASSIFICATION	{{{ removeStructureMatcher() method
WITHOUT_CLASSIFICATION	{{{ getStructureMatch() method
WITHOUT_CLASSIFICATION	{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ blinkCaret() method
WITHOUT_CLASSIFICATION	{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ centerCaret() method
WITHOUT_CLASSIFICATION	{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ getCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ getCaretLine() method
WITHOUT_CLASSIFICATION	{{{ goToNextParagraph() method
WITHOUT_CLASSIFICATION	{{{ getMagicCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ setMagicCaretPosition() method
WITHOUT_CLASSIFICATION	{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	{{{ addCaretListener() method
WITHOUT_CLASSIFICATION	{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	{{{ removeCaretListener() method
WITHOUT_CLASSIFICATION	{{{ smartHome() method
WITHOUT_CLASSIFICATION	{{{ goToNextBracket() method
WITHOUT_CLASSIFICATION	{{{ goToPrevBracket() method
WITHOUT_CLASSIFICATION	{{{ goToNextLine() method
WITHOUT_CLASSIFICATION	{{{ goToFirstVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ goToNextMarker() method
WITHOUT_CLASSIFICATION	{{{ goToPrevLine() method
WITHOUT_CLASSIFICATION	{{{ goToNextPage() method
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	{{{ goToPrevMarker() method
WITHOUT_CLASSIFICATION	{{{ goToPrevPage() method
WITHOUT_CLASSIFICATION	{{{ smartEnd() method
WITHOUT_CLASSIFICATION	{{{ goToPrevParagraph() method
WITHOUT_CLASSIFICATION	{{{ goToLastVisibleLine() method
WITHOUT_CLASSIFICATION	{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	{{{ goToStartOfLine() method
WITHOUT_CLASSIFICATION	{{{ goToEndOfLine() method
WITHOUT_CLASSIFICATION	{{{ goToBufferStart() method
WITHOUT_CLASSIFICATION	{{{ goToStartOfWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ goToEndOfWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ goToBufferEnd() method
WITHOUT_CLASSIFICATION	{{{ addMarker() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ userInput() method
WITHOUT_CLASSIFICATION	{{{ deleteParagraph() method
WITHOUT_CLASSIFICATION	{{{ goToMatchingBracket() method
WITHOUT_CLASSIFICATION	{{{ toggleOverwriteEnabled() method
WITHOUT_CLASSIFICATION	{{{ showGoToLineDialog() method
WITHOUT_CLASSIFICATION	{{{ User input
WITHOUT_CLASSIFICATION	{{{ backspace() method
WITHOUT_CLASSIFICATION	check if the user entered a bracket
WITHOUT_CLASSIFICATION	{{{ deleteToStartOfLine() method
WITHOUT_CLASSIFICATION	{{{ isOverwriteEnabled() method
WITHOUT_CLASSIFICATION	{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	{{{ setOverwriteEnabled() method
WITHOUT_CLASSIFICATION	{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	{{{ toggleRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ deleteToEndOfLine() method
WITHOUT_CLASSIFICATION	{{{ deleteWord() method
WITHOUT_CLASSIFICATION	{{{ deleteLine() method
WITHOUT_CLASSIFICATION	{{{ deleteWord() method
WITHOUT_CLASSIFICATION	otherwise a bunch of consecutive C+d's would be merged into one edit
WITHOUT_CLASSIFICATION	{{{ swapMarkerAndCaret() method
WITHOUT_CLASSIFICATION	{{{ setRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ toggleMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ setMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ Markers
WITHOUT_CLASSIFICATION	{{{ isRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	{{{ Folding
WITHOUT_CLASSIFICATION	{{{ goToMarker() method
WITHOUT_CLASSIFICATION	always add markers on selected lines
WITHOUT_CLASSIFICATION	toggle marker on caret line
WITHOUT_CLASSIFICATION	{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	{{{ collapseFold() method
WITHOUT_CLASSIFICATION	{{{ expandFold() method
WITHOUT_CLASSIFICATION	{{{ toUpperCase() method
WITHOUT_CLASSIFICATION	{{{ goToParentFold() method
WITHOUT_CLASSIFICATION	{{{ narrowToFold() method
WITHOUT_CLASSIFICATION	{{{ goToNextFold() method
WITHOUT_CLASSIFICATION	{{{ goToPrevFold() method
WITHOUT_CLASSIFICATION	{{{ narrowToSelection() method
WITHOUT_CLASSIFICATION	{{{ selectFold() method
WITHOUT_CLASSIFICATION	{{{ selectFold() method
WITHOUT_CLASSIFICATION	{{{ toLowerCase() method
WITHOUT_CLASSIFICATION	{{{ addExplicitFold() method
WITHOUT_CLASSIFICATION	{{{ showWordCountDialog() method
WITHOUT_CLASSIFICATION	{{{ insertEnterAndIndent() method
WITHOUT_CLASSIFICATION	{{{ Text editing
WITHOUT_CLASSIFICATION	{{{ lineComment() method
WITHOUT_CLASSIFICATION	{{{ insertTabAndIndent() method
WITHOUT_CLASSIFICATION	{{{ rangeComment() method
WITHOUT_CLASSIFICATION	{{{ Right click popup
WITHOUT_CLASSIFICATION	if caret is inside leading whitespace, indent.
WITHOUT_CLASSIFICATION	{{{ isRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	{{{ indentSelectedLines() method
WITHOUT_CLASSIFICATION	{{{ joinLines() method
WITHOUT_CLASSIFICATION	{{{ setRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Deprecated methods
WITHOUT_CLASSIFICATION	{{{ AWT stuff
WITHOUT_CLASSIFICATION	{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	{{{ removeNotify() method
WITHOUT_CLASSIFICATION	{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	{{{ addNotify() method
WITHOUT_CLASSIFICATION	{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	{{{ getRightClickPopup() method
WITHOUT_CLASSIFICATION	{{{ addLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	{{{ setRightClickPopup() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStartLine() method
WITHOUT_CLASSIFICATION	{{{ handlePopupTrigger() method
WITHOUT_CLASSIFICATION	{{{ getMarkLine() method
WITHOUT_CLASSIFICATION	{{{ removeLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	{{{ setSelectionStart() method
WITHOUT_CLASSIFICATION	{{{ getFocusCycleRoot() method
WITHOUT_CLASSIFICATION	{{{ addTopComponent() method
WITHOUT_CLASSIFICATION	{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	{{{ removeTopComponent() method
WITHOUT_CLASSIFICATION	{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	{{{ select() method
WITHOUT_CLASSIFICATION	{{{ getSelectionEndLine() method
WITHOUT_CLASSIFICATION	{{{ select() method
WITHOUT_CLASSIFICATION	{{{ setSelectionEnd() method
WITHOUT_CLASSIFICATION	{{{ getMarkPosition() method
WITHOUT_CLASSIFICATION	{{{ isSelectionRectangular() method
WITHOUT_CLASSIFICATION	used to store offsetToXY() results
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Static variables
WITHOUT_CLASSIFICATION	this does the "trick" to eliminate blank space at the end
WITHOUT_CLASSIFICATION	{{{ isCaretVisible() method
WITHOUT_CLASSIFICATION	on JDK 1.4, this is set to a method by Java14. The method must take these parameters: - a JEditTextArea - an InputEvent - a boolean (copy text or move, depending on modifier user held down)
WITHOUT_CLASSIFICATION	{{{ isStructureHighlightVisible() method
WITHOUT_CLASSIFICATION	{{{ foldStructureChanged() method
WITHOUT_CLASSIFICATION	{{{ updateMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	in case one of the above fails, we still want to clear these flags.
WITHOUT_CLASSIFICATION	{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	{{{ finishCaretUpdate() method
WITHOUT_CLASSIFICATION	{{{ updateScrollBars() method
WITHOUT_CLASSIFICATION	{{{ getSelectionStartEndOnLine() method
WITHOUT_CLASSIFICATION	{{{ _finishCaretUpdate() method
WITHOUT_CLASSIFICATION	see finishCaretUpdate() & _finishCaretUpdate()
WITHOUT_CLASSIFICATION	called by DisplayManager.BufferChangeHandler.transactionComplete()
WITHOUT_CLASSIFICATION	{{{ insideSelection() method
WITHOUT_CLASSIFICATION	When the user is typing, etc, we don't want the caret to blink
WITHOUT_CLASSIFICATION	JDiff, error list add stuff here
WITHOUT_CLASSIFICATION	otherwise DisplayManager.BufferChangeHandler calls
WITHOUT_CLASSIFICATION	{{{ startDragAndDrop() method calls dndCallback via reflection
WITHOUT_CLASSIFICATION	{{{ doWordWrap() method
WITHOUT_CLASSIFICATION	{{{ _addToSelection() method
WITHOUT_CLASSIFICATION	{{{ updateStructureHighlightWithDelay() method
WITHOUT_CLASSIFICATION	{{{ fireCaretEvent() method
WITHOUT_CLASSIFICATION	only ever return true if space was pressed with logicalLength == maxLineLen
WITHOUT_CLASSIFICATION	{{{ fireScrollEvent() method
WITHOUT_CLASSIFICATION	{{{ insertTab() method
WITHOUT_CLASSIFICATION	{{{ doWordCount() method
WITHOUT_CLASSIFICATION	{{{ updateStructureHighlight() method
WITHOUT_CLASSIFICATION	Fix bug #922951 Off-by-one error in Word Count
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	{{{ Inner classes
WITHOUT_CLASSIFICATION	{{{ FocusHandler class
WITHOUT_CLASSIFICATION	{{{ paintBorder() method
WITHOUT_CLASSIFICATION	{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	{{{ delete() method
WITHOUT_CLASSIFICATION	{{{ mousePressed() method
WITHOUT_CLASSIFICATION	{{{ MouseHandler class
WITHOUT_CLASSIFICATION	{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	{{{ recalculateLastPhysicalLine() method
WITHOUT_CLASSIFICATION	only wrap if we're at the end of a line, or the rest of the line text is whitespace
WITHOUT_CLASSIFICATION	{{{ showStructureStatusMessage() method
WITHOUT_CLASSIFICATION	last character before wrap length with tabs expanded
WITHOUT_CLASSIFICATION	{{{ ScrollLayout class
WITHOUT_CLASSIFICATION	caretLine would have been incremented since insertNewLineAt <= caretPos
WITHOUT_CLASSIFICATION	get rid of embedded tabs not removed by trim()
WITHOUT_CLASSIFICATION	{{{ shiftTallCaretLeft() method
WITHOUT_CLASSIFICATION	{{{ getRectParams() method
WITHOUT_CLASSIFICATION	{{{ focusGained() method
WITHOUT_CLASSIFICATION	{{{ tallCaretDelete() method
WITHOUT_CLASSIFICATION	{{{ TextAreaBorder class
WITHOUT_CLASSIFICATION	{{{ CaretBlinker class
WITHOUT_CLASSIFICATION	{{{ MutableCaretEvent constructor
WITHOUT_CLASSIFICATION	{{{ MutableCaretEvent class
WITHOUT_CLASSIFICATION	{{{ getMark() method
WITHOUT_CLASSIFICATION	{{{ getDot() method
WITHOUT_CLASSIFICATION	{{{ adjustmentValueChanged() method
WITHOUT_CLASSIFICATION	{{{ AdjustHandler class
WITHOUT_CLASSIFICATION	XXX: getMarkPosition() deprecated!
WITHOUT_CLASSIFICATION	with drag and drop on, a mouse down in a selection does notimmediately deselect
WITHOUT_CLASSIFICATION	{{{ focusLost() method
WITHOUT_CLASSIFICATION	{{{ doSingleClick() method
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	case 3:
WITHOUT_CLASSIFICATION	so that Home <mouse click> Home is not the same as pressing Home twice in a row
WITHOUT_CLASSIFICATION	control-click in virtual space inserts whitespace and moves caret
WITHOUT_CLASSIFICATION	so that shift-click-drag works
WITHOUT_CLASSIFICATION	so that quick copy works
WITHOUT_CLASSIFICATION	{{{ doDoubleClick() method
WITHOUT_CLASSIFICATION	Ignore empty lines
WITHOUT_CLASSIFICATION	{{{ doTripleClick() method
WITHOUT_CLASSIFICATION	{{{ doSingleDrag() method
WITHOUT_CLASSIFICATION	just scroll to the dragged location
WITHOUT_CLASSIFICATION	{{{ doDoubleDrag() method
WITHOUT_CLASSIFICATION	{{{ doTripleDrag() method
WITHOUT_CLASSIFICATION	middle mouse button drag inserts selection at caret position
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ setBuffer() method
WITHOUT_CLASSIFICATION	{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	{{{ ChunkCache constructor
WITHOUT_CLASSIFICATION	return -1;
WITHOUT_CLASSIFICATION	{{{ getMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	{{{ invalidateChunksFromPhys() method
WITHOUT_CLASSIFICATION	Find the screen line containing this offset
WITHOUT_CLASSIFICATION	{{{ scrollDown() method
WITHOUT_CLASSIFICATION	line is invisible?
WITHOUT_CLASSIFICATION	{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	{{{ scrollUp() method
WITHOUT_CLASSIFICATION	{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	{{{ invalidateAll() method
WITHOUT_CLASSIFICATION	{{{ getLineInfo() method
WITHOUT_CLASSIFICATION	{{{ invalidateChunksFrom() method
WITHOUT_CLASSIFICATION	{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	{{{ getLineSubregionCount() method
WITHOUT_CLASSIFICATION	{{{ getBelowPosition() method
WITHOUT_CLASSIFICATION	{{{ getSubregionOfOffset() method
WITHOUT_CLASSIFICATION	{{{ updateChunksUpTo() method
WITHOUT_CLASSIFICATION	{{{ getSubregionStartOffset() method
WITHOUT_CLASSIFICATION	{{{ getAbovePosition() method
WITHOUT_CLASSIFICATION	{{{ getSubregionEndOffset() method
WITHOUT_CLASSIFICATION	{{{ needFullRepaint() method
WITHOUT_CLASSIFICATION	{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ clone() method
WITHOUT_CLASSIFICATION	Note that we rely on the fact that when a physical line is invalidated, all screen lines/subregions of that line are invalidated as well. See below comment for code that tries to uphold this assumption.
WITHOUT_CLASSIFICATION	find a valid line closest to the last screen line
WITHOUT_CLASSIFICATION	otherwise, determine the next visible line
WITHOUT_CLASSIFICATION	for the first line displayed, take its physical line to be the text area's first physical line
WITHOUT_CLASSIFICATION	if the user changes the syntax token at the end of a line, need to do a full repaint.
WITHOUT_CLASSIFICATION	if -1, the empty space at the end of the text area when the buffer has less lines than are visible
WITHOUT_CLASSIFICATION	empty space
WITHOUT_CLASSIFICATION	get another line of chunks
WITHOUT_CLASSIFICATION	if the line has no text, out.size() == 0
WITHOUT_CLASSIFICATION	unless this is the first time, increment the line number
WITHOUT_CLASSIFICATION	fix the bug where the horiz. scroll bar was not updated after creating a new file.
WITHOUT_CLASSIFICATION	We only cache entire physical lines at once; don't want to split a physical line into screen lines and only have some valid.
WITHOUT_CLASSIFICATION	chunk the line.
WITHOUT_CLASSIFICATION	otherwise, the number of subregions
WITHOUT_CLASSIFICATION	If this line has become longer or shorter (in which case the new physical line number is different from the cached one) we need to: - continue updating past the last line - advise the text area to repaint On the other hand, if the line wraps beyond lastScreenLine, we need to keep updating the chunk list to ensure proper alignment of invalidation flags (see start of method)
WITHOUT_CLASSIFICATION	{{{ LineInfo class
WITHOUT_CLASSIFICATION	{{{ getStartLine() method
WITHOUT_CLASSIFICATION	{{{ lineToChunkList() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ Selection constructor
WITHOUT_CLASSIFICATION	{{{ overlaps() method
WITHOUT_CLASSIFICATION	{{{ getEndLine() method
WITHOUT_CLASSIFICATION	{{{ Selection constructor
WITHOUT_CLASSIFICATION	{{{ Selection constructor
WITHOUT_CLASSIFICATION	{{{ Range class
WITHOUT_CLASSIFICATION	{{{ Range constructor
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ getText() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentInserted() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ setText() method
WITHOUT_CLASSIFICATION	{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getStart() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ getEnd() method
WITHOUT_CLASSIFICATION	{{{ Range constructor
WITHOUT_CLASSIFICATION	{{{ Range constructor
WITHOUT_CLASSIFICATION	{{{ Move the caret down a line
WITHOUT_CLASSIFICATION	{{{ Rect class
WITHOUT_CLASSIFICATION	{{{ getStartColumn() method
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ Rect constructor
WITHOUT_CLASSIFICATION	{{{ getEndColumn() method
WITHOUT_CLASSIFICATION	{{{ Split the text into lines
WITHOUT_CLASSIFICATION	{{{ Insert the lines into the buffer
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ init() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	{{{ Entry class
WITHOUT_CLASSIFICATION	{{{ Constants
WITHOUT_CLASSIFICATION	{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	{{{ addExtension() method
WITHOUT_CLASSIFICATION	{{{ removeExtension() method
WITHOUT_CLASSIFICATION	{{{ getExtensions() method
WITHOUT_CLASSIFICATION	notify a running waitForRequests() method
WITHOUT_CLASSIFICATION	wait for more requests
WITHOUT_CLASSIFICATION	status message changed, operation started, operation ends, ...
WITHOUT_CLASSIFICATION	progress bar value change
WITHOUT_CLASSIFICATION	Log some stuff
WITHOUT_CLASSIFICATION	{{{ setLogWriter() method
WITHOUT_CLASSIFICATION	do nothing, who cares
WITHOUT_CLASSIFICATION	{{{ flushStream() method
WITHOUT_CLASSIFICATION	{{{ closeStream() method
WITHOUT_CLASSIFICATION	{{{ getLogListModel() method
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ start() method
WITHOUT_CLASSIFICATION	{{{ Class initializer
WITHOUT_CLASSIFICATION	{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	{{{ reset() method
WITHOUT_CLASSIFICATION	{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	remove it so editor can continue functioning
WITHOUT_CLASSIFICATION	{{{ log() method
WITHOUT_CLASSIFICATION	so that jEdit doesn't exit with no views open automatically setDaemon(true);
WITHOUT_CLASSIFICATION	{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	If multiple threads log stuff, we don't want the output to get mixed up
WITHOUT_CLASSIFICATION	not really needed since threads don't start until after
WITHOUT_CLASSIFICATION	{{{ createPrintStream() method
WITHOUT_CLASSIFICATION	{{{ charAt() method
WITHOUT_CLASSIFICATION	{{{ _logException() method
WITHOUT_CLASSIFICATION	{{{ _log() method
WITHOUT_CLASSIFICATION	{{{ isValid() method
WITHOUT_CLASSIFICATION	{{{ LogListModel class
WITHOUT_CLASSIFICATION	{{{ addWorkRequest() method
WITHOUT_CLASSIFICATION	do any queued AWT runnables
WITHOUT_CLASSIFICATION	{{{ move() method
WITHOUT_CLASSIFICATION	{{{ if there are no requests, execute AWT requests immediately
WITHOUT_CLASSIFICATION	{{{ WorkThreadPool constructor
WITHOUT_CLASSIFICATION	{{{ fireStatusChanged() method
WITHOUT_CLASSIFICATION	{{{ getThreadCount() method
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,this,"AWT immediate: " + run);
WITHOUT_CLASSIFICATION	{{{ Add to AWT queue...
WITHOUT_CLASSIFICATION	{{{ getThread() method
WITHOUT_CLASSIFICATION	{{{ addProgressListener() method
WITHOUT_CLASSIFICATION	{{{ removeProgressListener() method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ append() method
WITHOUT_CLASSIFICATION	{{{ readLock() method
WITHOUT_CLASSIFICATION	{{{ readUnlock() method
WITHOUT_CLASSIFICATION	{{{ writeLock() method
WITHOUT_CLASSIFICATION	{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	AWT thread magic
WITHOUT_CLASSIFICATION	}}} {{{ Add to work thread queue...
WITHOUT_CLASSIFICATION	{{{ queueAWTRunner() method
WITHOUT_CLASSIFICATION	{{{ fireProgressChanged() method
WITHOUT_CLASSIFICATION	{{{ doAWTRequests() method
WITHOUT_CLASSIFICATION	{{{ requestDone() method
WITHOUT_CLASSIFICATION	{{{ RunRequestsInAWTThread class
WITHOUT_CLASSIFICATION	{{{ getNextRequest() method
WITHOUT_CLASSIFICATION	{{{ doAWTRequest() method
WITHOUT_CLASSIFICATION	Request queue
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,this,"AWT runner queued");
WITHOUT_CLASSIFICATION	readers.removeElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,this,"Running in AWT thread: " + request);
WITHOUT_CLASSIFICATION	{{{ SegmentBuffer constructor
WITHOUT_CLASSIFICATION	{{{ getNextAWTRequest() method
WITHOUT_CLASSIFICATION	{{{ allowRead() method
WITHOUT_CLASSIFICATION	{{{ Request class
WITHOUT_CLASSIFICATION	Write in progress.
WITHOUT_CLASSIFICATION	readers.addElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	Roll back state.
WITHOUT_CLASSIFICATION	{{{ allowWrite() method
WITHOUT_CLASSIFICATION	Same thread.
WITHOUT_CLASSIFICATION	{{{ isWriteLocked() method
WITHOUT_CLASSIFICATION	{{{ claimWriteLock() method
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	{{{ add() method
WITHOUT_CLASSIFICATION	{{{ clear() method
WITHOUT_CLASSIFICATION	{{{ getSize() method
WITHOUT_CLASSIFICATION	case ClassWriter.FIELD: case ClassWriter.METH: case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	{{{ get() method
WITHOUT_CLASSIFICATION	{{{ setSize() method
WITHOUT_CLASSIFICATION	{{{ getArray() method
WITHOUT_CLASSIFICATION	A constant pool item. Constant pool items can be created with the 'newXXX' methods in the {@link ClassWriter} class.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Special instructions -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Exceptions table entries, max stack size and max locals -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------- Debug information -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields for the control flow graph analysis algorithm (used to compute the maximum stack size). A control flow graph contains one node per "basic block", and one edge per "jump" from one basic block to another. Each node (i.e., each basic block) is represented by the Label object that corresponds to the first instruction of this basic block. Each node also stores the list of it successors in the graph, as a linked list of Edge objects. --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Methods to compute offsets and to manage forward references --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	changes the opcode of the jump instruction, in order to be able to find it later (see resizeInstructions in CodeWriter). These temporary opcodes are similar to jump instruction opcodes, except that the 2 bytes offset is unsigned (and can therefore represent values from 0 to 65535, which is sufficient since the size of a method is limited to 65535 bytes).
WITHOUT_CLASSIFICATION	changes IFEQ ... JSR to opcodes 202 to 217 (inclusive)
WITHOUT_CLASSIFICATION	changes IFNULL and IFNONNULL to opcodes 218 and 219 (inclusive)
WITHOUT_CLASSIFICATION	updates maxLocals
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	case 'L':
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Accessors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	case ARRAY: case OBJECT:
WITHOUT_CLASSIFICATION	case ARRAY: case OBJECT:
WITHOUT_CLASSIFICATION	case ARRAY: case OBJECT:
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Direct conversion from classes to type descriptors, without intermediate Type objects --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Corresponding size and opcodes --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Static initializer --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	pushes the first block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	if opcode == ATHROW or xRETURN, ends current block (no successor)
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	BIPUSH or NEWARRAY
WITHOUT_CLASSIFICATION	no stack change, but end of current block (no successor)
WITHOUT_CLASSIFICATION	xLOAD or xSTORE
WITHOUT_CLASSIFICATION	updates max locals
WITHOUT_CLASSIFICATION	ILOAD_0
WITHOUT_CLASSIFICATION	ISTORE_0
WITHOUT_CLASSIFICATION	WIDE
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	updates current and max stack sizes
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	computes the stack size variation
WITHOUT_CLASSIFICATION	updates current and max stack sizes only if opcode == NEWARRAY (stack size variation = 0 for BIPUSH or SIPUSH)
WITHOUT_CLASSIFICATION	WIDE
WITHOUT_CLASSIFICATION	updates current and max stack sizes only if opcode == NEW (stack size variation = 0 for ANEWARRAY, CHECKCAST, INSTANCEOF)
WITHOUT_CLASSIFICATION	case Constants.PUTFIELD:
WITHOUT_CLASSIFICATION	computes the stack size variation
WITHOUT_CLASSIFICATION	computes the stack size variation. In order not to recompute several times this variation for the same Item, we use the intVal field of this item to store this variation, once it has been computed. More precisely this intVal field stores the sizes of the arguments and of the return value corresponding to desc.
WITHOUT_CLASSIFICATION	JSR_W
WITHOUT_CLASSIFICATION	the above sizes have not been computed yet, so we compute them...
WITHOUT_CLASSIFICATION	... and we save them in order not to recompute them in the future
WITHOUT_CLASSIFICATION	no stack change, but end of current block (with one new successor)
WITHOUT_CLASSIFICATION	GOTO_W
WITHOUT_CLASSIFICATION	ends current block (with one new successor)
WITHOUT_CLASSIFICATION	resolves previous forward references to label, if any
WITHOUT_CLASSIFICATION	LDC2_W
WITHOUT_CLASSIFICATION	LDC_W
WITHOUT_CLASSIFICATION	updates max locals only (no stack change)
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	ends current block (with many new successors)
WITHOUT_CLASSIFICATION	ends current block (with many new successors)
WITHOUT_CLASSIFICATION	jump offset GOTO_W
WITHOUT_CLASSIFICATION	case of a backward jump with an offset >= -32768, or of a forward jump with, of course, an unknown offset. In these cases we store the offset in 2 bytes (which will be increased in resizeInstructions, if needed).
WITHOUT_CLASSIFICATION	begins a new current block, resets the relative current and max stack sizes
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged because stack size variation always negative or null)
WITHOUT_CLASSIFICATION	pushes handler block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	true (non relative) max stack size
WITHOUT_CLASSIFICATION	pops a block from the stack
WITHOUT_CLASSIFICATION	computes the true (non relative) max stack size of this block
WITHOUT_CLASSIFICATION	updates the global max stack size
WITHOUT_CLASSIFICATION	analyses the successors of the block
WITHOUT_CLASSIFICATION	if this successor has not already been pushed onto the stack...
WITHOUT_CLASSIFICATION	computes the true beginning stack size of this successor block
WITHOUT_CLASSIFICATION	pushes this successor onto the stack
WITHOUT_CLASSIFICATION	releases all the Edge objects used by this CodeWriter
WITHOUT_CLASSIFICATION	appends the [head ... tail] list at the beginning of the pool list
WITHOUT_CLASSIFICATION	creates a new Edge object or reuses one from the shared pool
WITHOUT_CLASSIFICATION	removes b from the pool
WITHOUT_CLASSIFICATION	adds the previous Edge to the list of Edges used by this CodeWriter
WITHOUT_CLASSIFICATION	initializes the previous Edge object...
WITHOUT_CLASSIFICATION	...and adds it to the successor list of the currentBlock block
WITHOUT_CLASSIFICATION	replaces the temporary jump opcodes introduced by Label.resolve.
WITHOUT_CLASSIFICATION	replaces old bytecodes with new ones
WITHOUT_CLASSIFICATION	returns the positions of the resized instructions
WITHOUT_CLASSIFICATION	forward jump
WITHOUT_CLASSIFICATION	backward jump
WITHOUT_CLASSIFICATION	access flags
WITHOUT_CLASSIFICATION	types for NEWARRAY
WITHOUT_CLASSIFICATION	JSR_W
WITHOUT_CLASSIFICATION	over estimation of the number of bytes to be added to this instruction = 3 - current number of padding bytes = 3 - (3 - u%4) = u%4 = u & 3
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: instruction resizing (used to handle GOTO_W and JSR_W) --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	bytecode of the method indexes in b loop indexes
WITHOUT_CLASSIFICATION	3 = loop again, 2 = loop ended, 1 = last pass, 0 = done
WITHOUT_CLASSIFICATION	two additional bytes will be required to replace this GOTO or JSR instruction with a GOTO_W or a JSR_W
WITHOUT_CLASSIFICATION	opcode of current instruction bytes to be added after this instruction
WITHOUT_CLASSIFICATION	true number of bytes to be added (or removed) from this instruction = (future number of padding bytes - current number of padding byte) - previously over estimated variation = = ((3 - newOffset%4) - (3 - u%4)) - u%4 = (-newOffset%4 + u%4) - u%4 = -(newOffset & 3)
WITHOUT_CLASSIFICATION	converts temporary opcodes 202 to 217 (inclusive), 218 and 219 to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	five additional bytes will be required to replace this IFxxx <l> instruction with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	like TABL_INSN
WITHOUT_CLASSIFICATION	like TABL_INSN
WITHOUT_CLASSIFICATION	skips instruction
WITHOUT_CLASSIFICATION	skips instruction
WITHOUT_CLASSIFICATION	adds a new (u, insert) entry in the allIndexes and allSizes arrays
WITHOUT_CLASSIFICATION	replaces GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	case ClassWriter.MANA_INSN:
WITHOUT_CLASSIFICATION	changes temporary opcodes 202 to 217 (inclusive), 218 and 219 to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	2nd step: copies the bytecode of the method into a new bytevector, updates the offsets, and inserts (or removes) bytes as requested.
WITHOUT_CLASSIFICATION	reads and copies instruction
WITHOUT_CLASSIFICATION	skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	jump offset GOTO_W newOffset now computed from start of GOTO_W
WITHOUT_CLASSIFICATION	skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	reads and copies instruction
WITHOUT_CLASSIFICATION	updates the instructions addresses in the catch, local var and line number tables
WITHOUT_CLASSIFICATION	case MANA_INSN:
WITHOUT_CLASSIFICATION	opcodes visit method (- = idem)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	scan from selection to end failed, so scan from start to selection
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Static initializer --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Implementation of the ClassVisitor interface --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Other public methods --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	computes the real size of the bytecode of this class
WITHOUT_CLASSIFICATION	allocates a byte vector of this size, in order to avoid unnecessary arraycopy operations in the ByteVector.enlarge() method
WITHOUT_CLASSIFICATION	special case: no current development version
WITHOUT_CLASSIFICATION	end AbstractOptionPane implementation
WITHOUT_CLASSIFICATION	begin ActionListener implementation
WITHOUT_CLASSIFICATION	helper method to get Font from plugin properties
WITHOUT_CLASSIFICATION	Constructor
WITHOUT_CLASSIFICATION	Attribute methods
WITHOUT_CLASSIFICATION	for toolbar display
WITHOUT_CLASSIFICATION	EBComponent implementation
WITHOUT_CLASSIFICATION	These JComponent methods provide the appropriate points to subscribe and unsubscribe this object to the EditBus
WITHOUT_CLASSIFICATION	QuickNotepadActions implementation
WITHOUT_CLASSIFICATION	Listener objects
WITHOUT_CLASSIFICATION	<Esc> closes a floating window
WITHOUT_CLASSIFICATION	cwd not implemented in this version
WITHOUT_CLASSIFICATION	end JcmdProcess.java
WITHOUT_CLASSIFICATION	Get full command line
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	we remember which classes we don't exist because BeanShell tries loading all possible <imported prefix>.<class name> combinations
WITHOUT_CLASSIFICATION	if it's not in the class hash, and not marked as non-existent, try loading it from the CLASSPATH
WITHOUT_CLASSIFICATION	To avoid any problems if components are added or removed while the message is being sent
WITHOUT_CLASSIFICATION	Some Java versions return the clipboard contents using the native line separator, so have to convert it here
WITHOUT_CLASSIFICATION	Either class sun.tools.javac.Main or com.sun.tools.javac.Main must be there:
WITHOUT_CLASSIFICATION	Stop script kiddies from opening the edit server port and just leaving it open, as a DoS
WITHOUT_CLASSIFICATION	coming out of background mode. no views open. no buffers open if args empty.
WITHOUT_CLASSIFICATION	since recentBuffer will be set to the one that was closed
WITHOUT_CLASSIFICATION	- don't do these checks while a save is in progress, because for a moment newModTime will be greater than oldModTime, due to the multithreading - only supported on local file system
WITHOUT_CLASSIFICATION	this ensures that undo can clear the dirty flag properly when all edits up to a save are undone
WITHOUT_CLASSIFICATION	note that if firstLine == lastLine, loop does not execute
WITHOUT_CLASSIFICATION	fill in defaults for these from system properties if the corresponding buffer.XXX properties not set
WITHOUT_CLASSIFICATION	create a DirectoryEntry manually instead of using _vfs._getDirectoryEntry() since so many VFS's have broken implementations of this method
WITHOUT_CLASSIFICATION	Java does not support this encoding so we have to handle it manually.
WITHOUT_CLASSIFICATION	file begins with UTF-8-Y signature. discard the signature, and read the remainder as UTF-8.
WITHOUT_CLASSIFICATION	fix for "[ 865589 ] 0-byte files should open using the default line seperator"
WITHOUT_CLASSIFICATION	helper methods
WITHOUT_CLASSIFICATION	call sendBreak after fixed number of lines of stdout are read
WITHOUT_CLASSIFICATION	end JcmdProcessTest.java
WITHOUT_CLASSIFICATION	Big enough for a \r\n pair lookBehind[0] = most recent lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	Is this it? Is the class public or can we use accessibility?
WITHOUT_CLASSIFICATION	we don't know the right hand side of the assignment yet. has at least one setter of the right name?
WITHOUT_CLASSIFICATION	Add the '0-repeats' index positions.elementAt(z) == position [] in input after <<z>> matches
WITHOUT_CLASSIFICATION	Order these from longest to shortest Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	These variables are package scope for fast access within the engine execution flags this match was made using
WITHOUT_CLASSIFICATION	These are, respectively, the first and last tokens in our linked list If there is only one token, firstToken == lastToken
WITHOUT_CLASSIFICATION	not in settings directory or jEdit home directory. no need to reload anything.
WITHOUT_CLASSIFICATION	}}} {{{ Insert the expansion
WITHOUT_CLASSIFICATION	$ at end is literal }}}
WITHOUT_CLASSIFICATION	later on we need to know if certain code is called from the main thread
WITHOUT_CLASSIFICATION	ok, this one seems to confuse newbies endlessly, so log it as NOTICE, not ERROR
WITHOUT_CLASSIFICATION	don't show splash screen if there is a file named 'nosplash' in the settings directory
WITHOUT_CLASSIFICATION	This reloads the token marker and sends a message which causes edit panes to repaint their text areas
WITHOUT_CLASSIFICATION	If only one new file is open which is clean, just close it, which will create an 'Untitled-1'
WITHOUT_CLASSIFICATION	can happen if the user presses C+w twice real quick and the buffer has unsaved changes
WITHOUT_CLASSIFICATION	paths on case-insensitive filesystems are stored as lower case in the hash.
WITHOUT_CLASSIFICATION	still need to call the status check even if the option is off, so that the write protection is updated if it changes on disk
WITHOUT_CLASSIFICATION	the problem with this is that if we have two edit panes looking at the same buffer and the file is reloaded both will jump to the same location
WITHOUT_CLASSIFICATION	Don't show the welcome message if jEdit was started with the -nosettings switch
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,jEdit.class,"Adding edit mode " + mode.getName());
WITHOUT_CLASSIFICATION	if only one, clean, 'untitled' buffer is open, we replace it
WITHOUT_CLASSIFICATION	if the user pressed eg C+e n n in the search bar we want focus to go back there after the prefix is done
WITHOUT_CLASSIFICATION	we might have been closed as a result of the above
WITHOUT_CLASSIFICATION	we might have been closed as a result of the above
WITHOUT_CLASSIFICATION	tool bar and status bar gets added in propertiesChanged() depending in the 'tool bar alternate layout' setting.
WITHOUT_CLASSIFICATION	null some variables so that retaining references to closed views won't hurt as much.
WITHOUT_CLASSIFICATION	we create a stream tokenizer for parsing a simple stack-based language
WITHOUT_CLASSIFICATION	REVIEW This is horribly inefficient, but it ensures that we properly skip over bytes via the TarBuffer...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Do not evaluate methods this() or super() in class instance space (i.e. inside a constructor)
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Check if a plugin with the same name is already loaded
WITHOUT_CLASSIFICATION	remove action sets, dockables, etc so that user doesn't see the broken plugin
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	endIndex is now position at a ')','\)' nextIndex is end of string or position after ')' or '\)'
WITHOUT_CLASSIFICATION	ONE-OR-MORE REPEAT OPERATOR + | \+ depending on RE_BK_PLUS_QM not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	ZERO-OR-ONE REPEAT OPERATOR / STINGY MATCHING OPERATOR ? | \? depending on RE_BK_PLUS_QM not available if RE_LIMITED_OPS is set stingy matching if RE_STINGY_OPS is set and it follows a quantifier
WITHOUT_CLASSIFICATION	WORD BREAK OPERATOR \b if ????
WITHOUT_CLASSIFICATION	DIGIT OPERATOR \d if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	NON-WHITESPACE OPERATOR \S
WITHOUT_CLASSIFICATION	(?:) ?,??,+?,{}? (?=)(?!) \A,\Z \d,\D,\w,\W,\s,\S within [] (?#)
WITHOUT_CLASSIFICATION	if chain returns false, it "rejected" the token due to an optimization, and next was combined with lastToken
WITHOUT_CLASSIFICATION	next succeeds is a match try next option
WITHOUT_CLASSIFICATION	No absolute pathnames Windows (and Posix?) paths can start with "\\NetworkDrive\", so we loop on starting /'s.
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537; compressOutOfMemory ( totalDraw, n );
WITHOUT_CLASSIFICATION	ensures that active view is saved last, ie created last on next load, ie in front on next load
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	record \n and \t on lines specially so that auto indent can take place
WITHOUT_CLASSIFICATION	since subsequent macros with the same name are ignored, load user macros first so that they override the system macros.
WITHOUT_CLASSIFICATION	in case macro file name has a space in it. spaces break the view.toolBar property, for instance, since it uses spaces to delimit action names.
WITHOUT_CLASSIFICATION	System.err.println("y=" + y + ",offsetY=" + offsetY + ",size.height=" + size.height + ",win.height=" + win.getHeight());
WITHOUT_CLASSIFICATION	I'm not sure when this can happen, but it does sometimes, witness the jEdit bug tracker.
WITHOUT_CLASSIFICATION	Constructors.
WITHOUT_CLASSIFICATION	Constants for input.
WITHOUT_CLASSIFICATION	Read the value, normalizing whitespace if it is not CDATA.
WITHOUT_CLASSIFICATION	Check for surrogates: 00000000 0000xxxx yyyyyyyy zzzzzzzz (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz:
WITHOUT_CLASSIFICATION	Search for a matching tuple, and return the string if we find one.
WITHOUT_CLASSIFICATION	OK, add it to the end of the bucket.
WITHOUT_CLASSIFICATION	Attributes
WITHOUT_CLASSIFICATION	High-level I/O.
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x00 0x00 0x00 0x3c: UCS-4, big-endian (1234)
WITHOUT_CLASSIFICATION	Set up a snapshot of the current input source.
WITHOUT_CLASSIFICATION	Compare the input, character- by character.
WITHOUT_CLASSIFICATION	Buffers for decoded but unparsed character input.
WITHOUT_CLASSIFICATION	Buffer for undecoded raw byte input.
WITHOUT_CLASSIFICATION	This is necessary to have a file opened from the Finder before jEdit is running set as the currently active buffer.
WITHOUT_CLASSIFICATION	super(); }}}
WITHOUT_CLASSIFICATION	put forNameSpace it on the top of the stack Note: it's important that there is only one exit point from this method so that we can swap back the namespace.
WITHOUT_CLASSIFICATION	The lock is our declaring namespace's This reference (the method's 'super'). Or in the case of a class it's the class instance.
WITHOUT_CLASSIFICATION	Set untyped variable untyped param
WITHOUT_CLASSIFICATION	Check for explicit return of value from void method type. retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	remove the bsh: get the index of the : between the host and the port is located
WITHOUT_CLASSIFICATION	Unwrap target exception. If the interface declares that it throws the ex it will be delivered. If not it will be wrapped in an UndeclaredThrowable
WITHOUT_CLASSIFICATION	Get the type by constructing a prototype array with arbitrary (zero) length in each dimension. int array default zeros
WITHOUT_CLASSIFICATION	If it had a different type throw error. This allows declaring the same var again, but not with a different (even if assignable) type.
WITHOUT_CLASSIFICATION	Careful here: else fall through to override and install the new typed version
WITHOUT_CLASSIFICATION	now done in NameSpace automatically when root The classes which are imported by default globalNameSpace.loadDefaultImports();
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	--------------------------------------------------------- The following instance variables mutate during evaluation and should be reset by the reset() method where necessary
WITHOUT_CLASSIFICATION	No variable or class found in 'this' type ref. if autoAllocateThis then create one; a child 'this'.
WITHOUT_CLASSIFICATION	null 'from' type corresponds to type of Primitive.NULL assign to any object type
WITHOUT_CLASSIFICATION	wrapper to primitive Convert value to Primitive and check/cast it.
WITHOUT_CLASSIFICATION	For operator-assign operations save the lhs value before evaluating the rhs. This is correct Java behavior for postfix operations e.g. i=1; i+=i++; should be 2 not 3
WITHOUT_CLASSIFICATION	number of nodes on stack current mark
WITHOUT_CLASSIFICATION	Try to load the module don't refer to it directly here or we're dependent upon it
WITHOUT_CLASSIFICATION	NULL return null as type... we currently use null type to indicate loose typing throughout bsh.
WITHOUT_CLASSIFICATION	Trying to cast primitive to an object type Primitive.NULL can be cast to any object type
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - super constructor args null node, null callstack, ParseException knows where the error is.
WITHOUT_CLASSIFICATION	Push nulls for various args of invokeMethod interpreter callstack callerinfo
WITHOUT_CLASSIFICATION	Generate code to call ClassGeneratorUtil to get our switch index and give us args...
WITHOUT_CLASSIFICATION	check to see if the instance has already been initialized (the case if using a this() alternate constuctor)
WITHOUT_CLASSIFICATION	evaluate the instance portion of the block in it Evaluate the initializer block
WITHOUT_CLASSIFICATION	Handle ".class" suffix operation Prefix must be a BSHType
WITHOUT_CLASSIFICATION	}}} {{{ Word character...
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	we didn't have a component previously, so create a border
WITHOUT_CLASSIFICATION	{{{ filesActivated() method canDoubleClickClose set to false when ENTER pressed
WITHOUT_CLASSIFICATION	we expand those that are non-empty, and remove those that are empty
WITHOUT_CLASSIFICATION	{{{ setFoldLevel() method Also sets 'fold level valid' flag
WITHOUT_CLASSIFICATION	if auto wrap is on, always restart search. if auto wrap is off, and we're called from a macro, stop search. If we're called interactively, ask the user what to do.
WITHOUT_CLASSIFICATION	for backwards compatibility with plugins that fiddle with jEdit's UI layout
WITHOUT_CLASSIFICATION	we have binding foo but user asks to remove foo bar?
WITHOUT_CLASSIFICATION	we keep the first non-null frc we get, since sometimes we get invalid ones on subsequent pages on Windows
WITHOUT_CLASSIFICATION	this is handled a little differently from other jEdit settings as the splash screen flag needs to be known very early in the startup sequence, before the user properties have been loaded
WITHOUT_CLASSIFICATION	impl note: since multiple searches now allowed, extra level in hierarchy
WITHOUT_CLASSIFICATION	invalid regexp, ignore return true to avoid annoying beeping while typing a re
WITHOUT_CLASSIFICATION	we use a custom JRadioButton subclass that returns false for isFocusTraversable() so that the user can tab from the search field to the replace field with one keystroke
WITHOUT_CLASSIFICATION	the code above builds a 1-indexed suffix array, but we shift it to be 0-indexed, ignoring the original 0-th element
WITHOUT_CLASSIFICATION	Leave buffer in a consistent state if an error occurs
WITHOUT_CLASSIFICATION	{{{ lazily create skip and suffix arrays for either the search pattern, or the reversed search pattern
WITHOUT_CLASSIFICATION	used for the stringReplace and beanShell replace radio buttons, so that the user can press tab to go from the find field to the replace field in one go
WITHOUT_CLASSIFICATION	if the caret is on a collapsed fold, collapse the parent fold
WITHOUT_CLASSIFICATION	this is either style.getBackgroundColor() or styles[defaultID].getBackgroundColor()
WITHOUT_CLASSIFICATION	complete-word command needs a list of all non-alphanumeric characters used in a keyword map.
WITHOUT_CLASSIFICATION	}}} {{{ Paint bracket scope
WITHOUT_CLASSIFICATION	{{{ physDown() method scroll down by physical line amount
WITHOUT_CLASSIFICATION	still have to call this even if it equals the old one so that the offset manager sets the validity flag!
WITHOUT_CLASSIFICATION	No matter what happends... stops us from leaving buffer in a bad state
WITHOUT_CLASSIFICATION	Don't overstrike if we're on the end of the line
WITHOUT_CLASSIFICATION	so that end followed by up arrow will always put caret at the end of the previous line, for example setMagicCaretPosition(Integer.MAX_VALUE); }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	this is package-private so that the painter can use it without having to call getSelection() (which involves an array copy)
WITHOUT_CLASSIFICATION	try and merge existing selections one by one with the new selection
WITHOUT_CLASSIFICATION	if one line's chunks are invalid, remaining lines are also invalid
WITHOUT_CLASSIFICATION	case ClassWriter.FIELD: case ClassWriter.METH: case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	updates current stack size (max stack size unchanged because stack size variation always negative in this case)
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: control flow analysis algorithm --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	copy of indexes copy of sizes instructions to be resized future offset of a jump instruction
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	Perform a cast, cast check, or assignability check.@param toType the class type of the cast result, which may includeprimitive types, e.g. Byte.TYPE. toType may be null to indicate aloose type assignment (which matches any fromType).@param fromType is the class type of the value to be cast includingjava primitive TYPE classes for primitives.fromType should be null to indicate that the fromValue is or wouldbe Primitive.NULL@param fromValue an Object or bsh.Primitive primitive value (includingPrimitive.NULL or Primitive.VOID )@param checkOnly If checkOnly is true then fromValue must be null.FromType is checked for the cast to toType...If checkOnly is false then fromValue must be non-null(Primitive.NULL is ok) and the actual cast is performed.@throws UtilEvalError on invalid assignment (when operation isassignment ).@throws UtilTargetError wrapping ClassCastException on cast error (when operation is cast)@param operation is Types.CAST or Types.ASSIGNMENT@see Primitive.getType()
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	}}}
WITHOUT_CLASSIFICATION	I/O information. current reader current input stream current line number current column number type of input source stack of input soruces current external entity current character encoding. how many bytes read from current source.
WITHOUT_CLASSIFICATION	We'll print our banner using eval(String) in order to exercise the parser and get the basic expression classes loaded... This ameliorates the delay after typing the first statement.
WITHOUT_CLASSIFICATION	Disallowing VOIDs here was an easy way to support the throwing of a more descriptive error message on use of an undefined argument to a method call (very common). If it ever turns out that we need to support that for some reason we'll have to re-evaluate how we get "meta-information" about the arguments in the various invoke() methods that take Object []. We could either pass BSHArguments down to overloaded forms of the methods or throw an exception subtype including the argument position back up, where the error message wouldbe compounded.
WITHOUT_CLASSIFICATION	Primitive (number or void) is not normally an instanceofanything. But for internal use we'll test true for thebsh.Primitive class. i.e. (5 instanceof bsh.Primitive) will be true
WITHOUT_CLASSIFICATION	this will be the current parse character (pattern[index])
WITHOUT_CLASSIFICATION	this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating
WITHOUT_CLASSIFICATION	fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Conversion to type descriptors --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	each JAR file listed in the plugin's jars property needs to know that we need them
WITHOUT_CLASSIFICATION	Maintain a count of errors.
WITHOUT_CLASSIFICATION	number of child nodes
WITHOUT_CLASSIFICATION	number of child nodes
WITHOUT_CLASSIFICATION	wrap the exception in a TargetException to propogate it up
WITHOUT_CLASSIFICATION	object is a java.lang wrapper for boolean, char, or number type
WITHOUT_CLASSIFICATION	ALTERNATION OPERATOR \| or | (if RE_NO_BK_VBAR) or newline (if RE_NEWLINE_ALT) not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	}}} }}} }}}
WITHOUT_CLASSIFICATION	{{{ removeBufferFromList() method
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields for the control flow graph analysis algorithm (used to compute the maximum stack size). A control flow graph contains one node per "basic block", and one edge per "jump" from one basic block to another. Each node (i.e., each basic block) is represented by the Label object that corresponds to the first instruction of this basic block. Each node also stores the list of its successors in the graph, as a linked list of Edge objects. --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	default for plugins that don't specify this property (ie, 4.1-style plugins) is to load them on startup
WITHOUT_CLASSIFICATION	overflow character from last data chunk.
WITHOUT_CLASSIFICATION	sanity check during development
WITHOUT_CLASSIFICATION	A definite node is constructed from a specified number of children. That number of nodes are popped from the stack and made the children of the definite node. Then the definite node is pushed on to the stack.
WITHOUT_CLASSIFICATION	while in list Out of list, index is one past ']'
WITHOUT_CLASSIFICATION	don't do this in static{} since we need jEdit.initMisc() run first so we have the jeditresource: protocol
WITHOUT_CLASSIFICATION	if value is null: - if default is null, unset user prop - else set user prop to "" else - if default equals value, ignore - if default doesn't equal value, set user
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields to optimize the creation of {@link Edge Edge} objects by using a pool of reusable objects. The (shared) pool is a linked list of Edge objects, linked to each other by their {@link Edge#poolNext} field. Each time a CodeWriter needs to allocate an Edge, it removes the first Edge of the pool and adds it to a private list of Edge objects. After the end of the control flow analysis algorithm, the Edge objects in the private list of the CodeWriter are added back to the pool (by appending this private list to the pool list; in order to do this in constant time, both head and tail of the private list are stored in this CodeWriter). --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	buffers retain a reference to the fold handler in question... and the easiest way to handle fold handler unloading is this...
WITHOUT_CLASSIFICATION	Buffer for parsed character data.
WITHOUT_CLASSIFICATION	We get stuck in infinite loops here when unicode escapesfail. Must re-init the char stream reader (ASCII_UCodeESC_CharStream.java)
WITHOUT_CLASSIFICATION	find the java method
WITHOUT_CLASSIFICATION	SUBEXPRESSIONS (...) | \(...\) depending on RE_NO_BK_PARENS
WITHOUT_CLASSIFICATION	even though this class is called AbstractOptionPane, it is not really abstract, since BufferOptions uses an instance of it to lay out its components.
WITHOUT_CLASSIFICATION	{{{ loadIfNecessary() method
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Implementation of the CodeVisitor interface --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	{{{ Package-private members
WITHOUT_CLASSIFICATION	Buffer for parsed names.
WITHOUT_CLASSIFICATION	reinit the callstack
WITHOUT_CLASSIFICATION	Do we have the necessary jdk1.2 packages and optional package?
WITHOUT_CLASSIFICATION	I guess this is when we pass it as an argument? Setting locally
WITHOUT_CLASSIFICATION	not a comment create RE subexpression as token.
WITHOUT_CLASSIFICATION	{{{ addComponent() method
WITHOUT_CLASSIFICATION	{{{ setProperties() method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	{{{ Private members
WITHOUT_CLASSIFICATION	Hash table of attributes found in current start tag.
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	UNMATCHED RIGHT PAREN ) or \) throw exception if !syntax.get(RESyntax.RE_UNMATCHED_RIGHT_PAREN_ORD)
WITHOUT_CLASSIFICATION	private
WITHOUT_CLASSIFICATION	need to carry over file name and first line globs because they are not given to us by the XMode handler, but instead are filled in by the catalog loader.
WITHOUT_CLASSIFICATION	case of a backward jump with an offset < -32768. In this case we automatically replace GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	{{{ Instance variables
WITHOUT_CLASSIFICATION	dockMenu.addItem(new NSMenuItem().separatorItem()); dockMenu.addItem(miMac);
WITHOUT_CLASSIFICATION	Create non-interactive local interpreter for this namespacewith source from the input stream and out/err same as this interpreter.
WITHOUT_CLASSIFICATION	If not found and there are arguments to match - Look for an overloaded assignable match (First find the method, then find accessible version of it)
WITHOUT_CLASSIFICATION	MATCH-ANY-CHARACTER OPERATOR (except possibly newline and null) .
WITHOUT_CLASSIFICATION	{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	no need to do this for macros!
WITHOUT_CLASSIFICATION	GOTO_W
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	}}} }}}
WITHOUT_CLASSIFICATION	{{{ applicationShouldHandleReopen() method
WITHOUT_CLASSIFICATION	throw new EvalError("Sourced file: "+sourceFileInfo+" parser Error: " + e.getMessage( DEBUG ), node, callstack );
WITHOUT_CLASSIFICATION	Try static and then object, if allowed Note that the Java compiler should not allow both.
WITHOUT_CLASSIFICATION	search all of its interfaces breadth first
WITHOUT_CLASSIFICATION	ZERO-OR-MORE REPEAT OPERATOR
WITHOUT_CLASSIFICATION	see what JARClassLoader this class is in
WITHOUT_CLASSIFICATION	never called
WITHOUT_CLASSIFICATION	control flow analysis algorithm: while the block stack is not empty, pop a block from this stack, update the max stack size, compute the true (non relative) begin stack size of the successors of this block, and push these successors onto the stack (unless they have already been pushed onto the stack). Note: by hypothesis, the {@link Label#beginStackSize} of the blocks in the block stack are the true (non relative) beginning stack sizes of these blocks.
WITHOUT_CLASSIFICATION	Note: some interesting things are going on here.1) We swap instead of push... The primary mode of operation acts like we are in the enclosing namespace... (super must be preserved, etc.)2) We do not call the body block eval with the namespace override. Instead we allow it to create a second subordinate BlockNameSpace child of the forNameSpace. Variable propogation still works through the chain, but the block's child cleans the state between iteration. (which is correct Java behavior... see forscope4.bsh)
WITHOUT_CLASSIFICATION	WORD BEGIN OPERATOR \< if ????
WITHOUT_CLASSIFICATION	used to mark non-existent classes in class hash
WITHOUT_CLASSIFICATION	evaluate a method declaration
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: dump bytecode array --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	End methods for interacting with Parser
WITHOUT_CLASSIFICATION	NULL means "no value". This ia a placeholder for primitive null value.
WITHOUT_CLASSIFICATION	If idealMatch fits targetMatch and this is the first match or targetMatch is more specific than the best match, make it the new best match.
WITHOUT_CLASSIFICATION	TAB ESCAPE \t
WITHOUT_CLASSIFICATION	{{{ cut() method
WITHOUT_CLASSIFICATION	{{{ CustomClassManager class
WITHOUT_CLASSIFICATION	Set the default entities here.
WITHOUT_CLASSIFICATION	The canonical file name is also absolute. No need for getAbsolutePath() here...
WITHOUT_CLASSIFICATION	private to prevent invocation with param that isn't a primitive-wrapper
WITHOUT_CLASSIFICATION	NON-SPECIAL CHARACTER (or escape to make literal) c | \ for example
WITHOUT_CLASSIFICATION	{{{ getRegister() method
WITHOUT_CLASSIFICATION	1st step: As explained above, resizing an instruction may require to resize another one, which may require to resize yet another one, and so on. The first step of the algorithm consists in finding all the instructions that need to be resized, without modifying the code. This is done by the following "fix point" algorithm: - parse the code to find the jump instructions whose offset will need more than 2 bytes to be stored (the future offset is computed from the current offset and from the number of bytes that will be inserted or removed between the source and target instructions). For each such instruction, adds an entry in (a copy of) the indexes and sizes arrays (if this has not already been done in a previous iteration!) - if at least one entry has been added during the previous step, go back to the beginning, otherwise stop. In fact the real algorithm is complicated by the fact that the size of TABLESWITCH and LOOKUPSWITCH instructions depends on their position in the bytecode (because of padding). In order to ensure the convergence of the algorithm, the number of bytes to be added or removed from these instructions is over estimated during the previous loop, and computed exactly only after the loop is finished (this requires another pass to parse the bytecode of the method).
WITHOUT_CLASSIFICATION	When the class is loaded, populate the hash table of attribute types.
WITHOUT_CLASSIFICATION	modifiers
WITHOUT_CLASSIFICATION	If this type of This implements it directly return this,else try complain that we don't have the proxy mechanism.
WITHOUT_CLASSIFICATION	If both original args were Primitives return a Primitive result else it was mixed (wrapper/primitive) return the wrapper type Exception is for boolean result, return the primitive
WITHOUT_CLASSIFICATION	bcm
WITHOUT_CLASSIFICATION	Overrides REToken.chain
WITHOUT_CLASSIFICATION	{{{ constructPath() method
WITHOUT_CLASSIFICATION	clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	visitInsn - - - - - - - - - - - - - - - visitIntInsn - visitLdcInsn int LDC_W = 19; - int LDC2_W = 20; - visitVarInsn - - - - int ILOAD_0 = 26; - int ILOAD_1 = 27; - int ILOAD_2 = 28; - int ILOAD_3 = 29; - int LLOAD_0 = 30; - int LLOAD_1 = 31; - int LLOAD_2 = 32; - int LLOAD_3 = 33; - int FLOAD_0 = 34; - int FLOAD_1 = 35; - int FLOAD_2 = 36; - int FLOAD_3 = 37; - int DLOAD_0 = 38; - int DLOAD_1 = 39; - int DLOAD_2 = 40; - int DLOAD_3 = 41; - int ALOAD_0 = 42; - int ALOAD_1 = 43; - int ALOAD_2 = 44; - int ALOAD_3 = 45; - visitInsn - - - - - - - visitVarInsn - - - - int ISTORE_0 = 59; - int ISTORE_1 = 60; - int ISTORE_2 = 61; - int ISTORE_3 = 62; - int LSTORE_0 = 63; - int LSTORE_1 = 64; - int LSTORE_2 = 65; - int LSTORE_3 = 66; - int FSTORE_0 = 67; - int FSTORE_1 = 68; - int FSTORE_2 = 69; - int FSTORE_3 = 70; - int DSTORE_0 = 71; - int DSTORE_1 = 72; - int DSTORE_2 = 73; - int DSTORE_3 = 74; - int ASTORE_0 = 75; - int ASTORE_1 = 76; - int ASTORE_2 = 77; - int ASTORE_3 = 78; - visitInsn - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - visitIincInsn visitInsn - - - - - - - - - - - - - - - - - - - visitJumpInsn - - - - - - - - - - - - - - - visitVarInsn visiTableSwitchInsn visitLookupSwitch visitInsn - - - - - visitFieldInsn - - - visitMethodInsn - - - int UNUSED = 186; NOT VISITED visitTypeInsn visitIntInsn visitTypeInsn visitInsn - visitTypeInsn - visitInsn - int WIDE = 196; NOT VISITED visitMultiANewArrayInsn visitJumpInsn - int GOTO_W = 200; - int JSR_W = 201; -
WITHOUT_CLASSIFICATION	Flags for reading literals.
WITHOUT_CLASSIFICATION	If null callstack
WITHOUT_CLASSIFICATION	invokeMethod() here is generally used by outside code to callbackinto the bsh interpreter. e.g. when we are acting as an interfacefor a scripted listener, etc. In this case there is no real call stackso we make a default one starting with the special JAVACODE namespaceand our namespace as the next.
WITHOUT_CLASSIFICATION	arithmetic
WITHOUT_CLASSIFICATION	eof
WITHOUT_CLASSIFICATION	this has been changed since 1.03 to be non-overlapping matches
WITHOUT_CLASSIFICATION	have to handle this case specially on windows. insert \ between, eg A: and myfile.txt.
WITHOUT_CLASSIFICATION	{{{ ToolBar-related constants
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Utility methods: constant pool management --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Error reporting.
WITHOUT_CLASSIFICATION	Invoke the block, overriding namespace with localNameSpace
WITHOUT_CLASSIFICATION	a default hashCode()
WITHOUT_CLASSIFICATION	can't cast void to anything
WITHOUT_CLASSIFICATION	Thanks to Sreenivasa Viswanadha for suggesting how to get rid of expensivelookahead here.
WITHOUT_CLASSIFICATION	Create a new REMatch to hold results
WITHOUT_CLASSIFICATION	{{{ saveBackup() method
WITHOUT_CLASSIFICATION	{{{ saveBackup() method
WITHOUT_CLASSIFICATION	{{{ Layers
WITHOUT_CLASSIFICATION	Method body can only use 'return' statment type return control.
WITHOUT_CLASSIFICATION	These are necessary to let us test synchronization from scripts
WITHOUT_CLASSIFICATION	Only allow legal Java assignment unless we're a CAST operation
WITHOUT_CLASSIFICATION	@bgen(jjtree) ArrayInitializer
WITHOUT_CLASSIFICATION	Optimization: check if anchor + minimumLength > length
WITHOUT_CLASSIFICATION	if backup file was created less than 'backupTimeDistance' ago, we do not create the backup
WITHOUT_CLASSIFICATION	{{{ actionBar() method
WITHOUT_CLASSIFICATION	Read the attribute name.
WITHOUT_CLASSIFICATION	retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	null evalname and we're finished base object for current eval
WITHOUT_CLASSIFICATION	Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	Originally called ResultType in the grammar
WITHOUT_CLASSIFICATION	Special handling at end of input for e.g. "$"
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	{{{ quicksort() method
WITHOUT_CLASSIFICATION	this should never throw an exception.
WITHOUT_CLASSIFICATION	Inform the handler about the attribute.
WITHOUT_CLASSIFICATION	If return type void, return void as the value.
WITHOUT_CLASSIFICATION	Note: it's ok to cache class resolution here because when the class space changes the namespace will discard cached names.
WITHOUT_CLASSIFICATION	EOF, not zero read apparently
WITHOUT_CLASSIFICATION	Expression syntax follows.
WITHOUT_CLASSIFICATION	Precondition: pattern[index-1] == ':' we will return pos of closing ']'.
WITHOUT_CLASSIFICATION	{{{ isToolsJarAvailable() method
WITHOUT_CLASSIFICATION	Bind to any port on localhost; accept 2 simultaneous connection attempts before rejecting connections
WITHOUT_CLASSIFICATION	Found "<?"
WITHOUT_CLASSIFICATION	If we have type info and the child is an array initializerpass it along... Else use the default eval style.(This allows array initializer to handle the problem... allowing for future enhancements in loosening types there).
WITHOUT_CLASSIFICATION	Is it a simple variable name?Doing this first gives the correct Java precedence for vars vs. imported class names (at least in the simple case - seetests/precedence1.bsh). It should also speed things up a bit.
WITHOUT_CLASSIFICATION	@bgen(jjtree) MethodInvocation
WITHOUT_CLASSIFICATION	Check for {} tomfoolery
WITHOUT_CLASSIFICATION	{{{ parsePermissions() method
WITHOUT_CLASSIFICATION	we have to deal with a huge range of possible border cases here.
WITHOUT_CLASSIFICATION	Make a hash of the interface hashcodes in order to cache them
WITHOUT_CLASSIFICATION	Is it a bsh script variable reference?If we're just starting the eval of name (no base object)or we're evaluating relative to a This type reference check.
WITHOUT_CLASSIFICATION	Generate code to push the BSHTHIS or BSHSTATIC field
WITHOUT_CLASSIFICATION	@bgen(jjtree) Arguments
WITHOUT_CLASSIFICATION	We could let a String fall through to final input, but since it's the most likely input type, we check it first.
WITHOUT_CLASSIFICATION	{{{ Expansion class
WITHOUT_CLASSIFICATION	no background mode, and opening a new view
WITHOUT_CLASSIFICATION	Get the string of enumerated values if necessary.
WITHOUT_CLASSIFICATION	leave null
WITHOUT_CLASSIFICATION	Is it a class name?If we're just starting eval of name try to make it, else fail.
WITHOUT_CLASSIFICATION	Push 'this'
WITHOUT_CLASSIFICATION	@bgen(jjtree) Block
WITHOUT_CLASSIFICATION	UNDONE When File lets us get the userName, use it!
WITHOUT_CLASSIFICATION	}}} {{{ Handle $
WITHOUT_CLASSIFICATION	{{{ getBufferSwitcher() method
WITHOUT_CLASSIFICATION	getClassInstance() throws exception if not there
WITHOUT_CLASSIFICATION	Push the name of the method as a constant
WITHOUT_CLASSIFICATION	@bgen(jjtree) IfStatement
WITHOUT_CLASSIFICATION	freq table collected to save a pass over the data during decompression.
WITHOUT_CLASSIFICATION	if no server running and user runs jedit -quit, just exit
WITHOUT_CLASSIFICATION	{{{ loadCaretInfo() method
WITHOUT_CLASSIFICATION	Parse a conditional section. [63] conditionalSect ::= includeSect || ignoreSect [64] includeSect ::= '<![' %'INCLUDE' '[' (%markupdecl) ']]>' [65] ignoreSect ::= '<![' %'IGNORE' '[' ignoreSectContents ']]>' [66] ignoreSectContents ::= ((SkipLit | Comment | PI) -(Char ']]>')) | ('<![' ignoreSectContents ']]>') | (Char - (']' | [<'"])) | ('<!' (Char - ('-' | '['))) NOTE: the '<![' has already been read. TODO: verify that I am handling ignoreSectContents right.
WITHOUT_CLASSIFICATION	If we've fallen through here we are no longer resolving toa class type.
WITHOUT_CLASSIFICATION	generate the default branch of switch
WITHOUT_CLASSIFICATION	@bgen(jjtree) WhileStatement
WITHOUT_CLASSIFICATION	always: in the range 0 .. 9. The current block size is 100000 this number.
WITHOUT_CLASSIFICATION	{{{ Property methods
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnStatement
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	NOTE We have fit EOF, and the block is not full! This is a broken archive. It does not follow the standard blocking algorithm. However, because we are generous, and it requires little effort, we will simply ignore the error and continue as if the entire block were read. This does not appear to break anything upstream. We used to return false in this case. Thanks to 'Yohann.Roussel@alcatel.fr' for this fix.
WITHOUT_CLASSIFICATION	file name
WITHOUT_CLASSIFICATION	{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	left == default case
WITHOUT_CLASSIFICATION	OK, the cheat didn't work; start over and do it by the book.
WITHOUT_CLASSIFICATION	don't break jEdit core and plugins! throw new InterpreterError("null variable value");
WITHOUT_CLASSIFICATION	Generate a branch of the constructor switch. This method is called bygenerateConstructorSwitch.The code generated by this method assumes that the argument array is on the stack.
WITHOUT_CLASSIFICATION	@bgen(jjtree) ReturnStatement
WITHOUT_CLASSIFICATION	index of the last char in the block, so the block size == last + 1.
WITHOUT_CLASSIFICATION	Start with a little cheat. Most of the time, the white space will fall within the current read buffer; if not, then fall through.
WITHOUT_CLASSIFICATION	If recurse, set global untyped var, else set it here. NameSpace varScope = recurse ? getGlobal() : this; This modification makes default allocation local
WITHOUT_CLASSIFICATION	bubble up if allowed
WITHOUT_CLASSIFICATION	ok?
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	squeltch
WITHOUT_CLASSIFICATION	Setting up the unzftab entries here is not strictly necessary, but it does save having to do it later in a separate pass, and so saves a block's worth of cache misses.
WITHOUT_CLASSIFICATION	{{{ getMode() method
WITHOUT_CLASSIFICATION	{{{ getAutosaveFile() method
WITHOUT_CLASSIFICATION	Normalise whitespace if necessary.
WITHOUT_CLASSIFICATION	try parent
WITHOUT_CLASSIFICATION	forcclass
WITHOUT_CLASSIFICATION	Note: technically I think we could get by passing in only thecurrent namespace or perhaps BshClassManager here instead of CallStack and Interpreter. However let's just play it safe in caseof future changes - anywhere you eval a node you need these.
WITHOUT_CLASSIFICATION	Undo the MTF values for the selectors.
WITHOUT_CLASSIFICATION	{{{ newFile() method
WITHOUT_CLASSIFICATION	{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	system id
WITHOUT_CLASSIFICATION	Add the new typed var
WITHOUT_CLASSIFICATION	If this was a literal "super" reference then we allow recursionin setting the variable to get the normal effect of finding thenearest definition starting at the super scope. On any otherresolution qualified by a 'this' type reference we want to setthe variable directly in that scope. e.g. this.x=5; or someThisType.x=5;In the old scoping rules super didn't do this.
WITHOUT_CLASSIFICATION	type is correct here
WITHOUT_CLASSIFICATION	Word boundary means input[index-1] was a word character and input[index] is not, or input[index] is a word character and input[index-1] was not In the string "one two three", these positions match: |o|n|e| |t|w|o| |t|h|r|e|e| ^ ^ ^ ^ ^ ^ is current character a letter or digit? is previous character a letter or digit?
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	private members
WITHOUT_CLASSIFICATION	Wait for pending I/O requests
WITHOUT_CLASSIFICATION	Wait for pending I/O requests
WITHOUT_CLASSIFICATION	will be cached from now on...
WITHOUT_CLASSIFICATION	Utility routines.
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	declaredOnly
WITHOUT_CLASSIFICATION	Note: if we want methods declared inside blocks to be accessible via this.methodname() inside the block we could handle it here as a special case. See also resolveThisFieldReference() special handling for BlockNameSpace case. They currently work via the direct name e.g. methodName().
WITHOUT_CLASSIFICATION	auto-gen default constructor use default super constructor
WITHOUT_CLASSIFICATION	number of times we've matched so far
WITHOUT_CLASSIFICATION	Create a new file when the last is closed
WITHOUT_CLASSIFICATION	{{{ Edit modes, syntax highlighting
WITHOUT_CLASSIFICATION	The new length is <= the old one.
WITHOUT_CLASSIFICATION	Try object imports
WITHOUT_CLASSIFICATION	found an object and it's not an undefined variable
WITHOUT_CLASSIFICATION	Determine if the constructor calls this() or super()
WITHOUT_CLASSIFICATION	Check for stingy match for each possibility.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.
WITHOUT_CLASSIFICATION	{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	{{{ need to convert entries of 'props' to PropValue instances
WITHOUT_CLASSIFICATION	Insert the content type, if any.
WITHOUT_CLASSIFICATION	Try static imports
WITHOUT_CLASSIFICATION	this() constructors come after super constructors in the table
WITHOUT_CLASSIFICATION	Order these from longest to shortest Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	A 6-byte block header, the value chosen arbitrarily as 0x314159265359 :-). A 32 bit value does not really give a strong enough guarantee that the value will not appear by chance in the compressed datastream. Worst-case probability of this event, for a 900k block, is about 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits. For a compressed file of size 100Gb -- about 100000 blocks -- only a 48-bit marker will do. NB: normal compression/ decompression do not rely on these statistical properties. They are only important when trying to recover blocks from damaged files.
WITHOUT_CLASSIFICATION	close remaining buffers (the close dialog only deals with dirty ones)
WITHOUT_CLASSIFICATION	we do a write lock so that the autosave, which grabs a read lock, is not executed between the deletion of the autosave file and clearing of the dirty flag
WITHOUT_CLASSIFICATION	If we want to support multiple commands in the command path we need tochange this to not throw the exception.
WITHOUT_CLASSIFICATION	Check for existing method
WITHOUT_CLASSIFICATION	Create the instance 'This' namespace, set it on the object instance and invoke the instance initializer
WITHOUT_CLASSIFICATION	Find new doablesLast
WITHOUT_CLASSIFICATION	20 is just a paranoia constant
WITHOUT_CLASSIFICATION	{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x3c 0x00 0x00 0x00: UCS-4, little-endian (4321)
WITHOUT_CLASSIFICATION	return countParts(value) > 1;
WITHOUT_CLASSIFICATION	The object instance has already been initialzed by another constructor. Fall through to invoke the constructor body below.
WITHOUT_CLASSIFICATION	At this point we've either got too many or just the right amount. See if this numRepeats works with the rest of the regexp.
WITHOUT_CLASSIFICATION	Write `magic' bytes h indicating file-format == huffmanised, followed by a digit indicating blockSize100k.
WITHOUT_CLASSIFICATION	auto reload changed buffers?
WITHOUT_CLASSIFICATION	{{{ ActionHandler class
WITHOUT_CLASSIFICATION	UCS-4 must begin with "<!XML" 0x00 0x3c 0x00 0x00: UCS-4, unusual (3421)
WITHOUT_CLASSIFICATION	Test all possible matches for this number of repeats
WITHOUT_CLASSIFICATION	Complete the big bucket [ss] by quicksorting any unsorted small buckets [ss, j]. Hopefully previous pointer-scanning phases have already completed many of the small buckets [ss, j], so we don't have to sort them at all.
WITHOUT_CLASSIFICATION	... sweet. saveBackup() will create backupDir if it doesn't exist.
WITHOUT_CLASSIFICATION	{{{ ParentMouseHandler class
WITHOUT_CLASSIFICATION	UCS-2 with a byte-order marker. 0xff 0xfe: UCS-2, little-endian (21)
WITHOUT_CLASSIFICATION	Can't call it getClass()
WITHOUT_CLASSIFICATION	handle primitive widening conversions - JLS 5.1.2
WITHOUT_CLASSIFICATION	overrideNamespace
WITHOUT_CLASSIFICATION	Now scan this big bucket so as to synthesise the sorted order for small buckets [t, ss] for all t != ss.
WITHOUT_CLASSIFICATION	Even if reallyExit is false, we still exit properly if background mode is off
WITHOUT_CLASSIFICATION	compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	Compare with number of dimensions actually created with the number specified (syntax uses the undefined ones here)
WITHOUT_CLASSIFICATION	Some kind of 8-bit encoding without "<?XML" (otherwise) UTF-8 without encoding/XML declaration
WITHOUT_CLASSIFICATION	Lots of preconditions checked here...Once things are running smoothly we might comment these out(That's what assertions are for).
WITHOUT_CLASSIFICATION	dimensionsNode can return either a fully intialized array or VOID.when VOID the prescribed array dimensions (defined and undefined)are contained in the node.
WITHOUT_CLASSIFICATION	so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	Find the coding table which is best for this group, and record its identity in the selector table.
WITHOUT_CLASSIFICATION	in this case, we can't directly call view.close(); we have to call closeView() for all open views
WITHOUT_CLASSIFICATION	execute nodes, skipping labels, until a break or return
WITHOUT_CLASSIFICATION	Check for entity recursion.
WITHOUT_CLASSIFICATION	--- Instance data ---
WITHOUT_CLASSIFICATION	Both primitives, do primitive cast
WITHOUT_CLASSIFICATION	filter
WITHOUT_CLASSIFICATION	check if input is at a valid position
WITHOUT_CLASSIFICATION	10
WITHOUT_CLASSIFICATION	Stop server
WITHOUT_CLASSIFICATION	{{{ EnhancedButton constructor
WITHOUT_CLASSIFICATION	Stop all plugins
WITHOUT_CLASSIFICATION	Delegate to the static method
WITHOUT_CLASSIFICATION	Test for a match, and push the character back if the match fails.
WITHOUT_CLASSIFICATION	Interpreter has no input stream, use eval() only Interpreter has no input stream, use eval() only Interpreter has a user, print prompts, etc.
WITHOUT_CLASSIFICATION	Object r = checkOnly ? VALID_CAST :
WITHOUT_CLASSIFICATION	Perform a suffix operation on the given object and return the new value.<p>obj will be a Node when suffix evaluation begins, allowing us tointerpret it contextually. (e.g. for .class) Thereafter it will be an value object or LHS (as determined by toLHS).<p>We must handle the toLHS case at each point here.<p>
WITHOUT_CLASSIFICATION	copy 3
WITHOUT_CLASSIFICATION	{{{ updatePosition() method
WITHOUT_CLASSIFICATION	if no requests are running, requestDone() will not be called, so we must queue the AWT runner ourselves.
WITHOUT_CLASSIFICATION	Also cache the class so that no import resolution must occur this avoids having to load our enclosing class which isn't finished being generated yet... oy.
WITHOUT_CLASSIFICATION	Low-level I/O.
WITHOUT_CLASSIFICATION	need to set the input stream - reinit the parser?
WITHOUT_CLASSIFICATION	Primitive to arbitrary object type. Allow Primitive.castToType() to handle it as well as cases of Primitive.NULL and Primitive.VOID
WITHOUT_CLASSIFICATION	Evaluate our prefix if it needs evaluating first.If this is the first evaluation our prefix mayb be a Node (directly from the PrimaryPrefix) - eval() it to an object. If it's an LHS, resolve to a value.Note: The ambiguous name construct is now necessary where the node may be an ambiguous name. If this becomes common we might want to make a static method nodeToObject() or something. The point is that we can't just eval() - we need to direct the evaluation to the context sensitive type of result; namely object, class, etc.
WITHOUT_CLASSIFICATION	a la Perl, $0 is whole thing, $1 - $9 are subexpressions
WITHOUT_CLASSIFICATION	if started with java -jar jedit.jar
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Constructor --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Read as many bytes as possible into the read buffer.
WITHOUT_CLASSIFICATION	init the static shared sharedObject if it's not there yet
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	map
WITHOUT_CLASSIFICATION	index tracks the position in the char array
WITHOUT_CLASSIFICATION	Pass 3: layout components
WITHOUT_CLASSIFICATION	Log.log(Log.DEBUG,jEdit.class,fnf);
WITHOUT_CLASSIFICATION	-------------------------------------------------------------------------- Fields --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	strict
WITHOUT_CLASSIFICATION	Dispatch to an encoding-specific reader method to populate the readBuffer.
WITHOUT_CLASSIFICATION	bsh.evalOnly
DEFECT	two plugins provide same class!
DEFECT	dialogs fuck things up if a menu is visible, etc! new BeanShellErrorDialog(view,e);
DEFECT	2 aug 2003: OS/2 Java has a broken getCanonicalPath()
DEFECT	{{{ Broken class
DEFECT	XXX: action bar might not be 'temp'
DEFECT	Fix for this bug: -- Put a mode into the user dir with the same name as one on the system dir. -- Reload edit modes. -- Old mode from system dir still used for highlighting until jEdit restart.
DEFECT	TODO: move(x) shouldn't rely on calling next() x times
DEFECT	TODO: move(x) shouldn't rely on calling next() x times
DEFECT	this shouldn't happen, but...
DEFECT	the view should not be null, but some plugins might do this
DEFECT	Race condition here...
DEFECT	Note: this method incorrectly caches the method structure. It needs tobe cleared when the classloader changes.
DEFECT	If it exists, remove it and add it at the end (avoid memory leak)
DEFECT	If it exists, remove it and add it at the end (avoid memory leak)
DEFECT	If it exists, remove it and add it at the end (avoid memory leak)
DEFECT	Apparently in some environments you can't catch the security exceptionat all... e.g. as an applet in IE ... will probably have to work around
DEFECT	This is not good... need a way to update eval without re-installing... so that we can re-eval params, etc. when classloader changes look into this
DEFECT	Warning: Null callstack here. Don't think we need a stack trace to indicate how we sourced the method.
DEFECT	I wonder if the lack of this broke anything in the past?
DEFECT	{{{ Set the buffer's path Caveat: won't work if save() called with a relative path. But I don't think anyone calls it like that anyway.
DEFECT	while its broken to have a null symlinkPath, some older plugins might...
DEFECT	looks bad with the OS X L&F, apparently...
DEFECT	looks bad with the OS X L&F, apparently...
DEFECT	only works for jEdit plugins
DEFECT	Jun 9 2004 12:40 PM waitFor() hangs on some Java implementations.
DEFECT	Feb 4 2000 5:30 PM Catch Throwable here rather than Exception. Kaffe's implementation of Runtime.exec throws java.lang.InternalError.
DEFECT	Feb 4 2000 5:30 PM Catch Throwable here rather than Exception. Kaffe's implementation of Runtime.exec throws java.lang.InternalError.
DEFECT	does it matter that this doesn't set the type correctly?
DEFECT	looks bad with the OS X L&F, apparently...
DEFECT	... but if HyperSearch results window is floating, the workaround causes problems!
DEFECT	very subtle... if we leave this for ensurePhysicalLineIsVisible(), an extra line will be added to the scroll line count.
DEFECT	this class is not very fast...
DEFECT	18 nov 2003: calling this on a drive letter on Windows causes drive access
DEFECT	This really should be Long.decode, but there isn't one. As a result, hex and octal literals ending in 'l' or 'L' don't work.
DEFECT	Don't generate private or loosely typed fields Note: loose types aren't currently parsed anyway...
DEFECT	BUG: if there are multiple selections in different contexts, the wrong comment strings will be inserted.
DEFECT	this seems to make nested readLock() calls work okay. but I have no idea if it actually fixes things or not.
DEFECT	Original note: Jdk under Win is throwing these towarn about lower case / upper case possible mismatch.e.g. bsh.console bsh.ConsoleUpdate: Prior to 1.3 we were squeltching NoClassDefFoundErrors which was very annoying. I cannot reproduce the original problem and this was never a valid solution. If there are legacy VMs thathave problems we can include a more specific test for them here.
DEFECT	Use special cheats that speed up the code (currently about 50%), but may cause problems with future maintenance and add to the class file size (about 500 bytes).
DEFECT	Technically incorrect here - we need to wrap null values as bsh.Primitive.NULL. However the This.invokeMethod() will do that much for us. We need to generate a conditional here to test for null and return Primitive.NULL
DEFECT	Warning: Null callstack here. Don't think we need a stack trace to indicate how we sourced the method.
DEFECT	charAt(index-n) may be unknown on a Reader/InputStream. FIXME Match after a newline if in multiline mode
DEFECT	caching is not correct and doesn't seem to help... enclosingNameSpace.cacheClass( name, genClass );
