set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999908659637508	WITHOUT_CLASSIFICATION	9.134036249196993E-6	DEFECT
line 335	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999182221418284	WITHOUT_CLASSIFICATION	8.177785817169522E-5	DEFECT
line 362	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
line 391	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
^D	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
^Z	WITHOUT_CLASSIFICATION	0.9999865794778705	WITHOUT_CLASSIFICATION	1.342052212944687E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999984850667629	WITHOUT_CLASSIFICATION	1.514933237023909E-6	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999984850667629	WITHOUT_CLASSIFICATION	1.514933237023909E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
return result	WITHOUT_CLASSIFICATION	0.9999431196301449	WITHOUT_CLASSIFICATION	5.688036985519644E-5	DEFECT
name	WITHOUT_CLASSIFICATION	0.9999903971841853	WITHOUT_CLASSIFICATION	9.60281581479634E-6	DEFECT
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999781772521572	WITHOUT_CLASSIFICATION	2.182274784279387E-4	DEFECT
Accessor methods.	WITHOUT_CLASSIFICATION	0.9999158382040763	WITHOUT_CLASSIFICATION	8.416179592366428E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999027435357967	WITHOUT_CLASSIFICATION	9.725646420326799E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999027435357967	WITHOUT_CLASSIFICATION	9.725646420326799E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999027435357967	WITHOUT_CLASSIFICATION	9.725646420326799E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999027435357967	WITHOUT_CLASSIFICATION	9.725646420326799E-5	DEFECT
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9990213821826607	WITHOUT_CLASSIFICATION	9.786178173392776E-4	DEFECT
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998941883605618	WITHOUT_CLASSIFICATION	1.058116394382891E-4	DEFECT
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999313599539902	WITHOUT_CLASSIFICATION	6.864004600992424E-5	DEFECT
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9998837660853832	WITHOUT_CLASSIFICATION	1.1623391461680257E-4	DEFECT
Version information:	WITHOUT_CLASSIFICATION	0.9999182041030921	WITHOUT_CLASSIFICATION	8.179589690790763E-5	DEFECT
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999727828405807	WITHOUT_CLASSIFICATION	2.7217159419378225E-5	DEFECT
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999571061756629	WITHOUT_CLASSIFICATION	4.2893824337202954E-5	DEFECT
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999887270006081	WITHOUT_CLASSIFICATION	1.1272999391913608E-5	DEFECT
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999852253380753	WITHOUT_CLASSIFICATION	1.477466192475911E-5	DEFECT
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9983232487720145	WITHOUT_CLASSIFICATION	0.0016767512279854573	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998920240460698	WITHOUT_CLASSIFICATION	1.0797595393017684E-4	DEFECT
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999879535156432	WITHOUT_CLASSIFICATION	1.2046484356802297E-5	DEFECT
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9996667612264256	WITHOUT_CLASSIFICATION	3.3323877357445327E-4	DEFECT
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999949364488779	WITHOUT_CLASSIFICATION	5.063551122102054E-5	DEFECT
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999039550913601	WITHOUT_CLASSIFICATION	9.604490863995949E-5	DEFECT
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9996078343768054	WITHOUT_CLASSIFICATION	3.9216562319460436E-4	DEFECT
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999963129894675	WITHOUT_CLASSIFICATION	3.6870105324944624E-6	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999027435357967	WITHOUT_CLASSIFICATION	9.725646420326799E-5	DEFECT
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999057024544316	WITHOUT_CLASSIFICATION	9.429754556844422E-5	DEFECT
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999978438788586	WITHOUT_CLASSIFICATION	2.156121141469873E-6	DEFECT
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999892129131328	WITHOUT_CLASSIFICATION	1.0787086867201606E-4	DEFECT
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999782656837382	WITHOUT_CLASSIFICATION	2.1734316261811997E-4	DEFECT
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999405257885148	WITHOUT_CLASSIFICATION	5.9474211485270065E-5	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999670731811138	WITHOUT_CLASSIFICATION	3.292681888622036E-5	DEFECT
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999712466614996	WITHOUT_CLASSIFICATION	2.8753338500447674E-5	DEFECT
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999873318687196	WITHOUT_CLASSIFICATION	1.2668131280565654E-5	DEFECT
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999295161457816	WITHOUT_CLASSIFICATION	7.048385421840549E-5	DEFECT
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999124172940014	WITHOUT_CLASSIFICATION	8.758270599854073E-5	DEFECT
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9981144209473235	WITHOUT_CLASSIFICATION	0.0018855790526764989	DEFECT
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999133642283926	WITHOUT_CLASSIFICATION	8.663577160735651E-5	DEFECT
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
IOT is also 6	WITHOUT_CLASSIFICATION	0.999370054398284	WITHOUT_CLASSIFICATION	6.299456017160801E-4	DEFECT
CLD is also 20	WITHOUT_CLASSIFICATION	0.9998333914041944	WITHOUT_CLASSIFICATION	1.6660859580575087E-4	DEFECT
RubySignal	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9992618624860501	WITHOUT_CLASSIFICATION	7.381375139498482E-4	DEFECT
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9997940950585318	WITHOUT_CLASSIFICATION	2.059049414681752E-4	DEFECT
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9997453459935852	WITHOUT_CLASSIFICATION	2.5465400641476937E-4	DEFECT
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9983801522125194	WITHOUT_CLASSIFICATION	0.001619847787480593	DEFECT
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999207539986045	WITHOUT_CLASSIFICATION	7.924600139555677E-5	DEFECT
io.finish();	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9997648389429347	WITHOUT_CLASSIFICATION	2.3516105706542206E-4	DEFECT
hmm...	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999875984903303	WITHOUT_CLASSIFICATION	1.2401509669823891E-5	DEFECT
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999328068089323	WITHOUT_CLASSIFICATION	6.719319106773579E-5	DEFECT
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999924790758526	WITHOUT_CLASSIFICATION	7.520924147393096E-5	DEFECT
float number of seconds	WITHOUT_CLASSIFICATION	0.9999356316717574	WITHOUT_CLASSIFICATION	6.43683282426406E-5	DEFECT
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9993939948728314	WITHOUT_CLASSIFICATION	6.060051271686055E-4	DEFECT
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9996053233031172	WITHOUT_CLASSIFICATION	3.9467669688283773E-4	DEFECT
Time class methods	WITHOUT_CLASSIFICATION	0.9998400446827787	WITHOUT_CLASSIFICATION	1.5995531722137374E-4	DEFECT
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999577321781311	WITHOUT_CLASSIFICATION	4.226782186890507E-4	DEFECT
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999155589426643	WITHOUT_CLASSIFICATION	8.444105733577502E-5	DEFECT
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999991294964352	WITHOUT_CLASSIFICATION	8.70503564794621E-6	DEFECT
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9997305827388054	WITHOUT_CLASSIFICATION	2.694172611945692E-4	DEFECT
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9998975488143111	WITHOUT_CLASSIFICATION	1.0245118568884767E-4	DEFECT
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998534611445065	WITHOUT_CLASSIFICATION	1.4653885549353087E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.999856971956915	WITHOUT_CLASSIFICATION	1.4302804308494502E-4	DEFECT
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999747141433478	WITHOUT_CLASSIFICATION	2.5285856652202014E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9991431560136744	WITHOUT_CLASSIFICATION	8.568439863255598E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9993485843152948	WITHOUT_CLASSIFICATION	6.514156847051204E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9993485843152948	WITHOUT_CLASSIFICATION	6.514156847051204E-4	DEFECT
no bignorm here needed	WITHOUT_CLASSIFICATION	0.999982806215129	WITHOUT_CLASSIFICATION	1.7193784870935022E-5	DEFECT
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9994807678840166	WITHOUT_CLASSIFICATION	5.192321159834171E-4	DEFECT
Pad with a 0	WITHOUT_CLASSIFICATION	0.9999355858595447	WITHOUT_CLASSIFICATION	6.441414045534379E-5	DEFECT
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9988562217417458	WITHOUT_CLASSIFICATION	0.0011437782582542127	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.997549818535173	WITHOUT_CLASSIFICATION	0.002450181464826896	DEFECT
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9940438230534533	WITHOUT_CLASSIFICATION	0.005956176946546711	DEFECT
???	WITHOUT_CLASSIFICATION	0.9999873628649341	WITHOUT_CLASSIFICATION	1.2637135065925813E-5	DEFECT
PID	WITHOUT_CLASSIFICATION	0.9999865529723195	WITHOUT_CLASSIFICATION	1.3447027680411276E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999430172386783	WITHOUT_CLASSIFICATION	5.698276132168899E-5	DEFECT
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999797513968903	WITHOUT_CLASSIFICATION	2.024860310962781E-5	DEFECT
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999989276800095	WITHOUT_CLASSIFICATION	1.0723199904409638E-6	DEFECT
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999776418839205	WITHOUT_CLASSIFICATION	2.235811607952612E-5	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9998457472920241	WITHOUT_CLASSIFICATION	1.5425270797588371E-4	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9998457472920241	WITHOUT_CLASSIFICATION	1.5425270797588371E-4	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9998457472920241	WITHOUT_CLASSIFICATION	1.5425270797588371E-4	DEFECT
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9999203412202521	WITHOUT_CLASSIFICATION	7.965877974789165E-5	DEFECT
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9999571918524913	WITHOUT_CLASSIFICATION	4.280814750874597E-5	DEFECT
Create global constants and variables	WITHOUT_CLASSIFICATION	0.999974173404493	WITHOUT_CLASSIFICATION	2.5826595507057918E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9869712950865033	WITHOUT_CLASSIFICATION	0.013028704913496798	DEFECT
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9987346702660923	WITHOUT_CLASSIFICATION	0.0012653297339075857	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999939817097767	WITHOUT_CLASSIFICATION	6.018290223210594E-6	DEFECT
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9992680963817053	WITHOUT_CLASSIFICATION	7.31903618294748E-4	DEFECT
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999772439985465	WITHOUT_CLASSIFICATION	2.2756001453514712E-4	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.99990173179265	WITHOUT_CLASSIFICATION	9.826820735003672E-5	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.99993427568358	WITHOUT_CLASSIFICATION	6.572431642005228E-5	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999039346171935	WITHOUT_CLASSIFICATION	9.606538280650368E-5	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999039346171935	WITHOUT_CLASSIFICATION	9.606538280650368E-5	DEFECT
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998286439099142	WITHOUT_CLASSIFICATION	1.7135609008584124E-4	DEFECT
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9997823237625885	WITHOUT_CLASSIFICATION	2.1767623741154226E-4	DEFECT
root fiber	WITHOUT_CLASSIFICATION	0.9999848552967039	WITHOUT_CLASSIFICATION	1.5144703296043245E-5	DEFECT
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9996644844575011	WITHOUT_CLASSIFICATION	3.3551554249888006E-4	DEFECT
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9998579892245778	WITHOUT_CLASSIFICATION	1.4201077542220055E-4	DEFECT
extras flag	WITHOUT_CLASSIFICATION	0.9999269355517888	WITHOUT_CLASSIFICATION	7.306444821114885E-5	DEFECT
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
...nothing	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
utility method	WITHOUT_CLASSIFICATION	0.9999594531083055	WITHOUT_CLASSIFICATION	4.0546891694619375E-5	DEFECT
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999288561395737	WITHOUT_CLASSIFICATION	7.114386042629406E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999826858702213	WITHOUT_CLASSIFICATION	1.7314129778651493E-5	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998771316845955	WITHOUT_CLASSIFICATION	1.228683154045849E-4	DEFECT
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9967322684425026	WITHOUT_CLASSIFICATION	0.0032677315574973593	DEFECT
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999856984535926	WITHOUT_CLASSIFICATION	1.4301546407322845E-5	DEFECT
MRI does it!	WITHOUT_CLASSIFICATION	0.9996685153296019	WITHOUT_CLASSIFICATION	3.3148467039805944E-4	DEFECT
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997408566407027	WITHOUT_CLASSIFICATION	2.5914335929728483E-4	DEFECT
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997839466812739	WITHOUT_CLASSIFICATION	2.1605331872608043E-4	DEFECT
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9986302671819632	WITHOUT_CLASSIFICATION	0.001369732818036706	DEFECT
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9997866943583165	WITHOUT_CLASSIFICATION	2.1330564168351736E-4	DEFECT
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9998814905883607	WITHOUT_CLASSIFICATION	1.1850941163925969E-4	DEFECT
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999770414052566	WITHOUT_CLASSIFICATION	2.2958594743390895E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999674706300038	WITHOUT_CLASSIFICATION	3.252936999617559E-5	DEFECT
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997888491140611	WITHOUT_CLASSIFICATION	2.1115088593896911E-4	DEFECT
recheck condition	WITHOUT_CLASSIFICATION	0.9983767079036872	WITHOUT_CLASSIFICATION	0.0016232920963127494	DEFECT
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999770860181079	WITHOUT_CLASSIFICATION	2.2913981892207033E-5	DEFECT
Construct key services	WITHOUT_CLASSIFICATION	0.9999474718819763	WITHOUT_CLASSIFICATION	5.252811802362045E-5	DEFECT
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9994959575567715	WITHOUT_CLASSIFICATION	5.040424432286455E-4	DEFECT
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999826925230235	WITHOUT_CLASSIFICATION	1.7307476976541348E-5	DEFECT
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999685352191974	WITHOUT_CLASSIFICATION	3.146478080271136E-5	DEFECT
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999854341560699	WITHOUT_CLASSIFICATION	1.4565843930138204E-5	DEFECT
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9997897375555849	WITHOUT_CLASSIFICATION	2.1026244441509328E-4	DEFECT
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999327022941432	WITHOUT_CLASSIFICATION	6.729770585682538E-5	DEFECT
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999766848498466	WITHOUT_CLASSIFICATION	2.3315150153367207E-5	DEFECT
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9997286368835903	WITHOUT_CLASSIFICATION	2.7136311640971466E-4	DEFECT
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9994890415284585	WITHOUT_CLASSIFICATION	5.109584715414419E-4	DEFECT
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999216823508332	WITHOUT_CLASSIFICATION	7.831764916682858E-5	DEFECT
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9997238962920051	WITHOUT_CLASSIFICATION	2.761037079949062E-4	DEFECT
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999780537413977	WITHOUT_CLASSIFICATION	2.1946258602221793E-5	DEFECT
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997022437333335	WITHOUT_CLASSIFICATION	2.977562666664679E-4	DEFECT
determine spacing	WITHOUT_CLASSIFICATION	0.9999512428274245	WITHOUT_CLASSIFICATION	4.8757172575339504E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.999887134067417	WITHOUT_CLASSIFICATION	1.1286593258297604E-4	DEFECT
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.99997115715112	WITHOUT_CLASSIFICATION	2.884284888001031E-5	DEFECT
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9989130731991219	WITHOUT_CLASSIFICATION	0.001086926800878028	DEFECT
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997826283459902	WITHOUT_CLASSIFICATION	2.1737165400979248E-4	DEFECT
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999449558283129	WITHOUT_CLASSIFICATION	5.5044171687064735E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9973536449395547	WITHOUT_CLASSIFICATION	0.0026463550604452464	DEFECT
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999549253521034	WITHOUT_CLASSIFICATION	4.5074647896623764E-5	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9998078486736396	WITHOUT_CLASSIFICATION	1.921513263604023E-4	DEFECT
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999906644224732	WITHOUT_CLASSIFICATION	9.335577526775292E-6	DEFECT
Default objects	WITHOUT_CLASSIFICATION	0.9998722274259852	WITHOUT_CLASSIFICATION	1.2777257401474118E-4	DEFECT
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9996522506827561	WITHOUT_CLASSIFICATION	3.4774931724388823E-4	DEFECT
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999555677821882	WITHOUT_CLASSIFICATION	4.443221781183897E-5	DEFECT
Java support	WITHOUT_CLASSIFICATION	0.999710688947438	WITHOUT_CLASSIFICATION	2.893110525620134E-4	DEFECT
Parser stats	WITHOUT_CLASSIFICATION	0.9999156629563344	WITHOUT_CLASSIFICATION	8.433704366556864E-5	DEFECT
Compilation	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998031917260394	WITHOUT_CLASSIFICATION	1.9680827396070268E-4	DEFECT
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9995251554425137	WITHOUT_CLASSIFICATION	4.748445574863549E-4	DEFECT
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999242251984348	WITHOUT_CLASSIFICATION	7.577480156519197E-5	DEFECT
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.999931235129798	WITHOUT_CLASSIFICATION	6.876487020196029E-5	DEFECT
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9998596104499221	WITHOUT_CLASSIFICATION	1.4038955007790528E-4	DEFECT
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9998707342766041	WITHOUT_CLASSIFICATION	1.2926572339590404E-4	DEFECT
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998858062785198	WITHOUT_CLASSIFICATION	1.141937214802071E-4	DEFECT
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9991906894546372	WITHOUT_CLASSIFICATION	8.093105453628465E-4	DEFECT
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9998797463389412	WITHOUT_CLASSIFICATION	1.2025366105881344E-4	DEFECT
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9991352617971463	WITHOUT_CLASSIFICATION	8.647382028536986E-4	DEFECT
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999130584967272	WITHOUT_CLASSIFICATION	8.694150327286543E-5	DEFECT
quoted-printable	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
default options	WITHOUT_CLASSIFICATION	0.9999816549693598	WITHOUT_CLASSIFICATION	1.834503064025192E-5	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.999989332113128	WITHOUT_CLASSIFICATION	1.0667886871968904E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.999989332113128	WITHOUT_CLASSIFICATION	1.0667886871968904E-5	DEFECT
long name option	WITHOUT_CLASSIFICATION	0.9999675250435002	WITHOUT_CLASSIFICATION	3.2474956499917134E-5	DEFECT
conversion	WITHOUT_CLASSIFICATION	0.9999929192512717	WITHOUT_CLASSIFICATION	7.080748728323567E-6	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9998745912270491	WITHOUT_CLASSIFICATION	1.2540877295075836E-4	DEFECT
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997341670430299	WITHOUT_CLASSIFICATION	2.6583295697014183E-4	DEFECT
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999368600856119	WITHOUT_CLASSIFICATION	6.313991438805175E-5	DEFECT
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9994488810762415	WITHOUT_CLASSIFICATION	5.5111892375847E-4	DEFECT
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999125624127957	WITHOUT_CLASSIFICATION	8.743758720424112E-5	DEFECT
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.999985447335043	WITHOUT_CLASSIFICATION	1.4552664956893881E-5	DEFECT
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999742491774049	WITHOUT_CLASSIFICATION	2.5750822595150778E-5	DEFECT
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999999042931207	WITHOUT_CLASSIFICATION	9.570687929439932E-7	DEFECT
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9994865994594888	WITHOUT_CLASSIFICATION	5.134005405112325E-4	DEFECT
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9990992543890568	WITHOUT_CLASSIFICATION	9.007456109432237E-4	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9841395147514591	WITHOUT_CLASSIFICATION	0.015860485248540977	DEFECT
must not reallocate	WITHOUT_CLASSIFICATION	0.999747476868066	WITHOUT_CLASSIFICATION	2.5252313193405835E-4	DEFECT
Illegal combination	WITHOUT_CLASSIFICATION	0.9999132915013461	WITHOUT_CLASSIFICATION	8.670849865386535E-5	DEFECT
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998946010717007	WITHOUT_CLASSIFICATION	1.0539892829930706E-4	DEFECT
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999601490112537	WITHOUT_CLASSIFICATION	3.985098874619613E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999941140025173	WITHOUT_CLASSIFICATION	5.88599748272857E-6	DEFECT
len + margin	WITHOUT_CLASSIFICATION	0.9998967660385459	WITHOUT_CLASSIFICATION	1.0323396145413246E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999928077016651	WITHOUT_CLASSIFICATION	7.1922983348413085E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999928077016651	WITHOUT_CLASSIFICATION	7.1922983348413085E-6	DEFECT
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999451869231607	WITHOUT_CLASSIFICATION	5.481307683938586E-5	DEFECT
string given	WITHOUT_CLASSIFICATION	0.9999835647054902	WITHOUT_CLASSIFICATION	1.6435294509737813E-5	DEFECT
hash given	WITHOUT_CLASSIFICATION	0.9999937647618656	WITHOUT_CLASSIFICATION	6.235238134298903E-6	DEFECT
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.999637070146132	WITHOUT_CLASSIFICATION	3.6292985386802713E-4	DEFECT
substring longer than string	WITHOUT_CLASSIFICATION	0.9997397487105186	WITHOUT_CLASSIFICATION	2.6025128948136046E-4	DEFECT
rb_str_substr	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999937047126696	WITHOUT_CLASSIFICATION	6.2952873304172595E-6	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999937047126696	WITHOUT_CLASSIFICATION	6.2952873304172595E-6	DEFECT
rb_str_splice	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9313897928004228	WITHOUT_CLASSIFICATION	0.06861020719957721	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999942358569949	WITHOUT_CLASSIFICATION	5.764143005086803E-6	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999942358569949	WITHOUT_CLASSIFICATION	5.764143005086803E-6	DEFECT
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9997944286468062	WITHOUT_CLASSIFICATION	2.0557135319369696E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.999339173528907	WITHOUT_CLASSIFICATION	6.608264710930413E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.999339173528907	WITHOUT_CLASSIFICATION	6.608264710930413E-4	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999917162612172	WITHOUT_CLASSIFICATION	8.283738782760317E-6	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999917162612172	WITHOUT_CLASSIFICATION	8.283738782760317E-6	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
QTRUE	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
retrieve last replacer	WITHOUT_CLASSIFICATION	0.999936959048664	WITHOUT_CLASSIFICATION	6.304095133605856E-5	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999737780682199	WITHOUT_CLASSIFICATION	2.6221931780171706E-5	DEFECT
long size bits in byte	WITHOUT_CLASSIFICATION	0.9997946706408023	WITHOUT_CLASSIFICATION	2.053293591976319E-4	DEFECT
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9998769352674007	WITHOUT_CLASSIFICATION	1.2306473259921958E-4	DEFECT
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9998010987916377	WITHOUT_CLASSIFICATION	1.9890120836226364E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999449424579011	WITHOUT_CLASSIFICATION	5.5057542098958535E-5	DEFECT
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9998969561227367	WITHOUT_CLASSIFICATION	1.030438772633423E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999449424579011	WITHOUT_CLASSIFICATION	5.5057542098958535E-5	DEFECT
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9969264240798467	WITHOUT_CLASSIFICATION	0.0030735759201532334	DEFECT
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999518727743877	WITHOUT_CLASSIFICATION	4.8127225612359214E-5	DEFECT
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999513036880836	WITHOUT_CLASSIFICATION	4.869631191634959E-5	DEFECT
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9998919821248272	WITHOUT_CLASSIFICATION	1.0801787517285729E-4	DEFECT
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999300791873464	WITHOUT_CLASSIFICATION	6.992081265349066E-5	DEFECT
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9982320237442882	WITHOUT_CLASSIFICATION	0.0017679762557118598	DEFECT
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999626243880528	WITHOUT_CLASSIFICATION	3.737561194709666E-5	DEFECT
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999142484220415	WITHOUT_CLASSIFICATION	8.575157795856736E-5	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998778367924644	WITHOUT_CLASSIFICATION	1.2216320753547289E-4	DEFECT
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9997978379469964	WITHOUT_CLASSIFICATION	2.0216205300357183E-4	DEFECT
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998869922661647	WITHOUT_CLASSIFICATION	1.1300773383517982E-4	DEFECT
file not given	WITHOUT_CLASSIFICATION	0.9999216370320039	WITHOUT_CLASSIFICATION	7.836296799611952E-5	DEFECT
string to eval	WITHOUT_CLASSIFICATION	0.9999379260023616	WITHOUT_CLASSIFICATION	6.207399763835405E-5	DEFECT
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999106649158604	WITHOUT_CLASSIFICATION	8.933508413966348E-5	DEFECT
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999713379220061	WITHOUT_CLASSIFICATION	2.866207799399339E-5	DEFECT
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999599106845287	WITHOUT_CLASSIFICATION	4.0089315471307084E-4	DEFECT
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998256441874648	WITHOUT_CLASSIFICATION	1.7435581253520674E-4	DEFECT
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998375646932579	WITHOUT_CLASSIFICATION	1.6243530674203452E-4	DEFECT
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9995615389553716	WITHOUT_CLASSIFICATION	4.3846104462846126E-4	DEFECT
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9848607541801948	WITHOUT_CLASSIFICATION	0.015139245819805186	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998414493409491	WITHOUT_CLASSIFICATION	1.585506590508075E-4	DEFECT
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999995573850396	WITHOUT_CLASSIFICATION	4.426149604145056E-6	DEFECT
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999887223821696	WITHOUT_CLASSIFICATION	1.127761783028331E-5	DEFECT
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999139116759098	WITHOUT_CLASSIFICATION	8.608832409026941E-5	DEFECT
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999859364436847	WITHOUT_CLASSIFICATION	1.4063556315295758E-5	DEFECT
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999571408839153	WITHOUT_CLASSIFICATION	4.2859116084673345E-5	DEFECT
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999865238503871	WITHOUT_CLASSIFICATION	1.3476149612830625E-5	DEFECT
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999877347199722	WITHOUT_CLASSIFICATION	1.226528002778159E-5	DEFECT
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999746620226869	WITHOUT_CLASSIFICATION	2.533797731302055E-5	DEFECT
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999816014077995	WITHOUT_CLASSIFICATION	1.8398592200535594E-5	DEFECT
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999895019362177	WITHOUT_CLASSIFICATION	1.0498063782278262E-5	DEFECT
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999939796558145	WITHOUT_CLASSIFICATION	6.020344185480253E-6	DEFECT
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998597553218085	WITHOUT_CLASSIFICATION	1.4024467819160943E-4	DEFECT
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999665075925898	WITHOUT_CLASSIFICATION	3.3492407410271816E-5	DEFECT
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999708671229283	WITHOUT_CLASSIFICATION	2.9132877071765263E-5	DEFECT
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999429006953996	WITHOUT_CLASSIFICATION	5.70993046005085E-5	DEFECT
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999986066386639	WITHOUT_CLASSIFICATION	1.3933613360994431E-5	DEFECT
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999843142148385	WITHOUT_CLASSIFICATION	1.568578516154458E-5	DEFECT
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999943562852556	WITHOUT_CLASSIFICATION	5.64371474439025E-5	DEFECT
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999905267057283	WITHOUT_CLASSIFICATION	9.473294271667142E-6	DEFECT
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999615234583488	WITHOUT_CLASSIFICATION	3.847654165115528E-5	DEFECT
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999966531725487	WITHOUT_CLASSIFICATION	3.346827451302353E-5	DEFECT
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999681455215499	WITHOUT_CLASSIFICATION	3.1854478450058256E-5	DEFECT
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999908173714209	WITHOUT_CLASSIFICATION	9.182628579074319E-6	DEFECT
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999655108631275	WITHOUT_CLASSIFICATION	3.4489136872577306E-5	DEFECT
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999529390647576	WITHOUT_CLASSIFICATION	4.7060935242512605E-5	DEFECT
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999892108664328	WITHOUT_CLASSIFICATION	1.07891335672424E-5	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998555465926865	WITHOUT_CLASSIFICATION	1.444534073135175E-4	DEFECT
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9996762516437049	WITHOUT_CLASSIFICATION	3.237483562952055E-4	DEFECT
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999311915179896	WITHOUT_CLASSIFICATION	6.880848201042349E-5	DEFECT
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999899024237554	WITHOUT_CLASSIFICATION	1.0097576244486964E-5	DEFECT
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.99935014241646	WITHOUT_CLASSIFICATION	6.498575835399429E-4	DEFECT
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999912258955184	WITHOUT_CLASSIFICATION	8.774104481717582E-6	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.9999981788953173	WITHOUT_CLASSIFICATION	1.82110468273936E-6	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.9999981788953173	WITHOUT_CLASSIFICATION	1.82110468273936E-6	DEFECT
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9996535095945488	WITHOUT_CLASSIFICATION	3.464904054511366E-4	DEFECT
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998622597349278	WITHOUT_CLASSIFICATION	1.377402650721041E-4	DEFECT
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9963667758914899	WITHOUT_CLASSIFICATION	0.0036332241085102286	DEFECT
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999520782513291	WITHOUT_CLASSIFICATION	4.792174867085236E-5	DEFECT
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999918119932241	WITHOUT_CLASSIFICATION	8.18800677588967E-5	DEFECT
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999758220663321	WITHOUT_CLASSIFICATION	2.4177933667946592E-5	DEFECT
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9884138879112193	WITHOUT_CLASSIFICATION	0.011586112088780694	DEFECT
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999871735961664	WITHOUT_CLASSIFICATION	1.2826403833519475E-5	DEFECT
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998343506777518	WITHOUT_CLASSIFICATION	1.656493222482026E-4	DEFECT
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999469383412322	WITHOUT_CLASSIFICATION	5.3061658767844114E-5	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999969125118743	WITHOUT_CLASSIFICATION	3.0874881257223706E-6	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999969125118743	WITHOUT_CLASSIFICATION	3.0874881257223706E-6	DEFECT
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9998266613072533	WITHOUT_CLASSIFICATION	1.733386927467417E-4	DEFECT
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9998452934120496	WITHOUT_CLASSIFICATION	1.5470658795037242E-4	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995338605322814	WITHOUT_CLASSIFICATION	4.6613946771859656E-4	DEFECT
Create Constants class	WITHOUT_CLASSIFICATION	0.9998378583882436	WITHOUT_CLASSIFICATION	1.6214161175638744E-4	DEFECT
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999800548153103	WITHOUT_CLASSIFICATION	1.9945184689746803E-5	DEFECT
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999854890523187	WITHOUT_CLASSIFICATION	1.4510947681237771E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999696829517718	WITHOUT_CLASSIFICATION	3.0317048228266424E-5	DEFECT
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9995909546450464	WITHOUT_CLASSIFICATION	4.090453549535405E-4	DEFECT
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999991493064326	WITHOUT_CLASSIFICATION	8.506935674764449E-7	DEFECT
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997811567576279	WITHOUT_CLASSIFICATION	2.1884324237221375E-4	DEFECT
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9998356346004643	WITHOUT_CLASSIFICATION	1.643653995356025E-4	DEFECT
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9997401568773714	WITHOUT_CLASSIFICATION	2.598431226285974E-4	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9998479484451396	WITHOUT_CLASSIFICATION	1.5205155486048367E-4	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9998479484451396	WITHOUT_CLASSIFICATION	1.5205155486048367E-4	DEFECT
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9993421811238533	WITHOUT_CLASSIFICATION	6.578188761466946E-4	DEFECT
Should we do anything?	WITHOUT_CLASSIFICATION	0.9999789365362629	WITHOUT_CLASSIFICATION	2.1063463737027492E-5	DEFECT
File class methods	WITHOUT_CLASSIFICATION	0.9998483243180691	WITHOUT_CLASSIFICATION	1.5167568193082974E-4	DEFECT
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9997423531436245	WITHOUT_CLASSIFICATION	2.576468563754927E-4	DEFECT
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999109574433375	WITHOUT_CLASSIFICATION	8.904255666256842E-5	DEFECT
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998460306870264	WITHOUT_CLASSIFICATION	1.5396931297359675E-4	DEFECT
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998943076929947	WITHOUT_CLASSIFICATION	1.0569230700523706E-4	DEFECT
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999250174514113	WITHOUT_CLASSIFICATION	7.498254858872074E-5	DEFECT
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9979636065761928	WITHOUT_CLASSIFICATION	0.002036393423807262	DEFECT
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9999426432035685	WITHOUT_CLASSIFICATION	5.7356796431519514E-5	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995338605322814	WITHOUT_CLASSIFICATION	4.6613946771859656E-4	DEFECT
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9997316065846349	WITHOUT_CLASSIFICATION	2.683934153650615E-4	DEFECT
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9982902094074553	WITHOUT_CLASSIFICATION	0.0017097905925447584	DEFECT
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999937220637021	WITHOUT_CLASSIFICATION	6.277936297893525E-6	DEFECT
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999788937896822	WITHOUT_CLASSIFICATION	2.1106210317819754E-5	DEFECT
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999932009674292	WITHOUT_CLASSIFICATION	6.799032570811891E-5	DEFECT
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999664162874807	WITHOUT_CLASSIFICATION	3.358371251926908E-5	DEFECT
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999929188573216	WITHOUT_CLASSIFICATION	7.081142678532548E-6	DEFECT
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998791890328473	WITHOUT_CLASSIFICATION	1.2081096715269474E-4	DEFECT
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9998595545211465	WITHOUT_CLASSIFICATION	1.4044547885350625E-4	DEFECT
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999966455884524	WITHOUT_CLASSIFICATION	3.354411547592953E-5	DEFECT
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.999966455884524	WITHOUT_CLASSIFICATION	3.354411547592953E-5	DEFECT
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999925884399026	WITHOUT_CLASSIFICATION	7.411560097384014E-6	DEFECT
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999641676682153	WITHOUT_CLASSIFICATION	3.583233178468381E-5	DEFECT
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999076605622566	WITHOUT_CLASSIFICATION	9.233943774344297E-5	DEFECT
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999060511852952	WITHOUT_CLASSIFICATION	9.39488147047445E-5	DEFECT
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999367040647854	WITHOUT_CLASSIFICATION	6.329593521452946E-5	DEFECT
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9988726690653562	WITHOUT_CLASSIFICATION	0.0011273309346438373	DEFECT
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb: readable	WITHOUT_CLASSIFICATION	0.9999239649355788	WITHOUT_CLASSIFICATION	7.603506442121085E-5	DEFECT
rename is successful	WITHOUT_CLASSIFICATION	0.9998023220877901	WITHOUT_CLASSIFICATION	1.9767791221004895E-4	DEFECT
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9995682530040526	WITHOUT_CLASSIFICATION	4.3174699594729495E-4	DEFECT
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999882608037477	WITHOUT_CLASSIFICATION	1.1739196252311337E-5	DEFECT
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998258986917344	WITHOUT_CLASSIFICATION	1.7410130826559785E-4	DEFECT
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9967110203615994	WITHOUT_CLASSIFICATION	0.0032889796384004944	DEFECT
RubyContinuation	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9999204234762951	WITHOUT_CLASSIFICATION	7.957652370492967E-5	DEFECT
16 ?	WITHOUT_CLASSIFICATION	0.9999942072741211	WITHOUT_CLASSIFICATION	5.792725878819831E-6	DEFECT
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998330956048952	WITHOUT_CLASSIFICATION	1.669043951047509E-4	DEFECT
size + 1;	WITHOUT_CLASSIFICATION	0.9999731023331055	WITHOUT_CLASSIFICATION	2.6897666894474055E-5	DEFECT
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9896546685984264	WITHOUT_CLASSIFICATION	0.010345331401573558	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9999093767443693	WITHOUT_CLASSIFICATION	9.062325563077709E-5	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9999093767443693	WITHOUT_CLASSIFICATION	9.062325563077709E-5	DEFECT
put implementation	WITHOUT_CLASSIFICATION	0.9998659462557786	WITHOUT_CLASSIFICATION	1.3405374422133592E-4	DEFECT
get implementation	WITHOUT_CLASSIFICATION	0.9998798947988357	WITHOUT_CLASSIFICATION	1.2010520116442124E-4	DEFECT
specialized for value	WITHOUT_CLASSIFICATION	0.9999279453027653	WITHOUT_CLASSIFICATION	7.205469723466327E-5	DEFECT
delete implementation	WITHOUT_CLASSIFICATION	0.9998430762060244	WITHOUT_CLASSIFICATION	1.569237939755519E-4	DEFECT
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999805328381908	WITHOUT_CLASSIFICATION	1.9467161809291357E-5	DEFECT
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9999445128779653	WITHOUT_CLASSIFICATION	5.548712203468198E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
update the hash value	WITHOUT_CLASSIFICATION	0.9999689998698896	WITHOUT_CLASSIFICATION	3.100013011040993E-5	DEFECT
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9993904052237664	WITHOUT_CLASSIFICATION	6.095947762335638E-4	DEFECT
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9998912233742644	WITHOUT_CLASSIFICATION	1.087766257355609E-4	DEFECT
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998286439099142	WITHOUT_CLASSIFICATION	1.7135609008584124E-4	DEFECT
remain where we are	WITHOUT_CLASSIFICATION	0.9999830655252532	WITHOUT_CLASSIFICATION	1.6934474746747486E-5	DEFECT
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9985488823592964	WITHOUT_CLASSIFICATION	0.0014511176407035744	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9998078486736396	WITHOUT_CLASSIFICATION	1.921513263604023E-4	DEFECT
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999449903282858	WITHOUT_CLASSIFICATION	5.500967171434607E-5	DEFECT
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9997733113809345	WITHOUT_CLASSIFICATION	2.2668861906558927E-4	DEFECT
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998503000507072	WITHOUT_CLASSIFICATION	1.4969994929274258E-4	DEFECT
first try as directory	WITHOUT_CLASSIFICATION	0.9999979879646103	WITHOUT_CLASSIFICATION	2.012035389747902E-6	DEFECT
next as regular file	WITHOUT_CLASSIFICATION	0.9999222410598037	WITHOUT_CLASSIFICATION	7.775894019639124E-5	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9998394193941714	WITHOUT_CLASSIFICATION	1.6058060582862678E-4	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Stream-based	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998581684923122	WITHOUT_CLASSIFICATION	1.4183150768771923E-4	DEFECT
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9997286068304119	WITHOUT_CLASSIFICATION	2.7139316958805414E-4	DEFECT
Constants for seek	WITHOUT_CLASSIFICATION	0.9999172489657325	WITHOUT_CLASSIFICATION	8.275103426754213E-5	DEFECT
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9995106642601489	WITHOUT_CLASSIFICATION	4.893357398511528E-4	DEFECT
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999663065900367	WITHOUT_CLASSIFICATION	3.369340996323394E-5	DEFECT
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998860202616796	WITHOUT_CLASSIFICATION	1.13979738320316E-4	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999905488225526	WITHOUT_CLASSIFICATION	9.451177447349362E-6	DEFECT
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999494983336114	WITHOUT_CLASSIFICATION	5.05016663886055E-5	DEFECT
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999486660591014	WITHOUT_CLASSIFICATION	5.1333940898564E-5	DEFECT
re-register	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9997998080785037	WITHOUT_CLASSIFICATION	2.0019192149630727E-4	DEFECT
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999938174021665	WITHOUT_CLASSIFICATION	6.1825978335714906E-6	DEFECT
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999727661685669	WITHOUT_CLASSIFICATION	2.7233831433165214E-5	DEFECT
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999843639070012	WITHOUT_CLASSIFICATION	1.563609299875659E-5	DEFECT
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9993766574034644	WITHOUT_CLASSIFICATION	6.233425965356678E-4	DEFECT
IO class methods.	WITHOUT_CLASSIFICATION	0.9998577328526111	WITHOUT_CLASSIFICATION	1.4226714738888293E-4	DEFECT
use original modes	WITHOUT_CLASSIFICATION	0.9998846403679775	WITHOUT_CLASSIFICATION	1.1535963202242846E-4	DEFECT
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999961930614218	WITHOUT_CLASSIFICATION	3.806938578201466E-6	DEFECT
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998226930366232	WITHOUT_CLASSIFICATION	1.773069633767671E-4	DEFECT
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998743622686337	WITHOUT_CLASSIFICATION	1.2563773136633257E-4	DEFECT
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999748787802231	WITHOUT_CLASSIFICATION	2.5121219776952326E-5	DEFECT
isRetained=true	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9067179057060863	WITHOUT_CLASSIFICATION	0.0932820942939137	DEFECT
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999461359345188	WITHOUT_CLASSIFICATION	5.386406548120857E-4	DEFECT
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9958837358428835	WITHOUT_CLASSIFICATION	0.004116264157116519	DEFECT
Everything written	WITHOUT_CLASSIFICATION	0.999931432525515	WITHOUT_CLASSIFICATION	6.85674744850443E-5	DEFECT
return len - n;	WITHOUT_CLASSIFICATION	0.9999175232752964	WITHOUT_CLASSIFICATION	8.24767247036903E-5	DEFECT
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999957167475867	WITHOUT_CLASSIFICATION	4.283252413300018E-5	DEFECT
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9974496834044378	WITHOUT_CLASSIFICATION	0.002550316595562198	DEFECT
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9997582321206057	WITHOUT_CLASSIFICATION	2.4176787939440361E-4	DEFECT
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999675545489216	WITHOUT_CLASSIFICATION	3.24454510783496E-5	DEFECT
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999655746929702	WITHOUT_CLASSIFICATION	3.442530702980328E-5	DEFECT
hmmmm	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9989274137277807	WITHOUT_CLASSIFICATION	0.001072586272219316	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9997813926322402	WITHOUT_CLASSIFICATION	2.1860736775970184E-4	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999281127606302	WITHOUT_CLASSIFICATION	7.188723936981241E-5	DEFECT
Length to read	WITHOUT_CLASSIFICATION	0.9999652546034364	WITHOUT_CLASSIFICATION	3.474539656357469E-5	DEFECT
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999354562295721	WITHOUT_CLASSIFICATION	6.454377042788602E-5	DEFECT
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999359196148434	WITHOUT_CLASSIFICATION	6.408038515654976E-5	DEFECT
select until read is ready	WITHOUT_CLASSIFICATION	0.9996614479448913	WITHOUT_CLASSIFICATION	3.3855205510871094E-4	DEFECT
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998645026751376	WITHOUT_CLASSIFICATION	1.3549732486241994E-4	DEFECT
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999860059042461	WITHOUT_CLASSIFICATION	1.3994095753895133E-4	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998967508907038	WITHOUT_CLASSIFICATION	1.0324910929615513E-4	DEFECT
rb: writable	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998967508907038	WITHOUT_CLASSIFICATION	1.0324910929615513E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9977696328891149	WITHOUT_CLASSIFICATION	0.0022303671108851167	DEFECT
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7876535734649849	WITHOUT_CLASSIFICATION	0.21234642653501523	DEFECT
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999618716410569	WITHOUT_CLASSIFICATION	3.812835894306881E-5	DEFECT
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9422987211701849	WITHOUT_CLASSIFICATION	0.057701278829815225	DEFECT
class methods for IO	WITHOUT_CLASSIFICATION	0.9998908828430525	WITHOUT_CLASSIFICATION	1.0911715694755553E-4	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999603183140956	WITHOUT_CLASSIFICATION	3.9681685904405845E-5	DEFECT
write	WITHOUT_CLASSIFICATION	0.9999909512837014	WITHOUT_CLASSIFICATION	9.04871629856042E-6	DEFECT
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9900000286503947	WITHOUT_CLASSIFICATION	0.009999971349605246	DEFECT
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995129984699	WITHOUT_CLASSIFICATION	4.870015301889937E-7	DEFECT
FIXME: process options	WITHOUT_CLASSIFICATION	0.994069870090203	WITHOUT_CLASSIFICATION	0.005930129909797008	DEFECT
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9987547338048064	WITHOUT_CLASSIFICATION	0.0012452661951936504	DEFECT
NIO based pipe	WITHOUT_CLASSIFICATION	0.9999690787645016	WITHOUT_CLASSIFICATION	3.092123549835557E-5	DEFECT
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9997397932406342	WITHOUT_CLASSIFICATION	2.602067593657505E-4	DEFECT
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999615770545559	WITHOUT_CLASSIFICATION	3.8422945444076813E-5	DEFECT
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9999759481906967	WITHOUT_CLASSIFICATION	2.4051809303314872E-5	DEFECT
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9486866783753315	WITHOUT_CLASSIFICATION	0.05131332162466853	DEFECT
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9986349504143989	WITHOUT_CLASSIFICATION	0.0013650495856010955	DEFECT
The class of this object	WITHOUT_CLASSIFICATION	0.9997158231542608	WITHOUT_CLASSIFICATION	2.8417684573920065E-4	DEFECT
zeroed by jvm	WITHOUT_CLASSIFICATION	0.999911691988791	WITHOUT_CLASSIFICATION	8.830801120904373E-5	DEFECT
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9791930174752436	WITHOUT_CLASSIFICATION	0.02080698252475648	DEFECT
rb_class_boot	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
for interface impls	WITHOUT_CLASSIFICATION	0.9999634599698924	WITHOUT_CLASSIFICATION	3.6540030107562045E-5	DEFECT
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9995447970420033	WITHOUT_CLASSIFICATION	4.552029579967E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999013360257171	WITHOUT_CLASSIFICATION	9.86639742828784E-5	DEFECT
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9995707791673801	WITHOUT_CLASSIFICATION	4.292208326198744E-4	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998920240460698	WITHOUT_CLASSIFICATION	1.0797595393017684E-4	DEFECT
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9998820608406008	WITHOUT_CLASSIFICATION	1.1793915939926139E-4	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999442917085022	WITHOUT_CLASSIFICATION	5.570829149773188E-5	DEFECT
Struct methods	WITHOUT_CLASSIFICATION	0.9999339692908387	WITHOUT_CLASSIFICATION	6.603070916132775E-5	DEFECT
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995385342106446	WITHOUT_CLASSIFICATION	4.6146578935544444E-4	DEFECT
define access methods.	WITHOUT_CLASSIFICATION	0.9999622062697875	WITHOUT_CLASSIFICATION	3.7793730212522775E-5	DEFECT
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999716300787633	WITHOUT_CLASSIFICATION	2.8369921236729878E-5	DEFECT
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999996099598546	WITHOUT_CLASSIFICATION	3.9004014540568905E-6	DEFECT
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999953092242133	WITHOUT_CLASSIFICATION	4.690775786587055E-6	DEFECT
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9991603381117311	WITHOUT_CLASSIFICATION	8.396618882688644E-4	DEFECT
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999260741402721	WITHOUT_CLASSIFICATION	7.392585972793364E-5	DEFECT
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9999681742852736	WITHOUT_CLASSIFICATION	3.1825714726405434E-5	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.999993743103952	WITHOUT_CLASSIFICATION	6.256896048146801E-6	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.999993743103952	WITHOUT_CLASSIFICATION	6.256896048146801E-6	DEFECT
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999979883627979	WITHOUT_CLASSIFICATION	2.0116372021109666E-5	DEFECT
superClass may be null.	WITHOUT_CLASSIFICATION	0.9998664150636503	WITHOUT_CLASSIFICATION	1.335849363497389E-4	DEFECT
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9991814365041353	WITHOUT_CLASSIFICATION	8.185634958646926E-4	DEFECT
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999892857035834	WITHOUT_CLASSIFICATION	1.0714296416589608E-5	DEFECT
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9997497141454948	WITHOUT_CLASSIFICATION	2.502858545051422E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.99998359510666	WITHOUT_CLASSIFICATION	1.6404893340055248E-5	DEFECT
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9998732165923958	WITHOUT_CLASSIFICATION	1.2678340760414954E-4	DEFECT
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999741448361827	WITHOUT_CLASSIFICATION	2.585516381729678E-5	DEFECT
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999439342652883	WITHOUT_CLASSIFICATION	5.606573471177784E-5	DEFECT
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999907577405994	WITHOUT_CLASSIFICATION	9.242259400676653E-6	DEFECT
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999778390467446	WITHOUT_CLASSIFICATION	2.2160953255386713E-5	DEFECT
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999826636425916	WITHOUT_CLASSIFICATION	1.7336357408411895E-5	DEFECT
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999259364145431	WITHOUT_CLASSIFICATION	7.406358545683226E-5	DEFECT
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998963928432596	WITHOUT_CLASSIFICATION	1.0360715674034036E-4	DEFECT
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999990942307267	WITHOUT_CLASSIFICATION	9.057692731359642E-7	DEFECT
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999489617934433	WITHOUT_CLASSIFICATION	5.103820655676575E-5	DEFECT
superClazz = null;	WITHOUT_CLASSIFICATION	0.999931799394023	WITHOUT_CLASSIFICATION	6.820060597690321E-5	DEFECT
reopen a java class	WITHOUT_CLASSIFICATION	0.9995807397073792	WITHOUT_CLASSIFICATION	4.1926029262076065E-4	DEFECT
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9987984693275893	WITHOUT_CLASSIFICATION	0.0012015306724107039	DEFECT
reopen a java module	WITHOUT_CLASSIFICATION	0.9998555919700217	WITHOUT_CLASSIFICATION	1.444080299782724E-4	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.8791635142052968	WITHOUT_CLASSIFICATION	0.1208364857947032	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.8791635142052968	WITHOUT_CLASSIFICATION	0.1208364857947032	DEFECT
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999923201668269	WITHOUT_CLASSIFICATION	7.679833173037382E-6	DEFECT
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999609058056949	WITHOUT_CLASSIFICATION	3.9094194305198506E-5	DEFECT
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9990139987539227	WITHOUT_CLASSIFICATION	9.860012460772747E-4	DEFECT
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999990709745187	WITHOUT_CLASSIFICATION	9.290254812998686E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9995377076378685	WITHOUT_CLASSIFICATION	4.6229236213145953E-4	DEFECT
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9996254031604511	WITHOUT_CLASSIFICATION	3.7459683954883696E-4	DEFECT
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9997458328770227	WITHOUT_CLASSIFICATION	2.541671229772903E-4	DEFECT
Module class methods	WITHOUT_CLASSIFICATION	0.999838696666717	WITHOUT_CLASSIFICATION	1.6130333328305543E-4	DEFECT
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999955736512803	WITHOUT_CLASSIFICATION	4.426348719713693E-6	DEFECT
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9998344358762733	WITHOUT_CLASSIFICATION	1.6556412372661168E-4	DEFECT
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999852648552352	WITHOUT_CLASSIFICATION	1.473514476468799E-5	DEFECT
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999947303650705	WITHOUT_CLASSIFICATION	5.269634929506145E-6	DEFECT
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999603752303051	WITHOUT_CLASSIFICATION	3.962476969475104E-5	DEFECT
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999960769373153	WITHOUT_CLASSIFICATION	3.923062684697607E-5	DEFECT
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999098414962619	WITHOUT_CLASSIFICATION	9.015850373794797E-5	DEFECT
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9997699261346488	WITHOUT_CLASSIFICATION	2.3007386535124318E-4	DEFECT
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999447585012096	WITHOUT_CLASSIFICATION	5.5241498790307426E-5	DEFECT
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999611060218389	WITHOUT_CLASSIFICATION	3.8893978161154324E-5	DEFECT
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9992734087406563	WITHOUT_CLASSIFICATION	7.265912593436442E-4	DEFECT
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9965355395835737	WITHOUT_CLASSIFICATION	0.0034644604164264362	DEFECT
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998424255556847	WITHOUT_CLASSIFICATION	1.575744443153702E-4	DEFECT
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9995007805576165	WITHOUT_CLASSIFICATION	4.992194423835646E-4	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997552251720528	WITHOUT_CLASSIFICATION	2.4477482794719486E-4	DEFECT
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999753579258775	WITHOUT_CLASSIFICATION	2.4642074122509233E-4	DEFECT
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9995906023128557	WITHOUT_CLASSIFICATION	4.0939768714424193E-4	DEFECT
reopen	WITHOUT_CLASSIFICATION	0.9999867013082694	WITHOUT_CLASSIFICATION	1.329869173066637E-5	DEFECT
ARGF methods	WITHOUT_CLASSIFICATION	0.9999339692908387	WITHOUT_CLASSIFICATION	6.603070916132775E-5	DEFECT
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
one optional, one required args	WITHOUT_CLASSIFICATION	0.9998565763834162	WITHOUT_CLASSIFICATION	1.4342361658376557E-4	DEFECT
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999670410924592	WITHOUT_CLASSIFICATION	3.2958907540805125E-5	DEFECT
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999862312642782	WITHOUT_CLASSIFICATION	1.3768735721836148E-5	DEFECT
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999056737586385	WITHOUT_CLASSIFICATION	9.432624136156905E-5	DEFECT
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999908001064364	WITHOUT_CLASSIFICATION	9.199893563600572E-5	DEFECT
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999533462651831	WITHOUT_CLASSIFICATION	4.66537348169364E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999511984411167	WITHOUT_CLASSIFICATION	4.8801558883373475E-5	DEFECT
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998442162170119	WITHOUT_CLASSIFICATION	1.557837829880986E-4	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994560549270041	WITHOUT_CLASSIFICATION	5.439450729959808E-4	DEFECT
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999831448837123	WITHOUT_CLASSIFICATION	1.685511628778616E-5	DEFECT
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999836570152008	WITHOUT_CLASSIFICATION	1.63429847992064E-5	DEFECT
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997971129400186	WITHOUT_CLASSIFICATION	2.0288705998139207E-4	DEFECT
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998329308430046	WITHOUT_CLASSIFICATION	1.6706915699535264E-4	DEFECT
ignore error	WITHOUT_CLASSIFICATION	0.9999763671392775	WITHOUT_CLASSIFICATION	2.363286072241024E-5	DEFECT
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9999203248775882	WITHOUT_CLASSIFICATION	7.967512241172796E-5	DEFECT
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999176463970841	WITHOUT_CLASSIFICATION	8.235360291584366E-5	DEFECT
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9997635064612999	WITHOUT_CLASSIFICATION	2.36493538700114E-4	DEFECT
odd	WITHOUT_CLASSIFICATION	0.9999868240015825	WITHOUT_CLASSIFICATION	1.3175998417529323E-5	DEFECT
JRubyClient	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9987506311663178	WITHOUT_CLASSIFICATION	0.0012493688336822533	DEFECT
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999681212053824	WITHOUT_CLASSIFICATION	3.1878794617634566E-5	DEFECT
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999265663932696	WITHOUT_CLASSIFICATION	7.343360673037331E-5	DEFECT
r = x 2 y	WITHOUT_CLASSIFICATION	0.9997290380118484	WITHOUT_CLASSIFICATION	2.7096198815149076E-4	DEFECT
0!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
1!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
2!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
3!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
4!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
5!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
6!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
7!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
8!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
9!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
11!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
12!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
13!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
15!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
16!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
17!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
19!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
20!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
21!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Static constants	WITHOUT_CLASSIFICATION	0.9999619118069983	WITHOUT_CLASSIFICATION	3.808819300156845E-5	DEFECT
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999959284875362	WITHOUT_CLASSIFICATION	4.07151246384479E-6	DEFECT
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999683183241858	WITHOUT_CLASSIFICATION	3.16816758142372E-5	DEFECT
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999197059991808	WITHOUT_CLASSIFICATION	8.029400081925603E-5	DEFECT
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9987440724666061	WITHOUT_CLASSIFICATION	0.0012559275333939278	DEFECT
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999488682755968	WITHOUT_CLASSIFICATION	5.113172440308307E-5	DEFECT
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999822287051827	WITHOUT_CLASSIFICATION	1.777129481732186E-5	DEFECT
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.997836802431417	WITHOUT_CLASSIFICATION	0.0021631975685829767	DEFECT
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9998940718465791	WITHOUT_CLASSIFICATION	1.0592815342092926E-4	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999941511872749	WITHOUT_CLASSIFICATION	5.848812725086472E-5	DEFECT
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8547906274219665	WITHOUT_CLASSIFICATION	0.1452093725780334	DEFECT
integer division	WITHOUT_CLASSIFICATION	0.9999223364755002	WITHOUT_CLASSIFICATION	7.766352449975746E-5	DEFECT
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9998261447917975	WITHOUT_CLASSIFICATION	1.7385520820241068E-4	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999134932437869	WITHOUT_CLASSIFICATION	8.650675621316239E-5	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999134932437869	WITHOUT_CLASSIFICATION	8.650675621316239E-5	DEFECT
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9999488682755968	WITHOUT_CLASSIFICATION	5.113172440308307E-5	DEFECT
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999559718374923	WITHOUT_CLASSIFICATION	4.402816250769893E-4	DEFECT
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999945913191767	WITHOUT_CLASSIFICATION	5.408680823367459E-6	DEFECT
...round to that digit	WITHOUT_CLASSIFICATION	0.9998882743937261	WITHOUT_CLASSIFICATION	1.1172560627385994E-4	DEFECT
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999588150348436	WITHOUT_CLASSIFICATION	4.118496515641436E-5	DEFECT
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998989417069791	WITHOUT_CLASSIFICATION	1.0105829302083257E-4	DEFECT
sign	WITHOUT_CLASSIFICATION	0.9999865477452801	WITHOUT_CLASSIFICATION	1.3452254719967574E-5	DEFECT
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999105733803763	WITHOUT_CLASSIFICATION	8.942661962372083E-5	DEFECT
normalize the value	WITHOUT_CLASSIFICATION	0.9999498377263777	WITHOUT_CLASSIFICATION	5.016227362218527E-5	DEFECT
base	WITHOUT_CLASSIFICATION	0.9999900117253933	WITHOUT_CLASSIFICATION	9.988274606794963E-6	DEFECT
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9995937538364551	WITHOUT_CLASSIFICATION	4.0624616354486426E-4	DEFECT
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9998954118401165	WITHOUT_CLASSIFICATION	1.0458815988355579E-4	DEFECT
eh?!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9994775132115278	WITHOUT_CLASSIFICATION	5.22486788472213E-4	DEFECT
General number and precision checking	WITHOUT_CLASSIFICATION	0.9998010118997492	WITHOUT_CLASSIFICATION	1.989881002507569E-4	DEFECT
the requested precision	WITHOUT_CLASSIFICATION	0.9999456382647331	WITHOUT_CLASSIFICATION	5.436173526684878E-5	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999670731811138	WITHOUT_CLASSIFICATION	3.292681888622036E-5	DEFECT
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999376856156771	WITHOUT_CLASSIFICATION	6.23143843228504E-5	DEFECT
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998319868144279	WITHOUT_CLASSIFICATION	1.6801318557208827E-4	DEFECT
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999715452994028	WITHOUT_CLASSIFICATION	2.8454700597153678E-5	DEFECT
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999735520235844	WITHOUT_CLASSIFICATION	2.644797641560354E-5	DEFECT
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999073314713288	WITHOUT_CLASSIFICATION	9.266852867112813E-5	DEFECT
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999133259867838	WITHOUT_CLASSIFICATION	8.667401321618869E-5	DEFECT
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999172207144629	WITHOUT_CLASSIFICATION	8.277928553705497E-5	DEFECT
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9998291328972522	WITHOUT_CLASSIFICATION	1.7086710274787052E-4	DEFECT
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998816276363711	WITHOUT_CLASSIFICATION	1.1837236362883494E-4	DEFECT
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999688602154491	WITHOUT_CLASSIFICATION	3.1139784550947586E-5	DEFECT
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999657388872738	WITHOUT_CLASSIFICATION	3.426111272615286E-5	DEFECT
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.998675548389132	WITHOUT_CLASSIFICATION	0.0013244516108680852	DEFECT
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9997676967091199	WITHOUT_CLASSIFICATION	2.3230329088009012E-4	DEFECT
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998982800754159	WITHOUT_CLASSIFICATION	1.0171992458403922E-4	DEFECT
root x is ready!	WITHOUT_CLASSIFICATION	0.9996341397528986	WITHOUT_CLASSIFICATION	3.658602471014796E-4	DEFECT
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9999119881124542	WITHOUT_CLASSIFICATION	8.801188754584199E-5	DEFECT
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999337733335864	WITHOUT_CLASSIFICATION	6.62266664135512E-5	DEFECT
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
c: bind_eval	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9998745677010666	WITHOUT_CLASSIFICATION	1.254322989333046E-4	DEFECT
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9998967508907038	WITHOUT_CLASSIFICATION	1.0324910929615513E-4	DEFECT
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9994277341664275	WITHOUT_CLASSIFICATION	5.722658335725088E-4	DEFECT
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999894490133661	WITHOUT_CLASSIFICATION	1.0550986633862216E-5	DEFECT
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.99936998490081	WITHOUT_CLASSIFICATION	6.300150991899291E-4	DEFECT
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9998862124741559	WITHOUT_CLASSIFICATION	1.1378752584411688E-4	DEFECT
try the normal property first	WITHOUT_CLASSIFICATION	0.9999609108613149	WITHOUT_CLASSIFICATION	3.908913868498568E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999711247601714	WITHOUT_CLASSIFICATION	2.887523982861023E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999711247601714	WITHOUT_CLASSIFICATION	2.887523982861023E-5	DEFECT
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9985414568654465	WITHOUT_CLASSIFICATION	0.0014585431345534492	DEFECT
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999164869814554	WITHOUT_CLASSIFICATION	8.351301854462692E-5	DEFECT
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9998667391725431	WITHOUT_CLASSIFICATION	1.3326082745696748E-4	DEFECT
consume the file name	WITHOUT_CLASSIFICATION	0.9999822420836963	WITHOUT_CLASSIFICATION	1.775791630359187E-5	DEFECT
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998404973949891	WITHOUT_CLASSIFICATION	1.5950260501091954E-4	DEFECT
try cwd first	WITHOUT_CLASSIFICATION	0.9999868996048612	WITHOUT_CLASSIFICATION	1.3100395138852772E-5	DEFECT
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999143266578515	WITHOUT_CLASSIFICATION	8.567334214841496E-5	DEFECT
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9998922140020257	WITHOUT_CLASSIFICATION	1.0778599797433312E-4	DEFECT
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998905952524133	WITHOUT_CLASSIFICATION	1.094047475867565E-4	DEFECT
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.99992599224925	WITHOUT_CLASSIFICATION	7.400775074994532E-5	DEFECT
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998905952524133	WITHOUT_CLASSIFICATION	1.094047475867565E-4	DEFECT
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999484612455757	WITHOUT_CLASSIFICATION	5.153875442436491E-5	DEFECT
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9973536449395547	WITHOUT_CLASSIFICATION	0.0026463550604452464	DEFECT
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9997844983922418	WITHOUT_CLASSIFICATION	2.1550160775812716E-4	DEFECT
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9486866783753315	WITHOUT_CLASSIFICATION	0.05131332162466853	DEFECT
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9997733747556102	WITHOUT_CLASSIFICATION	2.2662524438980407E-4	DEFECT
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9974651385670491	WITHOUT_CLASSIFICATION	0.002534861432950894	DEFECT
must be power of 2!	WITHOUT_CLASSIFICATION	0.9999353421787115	WITHOUT_CLASSIFICATION	6.465782128851009E-5	DEFECT
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999973593309758	WITHOUT_CLASSIFICATION	2.6406690242057898E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9973536449395547	WITHOUT_CLASSIFICATION	0.0026463550604452464	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999536426390332	WITHOUT_CLASSIFICATION	4.6357360966810685E-5	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999536426390332	WITHOUT_CLASSIFICATION	4.6357360966810685E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999621751041753	WITHOUT_CLASSIFICATION	3.782489582462663E-5	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9999413052251526	WITHOUT_CLASSIFICATION	5.869477484747812E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995484317209512	WITHOUT_CLASSIFICATION	4.5156827904882594E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999919336537062	WITHOUT_CLASSIFICATION	8.066346293803323E-5	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999737780682199	WITHOUT_CLASSIFICATION	2.6221931780171706E-5	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999532993602345	WITHOUT_CLASSIFICATION	4.670063976553932E-5	DEFECT
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9997927153815833	WITHOUT_CLASSIFICATION	2.072846184167866E-4	DEFECT
Profile	WITHOUT_CLASSIFICATION	0.9999865940310686	WITHOUT_CLASSIFICATION	1.3405968931465375E-5	DEFECT
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.999951642228612	WITHOUT_CLASSIFICATION	4.835777138802617E-5	DEFECT
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999721684527222	WITHOUT_CLASSIFICATION	2.783154727773879E-5	DEFECT
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999850818150587	WITHOUT_CLASSIFICATION	1.4918184941154542E-5	DEFECT
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999637832415489	WITHOUT_CLASSIFICATION	3.6216758451107264E-5	DEFECT
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999236549221762	WITHOUT_CLASSIFICATION	7.634507782377488E-5	DEFECT
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9995992818639037	WITHOUT_CLASSIFICATION	4.0071813609629607E-4	DEFECT
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999944388310865	WITHOUT_CLASSIFICATION	5.561168913408649E-6	DEFECT
reset the state	WITHOUT_CLASSIFICATION	0.9999792997623734	WITHOUT_CLASSIFICATION	2.070023762660305E-5	DEFECT
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999321896619443	WITHOUT_CLASSIFICATION	6.781033805564819E-5	DEFECT
rb_match_busy	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
str is frozen	WITHOUT_CLASSIFICATION	0.9998038402140953	WITHOUT_CLASSIFICATION	1.9615978590466475E-4	DEFECT
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9995331244626576	WITHOUT_CLASSIFICATION	4.6687553734231534E-4	DEFECT
JRubyServer	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9994681450706046	WITHOUT_CLASSIFICATION	5.318549293954732E-4	DEFECT
boot the Object class	WITHOUT_CLASSIFICATION	0.9998552953585761	WITHOUT_CLASSIFICATION	1.447046414239261E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999013360257171	WITHOUT_CLASSIFICATION	9.86639742828784E-5	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.99998359510666	WITHOUT_CLASSIFICATION	1.6404893340055248E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999992745909236	WITHOUT_CLASSIFICATION	7.254090764423171E-7	DEFECT
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9987491485736271	WITHOUT_CLASSIFICATION	0.0012508514263728685	DEFECT
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999665155012398	WITHOUT_CLASSIFICATION	3.348449876024987E-5	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9773212547215319	WITHOUT_CLASSIFICATION	0.022678745278468238	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9998468284220559	WITHOUT_CLASSIFICATION	1.53171577944068E-4	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9998468284220559	WITHOUT_CLASSIFICATION	1.53171577944068E-4	DEFECT
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9998815394515008	WITHOUT_CLASSIFICATION	1.184605484991911E-4	DEFECT
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9997478494817595	WITHOUT_CLASSIFICATION	2.521505182404865E-4	DEFECT
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999337217297141	WITHOUT_CLASSIFICATION	6.627827028592159E-5	DEFECT
update all subclasses	WITHOUT_CLASSIFICATION	0.9999651659894617	WITHOUT_CLASSIFICATION	3.4834010538302373E-5	DEFECT
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998318856205858	WITHOUT_CLASSIFICATION	1.6811437941422733E-4	DEFECT
static initializing method	WITHOUT_CLASSIFICATION	0.9999538759882276	WITHOUT_CLASSIFICATION	4.6124011772449885E-5	DEFECT
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999352494310627	WITHOUT_CLASSIFICATION	6.47505689373031E-5	DEFECT
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999871054745512	WITHOUT_CLASSIFICATION	1.2894525448905366E-5	DEFECT
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999725627823375	WITHOUT_CLASSIFICATION	2.7437217662558213E-5	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9999162025047958	WITHOUT_CLASSIFICATION	8.379749520416147E-5	DEFECT
self method name	WITHOUT_CLASSIFICATION	0.9999477287306033	WITHOUT_CLASSIFICATION	5.227126939673593E-5	DEFECT
the default allocator	WITHOUT_CLASSIFICATION	0.9999837271264265	WITHOUT_CLASSIFICATION	1.6272873573537282E-5	DEFECT
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999570999455213	WITHOUT_CLASSIFICATION	4.2900054478645505E-5	DEFECT
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999788848581594	WITHOUT_CLASSIFICATION	2.1115141840504667E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998195891517873	WITHOUT_CLASSIFICATION	1.804108482127873E-4	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9998745912270491	WITHOUT_CLASSIFICATION	1.2540877295075836E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998515244134404	WITHOUT_CLASSIFICATION	1.4847558655968149E-4	DEFECT
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999957413849748	WITHOUT_CLASSIFICATION	4.258615025229878E-6	DEFECT
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999604439343087	WITHOUT_CLASSIFICATION	3.955606569127373E-5	DEFECT
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9991977725431964	WITHOUT_CLASSIFICATION	8.022274568036031E-4	DEFECT
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999940210780922	WITHOUT_CLASSIFICATION	5.9789219077979376E-5	DEFECT
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998186081917166	WITHOUT_CLASSIFICATION	1.8139180828347854E-4	DEFECT
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
a gotcha	WITHOUT_CLASSIFICATION	0.9999852669177877	WITHOUT_CLASSIFICATION	1.4733082212337372E-5	DEFECT
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9997250700719904	WITHOUT_CLASSIFICATION	2.7492992800968937E-4	DEFECT
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999147560438806	WITHOUT_CLASSIFICATION	8.52439561194279E-5	DEFECT
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999549253521034	WITHOUT_CLASSIFICATION	4.5074647896623764E-5	DEFECT
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.999925977930496	WITHOUT_CLASSIFICATION	7.402206950401393E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998195891517873	WITHOUT_CLASSIFICATION	1.804108482127873E-4	DEFECT
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998649822793082	WITHOUT_CLASSIFICATION	1.3501772069173047E-4	DEFECT
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9994105818193695	WITHOUT_CLASSIFICATION	5.894181806305192E-4	DEFECT
MRI behavior:	WITHOUT_CLASSIFICATION	0.9999134376796036	WITHOUT_CLASSIFICATION	8.656232039642975E-5	DEFECT
Numeric.equal	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
provider is not available	WITHOUT_CLASSIFICATION	0.9989390773646849	WITHOUT_CLASSIFICATION	0.001060922635315096	DEFECT
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9938877427341017	WITHOUT_CLASSIFICATION	0.0061122572658981866	DEFECT
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999927166750462	WITHOUT_CLASSIFICATION	7.28332495379873E-5	DEFECT
RubyDigest	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9993851093077387	WITHOUT_CLASSIFICATION	6.148906922613474E-4	DEFECT
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998603856057131	WITHOUT_CLASSIFICATION	1.3961439428698152E-4	DEFECT
we only add live threads	WITHOUT_CLASSIFICATION	0.9994465620873283	WITHOUT_CLASSIFICATION	5.534379126717427E-4	DEFECT
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9996747514822186	WITHOUT_CLASSIFICATION	3.2524851778126647E-4	DEFECT
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.99999751449171	WITHOUT_CLASSIFICATION	2.4855082899092006E-6	DEFECT
JRubyService	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
while	WITHOUT_CLASSIFICATION	0.9999531881611099	WITHOUT_CLASSIFICATION	4.681183889016167E-5	DEFECT
\OOO	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9999365465347103	WITHOUT_CLASSIFICATION	6.345346528972587E-5	DEFECT
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999427033834789	WITHOUT_CLASSIFICATION	5.7296616520987516E-5	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999930069612922	WITHOUT_CLASSIFICATION	6.99303870780917E-6	DEFECT
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999611645955293	WITHOUT_CLASSIFICATION	3.883540447070994E-5	DEFECT
silent ?	WITHOUT_CLASSIFICATION	0.9999937516922037	WITHOUT_CLASSIFICATION	6.24830779629913E-6	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9999217907290253	WITHOUT_CLASSIFICATION	7.820927097474822E-5	DEFECT
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9922299836246675	WITHOUT_CLASSIFICATION	0.007770016375332488	DEFECT
Surrogates	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999433694299443	WITHOUT_CLASSIFICATION	5.6630570055824795E-5	DEFECT
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
\\uHHHH	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
inner switch	WITHOUT_CLASSIFICATION	0.9999541820362503	WITHOUT_CLASSIFICATION	4.581796374978255E-5	DEFECT
newInstance here	WITHOUT_CLASSIFICATION	0.9999130265593408	WITHOUT_CLASSIFICATION	8.697344065916367E-5	DEFECT
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9988256181268351	WITHOUT_CLASSIFICATION	0.0011743818731649119	DEFECT
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
option_to_str	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9997610750925834	WITHOUT_CLASSIFICATION	2.3892490741662066E-4	DEFECT
args should be before block	WITHOUT_CLASSIFICATION	0.9999455981035035	WITHOUT_CLASSIFICATION	5.4401896496499286E-5	DEFECT
args should be at end	WITHOUT_CLASSIFICATION	0.998649378497981	WITHOUT_CLASSIFICATION	0.001350621502019072	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999538574093175	WITHOUT_CLASSIFICATION	4.614259068254264E-5	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999538574093175	WITHOUT_CLASSIFICATION	4.614259068254264E-5	DEFECT
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9982769120101217	WITHOUT_CLASSIFICATION	0.0017230879898783033	DEFECT
start a new populator	WITHOUT_CLASSIFICATION	0.9999442997517497	WITHOUT_CLASSIFICATION	5.570024825030959E-5	DEFECT
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999992111523481	WITHOUT_CLASSIFICATION	7.888476519071194E-6	DEFECT
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9994892805026504	WITHOUT_CLASSIFICATION	5.107194973496066E-4	DEFECT
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999984519076878	WITHOUT_CLASSIFICATION	1.5480923121928623E-5	DEFECT
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999937100060523	WITHOUT_CLASSIFICATION	6.2899939476282825E-6	DEFECT
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999173835611969	WITHOUT_CLASSIFICATION	8.261643880314276E-5	DEFECT
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999410252282119	WITHOUT_CLASSIFICATION	5.8974771788031956E-5	DEFECT
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9998081536754219	WITHOUT_CLASSIFICATION	1.9184632457813866E-4	DEFECT
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999433536356505	WITHOUT_CLASSIFICATION	5.664636434944409E-5	DEFECT
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998905952524133	WITHOUT_CLASSIFICATION	1.094047475867565E-4	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999877824658616	WITHOUT_CLASSIFICATION	1.2217534138365306E-5	DEFECT
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997888514081786	WITHOUT_CLASSIFICATION	2.1114859182142366E-4	DEFECT
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9855566963329471	WITHOUT_CLASSIFICATION	0.014443303667052999	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997942090598455	WITHOUT_CLASSIFICATION	2.0579094015456246E-4	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9999385595343119	WITHOUT_CLASSIFICATION	6.144046568814566E-5	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999746151298918	WITHOUT_CLASSIFICATION	2.5384870108165785E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
colon3	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Colon3	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9992268014607638	WITHOUT_CLASSIFICATION	7.731985392362094E-4	DEFECT
For b.foo	WITHOUT_CLASSIFICATION	0.9999955124951688	WITHOUT_CLASSIFICATION	4.487504831164506E-6	DEFECT
instance config for the script run	WITHOUT_CLASSIFICATION	0.9999874795288741	WITHOUT_CLASSIFICATION	1.2520471125852459E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999079612561973	WITHOUT_CLASSIFICATION	9.203874380270022E-5	DEFECT
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999710975129923	WITHOUT_CLASSIFICATION	2.8902487007756834E-5	DEFECT
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.998752443171867	WITHOUT_CLASSIFICATION	0.0012475568281329768	DEFECT
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999644748399413	WITHOUT_CLASSIFICATION	3.5525160058664554E-5	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999683607969252	WITHOUT_CLASSIFICATION	3.163920307468954E-5	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999683607969252	WITHOUT_CLASSIFICATION	3.163920307468954E-5	DEFECT
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999928956649928	WITHOUT_CLASSIFICATION	7.104335007213062E-6	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999957136638722	WITHOUT_CLASSIFICATION	4.286336127793602E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998652690932607	WITHOUT_CLASSIFICATION	1.3473090673925934E-4	DEFECT
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9993054590988454	WITHOUT_CLASSIFICATION	6.945409011545762E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999822252367564	WITHOUT_CLASSIFICATION	1.7774763243562708E-5	DEFECT
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9987196834794445	WITHOUT_CLASSIFICATION	0.001280316520555565	DEFECT
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998864453167999	WITHOUT_CLASSIFICATION	1.1355468320003084E-4	DEFECT
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9975838152089213	WITHOUT_CLASSIFICATION	0.0024161847910788544	DEFECT
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999922623022218	WITHOUT_CLASSIFICATION	7.737697778121197E-6	DEFECT
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999815246942702	WITHOUT_CLASSIFICATION	1.8475305729818942E-5	DEFECT
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999589049257596	WITHOUT_CLASSIFICATION	4.109507424046592E-5	DEFECT
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999710579320299	WITHOUT_CLASSIFICATION	2.894206797007384E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9999385595343119	WITHOUT_CLASSIFICATION	6.144046568814566E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999822252367564	WITHOUT_CLASSIFICATION	1.7774763243562708E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9965355371646909	WITHOUT_CLASSIFICATION	0.0034644628353091025	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9965355371646909	WITHOUT_CLASSIFICATION	0.0034644628353091025	DEFECT
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9859624715135217	WITHOUT_CLASSIFICATION	0.014037528486478238	DEFECT
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999924691321526	WITHOUT_CLASSIFICATION	7.530867847473831E-6	DEFECT
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999759587082782	WITHOUT_CLASSIFICATION	2.4041291721894436E-5	DEFECT
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998858110163127	WITHOUT_CLASSIFICATION	1.1418898368729416E-4	DEFECT
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999560352198859	WITHOUT_CLASSIFICATION	4.396478011423002E-5	DEFECT
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999704521061333	WITHOUT_CLASSIFICATION	2.9547893866551757E-5	DEFECT
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9986380691589345	WITHOUT_CLASSIFICATION	0.0013619308410654817	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998517772167539	WITHOUT_CLASSIFICATION	1.4822278324600266E-4	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999811322624687	WITHOUT_CLASSIFICATION	1.8867737531348596E-5	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999980333094758	WITHOUT_CLASSIFICATION	1.9666905242186362E-6	DEFECT
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9997234049022297	WITHOUT_CLASSIFICATION	2.7659509777031737E-4	DEFECT
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999983031212745	WITHOUT_CLASSIFICATION	1.6968787255624244E-6	DEFECT
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998959856846831	WITHOUT_CLASSIFICATION	1.040143153168858E-4	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999746151298918	WITHOUT_CLASSIFICATION	2.5384870108165785E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999957136638722	WITHOUT_CLASSIFICATION	4.286336127793602E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998652690932607	WITHOUT_CLASSIFICATION	1.3473090673925934E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998652690932607	WITHOUT_CLASSIFICATION	1.3473090673925934E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999822252367564	WITHOUT_CLASSIFICATION	1.7774763243562708E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999822252367564	WITHOUT_CLASSIFICATION	1.7774763243562708E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9965355371646909	WITHOUT_CLASSIFICATION	0.0034644628353091025	DEFECT
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999858036103729	WITHOUT_CLASSIFICATION	1.419638962710952E-5	DEFECT
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9998359195536287	WITHOUT_CLASSIFICATION	1.6408044637118515E-4	DEFECT
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999989398406486	WITHOUT_CLASSIFICATION	1.0601593514123139E-6	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997291792553583	WITHOUT_CLASSIFICATION	2.708207446416758E-4	DEFECT
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999325343503882	WITHOUT_CLASSIFICATION	6.746564961179353E-5	DEFECT
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9953646469646114	WITHOUT_CLASSIFICATION	0.0046353530353886166	DEFECT
add in reverse order	WITHOUT_CLASSIFICATION	0.9998672131885366	WITHOUT_CLASSIFICATION	1.327868114634644E-4	DEFECT
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999375565912523	WITHOUT_CLASSIFICATION	6.244340874775717E-5	DEFECT
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999639811057573	WITHOUT_CLASSIFICATION	3.6018894242605834E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999957136638722	WITHOUT_CLASSIFICATION	4.286336127793602E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998652690932607	WITHOUT_CLASSIFICATION	1.3473090673925934E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998652690932607	WITHOUT_CLASSIFICATION	1.3473090673925934E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998517772167539	WITHOUT_CLASSIFICATION	1.4822278324600266E-4	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999980333094758	WITHOUT_CLASSIFICATION	1.9666905242186362E-6	DEFECT
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9997053112209563	WITHOUT_CLASSIFICATION	2.946887790437368E-4	DEFECT
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999933862335352	WITHOUT_CLASSIFICATION	6.613766464805665E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999957595785287	WITHOUT_CLASSIFICATION	4.240421471341956E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999957595785287	WITHOUT_CLASSIFICATION	4.240421471341956E-6	DEFECT
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997448754899525	WITHOUT_CLASSIFICATION	2.5512451004759397E-4	DEFECT
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998182700389405	WITHOUT_CLASSIFICATION	1.817299610594612E-4	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999805331204126	WITHOUT_CLASSIFICATION	1.9466879587475073E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999847426632428	WITHOUT_CLASSIFICATION	1.5257336757200653E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999847426632428	WITHOUT_CLASSIFICATION	1.5257336757200653E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999713685429917	WITHOUT_CLASSIFICATION	2.86314570082245E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999713685429917	WITHOUT_CLASSIFICATION	2.86314570082245E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999694557788766	WITHOUT_CLASSIFICATION	3.054422112338204E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999694557788766	WITHOUT_CLASSIFICATION	3.054422112338204E-5	DEFECT
Execute rescue block	WITHOUT_CLASSIFICATION	0.999986854923408	WITHOUT_CLASSIFICATION	1.3145076591912922E-5	DEFECT
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999666518916778	WITHOUT_CLASSIFICATION	3.3348108322215536E-5	DEFECT
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998424643852524	WITHOUT_CLASSIFICATION	1.575356147477344E-4	DEFECT
only a marker interface	WITHOUT_CLASSIFICATION	0.9999075778691363	WITHOUT_CLASSIFICATION	9.242213086365974E-5	DEFECT
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999639872210164	WITHOUT_CLASSIFICATION	3.601277898354075E-5	DEFECT
pragmas	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9998357751776985	WITHOUT_CLASSIFICATION	1.642248223014008E-4	DEFECT
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999143997625688	WITHOUT_CLASSIFICATION	8.560023743117525E-5	DEFECT
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9992502216426693	WITHOUT_CLASSIFICATION	7.497783573307806E-4	DEFECT
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9987725114504101	WITHOUT_CLASSIFICATION	0.0012274885495898939	DEFECT
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999446332568123	WITHOUT_CLASSIFICATION	5.536674318770435E-5	DEFECT
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999885582953318	WITHOUT_CLASSIFICATION	1.1441704668172217E-5	DEFECT
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9992662439946589	WITHOUT_CLASSIFICATION	7.337560053410362E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998970459931417	WITHOUT_CLASSIFICATION	1.0295400685835536E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998970459931417	WITHOUT_CLASSIFICATION	1.0295400685835536E-4	DEFECT
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9996556654198838	WITHOUT_CLASSIFICATION	3.4433458011622124E-4	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999532993602345	WITHOUT_CLASSIFICATION	4.670063976553932E-5	DEFECT
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9989389793018274	WITHOUT_CLASSIFICATION	0.001061020698172616	DEFECT
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999354831791326	WITHOUT_CLASSIFICATION	6.451682086748392E-5	DEFECT
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999916385433735	WITHOUT_CLASSIFICATION	8.361456626575173E-6	DEFECT
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9998487012234906	WITHOUT_CLASSIFICATION	1.512987765094034E-4	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9997087441825637	WITHOUT_CLASSIFICATION	2.912558174363508E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998410560363626	WITHOUT_CLASSIFICATION	1.5894396363738146E-4	DEFECT
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999830721270198	WITHOUT_CLASSIFICATION	1.6927872980215893E-5	DEFECT
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999089306121661	WITHOUT_CLASSIFICATION	9.106938783388253E-5	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999487380036045	WITHOUT_CLASSIFICATION	5.1261996395492565E-5	DEFECT
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9998702220693559	WITHOUT_CLASSIFICATION	1.297779306440944E-4	DEFECT
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998954206266504	WITHOUT_CLASSIFICATION	1.0457937334960346E-4	DEFECT
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9997856842358458	WITHOUT_CLASSIFICATION	2.143157641541763E-4	DEFECT
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9937579355949725	WITHOUT_CLASSIFICATION	0.006242064405027595	DEFECT
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999787390599262	WITHOUT_CLASSIFICATION	2.1260940073802358E-5	DEFECT
can't do it	WITHOUT_CLASSIFICATION	0.9998997721330715	WITHOUT_CLASSIFICATION	1.0022786692855255E-4	DEFECT
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9998733402169887	WITHOUT_CLASSIFICATION	1.2665978301126907E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998829280141971	WITHOUT_CLASSIFICATION	1.1707198580283216E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998829280141971	WITHOUT_CLASSIFICATION	1.1707198580283216E-4	DEFECT
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999866099196744	WITHOUT_CLASSIFICATION	1.3390080325702248E-5	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[]	WITHOUT_CLASSIFICATION	0.9999856845439223	WITHOUT_CLASSIFICATION	1.431545607764682E-5	DEFECT
[]	WITHOUT_CLASSIFICATION	0.9999856845439223	WITHOUT_CLASSIFICATION	1.431545607764682E-5	DEFECT
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998568010343688	WITHOUT_CLASSIFICATION	1.431989656312174E-4	DEFECT
[RubyClass]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9998568010343688	WITHOUT_CLASSIFICATION	1.431989656312174E-4	DEFECT
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999956094099839	WITHOUT_CLASSIFICATION	4.3905900161015857E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999278557241789	WITHOUT_CLASSIFICATION	7.214427582117718E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999278557241789	WITHOUT_CLASSIFICATION	7.214427582117718E-5	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999799871003973	WITHOUT_CLASSIFICATION	2.001289960267686E-5	DEFECT
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999959834811196	WITHOUT_CLASSIFICATION	4.016518880392041E-5	DEFECT
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999369658314978	WITHOUT_CLASSIFICATION	6.303416850224377E-5	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9999078039631397	WITHOUT_CLASSIFICATION	9.219603686027671E-5	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999852672782024	WITHOUT_CLASSIFICATION	1.473272179760464E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995577861990054	WITHOUT_CLASSIFICATION	4.4221380099462653E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995577861990054	WITHOUT_CLASSIFICATION	4.4221380099462653E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995577861990054	WITHOUT_CLASSIFICATION	4.4221380099462653E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999852672782024	WITHOUT_CLASSIFICATION	1.473272179760464E-4	DEFECT
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999782319916805	WITHOUT_CLASSIFICATION	2.1768008319438473E-5	DEFECT
always false or nil	WITHOUT_CLASSIFICATION	0.9997922861075668	WITHOUT_CLASSIFICATION	2.0771389243316865E-4	DEFECT
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9992510565403533	WITHOUT_CLASSIFICATION	7.489434596467579E-4	DEFECT
normal	WITHOUT_CLASSIFICATION	0.9999894174760113	WITHOUT_CLASSIFICATION	1.058252398869171E-5	DEFECT
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9998281242676175	WITHOUT_CLASSIFICATION	1.718757323825987E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997013846598265	WITHOUT_CLASSIFICATION	2.986153401735645E-4	DEFECT
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999851289263392	WITHOUT_CLASSIFICATION	1.487107366081001E-5	DEFECT
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999651383631975	WITHOUT_CLASSIFICATION	3.486163680248727E-4	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999487380036045	WITHOUT_CLASSIFICATION	5.1261996395492565E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9980575134032309	WITHOUT_CLASSIFICATION	0.0019424865967690096	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9998667437291396	WITHOUT_CLASSIFICATION	1.3325627086039358E-4	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999697732682129	WITHOUT_CLASSIFICATION	3.0226731787138917E-5	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9998341971088373	WITHOUT_CLASSIFICATION	1.658028911628362E-4	DEFECT
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999399078349102	WITHOUT_CLASSIFICATION	6.0092165089880385E-5	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9995738003001364	WITHOUT_CLASSIFICATION	4.2619969986351576E-4	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999679361351838	WITHOUT_CLASSIFICATION	3.206386481625466E-5	DEFECT
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999354457639212	WITHOUT_CLASSIFICATION	6.455423607877445E-5	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9995353630259083	WITHOUT_CLASSIFICATION	4.646369740917577E-4	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999865053879896	WITHOUT_CLASSIFICATION	1.3494612010459113E-5	DEFECT
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998905952524133	WITHOUT_CLASSIFICATION	1.094047475867565E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999477432404277	WITHOUT_CLASSIFICATION	5.225675957236262E-5	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999796730199864	WITHOUT_CLASSIFICATION	2.0326980013712338E-5	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999626769698243	WITHOUT_CLASSIFICATION	3.732303017560826E-5	DEFECT
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999962329010138	WITHOUT_CLASSIFICATION	3.767098986105591E-6	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
compile into array	WITHOUT_CLASSIFICATION	0.9997371798716247	WITHOUT_CLASSIFICATION	2.628201283753061E-4	DEFECT
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999658769842877	WITHOUT_CLASSIFICATION	3.4123015712189205E-5	DEFECT
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999834552235455	WITHOUT_CLASSIFICATION	1.6544776454480507E-5	DEFECT
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9934996993797857	WITHOUT_CLASSIFICATION	0.006500300620214315	DEFECT
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999828475851437	WITHOUT_CLASSIFICATION	1.7152414856278126E-5	DEFECT
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999980650816404	WITHOUT_CLASSIFICATION	1.934918359599932E-5	DEFECT
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999846901367833	WITHOUT_CLASSIFICATION	1.530986321679548E-5	DEFECT
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998977441022409	WITHOUT_CLASSIFICATION	1.022558977591555E-4	DEFECT
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999823221205287	WITHOUT_CLASSIFICATION	1.7677879471347114E-5	DEFECT
leave as a normal array	WITHOUT_CLASSIFICATION	0.9998715804703363	WITHOUT_CLASSIFICATION	1.2841952966361904E-4	DEFECT
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998694696679084	WITHOUT_CLASSIFICATION	1.305303320916832E-4	DEFECT
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9994583607085235	WITHOUT_CLASSIFICATION	5.416392914764954E-4	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999799871003973	WITHOUT_CLASSIFICATION	2.001289960267686E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999202894710768	WITHOUT_CLASSIFICATION	7.971052892319014E-5	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999852672782024	WITHOUT_CLASSIFICATION	1.473272179760464E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997013846598265	WITHOUT_CLASSIFICATION	2.986153401735645E-4	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9998667437291396	WITHOUT_CLASSIFICATION	1.3325627086039358E-4	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9998341971088373	WITHOUT_CLASSIFICATION	1.658028911628362E-4	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9995738003001364	WITHOUT_CLASSIFICATION	4.2619969986351576E-4	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999697732682129	WITHOUT_CLASSIFICATION	3.0226731787138917E-5	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999679361351838	WITHOUT_CLASSIFICATION	3.206386481625466E-5	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999865053879896	WITHOUT_CLASSIFICATION	1.3494612010459113E-5	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9995353630259083	WITHOUT_CLASSIFICATION	4.646369740917577E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999477432404277	WITHOUT_CLASSIFICATION	5.225675957236262E-5	DEFECT
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999921378508367	WITHOUT_CLASSIFICATION	7.862149163254365E-6	DEFECT
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9990096303600412	WITHOUT_CLASSIFICATION	9.903696399587581E-4	DEFECT
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9998569153389832	WITHOUT_CLASSIFICATION	1.4308466101677612E-4	DEFECT
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999599852794663	WITHOUT_CLASSIFICATION	4.001472053381413E-5	DEFECT
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999431763956375	WITHOUT_CLASSIFICATION	5.682360436245587E-5	DEFECT
Time the compilation	WITHOUT_CLASSIFICATION	0.9999383897849257	WITHOUT_CLASSIFICATION	6.161021507431876E-5	DEFECT
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999032632189024	WITHOUT_CLASSIFICATION	9.673678109764223E-5	DEFECT
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9997602030040555	WITHOUT_CLASSIFICATION	2.3979699594434885E-4	DEFECT
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9994846045523385	WITHOUT_CLASSIFICATION	5.1539544766161E-4	DEFECT
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998830012280616	WITHOUT_CLASSIFICATION	1.1699877193830567E-4	DEFECT
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999609697566154	WITHOUT_CLASSIFICATION	3.9030243384549694E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999352754491293	WITHOUT_CLASSIFICATION	6.472455087067512E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991822448674463	WITHOUT_CLASSIFICATION	8.177551325536769E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999497325128317	WITHOUT_CLASSIFICATION	5.026748716819812E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999328460231808	WITHOUT_CLASSIFICATION	6.715397681923181E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998880807139479	WITHOUT_CLASSIFICATION	1.1191928605210305E-4	DEFECT
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999229927740807	WITHOUT_CLASSIFICATION	7.700722591928105E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999257995194454	WITHOUT_CLASSIFICATION	7.420048055458567E-5	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999714349966139	WITHOUT_CLASSIFICATION	2.8565003386092488E-5	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999829623798052	WITHOUT_CLASSIFICATION	1.7037620194773365E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995537917060113	WITHOUT_CLASSIFICATION	4.462082939886922E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995537917060113	WITHOUT_CLASSIFICATION	4.462082939886922E-4	DEFECT
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9998283647491549	WITHOUT_CLASSIFICATION	1.7163525084493633E-4	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9996958094124544	WITHOUT_CLASSIFICATION	3.0419058754565435E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg2	WITHOUT_CLASSIFICATION	0.9999865496511964	WITHOUT_CLASSIFICATION	1.3450348803659172E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999885699981534	WITHOUT_CLASSIFICATION	1.143000184660816E-5	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9996958094124544	WITHOUT_CLASSIFICATION	3.0419058754565435E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9988457162329982	WITHOUT_CLASSIFICATION	0.0011542837670018215	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999885699981534	WITHOUT_CLASSIFICATION	1.143000184660816E-5	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9997622515146692	WITHOUT_CLASSIFICATION	2.3774848533075202E-4	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9997622515146692	WITHOUT_CLASSIFICATION	2.3774848533075202E-4	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999149605204289	WITHOUT_CLASSIFICATION	8.503947957104826E-5	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999149605204289	WITHOUT_CLASSIFICATION	8.503947957104826E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999896450068965	WITHOUT_CLASSIFICATION	1.0354993103443801E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999896450068965	WITHOUT_CLASSIFICATION	1.0354993103443801E-5	DEFECT
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999957519551552	WITHOUT_CLASSIFICATION	4.248044844788492E-6	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9992005010359383	WITHOUT_CLASSIFICATION	7.994989640618019E-4	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9992005010359383	WITHOUT_CLASSIFICATION	7.994989640618019E-4	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999716381994088	WITHOUT_CLASSIFICATION	2.8361800591150745E-5	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999716381994088	WITHOUT_CLASSIFICATION	2.8361800591150745E-5	DEFECT
eval value for assignment	WITHOUT_CLASSIFICATION	0.9998523691189853	WITHOUT_CLASSIFICATION	1.4763088101467841E-4	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9999404623376084	WITHOUT_CLASSIFICATION	5.953766239152426E-5	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9999404623376084	WITHOUT_CLASSIFICATION	5.953766239152426E-5	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997687318468023	WITHOUT_CLASSIFICATION	2.3126815319771745E-4	DEFECT
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9998895902441743	WITHOUT_CLASSIFICATION	1.1040975582570733E-4	DEFECT
eval value and save it	WITHOUT_CLASSIFICATION	0.999899921540097	WITHOUT_CLASSIFICATION	1.0007845990298092E-4	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997687318468023	WITHOUT_CLASSIFICATION	2.3126815319771745E-4	DEFECT
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999867262155043	WITHOUT_CLASSIFICATION	1.3273784495700837E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999985418045773	WITHOUT_CLASSIFICATION	1.458195422739166E-6	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999885699981534	WITHOUT_CLASSIFICATION	1.143000184660816E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999956212030882	WITHOUT_CLASSIFICATION	4.378796911850123E-6	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999948559187961	WITHOUT_CLASSIFICATION	5.14408120377591E-6	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999948559187961	WITHOUT_CLASSIFICATION	5.14408120377591E-6	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999823949343783	WITHOUT_CLASSIFICATION	1.7605065621715478E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9998998360215188	WITHOUT_CLASSIFICATION	1.0016397848121025E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9998998360215188	WITHOUT_CLASSIFICATION	1.0016397848121025E-4	DEFECT
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999830980928411	WITHOUT_CLASSIFICATION	1.6901907158895722E-4	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999872652333461	WITHOUT_CLASSIFICATION	1.2734766653753048E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999872652333461	WITHOUT_CLASSIFICATION	1.2734766653753048E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999885699981534	WITHOUT_CLASSIFICATION	1.143000184660816E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999956212030882	WITHOUT_CLASSIFICATION	4.378796911850123E-6	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999948559187961	WITHOUT_CLASSIFICATION	5.14408120377591E-6	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999948559187961	WITHOUT_CLASSIFICATION	5.14408120377591E-6	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999823949343783	WITHOUT_CLASSIFICATION	1.7605065621715478E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999872652333461	WITHOUT_CLASSIFICATION	1.2734766653753048E-5	DEFECT
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998283972829839	WITHOUT_CLASSIFICATION	1.716027170161933E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9997697044025133	WITHOUT_CLASSIFICATION	2.3029559748663847E-4	DEFECT
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9992228432968314	WITHOUT_CLASSIFICATION	7.771567031685144E-4	DEFECT
add name to call site list	WITHOUT_CLASSIFICATION	0.9998303827761418	WITHOUT_CLASSIFICATION	1.696172238582803E-4	DEFECT
module is on top of stack	WITHOUT_CLASSIFICATION	0.9998643850066945	WITHOUT_CLASSIFICATION	1.3561499330548362E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999873383832546	WITHOUT_CLASSIFICATION	1.2661616745307565E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.999985335264438	WITHOUT_CLASSIFICATION	1.4664735562043263E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.999985335264438	WITHOUT_CLASSIFICATION	1.4664735562043263E-5	DEFECT
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9986268387041413	WITHOUT_CLASSIFICATION	0.001373161295858757	DEFECT
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9996928883445696	WITHOUT_CLASSIFICATION	3.071116554303247E-4	DEFECT
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9996928883445696	WITHOUT_CLASSIFICATION	3.071116554303247E-4	DEFECT
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998599220441223	WITHOUT_CLASSIFICATION	1.4007795587758922E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9996934920386535	WITHOUT_CLASSIFICATION	3.0650796134643906E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9996934920386535	WITHOUT_CLASSIFICATION	3.0650796134643906E-4	DEFECT
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9997896332411947	WITHOUT_CLASSIFICATION	2.1036675880516424E-4	DEFECT
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9997883050155423	WITHOUT_CLASSIFICATION	2.1169498445773515E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999493587528119	WITHOUT_CLASSIFICATION	5.064124718820558E-5	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999493587528119	WITHOUT_CLASSIFICATION	5.064124718820558E-5	DEFECT
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9996928883445696	WITHOUT_CLASSIFICATION	3.071116554303247E-4	DEFECT
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999130096991068	WITHOUT_CLASSIFICATION	8.69903008931795E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998468284220559	WITHOUT_CLASSIFICATION	1.53171577944068E-4	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999833907679481	WITHOUT_CLASSIFICATION	1.660923205192746E-5	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996244495015398	WITHOUT_CLASSIFICATION	3.755504984600814E-4	DEFECT
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999530484729857	WITHOUT_CLASSIFICATION	4.695152701422382E-5	DEFECT
load Object under value	WITHOUT_CLASSIFICATION	0.9997552012626251	WITHOUT_CLASSIFICATION	2.447987373748758E-4	DEFECT
put under object array already present	WITHOUT_CLASSIFICATION	0.9998996016997904	WITHOUT_CLASSIFICATION	1.0039830020953655E-4	DEFECT
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9993252133213595	WITHOUT_CLASSIFICATION	6.747866786405599E-4	DEFECT
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999973211630248	WITHOUT_CLASSIFICATION	2.678836975155114E-6	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9996968145094657	WITHOUT_CLASSIFICATION	3.0318549053424796E-4	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9996968145094657	WITHOUT_CLASSIFICATION	3.0318549053424796E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9998420314181915	WITHOUT_CLASSIFICATION	1.579685818085825E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9998420314181915	WITHOUT_CLASSIFICATION	1.579685818085825E-4	DEFECT
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9997986428810017	WITHOUT_CLASSIFICATION	2.0135711899822275E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992755216448883	WITHOUT_CLASSIFICATION	7.244783551116142E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992755216448883	WITHOUT_CLASSIFICATION	7.244783551116142E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992755216448883	WITHOUT_CLASSIFICATION	7.244783551116142E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999818886892847	WITHOUT_CLASSIFICATION	1.8111310715241984E-5	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999818886892847	WITHOUT_CLASSIFICATION	1.8111310715241984E-5	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9998785969247176	WITHOUT_CLASSIFICATION	1.2140307528238515E-4	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9997687824050394	WITHOUT_CLASSIFICATION	2.3121759496050765E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999615140998157	WITHOUT_CLASSIFICATION	3.848590018437302E-5	DEFECT
skip catch block	WITHOUT_CLASSIFICATION	0.9999914958672725	WITHOUT_CLASSIFICATION	8.504132727399304E-6	DEFECT
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999862268956904	WITHOUT_CLASSIFICATION	1.3773104309594566E-4	DEFECT
next jump	WITHOUT_CLASSIFICATION	0.999929452801103	WITHOUT_CLASSIFICATION	7.05471988969517E-5	DEFECT
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9952564791487591	WITHOUT_CLASSIFICATION	0.004743520851240898	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9998785969247176	WITHOUT_CLASSIFICATION	1.2140307528238515E-4	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999893423232845	WITHOUT_CLASSIFICATION	1.0657676715425017E-5	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9997687824050394	WITHOUT_CLASSIFICATION	2.3121759496050765E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999615140998157	WITHOUT_CLASSIFICATION	3.848590018437302E-5	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998741783611272	WITHOUT_CLASSIFICATION	1.258216388726874E-4	DEFECT
break jump	WITHOUT_CLASSIFICATION	0.9999878736707092	WITHOUT_CLASSIFICATION	1.21263292909221E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999070752719282	WITHOUT_CLASSIFICATION	9.292472807177757E-5	DEFECT
[reg]	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999325730299679	WITHOUT_CLASSIFICATION	6.742697003215786E-5	DEFECT
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999425308770233	WITHOUT_CLASSIFICATION	5.74691229765736E-5	DEFECT
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998061106145765	WITHOUT_CLASSIFICATION	1.9388938542354292E-4	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998741783611272	WITHOUT_CLASSIFICATION	1.258216388726874E-4	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999613630026666	WITHOUT_CLASSIFICATION	3.863699733354472E-5	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999613630026666	WITHOUT_CLASSIFICATION	3.863699733354472E-5	DEFECT
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9994299287118913	WITHOUT_CLASSIFICATION	5.700712881088018E-4	DEFECT
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999816815648108	WITHOUT_CLASSIFICATION	1.8318435189175213E-5	DEFECT
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999326299129088	WITHOUT_CLASSIFICATION	6.73700870911686E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996642180851302	WITHOUT_CLASSIFICATION	3.3578191486977114E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9995910948052367	WITHOUT_CLASSIFICATION	4.0890519476334894E-4	DEFECT
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999943633229696	WITHOUT_CLASSIFICATION	5.636677030341366E-6	DEFECT
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999045352744376	WITHOUT_CLASSIFICATION	9.546472556241299E-5	DEFECT
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999219769757723	WITHOUT_CLASSIFICATION	7.802302422772941E-5	DEFECT
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999282868476331	WITHOUT_CLASSIFICATION	7.171315236697216E-5	DEFECT
false zero	WITHOUT_CLASSIFICATION	0.9999860665275105	WITHOUT_CLASSIFICATION	1.3933472489319661E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999938614716518	WITHOUT_CLASSIFICATION	6.138528348199169E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996642180851302	WITHOUT_CLASSIFICATION	3.3578191486977114E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9995910948052367	WITHOUT_CLASSIFICATION	4.0890519476334894E-4	DEFECT
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999047088337504	WITHOUT_CLASSIFICATION	9.529116624963172E-5	DEFECT
push false	WITHOUT_CLASSIFICATION	0.9999800125366428	WITHOUT_CLASSIFICATION	1.9987463357210474E-5	DEFECT
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9999580656207709	WITHOUT_CLASSIFICATION	4.193437922912231E-5	DEFECT
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[C]	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
push true	WITHOUT_CLASSIFICATION	0.999987661748414	WITHOUT_CLASSIFICATION	1.233825158611652E-5	DEFECT
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999607978150841	WITHOUT_CLASSIFICATION	3.920218491594468E-5	DEFECT
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
[boolean]	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999033793640768	WITHOUT_CLASSIFICATION	9.662063592315324E-5	DEFECT
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999538576249068	WITHOUT_CLASSIFICATION	4.6142375093243E-5	DEFECT
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9988531306402133	WITHOUT_CLASSIFICATION	0.0011468693597867432	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9999547807433522	WITHOUT_CLASSIFICATION	4.5219256647819745E-5	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.999986653506409	WITHOUT_CLASSIFICATION	1.3346493591041521E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.999950753586542	WITHOUT_CLASSIFICATION	4.924641345811636E-5	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9997969056704336	WITHOUT_CLASSIFICATION	2.030943295664685E-4	DEFECT
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999907747815991	WITHOUT_CLASSIFICATION	9.225218400917345E-6	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.999986653506409	WITHOUT_CLASSIFICATION	1.3346493591041521E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.999950753586542	WITHOUT_CLASSIFICATION	4.924641345811636E-5	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9997969056704336	WITHOUT_CLASSIFICATION	2.030943295664685E-4	DEFECT
finally with exception	WITHOUT_CLASSIFICATION	0.9998172272702119	WITHOUT_CLASSIFICATION	1.827727297880863E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9989728053272268	WITHOUT_CLASSIFICATION	0.0010271946727731672	DEFECT
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9998709506419708	WITHOUT_CLASSIFICATION	1.2904935802911363E-4	DEFECT
original exception is on stack	WITHOUT_CLASSIFICATION	0.9988866865583572	WITHOUT_CLASSIFICATION	0.0011133134416427353	DEFECT
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9998484528758059	WITHOUT_CLASSIFICATION	1.5154712419413E-4	DEFECT
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999147241031091	WITHOUT_CLASSIFICATION	8.527589689084901E-5	DEFECT
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998486789760959	WITHOUT_CLASSIFICATION	1.5132102390411097E-4	DEFECT
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999447444013122	WITHOUT_CLASSIFICATION	5.5255598687870565E-5	DEFECT
script object	WITHOUT_CLASSIFICATION	0.9999720427157889	WITHOUT_CLASSIFICATION	2.7957284211187005E-5	DEFECT
arities	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.966115842023821	WITHOUT_CLASSIFICATION	0.03388415797617913	DEFECT
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9997601614914747	WITHOUT_CLASSIFICATION	2.3983850852530184E-4	DEFECT
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998813354767797	WITHOUT_CLASSIFICATION	1.1866452322039522E-4	DEFECT
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999867734720619	WITHOUT_CLASSIFICATION	1.322652793812218E-5	DEFECT
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9996879830281429	WITHOUT_CLASSIFICATION	3.120169718571691E-4	DEFECT
normal case, create a new label	WITHOUT_CLASSIFICATION	0.999909398355932	WITHOUT_CLASSIFICATION	9.060164406805046E-5	DEFECT
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9988331730582345	WITHOUT_CLASSIFICATION	0.0011668269417655067	DEFECT
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999331120524589	WITHOUT_CLASSIFICATION	6.688794754107113E-5	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999906816536417	WITHOUT_CLASSIFICATION	9.318346358365728E-6	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999615213704419	WITHOUT_CLASSIFICATION	3.847862955805475E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999220095253585	WITHOUT_CLASSIFICATION	7.799047464160791E-5	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999624063551809	WITHOUT_CLASSIFICATION	3.759364481924167E-5	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999624063551809	WITHOUT_CLASSIFICATION	3.759364481924167E-5	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998768849549897	WITHOUT_CLASSIFICATION	1.2311504501019753E-4	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998768849549897	WITHOUT_CLASSIFICATION	1.2311504501019753E-4	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999981972567604	WITHOUT_CLASSIFICATION	1.802743239602327E-5	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999981972567604	WITHOUT_CLASSIFICATION	1.802743239602327E-5	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999830949909058	WITHOUT_CLASSIFICATION	1.6905009094325355E-5	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999990264888721	WITHOUT_CLASSIFICATION	9.735111279199846E-7	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999718154655877	WITHOUT_CLASSIFICATION	2.818453441223705E-5	DEFECT
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999950584878423	WITHOUT_CLASSIFICATION	4.941512157696245E-6	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999980108624077	WITHOUT_CLASSIFICATION	1.9891375923777E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945823043587	WITHOUT_CLASSIFICATION	5.417695641365075E-6	DEFECT
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999519648754487	WITHOUT_CLASSIFICATION	4.803512455132133E-5	DEFECT
then optional args	WITHOUT_CLASSIFICATION	0.9999677225607636	WITHOUT_CLASSIFICATION	3.227743923640498E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999830949909058	WITHOUT_CLASSIFICATION	1.6905009094325355E-5	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999990264888721	WITHOUT_CLASSIFICATION	9.735111279199846E-7	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999718154655877	WITHOUT_CLASSIFICATION	2.818453441223705E-5	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999980108624077	WITHOUT_CLASSIFICATION	1.9891375923777E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945823043587	WITHOUT_CLASSIFICATION	5.417695641365075E-6	DEFECT
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999064847429681	WITHOUT_CLASSIFICATION	9.351525703194269E-5	DEFECT
finally, post args	WITHOUT_CLASSIFICATION	0.9998729479995817	WITHOUT_CLASSIFICATION	1.2705200041824064E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997494961174949	WITHOUT_CLASSIFICATION	2.505038825051803E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997494961174949	WITHOUT_CLASSIFICATION	2.505038825051803E-4	DEFECT
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998662491687536	WITHOUT_CLASSIFICATION	1.3375083124642008E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999086395148484	WITHOUT_CLASSIFICATION	9.13604851515565E-5	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9967457393505669	WITHOUT_CLASSIFICATION	0.003254260649433223	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999259309411311	WITHOUT_CLASSIFICATION	7.406905886877704E-5	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999259309411311	WITHOUT_CLASSIFICATION	7.406905886877704E-5	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9996847610607208	WITHOUT_CLASSIFICATION	3.152389392792017E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999953873000135	WITHOUT_CLASSIFICATION	4.612699986551145E-6	DEFECT
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998726913716358	WITHOUT_CLASSIFICATION	1.273086283641459E-4	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999750753493463	WITHOUT_CLASSIFICATION	2.4924650653763412E-5	DEFECT
return in a class body raises error	WITHOUT_CLASSIFICATION	0.999807890199471	WITHOUT_CLASSIFICATION	1.921098005289284E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991822448674463	WITHOUT_CLASSIFICATION	8.177551325536769E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999497325128317	WITHOUT_CLASSIFICATION	5.026748716819812E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999328460231808	WITHOUT_CLASSIFICATION	6.715397681923181E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998880807139479	WITHOUT_CLASSIFICATION	1.1191928605210305E-4	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999714349966139	WITHOUT_CLASSIFICATION	2.8565003386092488E-5	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999829623798052	WITHOUT_CLASSIFICATION	1.7037620194773365E-5	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9996847610607208	WITHOUT_CLASSIFICATION	3.152389392792017E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999953873000135	WITHOUT_CLASSIFICATION	4.612699986551145E-6	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999750753493463	WITHOUT_CLASSIFICATION	2.4924650653763412E-5	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998210188762734	WITHOUT_CLASSIFICATION	1.7898112372656015E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9967457393505669	WITHOUT_CLASSIFICATION	0.003254260649433223	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9967457393505669	WITHOUT_CLASSIFICATION	0.003254260649433223	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999938614716518	WITHOUT_CLASSIFICATION	6.138528348199169E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999938614716518	WITHOUT_CLASSIFICATION	6.138528348199169E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.998601817125581	WITHOUT_CLASSIFICATION	0.0013981828744188472	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.998601817125581	WITHOUT_CLASSIFICATION	0.0013981828744188472	DEFECT
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999683125093598	WITHOUT_CLASSIFICATION	3.168749064010935E-5	DEFECT
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9996903289821092	WITHOUT_CLASSIFICATION	3.0967101789086183E-4	DEFECT
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999878419680798	WITHOUT_CLASSIFICATION	1.2158031920204225E-4	DEFECT
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999685024854881	WITHOUT_CLASSIFICATION	3.149751451198176E-5	DEFECT
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9997706093767088	WITHOUT_CLASSIFICATION	2.2939062329120887E-4	DEFECT
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999061336072051	WITHOUT_CLASSIFICATION	9.386639279486974E-5	DEFECT
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9987824199699709	WITHOUT_CLASSIFICATION	0.0012175800300291237	DEFECT
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999923864000911	WITHOUT_CLASSIFICATION	7.613599908885798E-6	DEFECT
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9997610447954215	WITHOUT_CLASSIFICATION	2.3895520457839842E-4	DEFECT
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999352754491293	WITHOUT_CLASSIFICATION	6.472455087067512E-5	DEFECT
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999801534099926	WITHOUT_CLASSIFICATION	1.9846590007417698E-5	DEFECT
verify the class	WITHOUT_CLASSIFICATION	0.999892582125907	WITHOUT_CLASSIFICATION	1.074178740929564E-4	DEFECT
create dir if necessary	WITHOUT_CLASSIFICATION	0.9999755839517708	WITHOUT_CLASSIFICATION	2.4416048229223947E-5	DEFECT
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999763460894938	WITHOUT_CLASSIFICATION	2.3653910506280576E-5	DEFECT
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999553818725924	WITHOUT_CLASSIFICATION	4.461812740760364E-5	DEFECT
thread context	WITHOUT_CLASSIFICATION	0.9999079329298187	WITHOUT_CLASSIFICATION	9.206707018126608E-5	DEFECT
line number	WITHOUT_CLASSIFICATION	0.9996467159519493	WITHOUT_CLASSIFICATION	3.5328404805068066E-4	DEFECT
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999859268781532	WITHOUT_CLASSIFICATION	1.407312184676726E-5	DEFECT
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999805390587153	WITHOUT_CLASSIFICATION	1.9460941284690173E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999497325128317	WITHOUT_CLASSIFICATION	5.026748716819812E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998880807139479	WITHOUT_CLASSIFICATION	1.1191928605210305E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995537917060113	WITHOUT_CLASSIFICATION	4.462082939886922E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998210188762734	WITHOUT_CLASSIFICATION	1.7898112372656015E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9967457393505669	WITHOUT_CLASSIFICATION	0.003254260649433223	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.999938614716518	WITHOUT_CLASSIFICATION	6.138528348199169E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.998601817125581	WITHOUT_CLASSIFICATION	0.0013981828744188472	DEFECT
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999097566686763	WITHOUT_CLASSIFICATION	9.024333132365945E-5	DEFECT
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9998340946897027	WITHOUT_CLASSIFICATION	1.6590531029729008E-4	DEFECT
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999898054879451	WITHOUT_CLASSIFICATION	1.0194512054841699E-5	DEFECT
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9994072266109478	WITHOUT_CLASSIFICATION	5.927733890522184E-4	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989314708025445	WITHOUT_CLASSIFICATION	0.0010685291974554731	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989314708025445	WITHOUT_CLASSIFICATION	0.0010685291974554731	DEFECT
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9998998688362352	WITHOUT_CLASSIFICATION	1.0013116376483998E-4	DEFECT
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999616739896424	WITHOUT_CLASSIFICATION	3.832601035762114E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999592208702462	WITHOUT_CLASSIFICATION	4.0779129753864436E-5	DEFECT
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999623399358107	WITHOUT_CLASSIFICATION	3.766006418929376E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.9999718887546188	WITHOUT_CLASSIFICATION	2.811124538107243E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.9999718887546188	WITHOUT_CLASSIFICATION	2.811124538107243E-5	DEFECT
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9998673470599153	WITHOUT_CLASSIFICATION	1.3265294008475896E-4	DEFECT
normal closure	WITHOUT_CLASSIFICATION	0.9999343595137609	WITHOUT_CLASSIFICATION	6.564048623919477E-5	DEFECT
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999118922093558	WITHOUT_CLASSIFICATION	8.810779064413975E-5	DEFECT
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9996300142743734	WITHOUT_CLASSIFICATION	3.699857256266522E-4	DEFECT
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999956472203506	WITHOUT_CLASSIFICATION	4.352779649440079E-6	DEFECT
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999603491851994	WITHOUT_CLASSIFICATION	3.9650814800642154E-5	DEFECT
Ruby name	WITHOUT_CLASSIFICATION	0.9999903971841853	WITHOUT_CLASSIFICATION	9.60281581479634E-6	DEFECT
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9996978390851562	WITHOUT_CLASSIFICATION	3.0216091484372074E-4	DEFECT
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9922757301539552	WITHOUT_CLASSIFICATION	0.0077242698460447245	DEFECT
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9994576163068802	WITHOUT_CLASSIFICATION	5.423836931198325E-4	DEFECT
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9994667760238972	WITHOUT_CLASSIFICATION	5.332239761027943E-4	DEFECT
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999301102718205	WITHOUT_CLASSIFICATION	6.988972817940315E-5	DEFECT
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999993404800621	WITHOUT_CLASSIFICATION	6.595199378714397E-7	DEFECT
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999334595931372	WITHOUT_CLASSIFICATION	6.654040686280451E-5	DEFECT
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9994812777967489	WITHOUT_CLASSIFICATION	5.187222032511371E-4	DEFECT
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999179206237493	WITHOUT_CLASSIFICATION	8.207937625078485E-5	DEFECT
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.99986788557427	WITHOUT_CLASSIFICATION	1.3211442572998177E-4	DEFECT
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999406947693688	WITHOUT_CLASSIFICATION	5.9305230631277275E-5	DEFECT
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9995961644262893	WITHOUT_CLASSIFICATION	4.038355737107021E-4	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999939402506782	WITHOUT_CLASSIFICATION	6.059749321822215E-6	DEFECT
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.999359435381587	WITHOUT_CLASSIFICATION	6.405646184130115E-4	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.999934211509394	WITHOUT_CLASSIFICATION	6.57884906060262E-5	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.999934211509394	WITHOUT_CLASSIFICATION	6.57884906060262E-5	DEFECT
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9995773074239891	WITHOUT_CLASSIFICATION	4.226925760108501E-4	DEFECT
Build the class body!	WITHOUT_CLASSIFICATION	0.999842551505504	WITHOUT_CLASSIFICATION	1.5744849449592796E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998410560363626	WITHOUT_CLASSIFICATION	1.5894396363738146E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998410560363626	WITHOUT_CLASSIFICATION	1.5894396363738146E-4	DEFECT
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.7887213761405014	DEFECT	0.2112786238594985	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9995427630256221	WITHOUT_CLASSIFICATION	4.572369743779098E-4	DEFECT
done done done done	WITHOUT_CLASSIFICATION	0.9999534825361456	WITHOUT_CLASSIFICATION	4.651746385436534E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999421948442124	WITHOUT_CLASSIFICATION	5.780515578761499E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999421948442124	WITHOUT_CLASSIFICATION	5.780515578761499E-5	DEFECT
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9996353441581283	WITHOUT_CLASSIFICATION	3.64655841871689E-4	DEFECT
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999953477147918	WITHOUT_CLASSIFICATION	4.65228520815488E-6	DEFECT
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999724778480747	WITHOUT_CLASSIFICATION	2.7522151925196875E-5	DEFECT
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999711414553677	WITHOUT_CLASSIFICATION	2.8858544632349545E-5	DEFECT
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9942077416625968	WITHOUT_CLASSIFICATION	0.005792258337403251	DEFECT
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999819723734458	WITHOUT_CLASSIFICATION	1.8027626554240435E-5	DEFECT
the CASE instruction	WITHOUT_CLASSIFICATION	0.999946799380813	WITHOUT_CLASSIFICATION	5.3200619186966964E-5	DEFECT
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999595191708923	WITHOUT_CLASSIFICATION	4.0480829107671535E-5	DEFECT
build each "when"	WITHOUT_CLASSIFICATION	0.9999711405333878	WITHOUT_CLASSIFICATION	2.8859466612264577E-5	DEFECT
multiple conditions for when	WITHOUT_CLASSIFICATION	0.999856041099453	WITHOUT_CLASSIFICATION	1.439589005470749E-4	DEFECT
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999791310187978	WITHOUT_CLASSIFICATION	2.086898120221403E-5	DEFECT
now emit bodies	WITHOUT_CLASSIFICATION	0.9999705099804501	WITHOUT_CLASSIFICATION	2.9490019549941927E-5	DEFECT
close it out	WITHOUT_CLASSIFICATION	0.9999915759738619	WITHOUT_CLASSIFICATION	8.424026138052676E-6	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9984584252793902	WITHOUT_CLASSIFICATION	0.001541574720609735	DEFECT
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999442776575431	WITHOUT_CLASSIFICATION	5.572234245678417E-5	DEFECT
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999040277531245	WITHOUT_CLASSIFICATION	9.597224687557395E-5	DEFECT
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999914193256784	WITHOUT_CLASSIFICATION	8.580674321570713E-6	DEFECT
Build IR for args	WITHOUT_CLASSIFICATION	0.9999292415243969	WITHOUT_CLASSIFICATION	7.0758475603157E-5	DEFECT
Build IR for body	WITHOUT_CLASSIFICATION	0.9999069903465233	WITHOUT_CLASSIFICATION	9.300965347670324E-5	DEFECT
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999742912297737	WITHOUT_CLASSIFICATION	2.5708770226362164E-5	DEFECT
Instance method	WITHOUT_CLASSIFICATION	0.9999413068445228	WITHOUT_CLASSIFICATION	5.869315547724332E-5	DEFECT
Class method	WITHOUT_CLASSIFICATION	0.9999400754684272	WITHOUT_CLASSIFICATION	5.992453157284523E-5	DEFECT
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999287486435542	WITHOUT_CLASSIFICATION	7.125135644576142E-5	DEFECT
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9998736777364257	WITHOUT_CLASSIFICATION	1.2632226357436784E-4	DEFECT
Now for the rest	WITHOUT_CLASSIFICATION	0.9999711782939678	WITHOUT_CLASSIFICATION	2.8821706032207447E-5	DEFECT
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9995399610110258	WITHOUT_CLASSIFICATION	4.600389889741783E-4	DEFECT
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9218756439869008	WITHOUT_CLASSIFICATION	0.07812435601309914	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998574033930672	WITHOUT_CLASSIFICATION	1.425966069328385E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999887613925527	WITHOUT_CLASSIFICATION	1.1238607447278665E-5	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999722658428674	WITHOUT_CLASSIFICATION	2.7734157132523233E-5	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999962740947405	WITHOUT_CLASSIFICATION	3.7259052596418357E-6	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9984584252793902	WITHOUT_CLASSIFICATION	0.001541574720609735	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998574033930672	WITHOUT_CLASSIFICATION	1.425966069328385E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999887613925527	WITHOUT_CLASSIFICATION	1.1238607447278665E-5	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999962740947405	WITHOUT_CLASSIFICATION	3.7259052596418357E-6	DEFECT
Get the container for this new module	WITHOUT_CLASSIFICATION	0.999914955885235	WITHOUT_CLASSIFICATION	8.504411476492846E-5	DEFECT
Build the new module	WITHOUT_CLASSIFICATION	0.999961951205432	WITHOUT_CLASSIFICATION	3.8048794567915314E-5	DEFECT
Build the module body	WITHOUT_CLASSIFICATION	0.9999395558842019	WITHOUT_CLASSIFICATION	6.044411579814698E-5	DEFECT
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999886106533254	WITHOUT_CLASSIFICATION	1.1389346674594736E-5	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999892899311658	WITHOUT_CLASSIFICATION	1.0710068834255687E-5	DEFECT
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9994111891780901	WITHOUT_CLASSIFICATION	5.888108219099692E-4	DEFECT
get attr	WITHOUT_CLASSIFICATION	0.9999939402506782	WITHOUT_CLASSIFICATION	6.059749321822215E-6	DEFECT
call operator	WITHOUT_CLASSIFICATION	0.9996466578299994	WITHOUT_CLASSIFICATION	3.5334217000065107E-4	DEFECT
set attr	WITHOUT_CLASSIFICATION	0.99999554540321	WITHOUT_CLASSIFICATION	4.454596790043929E-6	DEFECT
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9988677872410794	WITHOUT_CLASSIFICATION	0.0011322127589205567	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9988738466263741	WITHOUT_CLASSIFICATION	0.001126153373625925	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9988738466263741	WITHOUT_CLASSIFICATION	0.001126153373625925	DEFECT
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9999488943912592	WITHOUT_CLASSIFICATION	5.110560874066143E-5	DEFECT
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999830105397682	WITHOUT_CLASSIFICATION	1.698946023179577E-5	DEFECT
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999800196053358	WITHOUT_CLASSIFICATION	1.9980394664125797E-5	DEFECT
Top-level script!	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9997711875673952	WITHOUT_CLASSIFICATION	2.288124326047594E-4	DEFECT
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.999923209895641	WITHOUT_CLASSIFICATION	7.679010435896764E-5	DEFECT
What handles warnings	WITHOUT_CLASSIFICATION	0.9998907822129666	WITHOUT_CLASSIFICATION	1.092177870334028E-4	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9779908646618911	WITHOUT_CLASSIFICATION	0.022009135338108967	DEFECT
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999893545878584	WITHOUT_CLASSIFICATION	1.0645412141586174E-5	DEFECT
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999415619163025	WITHOUT_CLASSIFICATION	5.843808369750751E-5	DEFECT
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998101848253703	WITHOUT_CLASSIFICATION	1.898151746295728E-4	DEFECT
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999419707653934	WITHOUT_CLASSIFICATION	5.8029234606576404E-5	DEFECT
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999082275961481	WITHOUT_CLASSIFICATION	9.177240385195016E-5	DEFECT
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999573837482835	WITHOUT_CLASSIFICATION	4.261625171644735E-5	DEFECT
alu operations	WITHOUT_CLASSIFICATION	0.9999262873098849	WITHOUT_CLASSIFICATION	7.37126901151383E-5	DEFECT
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.999863239465029	WITHOUT_CLASSIFICATION	1.367605349710059E-4	DEFECT
closure instructions	WITHOUT_CLASSIFICATION	0.9999182378698562	WITHOUT_CLASSIFICATION	8.176213014373437E-5	DEFECT
eval instructions	WITHOUT_CLASSIFICATION	0.9998127322329228	WITHOUT_CLASSIFICATION	1.8726776707710452E-4	DEFECT
def instructions	WITHOUT_CLASSIFICATION	0.9999153052837244	WITHOUT_CLASSIFICATION	8.469471627559091E-5	DEFECT
exception instructions	WITHOUT_CLASSIFICATION	0.9998358456200129	WITHOUT_CLASSIFICATION	1.641543799870293E-4	DEFECT
Loads	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Stores	WITHOUT_CLASSIFICATION	0.999986548850613	WITHOUT_CLASSIFICATION	1.3451149386955546E-5	DEFECT
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999501387350928	WITHOUT_CLASSIFICATION	4.986126490725646E-5	DEFECT
others	WITHOUT_CLASSIFICATION	0.9999911910920055	WITHOUT_CLASSIFICATION	8.808907994533007E-6	DEFECT
a case/when branch	WITHOUT_CLASSIFICATION	0.9999108784414076	WITHOUT_CLASSIFICATION	8.912155859240427E-5	DEFECT
optimization guards	WITHOUT_CLASSIFICATION	0.9999159990161476	WITHOUT_CLASSIFICATION	8.400098385234293E-5	DEFECT
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6251508561575699	WITHOUT_CLASSIFICATION	0.37484914384242995	DEFECT
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9998782865415095	WITHOUT_CLASSIFICATION	1.2171345849056685E-4	DEFECT
scripts	WITHOUT_CLASSIFICATION	0.9999867748230364	WITHOUT_CLASSIFICATION	1.3225176963473165E-5	DEFECT
scripts and modules	WITHOUT_CLASSIFICATION	0.9999602388199322	WITHOUT_CLASSIFICATION	3.976118006773471E-5	DEFECT
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999597563385607	WITHOUT_CLASSIFICATION	4.0243661439411706E-5	DEFECT
methods and closures	WITHOUT_CLASSIFICATION	0.9999447218798831	WITHOUT_CLASSIFICATION	5.5278120116788615E-5	DEFECT
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999876961290122	WITHOUT_CLASSIFICATION	1.2303870987899865E-5	DEFECT
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999738360363174	WITHOUT_CLASSIFICATION	2.616396368256082E-5	DEFECT
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999318922679455	WITHOUT_CLASSIFICATION	6.810773205438082E-5	DEFECT
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999219313143368	WITHOUT_CLASSIFICATION	7.806868566320008E-4	DEFECT
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9998585503312523	WITHOUT_CLASSIFICATION	1.4144966874780253E-4	DEFECT
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9994624059814194	WITHOUT_CLASSIFICATION	5.375940185804713E-4	DEFECT
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999889667273598	WITHOUT_CLASSIFICATION	1.103327264003941E-5	DEFECT
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999751733771789	WITHOUT_CLASSIFICATION	2.4826622821147807E-5	DEFECT
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9981371255287087	WITHOUT_CLASSIFICATION	0.001862874471291244	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997447482249519	WITHOUT_CLASSIFICATION	2.552517750481247E-4	DEFECT
Readline	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999869671721307	WITHOUT_CLASSIFICATION	1.3032827869287832E-4	DEFECT
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9978860120901489	WITHOUT_CLASSIFICATION	0.0021139879098510035	DEFECT
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9956281336404953	WITHOUT_CLASSIFICATION	0.004371866359504709	DEFECT
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9992252661160538	WITHOUT_CLASSIFICATION	7.747338839463442E-4	DEFECT
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9991584335170967	WITHOUT_CLASSIFICATION	8.415664829034059E-4	DEFECT
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9997083230893246	WITHOUT_CLASSIFICATION	2.9167691067539506E-4	DEFECT
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9999023540122048	WITHOUT_CLASSIFICATION	9.764598779521302E-5	DEFECT
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9999010833911568	WITHOUT_CLASSIFICATION	9.891660884320491E-5	DEFECT
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999724556526409	WITHOUT_CLASSIFICATION	2.7544347359093647E-5	DEFECT
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9971173692729448	WITHOUT_CLASSIFICATION	0.0028826307270552404	DEFECT
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9998131412748668	WITHOUT_CLASSIFICATION	1.868587251332865E-4	DEFECT
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9976344235382151	WITHOUT_CLASSIFICATION	0.002365576461784961	DEFECT
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997207865844003	WITHOUT_CLASSIFICATION	2.792134155996238E-4	DEFECT
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998307590713666	WITHOUT_CLASSIFICATION	1.6924092863343303E-4	DEFECT
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999647296264196	WITHOUT_CLASSIFICATION	3.527037358040799E-4	DEFECT
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9992318910768295	WITHOUT_CLASSIFICATION	7.681089231704875E-4	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9990697077162862	WITHOUT_CLASSIFICATION	9.302922837136981E-4	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9990697077162862	WITHOUT_CLASSIFICATION	9.302922837136981E-4	DEFECT
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997194117849576	WITHOUT_CLASSIFICATION	2.805882150423607E-4	DEFECT
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999376108384005	WITHOUT_CLASSIFICATION	6.238916159947241E-5	DEFECT
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997243009712726	WITHOUT_CLASSIFICATION	2.756990287273076E-4	DEFECT
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998194038107436	WITHOUT_CLASSIFICATION	1.8059618925647276E-4	DEFECT
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9998552818518119	WITHOUT_CLASSIFICATION	1.4471814818803458E-4	DEFECT
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9999060284720958	WITHOUT_CLASSIFICATION	9.397152790435905E-5	DEFECT
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9999297625369261	WITHOUT_CLASSIFICATION	7.023746307389985E-5	DEFECT
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9996532456801672	WITHOUT_CLASSIFICATION	3.467543198328512E-4	DEFECT
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999814884717471	WITHOUT_CLASSIFICATION	1.8511528252922538E-5	DEFECT
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999951288053587	WITHOUT_CLASSIFICATION	4.871194641272949E-6	DEFECT
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9998812707894382	WITHOUT_CLASSIFICATION	1.1872921056176728E-4	DEFECT
class or module	WITHOUT_CLASSIFICATION	0.9998470265528019	WITHOUT_CLASSIFICATION	1.5297344719818976E-4	DEFECT
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.99992599224925	WITHOUT_CLASSIFICATION	7.400775074994532E-5	DEFECT
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999892116164612	WITHOUT_CLASSIFICATION	1.0788383538797505E-4	DEFECT
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9997600084957057	WITHOUT_CLASSIFICATION	2.3999150429443618E-4	DEFECT
IN is the same!	WITHOUT_CLASSIFICATION	0.999824364178887	WITHOUT_CLASSIFICATION	1.7563582111307618E-4	DEFECT
IN changed!	WITHOUT_CLASSIFICATION	0.9999199405331495	WITHOUT_CLASSIFICATION	8.005946685047045E-5	DEFECT
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999378835543181	WITHOUT_CLASSIFICATION	6.21164456819154E-5	DEFECT
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9954296540383957	WITHOUT_CLASSIFICATION	0.004570345961604349	DEFECT
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.997798943987528	WITHOUT_CLASSIFICATION	0.0022010560124719487	DEFECT
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.999934777593542	WITHOUT_CLASSIFICATION	6.522240645796512E-5	DEFECT
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9999500142228653	WITHOUT_CLASSIFICATION	4.9985777134641486E-5	DEFECT
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9998727057738596	WITHOUT_CLASSIFICATION	1.2729422614051857E-4	DEFECT
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9999704192259747	WITHOUT_CLASSIFICATION	2.9580774025347978E-5	DEFECT
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9998976392605182	WITHOUT_CLASSIFICATION	1.0236073948175899E-4	DEFECT
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9997925256499823	WITHOUT_CLASSIFICATION	2.0747435001765058E-4	DEFECT
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999835616495782	WITHOUT_CLASSIFICATION	1.6438350421813326E-5	DEFECT
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9992054054242524	WITHOUT_CLASSIFICATION	7.945945757475536E-4	DEFECT
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999622092646328	WITHOUT_CLASSIFICATION	3.77907353671791E-5	DEFECT
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.999528005415019	WITHOUT_CLASSIFICATION	4.7199458498116707E-4	DEFECT
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996899870357968	WITHOUT_CLASSIFICATION	3.1001296420324245E-4	DEFECT
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998594907044626	WITHOUT_CLASSIFICATION	1.4050929553742746E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999646738384342	WITHOUT_CLASSIFICATION	3.5326161565859914E-5	DEFECT
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999948661770481	WITHOUT_CLASSIFICATION	5.133822951906999E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999646738384342	WITHOUT_CLASSIFICATION	3.5326161565859914E-5	DEFECT
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997673740846998	WITHOUT_CLASSIFICATION	2.3262591530005954E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9988956358450661	WITHOUT_CLASSIFICATION	0.0011043641549338215	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9988956358450661	WITHOUT_CLASSIFICATION	0.0011043641549338215	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9988956358450661	WITHOUT_CLASSIFICATION	0.0011043641549338215	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999961766156037	WITHOUT_CLASSIFICATION	3.823384396264457E-6	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999961766156037	WITHOUT_CLASSIFICATION	3.823384396264457E-6	DEFECT
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9995827110949823	WITHOUT_CLASSIFICATION	4.172889050176671E-4	DEFECT
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998962349979661	WITHOUT_CLASSIFICATION	1.0376500203378923E-4	DEFECT
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999850947694473	WITHOUT_CLASSIFICATION	1.490523055269583E-4	DEFECT
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999709001741665	WITHOUT_CLASSIFICATION	2.9099825833501285E-5	DEFECT
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999919729476353	WITHOUT_CLASSIFICATION	8.02705236475321E-6	DEFECT
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.999990428466803	WITHOUT_CLASSIFICATION	9.571533197056557E-6	DEFECT
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9996970934026128	WITHOUT_CLASSIFICATION	3.029065973871277E-4	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999938975982353	WITHOUT_CLASSIFICATION	6.102401764763632E-6	DEFECT
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999756443438045	WITHOUT_CLASSIFICATION	2.4355656195459603E-5	DEFECT
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999601537617344	WITHOUT_CLASSIFICATION	3.984623826569858E-5	DEFECT
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999713986622503	WITHOUT_CLASSIFICATION	2.8601337749744438E-5	DEFECT
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9995633721828651	WITHOUT_CLASSIFICATION	4.3662781713484084E-4	DEFECT
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999848991784436	WITHOUT_CLASSIFICATION	1.5100821556454556E-5	DEFECT
root-level logic	WITHOUT_CLASSIFICATION	0.9999238717912919	WITHOUT_CLASSIFICATION	7.612820870807505E-5	DEFECT
root-level methods	WITHOUT_CLASSIFICATION	0.9999339692908387	WITHOUT_CLASSIFICATION	6.603070916132775E-5	DEFECT
root-level classes	WITHOUT_CLASSIFICATION	0.9999558468872296	WITHOUT_CLASSIFICATION	4.4153112770367604E-5	DEFECT
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999142899382977	WITHOUT_CLASSIFICATION	8.571006170244267E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999049525303466	WITHOUT_CLASSIFICATION	9.504746965339228E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999049525303466	WITHOUT_CLASSIFICATION	9.504746965339228E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999292944663606	WITHOUT_CLASSIFICATION	7.070553363946307E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999292944663606	WITHOUT_CLASSIFICATION	7.070553363946307E-5	DEFECT
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999300791873464	WITHOUT_CLASSIFICATION	6.992081265349066E-5	DEFECT
Object[] args	WITHOUT_CLASSIFICATION	0.9999269537058703	WITHOUT_CLASSIFICATION	7.304629412966697E-5	DEFECT
load handle	WITHOUT_CLASSIFICATION	0.9999749263498353	WITHOUT_CLASSIFICATION	2.5073650164632986E-5	DEFECT
args array	WITHOUT_CLASSIFICATION	0.9999834626126379	WITHOUT_CLASSIFICATION	1.6537387362117356E-5	DEFECT
i'th argument	WITHOUT_CLASSIFICATION	0.9999584440790763	WITHOUT_CLASSIFICATION	4.155592092366395E-5	DEFECT
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998546404769845	WITHOUT_CLASSIFICATION	1.4535952301545342E-4	DEFECT
Object arg0	WITHOUT_CLASSIFICATION	0.999921468517419	WITHOUT_CLASSIFICATION	7.853148258094691E-5	DEFECT
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999848919617456	WITHOUT_CLASSIFICATION	1.5108038254506772E-5	DEFECT
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999727540635103	WITHOUT_CLASSIFICATION	2.7245936489642267E-5	DEFECT
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999734235843614	WITHOUT_CLASSIFICATION	2.6576415638618644E-5	DEFECT
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999733501463929	WITHOUT_CLASSIFICATION	2.664985360710431E-5	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999480649378618	WITHOUT_CLASSIFICATION	5.193506213807139E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999992745909236	WITHOUT_CLASSIFICATION	7.254090764423171E-7	DEFECT
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999983869390609	WITHOUT_CLASSIFICATION	1.6130609390977678E-5	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999938975982353	WITHOUT_CLASSIFICATION	6.102401764763632E-6	DEFECT
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999414532236963	WITHOUT_CLASSIFICATION	5.85467763035539E-5	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999964754664713	WITHOUT_CLASSIFICATION	3.5245335288340017E-6	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999964754664713	WITHOUT_CLASSIFICATION	3.5245335288340017E-6	DEFECT
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998696924856099	WITHOUT_CLASSIFICATION	1.3030751439007938E-4	DEFECT
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9992447462030833	WITHOUT_CLASSIFICATION	7.552537969165977E-4	DEFECT
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998933568440654	WITHOUT_CLASSIFICATION	1.0664315593460552E-4	DEFECT
restore position	WITHOUT_CLASSIFICATION	0.999760794813287	WITHOUT_CLASSIFICATION	2.3920518671299482E-4	DEFECT
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999745764661778	WITHOUT_CLASSIFICATION	2.5423533822136177E-5	DEFECT
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999451848891886	WITHOUT_CLASSIFICATION	5.48151108113637E-5	DEFECT
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9997025782749452	WITHOUT_CLASSIFICATION	2.974217250547521E-4	DEFECT
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9895327337121442	WITHOUT_CLASSIFICATION	0.010467266287855877	DEFECT
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9993652482051874	WITHOUT_CLASSIFICATION	6.347517948126982E-4	DEFECT
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9998963768950491	WITHOUT_CLASSIFICATION	1.0362310495088364E-4	DEFECT
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998310774661306	WITHOUT_CLASSIFICATION	1.6892253386931739E-4	DEFECT
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9987042856432052	WITHOUT_CLASSIFICATION	0.0012957143567947078	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9896202372252942	WITHOUT_CLASSIFICATION	0.010379762774705668	DEFECT
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999713895365644	WITHOUT_CLASSIFICATION	2.8610463435527745E-5	DEFECT
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999885996862263	WITHOUT_CLASSIFICATION	1.1400313773641109E-5	DEFECT
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9998287993233689	WITHOUT_CLASSIFICATION	1.712006766311358E-4	DEFECT
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999418208148354	WITHOUT_CLASSIFICATION	5.8179185164457273E-5	DEFECT
Toplevel defines	WITHOUT_CLASSIFICATION	0.9999154755327065	WITHOUT_CLASSIFICATION	8.452446729341335E-5	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999923529834017	WITHOUT_CLASSIFICATION	7.647016598236345E-6	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999419540657634	WITHOUT_CLASSIFICATION	5.8045934236689695E-5	DEFECT
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999309872118726	WITHOUT_CLASSIFICATION	6.90127881275246E-5	DEFECT
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9998238266837254	WITHOUT_CLASSIFICATION	1.7617331627453915E-4	DEFECT
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999209940961152	WITHOUT_CLASSIFICATION	7.900590388473207E-5	DEFECT
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9999977073860727	WITHOUT_CLASSIFICATION	2.2926139272113323E-6	DEFECT
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9998252546968517	WITHOUT_CLASSIFICATION	1.747453031482386E-4	DEFECT
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.999642178724146	WITHOUT_CLASSIFICATION	3.578212758540288E-4	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999020453003724	WITHOUT_CLASSIFICATION	9.79546996276086E-4	DEFECT
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999876119773604	WITHOUT_CLASSIFICATION	1.2388022639520547E-5	DEFECT
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9996125057804677	WITHOUT_CLASSIFICATION	3.8749421953231025E-4	DEFECT
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9993634631583844	WITHOUT_CLASSIFICATION	6.365368416156001E-4	DEFECT
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9992808504496132	WITHOUT_CLASSIFICATION	7.191495503867978E-4	DEFECT
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9994871637177674	WITHOUT_CLASSIFICATION	5.128362822326592E-4	DEFECT
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9491958291185407	WITHOUT_CLASSIFICATION	0.050804170881459276	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999363018683722	WITHOUT_CLASSIFICATION	6.369813162786278E-5	DEFECT
$blah	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999020453003724	WITHOUT_CLASSIFICATION	9.79546996276086E-4	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9997279516528621	WITHOUT_CLASSIFICATION	2.7204834713788565E-4	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999363018683722	WITHOUT_CLASSIFICATION	6.369813162786278E-5	DEFECT
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9994250352732175	WITHOUT_CLASSIFICATION	5.749647267824531E-4	DEFECT
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999841774212145	WITHOUT_CLASSIFICATION	1.5822578785499222E-5	DEFECT
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999498846988152	WITHOUT_CLASSIFICATION	5.011530118470115E-5	DEFECT
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.999816180711669	WITHOUT_CLASSIFICATION	1.8381928833096172E-4	DEFECT
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999300791873464	WITHOUT_CLASSIFICATION	6.992081265349066E-5	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998910110358451	WITHOUT_CLASSIFICATION	1.0898896415495743E-4	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998910110358451	WITHOUT_CLASSIFICATION	1.0898896415495743E-4	DEFECT
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999756869328377	WITHOUT_CLASSIFICATION	2.431306716229844E-5	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997915260451634	WITHOUT_CLASSIFICATION	2.084739548366283E-4	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999585007481102	WITHOUT_CLASSIFICATION	4.1499251889846204E-5	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999585007481102	WITHOUT_CLASSIFICATION	4.1499251889846204E-5	DEFECT
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999653811426653	WITHOUT_CLASSIFICATION	3.461885733465524E-5	DEFECT
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99988968546512	WITHOUT_CLASSIFICATION	1.103145348799432E-4	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9997890841649223	WITHOUT_CLASSIFICATION	2.1091583507778933E-4	DEFECT
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9997483339966592	WITHOUT_CLASSIFICATION	2.516660033407553E-4	DEFECT
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9982103663560327	WITHOUT_CLASSIFICATION	0.0017896336439673123	DEFECT
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.99987968737439	WITHOUT_CLASSIFICATION	1.203126256099515E-4	DEFECT
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9996563453596189	WITHOUT_CLASSIFICATION	3.43654640381044E-4	DEFECT
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998657908661934	WITHOUT_CLASSIFICATION	1.34209133806529E-4	DEFECT
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999698720371548	WITHOUT_CLASSIFICATION	3.0127962845220046E-5	DEFECT
host and port given	WITHOUT_CLASSIFICATION	0.9999767175616829	WITHOUT_CLASSIFICATION	2.3282438317068867E-5	DEFECT
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999409939953258	WITHOUT_CLASSIFICATION	5.9006004674293034E-5	DEFECT
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999346905669091	WITHOUT_CLASSIFICATION	6.530943309089981E-5	DEFECT
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999206565482152	WITHOUT_CLASSIFICATION	7.934345178482274E-5	DEFECT
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9997650356359287	WITHOUT_CLASSIFICATION	2.3496436407143006E-4	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997667379589587	WITHOUT_CLASSIFICATION	2.3326204104140053E-4	DEFECT
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999098432208994	WITHOUT_CLASSIFICATION	9.015677910059137E-5	DEFECT
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9997149002639378	WITHOUT_CLASSIFICATION	2.8509973606222606E-4	DEFECT
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998791277779386	WITHOUT_CLASSIFICATION	1.208722220613281E-4	DEFECT
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999769905735516	WITHOUT_CLASSIFICATION	2.300942644841482E-5	DEFECT
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9994744240288271	WITHOUT_CLASSIFICATION	5.25575971172815E-4	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
255.255.255.255	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
0.0.0.0	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999000070826163	WITHOUT_CLASSIFICATION	9.999291738375238E-5	DEFECT
line 323	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994560549270041	WITHOUT_CLASSIFICATION	5.439450729959808E-4	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994560549270041	WITHOUT_CLASSIFICATION	5.439450729959808E-4	DEFECT
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999835217232386	WITHOUT_CLASSIFICATION	1.6478276761509747E-5	DEFECT
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999473790525532	WITHOUT_CLASSIFICATION	5.262094744679029E-5	DEFECT
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.99992599224925	WITHOUT_CLASSIFICATION	7.400775074994532E-5	DEFECT
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.999873393983478	WITHOUT_CLASSIFICATION	1.2660601652201658E-4	DEFECT
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999163586579107	WITHOUT_CLASSIFICATION	8.364134208920093E-5	DEFECT
RubySocket	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.999933355651542	WITHOUT_CLASSIFICATION	6.664434845807603E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999139046199582	WITHOUT_CLASSIFICATION	8.609538004178058E-5	DEFECT
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9998444772255471	WITHOUT_CLASSIFICATION	1.5552277445277075E-4	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.99999997097018	WITHOUT_CLASSIFICATION	2.902981999422398E-8	DEFECT
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999988217591683	WITHOUT_CLASSIFICATION	1.1782408316428576E-6	DEFECT
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999950452178037	WITHOUT_CLASSIFICATION	4.954782196343472E-6	DEFECT
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9996931761777875	WITHOUT_CLASSIFICATION	3.068238222124519E-4	DEFECT
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999659271475025	WITHOUT_CLASSIFICATION	3.407285249743072E-5	DEFECT
Call the thread's code	WITHOUT_CLASSIFICATION	0.9999609849411631	WITHOUT_CLASSIFICATION	3.901505883688205E-5	DEFECT
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999963223532519	WITHOUT_CLASSIFICATION	3.677646748216202E-6	DEFECT
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9996461527058367	WITHOUT_CLASSIFICATION	3.5384729416335287E-4	DEFECT
be dead	WITHOUT_CLASSIFICATION	0.9999674979441139	WITHOUT_CLASSIFICATION	3.250205588614278E-5	DEFECT
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9983994096130316	WITHOUT_CLASSIFICATION	0.001600590386968289	DEFECT
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999852175130499	WITHOUT_CLASSIFICATION	1.478248695002576E-5	DEFECT
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9998213549644744	WITHOUT_CLASSIFICATION	1.7864503552557747E-4	DEFECT
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999345770851364	WITHOUT_CLASSIFICATION	6.542291486354644E-5	DEFECT
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999791498855068	WITHOUT_CLASSIFICATION	2.0850114493197822E-5	DEFECT
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999990143406928	WITHOUT_CLASSIFICATION	9.85659307204172E-6	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9994360679403792	WITHOUT_CLASSIFICATION	5.639320596207274E-4	DEFECT
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9946398249619758	WITHOUT_CLASSIFICATION	0.005360175038024134	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999716616814236	WITHOUT_CLASSIFICATION	2.833831857634254E-5	DEFECT
main body	WITHOUT_CLASSIFICATION	0.9999893876133017	WITHOUT_CLASSIFICATION	1.0612386698333994E-5	DEFECT
return jump handling	WITHOUT_CLASSIFICATION	0.999976822682171	WITHOUT_CLASSIFICATION	2.3177317829000885E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.9999875063450551	WITHOUT_CLASSIFICATION	1.249365494494773E-5	DEFECT
return result if we're still good	WITHOUT_CLASSIFICATION	0.9996775641555046	WITHOUT_CLASSIFICATION	3.2243584449543814E-4	DEFECT
redo jump handling	WITHOUT_CLASSIFICATION	0.9999519190835049	WITHOUT_CLASSIFICATION	4.808091649521002E-5	DEFECT
clear the redo	WITHOUT_CLASSIFICATION	0.9999617350094328	WITHOUT_CLASSIFICATION	3.826499056730261E-5	DEFECT
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999520073512671	WITHOUT_CLASSIFICATION	4.7992648732932686E-5	DEFECT
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9991852663964742	WITHOUT_CLASSIFICATION	8.147336035256639E-4	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999348523390162	WITHOUT_CLASSIFICATION	6.51476609836654E-5	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995553903590509	WITHOUT_CLASSIFICATION	4.4460964094912336E-4	DEFECT
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999601194391745	WITHOUT_CLASSIFICATION	3.988056082542732E-5	DEFECT
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9987840694239773	WITHOUT_CLASSIFICATION	0.0012159305760225732	DEFECT
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9923434167810418	WITHOUT_CLASSIFICATION	0.007656583218958281	DEFECT
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999914179034534	WITHOUT_CLASSIFICATION	8.58209654656628E-6	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9989696464804498	WITHOUT_CLASSIFICATION	0.001030353519550192	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9989696464804498	WITHOUT_CLASSIFICATION	0.001030353519550192	DEFECT
normal all-rest method	WITHOUT_CLASSIFICATION	0.9999391478388562	WITHOUT_CLASSIFICATION	6.085216114373284E-5	DEFECT
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999652169582621	WITHOUT_CLASSIFICATION	3.478304173789723E-5	DEFECT
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.99996552417184	WITHOUT_CLASSIFICATION	3.447582815989037E-5	DEFECT
return	WITHOUT_CLASSIFICATION	0.9999936006545509	WITHOUT_CLASSIFICATION	6.399345449119914E-6	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999906816536417	WITHOUT_CLASSIFICATION	9.318346358365728E-6	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999615213704419	WITHOUT_CLASSIFICATION	3.847862955805475E-5	DEFECT
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999643890900198	WITHOUT_CLASSIFICATION	3.5610909980222596E-5	DEFECT
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.998275967980245	WITHOUT_CLASSIFICATION	0.0017240320197549907	DEFECT
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9995406501476333	WITHOUT_CLASSIFICATION	4.5934985236672577E-4	DEFECT
tc	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
self name	WITHOUT_CLASSIFICATION	0.9999904490083202	WITHOUT_CLASSIFICATION	9.550991679663842E-6	DEFECT
no args	WITHOUT_CLASSIFICATION	0.9999964909469016	WITHOUT_CLASSIFICATION	3.5090530983773637E-6	DEFECT
variable args with block	WITHOUT_CLASSIFICATION	0.9999896519572695	WITHOUT_CLASSIFICATION	1.0348042730469074E-5	DEFECT
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999931674567579	WITHOUT_CLASSIFICATION	6.832543242179945E-6	DEFECT
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999700645555756	WITHOUT_CLASSIFICATION	2.9935444424392592E-5	DEFECT
one arg with block	WITHOUT_CLASSIFICATION	0.9999944555954132	WITHOUT_CLASSIFICATION	5.5444045867314995E-6	DEFECT
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999841796617002	WITHOUT_CLASSIFICATION	1.5820338299784342E-5	DEFECT
two args with block	WITHOUT_CLASSIFICATION	0.9999638354735285	WITHOUT_CLASSIFICATION	3.6164526471570937E-5	DEFECT
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998855987067788	WITHOUT_CLASSIFICATION	1.1440129322117594E-4	DEFECT
three args with block	WITHOUT_CLASSIFICATION	0.9999861115436686	WITHOUT_CLASSIFICATION	1.3888456331533362E-5	DEFECT
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999581834175877	WITHOUT_CLASSIFICATION	4.181658241231018E-5	DEFECT
load block if it accepts block	WITHOUT_CLASSIFICATION	0.999991172394597	WITHOUT_CLASSIFICATION	8.82760540302406E-6	DEFECT
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999964412466898	WITHOUT_CLASSIFICATION	3.5587533101405075E-6	DEFECT
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999910567324605	WITHOUT_CLASSIFICATION	8.943267539507315E-6	DEFECT
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999979268891479	WITHOUT_CLASSIFICATION	2.073110852192684E-6	DEFECT
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999850074709904	WITHOUT_CLASSIFICATION	1.4992529009554578E-5	DEFECT
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999918990061105	WITHOUT_CLASSIFICATION	8.10099388945697E-6	DEFECT
load target for invocations	WITHOUT_CLASSIFICATION	0.9999763328587128	WITHOUT_CLASSIFICATION	2.366714128720524E-5	DEFECT
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.99992298681707	WITHOUT_CLASSIFICATION	7.701318292989747E-5	DEFECT
static invocation	WITHOUT_CLASSIFICATION	0.999951334311167	WITHOUT_CLASSIFICATION	4.8665688833020486E-5	DEFECT
virtual invocation	WITHOUT_CLASSIFICATION	0.9999192218260186	WITHOUT_CLASSIFICATION	8.077817398141436E-5	DEFECT
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999934168464668	WITHOUT_CLASSIFICATION	6.583153533194171E-6	DEFECT
normal finally and exit	WITHOUT_CLASSIFICATION	0.999954895413975	WITHOUT_CLASSIFICATION	4.5104586024935E-5	DEFECT
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999818691864979	WITHOUT_CLASSIFICATION	1.81308135021107E-5	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995553903590509	WITHOUT_CLASSIFICATION	4.4460964094912336E-4	DEFECT
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9997440591733529	WITHOUT_CLASSIFICATION	2.5594082664718665E-4	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999790556647343	WITHOUT_CLASSIFICATION	2.0944335265668185E-5	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999790556647343	WITHOUT_CLASSIFICATION	2.0944335265668185E-5	DEFECT
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999500625201315	WITHOUT_CLASSIFICATION	4.99374798685285E-5	DEFECT
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9998330302870022	WITHOUT_CLASSIFICATION	1.669697129977195E-4	DEFECT
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
never reached	WITHOUT_CLASSIFICATION	0.9998748325588931	WITHOUT_CLASSIFICATION	1.2516744110688358E-4	DEFECT
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999850750161619	WITHOUT_CLASSIFICATION	1.4924983838106345E-5	DEFECT
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999901117348531	WITHOUT_CLASSIFICATION	9.888265146965553E-6	DEFECT
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999947998290144	WITHOUT_CLASSIFICATION	5.200170985585115E-6	DEFECT
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999622088685839	WITHOUT_CLASSIFICATION	3.779113141609227E-5	DEFECT
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999908484963912	WITHOUT_CLASSIFICATION	9.151503608817613E-6	DEFECT
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999951872885476	WITHOUT_CLASSIFICATION	4.812711452458278E-6	DEFECT
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.999965024563013	WITHOUT_CLASSIFICATION	3.4975436987094035E-5	DEFECT
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999861870517543	WITHOUT_CLASSIFICATION	1.3812948245660848E-5	DEFECT
promise to implement N	WITHOUT_CLASSIFICATION	0.9999479641042972	WITHOUT_CLASSIFICATION	5.20358957028312E-5	DEFECT
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999943142424322	WITHOUT_CLASSIFICATION	5.685757567660143E-6	DEFECT
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9997175816724667	WITHOUT_CLASSIFICATION	2.824183275332206E-4	DEFECT
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9998682488644096	WITHOUT_CLASSIFICATION	1.3175113559046235E-4	DEFECT
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999288063788178	WITHOUT_CLASSIFICATION	7.119362118233691E-5	DEFECT
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999528311200228	WITHOUT_CLASSIFICATION	4.7168879977262946E-5	DEFECT
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999751937702936	WITHOUT_CLASSIFICATION	2.480622970633653E-5	DEFECT
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998197481753183	WITHOUT_CLASSIFICATION	1.8025182468176098E-4	DEFECT
promise to implement three	WITHOUT_CLASSIFICATION	0.9999518410787215	WITHOUT_CLASSIFICATION	4.8158921278575626E-5	DEFECT
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999535548887206	WITHOUT_CLASSIFICATION	4.64451112793158E-5	DEFECT
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999551396133773	WITHOUT_CLASSIFICATION	4.4860386622744325E-5	DEFECT
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999840453533716	WITHOUT_CLASSIFICATION	1.5954646628405084E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999323995272343	WITHOUT_CLASSIFICATION	6.760047276567721E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999067822087094	WITHOUT_CLASSIFICATION	9.321779129053066E-5	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999808515498593	WITHOUT_CLASSIFICATION	1.9148450140692608E-5	DEFECT
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999364935971271	WITHOUT_CLASSIFICATION	6.35064028729244E-5	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999231553454739	WITHOUT_CLASSIFICATION	7.684465452604546E-5	DEFECT
start setup method	WITHOUT_CLASSIFICATION	0.9999468700895352	WITHOUT_CLASSIFICATION	5.31299104647166E-5	DEFECT
set RubyClass	WITHOUT_CLASSIFICATION	0.9999713094573165	WITHOUT_CLASSIFICATION	2.8690542683410953E-5	DEFECT
set Ruby	WITHOUT_CLASSIFICATION	0.99999554540321	WITHOUT_CLASSIFICATION	4.454596790043929E-6	DEFECT
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999453942637565	WITHOUT_CLASSIFICATION	5.460573624336559E-5	DEFECT
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999613954496931	WITHOUT_CLASSIFICATION	3.860455030681902E-5	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999555003640115	WITHOUT_CLASSIFICATION	4.449963598861249E-5	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999565430494558	WITHOUT_CLASSIFICATION	4.3456950544268566E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999323995272343	WITHOUT_CLASSIFICATION	6.760047276567721E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999067822087094	WITHOUT_CLASSIFICATION	9.321779129053066E-5	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999808515498593	WITHOUT_CLASSIFICATION	1.9148450140692608E-5	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999231553454739	WITHOUT_CLASSIFICATION	7.684465452604546E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999807724847079	WITHOUT_CLASSIFICATION	1.9227515292099574E-4	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997672511605434	WITHOUT_CLASSIFICATION	2.3274883945660212E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999549611103378	WITHOUT_CLASSIFICATION	4.503888966226173E-5	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999751008354336	WITHOUT_CLASSIFICATION	2.4899164566287203E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999433287447261	WITHOUT_CLASSIFICATION	5.6671255273777783E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999695539026563	WITHOUT_CLASSIFICATION	3.0446097343761042E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9998446193482456	WITHOUT_CLASSIFICATION	1.5538065175429546E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.999927027056856	WITHOUT_CLASSIFICATION	7.297294314409366E-5	DEFECT
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999771646626656	WITHOUT_CLASSIFICATION	2.2835337334347326E-5	DEFECT
store the wrapper	WITHOUT_CLASSIFICATION	0.9999767355397939	WITHOUT_CLASSIFICATION	2.326446020605494E-5	DEFECT
prepare temp locals	WITHOUT_CLASSIFICATION	0.99992213273393	WITHOUT_CLASSIFICATION	7.786726606996037E-5	DEFECT
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999986991696946	WITHOUT_CLASSIFICATION	1.3008303052924951E-6	DEFECT
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998358192278254	WITHOUT_CLASSIFICATION	1.641807721747157E-4	DEFECT
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999892253832148	WITHOUT_CLASSIFICATION	1.0774616785245237E-5	DEFECT
store it	WITHOUT_CLASSIFICATION	0.9999938100089734	WITHOUT_CLASSIFICATION	6.189991026590876E-6	DEFECT
end of try block	WITHOUT_CLASSIFICATION	0.9999895884001934	WITHOUT_CLASSIFICATION	1.0411599806756564E-5	DEFECT
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999854107659792	WITHOUT_CLASSIFICATION	1.4589234020840057E-5	DEFECT
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998629136154585	WITHOUT_CLASSIFICATION	1.370863845414697E-4	DEFECT
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9997420710590796	WITHOUT_CLASSIFICATION	2.579289409204265E-4	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999565430494558	WITHOUT_CLASSIFICATION	4.3456950544268566E-5	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997672511605434	WITHOUT_CLASSIFICATION	2.3274883945660212E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999549611103378	WITHOUT_CLASSIFICATION	4.503888966226173E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999433287447261	WITHOUT_CLASSIFICATION	5.6671255273777783E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999695539026563	WITHOUT_CLASSIFICATION	3.0446097343761042E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9998446193482456	WITHOUT_CLASSIFICATION	1.5538065175429546E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.999927027056856	WITHOUT_CLASSIFICATION	7.297294314409366E-5	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9999158308062905	WITHOUT_CLASSIFICATION	8.416919370956872E-5	DEFECT
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.99193695016704	WITHOUT_CLASSIFICATION	0.008063049832960066	DEFECT
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999405805994294	WITHOUT_CLASSIFICATION	5.941940057073623E-5	DEFECT
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999696626466323	WITHOUT_CLASSIFICATION	3.0337353367630168E-5	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9996173053014968	WITHOUT_CLASSIFICATION	3.826946985032044E-4	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9996173053014968	WITHOUT_CLASSIFICATION	3.826946985032044E-4	DEFECT
setup the class	WITHOUT_CLASSIFICATION	0.9998551298496204	WITHOUT_CLASSIFICATION	1.4487015037952558E-4	DEFECT
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999291278712817	WITHOUT_CLASSIFICATION	7.087212871829738E-5	DEFECT
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999654509123376	WITHOUT_CLASSIFICATION	3.454908766241067E-5	DEFECT
probably a primitive	WITHOUT_CLASSIFICATION	0.9999460699565542	WITHOUT_CLASSIFICATION	5.3930043445754746E-5	DEFECT
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999981292572475	WITHOUT_CLASSIFICATION	1.8707427523800203E-6	DEFECT
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999297410065985	WITHOUT_CLASSIFICATION	7.025899340147281E-5	DEFECT
set the full name	WITHOUT_CLASSIFICATION	0.9999874644452754	WITHOUT_CLASSIFICATION	1.2535554724541736E-5	DEFECT
include all interfaces	WITHOUT_CLASSIFICATION	0.9999370101497238	WITHOUT_CLASSIFICATION	6.29898502762224E-5	DEFECT
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9998971190239462	WITHOUT_CLASSIFICATION	1.028809760538007E-4	DEFECT
add array construction methods	WITHOUT_CLASSIFICATION	0.9998552835564545	WITHOUT_CLASSIFICATION	1.4471644354555944E-4	DEFECT
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9997146749123972	WITHOUT_CLASSIFICATION	2.853250876027846E-4	DEFECT
add all instance and static methods	WITHOUT_CLASSIFICATION	0.999978401973719	WITHOUT_CLASSIFICATION	2.159802628096165E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999164377521111	WITHOUT_CLASSIFICATION	8.356224788882084E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9996678817706851	WITHOUT_CLASSIFICATION	3.321182293148024E-4	DEFECT
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999653044909437	WITHOUT_CLASSIFICATION	3.469550905643188E-5	DEFECT
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999353614224307	WITHOUT_CLASSIFICATION	6.463857756930782E-5	DEFECT
add all static variables	WITHOUT_CLASSIFICATION	0.9999630569554482	WITHOUT_CLASSIFICATION	3.6943044551860284E-5	DEFECT
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999617891925963	WITHOUT_CLASSIFICATION	3.821080740371098E-5	DEFECT
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9997797428185654	WITHOUT_CLASSIFICATION	2.202571814344848E-4	DEFECT
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.999998826886256	WITHOUT_CLASSIFICATION	1.17311374404205E-6	DEFECT
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9845608242746742	WITHOUT_CLASSIFICATION	0.015439175725325853	DEFECT
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999384217571331	WITHOUT_CLASSIFICATION	6.157824286690409E-5	DEFECT
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999626982777664	WITHOUT_CLASSIFICATION	3.730172223356325E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999895401224347	WITHOUT_CLASSIFICATION	1.0459877565304888E-5	DEFECT
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999465492137644	WITHOUT_CLASSIFICATION	5.345078623566559E-5	DEFECT
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9995922537850848	WITHOUT_CLASSIFICATION	4.077462149152501E-4	DEFECT
line 326	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999895401224347	WITHOUT_CLASSIFICATION	1.0459877565304888E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9996678817706851	WITHOUT_CLASSIFICATION	3.321182293148024E-4	DEFECT
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999228766442111	WITHOUT_CLASSIFICATION	7.712335578887084E-5	DEFECT
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9998785065606491	WITHOUT_CLASSIFICATION	1.2149343935084987E-4	DEFECT
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999640611657192	WITHOUT_CLASSIFICATION	3.593883428080788E-5	DEFECT
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999185883719285	WITHOUT_CLASSIFICATION	8.141162807150123E-4	DEFECT
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999957729075449	WITHOUT_CLASSIFICATION	4.2270924550098484E-6	DEFECT
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999981530551428	WITHOUT_CLASSIFICATION	1.846944857193612E-5	DEFECT
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998773785625419	WITHOUT_CLASSIFICATION	1.2262143745804524E-4	DEFECT
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999882286551962	WITHOUT_CLASSIFICATION	1.1771344803900072E-5	DEFECT
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9174987067760931	WITHOUT_CLASSIFICATION	0.08250129322390687	DEFECT
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9987226232473565	WITHOUT_CLASSIFICATION	0.0012773767526434322	DEFECT
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9994836973374285	WITHOUT_CLASSIFICATION	5.163026625715378E-4	DEFECT
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999767194751492	WITHOUT_CLASSIFICATION	2.328052485084268E-5	DEFECT
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9996826176724242	WITHOUT_CLASSIFICATION	3.1738232757582286E-4	DEFECT
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999563713361089	WITHOUT_CLASSIFICATION	4.362866389097542E-5	DEFECT
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998426679133643	WITHOUT_CLASSIFICATION	1.5733208663566245E-4	DEFECT
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9997766335766445	WITHOUT_CLASSIFICATION	2.2336642335541828E-4	DEFECT
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998705185896135	WITHOUT_CLASSIFICATION	1.294814103865145E-4	DEFECT
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9987933566642615	WITHOUT_CLASSIFICATION	0.0012066433357384822	DEFECT
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999997083920014	WITHOUT_CLASSIFICATION	2.9160799863303187E-7	DEFECT
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999102169045349	WITHOUT_CLASSIFICATION	8.97830954651071E-5	DEFECT
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999946992403854	WITHOUT_CLASSIFICATION	5.3007596145904035E-6	DEFECT
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9998321697157269	WITHOUT_CLASSIFICATION	1.6783028427314305E-4	DEFECT
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999771411852694	WITHOUT_CLASSIFICATION	2.2858814730590532E-4	DEFECT
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9999856620367303	WITHOUT_CLASSIFICATION	1.4337963269615479E-5	DEFECT
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999997249794894	WITHOUT_CLASSIFICATION	2.7502051058620213E-6	DEFECT
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9996206265332374	WITHOUT_CLASSIFICATION	3.7937346676261284E-4	DEFECT
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9979793227069541	WITHOUT_CLASSIFICATION	0.0020206772930458903	DEFECT
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999737895304046	WITHOUT_CLASSIFICATION	2.621046959548284E-5	DEFECT
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999584576171962	WITHOUT_CLASSIFICATION	4.1542382803792635E-5	DEFECT
add reference to interface module	WITHOUT_CLASSIFICATION	0.9999539547037671	WITHOUT_CLASSIFICATION	4.604529623282651E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999164377521111	WITHOUT_CLASSIFICATION	8.356224788882084E-5	DEFECT
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999499966740134	WITHOUT_CLASSIFICATION	5.000332598668191E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999043348125099	WITHOUT_CLASSIFICATION	9.566518749010958E-4	DEFECT
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999377911530931	WITHOUT_CLASSIFICATION	6.220884690682963E-5	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997415432059324	WITHOUT_CLASSIFICATION	2.584567940675454E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997415432059324	WITHOUT_CLASSIFICATION	2.584567940675454E-4	DEFECT
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998232379870369	WITHOUT_CLASSIFICATION	1.7676201296317737E-4	DEFECT
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999860156073536	WITHOUT_CLASSIFICATION	1.3984392646412193E-5	DEFECT
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999795780887046	WITHOUT_CLASSIFICATION	2.0421911295351737E-5	DEFECT
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999612679369458	WITHOUT_CLASSIFICATION	3.873206305421913E-5	DEFECT
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9997839752811942	WITHOUT_CLASSIFICATION	2.1602471880571744E-4	DEFECT
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9998551492450888	WITHOUT_CLASSIFICATION	1.448507549112401E-4	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9996685748264796	WITHOUT_CLASSIFICATION	3.314251735203887E-4	DEFECT
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999885170546406	WITHOUT_CLASSIFICATION	1.1482945359281165E-5	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999711459582939	WITHOUT_CLASSIFICATION	2.8854041706097955E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999438520115564	WITHOUT_CLASSIFICATION	5.6147988443624276E-5	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998989390326722	WITHOUT_CLASSIFICATION	1.0106096732776085E-4	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999269063204672	WITHOUT_CLASSIFICATION	7.309367953278521E-5	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9998943849515763	WITHOUT_CLASSIFICATION	1.0561504842361126E-4	DEFECT
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999955841281534	WITHOUT_CLASSIFICATION	4.415871846600338E-5	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
something?	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999899894867488	WITHOUT_CLASSIFICATION	1.0010513251236978E-5	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999899894867488	WITHOUT_CLASSIFICATION	1.0010513251236978E-5	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998705849232445	WITHOUT_CLASSIFICATION	1.2941507675543458E-4	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998705849232445	WITHOUT_CLASSIFICATION	1.2941507675543458E-4	DEFECT
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999917692636549	WITHOUT_CLASSIFICATION	8.230736345107639E-6	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9968565969809619	WITHOUT_CLASSIFICATION	0.003143403019038219	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999208808846953	WITHOUT_CLASSIFICATION	7.911911530457807E-5	DEFECT
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999958339476357	WITHOUT_CLASSIFICATION	4.166052364353082E-6	DEFECT
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9996067409768242	WITHOUT_CLASSIFICATION	3.932590231756919E-4	DEFECT
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9998890277222202	WITHOUT_CLASSIFICATION	1.109722777798328E-4	DEFECT
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999877691321737	WITHOUT_CLASSIFICATION	1.2230867826386504E-5	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999269063204672	WITHOUT_CLASSIFICATION	7.309367953278521E-5	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9998943849515763	WITHOUT_CLASSIFICATION	1.0561504842361126E-4	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9996673738780625	WITHOUT_CLASSIFICATION	3.326261219375252E-4	DEFECT
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999950806568278	WITHOUT_CLASSIFICATION	4.919343172202306E-5	DEFECT
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9975016393871201	WITHOUT_CLASSIFICATION	0.002498360612879938	DEFECT
see note above re: return type	WITHOUT_CLASSIFICATION	0.9983605985982301	WITHOUT_CLASSIFICATION	0.0016394014017698415	DEFECT
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999661365933269	WITHOUT_CLASSIFICATION	3.3863406673051385E-5	DEFECT
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9956770001132489	WITHOUT_CLASSIFICATION	0.004322999886751123	DEFECT
one-dimensional array	WITHOUT_CLASSIFICATION	0.9998680506806804	WITHOUT_CLASSIFICATION	1.3194931931966047E-4	DEFECT
n-dimensional array	WITHOUT_CLASSIFICATION	0.9998744159527045	WITHOUT_CLASSIFICATION	1.2558404729545703E-4	DEFECT
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999417124982425	WITHOUT_CLASSIFICATION	5.828750175759735E-5	DEFECT
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999889902027028	WITHOUT_CLASSIFICATION	1.1009797297159933E-5	DEFECT
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998352418430542	WITHOUT_CLASSIFICATION	1.6475815694577664E-4	DEFECT
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9997228097244286	WITHOUT_CLASSIFICATION	2.7719027557136826E-4	DEFECT
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9998919464654066	WITHOUT_CLASSIFICATION	1.0805353459345662E-4	DEFECT
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9981736842316099	WITHOUT_CLASSIFICATION	0.0018263157683900608	DEFECT
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999867112023912	WITHOUT_CLASSIFICATION	1.3288797608808962E-5	DEFECT
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999686872828241	WITHOUT_CLASSIFICATION	3.131271717585198E-5	DEFECT
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9996669849274695	WITHOUT_CLASSIFICATION	3.3301507253050426E-4	DEFECT
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999974900262835	WITHOUT_CLASSIFICATION	2.50997371658989E-6	DEFECT
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999973387984951	WITHOUT_CLASSIFICATION	2.661201504889112E-6	DEFECT
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998538774128028	WITHOUT_CLASSIFICATION	1.461225871971776E-4	DEFECT
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999898922968258	WITHOUT_CLASSIFICATION	1.0107703174163953E-5	DEFECT
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998856001480292	WITHOUT_CLASSIFICATION	1.1439985197086353E-4	DEFECT
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999767050441905	WITHOUT_CLASSIFICATION	2.3294955809469394E-5	DEFECT
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999609316720138	WITHOUT_CLASSIFICATION	3.90683279861819E-5	DEFECT
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999655291484701	WITHOUT_CLASSIFICATION	3.4470851529934916E-5	DEFECT
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998893371768829	WITHOUT_CLASSIFICATION	1.106628231171203E-4	DEFECT
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9991369261801661	WITHOUT_CLASSIFICATION	8.630738198338746E-4	DEFECT
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999639607742049	WITHOUT_CLASSIFICATION	3.603922579515388E-5	DEFECT
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9784329523470046	WITHOUT_CLASSIFICATION	0.021567047652995493	DEFECT
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9998786143871264	WITHOUT_CLASSIFICATION	1.2138561287356141E-4	DEFECT
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9996354088962504	WITHOUT_CLASSIFICATION	3.6459110374960336E-4	DEFECT
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999086716819907	WITHOUT_CLASSIFICATION	9.132831800926535E-5	DEFECT
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999092664568233	WITHOUT_CLASSIFICATION	9.073354317662731E-5	DEFECT
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9997740405177427	WITHOUT_CLASSIFICATION	2.2595948225736563E-4	DEFECT
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9996402866541146	WITHOUT_CLASSIFICATION	3.5971334588537357E-4	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9997836338705509	WITHOUT_CLASSIFICATION	2.163661294492221E-4	DEFECT
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9995159791976769	WITHOUT_CLASSIFICATION	4.840208023232124E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999936773778356	WITHOUT_CLASSIFICATION	6.322622164415447E-6	DEFECT
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999539952217273	WITHOUT_CLASSIFICATION	4.600477827264392E-5	DEFECT
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9996256416569664	WITHOUT_CLASSIFICATION	3.7435834303355104E-4	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999043348125099	WITHOUT_CLASSIFICATION	9.566518749010958E-4	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9997836338705509	WITHOUT_CLASSIFICATION	2.163661294492221E-4	DEFECT
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999811103702063	WITHOUT_CLASSIFICATION	1.8889629793685012E-5	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9998079054936456	WITHOUT_CLASSIFICATION	1.9209450635435343E-4	DEFECT
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9991316183336988	WITHOUT_CLASSIFICATION	8.683816663012717E-4	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9994060725993836	WITHOUT_CLASSIFICATION	5.939274006163686E-4	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9994060725993836	WITHOUT_CLASSIFICATION	5.939274006163686E-4	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999981682321377	WITHOUT_CLASSIFICATION	1.8317678623404457E-6	DEFECT
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999958713352696	WITHOUT_CLASSIFICATION	4.128664730514399E-6	DEFECT
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9999664296269248	WITHOUT_CLASSIFICATION	3.357037307522245E-5	DEFECT
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999973761725417	WITHOUT_CLASSIFICATION	2.623827458367302E-6	DEFECT
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997781194677778	WITHOUT_CLASSIFICATION	2.218805322221801E-4	DEFECT
Initialize some components.	WITHOUT_CLASSIFICATION	0.9997954638823947	WITHOUT_CLASSIFICATION	2.0453611760527964E-4	DEFECT
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9999799230097465	WITHOUT_CLASSIFICATION	2.0076990253529996E-5	DEFECT
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9983798198243837	WITHOUT_CLASSIFICATION	0.0016201801756162636	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999931151158438	WITHOUT_CLASSIFICATION	6.884884156203737E-5	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999931151158438	WITHOUT_CLASSIFICATION	6.884884156203737E-5	DEFECT
no matching ctor found	WITHOUT_CLASSIFICATION	0.9999372632892136	WITHOUT_CLASSIFICATION	6.273671078638475E-5	DEFECT
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998776827158367	WITHOUT_CLASSIFICATION	1.223172841633766E-4	DEFECT
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999939358378198	WITHOUT_CLASSIFICATION	6.064162180178518E-6	DEFECT
must be a public method	WITHOUT_CLASSIFICATION	0.9999258276572716	WITHOUT_CLASSIFICATION	7.417234272844611E-5	DEFECT
must be a public class	WITHOUT_CLASSIFICATION	0.9997867799128314	WITHOUT_CLASSIFICATION	2.1322008716849393E-4	DEFECT
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999527568316001	WITHOUT_CLASSIFICATION	4.7243168399960075E-5	DEFECT
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9999994689066956	WITHOUT_CLASSIFICATION	5.310933043604742E-7	DEFECT
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999920227876542	WITHOUT_CLASSIFICATION	7.977212345770397E-6	DEFECT
no matching method found	WITHOUT_CLASSIFICATION	0.9999455711372919	WITHOUT_CLASSIFICATION	5.442886270800175E-5	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9894476861765462	WITHOUT_CLASSIFICATION	0.010552313823453886	DEFECT
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9999447734063002	WITHOUT_CLASSIFICATION	5.5226593699814804E-5	DEFECT
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999432457883359	WITHOUT_CLASSIFICATION	5.675421166413283E-5	DEFECT
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999583433670741	WITHOUT_CLASSIFICATION	4.1656632925903944E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999139046199582	WITHOUT_CLASSIFICATION	8.609538004178058E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999139046199582	WITHOUT_CLASSIFICATION	8.609538004178058E-5	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997448754899525	WITHOUT_CLASSIFICATION	2.5512451004759397E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.999927027056856	WITHOUT_CLASSIFICATION	7.297294314409366E-5	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9894476861765462	WITHOUT_CLASSIFICATION	0.010552313823453886	DEFECT
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999794658166201	WITHOUT_CLASSIFICATION	2.0534183379889006E-5	DEFECT
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9993424203948159	WITHOUT_CLASSIFICATION	6.57579605184106E-4	DEFECT
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9999612557222187	WITHOUT_CLASSIFICATION	3.874427778126287E-5	DEFECT
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999192361838056	WITHOUT_CLASSIFICATION	8.076381619434776E-5	DEFECT
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9994643139504803	WITHOUT_CLASSIFICATION	5.356860495196891E-4	DEFECT
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999154976333483	WITHOUT_CLASSIFICATION	8.450236665158859E-5	DEFECT
package scope	WITHOUT_CLASSIFICATION	0.9999397623008547	WITHOUT_CLASSIFICATION	6.02376991452044E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999043348125099	WITHOUT_CLASSIFICATION	9.566518749010958E-4	DEFECT
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9999339692908387	WITHOUT_CLASSIFICATION	6.603070916132775E-5	DEFECT
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999030197304202	WITHOUT_CLASSIFICATION	9.69802695798417E-5	DEFECT
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998994929505568	WITHOUT_CLASSIFICATION	1.0050704944314885E-4	DEFECT
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999789786018279	WITHOUT_CLASSIFICATION	2.1021398172032107E-5	DEFECT
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999758954978651	WITHOUT_CLASSIFICATION	2.410450213493293E-5	DEFECT
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999986490151461	WITHOUT_CLASSIFICATION	1.3509848538910847E-5	DEFECT
statically initialized below	WITHOUT_CLASSIFICATION	0.9998803450392261	WITHOUT_CLASSIFICATION	1.1965496077386527E-4	DEFECT
finish class initializer	WITHOUT_CLASSIFICATION	0.9997994936135098	WITHOUT_CLASSIFICATION	2.0050638649009642E-4	DEFECT
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9991758375782988	WITHOUT_CLASSIFICATION	8.241624217011431E-4	DEFECT
should not happen!	WITHOUT_CLASSIFICATION	0.9992401931567668	WITHOUT_CLASSIFICATION	7.598068432332116E-4	DEFECT
start class	WITHOUT_CLASSIFICATION	0.9998393197902532	WITHOUT_CLASSIFICATION	1.6068020974671984E-4	DEFECT
make getter for handler	WITHOUT_CLASSIFICATION	0.9998194891117778	WITHOUT_CLASSIFICATION	1.8051088822217324E-4	DEFECT
make getter for proxy class	WITHOUT_CLASSIFICATION	0.999652869832258	WITHOUT_CLASSIFICATION	3.471301677420908E-4	DEFECT
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5109123397931383	DEFECT	0.4890876602068616	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9979511294977814	WITHOUT_CLASSIFICATION	0.0020488705022185917	DEFECT
create static private method field	WITHOUT_CLASSIFICATION	0.9999671443908125	WITHOUT_CLASSIFICATION	3.285560918746949E-5	DEFECT
load static empty array	WITHOUT_CLASSIFICATION	0.999980218048601	WITHOUT_CLASSIFICATION	1.9781951398928758E-5	DEFECT
box arguments	WITHOUT_CLASSIFICATION	0.9999635658352557	WITHOUT_CLASSIFICATION	3.643416474422387E-5	DEFECT
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9994078584010286	WITHOUT_CLASSIFICATION	5.921415989714075E-4	DEFECT
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9999268255734223	WITHOUT_CLASSIFICATION	7.3174426577684E-5	DEFECT
do a void return	WITHOUT_CLASSIFICATION	0.9999831079390488	WITHOUT_CLASSIFICATION	1.6892060951256565E-5	DEFECT
utility methods	WITHOUT_CLASSIFICATION	0.9999637025927276	WITHOUT_CLASSIFICATION	3.62974072723764E-5	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999981682321377	WITHOUT_CLASSIFICATION	1.8317678623404457E-6	DEFECT
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999036160712588	WITHOUT_CLASSIFICATION	9.638392874122369E-5	DEFECT
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9998058457805107	WITHOUT_CLASSIFICATION	1.9415421948937967E-4	DEFECT
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999835038166855	WITHOUT_CLASSIFICATION	1.6496183314385392E-5	DEFECT
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9968820915268378	WITHOUT_CLASSIFICATION	0.003117908473162134	DEFECT
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9981268388378631	WITHOUT_CLASSIFICATION	0.0018731611621368206	DEFECT
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9986740721711946	WITHOUT_CLASSIFICATION	0.0013259278288053648	DEFECT
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999911861691031	WITHOUT_CLASSIFICATION	8.813830896853628E-6	DEFECT
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9993476235974056	WITHOUT_CLASSIFICATION	6.523764025943775E-4	DEFECT
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999959170573757	WITHOUT_CLASSIFICATION	4.082942624315771E-6	DEFECT
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999413389102305	WITHOUT_CLASSIFICATION	5.8661089769369956E-5	DEFECT
NUL	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995484317209512	WITHOUT_CLASSIFICATION	4.5156827904882594E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999919336537062	WITHOUT_CLASSIFICATION	8.066346293803323E-5	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999811322624687	WITHOUT_CLASSIFICATION	1.8867737531348596E-5	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997291792553583	WITHOUT_CLASSIFICATION	2.708207446416758E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999986363254142	WITHOUT_CLASSIFICATION	1.3636745858275785E-6	DEFECT
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9990217107022721	WITHOUT_CLASSIFICATION	9.782892977278968E-4	DEFECT
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999010960475865	WITHOUT_CLASSIFICATION	9.890395241347057E-5	DEFECT
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9875820426086476	WITHOUT_CLASSIFICATION	0.012417957391352439	DEFECT
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9997674712661413	WITHOUT_CLASSIFICATION	2.3252873385874693E-4	DEFECT
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9989853070651737	WITHOUT_CLASSIFICATION	0.0010146929348262554	DEFECT
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.999506215549353	WITHOUT_CLASSIFICATION	4.937844506469801E-4	DEFECT
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9996277921617548	WITHOUT_CLASSIFICATION	3.722078382451915E-4	DEFECT
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.999998463600897	WITHOUT_CLASSIFICATION	1.536399103030694E-6	DEFECT
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999859791752161	WITHOUT_CLASSIFICATION	1.4020824783736976E-5	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.999749891835569	WITHOUT_CLASSIFICATION	2.5010816443114293E-4	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.999749891835569	WITHOUT_CLASSIFICATION	2.5010816443114293E-4	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.999749891835569	WITHOUT_CLASSIFICATION	2.5010816443114293E-4	DEFECT
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9997943362549696	WITHOUT_CLASSIFICATION	2.056637450303074E-4	DEFECT
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9998588282400339	WITHOUT_CLASSIFICATION	1.4117175996611342E-4	DEFECT
Single node in list	WITHOUT_CLASSIFICATION	0.9999450354686317	WITHOUT_CLASSIFICATION	5.496453136824287E-5	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999175803937556	WITHOUT_CLASSIFICATION	8.241960624443513E-5	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999175803937556	WITHOUT_CLASSIFICATION	8.241960624443513E-5	DEFECT
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9997577509330331	WITHOUT_CLASSIFICATION	2.4224906696696078E-4	DEFECT
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9997470468541416	WITHOUT_CLASSIFICATION	2.529531458583405E-4	DEFECT
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999777524440079	WITHOUT_CLASSIFICATION	2.2247555992162136E-5	DEFECT
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999772534435433	WITHOUT_CLASSIFICATION	2.2746556456643884E-5	DEFECT
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999084068495508	WITHOUT_CLASSIFICATION	9.159315044906612E-5	DEFECT
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998421140143406	WITHOUT_CLASSIFICATION	1.5788598565934743E-4	DEFECT
Last full line read.	WITHOUT_CLASSIFICATION	0.99984461928357	WITHOUT_CLASSIFICATION	1.5538071642993046E-4	DEFECT
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997734933147171	WITHOUT_CLASSIFICATION	2.2650668528288552E-4	DEFECT
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999993945154863	WITHOUT_CLASSIFICATION	6.054845137072748E-6	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999668413403606	WITHOUT_CLASSIFICATION	3.315865963937928E-5	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999668413403606	WITHOUT_CLASSIFICATION	3.315865963937928E-5	DEFECT
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999800212435563	WITHOUT_CLASSIFICATION	1.997875644362727E-5	DEFECT
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9992657118639342	WITHOUT_CLASSIFICATION	7.342881360657578E-4	DEFECT
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999522126640483	WITHOUT_CLASSIFICATION	4.778733595158178E-5	DEFECT
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9998815705391944	WITHOUT_CLASSIFICATION	1.184294608056441E-4	DEFECT
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9998169101620121	WITHOUT_CLASSIFICATION	1.830898379879569E-4	DEFECT
just ignore	WITHOUT_CLASSIFICATION	0.9999930431708799	WITHOUT_CLASSIFICATION	6.956829120099704E-6	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9998673207185867	WITHOUT_CLASSIFICATION	1.32679281413239E-4	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9998715712415328	WITHOUT_CLASSIFICATION	1.2842875846722358E-4	DEFECT
PUSH(1)	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
POP	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9997849504223484	WITHOUT_CLASSIFICATION	2.1504957765160267E-4	DEFECT
LEXPOP	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
SET_P	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998746102460785	WITHOUT_CLASSIFICATION	1.2538975392149782E-4	DEFECT
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9987745655676462	WITHOUT_CLASSIFICATION	0.001225434432353697	DEFECT
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999577992738741	WITHOUT_CLASSIFICATION	4.220072612596974E-5	DEFECT
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999909224216607	WITHOUT_CLASSIFICATION	9.077578339364966E-6	DEFECT
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998127150096222	WITHOUT_CLASSIFICATION	1.8728499037787288E-4	DEFECT
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999311951146385	WITHOUT_CLASSIFICATION	6.880488536160352E-5	DEFECT
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999463197182105	WITHOUT_CLASSIFICATION	5.368028178957128E-5	DEFECT
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998170996116847	WITHOUT_CLASSIFICATION	1.8290038831538638E-4	DEFECT
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999716702904948	WITHOUT_CLASSIFICATION	2.8329709505130187E-5	DEFECT
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998507202936046	WITHOUT_CLASSIFICATION	1.49279706395375E-4	DEFECT
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998499066792631	WITHOUT_CLASSIFICATION	1.500933207368438E-4	DEFECT
1.9 only	WITHOUT_CLASSIFICATION	0.9999734834240095	WITHOUT_CLASSIFICATION	2.6516575990546205E-5	DEFECT
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999140560560393	WITHOUT_CLASSIFICATION	8.594394396061924E-5	DEFECT
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999418629461823	WITHOUT_CLASSIFICATION	5.813705381777574E-5	DEFECT
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9999749715329521	WITHOUT_CLASSIFICATION	2.5028467047799688E-5	DEFECT
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9998279435343409	WITHOUT_CLASSIFICATION	1.72056465659134E-4	DEFECT
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9999133936521171	WITHOUT_CLASSIFICATION	8.660634788288048E-5	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
end of script.	WITHOUT_CLASSIFICATION	0.9999052653409196	WITHOUT_CLASSIFICATION	9.473465908043719E-5	DEFECT
white spaces	WITHOUT_CLASSIFICATION	0.9999320578056613	WITHOUT_CLASSIFICATION	6.794219433872837E-5	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
it's a comment	WITHOUT_CLASSIFICATION	0.999724435312925	WITHOUT_CLASSIFICATION	2.755646870749756E-4	DEFECT
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.999993827395617	WITHOUT_CLASSIFICATION	6.172604382994336E-6	DEFECT
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999759828101925	WITHOUT_CLASSIFICATION	2.4017189807509158E-5	DEFECT
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999156635669516	WITHOUT_CLASSIFICATION	8.43364330484312E-5	DEFECT
documentation nodes	WITHOUT_CLASSIFICATION	0.9997731919262932	WITHOUT_CLASSIFICATION	2.2680807370676064E-4	DEFECT
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9989292472555751	WITHOUT_CLASSIFICATION	0.0010707527444249112	DEFECT
Just a plain bang	WITHOUT_CLASSIFICATION	0.999883313531475	WITHOUT_CLASSIFICATION	1.1668646852511119E-4	DEFECT
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999621442317325	WITHOUT_CLASSIFICATION	3.7855768267412486E-5	DEFECT
$~: match-data	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
$: argv	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
$$: pid	WITHOUT_CLASSIFICATION	0.999986818847233	WITHOUT_CLASSIFICATION	1.3181152766976869E-5	DEFECT
$?: last status	WITHOUT_CLASSIFICATION	0.9999159735102449	WITHOUT_CLASSIFICATION	8.402648975517105E-5	DEFECT
$!: error string	WITHOUT_CLASSIFICATION	0.9999803020642164	WITHOUT_CLASSIFICATION	1.9697935783619662E-5	DEFECT
$@: error position	WITHOUT_CLASSIFICATION	0.9999678745941304	WITHOUT_CLASSIFICATION	3.212540586968023E-5	DEFECT
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999550337163575	WITHOUT_CLASSIFICATION	4.496628364253559E-5	DEFECT
$;: field separator	WITHOUT_CLASSIFICATION	0.9999734627408473	WITHOUT_CLASSIFICATION	2.6537259152601268E-5	DEFECT
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999883078399417	WITHOUT_CLASSIFICATION	1.16921600581703E-5	DEFECT
$.: last read line number	WITHOUT_CLASSIFICATION	0.9998489469684345	WITHOUT_CLASSIFICATION	1.5105303156552833E-4	DEFECT
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
$:: load path	WITHOUT_CLASSIFICATION	0.9999446390055485	WITHOUT_CLASSIFICATION	5.536099445143664E-5	DEFECT
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999486885623324	WITHOUT_CLASSIFICATION	5.1311437667554336E-5	DEFECT
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999823956316951	WITHOUT_CLASSIFICATION	1.7604368304808797E-5	DEFECT
$&: last match	WITHOUT_CLASSIFICATION	0.9999547754861886	WITHOUT_CLASSIFICATION	4.522451381150564E-5	DEFECT
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999831674298156	WITHOUT_CLASSIFICATION	1.6832570184411036E-5	DEFECT
$': string after last match	WITHOUT_CLASSIFICATION	0.9999877207899078	WITHOUT_CLASSIFICATION	1.227921009208433E-5	DEFECT
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999570900332788	WITHOUT_CLASSIFICATION	4.2909966721280485E-5	DEFECT
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9998614208252145	WITHOUT_CLASSIFICATION	1.385791747855336E-4	DEFECT
enum lex_state	WITHOUT_CLASSIFICATION	0.9999132173526345	WITHOUT_CLASSIFICATION	8.678264736554813E-5	DEFECT
block (primary)	WITHOUT_CLASSIFICATION	0.999985664032378	WITHOUT_CLASSIFICATION	1.4335967622138618E-5	DEFECT
block (expr)	WITHOUT_CLASSIFICATION	0.999985664032378	WITHOUT_CLASSIFICATION	1.4335967622138618E-5	DEFECT
hash	WITHOUT_CLASSIFICATION	0.9999875716700254	WITHOUT_CLASSIFICATION	1.2428329974681682E-5	DEFECT
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9997334875853673	WITHOUT_CLASSIFICATION	2.665124146327604E-4	DEFECT
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9928561328301704	WITHOUT_CLASSIFICATION	0.00714386716982967	DEFECT
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9923303545472795	WITHOUT_CLASSIFICATION	0.007669645452720575	DEFECT
hexadecimal	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
binary	WITHOUT_CLASSIFICATION	0.9999882119633484	WITHOUT_CLASSIFICATION	1.1788036651648657E-5	DEFECT
decimal	WITHOUT_CLASSIFICATION	0.9999878336899265	WITHOUT_CLASSIFICATION	1.2166310073517028E-5	DEFECT
Octal	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999732452107659	WITHOUT_CLASSIFICATION	2.675478923414149E-5	DEFECT
backslash	WITHOUT_CLASSIFICATION	0.999986860754542	WITHOUT_CLASSIFICATION	1.3139245457966346E-5	DEFECT
newline	WITHOUT_CLASSIFICATION	0.9999745026359846	WITHOUT_CLASSIFICATION	2.5497364015337672E-5	DEFECT
horizontal tab	WITHOUT_CLASSIFICATION	0.9999479909235228	WITHOUT_CLASSIFICATION	5.200907647716334E-5	DEFECT
form feed	WITHOUT_CLASSIFICATION	0.9999905802996594	WITHOUT_CLASSIFICATION	9.419700340586624E-6	DEFECT
vertical tab	WITHOUT_CLASSIFICATION	0.9999478415639917	WITHOUT_CLASSIFICATION	5.215843600821493E-5	DEFECT
alarm(bell)	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
escape	WITHOUT_CLASSIFICATION	0.9999894625094948	WITHOUT_CLASSIFICATION	1.0537490505135828E-5	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9998715712415328	WITHOUT_CLASSIFICATION	1.2842875846722358E-4	DEFECT
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999532168167554	WITHOUT_CLASSIFICATION	4.6783183244618294E-5	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999630440011467	WITHOUT_CLASSIFICATION	3.69559988533051E-5	DEFECT
space	WITHOUT_CLASSIFICATION	0.999995034625266	WITHOUT_CLASSIFICATION	4.9653747340096E-6	DEFECT
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9997254061403159	WITHOUT_CLASSIFICATION	2.745938596840288E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999935127847452	WITHOUT_CLASSIFICATION	6.487215254756989E-6	DEFECT
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9997539733671258	WITHOUT_CLASSIFICATION	2.4602663287418594E-4	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999630440011467	WITHOUT_CLASSIFICATION	3.69559988533051E-5	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9857029894388438	WITHOUT_CLASSIFICATION	0.014297010561156166	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9857029894388438	WITHOUT_CLASSIFICATION	0.014297010561156166	DEFECT
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999739468870589	WITHOUT_CLASSIFICATION	2.6053112941172107E-5	DEFECT
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999164397676397	WITHOUT_CLASSIFICATION	8.356023236023856E-5	DEFECT
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998916834810975	WITHOUT_CLASSIFICATION	1.0831651890260251E-4	DEFECT
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999552465483984	WITHOUT_CLASSIFICATION	4.475345160159531E-5	DEFECT
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999968847760857	WITHOUT_CLASSIFICATION	3.1152239142976075E-5	DEFECT
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.6867624854753104	WITHOUT_CLASSIFICATION	0.3132375145246897	DEFECT
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9994667077537662	WITHOUT_CLASSIFICATION	5.332922462338831E-4	DEFECT
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9862194420860031	WITHOUT_CLASSIFICATION	0.013780557913996922	DEFECT
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999414046289242	WITHOUT_CLASSIFICATION	5.859537107589425E-5	DEFECT
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9995753917314185	WITHOUT_CLASSIFICATION	4.246082685814644E-4	DEFECT
this set is only for darwin	WITHOUT_CLASSIFICATION	0.99933255759337	WITHOUT_CLASSIFICATION	6.674424066300012E-4	DEFECT
DigestLibrary	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9996718489114165	WITHOUT_CLASSIFICATION	3.2815108858351584E-4	DEFECT
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998960174066984	WITHOUT_CLASSIFICATION	1.0398259330153061E-4	DEFECT
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999223841841469	WITHOUT_CLASSIFICATION	7.761581585317E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
line 329	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999005944633634	WITHOUT_CLASSIFICATION	9.940553663657224E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9998620808354021	WITHOUT_CLASSIFICATION	1.3791916459792014E-4	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.998761515912183	WITHOUT_CLASSIFICATION	0.0012384840878169945	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999339002143153	WITHOUT_CLASSIFICATION	6.609978568475053E-5	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9999332525058511	WITHOUT_CLASSIFICATION	6.674749414890733E-5	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999167660320625	WITHOUT_CLASSIFICATION	8.323396793749407E-5	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9995564609437706	WITHOUT_CLASSIFICATION	4.4353905622950034E-4	DEFECT
line 271	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 274	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 303	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 311	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 314	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 317	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 332	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 338	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 341	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 344	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 358	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 367	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 378	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 407	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 411	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 414	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 434	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 443	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 446	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 452	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 457	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 464	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 467	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 470	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 479	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 484	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 492	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 498	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 501	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 504	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 507	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 510	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 519	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 525	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 556	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 559	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 563	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 569	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 575	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 578	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 587	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 596	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 604	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 607	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 613	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 616	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 634	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 638	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 643	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 646	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 655	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 660	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 667	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 670	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 701	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 717	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 720	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 726	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 729	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 735	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 738	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 751	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 754	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 757	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 760	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 763	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 769	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 775	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 797	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 803	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 806	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 809	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 815	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 818	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 821	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 824	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 830	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 833	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 836	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 852	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 858	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 861	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 868	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 871	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 876	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 879	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 883	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 903	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 907	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 915	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 920	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 923	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 926	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 936	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 940	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 948	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 956	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 964	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 967	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 978	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 984	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 986	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 996	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1001	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1008	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1014	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1029	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1032	WITHOUT_CLASSIFICATION	0.9999636593958005	WITHOUT_CLASSIFICATION	3.6340604199463736E-5	DEFECT
line 1034	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1045	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1048	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1051	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1058	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1070	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1073	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1076	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1079	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1082	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1089	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1100	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1103	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1107	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999641943250409	WITHOUT_CLASSIFICATION	3.5805674958976256E-5	DEFECT
line 1113	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1115	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1119	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1135	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1137	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1151	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1154	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1164	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1175	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1178	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1187	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1189	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1193	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1214	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1234	WITHOUT_CLASSIFICATION	0.9999639846785449	WITHOUT_CLASSIFICATION	3.6015321455170655E-5	DEFECT
line 1239	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1243	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1263	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1269	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1280	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1283	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1290	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1296	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1299	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1302	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1309	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1313	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1315	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1328	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1335	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1352	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1358	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1374	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1381	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1415	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1431	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1434	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1440	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1443	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1453	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1465	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1477	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1480	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1485	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1488	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1510	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1516	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1533	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1550	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1553	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1556	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1565	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1568	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1571	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1574	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1577	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1587	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1600	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1609	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1623	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1626	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1638	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1641	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1644	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1649	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1655	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1658	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1661	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1672	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1677	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1687	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1694	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1733	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1745	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1757	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1769	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1775	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1784	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1808	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1814	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999331478213671	WITHOUT_CLASSIFICATION	6.685217863293297E-5	DEFECT
XXX 0;	WITHOUT_CLASSIFICATION	0.9999576599873071	WITHOUT_CLASSIFICATION	4.2340012692749004E-5	DEFECT
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999890632504932	WITHOUT_CLASSIFICATION	1.0936749506782073E-5	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999877824658616	WITHOUT_CLASSIFICATION	1.2217534138365306E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9948916146104303	WITHOUT_CLASSIFICATION	0.005108385389569688	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999606564541597	WITHOUT_CLASSIFICATION	3.9343545840362166E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9998628126802785	WITHOUT_CLASSIFICATION	1.3718731972145877E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9998628126802785	WITHOUT_CLASSIFICATION	1.3718731972145877E-4	DEFECT
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9999134158345341	WITHOUT_CLASSIFICATION	8.658416546596825E-5	DEFECT
mirko: check	WITHOUT_CLASSIFICATION	0.9999828774705217	WITHOUT_CLASSIFICATION	1.7122529478283E-5	DEFECT
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9994925455367955	WITHOUT_CLASSIFICATION	5.07454463204621E-4	DEFECT
line 529	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
XXX	WITHOUT_CLASSIFICATION	0.9999550066283932	WITHOUT_CLASSIFICATION	4.4993371606771234E-5	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9998937680081801	WITHOUT_CLASSIFICATION	1.0623199181980443E-4	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999506015561792	WITHOUT_CLASSIFICATION	4.939844382085617E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999088594119858	WITHOUT_CLASSIFICATION	9.114058801428639E-5	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9996356308499428	WITHOUT_CLASSIFICATION	3.6436915005731875E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999703275511808	WITHOUT_CLASSIFICATION	2.9672448819205186E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999005944633634	WITHOUT_CLASSIFICATION	9.940553663657224E-5	DEFECT
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9997671152867106	WITHOUT_CLASSIFICATION	2.328847132894752E-4	DEFECT
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999832303318497	WITHOUT_CLASSIFICATION	1.676966815033851E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999510476308833	WITHOUT_CLASSIFICATION	4.895236911663812E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999510476308833	WITHOUT_CLASSIFICATION	4.895236911663812E-5	DEFECT
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998223767257391	WITHOUT_CLASSIFICATION	1.7762327426080172E-4	DEFECT
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9956988602853297	WITHOUT_CLASSIFICATION	0.00430113971467029	DEFECT
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9993983598522432	WITHOUT_CLASSIFICATION	6.016401477567908E-4	DEFECT
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.99929676408968	WITHOUT_CLASSIFICATION	7.032359103200683E-4	DEFECT
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9993595011806623	WITHOUT_CLASSIFICATION	6.404988193376348E-4	DEFECT
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999385528492469	WITHOUT_CLASSIFICATION	6.144715075306064E-5	DEFECT
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9841529467616558	WITHOUT_CLASSIFICATION	0.015847053238344268	DEFECT
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999766130523406	WITHOUT_CLASSIFICATION	2.3386947659408992E-4	DEFECT
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9974447015772852	WITHOUT_CLASSIFICATION	0.0025552984227148415	DEFECT
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999128222438941	WITHOUT_CLASSIFICATION	8.717775610584103E-5	DEFECT
Parser states:	WITHOUT_CLASSIFICATION	0.9999144028069369	WITHOUT_CLASSIFICATION	8.559719306308643E-5	DEFECT
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9997700836516998	WITHOUT_CLASSIFICATION	2.2991634830002325E-4	DEFECT
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9996437290304804	WITHOUT_CLASSIFICATION	3.5627096951955074E-4	DEFECT
LOCALVAR	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
CONSTANT	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999652113668237	WITHOUT_CLASSIFICATION	3.47886331763202E-5	DEFECT
MRI: block_append	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9992340645276228	WITHOUT_CLASSIFICATION	7.659354723771628E-4	DEFECT
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998692665567273	WITHOUT_CLASSIFICATION	1.307334432727851E-4	DEFECT
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999527995359044	WITHOUT_CLASSIFICATION	4.7200464095570603E-5	DEFECT
Node	WITHOUT_CLASSIFICATION	0.9999866674570222	WITHOUT_CLASSIFICATION	1.3332542977666129E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9711665706612825	WITHOUT_CLASSIFICATION	0.028833429338717582	DEFECT
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998915081034556	WITHOUT_CLASSIFICATION	1.084918965443983E-4	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9711665706612825	WITHOUT_CLASSIFICATION	0.028833429338717582	DEFECT
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9998915081034556	WITHOUT_CLASSIFICATION	1.084918965443983E-4	DEFECT
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9998915081034556	WITHOUT_CLASSIFICATION	1.084918965443983E-4	DEFECT
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9104455934596724	WITHOUT_CLASSIFICATION	0.08955440654032772	DEFECT
MRI: range_op	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999847705667931	WITHOUT_CLASSIFICATION	1.522943320688518E-4	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9991109391213565	WITHOUT_CLASSIFICATION	8.890608786435314E-4	DEFECT
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999879500160559	WITHOUT_CLASSIFICATION	1.2049983944050522E-5	DEFECT
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999320016545401	WITHOUT_CLASSIFICATION	6.79983454598062E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9998620808354021	WITHOUT_CLASSIFICATION	1.3791916459792014E-4	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999339002143153	WITHOUT_CLASSIFICATION	6.609978568475053E-5	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9999332525058511	WITHOUT_CLASSIFICATION	6.674749414890733E-5	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999167660320625	WITHOUT_CLASSIFICATION	8.323396793749407E-5	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9995564609437706	WITHOUT_CLASSIFICATION	4.4353905622950034E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 280	WITHOUT_CLASSIFICATION	0.9999637616561198	WITHOUT_CLASSIFICATION	3.623834388015201E-5	DEFECT
line 283	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 296	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 324	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 327	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 331	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 333	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 336	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 342	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 345	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 348	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 354	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 368	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 377	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 388	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 392	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 397	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 429	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 432	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 436	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 445	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 448	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 454	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 459	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 466	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 469	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 478	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 481	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 488	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 494	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 497	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 503	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 506	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 509	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 512	WITHOUT_CLASSIFICATION	0.9999638147419245	WITHOUT_CLASSIFICATION	3.61852580753695E-5	DEFECT
line 521	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 526	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 534	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 549	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 552	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 558	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 561	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 571	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 574	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 579	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 586	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 589	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 592	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 595	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 598	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 623	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 627	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 630	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 633	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 639	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 648	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 657	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 661	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 666	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 678	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 682	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 688	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 699	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 706	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 708	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 727	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 737	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 753	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 779	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 801	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 808	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 811	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 817	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 820	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 826	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 829	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 832	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 851	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 857	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 860	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 863	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 866	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 869	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 875	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 884	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 887	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 890	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 902	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 909	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 912	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 916	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 922	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 928	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 941	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 947	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 951	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 955	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 965	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 969	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 977	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 983	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1013	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1023	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1035	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1041	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1043	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1054	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1057	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1060	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1069	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1075	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999641943250409	WITHOUT_CLASSIFICATION	3.5805674958976256E-5	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1078	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1084	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1087	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1090	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1093	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1114	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1116	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1118	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1124	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1126	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1138	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1144	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1149	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1155	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1162	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1173	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1179	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1182	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1190	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1196	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1213	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1217	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1231	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1236	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1244	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1254	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1258	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1264	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1270	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1273	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1276	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1279	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1282	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1289	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1292	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1295	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1298	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1305	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1308	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1311	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1317	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1323	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1326	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1329	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1337	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1342	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1345	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1354	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1359	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1366	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1369	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1373	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1377	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1383	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1399	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1401	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1406	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1417	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1424	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1427	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1430	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1433	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1436	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1442	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1445	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1458	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1464	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1489	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1493	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1507	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1519	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1532	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1538	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1542	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1557	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1573	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1591	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1607	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1610	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1622	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1625	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1636	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1639	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1647	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1651	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1657	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1660	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1663	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1678	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1702	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1711	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1719	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1722	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1731	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1734	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1738	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1746	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1756	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1758	WITHOUT_CLASSIFICATION	0.9998974748312811	WITHOUT_CLASSIFICATION	1.0252516871899556E-4	DEFECT
line 1761	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1767	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1776	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1782	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1785	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1788	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1791	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1797	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1800	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1803	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1806	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1809	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1815	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1825	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1828	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1831	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1847	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9998628126802785	WITHOUT_CLASSIFICATION	1.3718731972145877E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9998628126802785	WITHOUT_CLASSIFICATION	1.3718731972145877E-4	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9998937680081801	WITHOUT_CLASSIFICATION	1.0623199181980443E-4	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999506015561792	WITHOUT_CLASSIFICATION	4.939844382085617E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999088594119858	WITHOUT_CLASSIFICATION	9.114058801428639E-5	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
line 1854	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1869	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1872	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1877	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1886	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1898	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1902	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1905	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1911	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1918	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1935	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1938	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1942	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1948	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1960	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1963	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1968	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1972	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1982	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1995	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 2000	WITHOUT_CLASSIFICATION	0.9999298159440363	WITHOUT_CLASSIFICATION	7.018405596367046E-5	DEFECT
line 2006	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 2010	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999777761799342	WITHOUT_CLASSIFICATION	2.2223820065824472E-5	DEFECT
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999404388755552	WITHOUT_CLASSIFICATION	5.956112444489851E-5	DEFECT
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9999297927403149	WITHOUT_CLASSIFICATION	7.020725968510015E-5	DEFECT
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999684479052641	WITHOUT_CLASSIFICATION	3.1552094735979267E-5	DEFECT
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999210111517118	WITHOUT_CLASSIFICATION	7.898884828813747E-5	DEFECT
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9998684023345903	WITHOUT_CLASSIFICATION	1.3159766540969456E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999703275511808	WITHOUT_CLASSIFICATION	2.9672448819205186E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999005944633634	WITHOUT_CLASSIFICATION	9.940553663657224E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999510476308833	WITHOUT_CLASSIFICATION	4.895236911663812E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999510476308833	WITHOUT_CLASSIFICATION	4.895236911663812E-5	DEFECT
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9996634517788742	WITHOUT_CLASSIFICATION	3.365482211258593E-4	DEFECT
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999579077522976	WITHOUT_CLASSIFICATION	4.2092247702318986E-5	DEFECT
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9997534991237517	WITHOUT_CLASSIFICATION	2.465008762483265E-4	DEFECT
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9997671152867106	WITHOUT_CLASSIFICATION	2.328847132894752E-4	DEFECT
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9990109595770758	WITHOUT_CLASSIFICATION	9.89040422924285E-4	DEFECT
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9997840792187751	WITHOUT_CLASSIFICATION	2.1592078122480236E-4	DEFECT
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9995763076965124	WITHOUT_CLASSIFICATION	4.2369230348752725E-4	DEFECT
Live reference to module	WITHOUT_CLASSIFICATION	0.9999601027436278	WITHOUT_CLASSIFICATION	3.9897256372122514E-5	DEFECT
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999612271250472	WITHOUT_CLASSIFICATION	3.877287495267507E-5	DEFECT
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999875930289662	WITHOUT_CLASSIFICATION	1.2406971033843077E-5	DEFECT
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9989614727361114	WITHOUT_CLASSIFICATION	0.0010385272638885443	DEFECT
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999747766003941	WITHOUT_CLASSIFICATION	2.522339960590702E-4	DEFECT
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999950948098123	WITHOUT_CLASSIFICATION	4.905190187688922E-5	DEFECT
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999988421585446	WITHOUT_CLASSIFICATION	1.1578414553965215E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999702754272123	WITHOUT_CLASSIFICATION	2.9724572787692197E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999702754272123	WITHOUT_CLASSIFICATION	2.9724572787692197E-5	DEFECT
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9999691378625714	WITHOUT_CLASSIFICATION	3.086213742863669E-5	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9997333817897952	WITHOUT_CLASSIFICATION	2.666182102047723E-4	DEFECT
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9999678100670396	WITHOUT_CLASSIFICATION	3.2189932960404366E-5	DEFECT
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9997686204543499	WITHOUT_CLASSIFICATION	2.3137954565014397E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999952379310683	WITHOUT_CLASSIFICATION	4.7620689317453345E-6	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999480262905028	WITHOUT_CLASSIFICATION	5.197370949708444E-5	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999952379310683	WITHOUT_CLASSIFICATION	4.7620689317453345E-6	DEFECT
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999811246744297	WITHOUT_CLASSIFICATION	1.8875325570274246E-5	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.990649637652895	WITHOUT_CLASSIFICATION	0.00935036234710491	DEFECT
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9972042283064183	WITHOUT_CLASSIFICATION	0.002795771693581756	DEFECT
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9988826791716566	WITHOUT_CLASSIFICATION	0.0011173208283434047	DEFECT
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997330984517051	WITHOUT_CLASSIFICATION	2.669015482949342E-4	DEFECT
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9997330984517051	WITHOUT_CLASSIFICATION	2.669015482949342E-4	DEFECT
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999920652440919	WITHOUT_CLASSIFICATION	7.93475590803267E-6	DEFECT
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999413471886373	WITHOUT_CLASSIFICATION	5.865281136280061E-5	DEFECT
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999385410760545	WITHOUT_CLASSIFICATION	6.145892394548564E-5	DEFECT
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.7308838100527201	WITHOUT_CLASSIFICATION	0.26911618994728004	DEFECT
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999988935045671	WITHOUT_CLASSIFICATION	1.1064954328952339E-5	DEFECT
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996076371774884	WITHOUT_CLASSIFICATION	3.923628225117405E-4	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999817240656496	WITHOUT_CLASSIFICATION	1.8275934350406233E-5	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999817240656496	WITHOUT_CLASSIFICATION	1.8275934350406233E-5	DEFECT
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999922232086714	WITHOUT_CLASSIFICATION	7.776791328594823E-5	DEFECT
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999682433948655	WITHOUT_CLASSIFICATION	3.175660513459841E-5	DEFECT
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999522899887943	WITHOUT_CLASSIFICATION	4.771001120574301E-5	DEFECT
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9996664624759278	WITHOUT_CLASSIFICATION	3.335375240721302E-4	DEFECT
required and optional only	WITHOUT_CLASSIFICATION	0.9995166732928179	WITHOUT_CLASSIFICATION	4.8332670718200676E-4	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999952379310683	WITHOUT_CLASSIFICATION	4.7620689317453345E-6	DEFECT
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9998283234483689	WITHOUT_CLASSIFICATION	1.716765516310951E-4	DEFECT
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999972804253143	WITHOUT_CLASSIFICATION	2.7195746857312844E-6	DEFECT
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9993256086621487	WITHOUT_CLASSIFICATION	6.743913378513443E-4	DEFECT
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9998283706198542	WITHOUT_CLASSIFICATION	1.716293801458892E-4	DEFECT
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999965560520674	WITHOUT_CLASSIFICATION	3.443947932589925E-6	DEFECT
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999998368629668	WITHOUT_CLASSIFICATION	1.6313703320003563E-6	DEFECT
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999830275519814	WITHOUT_CLASSIFICATION	1.6972448018595136E-5	DEFECT
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999869675625338	WITHOUT_CLASSIFICATION	1.3032437466192496E-4	DEFECT
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9997205054989926	WITHOUT_CLASSIFICATION	2.794945010073573E-4	DEFECT
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999243907677842	WITHOUT_CLASSIFICATION	7.560923221582734E-5	DEFECT
No argument blocks	WITHOUT_CLASSIFICATION	0.9999828926593067	WITHOUT_CLASSIFICATION	1.7107340693252768E-5	DEFECT
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999903716724668	WITHOUT_CLASSIFICATION	9.628327533123799E-6	DEFECT
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.99898181169056	WITHOUT_CLASSIFICATION	0.001018188309440002	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999103095009163	WITHOUT_CLASSIFICATION	8.969049908374868E-5	DEFECT
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9965830273586238	WITHOUT_CLASSIFICATION	0.0034169726413762307	DEFECT
Highest reserved id	WITHOUT_CLASSIFICATION	0.9998916897554598	WITHOUT_CLASSIFICATION	1.0831024454024246E-4	DEFECT
binary typed calls	WITHOUT_CLASSIFICATION	0.9994019954231611	WITHOUT_CLASSIFICATION	5.980045768388498E-4	DEFECT
id must always be even	WITHOUT_CLASSIFICATION	0.9992995066820518	WITHOUT_CLASSIFICATION	7.004933179482566E-4	DEFECT
with block pass	WITHOUT_CLASSIFICATION	0.999966473721699	WITHOUT_CLASSIFICATION	3.352627830103538E-5	DEFECT
no block	WITHOUT_CLASSIFICATION	0.9999993166672255	WITHOUT_CLASSIFICATION	6.833327744433181E-7	DEFECT
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999812219053243	WITHOUT_CLASSIFICATION	1.877809467564322E-5	DEFECT
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9975711435686326	WITHOUT_CLASSIFICATION	0.002428856431367402	DEFECT
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999641008432428	WITHOUT_CLASSIFICATION	3.5899156757184574E-5	DEFECT
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999907002126615	WITHOUT_CLASSIFICATION	9.2997873385027E-5	DEFECT
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999359821329047	WITHOUT_CLASSIFICATION	6.401786709523817E-5	DEFECT
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999802148124906	WITHOUT_CLASSIFICATION	1.9785187509502647E-5	DEFECT
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999216332274082	WITHOUT_CLASSIFICATION	7.836677259171367E-5	DEFECT
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9997316512777746	WITHOUT_CLASSIFICATION	2.683487222254272E-4	DEFECT
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9991353511133161	WITHOUT_CLASSIFICATION	8.646488866840056E-4	DEFECT
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999165699988194	WITHOUT_CLASSIFICATION	8.343000118066381E-5	DEFECT
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999278628446107	WITHOUT_CLASSIFICATION	7.213715538935171E-5	DEFECT
Lastline	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999944971752196	WITHOUT_CLASSIFICATION	5.50282478041194E-6	DEFECT
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999228338503132	WITHOUT_CLASSIFICATION	7.716614968677861E-5	DEFECT
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999931060729993	WITHOUT_CLASSIFICATION	6.893927000691843E-5	DEFECT
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998421371869053	WITHOUT_CLASSIFICATION	1.5786281309468865E-4	DEFECT
Some helper functions:	WITHOUT_CLASSIFICATION	0.9997059507783903	WITHOUT_CLASSIFICATION	2.940492216096754E-4	DEFECT
silently ignore	WITHOUT_CLASSIFICATION	0.9999627435188071	WITHOUT_CLASSIFICATION	3.725648119284194E-5	DEFECT
used by compiler	WITHOUT_CLASSIFICATION	0.9999881167031203	WITHOUT_CLASSIFICATION	1.1883296879702228E-5	DEFECT
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999866218082096	WITHOUT_CLASSIFICATION	1.3378191790469848E-5	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997829562535037	WITHOUT_CLASSIFICATION	2.170437464964334E-4	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9999413052251526	WITHOUT_CLASSIFICATION	5.869477484747812E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995484317209512	WITHOUT_CLASSIFICATION	4.5156827904882594E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999919336537062	WITHOUT_CLASSIFICATION	8.066346293803323E-5	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.990649637652895	WITHOUT_CLASSIFICATION	0.00935036234710491	DEFECT
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.999550963449326	WITHOUT_CLASSIFICATION	4.490365506740265E-4	DEFECT
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9998998312747536	WITHOUT_CLASSIFICATION	1.0016872524647974E-4	DEFECT
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9944811372133672	WITHOUT_CLASSIFICATION	0.005518862786632913	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999568504714489	WITHOUT_CLASSIFICATION	4.314952855117802E-5	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999568504714489	WITHOUT_CLASSIFICATION	4.314952855117802E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999761737982809	WITHOUT_CLASSIFICATION	2.3826201719050214E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999761737982809	WITHOUT_CLASSIFICATION	2.3826201719050214E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999761737982809	WITHOUT_CLASSIFICATION	2.3826201719050214E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999670596579648	WITHOUT_CLASSIFICATION	3.294034203523616E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999670596579648	WITHOUT_CLASSIFICATION	3.294034203523616E-5	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9998978866749917	WITHOUT_CLASSIFICATION	1.0211332500827976E-4	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9998978866749917	WITHOUT_CLASSIFICATION	1.0211332500827976E-4	DEFECT
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9992496386888629	WITHOUT_CLASSIFICATION	7.503613111371236E-4	DEFECT
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9981274426974733	WITHOUT_CLASSIFICATION	0.0018725573025266035	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.999993743103952	WITHOUT_CLASSIFICATION	6.256896048146801E-6	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.999993743103952	WITHOUT_CLASSIFICATION	6.256896048146801E-6	DEFECT
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9988096949209607	WITHOUT_CLASSIFICATION	0.0011903050790393074	DEFECT
retrieve method module name	WITHOUT_CLASSIFICATION	0.9999629705001778	WITHOUT_CLASSIFICATION	3.702949982217998E-5	DEFECT
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9991472326025757	WITHOUT_CLASSIFICATION	8.527673974244109E-4	DEFECT
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999265605110669	WITHOUT_CLASSIFICATION	7.343948893308636E-5	DEFECT
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9984984137678923	WITHOUT_CLASSIFICATION	0.0015015862321076368	DEFECT
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9999714759672206	WITHOUT_CLASSIFICATION	2.8524032779371313E-5	DEFECT
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999928293221264	WITHOUT_CLASSIFICATION	7.170677873642847E-6	DEFECT
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999299286941497	WITHOUT_CLASSIFICATION	7.007130585037468E-5	DEFECT
caller	WITHOUT_CLASSIFICATION	0.9999927732426553	WITHOUT_CLASSIFICATION	7.226757344638839E-6	DEFECT
calltype block	WITHOUT_CLASSIFICATION	0.999985664032378	WITHOUT_CLASSIFICATION	1.4335967622138618E-5	DEFECT
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.999523022906964	WITHOUT_CLASSIFICATION	4.7697709303598355E-4	DEFECT
load arity for check	WITHOUT_CLASSIFICATION	0.9999816357361152	WITHOUT_CLASSIFICATION	1.8364263884789107E-5	DEFECT
throw	WITHOUT_CLASSIFICATION	0.9999623035484213	WITHOUT_CLASSIFICATION	3.769645157870284E-5	DEFECT
load arity for error	WITHOUT_CLASSIFICATION	0.9999440203402303	WITHOUT_CLASSIFICATION	5.597965976962632E-5	DEFECT
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999356335742283	WITHOUT_CLASSIFICATION	6.436642577168793E-5	DEFECT
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.999968285299502	WITHOUT_CLASSIFICATION	3.1714700498026624E-5	DEFECT
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
InvocationCallback	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999616839647585	WITHOUT_CLASSIFICATION	3.831603524154829E-5	DEFECT
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998081882289241	WITHOUT_CLASSIFICATION	1.9181177107585495E-4	DEFECT
load the encoding	WITHOUT_CLASSIFICATION	0.9999819534167655	WITHOUT_CLASSIFICATION	1.8046583234497495E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999051320052296	WITHOUT_CLASSIFICATION	9.486799477043466E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999051320052296	WITHOUT_CLASSIFICATION	9.486799477043466E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999051320052296	WITHOUT_CLASSIFICATION	9.486799477043466E-5	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998656648958517	WITHOUT_CLASSIFICATION	1.3433510414830954E-4	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998656648958517	WITHOUT_CLASSIFICATION	1.3433510414830954E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998656648958517	WITHOUT_CLASSIFICATION	1.3433510414830954E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998656648958517	WITHOUT_CLASSIFICATION	1.3433510414830954E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998656648958517	WITHOUT_CLASSIFICATION	1.3433510414830954E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9998931739825287	WITHOUT_CLASSIFICATION	1.0682601747124743E-4	DEFECT
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
ThreadContext	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997286301497019	WITHOUT_CLASSIFICATION	2.71369850298083E-4	DEFECT
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999958528055638	WITHOUT_CLASSIFICATION	4.1471944361210414E-6	DEFECT
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999734842317506	WITHOUT_CLASSIFICATION	2.6515768249382414E-5	DEFECT
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9989127316465748	WITHOUT_CLASSIFICATION	0.0010872683534252448	DEFECT
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998999998790805	WITHOUT_CLASSIFICATION	1.0000012091951831E-4	DEFECT
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.998554613314093	WITHOUT_CLASSIFICATION	0.0014453866859069704	DEFECT
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999749072130654	WITHOUT_CLASSIFICATION	2.50927869345202E-5	DEFECT
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999746315417485	WITHOUT_CLASSIFICATION	2.5368458251418255E-5	DEFECT
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999420751512391	WITHOUT_CLASSIFICATION	5.792484876103279E-5	DEFECT
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999269045371403	WITHOUT_CLASSIFICATION	7.309546285968677E-5	DEFECT
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999698488849607	WITHOUT_CLASSIFICATION	3.0151115039300436E-5	DEFECT
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.8499995544706467	WITHOUT_CLASSIFICATION	0.15000044552935327	DEFECT
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9998999380540194	WITHOUT_CLASSIFICATION	1.0006194598051761E-4	DEFECT
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9996999232971943	WITHOUT_CLASSIFICATION	3.000767028057304E-4	DEFECT
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9998968736600136	WITHOUT_CLASSIFICATION	1.0312633998648952E-4	DEFECT
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998424588181334	WITHOUT_CLASSIFICATION	1.5754118186666623E-4	DEFECT
signed short, big-endian	WITHOUT_CLASSIFICATION	0.999925182674128	WITHOUT_CLASSIFICATION	7.481732587190226E-5	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999480262905028	WITHOUT_CLASSIFICATION	5.197370949708444E-5	DEFECT
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9969969870331341	WITHOUT_CLASSIFICATION	0.003003012966865888	DEFECT
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.996155329137754	WITHOUT_CLASSIFICATION	0.0038446708622461084	DEFECT
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999166192588226	WITHOUT_CLASSIFICATION	8.338074117734247E-5	DEFECT
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999846367386699	WITHOUT_CLASSIFICATION	1.536326133014991E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999566700446342	WITHOUT_CLASSIFICATION	4.3329955365824616E-5	DEFECT
extension extensions	WITHOUT_CLASSIFICATION	0.9998671982034061	WITHOUT_CLASSIFICATION	1.328017965938955E-4	DEFECT
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999952059830753	WITHOUT_CLASSIFICATION	4.794016924702966E-5	DEFECT
try all extensions	WITHOUT_CLASSIFICATION	0.9999550590513394	WITHOUT_CLASSIFICATION	4.494094866065035E-5	DEFECT
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.99988527355729	WITHOUT_CLASSIFICATION	1.1472644271016094E-4	DEFECT
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999593034476421	WITHOUT_CLASSIFICATION	4.069655235803896E-5	DEFECT
try only literal search	WITHOUT_CLASSIFICATION	0.999945262876032	WITHOUT_CLASSIFICATION	5.4737123967970554E-5	DEFECT
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9998983256569564	WITHOUT_CLASSIFICATION	1.0167434304362294E-4	DEFECT
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999690613552722	WITHOUT_CLASSIFICATION	3.093864472786371E-5	DEFECT
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999821018625545	WITHOUT_CLASSIFICATION	1.789813744548626E-5	DEFECT
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9998094907786771	WITHOUT_CLASSIFICATION	1.905092213229084E-4	DEFECT
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999794162862479	WITHOUT_CLASSIFICATION	2.0583713752119836E-5	DEFECT
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999720019002963	WITHOUT_CLASSIFICATION	2.799809970358403E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9994988118564736	WITHOUT_CLASSIFICATION	5.011881435264227E-4	DEFECT
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999887577182406	WITHOUT_CLASSIFICATION	1.1242281759408446E-4	DEFECT
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999985728963341	WITHOUT_CLASSIFICATION	1.4271036659083458E-6	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998810997021391	WITHOUT_CLASSIFICATION	1.1890029786092832E-4	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998810997021391	WITHOUT_CLASSIFICATION	1.1890029786092832E-4	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999395669896329	WITHOUT_CLASSIFICATION	6.0433010367172855E-5	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999395669896329	WITHOUT_CLASSIFICATION	6.0433010367172855E-5	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9995848081359099	WITHOUT_CLASSIFICATION	4.151918640900237E-4	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9995848081359099	WITHOUT_CLASSIFICATION	4.151918640900237E-4	DEFECT
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999193347627853	WITHOUT_CLASSIFICATION	8.066523721476868E-5	DEFECT
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999806575753891	WITHOUT_CLASSIFICATION	1.9342424610815318E-5	DEFECT
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999886729088054	WITHOUT_CLASSIFICATION	1.1327091194650755E-5	DEFECT
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9998595520319017	WITHOUT_CLASSIFICATION	1.404479680983831E-4	DEFECT
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999952130176641	WITHOUT_CLASSIFICATION	4.7869823358956256E-5	DEFECT
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9991357653309617	WITHOUT_CLASSIFICATION	8.642346690382227E-4	DEFECT
signed short, native	WITHOUT_CLASSIFICATION	0.9999114700151777	WITHOUT_CLASSIFICATION	8.852998482242278E-5	DEFECT
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999764245435827	WITHOUT_CLASSIFICATION	2.357545641739242E-5	DEFECT
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999865035757022	WITHOUT_CLASSIFICATION	1.349642429779008E-4	DEFECT
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9998521532966083	WITHOUT_CLASSIFICATION	1.4784670339174964E-4	DEFECT
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9997369711945983	WITHOUT_CLASSIFICATION	2.6302880540164447E-4	DEFECT
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9999648734033018	WITHOUT_CLASSIFICATION	3.512659669824644E-5	DEFECT
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999482373246502	WITHOUT_CLASSIFICATION	5.176267534979102E-4	DEFECT
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999771147211918	WITHOUT_CLASSIFICATION	2.2885278808162638E-5	DEFECT
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999137723255977	WITHOUT_CLASSIFICATION	8.622767440229282E-4	DEFECT
write('S');	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9999529380649542	WITHOUT_CLASSIFICATION	4.7061935045730936E-5	DEFECT
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9998535188084128	WITHOUT_CLASSIFICATION	1.464811915872889E-4	DEFECT
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998531055079595	WITHOUT_CLASSIFICATION	1.468944920404677E-4	DEFECT
w_symbol	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
w_unique	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9983712254313675	WITHOUT_CLASSIFICATION	0.0016287745686324334	DEFECT
Major Minor	WITHOUT_CLASSIFICATION	0.9999134747483344	WITHOUT_CLASSIFICATION	8.652525166562857E-5	DEFECT
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999298834453634	WITHOUT_CLASSIFICATION	7.01165546366381E-5	DEFECT
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999685839032737	WITHOUT_CLASSIFICATION	3.141609672627714E-5	DEFECT
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999872547750102	WITHOUT_CLASSIFICATION	1.2745224989925962E-5	DEFECT
sic	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999347283824416	WITHOUT_CLASSIFICATION	6.527161755845288E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999347283824416	WITHOUT_CLASSIFICATION	6.527161755845288E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999347283824416	WITHOUT_CLASSIFICATION	6.527161755845288E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999342599899744	WITHOUT_CLASSIFICATION	6.574001002553656E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999342599899744	WITHOUT_CLASSIFICATION	6.574001002553656E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999103095009163	WITHOUT_CLASSIFICATION	8.969049908374868E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999103095009163	WITHOUT_CLASSIFICATION	8.969049908374868E-5	DEFECT
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999867502947942	WITHOUT_CLASSIFICATION	1.3249705205847761E-5	DEFECT
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9980306707771359	WITHOUT_CLASSIFICATION	0.0019693292228641257	DEFECT
unsigned short, native	WITHOUT_CLASSIFICATION	0.9999029419157444	WITHOUT_CLASSIFICATION	9.705808425558792E-5	DEFECT
int, native long, native	WITHOUT_CLASSIFICATION	0.9998906890028562	WITHOUT_CLASSIFICATION	1.0931099714380307E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999347283824416	WITHOUT_CLASSIFICATION	6.527161755845288E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999347283824416	WITHOUT_CLASSIFICATION	6.527161755845288E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999347283824416	WITHOUT_CLASSIFICATION	6.527161755845288E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999342599899744	WITHOUT_CLASSIFICATION	6.574001002553656E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999342599899744	WITHOUT_CLASSIFICATION	6.574001002553656E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999342599899744	WITHOUT_CLASSIFICATION	6.574001002553656E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999103095009163	WITHOUT_CLASSIFICATION	8.969049908374868E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999103095009163	WITHOUT_CLASSIFICATION	8.969049908374868E-5	DEFECT
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9998863219201625	WITHOUT_CLASSIFICATION	1.1367807983745386E-4	DEFECT
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999826802195826	WITHOUT_CLASSIFICATION	1.7319780417458133E-5	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.998819109545735	WITHOUT_CLASSIFICATION	0.0011808904542649308	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.998819109545735	WITHOUT_CLASSIFICATION	0.0011808904542649308	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.998819109545735	WITHOUT_CLASSIFICATION	0.0011808904542649308	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.998819109545735	WITHOUT_CLASSIFICATION	0.0011808904542649308	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.998819109545735	WITHOUT_CLASSIFICATION	0.0011808904542649308	DEFECT
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999696375872782	WITHOUT_CLASSIFICATION	3.0362412721772226E-5	DEFECT
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9983364784873251	WITHOUT_CLASSIFICATION	0.001663521512674943	DEFECT
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999790486121346	WITHOUT_CLASSIFICATION	2.0951387865421445E-5	DEFECT
are we at ''	WITHOUT_CLASSIFICATION	0.9999416407963018	WITHOUT_CLASSIFICATION	5.835920369822609E-5	DEFECT
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999658959624528	WITHOUT_CLASSIFICATION	3.4104037547201944E-5	DEFECT
not enough bytes	WITHOUT_CLASSIFICATION	0.9997486726809415	WITHOUT_CLASSIFICATION	2.513273190585171E-4	DEFECT
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999901532139294	WITHOUT_CLASSIFICATION	9.846786070752515E-6	DEFECT
skip inner braces	WITHOUT_CLASSIFICATION	0.999971848648792	WITHOUT_CLASSIFICATION	2.8151351208045606E-5	DEFECT
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9998945244202929	WITHOUT_CLASSIFICATION	1.0547557970703252E-4	DEFECT
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9997891805017317	WITHOUT_CLASSIFICATION	2.1081949826832184E-4	DEFECT
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999850021537067	WITHOUT_CLASSIFICATION	1.4997846293390722E-5	DEFECT
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9999218610978358	WITHOUT_CLASSIFICATION	7.81389021643459E-5	DEFECT
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9999222974491074	WITHOUT_CLASSIFICATION	7.77025508926644E-5	DEFECT
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9992395164682035	WITHOUT_CLASSIFICATION	7.604835317965965E-4	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999913958058493	WITHOUT_CLASSIFICATION	8.604194150692995E-5	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999913958058493	WITHOUT_CLASSIFICATION	8.604194150692995E-5	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999913958058493	WITHOUT_CLASSIFICATION	8.604194150692995E-5	DEFECT
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9974750224539138	WITHOUT_CLASSIFICATION	0.002524977546086211	DEFECT
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9974750224539138	WITHOUT_CLASSIFICATION	0.002524977546086211	DEFECT
SimpleSampler	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999729871184607	WITHOUT_CLASSIFICATION	2.7012881539286848E-5	DEFECT
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998694123156575	WITHOUT_CLASSIFICATION	1.3058768434241522E-4	DEFECT
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999113696350423	WITHOUT_CLASSIFICATION	8.863036495772986E-5	DEFECT
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999400472029001	WITHOUT_CLASSIFICATION	5.995279709995656E-5	DEFECT
single precision, native	WITHOUT_CLASSIFICATION	0.9999254628602581	WITHOUT_CLASSIFICATION	7.453713974190688E-5	DEFECT
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9998898126910797	WITHOUT_CLASSIFICATION	1.1018730892020157E-4	DEFECT
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999217818229865	WITHOUT_CLASSIFICATION	7.821817701349323E-5	DEFECT
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999470905631688	WITHOUT_CLASSIFICATION	5.290943683123052E-5	DEFECT
double precision, native	WITHOUT_CLASSIFICATION	0.9999342195020903	WITHOUT_CLASSIFICATION	6.578049790972302E-5	DEFECT
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999251807437874	WITHOUT_CLASSIFICATION	7.481925621255947E-5	DEFECT
signed char	WITHOUT_CLASSIFICATION	0.9999544977513166	WITHOUT_CLASSIFICATION	4.5502248683392454E-5	DEFECT
unsigned char	WITHOUT_CLASSIFICATION	0.9999525209974445	WITHOUT_CLASSIFICATION	4.747900255548673E-5	DEFECT
long, little-endian	WITHOUT_CLASSIFICATION	0.9999140764572584	WITHOUT_CLASSIFICATION	8.592354274158957E-5	DEFECT
long, big-endian	WITHOUT_CLASSIFICATION	0.9999140786740657	WITHOUT_CLASSIFICATION	8.592132593438652E-5	DEFECT
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999094758601214	WITHOUT_CLASSIFICATION	9.052413987872628E-5	DEFECT
int, native	WITHOUT_CLASSIFICATION	0.9998953828172281	WITHOUT_CLASSIFICATION	1.0461718277184622E-4	DEFECT
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998733683498671	WITHOUT_CLASSIFICATION	1.2663165013296034E-4	DEFECT
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998908829786355	WITHOUT_CLASSIFICATION	1.091170213645434E-4	DEFECT
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998755150213107	WITHOUT_CLASSIFICATION	1.2448497868932154E-4	DEFECT
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.992925344076179	WITHOUT_CLASSIFICATION	0.007074655923820922	DEFECT
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999122504127989	WITHOUT_CLASSIFICATION	8.774958720117423E-5	DEFECT
obtain a	WITHOUT_CLASSIFICATION	0.999985415753015	WITHOUT_CLASSIFICATION	1.4584246985007427E-5	DEFECT
obtain b	WITHOUT_CLASSIFICATION	0.9999905576881181	WITHOUT_CLASSIFICATION	9.442311881904409E-6	DEFECT
obtain c	WITHOUT_CLASSIFICATION	0.9999923181235344	WITHOUT_CLASSIFICATION	7.681876465568156E-6	DEFECT
obtain d	WITHOUT_CLASSIFICATION	0.9999867275148439	WITHOUT_CLASSIFICATION	1.3272485156170733E-5	DEFECT
encode.limit() -	WITHOUT_CLASSIFICATION	0.9998086061375621	WITHOUT_CLASSIFICATION	1.9139386243803225E-4	DEFECT
1	WITHOUT_CLASSIFICATION	0.9999922170692385	WITHOUT_CLASSIFICATION	7.78293076143465E-6	DEFECT
2	WITHOUT_CLASSIFICATION	0.9998686101868701	WITHOUT_CLASSIFICATION	1.3138981312981835E-4	DEFECT
3	WITHOUT_CLASSIFICATION	0.999993168310572	WITHOUT_CLASSIFICATION	6.831689428147654E-6	DEFECT
4	WITHOUT_CLASSIFICATION	0.9999818935263192	WITHOUT_CLASSIFICATION	1.8106473680937003E-5	DEFECT
5	WITHOUT_CLASSIFICATION	0.9999896291740784	WITHOUT_CLASSIFICATION	1.0370825921648406E-5	DEFECT
6	WITHOUT_CLASSIFICATION	0.9999535630856383	WITHOUT_CLASSIFICATION	4.6436914361648964E-5	DEFECT
7	WITHOUT_CLASSIFICATION	0.9999869567060593	WITHOUT_CLASSIFICATION	1.3043293940800486E-5	DEFECT
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999710989987213	WITHOUT_CLASSIFICATION	2.8901001278699643E-5	DEFECT
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999758345622365	WITHOUT_CLASSIFICATION	2.4165437763525133E-5	DEFECT
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999756985336569	WITHOUT_CLASSIFICATION	2.430146634310655E-4	DEFECT
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9971615574153696	WITHOUT_CLASSIFICATION	0.002838442584630345	DEFECT
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998938598194614	WITHOUT_CLASSIFICATION	1.0614018053845746E-4	DEFECT
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9984431095255935	WITHOUT_CLASSIFICATION	0.0015568904744065284	DEFECT
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999737250273593	WITHOUT_CLASSIFICATION	2.6274972640704227E-4	DEFECT
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9996709783898271	WITHOUT_CLASSIFICATION	3.290216101729301E-4	DEFECT
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999730675675655	WITHOUT_CLASSIFICATION	2.6932432434398432E-5	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9995167272394757	WITHOUT_CLASSIFICATION	4.832727605244124E-4	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9995453487509942	WITHOUT_CLASSIFICATION	4.5465124900571365E-4	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9995453487509942	WITHOUT_CLASSIFICATION	4.5465124900571365E-4	DEFECT
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9992235143676106	WITHOUT_CLASSIFICATION	7.764856323893874E-4	DEFECT
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998767326409912	WITHOUT_CLASSIFICATION	1.2326735900872472E-4	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999460194365845	WITHOUT_CLASSIFICATION	5.398056341551106E-4	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9975917457795576	WITHOUT_CLASSIFICATION	0.0024082542204424524	DEFECT
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9997856092241357	WITHOUT_CLASSIFICATION	2.1439077586418826E-4	DEFECT
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999256016954547	WITHOUT_CLASSIFICATION	7.439830454528706E-5	DEFECT
are we recursing?	WITHOUT_CLASSIFICATION	0.9999510617607157	WITHOUT_CLASSIFICATION	4.893823928419837E-5	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999800508187985	WITHOUT_CLASSIFICATION	1.994918120158213E-5	DEFECT
default PidGetter	WITHOUT_CLASSIFICATION	0.9999784510484577	WITHOUT_CLASSIFICATION	2.154895154230249E-5	DEFECT
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999554165364856	WITHOUT_CLASSIFICATION	4.4583463514448635E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999270872975694	WITHOUT_CLASSIFICATION	7.291270243056485E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999270872975694	WITHOUT_CLASSIFICATION	7.291270243056485E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999270872975694	WITHOUT_CLASSIFICATION	7.291270243056485E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999270872975694	WITHOUT_CLASSIFICATION	7.291270243056485E-5	DEFECT
try both	WITHOUT_CLASSIFICATION	0.9999930565740595	WITHOUT_CLASSIFICATION	6.943425940487647E-6	DEFECT
just unix	WITHOUT_CLASSIFICATION	0.9999976451637378	WITHOUT_CLASSIFICATION	2.3548362622236683E-6	DEFECT
just windows	WITHOUT_CLASSIFICATION	0.9999870930971202	WITHOUT_CLASSIFICATION	1.2906902879723053E-5	DEFECT
neither	WITHOUT_CLASSIFICATION	0.9999866506224293	WITHOUT_CLASSIFICATION	1.3349377570631004E-5	DEFECT
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9990613687654608	WITHOUT_CLASSIFICATION	9.38631234539197E-4	DEFECT
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999344755731273	WITHOUT_CLASSIFICATION	6.552442687266087E-5	DEFECT
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999084525635549	WITHOUT_CLASSIFICATION	9.154743644507702E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999775039907509	WITHOUT_CLASSIFICATION	2.249600924905408E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999775039907509	WITHOUT_CLASSIFICATION	2.249600924905408E-5	DEFECT
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999929742892489	WITHOUT_CLASSIFICATION	7.025710751008359E-6	DEFECT
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999575785978135	WITHOUT_CLASSIFICATION	4.242140218635795E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999294884682605	WITHOUT_CLASSIFICATION	7.051153173952107E-5	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.997388561238029	WITHOUT_CLASSIFICATION	0.002611438761971135	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.997388561238029	WITHOUT_CLASSIFICATION	0.002611438761971135	DEFECT
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999502771263306	WITHOUT_CLASSIFICATION	4.972287366940285E-4	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999790177156164	WITHOUT_CLASSIFICATION	2.0982284383663723E-5	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999790177156164	WITHOUT_CLASSIFICATION	2.0982284383663723E-5	DEFECT
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9994140825774742	WITHOUT_CLASSIFICATION	5.859174225258118E-4	DEFECT
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999976557074509	WITHOUT_CLASSIFICATION	2.3442925491375244E-6	DEFECT
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999977298680016	WITHOUT_CLASSIFICATION	2.270131998373031E-6	DEFECT
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9983826897596653	WITHOUT_CLASSIFICATION	0.00161731024033474	DEFECT
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9960819143266727	WITHOUT_CLASSIFICATION	0.003918085673327223	DEFECT
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999963922167977	WITHOUT_CLASSIFICATION	3.6077832023762803E-6	DEFECT
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9712706025869413	WITHOUT_CLASSIFICATION	0.028729397413058768	DEFECT
sequential	WITHOUT_CLASSIFICATION	0.9999867023045217	WITHOUT_CLASSIFICATION	1.3297695478352803E-5	DEFECT
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999920799621144	WITHOUT_CLASSIFICATION	7.920037885726828E-6	DEFECT
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999742451466224	WITHOUT_CLASSIFICATION	2.575485337766541E-5	DEFECT
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999850674527081	WITHOUT_CLASSIFICATION	1.4932547291871682E-5	DEFECT
SignalFacade	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9924328138505429	WITHOUT_CLASSIFICATION	0.007567186149457102	DEFECT
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9969977867268865	WITHOUT_CLASSIFICATION	0.003002213273113539	DEFECT
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999891509009016	WITHOUT_CLASSIFICATION	1.0849099098413219E-5	DEFECT
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9990747646012134	WITHOUT_CLASSIFICATION	9.252353987867347E-4	DEFECT
Args	WITHOUT_CLASSIFICATION	0.9999866336314669	WITHOUT_CLASSIFICATION	1.3366368533060674E-5	DEFECT
static methods only	WITHOUT_CLASSIFICATION	0.9999243984896476	WITHOUT_CLASSIFICATION	7.560151035242475E-5	DEFECT
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998970655048177	WITHOUT_CLASSIFICATION	1.0293449518239483E-4	DEFECT
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9997665258429175	WITHOUT_CLASSIFICATION	2.3347415708249556E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9991503668649006	WITHOUT_CLASSIFICATION	8.49633135099379E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9992172694420395	WITHOUT_CLASSIFICATION	7.827305579604732E-4	DEFECT
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9986695591242961	WITHOUT_CLASSIFICATION	0.0013304408757038677	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999585327789853	WITHOUT_CLASSIFICATION	4.1467221014661984E-5	DEFECT
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9388569296524797	WITHOUT_CLASSIFICATION	0.061143070347520374	DEFECT
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999602471221756	WITHOUT_CLASSIFICATION	3.975287782449725E-5	DEFECT
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999216916807737	WITHOUT_CLASSIFICATION	7.83083192262724E-5	DEFECT
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999195005266979	WITHOUT_CLASSIFICATION	8.049947330212751E-5	DEFECT
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998865878570858	WITHOUT_CLASSIFICATION	1.1341214291420871E-4	DEFECT
..	WITHOUT_CLASSIFICATION	0.9999393284089785	WITHOUT_CLASSIFICATION	6.067159102150732E-5	DEFECT
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999355936416039	WITHOUT_CLASSIFICATION	6.440635839599583E-5	DEFECT
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.6346840884434777	WITHOUT_CLASSIFICATION	0.36531591155652227	DEFECT
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9997337668825064	WITHOUT_CLASSIFICATION	2.6623311749371506E-4	DEFECT
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9999521974471784	WITHOUT_CLASSIFICATION	4.780255282159771E-5	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998503790788967	WITHOUT_CLASSIFICATION	1.4962092110323226E-4	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999332829934092	WITHOUT_CLASSIFICATION	6.671700659074494E-5	DEFECT
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9998228595309837	WITHOUT_CLASSIFICATION	1.7714046901628114E-4	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998503790788967	WITHOUT_CLASSIFICATION	1.4962092110323226E-4	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999332829934092	WITHOUT_CLASSIFICATION	6.671700659074494E-5	DEFECT
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999134111858425	WITHOUT_CLASSIFICATION	8.65888141574271E-5	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.999929677975938	WITHOUT_CLASSIFICATION	7.032202406205886E-5	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.999929677975938	WITHOUT_CLASSIFICATION	7.032202406205886E-5	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998565161934425	WITHOUT_CLASSIFICATION	1.4348380655760325E-4	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9933231399435472	WITHOUT_CLASSIFICATION	0.006676860056452884	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999708928477145	WITHOUT_CLASSIFICATION	2.910715228560821E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999491823963386	WITHOUT_CLASSIFICATION	5.0817603661372996E-5	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9961830999694671	WITHOUT_CLASSIFICATION	0.003816900030532884	DEFECT
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9991474640862196	WITHOUT_CLASSIFICATION	8.525359137805448E-4	DEFECT
'.' is printed	WITHOUT_CLASSIFICATION	0.9998049511478222	WITHOUT_CLASSIFICATION	1.9504885217780444E-4	DEFECT
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999337986904556	WITHOUT_CLASSIFICATION	6.620130954438532E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999085723122385	WITHOUT_CLASSIFICATION	9.14276877614128E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999877005258034	WITHOUT_CLASSIFICATION	1.2299474196623281E-5	DEFECT
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9999154367160877	WITHOUT_CLASSIFICATION	8.456328391222046E-5	DEFECT
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999115741727325	WITHOUT_CLASSIFICATION	8.842582726751535E-5	DEFECT
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998343486059735	WITHOUT_CLASSIFICATION	1.656513940263876E-4	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999715904136479	WITHOUT_CLASSIFICATION	2.8409586352152005E-5	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999715904136479	WITHOUT_CLASSIFICATION	2.8409586352152005E-5	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.9998200839834421	WITHOUT_CLASSIFICATION	1.799160165578336E-4	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.9998200839834421	WITHOUT_CLASSIFICATION	1.799160165578336E-4	DEFECT
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999586569581954	WITHOUT_CLASSIFICATION	4.134304180463645E-5	DEFECT
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
(1|intlen)	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9998328577049531	WITHOUT_CLASSIFICATION	1.671422950468731E-4	DEFECT
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999492242293936	WITHOUT_CLASSIFICATION	5.077577060636401E-5	DEFECT
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999708928477145	WITHOUT_CLASSIFICATION	2.910715228560821E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999491823963386	WITHOUT_CLASSIFICATION	5.0817603661372996E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999085723122385	WITHOUT_CLASSIFICATION	9.14276877614128E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999877005258034	WITHOUT_CLASSIFICATION	1.2299474196623281E-5	DEFECT
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999490875000263	WITHOUT_CLASSIFICATION	5.09124999736972E-5	DEFECT
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999932569704463	WITHOUT_CLASSIFICATION	6.743029553707143E-5	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
dangling '%' char	WITHOUT_CLASSIFICATION	0.999945600764935	WITHOUT_CLASSIFICATION	5.439923506493393E-5	DEFECT
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998731968415177	WITHOUT_CLASSIFICATION	1.2680315848234347E-4	DEFECT
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999555711414753	WITHOUT_CLASSIFICATION	4.442885852472389E-5	DEFECT
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.999454342855125	WITHOUT_CLASSIFICATION	5.456571448749457E-4	DEFECT
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999914161844897	WITHOUT_CLASSIFICATION	8.583815510301641E-5	DEFECT
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999603135880344	WITHOUT_CLASSIFICATION	3.9686411965567765E-5	DEFECT
negative values	WITHOUT_CLASSIFICATION	0.9998606652796483	WITHOUT_CLASSIFICATION	1.3933472035154896E-4	DEFECT
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9975697340565105	WITHOUT_CLASSIFICATION	0.0024302659434894455	DEFECT
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999047661275422	WITHOUT_CLASSIFICATION	9.523387245778976E-5	DEFECT
no such luck...	WITHOUT_CLASSIFICATION	0.9999838225533295	WITHOUT_CLASSIFICATION	1.6177446670408815E-5	DEFECT
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999403684150201	WITHOUT_CLASSIFICATION	5.9631584979779324E-5	DEFECT
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999936571459498	WITHOUT_CLASSIFICATION	6.3428540503183555E-6	DEFECT
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999843143460292	WITHOUT_CLASSIFICATION	1.5685653970864844E-5	DEFECT
constant vector a	WITHOUT_CLASSIFICATION	0.9999010300641142	WITHOUT_CLASSIFICATION	9.896993588576076E-5	DEFECT
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9998235431897979	WITHOUT_CLASSIFICATION	1.764568102020342E-4	DEFECT
least significant r bits	WITHOUT_CLASSIFICATION	0.9999094186430694	WITHOUT_CLASSIFICATION	9.058135693065955E-5	DEFECT
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999088382154896	WITHOUT_CLASSIFICATION	9.116178451045091E-5	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999088382154896	WITHOUT_CLASSIFICATION	9.116178451045091E-5	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999088382154896	WITHOUT_CLASSIFICATION	9.116178451045091E-5	DEFECT
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9996005532003324	WITHOUT_CLASSIFICATION	3.9944679966768604E-4	DEFECT
Tempering	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999905303918237	WITHOUT_CLASSIFICATION	9.469608176256215E-6	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9998333293621651	WITHOUT_CLASSIFICATION	1.6667063783487793E-4	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9998333293621651	WITHOUT_CLASSIFICATION	1.6667063783487793E-4	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9998183986905853	WITHOUT_CLASSIFICATION	1.8160130941483808E-4	DEFECT
no number	WITHOUT_CLASSIFICATION	0.9999937685344272	WITHOUT_CLASSIFICATION	6.231465572758178E-6	DEFECT
trailing garbage	WITHOUT_CLASSIFICATION	0.9999400297791115	WITHOUT_CLASSIFICATION	5.997022088841588E-5	DEFECT
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9997334704812998	WITHOUT_CLASSIFICATION	2.6652951870015265E-4	DEFECT
it was not found at all!	WITHOUT_CLASSIFICATION	0.9997509552258622	WITHOUT_CLASSIFICATION	2.4904477413779794E-4	DEFECT
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9990838278841835	WITHOUT_CLASSIFICATION	9.161721158164216E-4	DEFECT
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999271433421844	WITHOUT_CLASSIFICATION	7.285665781567196E-5	DEFECT
goto next bucket	WITHOUT_CLASSIFICATION	0.9994466579977368	WITHOUT_CLASSIFICATION	5.533420022631887E-4	DEFECT
we reached the end	WITHOUT_CLASSIFICATION	0.9997114522198418	WITHOUT_CLASSIFICATION	2.8854778015818724E-4	DEFECT
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999868625831358	WITHOUT_CLASSIFICATION	1.3137416864196966E-4	DEFECT
states	WITHOUT_CLASSIFICATION	0.9999880525004654	WITHOUT_CLASSIFICATION	1.1947499534563973E-5	DEFECT
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9999642198252086	WITHOUT_CLASSIFICATION	3.5780174791385826E-5	DEFECT
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999524805927527	WITHOUT_CLASSIFICATION	4.751940724732332E-5	DEFECT
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999909242444498	WITHOUT_CLASSIFICATION	9.075755550235815E-6	DEFECT
drop through for sign	WITHOUT_CLASSIFICATION	0.9999599875455002	WITHOUT_CLASSIFICATION	4.0012454499706326E-5	DEFECT
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9996729371873443	WITHOUT_CLASSIFICATION	3.2706281265572004E-4	DEFECT
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999946551741898	WITHOUT_CLASSIFICATION	5.344825810202241E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999810190562488	WITHOUT_CLASSIFICATION	1.898094375114971E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999652013948176	WITHOUT_CLASSIFICATION	3.4798605182359834E-5	DEFECT
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999913886507212	WITHOUT_CLASSIFICATION	8.611349278807592E-6	DEFECT
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999609087472412	WITHOUT_CLASSIFICATION	3.9091252758794935E-5	DEFECT
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999829408687056	WITHOUT_CLASSIFICATION	1.7059131294334485E-5	DEFECT
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9998349940297913	WITHOUT_CLASSIFICATION	1.650059702087344E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998943599179075	WITHOUT_CLASSIFICATION	1.0564008209244128E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998943599179075	WITHOUT_CLASSIFICATION	1.0564008209244128E-4	DEFECT
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9999981746954959	WITHOUT_CLASSIFICATION	1.8253045041422538E-6	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999650127728229	WITHOUT_CLASSIFICATION	3.498722717713816E-5	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999650127728229	WITHOUT_CLASSIFICATION	3.498722717713816E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999406647653515	WITHOUT_CLASSIFICATION	5.933523464857368E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999406647653515	WITHOUT_CLASSIFICATION	5.933523464857368E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999882712553627	WITHOUT_CLASSIFICATION	1.172874463728375E-5	DEFECT
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999545036966468	WITHOUT_CLASSIFICATION	4.549630335307513E-5	DEFECT
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999818104349644	WITHOUT_CLASSIFICATION	1.8189565035566643E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999918938926584	WITHOUT_CLASSIFICATION	8.106107341504749E-6	DEFECT
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998452957976126	WITHOUT_CLASSIFICATION	1.5470420238742415E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999810190562488	WITHOUT_CLASSIFICATION	1.898094375114971E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999810190562488	WITHOUT_CLASSIFICATION	1.898094375114971E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999810190562488	WITHOUT_CLASSIFICATION	1.898094375114971E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999652013948176	WITHOUT_CLASSIFICATION	3.4798605182359834E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998943599179075	WITHOUT_CLASSIFICATION	1.0564008209244128E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998943599179075	WITHOUT_CLASSIFICATION	1.0564008209244128E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998943599179075	WITHOUT_CLASSIFICATION	1.0564008209244128E-4	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999882712553627	WITHOUT_CLASSIFICATION	1.172874463728375E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999882712553627	WITHOUT_CLASSIFICATION	1.172874463728375E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999882712553627	WITHOUT_CLASSIFICATION	1.172874463728375E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999918938926584	WITHOUT_CLASSIFICATION	8.106107341504749E-6	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999918938926584	WITHOUT_CLASSIFICATION	8.106107341504749E-6	DEFECT
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999539530737159	WITHOUT_CLASSIFICATION	4.604692628407466E-5	DEFECT
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999943321058911	WITHOUT_CLASSIFICATION	5.6678941089152206E-6	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999993084489897	WITHOUT_CLASSIFICATION	6.9155101030830465E-6	DEFECT
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.5390220134992306	WITHOUT_CLASSIFICATION	0.4609779865007694	DEFECT
no digits, error	WITHOUT_CLASSIFICATION	0.999983999510974	WITHOUT_CLASSIFICATION	1.6000489025912913E-5	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9998467904567099	WITHOUT_CLASSIFICATION	1.5320954329010116E-4	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9998467904567099	WITHOUT_CLASSIFICATION	1.5320954329010116E-4	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998611360999267	WITHOUT_CLASSIFICATION	1.388639000733625E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999324781164606	WITHOUT_CLASSIFICATION	6.752188353941407E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999324781164606	WITHOUT_CLASSIFICATION	6.752188353941407E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999324781164606	WITHOUT_CLASSIFICATION	6.752188353941407E-5	DEFECT
first char must be digit	WITHOUT_CLASSIFICATION	0.999969224283905	WITHOUT_CLASSIFICATION	3.0775716094965805E-5	DEFECT
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999867036645169	WITHOUT_CLASSIFICATION	1.3296335483061256E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999652013948176	WITHOUT_CLASSIFICATION	3.4798605182359834E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999882712553627	WITHOUT_CLASSIFICATION	1.172874463728375E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999882712553627	WITHOUT_CLASSIFICATION	1.172874463728375E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999324781164606	WITHOUT_CLASSIFICATION	6.752188353941407E-5	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998611360999267	WITHOUT_CLASSIFICATION	1.388639000733625E-4	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999721347739083	WITHOUT_CLASSIFICATION	2.786522609163807E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9997316628813641	WITHOUT_CLASSIFICATION	2.6833711863596466E-4	DEFECT
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999334319081287	WITHOUT_CLASSIFICATION	6.65680918713546E-5	DEFECT
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999627198543085	WITHOUT_CLASSIFICATION	3.728014569156121E-5	DEFECT
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999368946369139	WITHOUT_CLASSIFICATION	6.310536308604731E-5	DEFECT
arg cannot be negative	WITHOUT_CLASSIFICATION	0.999383030100878	WITHOUT_CLASSIFICATION	6.169698991220304E-4	DEFECT
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999925332976557	WITHOUT_CLASSIFICATION	7.466702344244121E-6	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999917098884292	WITHOUT_CLASSIFICATION	8.29011157079302E-6	DEFECT
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999590569244957	WITHOUT_CLASSIFICATION	4.094307550433386E-5	DEFECT
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998369022692782	WITHOUT_CLASSIFICATION	1.6309773072175466E-4	DEFECT
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999310862102251	WITHOUT_CLASSIFICATION	6.89137897748421E-5	DEFECT
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999656022777086	WITHOUT_CLASSIFICATION	3.43977222914247E-5	DEFECT
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9998878074143556	WITHOUT_CLASSIFICATION	1.1219258564448686E-4	DEFECT
advance to first entry	WITHOUT_CLASSIFICATION	0.9999788608122094	WITHOUT_CLASSIFICATION	2.113918779054491E-5	DEFECT
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999947772011853	WITHOUT_CLASSIFICATION	5.222798814696339E-6	DEFECT
package-protected	WITHOUT_CLASSIFICATION	0.9999134104711854	WITHOUT_CLASSIFICATION	8.658952881457565E-5	DEFECT
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999927854300992	WITHOUT_CLASSIFICATION	7.2145699007899234E-6	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9990811369835866	WITHOUT_CLASSIFICATION	9.188630164134194E-4	DEFECT
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998487912440887	WITHOUT_CLASSIFICATION	1.5120875591137918E-4	DEFECT
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999574179323575	WITHOUT_CLASSIFICATION	4.258206764251513E-5	DEFECT
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999994946057676	WITHOUT_CLASSIFICATION	5.05394232399734E-6	DEFECT
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999121363910245	WITHOUT_CLASSIFICATION	8.786360897551842E-5	DEFECT
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999547875388626	WITHOUT_CLASSIFICATION	4.521246113747724E-5	DEFECT
unread back	WITHOUT_CLASSIFICATION	0.9999293712554075	WITHOUT_CLASSIFICATION	7.062874459240519E-5	DEFECT
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999741709452395	WITHOUT_CLASSIFICATION	2.5829054760412143E-5	DEFECT
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999239137171012	WITHOUT_CLASSIFICATION	7.608628289868232E-5	DEFECT
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999752843250829	WITHOUT_CLASSIFICATION	2.471567491713684E-5	DEFECT
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999994770436	WITHOUT_CLASSIFICATION	5.229563999469425E-7	DEFECT
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999884978748702	WITHOUT_CLASSIFICATION	1.1502125129846427E-5	DEFECT
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9999334849234415	WITHOUT_CLASSIFICATION	6.651507655861386E-5	DEFECT
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999757044875296	WITHOUT_CLASSIFICATION	2.4295512470441636E-5	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999721347739083	WITHOUT_CLASSIFICATION	2.786522609163807E-5	DEFECT
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999771803006383	WITHOUT_CLASSIFICATION	2.2819699361638266E-5	DEFECT
not closing from finalize	WITHOUT_CLASSIFICATION	0.9995386637650655	WITHOUT_CLASSIFICATION	4.6133623493444333E-4	DEFECT
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9995727017224555	WITHOUT_CLASSIFICATION	4.27298277544602E-4	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.99982822176717	WITHOUT_CLASSIFICATION	1.7177823282997154E-4	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.99982822176717	WITHOUT_CLASSIFICATION	1.7177823282997154E-4	DEFECT
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999326773585128	WITHOUT_CLASSIFICATION	6.732264148730908E-5	DEFECT
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999910939040637	WITHOUT_CLASSIFICATION	8.906095936361183E-6	DEFECT
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999370259701331	WITHOUT_CLASSIFICATION	6.297402986685084E-5	DEFECT
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999451691956732	WITHOUT_CLASSIFICATION	5.483080432691443E-5	DEFECT
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999851151896133	WITHOUT_CLASSIFICATION	1.4884810386757818E-5	DEFECT
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999413489211261	WITHOUT_CLASSIFICATION	5.8651078873950995E-5	DEFECT
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.998174037009773	WITHOUT_CLASSIFICATION	0.0018259629902269761	DEFECT
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999904854613387	WITHOUT_CLASSIFICATION	9.514538661172283E-6	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999401777884043	WITHOUT_CLASSIFICATION	5.982221159567432E-5	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9988309492749929	WITHOUT_CLASSIFICATION	0.0011690507250070666	DEFECT
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9994063017780694	WITHOUT_CLASSIFICATION	5.936982219305092E-4	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999785122301209	WITHOUT_CLASSIFICATION	2.1487769879129204E-5	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999785122301209	WITHOUT_CLASSIFICATION	2.1487769879129204E-5	DEFECT
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9991913093918223	WITHOUT_CLASSIFICATION	8.086906081777002E-4	DEFECT
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9999446933908726	WITHOUT_CLASSIFICATION	5.530660912747538E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999787399286817	WITHOUT_CLASSIFICATION	2.126007131826126E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999787399286817	WITHOUT_CLASSIFICATION	2.126007131826126E-5	DEFECT
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999888108772663	WITHOUT_CLASSIFICATION	1.118912273367997E-5	DEFECT
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999791683028183	WITHOUT_CLASSIFICATION	2.0831697181731113E-5	DEFECT
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9998262420437388	WITHOUT_CLASSIFICATION	1.7375795626127546E-4	DEFECT
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998666856701874	WITHOUT_CLASSIFICATION	1.3331432981261368E-4	DEFECT
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999488306210351	WITHOUT_CLASSIFICATION	5.116937896485481E-5	DEFECT
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998044098015972	WITHOUT_CLASSIFICATION	1.9559019840281313E-4	DEFECT
save the ungot	WITHOUT_CLASSIFICATION	0.9999422202210574	WITHOUT_CLASSIFICATION	5.777977894261732E-5	DEFECT
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999917804599094	WITHOUT_CLASSIFICATION	8.219540090503537E-6	DEFECT
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9997899355285592	WITHOUT_CLASSIFICATION	2.1006447144080297E-4	DEFECT
flush first	WITHOUT_CLASSIFICATION	0.9999758216467176	WITHOUT_CLASSIFICATION	2.4178353282415073E-5	DEFECT
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9998281434035962	WITHOUT_CLASSIFICATION	1.7185659640378195E-4	DEFECT
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9999501621932471	WITHOUT_CLASSIFICATION	4.983780675295057E-5	DEFECT
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999881392590672	WITHOUT_CLASSIFICATION	1.18607409327659E-5	DEFECT
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.999889502988498	WITHOUT_CLASSIFICATION	1.1049701150201E-4	DEFECT
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999829005557384	WITHOUT_CLASSIFICATION	1.709944426169527E-5	DEFECT
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.996550269496284	WITHOUT_CLASSIFICATION	0.0034497305037160106	DEFECT
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998134587345051	WITHOUT_CLASSIFICATION	1.865412654948396E-4	DEFECT
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999049436899956	WITHOUT_CLASSIFICATION	9.505631000428152E-5	DEFECT
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9998527878363178	WITHOUT_CLASSIFICATION	1.472121636821497E-4	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999737490004283	WITHOUT_CLASSIFICATION	2.625099957159544E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9382853406965032	WITHOUT_CLASSIFICATION	0.06171465930349679	DEFECT
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999592396818155	WITHOUT_CLASSIFICATION	4.076031818441854E-5	DEFECT
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999712094506013	WITHOUT_CLASSIFICATION	2.879054939874566E-5	DEFECT
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999842721190757	WITHOUT_CLASSIFICATION	1.5727880924323654E-5	DEFECT
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999723551701265	WITHOUT_CLASSIFICATION	2.7644829873474388E-5	DEFECT
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9999153184110432	WITHOUT_CLASSIFICATION	8.468158895675036E-5	DEFECT
else leave it null	WITHOUT_CLASSIFICATION	0.9997851404920501	WITHOUT_CLASSIFICATION	2.1485950794990078E-4	DEFECT
TypeMatcher	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9993526401361101	WITHOUT_CLASSIFICATION	6.473598638898366E-4	DEFECT
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999388619864727	WITHOUT_CLASSIFICATION	6.113801352728918E-5	DEFECT
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999977637078909	WITHOUT_CLASSIFICATION	2.236292109113034E-5	DEFECT
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999612801382712	WITHOUT_CLASSIFICATION	3.8719861728718736E-5	DEFECT
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9998655145113975	WITHOUT_CLASSIFICATION	1.3448548860256043E-4	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999011715482254	WITHOUT_CLASSIFICATION	9.882845177446465E-5	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999011715482254	WITHOUT_CLASSIFICATION	9.882845177446465E-5	DEFECT
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999854171607399	WITHOUT_CLASSIFICATION	1.4582839260174535E-5	DEFECT
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999866563342443	WITHOUT_CLASSIFICATION	1.3343665755696517E-5	DEFECT
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999868545654668	WITHOUT_CLASSIFICATION	1.3145434533192452E-4	DEFECT
Init	WITHOUT_CLASSIFICATION	0.9999875574371212	WITHOUT_CLASSIFICATION	1.244256287874137E-5	DEFECT
Block	WITHOUT_CLASSIFICATION	0.9999865919889499	WITHOUT_CLASSIFICATION	1.3408011050152524E-5	DEFECT
Copy constructor	WITHOUT_CLASSIFICATION	0.9999686140069483	WITHOUT_CLASSIFICATION	3.138599305180485E-5	DEFECT
presumably this require should fail	WITHOUT_CLASSIFICATION	0.993047439994269	WITHOUT_CLASSIFICATION	0.006952560005730943	DEFECT
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.993047439994269	WITHOUT_CLASSIFICATION	0.006952560005730943	DEFECT
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9997546167541362	WITHOUT_CLASSIFICATION	2.4538324586368684E-4	DEFECT
ok	WITHOUT_CLASSIFICATION	0.9999905628368181	WITHOUT_CLASSIFICATION	9.437163181863876E-6	DEFECT
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999877607329241	WITHOUT_CLASSIFICATION	1.223926707591017E-4	DEFECT
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9691447489906494	WITHOUT_CLASSIFICATION	0.030855251009350576	DEFECT
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999624126485543	WITHOUT_CLASSIFICATION	3.758735144577455E-5	DEFECT
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9998884389253999	WITHOUT_CLASSIFICATION	1.1156107460015813E-4	DEFECT
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999882654761577	WITHOUT_CLASSIFICATION	1.173452384232507E-5	DEFECT
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999819573349048	WITHOUT_CLASSIFICATION	1.804266509522242E-5	DEFECT
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9997736899127908	WITHOUT_CLASSIFICATION	2.2631008720919982E-4	DEFECT
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999249301390932	WITHOUT_CLASSIFICATION	7.506986090679528E-5	DEFECT
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999060468840949	WITHOUT_CLASSIFICATION	9.39531159049949E-5	DEFECT
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999468965342795	WITHOUT_CLASSIFICATION	5.310346572052733E-5	DEFECT
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999337771428649	WITHOUT_CLASSIFICATION	6.622285713511639E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999941140025173	WITHOUT_CLASSIFICATION	5.88599748272857E-6	DEFECT
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9998904970632084	WITHOUT_CLASSIFICATION	1.0950293679148325E-4	DEFECT
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997477699817158	WITHOUT_CLASSIFICATION	2.5223001828421994E-4	DEFECT
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9992083067184638	WITHOUT_CLASSIFICATION	7.916932815360687E-4	DEFECT
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999579798242231	WITHOUT_CLASSIFICATION	4.202017577698811E-5	DEFECT
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998905952524133	WITHOUT_CLASSIFICATION	1.094047475867565E-4	DEFECT
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
void methods should work	WITHOUT_CLASSIFICATION	0.9982767133374879	WITHOUT_CLASSIFICATION	0.0017232866625120063	DEFECT
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9992778940793186	WITHOUT_CLASSIFICATION	7.221059206814765E-4	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999884724764917	WITHOUT_CLASSIFICATION	1.1527523508426938E-5	DEFECT
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999964959944532	WITHOUT_CLASSIFICATION	3.504005546861105E-6	DEFECT
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999553330279538	WITHOUT_CLASSIFICATION	4.4666972046107074E-5	DEFECT
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
int n = 10;	WITHOUT_CLASSIFICATION	0.9995047820216612	WITHOUT_CLASSIFICATION	4.952179783388092E-4	DEFECT
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999646207250651	WITHOUT_CLASSIFICATION	3.537927493494589E-5	DEFECT
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999562984434723	WITHOUT_CLASSIFICATION	4.370155652768041E-5	DEFECT
value equality	WITHOUT_CLASSIFICATION	0.9999313995582216	WITHOUT_CLASSIFICATION	6.860044177841516E-5	DEFECT
identity equality	WITHOUT_CLASSIFICATION	0.9999276196288622	WITHOUT_CLASSIFICATION	7.238037113780989E-5	DEFECT
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998793719754969	WITHOUT_CLASSIFICATION	1.2062802450298188E-4	DEFECT
bench Integer fib	WITHOUT_CLASSIFICATION	0.9999162557442353	WITHOUT_CLASSIFICATION	8.374425576469094E-5	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999126492369701	WITHOUT_CLASSIFICATION	8.735076302988939E-5	DEFECT
bench Long fib	WITHOUT_CLASSIFICATION	0.9999134071031685	WITHOUT_CLASSIFICATION	8.659289683148984E-5	DEFECT
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999197672756815	WITHOUT_CLASSIFICATION	8.023272431854393E-5	DEFECT
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999918699911681	WITHOUT_CLASSIFICATION	8.130008831888053E-5	DEFECT
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999582944617804	WITHOUT_CLASSIFICATION	4.170553821956634E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995537917060113	WITHOUT_CLASSIFICATION	4.462082939886922E-4	DEFECT
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.99752888904922	WITHOUT_CLASSIFICATION	0.0024711109507800652	DEFECT
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999769689738075	WITHOUT_CLASSIFICATION	2.3031026192466463E-5	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999898520393691	WITHOUT_CLASSIFICATION	1.0147960630975385E-5	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9988457162329982	WITHOUT_CLASSIFICATION	0.0011542837670018215	DEFECT
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9997542708187942	WITHOUT_CLASSIFICATION	2.457291812057362E-4	DEFECT
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9998432851720844	WITHOUT_CLASSIFICATION	1.567148279155494E-4	DEFECT
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9998966698169	WITHOUT_CLASSIFICATION	1.0333018310007314E-4	DEFECT
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.9990335901092534	WITHOUT_CLASSIFICATION	9.664098907465459E-4	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9998079054936456	WITHOUT_CLASSIFICATION	1.9209450635435343E-4	DEFECT
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999607160292998	WITHOUT_CLASSIFICATION	3.9283970700212786E-5	DEFECT
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9108802459935358	WITHOUT_CLASSIFICATION	0.08911975400646421	DEFECT
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999734041674916	WITHOUT_CLASSIFICATION	2.659583250847722E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998677528838443	WITHOUT_CLASSIFICATION	1.3224711615572688E-4	DEFECT
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999543538715467	WITHOUT_CLASSIFICATION	4.564612845336464E-5	DEFECT
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999971770041516	WITHOUT_CLASSIFICATION	2.822995848444883E-6	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999711459582939	WITHOUT_CLASSIFICATION	2.8854041706097955E-4	DEFECT
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999960037042713	WITHOUT_CLASSIFICATION	3.99629572865705E-6	DEFECT
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999625874613819	WITHOUT_CLASSIFICATION	3.7412538618144864E-5	DEFECT
construct the proxy method	WITHOUT_CLASSIFICATION	0.9999701307622938	WITHOUT_CLASSIFICATION	2.9869237706314276E-5	DEFECT
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998883984963715	WITHOUT_CLASSIFICATION	1.1160150362849624E-4	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999260833804462	WITHOUT_CLASSIFICATION	7.39166195537956E-5	DEFECT
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998883984963715	WITHOUT_CLASSIFICATION	1.1160150362849624E-4	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999505905018091	WITHOUT_CLASSIFICATION	4.940949819079203E-5	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999260833804462	WITHOUT_CLASSIFICATION	7.39166195537956E-5	DEFECT
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999931066936545	WITHOUT_CLASSIFICATION	6.893306345481789E-6	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999585327789853	WITHOUT_CLASSIFICATION	4.1467221014661984E-5	DEFECT
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9997065663057019	WITHOUT_CLASSIFICATION	2.9343369429815375E-4	DEFECT
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.983042254454792	WITHOUT_CLASSIFICATION	0.016957745545207993	DEFECT
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999792692774958	WITHOUT_CLASSIFICATION	2.0730722504230912E-5	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.998819109545735	WITHOUT_CLASSIFICATION	0.0011808904542649308	DEFECT
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9998601764882853	WITHOUT_CLASSIFICATION	1.3982351171467816E-4	DEFECT
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999753383393564	WITHOUT_CLASSIFICATION	2.4661660643579132E-5	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9933231399435472	WITHOUT_CLASSIFICATION	0.006676860056452884	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999737490004283	WITHOUT_CLASSIFICATION	2.625099957159544E-5	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999993084489897	WITHOUT_CLASSIFICATION	6.9155101030830465E-6	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9965355371646909	WITHOUT_CLASSIFICATION	0.0034644628353091025	DEFECT
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999814963352938	WITHOUT_CLASSIFICATION	1.8503664706269494E-5	DEFECT
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999889567590036	WITHOUT_CLASSIFICATION	1.1043240996361806E-5	DEFECT
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9997316628813641	WITHOUT_CLASSIFICATION	2.6833711863596466E-4	DEFECT
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9998446972128813	WITHOUT_CLASSIFICATION	1.5530278711879672E-4	DEFECT
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999871715786315	WITHOUT_CLASSIFICATION	1.28284213683807E-5	DEFECT
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9979595819303658	WITHOUT_CLASSIFICATION	0.0020404180696341236	DEFECT
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9939911876774066	WITHOUT_CLASSIFICATION	0.006008812322593422	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999936773778356	WITHOUT_CLASSIFICATION	6.322622164415447E-6	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999984850667629	WITHOUT_CLASSIFICATION	1.514933237023909E-6	DEFECT
constructor	WITHOUT_CLASSIFICATION	0.9999653261155518	WITHOUT_CLASSIFICATION	3.4673884448271496E-5	DEFECT
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9994316264818462	WITHOUT_CLASSIFICATION	5.683735181537681E-4	DEFECT
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999975003817217	WITHOUT_CLASSIFICATION	2.499618278331829E-6	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9974479156380567	WITHOUT_CLASSIFICATION	0.0025520843619433703	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999905488225526	WITHOUT_CLASSIFICATION	9.451177447349362E-6	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999511984411167	WITHOUT_CLASSIFICATION	4.8801558883373475E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999511984411167	WITHOUT_CLASSIFICATION	4.8801558883373475E-5	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998829280141971	WITHOUT_CLASSIFICATION	1.1707198580283216E-4	DEFECT
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999876174080432	WITHOUT_CLASSIFICATION	1.238259195678867E-5	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997915260451634	WITHOUT_CLASSIFICATION	2.084739548366283E-4	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9999219766094851	WITHOUT_CLASSIFICATION	7.802339051482972E-5	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999626769698243	WITHOUT_CLASSIFICATION	3.732303017560826E-5	DEFECT
"else" body	WITHOUT_CLASSIFICATION	0.9999032369942225	WITHOUT_CLASSIFICATION	9.676300577756397E-5	DEFECT
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.9934968179452771	WITHOUT_CLASSIFICATION	0.006503182054722923	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999854202548272	WITHOUT_CLASSIFICATION	1.4579745172895703E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.999887134067417	WITHOUT_CLASSIFICATION	1.1286593258297604E-4	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.999887134067417	WITHOUT_CLASSIFICATION	1.1286593258297604E-4	DEFECT
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9998871072576928	WITHOUT_CLASSIFICATION	1.128927423071842E-4	DEFECT
10!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999724288104803	WITHOUT_CLASSIFICATION	2.7571189519642158E-5	DEFECT
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8970124099587166	WITHOUT_CLASSIFICATION	0.10298759004128347	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999796730199864	WITHOUT_CLASSIFICATION	2.0326980013712338E-5	DEFECT
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998194772591562	WITHOUT_CLASSIFICATION	1.805227408438631E-4	DEFECT
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9988261410462363	WITHOUT_CLASSIFICATION	0.0011738589537636337	DEFECT
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999070005427406	WITHOUT_CLASSIFICATION	9.299945725941541E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999505905018091	WITHOUT_CLASSIFICATION	4.940949819079203E-5	DEFECT
line 449	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 495	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
Management/monitoring	WITHOUT_CLASSIFICATION	0.9999087984885175	WITHOUT_CLASSIFICATION	9.120151148251503E-5	DEFECT
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999967083076833	WITHOUT_CLASSIFICATION	3.2916923166698233E-6	DEFECT
14!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999925179098632	WITHOUT_CLASSIFICATION	7.4820901367888135E-6	DEFECT
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999781011778471	WITHOUT_CLASSIFICATION	2.1898822152831738E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999220095253585	WITHOUT_CLASSIFICATION	7.799047464160791E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999220095253585	WITHOUT_CLASSIFICATION	7.799047464160791E-5	DEFECT
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999724288104803	WITHOUT_CLASSIFICATION	2.7571189519642158E-5	DEFECT
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999899241179594	WITHOUT_CLASSIFICATION	1.0075882040589789E-5	DEFECT
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9571227018846686	WITHOUT_CLASSIFICATION	0.04287729811533139	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999624063551809	WITHOUT_CLASSIFICATION	3.759364481924167E-5	DEFECT
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999913432651398	WITHOUT_CLASSIFICATION	8.656734860207196E-5	DEFECT
18!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997942090598455	WITHOUT_CLASSIFICATION	2.0579094015456246E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999352754491293	WITHOUT_CLASSIFICATION	6.472455087067512E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999352754491293	WITHOUT_CLASSIFICATION	6.472455087067512E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999352754491293	WITHOUT_CLASSIFICATION	6.472455087067512E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999352754491293	WITHOUT_CLASSIFICATION	6.472455087067512E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999421948442124	WITHOUT_CLASSIFICATION	5.780515578761499E-5	DEFECT
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9986913778908977	WITHOUT_CLASSIFICATION	0.001308622109102385	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997667379589587	WITHOUT_CLASSIFICATION	2.3326204104140053E-4	DEFECT
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999408786472748	WITHOUT_CLASSIFICATION	5.912135272535723E-5	DEFECT
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999968170732397	WITHOUT_CLASSIFICATION	3.1829267601991693E-6	DEFECT
22!	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9999385595343119	WITHOUT_CLASSIFICATION	6.144046568814566E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998805705074278	WITHOUT_CLASSIFICATION	1.1942949257215175E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999086395148484	WITHOUT_CLASSIFICATION	9.13604851515565E-5	DEFECT
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999223627441843	WITHOUT_CLASSIFICATION	7.763725581577442E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999646738384342	WITHOUT_CLASSIFICATION	3.5326161565859914E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999646738384342	WITHOUT_CLASSIFICATION	3.5326161565859914E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.995401585338553	WITHOUT_CLASSIFICATION	0.004598414661446924	DEFECT
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999780231826133	WITHOUT_CLASSIFICATION	2.197681738669761E-5	DEFECT
BASE64	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999938575348224	WITHOUT_CLASSIFICATION	6.142465177569587E-6	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999746151298918	WITHOUT_CLASSIFICATION	2.5384870108165785E-5	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991822448674463	WITHOUT_CLASSIFICATION	8.177551325536769E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991822448674463	WITHOUT_CLASSIFICATION	8.177551325536769E-4	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999259309411311	WITHOUT_CLASSIFICATION	7.406905886877704E-5	DEFECT
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998666458643	WITHOUT_CLASSIFICATION	1.3335413572729812E-7	DEFECT
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9993709445214429	WITHOUT_CLASSIFICATION	6.29055478557152E-4	DEFECT
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998962362033641	WITHOUT_CLASSIFICATION	1.0376379663594439E-4	DEFECT
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999861870517543	WITHOUT_CLASSIFICATION	1.3812948245660848E-5	DEFECT
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999519500601497	WITHOUT_CLASSIFICATION	4.80499398502346E-5	DEFECT
carriage return	WITHOUT_CLASSIFICATION	0.9999588052513909	WITHOUT_CLASSIFICATION	4.1194748609191976E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.998761515912183	WITHOUT_CLASSIFICATION	0.0012384840878169945	DEFECT
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.999985447335043	WITHOUT_CLASSIFICATION	1.4552664956893881E-5	DEFECT
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.999927975204618	WITHOUT_CLASSIFICATION	7.202479538201859E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999497325128317	WITHOUT_CLASSIFICATION	5.026748716819812E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.998601817125581	WITHOUT_CLASSIFICATION	0.0013981828744188472	DEFECT
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999931457389895	WITHOUT_CLASSIFICATION	6.854261010573592E-6	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.99999997097018	WITHOUT_CLASSIFICATION	2.902981999422398E-8	DEFECT
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999712013938292	WITHOUT_CLASSIFICATION	2.879860617082602E-5	DEFECT
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999497905412265	WITHOUT_CLASSIFICATION	5.020945877354501E-5	DEFECT
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999741677308396	WITHOUT_CLASSIFICATION	2.583226916049945E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999257995194454	WITHOUT_CLASSIFICATION	7.420048055458567E-5	DEFECT
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999862228914671	WITHOUT_CLASSIFICATION	1.3777108532904368E-4	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999722658428674	WITHOUT_CLASSIFICATION	2.7734157132523233E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999807724847079	WITHOUT_CLASSIFICATION	1.9227515292099574E-4	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999553461518588	WITHOUT_CLASSIFICATION	4.465384814120227E-5	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999208808846953	WITHOUT_CLASSIFICATION	7.911911530457807E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999547952755591	WITHOUT_CLASSIFICATION	4.5204724440925294E-5	DEFECT
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9994767224500589	WITHOUT_CLASSIFICATION	5.232775499409737E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9977696328891149	WITHOUT_CLASSIFICATION	0.0022303671108851167	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995537917060113	WITHOUT_CLASSIFICATION	4.462082939886922E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9995537917060113	WITHOUT_CLASSIFICATION	4.462082939886922E-4	DEFECT
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998110224573292	WITHOUT_CLASSIFICATION	1.88977542670797E-4	DEFECT
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999845571520857	WITHOUT_CLASSIFICATION	1.544284791438208E-5	DEFECT
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999393782518832	WITHOUT_CLASSIFICATION	6.062174811697276E-5	DEFECT
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9997756632885053	WITHOUT_CLASSIFICATION	2.2433671149472577E-4	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999555003640115	WITHOUT_CLASSIFICATION	4.449963598861249E-5	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9998673207185867	WITHOUT_CLASSIFICATION	1.32679281413239E-4	DEFECT
read	WITHOUT_CLASSIFICATION	0.9999936850866936	WITHOUT_CLASSIFICATION	6.314913306318548E-6	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9841395147514591	WITHOUT_CLASSIFICATION	0.015860485248540977	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999941511872749	WITHOUT_CLASSIFICATION	5.848812725086472E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996754154457056	WITHOUT_CLASSIFICATION	3.245845542943967E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9989314708025445	WITHOUT_CLASSIFICATION	0.0010685291974554731	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999480649378618	WITHOUT_CLASSIFICATION	5.193506213807139E-5	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999601490112537	WITHOUT_CLASSIFICATION	3.985098874619613E-5	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999603183140956	WITHOUT_CLASSIFICATION	3.9681685904405845E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999865482156949	WITHOUT_CLASSIFICATION	1.34517843051598E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999592208702462	WITHOUT_CLASSIFICATION	4.0779129753864436E-5	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999892899311658	WITHOUT_CLASSIFICATION	1.0710068834255687E-5	DEFECT
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9998427176851211	WITHOUT_CLASSIFICATION	1.5728231487890124E-4	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9994360679403792	WITHOUT_CLASSIFICATION	5.639320596207274E-4	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9994360679403792	WITHOUT_CLASSIFICATION	5.639320596207274E-4	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999751008354336	WITHOUT_CLASSIFICATION	2.4899164566287203E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999043348125099	WITHOUT_CLASSIFICATION	9.566518749010958E-4	DEFECT
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9995987570498299	WITHOUT_CLASSIFICATION	4.0124295016997466E-4	DEFECT
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9994056676473445	WITHOUT_CLASSIFICATION	5.943323526555378E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999928077016651	WITHOUT_CLASSIFICATION	7.1922983348413085E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999928077016651	WITHOUT_CLASSIFICATION	7.1922983348413085E-6	DEFECT
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9990649463668597	WITHOUT_CLASSIFICATION	9.35053633140347E-4	DEFECT
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999491457729873	WITHOUT_CLASSIFICATION	5.085422701271095E-4	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999957136638722	WITHOUT_CLASSIFICATION	4.286336127793602E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999865949222622	WITHOUT_CLASSIFICATION	1.3405077737788925E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.9999718887546188	WITHOUT_CLASSIFICATION	2.811124538107243E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999414532236963	WITHOUT_CLASSIFICATION	5.85467763035539E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999414532236963	WITHOUT_CLASSIFICATION	5.85467763035539E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999828774705217	WITHOUT_CLASSIFICATION	1.7122529478283E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999828774705217	WITHOUT_CLASSIFICATION	1.7122529478283E-5	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9999158308062905	WITHOUT_CLASSIFICATION	8.416919370956872E-5	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997415432059324	WITHOUT_CLASSIFICATION	2.584567940675454E-4	DEFECT
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.99996953854889	WITHOUT_CLASSIFICATION	3.0461451109861277E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999335835453471	WITHOUT_CLASSIFICATION	6.641645465280603E-5	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999765661862257	WITHOUT_CLASSIFICATION	2.343381377435306E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999977741731246	WITHOUT_CLASSIFICATION	2.2258268753007802E-6	DEFECT
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.999938957630528	WITHOUT_CLASSIFICATION	6.104236947197435E-5	DEFECT
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9998167283843146	WITHOUT_CLASSIFICATION	1.8327161568536677E-4	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9896202372252942	WITHOUT_CLASSIFICATION	0.010379762774705668	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999716616814236	WITHOUT_CLASSIFICATION	2.833831857634254E-5	DEFECT
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.999946357185596	WITHOUT_CLASSIFICATION	5.364281440406758E-5	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9996685748264796	WITHOUT_CLASSIFICATION	3.314251735203887E-4	DEFECT
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999983909930119	WITHOUT_CLASSIFICATION	1.6090069881210608E-6	DEFECT
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999867522051197	WITHOUT_CLASSIFICATION	1.3247794880302257E-4	DEFECT
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998801380187514	WITHOUT_CLASSIFICATION	1.1986198124851878E-4	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998778367924644	WITHOUT_CLASSIFICATION	1.2216320753547289E-4	DEFECT
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999511845270516	WITHOUT_CLASSIFICATION	4.8815472948539794E-5	DEFECT
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999659541746572	WITHOUT_CLASSIFICATION	3.404582534287809E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9965355371646909	WITHOUT_CLASSIFICATION	0.0034644628353091025	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999872652333461	WITHOUT_CLASSIFICATION	1.2734766653753048E-5	DEFECT
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999903461213784	WITHOUT_CLASSIFICATION	9.653878621648092E-6	DEFECT
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999620266598768	WITHOUT_CLASSIFICATION	3.797334012326637E-5	DEFECT
coerce arguments	WITHOUT_CLASSIFICATION	0.9999355532667018	WITHOUT_CLASSIFICATION	6.44467332982093E-5	DEFECT
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9998238512285851	WITHOUT_CLASSIFICATION	1.7614877141484581E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999936773778356	WITHOUT_CLASSIFICATION	6.322622164415447E-6	DEFECT
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999473622633122	WITHOUT_CLASSIFICATION	5.263773668771524E-5	DEFECT
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9999065425309924	WITHOUT_CLASSIFICATION	9.345746900760712E-5	DEFECT
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9991289316048444	WITHOUT_CLASSIFICATION	8.710683951554785E-4	DEFECT
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999968772235905	WITHOUT_CLASSIFICATION	3.122776409504232E-5	DEFECT
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9996810245548438	WITHOUT_CLASSIFICATION	3.189754451562559E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9997697044025133	WITHOUT_CLASSIFICATION	2.3029559748663847E-4	DEFECT
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9989415864150815	WITHOUT_CLASSIFICATION	0.0010584135849184937	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998414493409491	WITHOUT_CLASSIFICATION	1.585506590508075E-4	DEFECT
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9991306199623934	WITHOUT_CLASSIFICATION	8.693800376067193E-4	DEFECT
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999864202752623	WITHOUT_CLASSIFICATION	1.3579724737658551E-5	DEFECT
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9998169094400436	WITHOUT_CLASSIFICATION	1.8309055995645543E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999873383832546	WITHOUT_CLASSIFICATION	1.2661616745307565E-5	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9779908646618911	WITHOUT_CLASSIFICATION	0.022009135338108967	DEFECT
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999744159912435	WITHOUT_CLASSIFICATION	2.5584008756586508E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.9999875063450551	WITHOUT_CLASSIFICATION	1.249365494494773E-5	DEFECT
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9988779157547492	WITHOUT_CLASSIFICATION	0.0011220842452508316	DEFECT
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999538110826159	WITHOUT_CLASSIFICATION	4.618891738402408E-5	DEFECT
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9985226072141505	WITHOUT_CLASSIFICATION	0.0014773927858494065	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997291792553583	WITHOUT_CLASSIFICATION	2.708207446416758E-4	DEFECT
specific arity	WITHOUT_CLASSIFICATION	0.9999222253489994	WITHOUT_CLASSIFICATION	7.777465100052187E-5	DEFECT
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9998247459929729	WITHOUT_CLASSIFICATION	1.75254007027142E-4	DEFECT
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999460395412089	WITHOUT_CLASSIFICATION	5.396045879120376E-5	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999689592746265	WITHOUT_CLASSIFICATION	3.104072537341705E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999805331204126	WITHOUT_CLASSIFICATION	1.9466879587475073E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999805331204126	WITHOUT_CLASSIFICATION	1.9466879587475073E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999833907679481	WITHOUT_CLASSIFICATION	1.660923205192746E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999833907679481	WITHOUT_CLASSIFICATION	1.660923205192746E-5	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997447482249519	WITHOUT_CLASSIFICATION	2.552517750481247E-4	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997447482249519	WITHOUT_CLASSIFICATION	2.552517750481247E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.999856971956915	WITHOUT_CLASSIFICATION	1.4302804308494502E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.999856971956915	WITHOUT_CLASSIFICATION	1.4302804308494502E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996244495015398	WITHOUT_CLASSIFICATION	3.755504984600814E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996244495015398	WITHOUT_CLASSIFICATION	3.755504984600814E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996244495015398	WITHOUT_CLASSIFICATION	3.755504984600814E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999438520115564	WITHOUT_CLASSIFICATION	5.6147988443624276E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999001897799404	WITHOUT_CLASSIFICATION	9.98102200595343E-5	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998555465926865	WITHOUT_CLASSIFICATION	1.444534073135175E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998555465926865	WITHOUT_CLASSIFICATION	1.444534073135175E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998555465926865	WITHOUT_CLASSIFICATION	1.444534073135175E-4	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999090796803992	WITHOUT_CLASSIFICATION	9.092031960077346E-5	DEFECT
backspace	WITHOUT_CLASSIFICATION	0.9999865931772071	WITHOUT_CLASSIFICATION	1.3406822793069636E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
package-private	WITHOUT_CLASSIFICATION	0.9999169982888595	WITHOUT_CLASSIFICATION	8.300171114046775E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999547952755591	WITHOUT_CLASSIFICATION	4.5204724440925294E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999547952755591	WITHOUT_CLASSIFICATION	4.5204724440925294E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9991431560136744	WITHOUT_CLASSIFICATION	8.568439863255598E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999903719640786	WITHOUT_CLASSIFICATION	9.628035921389205E-6	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999903719640786	WITHOUT_CLASSIFICATION	9.628035921389205E-6	DEFECT
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5791955438336155	DEFECT	0.42080445616638457	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997829562535037	WITHOUT_CLASSIFICATION	2.170437464964334E-4	DEFECT
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998949962375595	WITHOUT_CLASSIFICATION	1.0500376244056828E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.997549818535173	WITHOUT_CLASSIFICATION	0.002450181464826896	DEFECT
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999770789197326	WITHOUT_CLASSIFICATION	2.2921080267360385E-5	DEFECT
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999968468849946	WITHOUT_CLASSIFICATION	3.153115005443826E-6	DEFECT
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9999452324141387	WITHOUT_CLASSIFICATION	5.476758586127412E-5	DEFECT
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9993390972246295	WITHOUT_CLASSIFICATION	6.609027753705359E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999600887202709	WITHOUT_CLASSIFICATION	3.991127972923204E-5	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999923529834017	WITHOUT_CLASSIFICATION	7.647016598236345E-6	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999348523390162	WITHOUT_CLASSIFICATION	6.51476609836654E-5	DEFECT
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9996702897644131	WITHOUT_CLASSIFICATION	3.297102355868955E-4	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998989390326722	WITHOUT_CLASSIFICATION	1.0106096732776085E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9998953030265489	WITHOUT_CLASSIFICATION	1.0469697345109239E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9993883562084096	WITHOUT_CLASSIFICATION	6.116437915904672E-4	DEFECT
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.6786319186598071	WITHOUT_CLASSIFICATION	0.32136808134019285	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9773212547215319	WITHOUT_CLASSIFICATION	0.022678745278468238	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999893423232845	WITHOUT_CLASSIFICATION	1.0657676715425017E-5	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999939402506782	WITHOUT_CLASSIFICATION	6.059749321822215E-6	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999419540657634	WITHOUT_CLASSIFICATION	5.8045934236689695E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998677528838443	WITHOUT_CLASSIFICATION	1.3224711615572688E-4	DEFECT
only public methods	WITHOUT_CLASSIFICATION	0.9999245362364704	WITHOUT_CLASSIFICATION	7.546376352962058E-5	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.99993427568358	WITHOUT_CLASSIFICATION	6.572431642005228E-5	DEFECT
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9975089961582546	WITHOUT_CLASSIFICATION	0.0024910038417453335	DEFECT
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9530319480396984	WITHOUT_CLASSIFICATION	0.04696805196030174	DEFECT
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9997133134060995	WITHOUT_CLASSIFICATION	2.8668659390047207E-4	DEFECT
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999993375846986	WITHOUT_CLASSIFICATION	6.62415301297865E-7	DEFECT
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999491517021228	WITHOUT_CLASSIFICATION	5.084829787728724E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999696829517718	WITHOUT_CLASSIFICATION	3.0317048228266424E-5	DEFECT
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.999859004671219	WITHOUT_CLASSIFICATION	1.4099532878100761E-4	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9999162025047958	WITHOUT_CLASSIFICATION	8.379749520416147E-5	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999898520393691	WITHOUT_CLASSIFICATION	1.0147960630975385E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999070752719282	WITHOUT_CLASSIFICATION	9.292472807177757E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999070752719282	WITHOUT_CLASSIFICATION	9.292472807177757E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999070752719282	WITHOUT_CLASSIFICATION	9.292472807177757E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999070752719282	WITHOUT_CLASSIFICATION	9.292472807177757E-5	DEFECT
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999938133869337	WITHOUT_CLASSIFICATION	6.186613066308622E-6	DEFECT
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998196092830786	WITHOUT_CLASSIFICATION	1.803907169214207E-4	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999178935038754	WITHOUT_CLASSIFICATION	8.210649612458692E-5	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999178935038754	WITHOUT_CLASSIFICATION	8.210649612458692E-5	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9999547807433522	WITHOUT_CLASSIFICATION	4.5219256647819745E-5	DEFECT
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9998991555771196	WITHOUT_CLASSIFICATION	1.0084442288037056E-4	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9997279516528621	WITHOUT_CLASSIFICATION	2.7204834713788565E-4	DEFECT
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999942007568478	WITHOUT_CLASSIFICATION	5.799243152242377E-6	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9968565969809619	WITHOUT_CLASSIFICATION	0.003143403019038219	DEFECT
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9980817461685043	WITHOUT_CLASSIFICATION	0.0019182538314957863	DEFECT
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999219994376106	WITHOUT_CLASSIFICATION	7.800056238930441E-5	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999971354631768	WITHOUT_CLASSIFICATION	2.8645368232316696E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999971354631768	WITHOUT_CLASSIFICATION	2.8645368232316696E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999971354631768	WITHOUT_CLASSIFICATION	2.8645368232316696E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999971354631768	WITHOUT_CLASSIFICATION	2.8645368232316696E-6	DEFECT
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999928852962859	WITHOUT_CLASSIFICATION	7.114703714023728E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9995377076378685	WITHOUT_CLASSIFICATION	4.6229236213145953E-4	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9995377076378685	WITHOUT_CLASSIFICATION	4.6229236213145953E-4	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9995377076378685	WITHOUT_CLASSIFICATION	4.6229236213145953E-4	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9997087441825637	WITHOUT_CLASSIFICATION	2.912558174363508E-4	DEFECT
finally with no exception	WITHOUT_CLASSIFICATION	0.9999438814282627	WITHOUT_CLASSIFICATION	5.611857173741431E-5	DEFECT
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999877677578075	WITHOUT_CLASSIFICATION	1.2232242192603613E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9974585819076113	WITHOUT_CLASSIFICATION	0.0025414180923888107	DEFECT
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9972205161600091	WITHOUT_CLASSIFICATION	0.002779483839990957	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9989189741762105	WITHOUT_CLASSIFICATION	0.0010810258237895108	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9989189741762105	WITHOUT_CLASSIFICATION	0.0010810258237895108	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998515244134404	WITHOUT_CLASSIFICATION	1.4847558655968149E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998515244134404	WITHOUT_CLASSIFICATION	1.4847558655968149E-4	DEFECT
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999979658732969	WITHOUT_CLASSIFICATION	2.0341267031145783E-6	DEFECT
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999985640771101	WITHOUT_CLASSIFICATION	1.4359228898634616E-6	DEFECT
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998651790362085	WITHOUT_CLASSIFICATION	1.3482096379156133E-4	DEFECT
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9893871489169608	WITHOUT_CLASSIFICATION	0.01061285108303933	DEFECT
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9999469792870763	WITHOUT_CLASSIFICATION	5.3020712923690356E-5	DEFECT
create the default thread group	WITHOUT_CLASSIFICATION	0.9999962360770094	WITHOUT_CLASSIFICATION	3.7639229906195854E-6	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998771316845955	WITHOUT_CLASSIFICATION	1.228683154045849E-4	DEFECT
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9998519925413807	WITHOUT_CLASSIFICATION	1.4800745861933654E-4	DEFECT
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9992870115348551	WITHOUT_CLASSIFICATION	7.129884651448904E-4	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999930069612922	WITHOUT_CLASSIFICATION	6.99303870780917E-6	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999930069612922	WITHOUT_CLASSIFICATION	6.99303870780917E-6	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999674706300038	WITHOUT_CLASSIFICATION	3.252936999617559E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999674706300038	WITHOUT_CLASSIFICATION	3.252936999617559E-5	DEFECT
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9992273813381366	WITHOUT_CLASSIFICATION	7.72618661863257E-4	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997552251720528	WITHOUT_CLASSIFICATION	2.4477482794719486E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999005944633634	WITHOUT_CLASSIFICATION	9.940553663657224E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999005944633634	WITHOUT_CLASSIFICATION	9.940553663657224E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999005944633634	WITHOUT_CLASSIFICATION	9.940553663657224E-5	DEFECT
line 286	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 476	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 513	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 530	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 533	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 551	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
end loop	WITHOUT_CLASSIFICATION	0.9999866547849854	WITHOUT_CLASSIFICATION	1.3345215014614564E-5	DEFECT
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996641451180666	WITHOUT_CLASSIFICATION	3.358548819335282E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9989728053272268	WITHOUT_CLASSIFICATION	0.0010271946727731672	DEFECT
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9997538523718364	WITHOUT_CLASSIFICATION	2.4614762816352695E-4	DEFECT
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9970933675403647	WITHOUT_CLASSIFICATION	0.0029066324596352016	DEFECT
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999760753769895	WITHOUT_CLASSIFICATION	2.392462301044307E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9510411518156723	WITHOUT_CLASSIFICATION	0.04895884818432781	DEFECT
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9998460259688113	WITHOUT_CLASSIFICATION	1.5397403118859736E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9998394193941714	WITHOUT_CLASSIFICATION	1.6058060582862678E-4	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999511984411167	WITHOUT_CLASSIFICATION	4.8801558883373475E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999865221859547	WITHOUT_CLASSIFICATION	1.3477814045329791E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999891022441207	WITHOUT_CLASSIFICATION	1.0897755879242728E-5	DEFECT
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9999789979359782	WITHOUT_CLASSIFICATION	2.1002064021728887E-5	DEFECT
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9995680157907346	WITHOUT_CLASSIFICATION	4.319842092654189E-4	DEFECT
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9491879127328523	WITHOUT_CLASSIFICATION	0.05081208726714765	DEFECT
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9993983367342825	WITHOUT_CLASSIFICATION	6.016632657174517E-4	DEFECT
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9997715209891477	WITHOUT_CLASSIFICATION	2.28479010852396E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999935127847452	WITHOUT_CLASSIFICATION	6.487215254756989E-6	DEFECT
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999764210585207	WITHOUT_CLASSIFICATION	2.3578941479329525E-5	DEFECT
line 572	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 625	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 649	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 723	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 745	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 766	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 800	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 812	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 827	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 864	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 886	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 911	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 929	WITHOUT_CLASSIFICATION	0.9999645775917538	WITHOUT_CLASSIFICATION	3.542240824616451E-5	DEFECT
line 952	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 970	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 991	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1011	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1026	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1067	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1085	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1145	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1169	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1201	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1229	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1287	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1293	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1307	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1325	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1363	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1398	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1473	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1492	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1523	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1562	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1582	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1620	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1635	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1652	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1681	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1755	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1789	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999131982455561	WITHOUT_CLASSIFICATION	8.680175444385289E-5	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999331478213671	WITHOUT_CLASSIFICATION	6.685217863293297E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9948916146104303	WITHOUT_CLASSIFICATION	0.005108385389569688	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999606564541597	WITHOUT_CLASSIFICATION	3.9343545840362166E-5	DEFECT
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999565629437432	WITHOUT_CLASSIFICATION	4.34370562567983E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999703275511808	WITHOUT_CLASSIFICATION	2.9672448819205186E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999703275511808	WITHOUT_CLASSIFICATION	2.9672448819205186E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999703275511808	WITHOUT_CLASSIFICATION	2.9672448819205186E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999703275511808	WITHOUT_CLASSIFICATION	2.9672448819205186E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9711665706612825	WITHOUT_CLASSIFICATION	0.028833429338717582	DEFECT
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.5461336317080725	WITHOUT_CLASSIFICATION	0.4538663682919275	DEFECT
line 313	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 339	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 361	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 413	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 451	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 472	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 500	WITHOUT_CLASSIFICATION	0.9998750820327927	WITHOUT_CLASSIFICATION	1.2491796720722858E-4	DEFECT
line 515	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 555	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 582	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 619	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 636	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 669	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 703	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 776	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 814	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 823	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 854	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 872	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 905	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 925	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 958	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 992	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1047	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1072	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1081	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1108	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1136	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1168	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1192	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1241	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1267	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1286	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1301	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1314	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1333	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1362	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1395	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1420	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1439	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1476	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1535	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1588	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1618	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1643	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1669	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1728	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1753	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1779	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1794	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1812	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1837	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1895	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1925	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1950	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 1992	WITHOUT_CLASSIFICATION	0.9999635671304238	WITHOUT_CLASSIFICATION	3.643286957618189E-5	DEFECT
line 2014	WITHOUT_CLASSIFICATION	0.9999638490048292	WITHOUT_CLASSIFICATION	3.6150995170817705E-5	DEFECT
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999908714257114	WITHOUT_CLASSIFICATION	9.128574288596022E-5	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9997333817897952	WITHOUT_CLASSIFICATION	2.666182102047723E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984602734673707	WITHOUT_CLASSIFICATION	0.0015397265326293386	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.990649637652895	WITHOUT_CLASSIFICATION	0.00935036234710491	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.990649637652895	WITHOUT_CLASSIFICATION	0.00935036234710491	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.990649637652895	WITHOUT_CLASSIFICATION	0.00935036234710491	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.990649637652895	WITHOUT_CLASSIFICATION	0.00935036234710491	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996076371774884	WITHOUT_CLASSIFICATION	3.923628225117405E-4	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996076371774884	WITHOUT_CLASSIFICATION	3.923628225117405E-4	DEFECT
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9423965661145621	WITHOUT_CLASSIFICATION	0.05760343388543789	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999568504714489	WITHOUT_CLASSIFICATION	4.314952855117802E-5	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999568504714489	WITHOUT_CLASSIFICATION	4.314952855117802E-5	DEFECT
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9997697222877212	WITHOUT_CLASSIFICATION	2.302777122788698E-4	DEFECT
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999739755310318	WITHOUT_CLASSIFICATION	2.6024468968090625E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998860736110706	WITHOUT_CLASSIFICATION	1.1392638892944934E-4	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999566700446342	WITHOUT_CLASSIFICATION	4.3329955365824616E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999566700446342	WITHOUT_CLASSIFICATION	4.3329955365824616E-5	DEFECT
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999832796230499	WITHOUT_CLASSIFICATION	1.6720376950033053E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9994988118564736	WITHOUT_CLASSIFICATION	5.011881435264227E-4	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9994988118564736	WITHOUT_CLASSIFICATION	5.011881435264227E-4	DEFECT
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9987529356006641	WITHOUT_CLASSIFICATION	0.0012470643993358727	DEFECT
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9638507790479028	WITHOUT_CLASSIFICATION	0.036149220952097084	DEFECT
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9996315534202987	WITHOUT_CLASSIFICATION	3.6844657970129085E-4	DEFECT
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999901513222491	WITHOUT_CLASSIFICATION	9.848677750761478E-6	DEFECT
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999027571164075	WITHOUT_CLASSIFICATION	9.724288359246523E-5	DEFECT
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998733683498671	WITHOUT_CLASSIFICATION	1.2663165013296034E-4	DEFECT
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999782494711559	WITHOUT_CLASSIFICATION	2.1750528844090993E-5	DEFECT
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999778527349779	WITHOUT_CLASSIFICATION	2.2147265022140535E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999294884682605	WITHOUT_CLASSIFICATION	7.051153173952107E-5	DEFECT
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9996164259557823	WITHOUT_CLASSIFICATION	3.8357404421774174E-4	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9975917457795576	WITHOUT_CLASSIFICATION	0.0024082542204424524	DEFECT
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9998752160080965	WITHOUT_CLASSIFICATION	1.2478399190343255E-4	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999800508187985	WITHOUT_CLASSIFICATION	1.994918120158213E-5	DEFECT
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9994213002853156	WITHOUT_CLASSIFICATION	5.786997146843248E-4	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998565161934425	WITHOUT_CLASSIFICATION	1.4348380655760325E-4	DEFECT
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999694217306294	WITHOUT_CLASSIFICATION	3.0578269370621624E-5	DEFECT
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9996390560450732	WITHOUT_CLASSIFICATION	3.6094395492681624E-4	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9961830999694671	WITHOUT_CLASSIFICATION	0.003816900030532884	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999085723122385	WITHOUT_CLASSIFICATION	9.14276877614128E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999085723122385	WITHOUT_CLASSIFICATION	9.14276877614128E-5	DEFECT
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9997791651049157	WITHOUT_CLASSIFICATION	2.208348950843833E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9998943599179075	WITHOUT_CLASSIFICATION	1.0564008209244128E-4	DEFECT
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9996995686157802	WITHOUT_CLASSIFICATION	3.0043138421976997E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999880022312568	WITHOUT_CLASSIFICATION	1.1997768743273259E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999368946369139	WITHOUT_CLASSIFICATION	6.310536308604731E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999368946369139	WITHOUT_CLASSIFICATION	6.310536308604731E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999368946369139	WITHOUT_CLASSIFICATION	6.310536308604731E-5	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999917098884292	WITHOUT_CLASSIFICATION	8.29011157079302E-6	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9990811369835866	WITHOUT_CLASSIFICATION	9.188630164134194E-4	DEFECT
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999883972388669	WITHOUT_CLASSIFICATION	1.1602761133144655E-5	DEFECT
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999952550214157	WITHOUT_CLASSIFICATION	4.7449785843298835E-6	DEFECT
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999903619162857	WITHOUT_CLASSIFICATION	9.638083714434935E-6	DEFECT
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999623300460814	WITHOUT_CLASSIFICATION	3.7669953918636296E-5	DEFECT
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9998801453231684	WITHOUT_CLASSIFICATION	1.1985467683161575E-4	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9988309492749929	WITHOUT_CLASSIFICATION	0.0011690507250070666	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999401777884043	WITHOUT_CLASSIFICATION	5.982221159567432E-5	DEFECT
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999905134005164	WITHOUT_CLASSIFICATION	9.486599483691634E-6	DEFECT
reset buffer	WITHOUT_CLASSIFICATION	0.9999058809292508	WITHOUT_CLASSIFICATION	9.41190707492867E-5	DEFECT
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9999696780632013	WITHOUT_CLASSIFICATION	3.0321936798673675E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9382853406965032	WITHOUT_CLASSIFICATION	0.06171465930349679	DEFECT
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999017974600716	WITHOUT_CLASSIFICATION	9.8202539928344E-5	DEFECT
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999931778215163	WITHOUT_CLASSIFICATION	6.822178483763632E-6	DEFECT
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998837335316827	WITHOUT_CLASSIFICATION	1.162664683172943E-4	DEFECT
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999667577413998	WITHOUT_CLASSIFICATION	3.3242258600341497E-5	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999884724764917	WITHOUT_CLASSIFICATION	1.1527523508426938E-5	DEFECT
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999420918292213	WITHOUT_CLASSIFICATION	5.790817077865379E-5	DEFECT
FIXME: This is a system error based on errno	DEFECT	0.9350704114621752	WITHOUT_CLASSIFICATION	0.0649295885378249	DEFECT
TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].	DEFECT	0.9966748400345179	DEFECT	0.003325159965482225	WITHOUT_CLASSIFICATION
TODO: make sure it's really safe to not to copy it	DEFECT	0.909589207524587	WITHOUT_CLASSIFICATION	0.09041079247541293	DEFECT
TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.	DEFECT	0.9964222932130409	DEFECT	0.0035777067869589866	WITHOUT_CLASSIFICATION
FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe	DEFECT	0.9701469792172411	DEFECT	0.029853020782758907	WITHOUT_CLASSIFICATION
dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812	DEFECT	0.9911235824244298	WITHOUT_CLASSIFICATION	0.00887641757557028	DEFECT
FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.	DEFECT	0.9458106942503315	WITHOUT_CLASSIFICATION	0.05418930574966855	DEFECT
TODO: need to isolate the "current" thread from class creation	DEFECT	0.8803098318904466	WITHOUT_CLASSIFICATION	0.11969016810955334	DEFECT
FIXME: not correct exception	DEFECT	0.8196104285317237	WITHOUT_CLASSIFICATION	0.18038957146827617	DEFECT
XXX actually only on windows...	DEFECT	0.9972034841297148	WITHOUT_CLASSIFICATION	0.002796515870285116	DEFECT
Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?	DEFECT	0.9959163193100755	WITHOUT_CLASSIFICATION	0.004083680689924516	DEFECT
FIXME can't use static; would interfere with other runtimes in the same JVM	DEFECT	0.5531249361159544	DEFECT	0.4468750638840456	WITHOUT_CLASSIFICATION
TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close	DEFECT	0.9732836569103013	WITHOUT_CLASSIFICATION	0.02671634308969873	DEFECT
TODO: This is an freopen in MRI, this is close, but not quite the same	DEFECT	0.9523211721859219	DEFECT	0.04767882781407812	WITHOUT_CLASSIFICATION
TODO: sys fail	DEFECT	0.8616857601085236	WITHOUT_CLASSIFICATION	0.13831423989147637	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9798829533161648	WITHOUT_CLASSIFICATION	0.020117046683835193	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9798829533161648	WITHOUT_CLASSIFICATION	0.020117046683835193	DEFECT
FIXME: check how ruby 1.9 handles this	DEFECT	0.9567185041196338	WITHOUT_CLASSIFICATION	0.04328149588036626	DEFECT
FIXME: MRI has special case for constants here	DEFECT	0.9961805058139532	WITHOUT_CLASSIFICATION	0.003819494186046816	DEFECT
FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.	DEFECT	0.9459815221345906	WITHOUT_CLASSIFICATION	0.054018477865409406	DEFECT
ENEBO: Very wrong	DEFECT	0.9997352134497834	WITHOUT_CLASSIFICATION	2.6478655021660273E-4	DEFECT
ENEBO: Very wrong	DEFECT	0.9997352134497834	WITHOUT_CLASSIFICATION	2.6478655021660273E-4	DEFECT
synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code	DEFECT	0.7087250375791136	WITHOUT_CLASSIFICATION	0.29127496242088646	DEFECT
FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...	DEFECT	0.9137702303763509	WITHOUT_CLASSIFICATION	0.08622976962364914	DEFECT
FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.	DEFECT	0.9228137354341877	WITHOUT_CLASSIFICATION	0.07718626456581232	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.7429532158633516	WITHOUT_CLASSIFICATION	0.2570467841366485	DEFECT
TODO: take BigDecimal.mode into account.	DEFECT	0.6841916781169437	WITHOUT_CLASSIFICATION	0.31580832188305624	DEFECT
TODO: full-precision divmod is 1000x slower than MRI!	DEFECT	0.5800309661712686	WITHOUT_CLASSIFICATION	0.41996903382873135	DEFECT
TODO: proper sign	DEFECT	0.8934829136018367	WITHOUT_CLASSIFICATION	0.10651708639816337	DEFECT
FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.	DEFECT	0.6459957759483347	DEFECT	0.3540042240516654	WITHOUT_CLASSIFICATION
FIXME: -x flag not supported case 'x' : break;	DEFECT	0.8095740596416637	WITHOUT_CLASSIFICATION	0.19042594035833627	DEFECT
FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.	DEFECT	0.5110955695415905	DEFECT	0.48890443045840937	WITHOUT_CLASSIFICATION
FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);	DEFECT	0.8669596850700755	WITHOUT_CLASSIFICATION	0.13304031492992452	DEFECT
FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);	DEFECT	0.5717742915265586	WITHOUT_CLASSIFICATION	0.4282257084734414	DEFECT
TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";	DEFECT	0.5171660716043538	WITHOUT_CLASSIFICATION	0.4828339283956463	DEFECT
TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet	DEFECT	0.9891472295866154	WITHOUT_CLASSIFICATION	0.01085277041338462	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
FIXME: this should reset to what it was before	DEFECT	0.9187607112959731	WITHOUT_CLASSIFICATION	0.08123928870402687	DEFECT
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.8949273080875888	WITHOUT_CLASSIFICATION	0.1050726919124111	DEFECT
SSS FIXME: Incorect!	DEFECT	0.9896202372252942	WITHOUT_CLASSIFICATION	0.010379762774705668	DEFECT
SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.	DEFECT	0.7569355174793324	WITHOUT_CLASSIFICATION	0.24306448252066765	DEFECT
SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later	DEFECT	0.9836356898880192	WITHOUT_CLASSIFICATION	0.016364310111980813	DEFECT
IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!	DEFECT	0.9998986497136966	WITHOUT_CLASSIFICATION	1.013502863033406E-4	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.9924866247077386	WITHOUT_CLASSIFICATION	0.007513375292261395	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.9924866247077386	WITHOUT_CLASSIFICATION	0.007513375292261395	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9890209385495271	WITHOUT_CLASSIFICATION	0.010979061450472906	DEFECT
SSS FIXME: Verify semantics of this instruction	DEFECT	0.9756631409892145	WITHOUT_CLASSIFICATION	0.024336859010785472	DEFECT
The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?	DEFECT	0.8756562447495657	DEFECT	0.1243437552504343	WITHOUT_CLASSIFICATION
SSS FIXME: For constant arrays, we should never get here!	DEFECT	0.994985279877915	WITHOUT_CLASSIFICATION	0.005014720122085103	DEFECT
FIXME: This is wrong	DEFECT	0.7647551450834459	WITHOUT_CLASSIFICATION	0.23524485491655417	DEFECT
FIXME: may need to broaden for IPV6 IP address strings	DEFECT	0.9688833413331434	WITHOUT_CLASSIFICATION	0.03111665866685662	DEFECT
XXX Wrong, but will have to do for now	DEFECT	0.9999002282487447	WITHOUT_CLASSIFICATION	9.977175125535597E-5	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.6248225765999587	DEFECT	0.37517742340004134	WITHOUT_CLASSIFICATION
FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();	DEFECT	0.9967378366625038	WITHOUT_CLASSIFICATION	0.0032621633374961966	DEFECT
If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).	DEFECT	0.9981794070809559	WITHOUT_CLASSIFICATION	0.0018205929190441433	DEFECT
FIXME: Broken but behaving	DEFECT	0.9742675490797301	DEFECT	0.025732450920269764	WITHOUT_CLASSIFICATION
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7230720454698754	WITHOUT_CLASSIFICATION	0.2769279545301246	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7230720454698754	WITHOUT_CLASSIFICATION	0.2769279545301246	DEFECT
FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";	DEFECT	0.7366843065832385	WITHOUT_CLASSIFICATION	0.2633156934167616	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!	DEFECT	0.9953436480752037	WITHOUT_CLASSIFICATION	0.004656351924796236	DEFECT
MRI 1.8 behavior: this combination of flags is not allowed	DEFECT	0.9980218474388596	WITHOUT_CLASSIFICATION	0.001978152561140536	DEFECT
FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?	DEFECT	0.9329915102761209	DEFECT	0.06700848972387903	WITHOUT_CLASSIFICATION
TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.	DEFECT	0.8990059688149691	DEFECT	0.10099403118503092	WITHOUT_CLASSIFICATION
This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"	DEFECT	0.982929929846575	WITHOUT_CLASSIFICATION	0.017070070153424988	DEFECT
We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff	DEFECT	0.5979243761539994	WITHOUT_CLASSIFICATION	0.40207562384600054	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9890209385495271	WITHOUT_CLASSIFICATION	0.010979061450472906	DEFECT
This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.	DEFECT	0.9983541047897518	WITHOUT_CLASSIFICATION	0.0016458952102481432	DEFECT
FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.	DEFECT	0.8192668523785345	WITHOUT_CLASSIFICATION	0.18073314762146556	DEFECT
SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!	DEFECT	0.7921281680477132	WITHOUT_CLASSIFICATION	0.20787183195228678	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.7429532158633516	WITHOUT_CLASSIFICATION	0.2570467841366485	DEFECT
TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";	DEFECT	0.8831871029730058	DEFECT	0.11681289702699411	WITHOUT_CLASSIFICATION
FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not	DEFECT	0.7956168059154395	DEFECT	0.20438319408456052	WITHOUT_CLASSIFICATION
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.8949273080875888	WITHOUT_CLASSIFICATION	0.1050726919124111	DEFECT
zero args with block FIXME: omit args index; subtract one from normal block index	DEFECT	0.9993884452166198	WITHOUT_CLASSIFICATION	6.115547833801975E-4	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
FIXME: Broken but behaving	DEFECT	0.9742675490797301	DEFECT	0.025732450920269764	WITHOUT_CLASSIFICATION
TODO: we loose encoding information here, fix it	DEFECT	0.6681106995154644	WITHOUT_CLASSIFICATION	0.3318893004845357	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
TODO: don't require pop	DEFECT	0.88661765065548	WITHOUT_CLASSIFICATION	0.11338234934451996	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.6248225765999587	DEFECT	0.37517742340004134	WITHOUT_CLASSIFICATION
vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue	DEFECT	0.9720501203931077	WITHOUT_CLASSIFICATION	0.02794987960689234	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7230720454698754	WITHOUT_CLASSIFICATION	0.2769279545301246	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7230720454698754	WITHOUT_CLASSIFICATION	0.2769279545301246	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999893561429504	WITHOUT_CLASSIFICATION	1.0643857049671519E-5	DEFECT
TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).	DEFECT	0.6580548520332509	WITHOUT_CLASSIFICATION	0.34194514796674913	DEFECT
