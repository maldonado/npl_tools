set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999924001639428	WITHOUT_CLASSIFICATION	7.599836057248036E-6	DEFECT
line 335	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999370695230417	WITHOUT_CLASSIFICATION	6.29304769583234E-5	DEFECT
line 362	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
line 391	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
^D	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
^Z	WITHOUT_CLASSIFICATION	0.9999908172658202	WITHOUT_CLASSIFICATION	9.182734179875133E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999992152037426	WITHOUT_CLASSIFICATION	7.847962574703401E-7	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999992152037426	WITHOUT_CLASSIFICATION	7.847962574703401E-7	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
return result	WITHOUT_CLASSIFICATION	0.9999432879914781	WITHOUT_CLASSIFICATION	5.6712008521994574E-5	DEFECT
name	WITHOUT_CLASSIFICATION	0.9999942145368251	WITHOUT_CLASSIFICATION	5.785463174971599E-6	DEFECT
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9998231386415392	WITHOUT_CLASSIFICATION	1.7686135846087234E-4	DEFECT
Accessor methods.	WITHOUT_CLASSIFICATION	0.9999404281407385	WITHOUT_CLASSIFICATION	5.9571859261596747E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.999924683035393	WITHOUT_CLASSIFICATION	7.53169646070364E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.999924683035393	WITHOUT_CLASSIFICATION	7.53169646070364E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.999924683035393	WITHOUT_CLASSIFICATION	7.53169646070364E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.999924683035393	WITHOUT_CLASSIFICATION	7.53169646070364E-5	DEFECT
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9992928210889077	WITHOUT_CLASSIFICATION	7.071789110922454E-4	DEFECT
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999415825801122	WITHOUT_CLASSIFICATION	5.8417419887764417E-5	DEFECT
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999391255760658	WITHOUT_CLASSIFICATION	6.0874423934192343E-5	DEFECT
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9999180607350225	WITHOUT_CLASSIFICATION	8.193926497742186E-5	DEFECT
Version information:	WITHOUT_CLASSIFICATION	0.9999397267994531	WITHOUT_CLASSIFICATION	6.027320054683507E-5	DEFECT
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999981842275907	WITHOUT_CLASSIFICATION	1.815772409295447E-5	DEFECT
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999711427516897	WITHOUT_CLASSIFICATION	2.8857248310300593E-5	DEFECT
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999824949918158	WITHOUT_CLASSIFICATION	1.7505008184260174E-5	DEFECT
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999787385766248	WITHOUT_CLASSIFICATION	2.1261423375205752E-5	DEFECT
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9992406435255223	WITHOUT_CLASSIFICATION	7.593564744777464E-4	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999054172692028	WITHOUT_CLASSIFICATION	9.458273079719786E-5	DEFECT
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999928059569617	WITHOUT_CLASSIFICATION	7.1940430382765585E-6	DEFECT
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9997447378580294	WITHOUT_CLASSIFICATION	2.5526214197065417E-4	DEFECT
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999522557819925	WITHOUT_CLASSIFICATION	4.774421800750056E-5	DEFECT
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999265062905156	WITHOUT_CLASSIFICATION	7.349370948439441E-5	DEFECT
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9997638424611062	WITHOUT_CLASSIFICATION	2.3615753889396154E-4	DEFECT
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999955178862887	WITHOUT_CLASSIFICATION	4.482113711223508E-6	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.999924683035393	WITHOUT_CLASSIFICATION	7.53169646070364E-5	DEFECT
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999228484808202	WITHOUT_CLASSIFICATION	7.715151917969973E-5	DEFECT
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999988562608554	WITHOUT_CLASSIFICATION	1.143739144627923E-6	DEFECT
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999912649829834	WITHOUT_CLASSIFICATION	8.735017016609257E-5	DEFECT
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999027380165609	WITHOUT_CLASSIFICATION	9.726198343904732E-5	DEFECT
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999669924379363	WITHOUT_CLASSIFICATION	3.3007562063718116E-5	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999769571432059	WITHOUT_CLASSIFICATION	2.3042856794156132E-5	DEFECT
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999890430678623	WITHOUT_CLASSIFICATION	1.095693213769775E-4	DEFECT
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999885252466439	WITHOUT_CLASSIFICATION	1.1474753355944866E-5	DEFECT
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999539846966121	WITHOUT_CLASSIFICATION	4.601530338789162E-5	DEFECT
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999388385147875	WITHOUT_CLASSIFICATION	6.116148521258072E-5	DEFECT
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9982279504331377	WITHOUT_CLASSIFICATION	0.0017720495668622905	DEFECT
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999387328601481	WITHOUT_CLASSIFICATION	6.126713985189663E-5	DEFECT
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
IOT is also 6	WITHOUT_CLASSIFICATION	0.9996491060445869	WITHOUT_CLASSIFICATION	3.508939554130915E-4	DEFECT
CLD is also 20	WITHOUT_CLASSIFICATION	0.9999100433926214	WITHOUT_CLASSIFICATION	8.995660737862933E-5	DEFECT
RubySignal	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.999486303310479	WITHOUT_CLASSIFICATION	5.136966895209721E-4	DEFECT
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9998898424688977	WITHOUT_CLASSIFICATION	1.1015753110236129E-4	DEFECT
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999876160392024	WITHOUT_CLASSIFICATION	1.2383960797607442E-4	DEFECT
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9979607078372322	WITHOUT_CLASSIFICATION	0.002039292162767755	DEFECT
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999407444121706	WITHOUT_CLASSIFICATION	5.9255587829402024E-5	DEFECT
io.finish();	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9997710716578533	WITHOUT_CLASSIFICATION	2.2892834214668846E-4	DEFECT
hmm...	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999913185388414	WITHOUT_CLASSIFICATION	8.681461158569031E-6	DEFECT
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9998940820292002	WITHOUT_CLASSIFICATION	1.0591797079980014E-4	DEFECT
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999671243099686	WITHOUT_CLASSIFICATION	3.287569003137387E-5	DEFECT
float number of seconds	WITHOUT_CLASSIFICATION	0.9999262578111817	WITHOUT_CLASSIFICATION	7.374218881829485E-5	DEFECT
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9995858258527883	WITHOUT_CLASSIFICATION	4.141741472117042E-4	DEFECT
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9997049988774593	WITHOUT_CLASSIFICATION	2.950011225407086E-4	DEFECT
Time class methods	WITHOUT_CLASSIFICATION	0.9998812100315144	WITHOUT_CLASSIFICATION	1.1878996848564286E-4	DEFECT
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9995726451432382	WITHOUT_CLASSIFICATION	4.273548567617801E-4	DEFECT
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999563235917243	WITHOUT_CLASSIFICATION	4.367640827580619E-5	DEFECT
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999993729209635	WITHOUT_CLASSIFICATION	6.270790364877724E-6	DEFECT
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9997284946328032	WITHOUT_CLASSIFICATION	2.715053671968739E-4	DEFECT
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999958503211794	WITHOUT_CLASSIFICATION	4.149678820601998E-5	DEFECT
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998716082219772	WITHOUT_CLASSIFICATION	1.28391778022837E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9998859520191771	WITHOUT_CLASSIFICATION	1.1404798082288977E-4	DEFECT
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999679684529598	WITHOUT_CLASSIFICATION	3.2031547040240064E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9996150760779856	WITHOUT_CLASSIFICATION	3.849239220144539E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9995452151172202	WITHOUT_CLASSIFICATION	4.5478488277982517E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9995452151172202	WITHOUT_CLASSIFICATION	4.5478488277982517E-4	DEFECT
no bignorm here needed	WITHOUT_CLASSIFICATION	0.999986763199879	WITHOUT_CLASSIFICATION	1.3236800120926022E-5	DEFECT
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9997040215847386	WITHOUT_CLASSIFICATION	2.9597841526149583E-4	DEFECT
Pad with a 0	WITHOUT_CLASSIFICATION	0.9999470937864924	WITHOUT_CLASSIFICATION	5.290621350760533E-5	DEFECT
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9991183161978636	WITHOUT_CLASSIFICATION	8.816838021363581E-4	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9986688634357715	WITHOUT_CLASSIFICATION	0.001331136564228439	DEFECT
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9930834048133117	WITHOUT_CLASSIFICATION	0.006916595186688275	DEFECT
???	WITHOUT_CLASSIFICATION	0.9999913221083606	WITHOUT_CLASSIFICATION	8.677891639485703E-6	DEFECT
PID	WITHOUT_CLASSIFICATION	0.9999908115403218	WITHOUT_CLASSIFICATION	9.188459678247956E-6	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999253983003344	WITHOUT_CLASSIFICATION	7.460169966547238E-5	DEFECT
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999872140622079	WITHOUT_CLASSIFICATION	1.2785937792199836E-5	DEFECT
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999995762516491	WITHOUT_CLASSIFICATION	4.2374835084356537E-7	DEFECT
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999868545702902	WITHOUT_CLASSIFICATION	1.3145429709736314E-5	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999072742733671	WITHOUT_CLASSIFICATION	9.272572663290237E-5	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999072742733671	WITHOUT_CLASSIFICATION	9.272572663290237E-5	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999072742733671	WITHOUT_CLASSIFICATION	9.272572663290237E-5	DEFECT
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9999338274599546	WITHOUT_CLASSIFICATION	6.617254004540442E-5	DEFECT
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9999731038663319	WITHOUT_CLASSIFICATION	2.6896133668131737E-5	DEFECT
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999832883876257	WITHOUT_CLASSIFICATION	1.6711612374301722E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9896573182984737	WITHOUT_CLASSIFICATION	0.010342681701526203	DEFECT
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9991362569484055	WITHOUT_CLASSIFICATION	8.637430515945029E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999996418063273	WITHOUT_CLASSIFICATION	3.5819367269717158E-6	DEFECT
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9995101612926622	WITHOUT_CLASSIFICATION	4.898387073377484E-4	DEFECT
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999004589265151	WITHOUT_CLASSIFICATION	9.95410734848505E-5	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999347462964755	WITHOUT_CLASSIFICATION	6.525370352453428E-5	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999716174569921	WITHOUT_CLASSIFICATION	2.8382543007855152E-5	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999088959035511	WITHOUT_CLASSIFICATION	9.110409644882867E-5	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999088959035511	WITHOUT_CLASSIFICATION	9.110409644882867E-5	DEFECT
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998683216313218	WITHOUT_CLASSIFICATION	1.3167836867823877E-4	DEFECT
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.99980866412227	WITHOUT_CLASSIFICATION	1.9133587772997865E-4	DEFECT
root fiber	WITHOUT_CLASSIFICATION	0.9999901486047873	WITHOUT_CLASSIFICATION	9.851395212675187E-6	DEFECT
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.999763131207947	WITHOUT_CLASSIFICATION	2.3686879205291766E-4	DEFECT
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9998925154158209	WITHOUT_CLASSIFICATION	1.0748458417907408E-4	DEFECT
extras flag	WITHOUT_CLASSIFICATION	0.9999462980335823	WITHOUT_CLASSIFICATION	5.370196641768029E-5	DEFECT
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
...nothing	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
utility method	WITHOUT_CLASSIFICATION	0.9999640552930219	WITHOUT_CLASSIFICATION	3.59447069781271E-5	DEFECT
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999509278063979	WITHOUT_CLASSIFICATION	4.907219360200194E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999825097292319	WITHOUT_CLASSIFICATION	1.749027076815918E-5	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999009200759845	WITHOUT_CLASSIFICATION	9.907992401552912E-5	DEFECT
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9977323180191998	WITHOUT_CLASSIFICATION	0.0022676819808001066	DEFECT
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999912017037607	WITHOUT_CLASSIFICATION	8.798296239413064E-6	DEFECT
MRI does it!	WITHOUT_CLASSIFICATION	0.9997486457117061	WITHOUT_CLASSIFICATION	2.513542882938843E-4	DEFECT
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997279571240665	WITHOUT_CLASSIFICATION	2.720428759335316E-4	DEFECT
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996901920896952	WITHOUT_CLASSIFICATION	3.098079103047029E-4	DEFECT
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9986790329886833	WITHOUT_CLASSIFICATION	0.001320967011316619	DEFECT
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998394293310447	WITHOUT_CLASSIFICATION	1.6057066895533144E-4	DEFECT
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999299518288004	WITHOUT_CLASSIFICATION	7.004817119962187E-5	DEFECT
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999878778730851	WITHOUT_CLASSIFICATION	1.2122126914876065E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999691833997529	WITHOUT_CLASSIFICATION	3.081660024699361E-5	DEFECT
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997865377795099	WITHOUT_CLASSIFICATION	2.1346222049019314E-4	DEFECT
recheck condition	WITHOUT_CLASSIFICATION	0.9987273949632118	WITHOUT_CLASSIFICATION	0.0012726050367881405	DEFECT
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999821353910618	WITHOUT_CLASSIFICATION	1.7864608938165595E-5	DEFECT
Construct key services	WITHOUT_CLASSIFICATION	0.9997781132777865	WITHOUT_CLASSIFICATION	2.2188672221355163E-4	DEFECT
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9995756242753423	WITHOUT_CLASSIFICATION	4.243757246577565E-4	DEFECT
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999880590281163	WITHOUT_CLASSIFICATION	1.194097188362217E-5	DEFECT
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999830038332872	WITHOUT_CLASSIFICATION	1.6996166712726196E-5	DEFECT
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999873866730504	WITHOUT_CLASSIFICATION	1.2613326949560452E-5	DEFECT
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9998238145538871	WITHOUT_CLASSIFICATION	1.761854461128419E-4	DEFECT
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999566454045015	WITHOUT_CLASSIFICATION	4.335459549848363E-5	DEFECT
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999887644255581	WITHOUT_CLASSIFICATION	1.1235574442047595E-5	DEFECT
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9997805451336774	WITHOUT_CLASSIFICATION	2.1945486632248554E-4	DEFECT
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9994605494630534	WITHOUT_CLASSIFICATION	5.394505369466807E-4	DEFECT
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999245051066522	WITHOUT_CLASSIFICATION	7.549489334770621E-5	DEFECT
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998365638847327	WITHOUT_CLASSIFICATION	1.6343611526721405E-4	DEFECT
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999779032832448	WITHOUT_CLASSIFICATION	2.209671675523546E-5	DEFECT
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997288570484385	WITHOUT_CLASSIFICATION	2.7114295156157946E-4	DEFECT
determine spacing	WITHOUT_CLASSIFICATION	0.9999614178834042	WITHOUT_CLASSIFICATION	3.858211659581265E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9999137176179426	WITHOUT_CLASSIFICATION	8.628238205737334E-5	DEFECT
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.999982237475982	WITHOUT_CLASSIFICATION	1.776252401799739E-5	DEFECT
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9994129257420031	WITHOUT_CLASSIFICATION	5.870742579967988E-4	DEFECT
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998408176435731	WITHOUT_CLASSIFICATION	1.5918235642681225E-4	DEFECT
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999955232272859	WITHOUT_CLASSIFICATION	4.4767727141139415E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9979518076675558	WITHOUT_CLASSIFICATION	0.0020481923324442994	DEFECT
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999948624800273	WITHOUT_CLASSIFICATION	5.137519972698035E-5	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9998636081963357	WITHOUT_CLASSIFICATION	1.3639180366423483E-4	DEFECT
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999940279230803	WITHOUT_CLASSIFICATION	5.972076919664845E-6	DEFECT
Default objects	WITHOUT_CLASSIFICATION	0.9999031209099513	WITHOUT_CLASSIFICATION	9.687909004878507E-5	DEFECT
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9997777697009789	WITHOUT_CLASSIFICATION	2.2223029902111952E-4	DEFECT
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999726902584039	WITHOUT_CLASSIFICATION	2.7309741596257228E-5	DEFECT
Java support	WITHOUT_CLASSIFICATION	0.9997957562885058	WITHOUT_CLASSIFICATION	2.0424371149419928E-4	DEFECT
Parser stats	WITHOUT_CLASSIFICATION	0.9999392658861802	WITHOUT_CLASSIFICATION	6.0734113819731883E-5	DEFECT
Compilation	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9996050359625315	WITHOUT_CLASSIFICATION	3.9496403746855304E-4	DEFECT
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9991263893335673	WITHOUT_CLASSIFICATION	8.736106664325917E-4	DEFECT
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999238044537184	WITHOUT_CLASSIFICATION	7.619554628148776E-5	DEFECT
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999398832705082	WITHOUT_CLASSIFICATION	6.011672949189819E-5	DEFECT
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999147726580759	WITHOUT_CLASSIFICATION	8.522734192411907E-5	DEFECT
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999380172076376	WITHOUT_CLASSIFICATION	6.198279236229198E-5	DEFECT
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9999094367767063	WITHOUT_CLASSIFICATION	9.056322329368338E-5	DEFECT
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9995163799663671	WITHOUT_CLASSIFICATION	4.836200336328947E-4	DEFECT
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999239962801354	WITHOUT_CLASSIFICATION	7.60037198646376E-5	DEFECT
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9991925380746537	WITHOUT_CLASSIFICATION	8.074619253464204E-4	DEFECT
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999352196925861	WITHOUT_CLASSIFICATION	6.478030741385842E-5	DEFECT
quoted-printable	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
default options	WITHOUT_CLASSIFICATION	0.9999869767395638	WITHOUT_CLASSIFICATION	1.3023260436018422E-5	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.9999926367112933	WITHOUT_CLASSIFICATION	7.363288706579809E-6	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.9999926367112933	WITHOUT_CLASSIFICATION	7.363288706579809E-6	DEFECT
long name option	WITHOUT_CLASSIFICATION	0.9999880566962172	WITHOUT_CLASSIFICATION	1.1943303782804673E-5	DEFECT
conversion	WITHOUT_CLASSIFICATION	0.9999944843988924	WITHOUT_CLASSIFICATION	5.515601107700357E-6	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999005413392025	WITHOUT_CLASSIFICATION	9.945866079752863E-5	DEFECT
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997475467357402	WITHOUT_CLASSIFICATION	2.5245326425978113E-4	DEFECT
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999409171511556	WITHOUT_CLASSIFICATION	5.9082848844294565E-5	DEFECT
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999535923514949	WITHOUT_CLASSIFICATION	4.6407648505093915E-4	DEFECT
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999330139115016	WITHOUT_CLASSIFICATION	6.698608849841411E-5	DEFECT
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999927825937204	WITHOUT_CLASSIFICATION	7.217406279557858E-6	DEFECT
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999883311207587	WITHOUT_CLASSIFICATION	1.1668879241408525E-5	DEFECT
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999993829797887	WITHOUT_CLASSIFICATION	6.170202113114266E-7	DEFECT
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9996515493753654	WITHOUT_CLASSIFICATION	3.484506246345977E-4	DEFECT
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9992988480018294	WITHOUT_CLASSIFICATION	7.01151998170469E-4	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9902456139206931	WITHOUT_CLASSIFICATION	0.009754386079306914	DEFECT
must not reallocate	WITHOUT_CLASSIFICATION	0.999819160327452	WITHOUT_CLASSIFICATION	1.8083967254801673E-4	DEFECT
Illegal combination	WITHOUT_CLASSIFICATION	0.9999369121723384	WITHOUT_CLASSIFICATION	6.308782766164381E-5	DEFECT
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999397627409531	WITHOUT_CLASSIFICATION	6.023725904687803E-5	DEFECT
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999714788581565	WITHOUT_CLASSIFICATION	2.852114184343092E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999982229455182	WITHOUT_CLASSIFICATION	1.777054481693422E-6	DEFECT
len + margin	WITHOUT_CLASSIFICATION	0.999922159574478	WITHOUT_CLASSIFICATION	7.784042552198265E-5	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999959960998909	WITHOUT_CLASSIFICATION	4.003900109148468E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999959960998909	WITHOUT_CLASSIFICATION	4.003900109148468E-6	DEFECT
copy pre-match substr	WITHOUT_CLASSIFICATION	0.999946374774364	WITHOUT_CLASSIFICATION	5.3625225636043685E-5	DEFECT
string given	WITHOUT_CLASSIFICATION	0.9999865231797574	WITHOUT_CLASSIFICATION	1.3476820242605509E-5	DEFECT
hash given	WITHOUT_CLASSIFICATION	0.9999965661579298	WITHOUT_CLASSIFICATION	3.4338420703147617E-6	DEFECT
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9996276031927765	WITHOUT_CLASSIFICATION	3.723968072234734E-4	DEFECT
substring longer than string	WITHOUT_CLASSIFICATION	0.9996102242905428	WITHOUT_CLASSIFICATION	3.897757094572473E-4	DEFECT
rb_str_substr	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999962983349645	WITHOUT_CLASSIFICATION	3.7016650355039913E-6	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999962983349645	WITHOUT_CLASSIFICATION	3.7016650355039913E-6	DEFECT
rb_str_splice	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.915088284037886	WITHOUT_CLASSIFICATION	0.08491171596211408	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999971791057994	WITHOUT_CLASSIFICATION	2.8208942005474E-6	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999971791057994	WITHOUT_CLASSIFICATION	2.8208942005474E-6	DEFECT
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9998918950893507	WITHOUT_CLASSIFICATION	1.0810491064925904E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995683300033593	WITHOUT_CLASSIFICATION	4.3166999664062065E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995683300033593	WITHOUT_CLASSIFICATION	4.3166999664062065E-4	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999946864253546	WITHOUT_CLASSIFICATION	5.313574645407003E-6	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999946864253546	WITHOUT_CLASSIFICATION	5.313574645407003E-6	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
QTRUE	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999563769409455	WITHOUT_CLASSIFICATION	4.362305905438611E-5	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999433218721726	WITHOUT_CLASSIFICATION	5.66781278274527E-5	DEFECT
long size bits in byte	WITHOUT_CLASSIFICATION	0.9999032987470814	WITHOUT_CLASSIFICATION	9.670125291861682E-5	DEFECT
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9999145637379562	WITHOUT_CLASSIFICATION	8.543626204381063E-5	DEFECT
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9998686942506441	WITHOUT_CLASSIFICATION	1.313057493560488E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999521002878164	WITHOUT_CLASSIFICATION	4.789971218364329E-5	DEFECT
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999232884064355	WITHOUT_CLASSIFICATION	7.671159356449498E-5	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999521002878164	WITHOUT_CLASSIFICATION	4.789971218364329E-5	DEFECT
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9987451427949108	WITHOUT_CLASSIFICATION	0.0012548572050891669	DEFECT
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999655376708945	WITHOUT_CLASSIFICATION	3.4462329105611385E-5	DEFECT
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999668613254563	WITHOUT_CLASSIFICATION	3.313867454361472E-5	DEFECT
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999421106085324	WITHOUT_CLASSIFICATION	5.7889391467516885E-5	DEFECT
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999501806923091	WITHOUT_CLASSIFICATION	4.981930769072579E-5	DEFECT
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9981654978809628	WITHOUT_CLASSIFICATION	0.0018345021190372152	DEFECT
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999635012198913	WITHOUT_CLASSIFICATION	3.6498780108749255E-5	DEFECT
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999374177238055	WITHOUT_CLASSIFICATION	6.258227619454272E-5	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998567248175501	WITHOUT_CLASSIFICATION	1.4327518244998857E-4	DEFECT
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998733043772048	WITHOUT_CLASSIFICATION	1.2669562279516585E-4	DEFECT
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999026891358415	WITHOUT_CLASSIFICATION	9.731086415848617E-5	DEFECT
file not given	WITHOUT_CLASSIFICATION	0.9999110292510366	WITHOUT_CLASSIFICATION	8.897074896332887E-5	DEFECT
string to eval	WITHOUT_CLASSIFICATION	0.9999367255125581	WITHOUT_CLASSIFICATION	6.32744874419847E-5	DEFECT
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998918274007078	WITHOUT_CLASSIFICATION	1.0817259929226334E-4	DEFECT
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999799317643053	WITHOUT_CLASSIFICATION	2.0068235694653344E-5	DEFECT
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999724680408398	WITHOUT_CLASSIFICATION	2.7531959160198143E-4	DEFECT
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998535143470119	WITHOUT_CLASSIFICATION	1.4648565298815846E-4	DEFECT
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999071538166971	WITHOUT_CLASSIFICATION	9.284618330279899E-5	DEFECT
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9991836460432881	WITHOUT_CLASSIFICATION	8.163539567117369E-4	DEFECT
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9877772049761584	WITHOUT_CLASSIFICATION	0.012222795023841618	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999116580859616	WITHOUT_CLASSIFICATION	8.834191403836618E-5	DEFECT
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999970429797117	WITHOUT_CLASSIFICATION	2.95702028823568E-6	DEFECT
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999754274472019	WITHOUT_CLASSIFICATION	2.4572552798185846E-5	DEFECT
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999410629376451	WITHOUT_CLASSIFICATION	5.8937062354939024E-5	DEFECT
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999914323478164	WITHOUT_CLASSIFICATION	8.567652183658664E-6	DEFECT
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999721882853624	WITHOUT_CLASSIFICATION	2.7811714637575606E-5	DEFECT
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999917335910632	WITHOUT_CLASSIFICATION	8.266408936837945E-6	DEFECT
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999929522545252	WITHOUT_CLASSIFICATION	7.047745474767715E-6	DEFECT
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999848204908154	WITHOUT_CLASSIFICATION	1.5179509184571333E-5	DEFECT
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999782998884129	WITHOUT_CLASSIFICATION	2.170011158704784E-5	DEFECT
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999944674436567	WITHOUT_CLASSIFICATION	5.532556343339466E-6	DEFECT
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999952439019174	WITHOUT_CLASSIFICATION	4.756098082668415E-6	DEFECT
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999908861285236	WITHOUT_CLASSIFICATION	9.113871476392956E-5	DEFECT
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999831806291898	WITHOUT_CLASSIFICATION	1.6819370810269435E-5	DEFECT
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999880042988027	WITHOUT_CLASSIFICATION	1.199570119720552E-5	DEFECT
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999658092682174	WITHOUT_CLASSIFICATION	3.419073178259695E-5	DEFECT
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999919473860022	WITHOUT_CLASSIFICATION	8.052613997838783E-6	DEFECT
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999859321355534	WITHOUT_CLASSIFICATION	1.40678644466341E-5	DEFECT
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999658521274956	WITHOUT_CLASSIFICATION	3.41478725044792E-5	DEFECT
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999922287686895	WITHOUT_CLASSIFICATION	7.771231310552712E-6	DEFECT
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999980097607563	WITHOUT_CLASSIFICATION	1.9902392437022606E-5	DEFECT
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999858054521436	WITHOUT_CLASSIFICATION	1.4194547856435216E-5	DEFECT
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999790543689574	WITHOUT_CLASSIFICATION	2.094563104253478E-5	DEFECT
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999925853054527	WITHOUT_CLASSIFICATION	7.414694547421982E-6	DEFECT
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999716909366649	WITHOUT_CLASSIFICATION	2.8309063335087134E-5	DEFECT
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999675363866416	WITHOUT_CLASSIFICATION	3.246361335840333E-5	DEFECT
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999923396224131	WITHOUT_CLASSIFICATION	7.660377586955076E-6	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998823192945215	WITHOUT_CLASSIFICATION	1.1768070547849596E-4	DEFECT
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9996585920208452	WITHOUT_CLASSIFICATION	3.4140797915477143E-4	DEFECT
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999427422355884	WITHOUT_CLASSIFICATION	5.725776441160242E-5	DEFECT
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999930020907323	WITHOUT_CLASSIFICATION	6.99790926774052E-6	DEFECT
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9995522573717975	WITHOUT_CLASSIFICATION	4.4774262820243825E-4	DEFECT
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999940435769743	WITHOUT_CLASSIFICATION	5.95642302567567E-6	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.999998191936698	WITHOUT_CLASSIFICATION	1.8080633019799263E-6	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.999998191936698	WITHOUT_CLASSIFICATION	1.8080633019799263E-6	DEFECT
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997985439045658	WITHOUT_CLASSIFICATION	2.014560954342272E-4	DEFECT
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999245676207499	WITHOUT_CLASSIFICATION	7.543237925001275E-5	DEFECT
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9974531887686982	WITHOUT_CLASSIFICATION	0.0025468112313018895	DEFECT
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999724003230129	WITHOUT_CLASSIFICATION	2.7599676987060257E-5	DEFECT
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999973308241803	WITHOUT_CLASSIFICATION	2.669175819699686E-5	DEFECT
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999820570009522	WITHOUT_CLASSIFICATION	1.794299904774075E-5	DEFECT
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9909972714746579	WITHOUT_CLASSIFICATION	0.009002728525342061	DEFECT
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999992378197716	WITHOUT_CLASSIFICATION	7.621802284030438E-6	DEFECT
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998575178244997	WITHOUT_CLASSIFICATION	1.4248217550016627E-4	DEFECT
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999668733941053	WITHOUT_CLASSIFICATION	3.312660589465695E-5	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999864523331141	WITHOUT_CLASSIFICATION	1.3547666885905535E-5	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999864523331141	WITHOUT_CLASSIFICATION	1.3547666885905535E-5	DEFECT
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9999498835196681	WITHOUT_CLASSIFICATION	5.0116480332011334E-5	DEFECT
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9996944140679368	WITHOUT_CLASSIFICATION	3.0558593206326943E-4	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997642749635696	WITHOUT_CLASSIFICATION	2.3572503643031715E-4	DEFECT
Create Constants class	WITHOUT_CLASSIFICATION	0.9998417768544813	WITHOUT_CLASSIFICATION	1.5822314551871723E-4	DEFECT
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999899361175691	WITHOUT_CLASSIFICATION	1.0063882430912531E-5	DEFECT
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999910109919795	WITHOUT_CLASSIFICATION	8.989008020405154E-6	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999779005362405	WITHOUT_CLASSIFICATION	2.2099463759629917E-5	DEFECT
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9997161861113789	WITHOUT_CLASSIFICATION	2.838138886210389E-4	DEFECT
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999990451343462	WITHOUT_CLASSIFICATION	9.54865653717603E-7	DEFECT
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9994279828356132	WITHOUT_CLASSIFICATION	5.720171643867779E-4	DEFECT
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9998814109857732	WITHOUT_CLASSIFICATION	1.1858901422672608E-4	DEFECT
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999066205851914	WITHOUT_CLASSIFICATION	9.337941480856461E-5	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9999312574635623	WITHOUT_CLASSIFICATION	6.874253643779214E-5	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9999312574635623	WITHOUT_CLASSIFICATION	6.874253643779214E-5	DEFECT
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999074068847598	WITHOUT_CLASSIFICATION	9.259311524021052E-4	DEFECT
Should we do anything?	WITHOUT_CLASSIFICATION	0.9999709419019536	WITHOUT_CLASSIFICATION	2.9058098046365364E-5	DEFECT
File class methods	WITHOUT_CLASSIFICATION	0.9998757617331878	WITHOUT_CLASSIFICATION	1.2423826681214764E-4	DEFECT
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998212527229416	WITHOUT_CLASSIFICATION	1.787472770583062E-4	DEFECT
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999419882911547	WITHOUT_CLASSIFICATION	5.801170884536224E-5	DEFECT
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998754008842478	WITHOUT_CLASSIFICATION	1.2459911575227206E-4	DEFECT
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998832181398722	WITHOUT_CLASSIFICATION	1.1678186012779792E-4	DEFECT
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999255802563002	WITHOUT_CLASSIFICATION	7.441974369980346E-5	DEFECT
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.998060753260108	WITHOUT_CLASSIFICATION	0.001939246739891936	DEFECT
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9999564704556071	WITHOUT_CLASSIFICATION	4.352954439283936E-5	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997642749635696	WITHOUT_CLASSIFICATION	2.3572503643031715E-4	DEFECT
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998174397081747	WITHOUT_CLASSIFICATION	1.8256029182522416E-4	DEFECT
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9975285287491805	WITHOUT_CLASSIFICATION	0.0024714712508193785	DEFECT
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999847163494401	WITHOUT_CLASSIFICATION	1.5283650559924544E-5	DEFECT
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.999984902511104	WITHOUT_CLASSIFICATION	1.5097488895942828E-5	DEFECT
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999464264727556	WITHOUT_CLASSIFICATION	5.357352724455196E-5	DEFECT
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.999986135633252	WITHOUT_CLASSIFICATION	1.3864366748083096E-5	DEFECT
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999944659260197	WITHOUT_CLASSIFICATION	5.53407398033256E-6	DEFECT
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999059564626785	WITHOUT_CLASSIFICATION	9.40435373213572E-5	DEFECT
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9998448158296406	WITHOUT_CLASSIFICATION	1.551841703594832E-4	DEFECT
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999730234679027	WITHOUT_CLASSIFICATION	2.6976532097311064E-5	DEFECT
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999730234679027	WITHOUT_CLASSIFICATION	2.6976532097311064E-5	DEFECT
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999891811871524	WITHOUT_CLASSIFICATION	1.0818812847543625E-5	DEFECT
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999682630103862	WITHOUT_CLASSIFICATION	3.173698961378942E-5	DEFECT
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9996017384151681	WITHOUT_CLASSIFICATION	3.9826158483188996E-4	DEFECT
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999609301611893	WITHOUT_CLASSIFICATION	3.90698388108185E-5	DEFECT
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999412206795717	WITHOUT_CLASSIFICATION	5.877932042831958E-5	DEFECT
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9985128680364802	WITHOUT_CLASSIFICATION	0.0014871319635197586	DEFECT
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb: readable	WITHOUT_CLASSIFICATION	0.9999496784106293	WITHOUT_CLASSIFICATION	5.032158937069702E-5	DEFECT
rename is successful	WITHOUT_CLASSIFICATION	0.9998677865639245	WITHOUT_CLASSIFICATION	1.3221343607553552E-4	DEFECT
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9997096414039665	WITHOUT_CLASSIFICATION	2.903585960335357E-4	DEFECT
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999880997951637	WITHOUT_CLASSIFICATION	1.1900204836286975E-5	DEFECT
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998052642835075	WITHOUT_CLASSIFICATION	1.9473571649258705E-4	DEFECT
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9980694435182483	WITHOUT_CLASSIFICATION	0.0019305564817516984	DEFECT
RubyContinuation	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9999543095792557	WITHOUT_CLASSIFICATION	4.5690420744302386E-5	DEFECT
16 ?	WITHOUT_CLASSIFICATION	0.9999972718452486	WITHOUT_CLASSIFICATION	2.728154751507461E-6	DEFECT
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998908463720811	WITHOUT_CLASSIFICATION	1.0915362791891057E-4	DEFECT
size + 1;	WITHOUT_CLASSIFICATION	0.9999841675301132	WITHOUT_CLASSIFICATION	1.5832469886855723E-5	DEFECT
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.993731955880785	WITHOUT_CLASSIFICATION	0.006268044119214949	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9999103583862885	WITHOUT_CLASSIFICATION	8.9641613711416E-5	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9999103583862885	WITHOUT_CLASSIFICATION	8.9641613711416E-5	DEFECT
put implementation	WITHOUT_CLASSIFICATION	0.9998931585683418	WITHOUT_CLASSIFICATION	1.0684143165809265E-4	DEFECT
get implementation	WITHOUT_CLASSIFICATION	0.9999077615722759	WITHOUT_CLASSIFICATION	9.223842772405407E-5	DEFECT
specialized for value	WITHOUT_CLASSIFICATION	0.9999513864481628	WITHOUT_CLASSIFICATION	4.861355183716079E-5	DEFECT
delete implementation	WITHOUT_CLASSIFICATION	0.9998185781567734	WITHOUT_CLASSIFICATION	1.8142184322662594E-4	DEFECT
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999494695224678	WITHOUT_CLASSIFICATION	5.053047753221139E-5	DEFECT
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9999487387695232	WITHOUT_CLASSIFICATION	5.1261230476805836E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
update the hash value	WITHOUT_CLASSIFICATION	0.9999728641428941	WITHOUT_CLASSIFICATION	2.713585710588365E-5	DEFECT
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9978292021661875	WITHOUT_CLASSIFICATION	0.002170797833812559	DEFECT
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999106277779684	WITHOUT_CLASSIFICATION	8.937222203167252E-5	DEFECT
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998683216313218	WITHOUT_CLASSIFICATION	1.3167836867823877E-4	DEFECT
remain where we are	WITHOUT_CLASSIFICATION	0.9999875776939919	WITHOUT_CLASSIFICATION	1.2422306008127267E-5	DEFECT
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9991369291873141	WITHOUT_CLASSIFICATION	8.630708126858917E-4	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9998636081963357	WITHOUT_CLASSIFICATION	1.3639180366423483E-4	DEFECT
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999505844789659	WITHOUT_CLASSIFICATION	4.9415521034171924E-5	DEFECT
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.999922351226244	WITHOUT_CLASSIFICATION	7.764877375612704E-5	DEFECT
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998701315709565	WITHOUT_CLASSIFICATION	1.2986842904348314E-4	DEFECT
first try as directory	WITHOUT_CLASSIFICATION	0.9999984137566046	WITHOUT_CLASSIFICATION	1.5862433954373315E-6	DEFECT
next as regular file	WITHOUT_CLASSIFICATION	0.9999193605673893	WITHOUT_CLASSIFICATION	8.063943261069625E-5	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9998506155903977	WITHOUT_CLASSIFICATION	1.493844096023465E-4	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Stream-based	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998675767523629	WITHOUT_CLASSIFICATION	1.3242324763709784E-4	DEFECT
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9998045249539641	WITHOUT_CLASSIFICATION	1.954750460358012E-4	DEFECT
Constants for seek	WITHOUT_CLASSIFICATION	0.999950466267425	WITHOUT_CLASSIFICATION	4.9533732574955255E-5	DEFECT
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9996352171682421	WITHOUT_CLASSIFICATION	3.647828317578786E-4	DEFECT
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999213635404276	WITHOUT_CLASSIFICATION	7.863645957236299E-5	DEFECT
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999360157565079	WITHOUT_CLASSIFICATION	6.398424349209764E-5	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999953902730094	WITHOUT_CLASSIFICATION	4.6097269905973615E-6	DEFECT
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999494684371312	WITHOUT_CLASSIFICATION	5.05315628688805E-5	DEFECT
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999776503977428	WITHOUT_CLASSIFICATION	2.2349602257271498E-5	DEFECT
re-register	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9998579502161967	WITHOUT_CLASSIFICATION	1.4204978380319812E-4	DEFECT
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.99999476940214	WITHOUT_CLASSIFICATION	5.230597860048568E-6	DEFECT
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999752871957086	WITHOUT_CLASSIFICATION	2.4712804291297134E-5	DEFECT
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.999991574205424	WITHOUT_CLASSIFICATION	8.425794575968027E-6	DEFECT
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9997070090308707	WITHOUT_CLASSIFICATION	2.929909691292576E-4	DEFECT
IO class methods.	WITHOUT_CLASSIFICATION	0.9998862410210325	WITHOUT_CLASSIFICATION	1.1375897896741275E-4	DEFECT
use original modes	WITHOUT_CLASSIFICATION	0.9999336973417262	WITHOUT_CLASSIFICATION	6.630265827381091E-5	DEFECT
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999973100803919	WITHOUT_CLASSIFICATION	2.6899196080427326E-6	DEFECT
redundant, done above as well	WITHOUT_CLASSIFICATION	0.999865332768019	WITHOUT_CLASSIFICATION	1.346672319808695E-4	DEFECT
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999013822764677	WITHOUT_CLASSIFICATION	9.861772353225941E-5	DEFECT
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999787467416811	WITHOUT_CLASSIFICATION	2.1253258318964036E-5	DEFECT
isRetained=true	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9345181033907969	WITHOUT_CLASSIFICATION	0.06548189660920314	DEFECT
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9995341833106265	WITHOUT_CLASSIFICATION	4.658166893735311E-4	DEFECT
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9936383141433497	WITHOUT_CLASSIFICATION	0.0063616858566502635	DEFECT
Everything written	WITHOUT_CLASSIFICATION	0.9999495164157058	WITHOUT_CLASSIFICATION	5.048358429412226E-5	DEFECT
return len - n;	WITHOUT_CLASSIFICATION	0.9999341672141362	WITHOUT_CLASSIFICATION	6.58327858637899E-5	DEFECT
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999963667240344	WITHOUT_CLASSIFICATION	3.633275965601213E-5	DEFECT
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9979891853651054	WITHOUT_CLASSIFICATION	0.002010814634894531	DEFECT
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9998531866538222	WITHOUT_CLASSIFICATION	1.468133461778291E-4	DEFECT
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999675300719186	WITHOUT_CLASSIFICATION	3.246992808135815E-5	DEFECT
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999664841233459	WITHOUT_CLASSIFICATION	3.3515876654169315E-5	DEFECT
hmmmm	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999248944832612	WITHOUT_CLASSIFICATION	7.510551673879631E-4	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9998662042190735	WITHOUT_CLASSIFICATION	1.337957809264389E-4	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999488373954649	WITHOUT_CLASSIFICATION	5.11626045350954E-5	DEFECT
Length to read	WITHOUT_CLASSIFICATION	0.9999751986198248	WITHOUT_CLASSIFICATION	2.4801380175268635E-5	DEFECT
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999459468828352	WITHOUT_CLASSIFICATION	5.405311716470262E-5	DEFECT
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999469127881426	WITHOUT_CLASSIFICATION	5.308721185724248E-5	DEFECT
select until read is ready	WITHOUT_CLASSIFICATION	0.9996985603605915	WITHOUT_CLASSIFICATION	3.0143963940853125E-4	DEFECT
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998729995938379	WITHOUT_CLASSIFICATION	1.270004061621817E-4	DEFECT
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998690058632848	WITHOUT_CLASSIFICATION	1.3099413671530572E-4	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999068058935591	WITHOUT_CLASSIFICATION	9.319410644086668E-5	DEFECT
rb: writable	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999068058935591	WITHOUT_CLASSIFICATION	9.319410644086668E-5	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9993029796045261	WITHOUT_CLASSIFICATION	6.970203954738353E-4	DEFECT
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8753597022465072	WITHOUT_CLASSIFICATION	0.12464029775349277	DEFECT
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999575156895869	WITHOUT_CLASSIFICATION	4.248431041308357E-5	DEFECT
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9191559288542089	WITHOUT_CLASSIFICATION	0.080844071145791	DEFECT
class methods for IO	WITHOUT_CLASSIFICATION	0.9999254674969192	WITHOUT_CLASSIFICATION	7.453250308072596E-5	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999760481088302	WITHOUT_CLASSIFICATION	2.3951891169793787E-5	DEFECT
write	WITHOUT_CLASSIFICATION	0.9999936909807287	WITHOUT_CLASSIFICATION	6.309019271319927E-6	DEFECT
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9940097281661164	WITHOUT_CLASSIFICATION	0.005990271833883498	DEFECT
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997049493232	WITHOUT_CLASSIFICATION	2.9505067672572724E-7	DEFECT
FIXME: process options	WITHOUT_CLASSIFICATION	0.9923649600122636	WITHOUT_CLASSIFICATION	0.007635039987736509	DEFECT
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9988088197272225	WITHOUT_CLASSIFICATION	0.0011911802727775905	DEFECT
NIO based pipe	WITHOUT_CLASSIFICATION	0.9999749155121064	WITHOUT_CLASSIFICATION	2.5084487893669448E-5	DEFECT
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998792443243602	WITHOUT_CLASSIFICATION	1.2075567563981847E-4	DEFECT
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999795168795472	WITHOUT_CLASSIFICATION	2.048312045276295E-5	DEFECT
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9999856908885503	WITHOUT_CLASSIFICATION	1.4309111449732093E-5	DEFECT
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9215176129586276	WITHOUT_CLASSIFICATION	0.07848238704137249	DEFECT
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9984294937610027	WITHOUT_CLASSIFICATION	0.0015705062389972878	DEFECT
The class of this object	WITHOUT_CLASSIFICATION	0.9996934996147304	WITHOUT_CLASSIFICATION	3.0650038526962807E-4	DEFECT
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999451345232429	WITHOUT_CLASSIFICATION	5.4865476757189524E-5	DEFECT
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9819353382704878	WITHOUT_CLASSIFICATION	0.01806466172951216	DEFECT
rb_class_boot	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
for interface impls	WITHOUT_CLASSIFICATION	0.9999780849353337	WITHOUT_CLASSIFICATION	2.191506466622543E-5	DEFECT
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9995849437946046	WITHOUT_CLASSIFICATION	4.150562053954356E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9998950017215458	WITHOUT_CLASSIFICATION	1.0499827845423054E-4	DEFECT
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999156512741734	WITHOUT_CLASSIFICATION	8.4348725826606E-4	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999054172692028	WITHOUT_CLASSIFICATION	9.458273079719786E-5	DEFECT
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9997045785675778	WITHOUT_CLASSIFICATION	2.9542143242227467E-4	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999483155641699	WITHOUT_CLASSIFICATION	5.168443583008134E-5	DEFECT
Struct methods	WITHOUT_CLASSIFICATION	0.9999511672004003	WITHOUT_CLASSIFICATION	4.883279959963499E-5	DEFECT
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9996686996864506	WITHOUT_CLASSIFICATION	3.3130031354937877E-4	DEFECT
define access methods.	WITHOUT_CLASSIFICATION	0.9999627489311954	WITHOUT_CLASSIFICATION	3.725106880461439E-5	DEFECT
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999853897289436	WITHOUT_CLASSIFICATION	1.4610271056466581E-5	DEFECT
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999997379141537	WITHOUT_CLASSIFICATION	2.6208584630650538E-6	DEFECT
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999968333939548	WITHOUT_CLASSIFICATION	3.166606045134876E-6	DEFECT
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999385070407481	WITHOUT_CLASSIFICATION	6.149295925189848E-4	DEFECT
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999243574324763	WITHOUT_CLASSIFICATION	7.564256752363465E-5	DEFECT
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9999730215622976	WITHOUT_CLASSIFICATION	2.697843770242113E-5	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.9999969453178481	WITHOUT_CLASSIFICATION	3.054682151918666E-6	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.9999969453178481	WITHOUT_CLASSIFICATION	3.054682151918666E-6	DEFECT
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999980346935305	WITHOUT_CLASSIFICATION	1.9653064694982142E-5	DEFECT
superClass may be null.	WITHOUT_CLASSIFICATION	0.9998807507013018	WITHOUT_CLASSIFICATION	1.1924929869829499E-4	DEFECT
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9994615292033814	WITHOUT_CLASSIFICATION	5.384707966186572E-4	DEFECT
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999994333669474	WITHOUT_CLASSIFICATION	5.66633052606407E-6	DEFECT
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9998016361038741	WITHOUT_CLASSIFICATION	1.9836389612585637E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999828324309599	WITHOUT_CLASSIFICATION	1.7167569040151703E-5	DEFECT
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999128467886971	WITHOUT_CLASSIFICATION	8.715321130292885E-5	DEFECT
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999758967592073	WITHOUT_CLASSIFICATION	2.4103240792800547E-5	DEFECT
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999965626676975	WITHOUT_CLASSIFICATION	3.437332302500332E-5	DEFECT
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999956656899421	WITHOUT_CLASSIFICATION	4.334310057890289E-6	DEFECT
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999900738891303	WITHOUT_CLASSIFICATION	9.926110869609423E-6	DEFECT
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999845774931011	WITHOUT_CLASSIFICATION	1.5422506898868165E-5	DEFECT
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999247198863616	WITHOUT_CLASSIFICATION	7.528011363846871E-5	DEFECT
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999485500120772	WITHOUT_CLASSIFICATION	5.144998792288592E-5	DEFECT
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999996060165843	WITHOUT_CLASSIFICATION	3.9398341565649573E-7	DEFECT
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999697916723962	WITHOUT_CLASSIFICATION	3.020832760385596E-5	DEFECT
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999549171810629	WITHOUT_CLASSIFICATION	4.508281893715332E-5	DEFECT
reopen a java class	WITHOUT_CLASSIFICATION	0.9996882704072281	WITHOUT_CLASSIFICATION	3.11729592771938E-4	DEFECT
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9985915700435076	WITHOUT_CLASSIFICATION	0.0014084299564924299	DEFECT
reopen a java module	WITHOUT_CLASSIFICATION	0.9999028421869921	WITHOUT_CLASSIFICATION	9.715781300799429E-5	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.8343041079455782	WITHOUT_CLASSIFICATION	0.16569589205442192	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.8343041079455782	WITHOUT_CLASSIFICATION	0.16569589205442192	DEFECT
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999925495669667	WITHOUT_CLASSIFICATION	7.450433033401861E-6	DEFECT
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999694626391292	WITHOUT_CLASSIFICATION	3.0537360870783264E-5	DEFECT
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9995026245271058	WITHOUT_CLASSIFICATION	4.973754728941805E-4	DEFECT
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999925138911403	WITHOUT_CLASSIFICATION	7.4861088598059165E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985127194827799	WITHOUT_CLASSIFICATION	0.0014872805172201173	DEFECT
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9998527203652511	WITHOUT_CLASSIFICATION	1.4727963474897953E-4	DEFECT
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9998247448492479	WITHOUT_CLASSIFICATION	1.7525515075211636E-4	DEFECT
Module class methods	WITHOUT_CLASSIFICATION	0.9998777671422018	WITHOUT_CLASSIFICATION	1.2223285779817503E-4	DEFECT
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999982390614746	WITHOUT_CLASSIFICATION	1.7609385255399168E-6	DEFECT
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9998975612246624	WITHOUT_CLASSIFICATION	1.0243877533754738E-4	DEFECT
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999928527633901	WITHOUT_CLASSIFICATION	7.147236609932521E-6	DEFECT
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999977274544427	WITHOUT_CLASSIFICATION	2.272545557302469E-6	DEFECT
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999708414683752	WITHOUT_CLASSIFICATION	2.9158531624835785E-5	DEFECT
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999745506343112	WITHOUT_CLASSIFICATION	2.5449365688862018E-5	DEFECT
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999125469691612	WITHOUT_CLASSIFICATION	8.74530308387513E-5	DEFECT
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9992256611625299	WITHOUT_CLASSIFICATION	7.743388374701646E-4	DEFECT
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999486991157006	WITHOUT_CLASSIFICATION	5.1300884299239E-5	DEFECT
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999797381529795	WITHOUT_CLASSIFICATION	2.026184702052325E-5	DEFECT
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9993391365249322	WITHOUT_CLASSIFICATION	6.608634750678338E-4	DEFECT
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9987168650349583	WITHOUT_CLASSIFICATION	0.0012831349650417143	DEFECT
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998921092140193	WITHOUT_CLASSIFICATION	1.0789078598070344E-4	DEFECT
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9997447295162902	WITHOUT_CLASSIFICATION	2.5527048370984295E-4	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998541811698196	WITHOUT_CLASSIFICATION	1.4581883018047016E-4	DEFECT
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999848893371953	WITHOUT_CLASSIFICATION	1.5110662804702595E-4	DEFECT
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9983596101807953	WITHOUT_CLASSIFICATION	0.0016403898192047057	DEFECT
reopen	WITHOUT_CLASSIFICATION	0.9999909165625416	WITHOUT_CLASSIFICATION	9.083437458383678E-6	DEFECT
ARGF methods	WITHOUT_CLASSIFICATION	0.9999511672004003	WITHOUT_CLASSIFICATION	4.883279959963499E-5	DEFECT
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
one optional, one required args	WITHOUT_CLASSIFICATION	0.9998496795258799	WITHOUT_CLASSIFICATION	1.5032047412008327E-4	DEFECT
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999681507224396	WITHOUT_CLASSIFICATION	3.184927756036221E-5	DEFECT
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999993454148511	WITHOUT_CLASSIFICATION	6.545851488845467E-6	DEFECT
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999101168627551	WITHOUT_CLASSIFICATION	8.988313724490645E-5	DEFECT
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999660798697686	WITHOUT_CLASSIFICATION	3.392013023141695E-5	DEFECT
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999750896075321	WITHOUT_CLASSIFICATION	2.4910392467787256E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999276312598087	WITHOUT_CLASSIFICATION	7.236874019136208E-5	DEFECT
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998524581032718	WITHOUT_CLASSIFICATION	1.4754189672825898E-4	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9983934551798532	WITHOUT_CLASSIFICATION	0.001606544820146725	DEFECT
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999877621921133	WITHOUT_CLASSIFICATION	1.2237807886826271E-5	DEFECT
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999884420881328	WITHOUT_CLASSIFICATION	1.1557911867271997E-5	DEFECT
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998493921146846	WITHOUT_CLASSIFICATION	1.5060788531541595E-4	DEFECT
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998748017551372	WITHOUT_CLASSIFICATION	1.2519824486277006E-4	DEFECT
ignore error	WITHOUT_CLASSIFICATION	0.999985018678972	WITHOUT_CLASSIFICATION	1.4981321027953797E-5	DEFECT
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.999941420314632	WITHOUT_CLASSIFICATION	5.8579685368021866E-5	DEFECT
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.999939022286725	WITHOUT_CLASSIFICATION	6.0977713274974074E-5	DEFECT
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9998607607216494	WITHOUT_CLASSIFICATION	1.3923927835065778E-4	DEFECT
odd	WITHOUT_CLASSIFICATION	0.9999912806970672	WITHOUT_CLASSIFICATION	8.719302932784977E-6	DEFECT
JRubyClient	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9993547700731068	WITHOUT_CLASSIFICATION	6.452299268931414E-4	DEFECT
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999550464511261	WITHOUT_CLASSIFICATION	4.495354887394136E-5	DEFECT
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999821324376121	WITHOUT_CLASSIFICATION	1.7867562387835232E-5	DEFECT
r = x 2 y	WITHOUT_CLASSIFICATION	0.9998903128952435	WITHOUT_CLASSIFICATION	1.0968710475636315E-4	DEFECT
0!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
1!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
2!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
3!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
4!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
5!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
6!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
7!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
8!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
9!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
11!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
12!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
13!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
15!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
16!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
17!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
19!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
20!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
21!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Static constants	WITHOUT_CLASSIFICATION	0.9999737450139494	WITHOUT_CLASSIFICATION	2.6254986050642647E-5	DEFECT
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999976914033063	WITHOUT_CLASSIFICATION	2.3085966935748444E-6	DEFECT
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999753923514532	WITHOUT_CLASSIFICATION	2.4607648546900642E-5	DEFECT
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999934690166478	WITHOUT_CLASSIFICATION	6.53098335220116E-5	DEFECT
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9988855504533697	WITHOUT_CLASSIFICATION	0.0011144495466303287	DEFECT
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999501307716159	WITHOUT_CLASSIFICATION	4.986922838403172E-5	DEFECT
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999833050280612	WITHOUT_CLASSIFICATION	1.669497193873362E-5	DEFECT
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.998703949906143	WITHOUT_CLASSIFICATION	0.001296050093857093	DEFECT
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999355695555953	WITHOUT_CLASSIFICATION	6.44304444047709E-5	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999527515255708	WITHOUT_CLASSIFICATION	4.724847442905048E-5	DEFECT
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8277608423178928	WITHOUT_CLASSIFICATION	0.17223915768210715	DEFECT
integer division	WITHOUT_CLASSIFICATION	0.9999412743703615	WITHOUT_CLASSIFICATION	5.872562963862373E-5	DEFECT
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999198928766662	WITHOUT_CLASSIFICATION	8.010712333385139E-5	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999377059938898	WITHOUT_CLASSIFICATION	6.22940061103029E-5	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999377059938898	WITHOUT_CLASSIFICATION	6.22940061103029E-5	DEFECT
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9999501307716159	WITHOUT_CLASSIFICATION	4.986922838403172E-5	DEFECT
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9996644470124258	WITHOUT_CLASSIFICATION	3.355529875741554E-4	DEFECT
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999969801838846	WITHOUT_CLASSIFICATION	3.0198161154616046E-6	DEFECT
...round to that digit	WITHOUT_CLASSIFICATION	0.9998851912263741	WITHOUT_CLASSIFICATION	1.1480877362596647E-4	DEFECT
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.99997367228312	WITHOUT_CLASSIFICATION	2.6327716880028627E-5	DEFECT
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999468784423542	WITHOUT_CLASSIFICATION	5.312155764583622E-5	DEFECT
sign	WITHOUT_CLASSIFICATION	0.9999908290157052	WITHOUT_CLASSIFICATION	9.170984294874875E-6	DEFECT
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999181161364447	WITHOUT_CLASSIFICATION	8.18838635553271E-5	DEFECT
normalize the value	WITHOUT_CLASSIFICATION	0.9999687571116119	WITHOUT_CLASSIFICATION	3.124288838802469E-5	DEFECT
base	WITHOUT_CLASSIFICATION	0.9999932164725687	WITHOUT_CLASSIFICATION	6.783527431289925E-6	DEFECT
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999597755873046	WITHOUT_CLASSIFICATION	4.0224412695392427E-4	DEFECT
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999330200148538	WITHOUT_CLASSIFICATION	6.697998514614269E-5	DEFECT
eh?!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999649335288031	WITHOUT_CLASSIFICATION	3.506647119689859E-4	DEFECT
General number and precision checking	WITHOUT_CLASSIFICATION	0.9998138887284588	WITHOUT_CLASSIFICATION	1.8611127154132E-4	DEFECT
the requested precision	WITHOUT_CLASSIFICATION	0.9999450873618314	WITHOUT_CLASSIFICATION	5.491263816867896E-5	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999769571432059	WITHOUT_CLASSIFICATION	2.3042856794156132E-5	DEFECT
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999609212888885	WITHOUT_CLASSIFICATION	3.9078711111474455E-5	DEFECT
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998923773367806	WITHOUT_CLASSIFICATION	1.0762266321935565E-4	DEFECT
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999881174309474	WITHOUT_CLASSIFICATION	1.1882569052495889E-5	DEFECT
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999872593518323	WITHOUT_CLASSIFICATION	1.2740648167644833E-5	DEFECT
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999756322667095	WITHOUT_CLASSIFICATION	2.4367733290479796E-5	DEFECT
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999371010453665	WITHOUT_CLASSIFICATION	6.289895463347987E-5	DEFECT
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999247578666266	WITHOUT_CLASSIFICATION	7.52421333734252E-5	DEFECT
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9998987931002556	WITHOUT_CLASSIFICATION	1.0120689974439618E-4	DEFECT
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999036904916148	WITHOUT_CLASSIFICATION	9.63095083851911E-5	DEFECT
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999733885746505	WITHOUT_CLASSIFICATION	2.6611425349608562E-5	DEFECT
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999974427001249	WITHOUT_CLASSIFICATION	2.557299875086152E-5	DEFECT
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9992769765328018	WITHOUT_CLASSIFICATION	7.23023467198161E-4	DEFECT
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9998753468678553	WITHOUT_CLASSIFICATION	1.2465313214470806E-4	DEFECT
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999273072183903	WITHOUT_CLASSIFICATION	7.269278160978429E-5	DEFECT
root x is ready!	WITHOUT_CLASSIFICATION	0.9997704601515128	WITHOUT_CLASSIFICATION	2.295398484871833E-4	DEFECT
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9999525546252931	WITHOUT_CLASSIFICATION	4.744537470693429E-5	DEFECT
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999538701340516	WITHOUT_CLASSIFICATION	4.6129865948441735E-5	DEFECT
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
c: bind_eval	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9999005101628279	WITHOUT_CLASSIFICATION	9.948983717211083E-5	DEFECT
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999068058935591	WITHOUT_CLASSIFICATION	9.319410644086668E-5	DEFECT
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9997510534232574	WITHOUT_CLASSIFICATION	2.489465767425929E-4	DEFECT
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999939128881098	WITHOUT_CLASSIFICATION	6.087111890181781E-6	DEFECT
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9994807877578172	WITHOUT_CLASSIFICATION	5.192122421827846E-4	DEFECT
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9998903051373007	WITHOUT_CLASSIFICATION	1.0969486269935196E-4	DEFECT
try the normal property first	WITHOUT_CLASSIFICATION	0.9999720984977498	WITHOUT_CLASSIFICATION	2.7901502250231055E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999796186140469	WITHOUT_CLASSIFICATION	2.0381385953068723E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999796186140469	WITHOUT_CLASSIFICATION	2.0381385953068723E-5	DEFECT
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9989274455274915	WITHOUT_CLASSIFICATION	0.001072554472508526	DEFECT
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999643813520002	WITHOUT_CLASSIFICATION	3.5618647999827764E-5	DEFECT
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9998990800147854	WITHOUT_CLASSIFICATION	1.0091998521456538E-4	DEFECT
consume the file name	WITHOUT_CLASSIFICATION	0.9999694125915772	WITHOUT_CLASSIFICATION	3.0587408422813124E-5	DEFECT
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999698418234114	WITHOUT_CLASSIFICATION	3.015817658859498E-4	DEFECT
try cwd first	WITHOUT_CLASSIFICATION	0.999991611702114	WITHOUT_CLASSIFICATION	8.388297885915111E-6	DEFECT
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999281420213343	WITHOUT_CLASSIFICATION	7.185797866577867E-5	DEFECT
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999311899226913	WITHOUT_CLASSIFICATION	6.881007730872858E-5	DEFECT
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999216469504227	WITHOUT_CLASSIFICATION	7.835304957724487E-5	DEFECT
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999933588131304	WITHOUT_CLASSIFICATION	6.641186869597583E-5	DEFECT
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999216469504227	WITHOUT_CLASSIFICATION	7.835304957724487E-5	DEFECT
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999237390747936	WITHOUT_CLASSIFICATION	7.626092520633966E-5	DEFECT
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9979518076675558	WITHOUT_CLASSIFICATION	0.0020481923324442994	DEFECT
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9997874196191227	WITHOUT_CLASSIFICATION	2.125803808773578E-4	DEFECT
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9215176129586276	WITHOUT_CLASSIFICATION	0.07848238704137249	DEFECT
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9997313488105569	WITHOUT_CLASSIFICATION	2.686511894431311E-4	DEFECT
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9975394680891132	WITHOUT_CLASSIFICATION	0.002460531910886762	DEFECT
must be power of 2!	WITHOUT_CLASSIFICATION	0.9999430461050215	WITHOUT_CLASSIFICATION	5.695389497847693E-5	DEFECT
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999890562193824	WITHOUT_CLASSIFICATION	1.0943780617505921E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9979518076675558	WITHOUT_CLASSIFICATION	0.0020481923324442994	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999611942307346	WITHOUT_CLASSIFICATION	3.8805769265440606E-5	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999611942307346	WITHOUT_CLASSIFICATION	3.8805769265440606E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999668261351876	WITHOUT_CLASSIFICATION	3.3173864812375746E-5	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.999960994265195	WITHOUT_CLASSIFICATION	3.900573480493319E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9996885597366297	WITHOUT_CLASSIFICATION	3.114402633703462E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999452144564842	WITHOUT_CLASSIFICATION	5.478554351585761E-5	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999433218721726	WITHOUT_CLASSIFICATION	5.66781278274527E-5	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999946582707983	WITHOUT_CLASSIFICATION	5.341729201701795E-5	DEFECT
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9998401731981192	WITHOUT_CLASSIFICATION	1.5982680188072717E-4	DEFECT
Profile	WITHOUT_CLASSIFICATION	0.9999908334790204	WITHOUT_CLASSIFICATION	9.16652097966423E-6	DEFECT
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9999751369060007	WITHOUT_CLASSIFICATION	2.4863093999372257E-5	DEFECT
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999862761184272	WITHOUT_CLASSIFICATION	1.372388157277752E-5	DEFECT
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999873338810396	WITHOUT_CLASSIFICATION	1.2666118960471574E-5	DEFECT
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999674659786644	WITHOUT_CLASSIFICATION	3.253402133566301E-5	DEFECT
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.99997692308218	WITHOUT_CLASSIFICATION	2.3076917820076797E-5	DEFECT
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9996713280573358	WITHOUT_CLASSIFICATION	3.286719426642655E-4	DEFECT
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999876946223816	WITHOUT_CLASSIFICATION	1.2305377618471994E-5	DEFECT
reset the state	WITHOUT_CLASSIFICATION	0.9999832419649702	WITHOUT_CLASSIFICATION	1.6758035029681695E-5	DEFECT
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999415407560727	WITHOUT_CLASSIFICATION	5.845924392732841E-5	DEFECT
rb_match_busy	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
str is frozen	WITHOUT_CLASSIFICATION	0.9998645097646249	WITHOUT_CLASSIFICATION	1.3549023537511064E-4	DEFECT
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9997826529039252	WITHOUT_CLASSIFICATION	2.1734709607475414E-4	DEFECT
JRubyServer	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999660667297493	WITHOUT_CLASSIFICATION	3.393327025069539E-4	DEFECT
boot the Object class	WITHOUT_CLASSIFICATION	0.9998331002081609	WITHOUT_CLASSIFICATION	1.6689979183910926E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9998950017215458	WITHOUT_CLASSIFICATION	1.0499827845423054E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999828324309599	WITHOUT_CLASSIFICATION	1.7167569040151703E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999985318692657	WITHOUT_CLASSIFICATION	1.4681307343202205E-6	DEFECT
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9990593402768951	WITHOUT_CLASSIFICATION	9.406597231048712E-4	DEFECT
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999742619136169	WITHOUT_CLASSIFICATION	2.5738086383066614E-5	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9830669476236844	WITHOUT_CLASSIFICATION	0.016933052376315615	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999108639908961	WITHOUT_CLASSIFICATION	8.91360091038824E-5	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999108639908961	WITHOUT_CLASSIFICATION	8.91360091038824E-5	DEFECT
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9998864014149976	WITHOUT_CLASSIFICATION	1.1359858500230925E-4	DEFECT
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998853343487263	WITHOUT_CLASSIFICATION	1.1466565127382151E-4	DEFECT
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999777188841756	WITHOUT_CLASSIFICATION	2.2281115824316964E-5	DEFECT
update all subclasses	WITHOUT_CLASSIFICATION	0.9999755787404148	WITHOUT_CLASSIFICATION	2.4421259585281732E-5	DEFECT
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998828836509603	WITHOUT_CLASSIFICATION	1.1711634903968219E-4	DEFECT
static initializing method	WITHOUT_CLASSIFICATION	0.9999451466482678	WITHOUT_CLASSIFICATION	5.485335173210321E-5	DEFECT
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999388298771239	WITHOUT_CLASSIFICATION	6.117012287609439E-5	DEFECT
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999918360785331	WITHOUT_CLASSIFICATION	8.16392146688363E-6	DEFECT
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999739647051478	WITHOUT_CLASSIFICATION	2.6035294852168726E-5	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9999392425124465	WITHOUT_CLASSIFICATION	6.0757487553590614E-5	DEFECT
self method name	WITHOUT_CLASSIFICATION	0.999962726851885	WITHOUT_CLASSIFICATION	3.727314811490759E-5	DEFECT
the default allocator	WITHOUT_CLASSIFICATION	0.9999831932696046	WITHOUT_CLASSIFICATION	1.6806730395394155E-5	DEFECT
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999640279826206	WITHOUT_CLASSIFICATION	3.597201737931857E-5	DEFECT
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999782629725961	WITHOUT_CLASSIFICATION	2.1737027403955782E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998801639618566	WITHOUT_CLASSIFICATION	1.1983603814330164E-4	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999005413392025	WITHOUT_CLASSIFICATION	9.945866079752863E-5	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999908582887625	WITHOUT_CLASSIFICATION	9.141711237509657E-5	DEFECT
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999982700007841	WITHOUT_CLASSIFICATION	1.7299992158438466E-6	DEFECT
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999786322966403	WITHOUT_CLASSIFICATION	2.1367703359681042E-5	DEFECT
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9997180058665776	WITHOUT_CLASSIFICATION	2.8199413342245E-4	DEFECT
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999691011196741	WITHOUT_CLASSIFICATION	3.089888032589879E-5	DEFECT
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998687110906564	WITHOUT_CLASSIFICATION	1.3128890934354647E-4	DEFECT
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
a gotcha	WITHOUT_CLASSIFICATION	0.9999897878796111	WITHOUT_CLASSIFICATION	1.0212120388907993E-5	DEFECT
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998487271144136	WITHOUT_CLASSIFICATION	1.5127288558628766E-4	DEFECT
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999592226961689	WITHOUT_CLASSIFICATION	4.077730383108285E-5	DEFECT
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999948624800273	WITHOUT_CLASSIFICATION	5.137519972698035E-5	DEFECT
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9999275097028849	WITHOUT_CLASSIFICATION	7.249029711507659E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998801639618566	WITHOUT_CLASSIFICATION	1.1983603814330164E-4	DEFECT
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999053504957046	WITHOUT_CLASSIFICATION	9.464950429545406E-5	DEFECT
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9996003163200375	WITHOUT_CLASSIFICATION	3.996836799624427E-4	DEFECT
MRI behavior:	WITHOUT_CLASSIFICATION	0.9999372536881008	WITHOUT_CLASSIFICATION	6.274631189915936E-5	DEFECT
Numeric.equal	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
provider is not available	WITHOUT_CLASSIFICATION	0.9992280100642302	WITHOUT_CLASSIFICATION	7.719899357697412E-4	DEFECT
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9962240414098587	WITHOUT_CLASSIFICATION	0.0037759585901413887	DEFECT
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999519062861749	WITHOUT_CLASSIFICATION	4.809371382508474E-5	DEFECT
RubyDigest	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.999202845258581	WITHOUT_CLASSIFICATION	7.971547414189559E-4	DEFECT
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999154886687501	WITHOUT_CLASSIFICATION	8.451133124992673E-5	DEFECT
we only add live threads	WITHOUT_CLASSIFICATION	0.9996684846521874	WITHOUT_CLASSIFICATION	3.3151534781262706E-4	DEFECT
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998722409677224	WITHOUT_CLASSIFICATION	1.2775903227766757E-4	DEFECT
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999980792314426	WITHOUT_CLASSIFICATION	1.9207685573481382E-6	DEFECT
JRubyService	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
while	WITHOUT_CLASSIFICATION	0.999966713288597	WITHOUT_CLASSIFICATION	3.328671140299554E-5	DEFECT
\OOO	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9999499900108724	WITHOUT_CLASSIFICATION	5.0009989127571246E-5	DEFECT
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999564290206991	WITHOUT_CLASSIFICATION	4.3570979300724577E-5	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999948786345723	WITHOUT_CLASSIFICATION	5.121365427734251E-6	DEFECT
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999714157289471	WITHOUT_CLASSIFICATION	2.8584271052902216E-5	DEFECT
silent ?	WITHOUT_CLASSIFICATION	0.9999969470895858	WITHOUT_CLASSIFICATION	3.0529104142244213E-6	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.999931539873322	WITHOUT_CLASSIFICATION	6.846012667803962E-5	DEFECT
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9955793145313753	WITHOUT_CLASSIFICATION	0.004420685468624643	DEFECT
Surrogates	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999525152011044	WITHOUT_CLASSIFICATION	4.748479889553122E-5	DEFECT
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
\\uHHHH	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
inner switch	WITHOUT_CLASSIFICATION	0.999966090337068	WITHOUT_CLASSIFICATION	3.3909662932031485E-5	DEFECT
newInstance here	WITHOUT_CLASSIFICATION	0.9999566424888267	WITHOUT_CLASSIFICATION	4.33575111733808E-5	DEFECT
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9993258276445517	WITHOUT_CLASSIFICATION	6.741723554482245E-4	DEFECT
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
option_to_str	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998435383663813	WITHOUT_CLASSIFICATION	1.5646163361873077E-4	DEFECT
args should be before block	WITHOUT_CLASSIFICATION	0.999945940941562	WITHOUT_CLASSIFICATION	5.4059058438126014E-5	DEFECT
args should be at end	WITHOUT_CLASSIFICATION	0.998520681333323	WITHOUT_CLASSIFICATION	0.001479318666677042	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999640905774541	WITHOUT_CLASSIFICATION	3.590942254602127E-5	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999640905774541	WITHOUT_CLASSIFICATION	3.590942254602127E-5	DEFECT
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.998980939952861	WITHOUT_CLASSIFICATION	0.0010190600471391077	DEFECT
start a new populator	WITHOUT_CLASSIFICATION	0.9999527450294046	WITHOUT_CLASSIFICATION	4.72549705954908E-5	DEFECT
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999875089519195	WITHOUT_CLASSIFICATION	1.2491048080494184E-5	DEFECT
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998369423696247	WITHOUT_CLASSIFICATION	1.6305763037525594E-4	DEFECT
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999888774026923	WITHOUT_CLASSIFICATION	1.1122597307754118E-5	DEFECT
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999978680402082	WITHOUT_CLASSIFICATION	2.131959791737456E-6	DEFECT
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999620952553474	WITHOUT_CLASSIFICATION	3.7904744652646004E-5	DEFECT
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999604563708009	WITHOUT_CLASSIFICATION	3.954362919923317E-5	DEFECT
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999183129561703	WITHOUT_CLASSIFICATION	8.16870438297062E-5	DEFECT
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999555896460642	WITHOUT_CLASSIFICATION	4.44103539357234E-5	DEFECT
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999216469504227	WITHOUT_CLASSIFICATION	7.835304957724487E-5	DEFECT
}	WITHOUT_CLASSIFICATION	0.999992178569856	WITHOUT_CLASSIFICATION	7.82143014399071E-6	DEFECT
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9998804827480592	WITHOUT_CLASSIFICATION	1.195172519408185E-4	DEFECT
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9935792130624317	WITHOUT_CLASSIFICATION	0.0064207869375683	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9998021978662752	WITHOUT_CLASSIFICATION	1.9780213372473E-4	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.999955716056681	WITHOUT_CLASSIFICATION	4.428394331904957E-5	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999784297304697	WITHOUT_CLASSIFICATION	2.157026953025958E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
colon3	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Colon3	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9997123440371248	WITHOUT_CLASSIFICATION	2.876559628751359E-4	DEFECT
For b.foo	WITHOUT_CLASSIFICATION	0.9999974923882313	WITHOUT_CLASSIFICATION	2.5076117687131978E-6	DEFECT
instance config for the script run	WITHOUT_CLASSIFICATION	0.9999911970131233	WITHOUT_CLASSIFICATION	8.802986876703138E-6	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999388807377232	WITHOUT_CLASSIFICATION	6.111926227674439E-5	DEFECT
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999827869078709	WITHOUT_CLASSIFICATION	1.72130921291605E-5	DEFECT
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9992097206493429	WITHOUT_CLASSIFICATION	7.902793506571433E-4	DEFECT
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999843889320488	WITHOUT_CLASSIFICATION	1.5611067951279196E-5	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999619227661803	WITHOUT_CLASSIFICATION	3.807723381970721E-5	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999619227661803	WITHOUT_CLASSIFICATION	3.807723381970721E-5	DEFECT
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999992828577947	WITHOUT_CLASSIFICATION	7.171422052991441E-6	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999548755942361	WITHOUT_CLASSIFICATION	4.512440576393776E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998968694896782	WITHOUT_CLASSIFICATION	1.031305103218364E-4	DEFECT
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9992995711901294	WITHOUT_CLASSIFICATION	7.004288098706787E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999828435981865	WITHOUT_CLASSIFICATION	1.715640181353239E-5	DEFECT
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.998684686136018	WITHOUT_CLASSIFICATION	0.0013153138639820407	DEFECT
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998811848348093	WITHOUT_CLASSIFICATION	1.1881516519077764E-4	DEFECT
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9986991058497369	WITHOUT_CLASSIFICATION	0.0013008941502631293	DEFECT
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999957050019045	WITHOUT_CLASSIFICATION	4.2949980955643865E-6	DEFECT
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999891135035582	WITHOUT_CLASSIFICATION	1.0886496441811161E-5	DEFECT
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999726968475466	WITHOUT_CLASSIFICATION	2.7303152453289992E-5	DEFECT
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999694755246805	WITHOUT_CLASSIFICATION	3.052447531954058E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.999955716056681	WITHOUT_CLASSIFICATION	4.428394331904957E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999828435981865	WITHOUT_CLASSIFICATION	1.715640181353239E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9969933754867344	WITHOUT_CLASSIFICATION	0.003006624513265595	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9969933754867344	WITHOUT_CLASSIFICATION	0.003006624513265595	DEFECT
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9866802028444033	WITHOUT_CLASSIFICATION	0.013319797155596816	DEFECT
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999958516598588	WITHOUT_CLASSIFICATION	4.148340141149434E-6	DEFECT
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999829589865642	WITHOUT_CLASSIFICATION	1.7041013435826753E-5	DEFECT
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999022436487547	WITHOUT_CLASSIFICATION	9.775635124522662E-5	DEFECT
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999714224864302	WITHOUT_CLASSIFICATION	2.8577513569796334E-5	DEFECT
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999902055283321	WITHOUT_CLASSIFICATION	9.794471667980723E-6	DEFECT
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9987395554149958	WITHOUT_CLASSIFICATION	0.0012604445850042056	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999886812461688	WITHOUT_CLASSIFICATION	1.1318753831198063E-4	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999849862365539	WITHOUT_CLASSIFICATION	1.5013763446094171E-5	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999982538559516	WITHOUT_CLASSIFICATION	1.7461440483652146E-6	DEFECT
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9996717727868153	WITHOUT_CLASSIFICATION	3.2822721318478455E-4	DEFECT
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999985146974798	WITHOUT_CLASSIFICATION	1.4853025201863973E-6	DEFECT
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999258900729351	WITHOUT_CLASSIFICATION	7.410992706486179E-5	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999784297304697	WITHOUT_CLASSIFICATION	2.157026953025958E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999548755942361	WITHOUT_CLASSIFICATION	4.512440576393776E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998968694896782	WITHOUT_CLASSIFICATION	1.031305103218364E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998968694896782	WITHOUT_CLASSIFICATION	1.031305103218364E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999828435981865	WITHOUT_CLASSIFICATION	1.715640181353239E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999828435981865	WITHOUT_CLASSIFICATION	1.715640181353239E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9969933754867344	WITHOUT_CLASSIFICATION	0.003006624513265595	DEFECT
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999705915480374	WITHOUT_CLASSIFICATION	2.940845196265891E-5	DEFECT
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9998904711837224	WITHOUT_CLASSIFICATION	1.0952881627754973E-4	DEFECT
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999996448760563	WITHOUT_CLASSIFICATION	3.5512394378160164E-7	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997748308033638	WITHOUT_CLASSIFICATION	2.2516919663623832E-4	DEFECT
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999654107924393	WITHOUT_CLASSIFICATION	3.458920756069799E-5	DEFECT
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9945809891658484	WITHOUT_CLASSIFICATION	0.005419010834151575	DEFECT
add in reverse order	WITHOUT_CLASSIFICATION	0.9999356311510932	WITHOUT_CLASSIFICATION	6.43688489068036E-5	DEFECT
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999453965788969	WITHOUT_CLASSIFICATION	5.460342110308721E-5	DEFECT
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999675831094524	WITHOUT_CLASSIFICATION	3.241689054748717E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999548755942361	WITHOUT_CLASSIFICATION	4.512440576393776E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998968694896782	WITHOUT_CLASSIFICATION	1.031305103218364E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998968694896782	WITHOUT_CLASSIFICATION	1.031305103218364E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999886812461688	WITHOUT_CLASSIFICATION	1.1318753831198063E-4	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999982538559516	WITHOUT_CLASSIFICATION	1.7461440483652146E-6	DEFECT
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9994461564827976	WITHOUT_CLASSIFICATION	5.538435172024159E-4	DEFECT
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999969842703164	WITHOUT_CLASSIFICATION	3.0157296836827987E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999976069996811	WITHOUT_CLASSIFICATION	2.393000318930921E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999976069996811	WITHOUT_CLASSIFICATION	2.393000318930921E-6	DEFECT
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997427530411117	WITHOUT_CLASSIFICATION	2.572469588883334E-4	DEFECT
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998730656147968	WITHOUT_CLASSIFICATION	1.269343852031254E-4	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999977923720483	WITHOUT_CLASSIFICATION	2.2076279516992993E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999891649913843	WITHOUT_CLASSIFICATION	1.083500861568481E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999891649913843	WITHOUT_CLASSIFICATION	1.083500861568481E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999977991560962	WITHOUT_CLASSIFICATION	2.2008439037940948E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999977991560962	WITHOUT_CLASSIFICATION	2.2008439037940948E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999815965775123	WITHOUT_CLASSIFICATION	1.8403422487783165E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999815965775123	WITHOUT_CLASSIFICATION	1.8403422487783165E-5	DEFECT
Execute rescue block	WITHOUT_CLASSIFICATION	0.9999909278321544	WITHOUT_CLASSIFICATION	9.072167845562378E-6	DEFECT
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999789360493664	WITHOUT_CLASSIFICATION	2.106395063361524E-5	DEFECT
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998571523310424	WITHOUT_CLASSIFICATION	1.4284766895749477E-4	DEFECT
only a marker interface	WITHOUT_CLASSIFICATION	0.9999247784435673	WITHOUT_CLASSIFICATION	7.522155643274218E-5	DEFECT
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999715693497255	WITHOUT_CLASSIFICATION	2.8430650274405355E-5	DEFECT
pragmas	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999862006310318	WITHOUT_CLASSIFICATION	1.3799368968197144E-4	DEFECT
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999411761515702	WITHOUT_CLASSIFICATION	5.88238484298458E-5	DEFECT
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9996716610175564	WITHOUT_CLASSIFICATION	3.2833898244365227E-4	DEFECT
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9992674493702408	WITHOUT_CLASSIFICATION	7.325506297592431E-4	DEFECT
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999618845353555	WITHOUT_CLASSIFICATION	3.811546464455938E-5	DEFECT
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999780773321616	WITHOUT_CLASSIFICATION	2.1922667838501698E-5	DEFECT
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994156701828085	WITHOUT_CLASSIFICATION	5.843298171914689E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998743958944627	WITHOUT_CLASSIFICATION	1.2560410553734262E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998743958944627	WITHOUT_CLASSIFICATION	1.2560410553734262E-4	DEFECT
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998127439284391	WITHOUT_CLASSIFICATION	1.872560715609031E-4	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999946582707983	WITHOUT_CLASSIFICATION	5.341729201701795E-5	DEFECT
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9988099703537192	WITHOUT_CLASSIFICATION	0.0011900296462807073	DEFECT
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999543961774578	WITHOUT_CLASSIFICATION	4.560382254219738E-5	DEFECT
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999940684339244	WITHOUT_CLASSIFICATION	5.931566075573233E-6	DEFECT
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9998961881809817	WITHOUT_CLASSIFICATION	1.0381181901833111E-4	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998441493911949	WITHOUT_CLASSIFICATION	1.5585060880502004E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999186041565586	WITHOUT_CLASSIFICATION	8.13958434413395E-5	DEFECT
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999847071346651	WITHOUT_CLASSIFICATION	1.5292865334838692E-5	DEFECT
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999758374455497	WITHOUT_CLASSIFICATION	2.416255445020809E-5	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999589651453965	WITHOUT_CLASSIFICATION	4.10348546035661E-5	DEFECT
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9974849229772965	WITHOUT_CLASSIFICATION	0.002515077022703475	DEFECT
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999084245803469	WITHOUT_CLASSIFICATION	9.157541965306814E-5	DEFECT
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9997908300034314	WITHOUT_CLASSIFICATION	2.0916999656860391E-4	DEFECT
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9962675228063884	WITHOUT_CLASSIFICATION	0.003732477193611499	DEFECT
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999841644998493	WITHOUT_CLASSIFICATION	1.583550015066337E-5	DEFECT
can't do it	WITHOUT_CLASSIFICATION	0.9998039468013535	WITHOUT_CLASSIFICATION	1.9605319864652402E-4	DEFECT
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999253613941291	WITHOUT_CLASSIFICATION	7.463860587097454E-5	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998646862473801	WITHOUT_CLASSIFICATION	1.3531375262000126E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998646862473801	WITHOUT_CLASSIFICATION	1.3531375262000126E-4	DEFECT
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999960764805894	WITHOUT_CLASSIFICATION	3.923519410538571E-6	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[]	WITHOUT_CLASSIFICATION	0.9999900438776568	WITHOUT_CLASSIFICATION	9.956122343206057E-6	DEFECT
[]	WITHOUT_CLASSIFICATION	0.9999900438776568	WITHOUT_CLASSIFICATION	9.956122343206057E-6	DEFECT
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998848509588053	WITHOUT_CLASSIFICATION	1.1514904119466196E-4	DEFECT
[RubyClass]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9998848509588053	WITHOUT_CLASSIFICATION	1.1514904119466196E-4	DEFECT
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999648468886381	WITHOUT_CLASSIFICATION	3.51531113619762E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999290532372809	WITHOUT_CLASSIFICATION	7.094676271921154E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999290532372809	WITHOUT_CLASSIFICATION	7.094676271921154E-5	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999686994882525	WITHOUT_CLASSIFICATION	3.130051174749583E-5	DEFECT
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999683128616451	WITHOUT_CLASSIFICATION	3.1687138354950045E-5	DEFECT
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999287285768119	WITHOUT_CLASSIFICATION	7.12714231879987E-5	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9999316608065881	WITHOUT_CLASSIFICATION	6.833919341183173E-5	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998768085945279	WITHOUT_CLASSIFICATION	1.2319140547212152E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996863871991336	WITHOUT_CLASSIFICATION	3.1361280086638423E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996863871991336	WITHOUT_CLASSIFICATION	3.1361280086638423E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996863871991336	WITHOUT_CLASSIFICATION	3.1361280086638423E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998768085945279	WITHOUT_CLASSIFICATION	1.2319140547212152E-4	DEFECT
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999849173209832	WITHOUT_CLASSIFICATION	1.5082679016722246E-5	DEFECT
always false or nil	WITHOUT_CLASSIFICATION	0.9998737719851553	WITHOUT_CLASSIFICATION	1.2622801484484309E-4	DEFECT
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9991299867634007	WITHOUT_CLASSIFICATION	8.700132365992072E-4	DEFECT
normal	WITHOUT_CLASSIFICATION	0.999992919664394	WITHOUT_CLASSIFICATION	7.080335606137922E-6	DEFECT
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9998668545137066	WITHOUT_CLASSIFICATION	1.3314548629336147E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998197160303464	WITHOUT_CLASSIFICATION	1.8028396965354368E-4	DEFECT
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999880932671115	WITHOUT_CLASSIFICATION	1.1906732888507987E-5	DEFECT
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998296106392953	WITHOUT_CLASSIFICATION	1.7038936070471592E-4	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999589651453965	WITHOUT_CLASSIFICATION	4.10348546035661E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9982215146116329	WITHOUT_CLASSIFICATION	0.0017784853883671436	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9998979609249421	WITHOUT_CLASSIFICATION	1.0203907505786311E-4	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999790997979968	WITHOUT_CLASSIFICATION	2.0900202003193645E-5	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999124754747016	WITHOUT_CLASSIFICATION	8.752452529832223E-5	DEFECT
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999603283317985	WITHOUT_CLASSIFICATION	3.967166820148596E-5	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9995574404808745	WITHOUT_CLASSIFICATION	4.4255951912554217E-4	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999773050378524	WITHOUT_CLASSIFICATION	2.269496214758059E-5	DEFECT
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999692485402479	WITHOUT_CLASSIFICATION	3.075145975197352E-5	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997600797379287	WITHOUT_CLASSIFICATION	2.3992026207120897E-4	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999906329044252	WITHOUT_CLASSIFICATION	9.367095574765733E-6	DEFECT
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999216469504227	WITHOUT_CLASSIFICATION	7.835304957724487E-5	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999624597620946	WITHOUT_CLASSIFICATION	3.7540237905496935E-5	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999851511637254	WITHOUT_CLASSIFICATION	1.4848836274545146E-5	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999635801978703	WITHOUT_CLASSIFICATION	3.6419802129643446E-5	DEFECT
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999979636514069	WITHOUT_CLASSIFICATION	2.036348593151754E-6	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
compile into array	WITHOUT_CLASSIFICATION	0.9998613429394858	WITHOUT_CLASSIFICATION	1.3865706051420312E-4	DEFECT
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999699989746289	WITHOUT_CLASSIFICATION	3.000102537121686E-5	DEFECT
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999775048837617	WITHOUT_CLASSIFICATION	2.2495116238378413E-5	DEFECT
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9947827996226501	WITHOUT_CLASSIFICATION	0.005217200377349813	DEFECT
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999880898263227	WITHOUT_CLASSIFICATION	1.19101736773303E-5	DEFECT
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999860084523396	WITHOUT_CLASSIFICATION	1.3991547660417955E-5	DEFECT
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.999993653841244	WITHOUT_CLASSIFICATION	6.3461587560768015E-6	DEFECT
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999525811684179	WITHOUT_CLASSIFICATION	4.74188315820525E-5	DEFECT
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999866327155451	WITHOUT_CLASSIFICATION	1.336728445479222E-5	DEFECT
leave as a normal array	WITHOUT_CLASSIFICATION	0.9998941024762825	WITHOUT_CLASSIFICATION	1.0589752371736659E-4	DEFECT
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999065367564741	WITHOUT_CLASSIFICATION	9.3463243525793E-5	DEFECT
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9995818486488247	WITHOUT_CLASSIFICATION	4.1815135117529275E-4	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999686994882525	WITHOUT_CLASSIFICATION	3.130051174749583E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999390282700638	WITHOUT_CLASSIFICATION	6.097172993630899E-5	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998768085945279	WITHOUT_CLASSIFICATION	1.2319140547212152E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998197160303464	WITHOUT_CLASSIFICATION	1.8028396965354368E-4	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9998979609249421	WITHOUT_CLASSIFICATION	1.0203907505786311E-4	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999124754747016	WITHOUT_CLASSIFICATION	8.752452529832223E-5	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9995574404808745	WITHOUT_CLASSIFICATION	4.4255951912554217E-4	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999790997979968	WITHOUT_CLASSIFICATION	2.0900202003193645E-5	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999773050378524	WITHOUT_CLASSIFICATION	2.269496214758059E-5	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999906329044252	WITHOUT_CLASSIFICATION	9.367095574765733E-6	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997600797379287	WITHOUT_CLASSIFICATION	2.3992026207120897E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999624597620946	WITHOUT_CLASSIFICATION	3.7540237905496935E-5	DEFECT
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999795160823055	WITHOUT_CLASSIFICATION	2.0483917694505612E-5	DEFECT
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9993038938253443	WITHOUT_CLASSIFICATION	6.961061746557209E-4	DEFECT
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9998962986722546	WITHOUT_CLASSIFICATION	1.0370132774547349E-4	DEFECT
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999602494778977	WITHOUT_CLASSIFICATION	3.9750522102318915E-5	DEFECT
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999508243959386	WITHOUT_CLASSIFICATION	4.917560406134562E-5	DEFECT
Time the compilation	WITHOUT_CLASSIFICATION	0.9999549778339519	WITHOUT_CLASSIFICATION	4.5022166048016405E-5	DEFECT
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9998742659526267	WITHOUT_CLASSIFICATION	1.257340473731998E-4	DEFECT
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9996058259518396	WITHOUT_CLASSIFICATION	3.941740481604621E-4	DEFECT
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9995475671572122	WITHOUT_CLASSIFICATION	4.524328427878599E-4	DEFECT
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999424589447865	WITHOUT_CLASSIFICATION	5.754105521351098E-5	DEFECT
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999774847442472	WITHOUT_CLASSIFICATION	2.2515255752752815E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999386549060985	WITHOUT_CLASSIFICATION	6.134509390150498E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9996871738369433	WITHOUT_CLASSIFICATION	3.12826163056723E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999713560792827	WITHOUT_CLASSIFICATION	2.864392071740273E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999195440528905	WITHOUT_CLASSIFICATION	8.045594710948967E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999246906476178	WITHOUT_CLASSIFICATION	7.530935238214463E-5	DEFECT
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999435442006646	WITHOUT_CLASSIFICATION	5.645579933538466E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999797864455483	WITHOUT_CLASSIFICATION	2.0213554451685816E-4	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999755625784374	WITHOUT_CLASSIFICATION	2.443742156257737E-5	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999836416985294	WITHOUT_CLASSIFICATION	1.63583014705548E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997489962762272	WITHOUT_CLASSIFICATION	2.5100372377289694E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997489962762272	WITHOUT_CLASSIFICATION	2.5100372377289694E-4	DEFECT
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999243396881098	WITHOUT_CLASSIFICATION	7.566031189025312E-5	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998153047370657	WITHOUT_CLASSIFICATION	1.8469526293432884E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg2	WITHOUT_CLASSIFICATION	0.9999908398932724	WITHOUT_CLASSIFICATION	9.160106727648633E-6	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999922144022336	WITHOUT_CLASSIFICATION	7.785597766311275E-6	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998153047370657	WITHOUT_CLASSIFICATION	1.8469526293432884E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.99929573536419	WITHOUT_CLASSIFICATION	7.042646358101053E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999922144022336	WITHOUT_CLASSIFICATION	7.785597766311275E-6	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9998021347889992	WITHOUT_CLASSIFICATION	1.978652110007889E-4	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9998021347889992	WITHOUT_CLASSIFICATION	1.978652110007889E-4	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999393241440693	WITHOUT_CLASSIFICATION	6.067585593070487E-5	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999393241440693	WITHOUT_CLASSIFICATION	6.067585593070487E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.999993013244244	WITHOUT_CLASSIFICATION	6.986755756094661E-6	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.999993013244244	WITHOUT_CLASSIFICATION	6.986755756094661E-6	DEFECT
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999930566626309	WITHOUT_CLASSIFICATION	6.943337369056756E-6	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9993668274843978	WITHOUT_CLASSIFICATION	6.331725156022217E-4	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9993668274843978	WITHOUT_CLASSIFICATION	6.331725156022217E-4	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999976506877615	WITHOUT_CLASSIFICATION	2.3493122385125787E-5	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999976506877615	WITHOUT_CLASSIFICATION	2.3493122385125787E-5	DEFECT
eval value for assignment	WITHOUT_CLASSIFICATION	0.9998938820641675	WITHOUT_CLASSIFICATION	1.0611793583244825E-4	DEFECT
call site	WITHOUT_CLASSIFICATION	0.999960420294043	WITHOUT_CLASSIFICATION	3.957970595706269E-5	DEFECT
call site	WITHOUT_CLASSIFICATION	0.999960420294043	WITHOUT_CLASSIFICATION	3.957970595706269E-5	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997778585305023	WITHOUT_CLASSIFICATION	2.2214146949764755E-4	DEFECT
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9997709352209897	WITHOUT_CLASSIFICATION	2.2906477901029671E-4	DEFECT
eval value and save it	WITHOUT_CLASSIFICATION	0.9999199140441037	WITHOUT_CLASSIFICATION	8.008595589633162E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997778585305023	WITHOUT_CLASSIFICATION	2.2214146949764755E-4	DEFECT
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998891681721568	WITHOUT_CLASSIFICATION	1.1083182784322898E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999992121368197	WITHOUT_CLASSIFICATION	7.878631801788024E-7	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999922144022336	WITHOUT_CLASSIFICATION	7.785597766311275E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999972356666771	WITHOUT_CLASSIFICATION	2.7643333228795504E-6	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999959529665187	WITHOUT_CLASSIFICATION	4.047033481367938E-6	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999959529665187	WITHOUT_CLASSIFICATION	4.047033481367931E-6	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999792011917438	WITHOUT_CLASSIFICATION	2.0798808256300606E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999394454019603	WITHOUT_CLASSIFICATION	6.0554598039645275E-5	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999394454019603	WITHOUT_CLASSIFICATION	6.0554598039645275E-5	DEFECT
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999830169537417	WITHOUT_CLASSIFICATION	1.698304625830527E-4	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999911487673331	WITHOUT_CLASSIFICATION	8.851232666874908E-6	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999911487673331	WITHOUT_CLASSIFICATION	8.851232666874908E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999922144022336	WITHOUT_CLASSIFICATION	7.785597766311275E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999972356666771	WITHOUT_CLASSIFICATION	2.7643333228795504E-6	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999959529665187	WITHOUT_CLASSIFICATION	4.047033481367938E-6	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999959529665187	WITHOUT_CLASSIFICATION	4.047033481367931E-6	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999792011917438	WITHOUT_CLASSIFICATION	2.0798808256300606E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999911487673331	WITHOUT_CLASSIFICATION	8.851232666874908E-6	DEFECT
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998961592173677	WITHOUT_CLASSIFICATION	1.0384078263226856E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9997861934997333	WITHOUT_CLASSIFICATION	2.1380650026673554E-4	DEFECT
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9995453963119826	WITHOUT_CLASSIFICATION	4.5460368801747165E-4	DEFECT
add name to call site list	WITHOUT_CLASSIFICATION	0.9999244090627165	WITHOUT_CLASSIFICATION	7.55909372834245E-5	DEFECT
module is on top of stack	WITHOUT_CLASSIFICATION	0.9998560552394312	WITHOUT_CLASSIFICATION	1.4394476056867373E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999832760967129	WITHOUT_CLASSIFICATION	1.6723903287150175E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999800505723381	WITHOUT_CLASSIFICATION	1.99494276619688E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999800505723381	WITHOUT_CLASSIFICATION	1.99494276619688E-5	DEFECT
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9964401014112167	WITHOUT_CLASSIFICATION	0.0035598985887832176	DEFECT
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9991803429184611	WITHOUT_CLASSIFICATION	8.196570815388052E-4	DEFECT
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9991801692471631	WITHOUT_CLASSIFICATION	8.198307528369242E-4	DEFECT
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9996479443203978	WITHOUT_CLASSIFICATION	3.520556796021247E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9991813919214483	WITHOUT_CLASSIFICATION	8.186080785517814E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9991813919214483	WITHOUT_CLASSIFICATION	8.186080785517814E-4	DEFECT
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9994481817442341	WITHOUT_CLASSIFICATION	5.518182557659129E-4	DEFECT
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9994459912691956	WITHOUT_CLASSIFICATION	5.540087308043565E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998698637649562	WITHOUT_CLASSIFICATION	1.3013623504371094E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998698637649562	WITHOUT_CLASSIFICATION	1.3013623504371094E-4	DEFECT
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9991801692471631	WITHOUT_CLASSIFICATION	8.198307528369242E-4	DEFECT
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9997264987271385	WITHOUT_CLASSIFICATION	2.735012728615335E-4	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999107663288229	WITHOUT_CLASSIFICATION	8.923367117710056E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999897961190675	WITHOUT_CLASSIFICATION	1.0203880932529652E-5	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9997703478594216	WITHOUT_CLASSIFICATION	2.296521405783787E-4	DEFECT
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999406918962755	WITHOUT_CLASSIFICATION	5.9308103724533915E-5	DEFECT
load Object under value	WITHOUT_CLASSIFICATION	0.9998260519342309	WITHOUT_CLASSIFICATION	1.7394806576904377E-4	DEFECT
put under object array already present	WITHOUT_CLASSIFICATION	0.999938486216592	WITHOUT_CLASSIFICATION	6.151378340797336E-5	DEFECT
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9995981610587712	WITHOUT_CLASSIFICATION	4.0183894122882926E-4	DEFECT
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999988651166827	WITHOUT_CLASSIFICATION	1.1348833174342218E-6	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998471462669862	WITHOUT_CLASSIFICATION	1.5285373301377326E-4	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998471462669862	WITHOUT_CLASSIFICATION	1.5285373301377326E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.999871306587902	WITHOUT_CLASSIFICATION	1.2869341209798135E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.999871306587902	WITHOUT_CLASSIFICATION	1.2869341209798135E-4	DEFECT
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999050965732422	WITHOUT_CLASSIFICATION	9.490342675769728E-5	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.999260167420236	WITHOUT_CLASSIFICATION	7.398325797638831E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.999260167420236	WITHOUT_CLASSIFICATION	7.398325797638831E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.999260167420236	WITHOUT_CLASSIFICATION	7.398325797638831E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999880472142965	WITHOUT_CLASSIFICATION	1.195278570345152E-5	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999880472142965	WITHOUT_CLASSIFICATION	1.195278570345152E-5	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999953084326505	WITHOUT_CLASSIFICATION	4.6915673495009126E-5	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9994774204637851	WITHOUT_CLASSIFICATION	5.225795362149919E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999655512755654	WITHOUT_CLASSIFICATION	3.444872443463834E-5	DEFECT
skip catch block	WITHOUT_CLASSIFICATION	0.9999946832886702	WITHOUT_CLASSIFICATION	5.316711329812228E-6	DEFECT
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999397729648424	WITHOUT_CLASSIFICATION	6.022703515762589E-5	DEFECT
next jump	WITHOUT_CLASSIFICATION	0.9999654073408967	WITHOUT_CLASSIFICATION	3.459265910326749E-5	DEFECT
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9976982313406656	WITHOUT_CLASSIFICATION	0.0023017686593343693	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999953084326505	WITHOUT_CLASSIFICATION	4.6915673495009126E-5	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999890395594414	WITHOUT_CLASSIFICATION	1.0960440558514691E-5	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9994774204637851	WITHOUT_CLASSIFICATION	5.225795362149919E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999655512755654	WITHOUT_CLASSIFICATION	3.444872443463834E-5	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998940985041466	WITHOUT_CLASSIFICATION	1.0590149585345103E-4	DEFECT
break jump	WITHOUT_CLASSIFICATION	0.9999918979933836	WITHOUT_CLASSIFICATION	8.10200661631827E-6	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998844004726977	WITHOUT_CLASSIFICATION	1.1559952730235586E-4	DEFECT
[reg]	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999408681235823	WITHOUT_CLASSIFICATION	5.91318764176631E-5	DEFECT
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999955905483993	WITHOUT_CLASSIFICATION	4.409451600694135E-5	DEFECT
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998741963553354	WITHOUT_CLASSIFICATION	1.258036446645532E-4	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998940985041466	WITHOUT_CLASSIFICATION	1.0590149585345103E-4	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999714162499069	WITHOUT_CLASSIFICATION	2.8583750093069574E-5	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999714162499069	WITHOUT_CLASSIFICATION	2.8583750093069574E-5	DEFECT
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9997033306517819	WITHOUT_CLASSIFICATION	2.9666934821818373E-4	DEFECT
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999857882044879	WITHOUT_CLASSIFICATION	1.4211795512131212E-5	DEFECT
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999454987787746	WITHOUT_CLASSIFICATION	5.450122122551783E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997307035867943	WITHOUT_CLASSIFICATION	2.6929641320579134E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9994904877015984	WITHOUT_CLASSIFICATION	5.095122984015947E-4	DEFECT
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999937642433322	WITHOUT_CLASSIFICATION	6.235756667851437E-6	DEFECT
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999167956149255	WITHOUT_CLASSIFICATION	8.320438507446587E-5	DEFECT
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999379406027044	WITHOUT_CLASSIFICATION	6.205939729565185E-5	DEFECT
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999666613852527	WITHOUT_CLASSIFICATION	3.3338614747396365E-5	DEFECT
false zero	WITHOUT_CLASSIFICATION	0.999992656558665	WITHOUT_CLASSIFICATION	7.343441335049637E-6	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999698330557657	WITHOUT_CLASSIFICATION	3.0166944234199885E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997307035867943	WITHOUT_CLASSIFICATION	2.6929641320579134E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9994904877015984	WITHOUT_CLASSIFICATION	5.095122984015947E-4	DEFECT
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999294338481984	WITHOUT_CLASSIFICATION	7.056615180163165E-5	DEFECT
push false	WITHOUT_CLASSIFICATION	0.9999878497230078	WITHOUT_CLASSIFICATION	1.215027699223959E-5	DEFECT
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9999642480640678	WITHOUT_CLASSIFICATION	3.575193593221226E-5	DEFECT
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[C]	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
push true	WITHOUT_CLASSIFICATION	0.9999909961576162	WITHOUT_CLASSIFICATION	9.003842383745126E-6	DEFECT
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999762158066131	WITHOUT_CLASSIFICATION	2.3784193386913808E-5	DEFECT
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
[boolean]	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999419625772017	WITHOUT_CLASSIFICATION	5.803742279818344E-5	DEFECT
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999622907680622	WITHOUT_CLASSIFICATION	3.770923193777843E-5	DEFECT
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9988652425819443	WITHOUT_CLASSIFICATION	0.0011347574180556677	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9999484273892489	WITHOUT_CLASSIFICATION	5.1572610751011296E-5	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999908699677547	WITHOUT_CLASSIFICATION	9.130032245343762E-6	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9999605197363088	WITHOUT_CLASSIFICATION	3.948026369121072E-5	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999347348038479	WITHOUT_CLASSIFICATION	6.52651961521487E-5	DEFECT
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999929407798079	WITHOUT_CLASSIFICATION	7.059220192155073E-6	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999908699677547	WITHOUT_CLASSIFICATION	9.130032245343762E-6	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9999605197363088	WITHOUT_CLASSIFICATION	3.948026369121072E-5	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999347348038479	WITHOUT_CLASSIFICATION	6.52651961521487E-5	DEFECT
finally with exception	WITHOUT_CLASSIFICATION	0.9997351459027339	WITHOUT_CLASSIFICATION	2.6485409726608003E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9991727957880024	WITHOUT_CLASSIFICATION	8.272042119974359E-4	DEFECT
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999316559764289	WITHOUT_CLASSIFICATION	6.834402357118879E-5	DEFECT
original exception is on stack	WITHOUT_CLASSIFICATION	0.9987243528696941	WITHOUT_CLASSIFICATION	0.0012756471303058568	DEFECT
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999230474450369	WITHOUT_CLASSIFICATION	7.695255496312196E-5	DEFECT
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999470055266502	WITHOUT_CLASSIFICATION	5.299447334983259E-5	DEFECT
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999886710704738	WITHOUT_CLASSIFICATION	1.1328929526207185E-4	DEFECT
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999630746411065	WITHOUT_CLASSIFICATION	3.6925358893491684E-5	DEFECT
script object	WITHOUT_CLASSIFICATION	0.9999811291193351	WITHOUT_CLASSIFICATION	1.887088066485596E-5	DEFECT
arities	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.958252287097209	WITHOUT_CLASSIFICATION	0.04174771290279088	DEFECT
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9998436135709478	WITHOUT_CLASSIFICATION	1.5638642905225648E-4	DEFECT
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998852139448053	WITHOUT_CLASSIFICATION	1.1478605519467008E-4	DEFECT
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999943248219396	WITHOUT_CLASSIFICATION	5.675178060282028E-6	DEFECT
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997921838130176	WITHOUT_CLASSIFICATION	2.0781618698250743E-4	DEFECT
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999546313227213	WITHOUT_CLASSIFICATION	4.5368677278611405E-5	DEFECT
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9994903557351474	WITHOUT_CLASSIFICATION	5.09644264852585E-4	DEFECT
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998593854855957	WITHOUT_CLASSIFICATION	1.406145144042911E-4	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999947315203297	WITHOUT_CLASSIFICATION	5.268479670266199E-6	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999661417648199	WITHOUT_CLASSIFICATION	3.385823518012133E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999534785958467	WITHOUT_CLASSIFICATION	4.652140415341397E-5	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999815642628085	WITHOUT_CLASSIFICATION	1.8435737191540338E-5	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999815642628085	WITHOUT_CLASSIFICATION	1.8435737191540338E-5	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.99993582965709	WITHOUT_CLASSIFICATION	6.417034290993912E-5	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.99993582965709	WITHOUT_CLASSIFICATION	6.417034290993912E-5	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999905786852809	WITHOUT_CLASSIFICATION	9.421314719049822E-6	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999905786852809	WITHOUT_CLASSIFICATION	9.421314719049822E-6	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999945287699434	WITHOUT_CLASSIFICATION	5.471230056559762E-6	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999992889330988	WITHOUT_CLASSIFICATION	7.110669012752828E-7	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999817177453272	WITHOUT_CLASSIFICATION	1.8282254672832812E-5	DEFECT
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999932520676582	WITHOUT_CLASSIFICATION	6.747932341870367E-6	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999989723910939	WITHOUT_CLASSIFICATION	1.0276089060537002E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999959086191609	WITHOUT_CLASSIFICATION	4.091380839106824E-6	DEFECT
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999687596392085	WITHOUT_CLASSIFICATION	3.124036079149581E-5	DEFECT
then optional args	WITHOUT_CLASSIFICATION	0.9999774905219095	WITHOUT_CLASSIFICATION	2.2509478090373372E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999945287699434	WITHOUT_CLASSIFICATION	5.471230056559762E-6	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999992889330988	WITHOUT_CLASSIFICATION	7.110669012752828E-7	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999817177453272	WITHOUT_CLASSIFICATION	1.8282254672832812E-5	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999989723910939	WITHOUT_CLASSIFICATION	1.0276089060537002E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999959086191609	WITHOUT_CLASSIFICATION	4.091380839106824E-6	DEFECT
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999276905243292	WITHOUT_CLASSIFICATION	7.230947567086828E-5	DEFECT
finally, post args	WITHOUT_CLASSIFICATION	0.9999086481490367	WITHOUT_CLASSIFICATION	9.135185096331766E-5	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9998495385994345	WITHOUT_CLASSIFICATION	1.504614005654989E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9998495385994345	WITHOUT_CLASSIFICATION	1.504614005654989E-4	DEFECT
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998930108767174	WITHOUT_CLASSIFICATION	1.0698912328262411E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999561103662066	WITHOUT_CLASSIFICATION	4.38896337934605E-5	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9977546371346288	WITHOUT_CLASSIFICATION	0.002245362865371302	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999765970705146	WITHOUT_CLASSIFICATION	2.340292948547907E-5	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999765970705146	WITHOUT_CLASSIFICATION	2.340292948547907E-5	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997987473956831	WITHOUT_CLASSIFICATION	2.0125260431695254E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999962020939513	WITHOUT_CLASSIFICATION	3.7979060486000322E-6	DEFECT
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999101462426019	WITHOUT_CLASSIFICATION	8.98537573981744E-5	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999814996008962	WITHOUT_CLASSIFICATION	1.8500399103773195E-5	DEFECT
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9998266957580744	WITHOUT_CLASSIFICATION	1.7330424192567965E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9996871738369433	WITHOUT_CLASSIFICATION	3.12826163056723E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999713560792827	WITHOUT_CLASSIFICATION	2.864392071740273E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999195440528905	WITHOUT_CLASSIFICATION	8.045594710948967E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999246906476178	WITHOUT_CLASSIFICATION	7.530935238214463E-5	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999755625784374	WITHOUT_CLASSIFICATION	2.443742156257737E-5	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999836416985294	WITHOUT_CLASSIFICATION	1.63583014705548E-5	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997987473956831	WITHOUT_CLASSIFICATION	2.0125260431695254E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999962020939513	WITHOUT_CLASSIFICATION	3.7979060486000322E-6	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999814996008962	WITHOUT_CLASSIFICATION	1.8500399103773195E-5	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998310374245968	WITHOUT_CLASSIFICATION	1.6896257540312295E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9977546371346288	WITHOUT_CLASSIFICATION	0.002245362865371302	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9977546371346288	WITHOUT_CLASSIFICATION	0.002245362865371302	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999698330557657	WITHOUT_CLASSIFICATION	3.0166944234199885E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999698330557657	WITHOUT_CLASSIFICATION	3.0166944234199885E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989130621644513	WITHOUT_CLASSIFICATION	0.0010869378355486759	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989130621644513	WITHOUT_CLASSIFICATION	0.0010869378355486759	DEFECT
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999842744322934	WITHOUT_CLASSIFICATION	1.5725567706602664E-5	DEFECT
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9997934416059442	WITHOUT_CLASSIFICATION	2.0655839405588083E-4	DEFECT
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999916949808851	WITHOUT_CLASSIFICATION	8.305019114893637E-5	DEFECT
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999792962718393	WITHOUT_CLASSIFICATION	2.070372816071166E-5	DEFECT
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9998803217001929	WITHOUT_CLASSIFICATION	1.1967829980704626E-4	DEFECT
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999374180696166	WITHOUT_CLASSIFICATION	6.258193038342392E-5	DEFECT
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9989847078278565	WITHOUT_CLASSIFICATION	0.0010152921721434838	DEFECT
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999947203715589	WITHOUT_CLASSIFICATION	5.279628441109674E-6	DEFECT
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9998757257164365	WITHOUT_CLASSIFICATION	1.2427428356355248E-4	DEFECT
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999386549060985	WITHOUT_CLASSIFICATION	6.134509390150498E-5	DEFECT
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999860176455447	WITHOUT_CLASSIFICATION	1.3982354455379011E-5	DEFECT
verify the class	WITHOUT_CLASSIFICATION	0.9999141468399246	WITHOUT_CLASSIFICATION	8.585316007543108E-5	DEFECT
create dir if necessary	WITHOUT_CLASSIFICATION	0.999978920026743	WITHOUT_CLASSIFICATION	2.1079973256894696E-5	DEFECT
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999620883036047	WITHOUT_CLASSIFICATION	3.791169639530524E-5	DEFECT
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999798512829777	WITHOUT_CLASSIFICATION	2.0148717022252967E-5	DEFECT
thread context	WITHOUT_CLASSIFICATION	0.9999299358195841	WITHOUT_CLASSIFICATION	7.006418041581458E-5	DEFECT
line number	WITHOUT_CLASSIFICATION	0.9997853333366157	WITHOUT_CLASSIFICATION	2.146666633842228E-4	DEFECT
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999985539771528	WITHOUT_CLASSIFICATION	1.4460228471903028E-5	DEFECT
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999810344432954	WITHOUT_CLASSIFICATION	1.8965556704531028E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999713560792827	WITHOUT_CLASSIFICATION	2.864392071740273E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999246906476178	WITHOUT_CLASSIFICATION	7.530935238214463E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997489962762272	WITHOUT_CLASSIFICATION	2.5100372377289694E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998310374245968	WITHOUT_CLASSIFICATION	1.6896257540312295E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9977546371346288	WITHOUT_CLASSIFICATION	0.002245362865371302	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999698330557657	WITHOUT_CLASSIFICATION	3.0166944234199885E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989130621644513	WITHOUT_CLASSIFICATION	0.0010869378355486759	DEFECT
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999379176035333	WITHOUT_CLASSIFICATION	6.208239646665514E-5	DEFECT
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.99989510716752	WITHOUT_CLASSIFICATION	1.0489283248010671E-4	DEFECT
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999913007388586	WITHOUT_CLASSIFICATION	8.699261141368518E-6	DEFECT
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9995242133334283	WITHOUT_CLASSIFICATION	4.7578666657168003E-4	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9987109021061676	WITHOUT_CLASSIFICATION	0.0012890978938323641	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9987109021061676	WITHOUT_CLASSIFICATION	0.0012890978938323641	DEFECT
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999502728224269	WITHOUT_CLASSIFICATION	4.972717757320452E-5	DEFECT
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999660151452909	WITHOUT_CLASSIFICATION	3.398485470900528E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999564106994538	WITHOUT_CLASSIFICATION	4.358930054613859E-5	DEFECT
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999665716399244	WITHOUT_CLASSIFICATION	3.342836007554655E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999978162085506	WITHOUT_CLASSIFICATION	2.1837914493895785E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999978162085506	WITHOUT_CLASSIFICATION	2.1837914493895785E-5	DEFECT
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999249546024556	WITHOUT_CLASSIFICATION	7.50453975444807E-5	DEFECT
normal closure	WITHOUT_CLASSIFICATION	0.9999528890312765	WITHOUT_CLASSIFICATION	4.711096872355219E-5	DEFECT
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999397223157033	WITHOUT_CLASSIFICATION	6.027768429671133E-5	DEFECT
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9997678081416133	WITHOUT_CLASSIFICATION	2.321918583866058E-4	DEFECT
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999969650576519	WITHOUT_CLASSIFICATION	3.034942348084086E-6	DEFECT
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999656558500088	WITHOUT_CLASSIFICATION	3.4344149991093054E-5	DEFECT
Ruby name	WITHOUT_CLASSIFICATION	0.9999942145368251	WITHOUT_CLASSIFICATION	5.785463174971599E-6	DEFECT
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9997170270335556	WITHOUT_CLASSIFICATION	2.829729664443353E-4	DEFECT
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9926842437761304	WITHOUT_CLASSIFICATION	0.007315756223869578	DEFECT
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9997082320634625	WITHOUT_CLASSIFICATION	2.917679365375273E-4	DEFECT
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9995370863754377	WITHOUT_CLASSIFICATION	4.629136245622718E-4	DEFECT
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999524383733335	WITHOUT_CLASSIFICATION	4.7561626666419305E-5	DEFECT
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999990660087675	WITHOUT_CLASSIFICATION	9.339912323433832E-7	DEFECT
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999720139709697	WITHOUT_CLASSIFICATION	2.798602903029689E-5	DEFECT
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9996411376725549	WITHOUT_CLASSIFICATION	3.5886232744511214E-4	DEFECT
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999395687403216	WITHOUT_CLASSIFICATION	6.043125967837171E-5	DEFECT
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9998754119709106	WITHOUT_CLASSIFICATION	1.2458802908945057E-4	DEFECT
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999569871989562	WITHOUT_CLASSIFICATION	4.3012801043797396E-5	DEFECT
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.99979276686541	WITHOUT_CLASSIFICATION	2.0723313458999196E-4	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999960747825952	WITHOUT_CLASSIFICATION	3.925217404780687E-6	DEFECT
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.999610585240664	WITHOUT_CLASSIFICATION	3.894147593360453E-4	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9999520872840251	WITHOUT_CLASSIFICATION	4.791271597498129E-5	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9999520872840251	WITHOUT_CLASSIFICATION	4.791271597498129E-5	DEFECT
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9997361109979518	WITHOUT_CLASSIFICATION	2.638890020481815E-4	DEFECT
Build the class body!	WITHOUT_CLASSIFICATION	0.9998359719283489	WITHOUT_CLASSIFICATION	1.640280716511523E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999186041565586	WITHOUT_CLASSIFICATION	8.13958434413395E-5	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999186041565586	WITHOUT_CLASSIFICATION	8.13958434413395E-5	DEFECT
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.8235290701632134	DEFECT	0.17647092983678653	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9996142817757099	WITHOUT_CLASSIFICATION	3.857182242900357E-4	DEFECT
done done done done	WITHOUT_CLASSIFICATION	0.9999679315021083	WITHOUT_CLASSIFICATION	3.206849789178133E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999437682257588	WITHOUT_CLASSIFICATION	5.623177424129971E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999437682257588	WITHOUT_CLASSIFICATION	5.623177424129971E-5	DEFECT
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9997841529160542	WITHOUT_CLASSIFICATION	2.1584708394577142E-4	DEFECT
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999957163523135	WITHOUT_CLASSIFICATION	4.283647686483561E-6	DEFECT
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999775944630243	WITHOUT_CLASSIFICATION	2.2405536975776113E-5	DEFECT
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999791551117162	WITHOUT_CLASSIFICATION	2.084488828382149E-5	DEFECT
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9957816636501138	WITHOUT_CLASSIFICATION	0.0042183363498861925	DEFECT
get the incoming case value	WITHOUT_CLASSIFICATION	0.999986398476524	WITHOUT_CLASSIFICATION	1.3601523475813104E-5	DEFECT
the CASE instruction	WITHOUT_CLASSIFICATION	0.999967921933932	WITHOUT_CLASSIFICATION	3.207806606806242E-5	DEFECT
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999703461998377	WITHOUT_CLASSIFICATION	2.9653800162199935E-5	DEFECT
build each "when"	WITHOUT_CLASSIFICATION	0.9999804776712528	WITHOUT_CLASSIFICATION	1.952232874733075E-5	DEFECT
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998734779485822	WITHOUT_CLASSIFICATION	1.2652205141783354E-4	DEFECT
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999827525472733	WITHOUT_CLASSIFICATION	1.7247452726708023E-5	DEFECT
now emit bodies	WITHOUT_CLASSIFICATION	0.9999796400536833	WITHOUT_CLASSIFICATION	2.0359946316732115E-5	DEFECT
close it out	WITHOUT_CLASSIFICATION	0.9999956818908421	WITHOUT_CLASSIFICATION	4.3181091579163764E-6	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9990655745236261	WITHOUT_CLASSIFICATION	9.344254763738487E-4	DEFECT
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999509080383003	WITHOUT_CLASSIFICATION	4.909196169969008E-5	DEFECT
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999290937825691	WITHOUT_CLASSIFICATION	7.090621743088699E-5	DEFECT
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999958646230794	WITHOUT_CLASSIFICATION	4.1353769205486E-6	DEFECT
Build IR for args	WITHOUT_CLASSIFICATION	0.9999578590222534	WITHOUT_CLASSIFICATION	4.214097774667027E-5	DEFECT
Build IR for body	WITHOUT_CLASSIFICATION	0.99994931971205	WITHOUT_CLASSIFICATION	5.068028794989421E-5	DEFECT
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999793758512029	WITHOUT_CLASSIFICATION	2.0624148797044067E-5	DEFECT
Instance method	WITHOUT_CLASSIFICATION	0.9999511223935902	WITHOUT_CLASSIFICATION	4.887760640992069E-5	DEFECT
Class method	WITHOUT_CLASSIFICATION	0.9999533499410769	WITHOUT_CLASSIFICATION	4.6650058923197134E-5	DEFECT
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999357086766091	WITHOUT_CLASSIFICATION	6.429132339096242E-5	DEFECT
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.999908972186624	WITHOUT_CLASSIFICATION	9.102781337590356E-5	DEFECT
Now for the rest	WITHOUT_CLASSIFICATION	0.99998165542195	WITHOUT_CLASSIFICATION	1.83445780499914E-5	DEFECT
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9997782020844355	WITHOUT_CLASSIFICATION	2.217979155645664E-4	DEFECT
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.947412665295083	WITHOUT_CLASSIFICATION	0.05258733470491713	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998598009362123	WITHOUT_CLASSIFICATION	1.4019906378768702E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999923186524818	WITHOUT_CLASSIFICATION	7.681347518269444E-6	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999643885077714	WITHOUT_CLASSIFICATION	3.561149222873808E-5	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999962042689218	WITHOUT_CLASSIFICATION	3.795731078133093E-6	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9990655745236261	WITHOUT_CLASSIFICATION	9.344254763738487E-4	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998598009362123	WITHOUT_CLASSIFICATION	1.4019906378768702E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999923186524818	WITHOUT_CLASSIFICATION	7.681347518269444E-6	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999962042689218	WITHOUT_CLASSIFICATION	3.795731078133093E-6	DEFECT
Get the container for this new module	WITHOUT_CLASSIFICATION	0.999952428231475	WITHOUT_CLASSIFICATION	4.757176852493789E-5	DEFECT
Build the new module	WITHOUT_CLASSIFICATION	0.9999750718220515	WITHOUT_CLASSIFICATION	2.4928177948441016E-5	DEFECT
Build the module body	WITHOUT_CLASSIFICATION	0.9999480041426028	WITHOUT_CLASSIFICATION	5.199585739716877E-5	DEFECT
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999922456886723	WITHOUT_CLASSIFICATION	7.754311327705E-6	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999874735682442	WITHOUT_CLASSIFICATION	1.2526431755709957E-5	DEFECT
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9994953435783639	WITHOUT_CLASSIFICATION	5.046564216362346E-4	DEFECT
get attr	WITHOUT_CLASSIFICATION	0.9999960747825952	WITHOUT_CLASSIFICATION	3.925217404780687E-6	DEFECT
call operator	WITHOUT_CLASSIFICATION	0.9997456851402243	WITHOUT_CLASSIFICATION	2.543148597757103E-4	DEFECT
set attr	WITHOUT_CLASSIFICATION	0.9999964353913215	WITHOUT_CLASSIFICATION	3.564608678542551E-6	DEFECT
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.999339989323929	WITHOUT_CLASSIFICATION	6.600106760710274E-4	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9987660725062227	WITHOUT_CLASSIFICATION	0.001233927493777224	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9987660725062227	WITHOUT_CLASSIFICATION	0.001233927493777224	DEFECT
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.99996329749867	WITHOUT_CLASSIFICATION	3.670250133004493E-5	DEFECT
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999833965547171	WITHOUT_CLASSIFICATION	1.6603445282784352E-5	DEFECT
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999982398590914	WITHOUT_CLASSIFICATION	1.7601409086046776E-5	DEFECT
Top-level script!	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.99950794106696	WITHOUT_CLASSIFICATION	4.920589330400089E-4	DEFECT
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9999326822563823	WITHOUT_CLASSIFICATION	6.731774361764656E-5	DEFECT
What handles warnings	WITHOUT_CLASSIFICATION	0.9998862423628189	WITHOUT_CLASSIFICATION	1.1375763718122543E-4	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9876746646655059	WITHOUT_CLASSIFICATION	0.012325335334494097	DEFECT
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999932610871983	WITHOUT_CLASSIFICATION	6.738912801710789E-6	DEFECT
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998588708265032	WITHOUT_CLASSIFICATION	1.4112917349675468E-4	DEFECT
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999858322553113	WITHOUT_CLASSIFICATION	1.4167744688695945E-4	DEFECT
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998862501849166	WITHOUT_CLASSIFICATION	1.1374981508341012E-4	DEFECT
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999430887493772	WITHOUT_CLASSIFICATION	5.6911250622659945E-5	DEFECT
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.99997042774765	WITHOUT_CLASSIFICATION	2.9572252349998097E-5	DEFECT
alu operations	WITHOUT_CLASSIFICATION	0.9999489402346016	WITHOUT_CLASSIFICATION	5.1059765398421625E-5	DEFECT
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9998162906169669	WITHOUT_CLASSIFICATION	1.8370938303319438E-4	DEFECT
closure instructions	WITHOUT_CLASSIFICATION	0.9999397526072438	WITHOUT_CLASSIFICATION	6.024739275620167E-5	DEFECT
eval instructions	WITHOUT_CLASSIFICATION	0.9998559072063177	WITHOUT_CLASSIFICATION	1.4409279368234068E-4	DEFECT
def instructions	WITHOUT_CLASSIFICATION	0.9999379622180856	WITHOUT_CLASSIFICATION	6.203778191438997E-5	DEFECT
exception instructions	WITHOUT_CLASSIFICATION	0.9998058950543547	WITHOUT_CLASSIFICATION	1.9410494564533955E-4	DEFECT
Loads	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Stores	WITHOUT_CLASSIFICATION	0.9999908060070727	WITHOUT_CLASSIFICATION	9.193992927292406E-6	DEFECT
jump and branch operations	WITHOUT_CLASSIFICATION	0.999951660573058	WITHOUT_CLASSIFICATION	4.8339426942052694E-5	DEFECT
others	WITHOUT_CLASSIFICATION	0.9999942431161006	WITHOUT_CLASSIFICATION	5.756883899385453E-6	DEFECT
a case/when branch	WITHOUT_CLASSIFICATION	0.999934193442563	WITHOUT_CLASSIFICATION	6.58065574370354E-5	DEFECT
optimization guards	WITHOUT_CLASSIFICATION	0.9999381458890363	WITHOUT_CLASSIFICATION	6.185411096379434E-5	DEFECT
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.5277995649877533	DEFECT	0.47220043501224684	WITHOUT_CLASSIFICATION
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999133620963063	WITHOUT_CLASSIFICATION	8.663790369371413E-5	DEFECT
scripts	WITHOUT_CLASSIFICATION	0.9999909410191429	WITHOUT_CLASSIFICATION	9.058980857123611E-6	DEFECT
scripts and modules	WITHOUT_CLASSIFICATION	0.9999711276223877	WITHOUT_CLASSIFICATION	2.8872377612362065E-5	DEFECT
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999959377077282	WITHOUT_CLASSIFICATION	4.062292271798576E-5	DEFECT
methods and closures	WITHOUT_CLASSIFICATION	0.9999553570813875	WITHOUT_CLASSIFICATION	4.464291861250996E-5	DEFECT
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999941214003396	WITHOUT_CLASSIFICATION	5.878599660402358E-6	DEFECT
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999834288248931	WITHOUT_CLASSIFICATION	1.6571175106854954E-5	DEFECT
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999971445120682	WITHOUT_CLASSIFICATION	2.8554879317946528E-5	DEFECT
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9996724490994309	WITHOUT_CLASSIFICATION	3.275509005691886E-4	DEFECT
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9998902284461862	WITHOUT_CLASSIFICATION	1.0977155381375277E-4	DEFECT
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9994634803786981	WITHOUT_CLASSIFICATION	5.365196213017696E-4	DEFECT
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999896610007939	WITHOUT_CLASSIFICATION	1.0338999206139702E-5	DEFECT
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999745863077925	WITHOUT_CLASSIFICATION	2.541369220759367E-5	DEFECT
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9984725470498833	WITHOUT_CLASSIFICATION	0.0015274529501166521	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.99977412398732	WITHOUT_CLASSIFICATION	2.25876012680114E-4	DEFECT
Readline	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9998836677228125	WITHOUT_CLASSIFICATION	1.1633227718749463E-4	DEFECT
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.998545349339304	WITHOUT_CLASSIFICATION	0.0014546506606960604	DEFECT
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9981118463808573	WITHOUT_CLASSIFICATION	0.001888153619142814	DEFECT
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9976835970879104	WITHOUT_CLASSIFICATION	0.002316402912089584	DEFECT
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9991049524132433	WITHOUT_CLASSIFICATION	8.950475867568058E-4	DEFECT
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9998563364513248	WITHOUT_CLASSIFICATION	1.436635486752914E-4	DEFECT
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9999226531314214	WITHOUT_CLASSIFICATION	7.734686857863656E-5	DEFECT
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.999887771725408	WITHOUT_CLASSIFICATION	1.1222827459206065E-4	DEFECT
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999693704466845	WITHOUT_CLASSIFICATION	3.062955331548171E-5	DEFECT
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9959254675152671	WITHOUT_CLASSIFICATION	0.004074532484732845	DEFECT
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9998789598491543	WITHOUT_CLASSIFICATION	1.2104015084567359E-4	DEFECT
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9982041426350516	WITHOUT_CLASSIFICATION	0.0017958573649483338	DEFECT
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998113868610436	WITHOUT_CLASSIFICATION	1.8861313895632474E-4	DEFECT
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998478103380908	WITHOUT_CLASSIFICATION	1.5218966190916865E-4	DEFECT
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997343349426407	WITHOUT_CLASSIFICATION	2.6566505735927396E-4	DEFECT
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9994304602811259	WITHOUT_CLASSIFICATION	5.695397188741805E-4	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9992237278691287	WITHOUT_CLASSIFICATION	7.762721308711864E-4	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9992237278691287	WITHOUT_CLASSIFICATION	7.762721308711864E-4	DEFECT
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998074455589571	WITHOUT_CLASSIFICATION	1.9255444104300526E-4	DEFECT
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999529584885075	WITHOUT_CLASSIFICATION	4.704151149258829E-5	DEFECT
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998110522971487	WITHOUT_CLASSIFICATION	1.8894770285117536E-4	DEFECT
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998672878472198	WITHOUT_CLASSIFICATION	1.3271215278026291E-4	DEFECT
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999176408939593	WITHOUT_CLASSIFICATION	8.235910604068612E-5	DEFECT
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9999085838299687	WITHOUT_CLASSIFICATION	9.141617003120318E-5	DEFECT
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9999521370914674	WITHOUT_CLASSIFICATION	4.78629085327649E-5	DEFECT
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9997373849077812	WITHOUT_CLASSIFICATION	2.626150922187999E-4	DEFECT
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999874623769225	WITHOUT_CLASSIFICATION	1.2537623077560799E-5	DEFECT
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999964112964671	WITHOUT_CLASSIFICATION	3.5887035329694298E-6	DEFECT
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9999043240542352	WITHOUT_CLASSIFICATION	9.567594576481345E-5	DEFECT
class or module	WITHOUT_CLASSIFICATION	0.9999064046442101	WITHOUT_CLASSIFICATION	9.359535578993475E-5	DEFECT
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.999933588131304	WITHOUT_CLASSIFICATION	6.641186869597583E-5	DEFECT
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999139252921945	WITHOUT_CLASSIFICATION	8.607470780559758E-5	DEFECT
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998909243244687	WITHOUT_CLASSIFICATION	1.0907567553120344E-4	DEFECT
IN is the same!	WITHOUT_CLASSIFICATION	0.9998787614625817	WITHOUT_CLASSIFICATION	1.212385374183091E-4	DEFECT
IN changed!	WITHOUT_CLASSIFICATION	0.9999365807522983	WITHOUT_CLASSIFICATION	6.341924770162799E-5	DEFECT
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999662956075182	WITHOUT_CLASSIFICATION	3.37043924818755E-5	DEFECT
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9966078428129277	WITHOUT_CLASSIFICATION	0.003392157187072348	DEFECT
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.998450291912993	WITHOUT_CLASSIFICATION	0.0015497080870071382	DEFECT
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999442240095108	WITHOUT_CLASSIFICATION	5.577599048922461E-5	DEFECT
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.999942041565836	WITHOUT_CLASSIFICATION	5.795843416404808E-5	DEFECT
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999234778085734	WITHOUT_CLASSIFICATION	7.652219142655876E-5	DEFECT
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9999374694858612	WITHOUT_CLASSIFICATION	6.253051413882414E-5	DEFECT
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9999178612106757	WITHOUT_CLASSIFICATION	8.213878932427813E-5	DEFECT
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9998690915180506	WITHOUT_CLASSIFICATION	1.3090848194940958E-4	DEFECT
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999872221853747	WITHOUT_CLASSIFICATION	1.2777814625265202E-5	DEFECT
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9979781236807668	WITHOUT_CLASSIFICATION	0.002021876319233144	DEFECT
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999972251450085	WITHOUT_CLASSIFICATION	2.7748549915024686E-5	DEFECT
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9985864529239599	WITHOUT_CLASSIFICATION	0.0014135470760401462	DEFECT
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996135534581799	WITHOUT_CLASSIFICATION	3.864465418200734E-4	DEFECT
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999058890236355	WITHOUT_CLASSIFICATION	9.411097636444394E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999760230593585	WITHOUT_CLASSIFICATION	2.3976940641554684E-5	DEFECT
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999493368037679	WITHOUT_CLASSIFICATION	5.066319623216604E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999760230593585	WITHOUT_CLASSIFICATION	2.3976940641554684E-5	DEFECT
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998836444125488	WITHOUT_CLASSIFICATION	1.1635558745112368E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9993761323493099	WITHOUT_CLASSIFICATION	6.238676506901521E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9993761323493099	WITHOUT_CLASSIFICATION	6.238676506901521E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9993761323493099	WITHOUT_CLASSIFICATION	6.238676506901521E-4	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999974941258627	WITHOUT_CLASSIFICATION	2.505874137311221E-6	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999974941258627	WITHOUT_CLASSIFICATION	2.505874137311221E-6	DEFECT
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9997385692158038	WITHOUT_CLASSIFICATION	2.614307841962007E-4	DEFECT
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999316730415785	WITHOUT_CLASSIFICATION	6.832695842156044E-5	DEFECT
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998062266063552	WITHOUT_CLASSIFICATION	1.9377339364485383E-4	DEFECT
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999763553158935	WITHOUT_CLASSIFICATION	2.3644684106545798E-5	DEFECT
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999920574366669	WITHOUT_CLASSIFICATION	7.942563333241108E-6	DEFECT
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999928016755775	WITHOUT_CLASSIFICATION	7.198324422430955E-6	DEFECT
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997652551320806	WITHOUT_CLASSIFICATION	2.3474486791939393E-4	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999959235527313	WITHOUT_CLASSIFICATION	4.0764472687327635E-6	DEFECT
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999380695776602	WITHOUT_CLASSIFICATION	6.193042233975907E-5	DEFECT
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999845511394354	WITHOUT_CLASSIFICATION	1.5448860564655992E-5	DEFECT
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999970237521372	WITHOUT_CLASSIFICATION	2.9762478627949696E-5	DEFECT
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9995006701690193	WITHOUT_CLASSIFICATION	4.993298309806934E-4	DEFECT
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999920616803356	WITHOUT_CLASSIFICATION	7.93831966443071E-6	DEFECT
root-level logic	WITHOUT_CLASSIFICATION	0.9999602460627689	WITHOUT_CLASSIFICATION	3.9753937231031184E-5	DEFECT
root-level methods	WITHOUT_CLASSIFICATION	0.9999511672004003	WITHOUT_CLASSIFICATION	4.883279959963499E-5	DEFECT
root-level classes	WITHOUT_CLASSIFICATION	0.999970867631297	WITHOUT_CLASSIFICATION	2.9132368703058883E-5	DEFECT
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999408035279668	WITHOUT_CLASSIFICATION	5.9196472033178435E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999441229105243	WITHOUT_CLASSIFICATION	5.5877089475668364E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999441229105243	WITHOUT_CLASSIFICATION	5.5877089475668364E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.999959559241604	WITHOUT_CLASSIFICATION	4.044075839613841E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.999959559241604	WITHOUT_CLASSIFICATION	4.044075839613841E-5	DEFECT
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999502641651993	WITHOUT_CLASSIFICATION	4.9735834800810704E-5	DEFECT
Object[] args	WITHOUT_CLASSIFICATION	0.99994689337993	WITHOUT_CLASSIFICATION	5.310662007008994E-5	DEFECT
load handle	WITHOUT_CLASSIFICATION	0.999984413627246	WITHOUT_CLASSIFICATION	1.55863727540256E-5	DEFECT
args array	WITHOUT_CLASSIFICATION	0.999990332699213	WITHOUT_CLASSIFICATION	9.667300787043704E-6	DEFECT
i'th argument	WITHOUT_CLASSIFICATION	0.9999708737713865	WITHOUT_CLASSIFICATION	2.9126228613438E-5	DEFECT
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998405192663734	WITHOUT_CLASSIFICATION	1.5948073362660777E-4	DEFECT
Object arg0	WITHOUT_CLASSIFICATION	0.9999365139179746	WITHOUT_CLASSIFICATION	6.348608202549816E-5	DEFECT
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999774943195787	WITHOUT_CLASSIFICATION	2.250568042135077E-5	DEFECT
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999401944059779	WITHOUT_CLASSIFICATION	5.98055940221608E-5	DEFECT
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999824723849886	WITHOUT_CLASSIFICATION	1.752761501146035E-5	DEFECT
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999824401035952	WITHOUT_CLASSIFICATION	1.7559896404813546E-5	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999639168588571	WITHOUT_CLASSIFICATION	3.608314114291684E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999985318692657	WITHOUT_CLASSIFICATION	1.4681307343202205E-6	DEFECT
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999887672806985	WITHOUT_CLASSIFICATION	1.1232719301518952E-5	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999959235527313	WITHOUT_CLASSIFICATION	4.0764472687327635E-6	DEFECT
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999573769890917	WITHOUT_CLASSIFICATION	4.262301090836589E-5	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999948537708546	WITHOUT_CLASSIFICATION	5.14622914530294E-6	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999948537708546	WITHOUT_CLASSIFICATION	5.14622914530294E-6	DEFECT
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999289466351675	WITHOUT_CLASSIFICATION	7.105336483250836E-5	DEFECT
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9993803180001141	WITHOUT_CLASSIFICATION	6.196819998860141E-4	DEFECT
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999454262082698	WITHOUT_CLASSIFICATION	5.45737917301613E-5	DEFECT
restore position	WITHOUT_CLASSIFICATION	0.9997961867943468	WITHOUT_CLASSIFICATION	2.0381320565314573E-4	DEFECT
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999906591817189	WITHOUT_CLASSIFICATION	9.340818281130347E-6	DEFECT
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999631209939793	WITHOUT_CLASSIFICATION	3.687900602074317E-5	DEFECT
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9998364099765769	WITHOUT_CLASSIFICATION	1.63590023423184E-4	DEFECT
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9889762999191886	WITHOUT_CLASSIFICATION	0.011023700080811468	DEFECT
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9995378044602719	WITHOUT_CLASSIFICATION	4.6219553972816666E-4	DEFECT
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999759142184559	WITHOUT_CLASSIFICATION	2.4085781544107358E-4	DEFECT
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998589603046707	WITHOUT_CLASSIFICATION	1.4103969532929645E-4	DEFECT
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9992966217762095	WITHOUT_CLASSIFICATION	7.033782237904688E-4	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.990225716457923	WITHOUT_CLASSIFICATION	0.009774283542077097	DEFECT
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999776683676065	WITHOUT_CLASSIFICATION	2.2331632393562833E-5	DEFECT
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999929759188525	WITHOUT_CLASSIFICATION	7.024081147400704E-6	DEFECT
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.99985563444898	WITHOUT_CLASSIFICATION	1.4436555102011086E-4	DEFECT
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999457396043668	WITHOUT_CLASSIFICATION	5.426039563326967E-5	DEFECT
Toplevel defines	WITHOUT_CLASSIFICATION	0.9999380519204517	WITHOUT_CLASSIFICATION	6.194807954824762E-5	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999822754310498	WITHOUT_CLASSIFICATION	1.7724568950125346E-5	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998565992921806	WITHOUT_CLASSIFICATION	1.4340070781930357E-4	DEFECT
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999384161483051	WITHOUT_CLASSIFICATION	6.158385169483062E-5	DEFECT
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.999814114588283	WITHOUT_CLASSIFICATION	1.8588541171713795E-4	DEFECT
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999408410181071	WITHOUT_CLASSIFICATION	5.915898189295189E-5	DEFECT
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9999983519395745	WITHOUT_CLASSIFICATION	1.6480604254217977E-6	DEFECT
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9998967938295942	WITHOUT_CLASSIFICATION	1.0320617040573447E-4	DEFECT
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9997489478380941	WITHOUT_CLASSIFICATION	2.5105216190588104E-4	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9985502380909858	WITHOUT_CLASSIFICATION	0.001449761909014254	DEFECT
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999913403223826	WITHOUT_CLASSIFICATION	8.65967761737761E-6	DEFECT
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9996617660897984	WITHOUT_CLASSIFICATION	3.382339102016822E-4	DEFECT
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9995242034305292	WITHOUT_CLASSIFICATION	4.757965694708427E-4	DEFECT
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9996235281666948	WITHOUT_CLASSIFICATION	3.7647183330530147E-4	DEFECT
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9996561978064833	WITHOUT_CLASSIFICATION	3.438021935167373E-4	DEFECT
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.8780290779784378	WITHOUT_CLASSIFICATION	0.12197092202156233	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999627485586848	WITHOUT_CLASSIFICATION	3.7251441315248376E-5	DEFECT
$blah	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9985502380909858	WITHOUT_CLASSIFICATION	0.001449761909014254	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999093728764654	WITHOUT_CLASSIFICATION	9.06271235345675E-5	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999627485586848	WITHOUT_CLASSIFICATION	3.7251441315248376E-5	DEFECT
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9995996862244171	WITHOUT_CLASSIFICATION	4.003137755828976E-4	DEFECT
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999873267323082	WITHOUT_CLASSIFICATION	1.2673267691870797E-5	DEFECT
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999645712081535	WITHOUT_CLASSIFICATION	3.542879184647039E-5	DEFECT
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9998619417758263	WITHOUT_CLASSIFICATION	1.380582241736596E-4	DEFECT
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999501806923091	WITHOUT_CLASSIFICATION	4.981930769072579E-5	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998815314735009	WITHOUT_CLASSIFICATION	1.1846852649915225E-4	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998815314735009	WITHOUT_CLASSIFICATION	1.1846852649915225E-4	DEFECT
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999274413275944	WITHOUT_CLASSIFICATION	7.25586724056657E-5	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998804528398922	WITHOUT_CLASSIFICATION	1.1954716010772104E-4	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999699591058023	WITHOUT_CLASSIFICATION	3.0040894197644973E-5	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999699591058023	WITHOUT_CLASSIFICATION	3.0040894197644973E-5	DEFECT
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999872535565841	WITHOUT_CLASSIFICATION	1.2746443415892194E-5	DEFECT
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999083038929658	WITHOUT_CLASSIFICATION	9.169610703417591E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9998779759469395	WITHOUT_CLASSIFICATION	1.220240530604058E-4	DEFECT
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9998591022998107	WITHOUT_CLASSIFICATION	1.4089770018939698E-4	DEFECT
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9979074700785687	WITHOUT_CLASSIFICATION	0.00209252992143115	DEFECT
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998908782737156	WITHOUT_CLASSIFICATION	1.091217262843799E-4	DEFECT
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9997910753615241	WITHOUT_CLASSIFICATION	2.0892463847584748E-4	DEFECT
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999160214656748	WITHOUT_CLASSIFICATION	8.397853432515163E-5	DEFECT
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999832912714657	WITHOUT_CLASSIFICATION	1.6708728534365874E-5	DEFECT
host and port given	WITHOUT_CLASSIFICATION	0.9999844900588403	WITHOUT_CLASSIFICATION	1.5509941159746207E-5	DEFECT
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999333271671289	WITHOUT_CLASSIFICATION	6.667283287111729E-5	DEFECT
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.999954054897686	WITHOUT_CLASSIFICATION	4.594510231414598E-5	DEFECT
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999230667805552	WITHOUT_CLASSIFICATION	7.693321944476817E-5	DEFECT
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9997990299801104	WITHOUT_CLASSIFICATION	2.0097001988964605E-4	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997559813794282	WITHOUT_CLASSIFICATION	2.4401862057164887E-4	DEFECT
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999374300620829	WITHOUT_CLASSIFICATION	6.256993791716606E-5	DEFECT
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9997623651305262	WITHOUT_CLASSIFICATION	2.3763486947392387E-4	DEFECT
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999106597035717	WITHOUT_CLASSIFICATION	8.934029642835405E-5	DEFECT
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999773291476028	WITHOUT_CLASSIFICATION	2.2670852397120835E-5	DEFECT
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9988389218316677	WITHOUT_CLASSIFICATION	0.0011610781683323603	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
255.255.255.255	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
0.0.0.0	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999344480436039	WITHOUT_CLASSIFICATION	6.555195639612976E-5	DEFECT
line 323	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9983934551798532	WITHOUT_CLASSIFICATION	0.001606544820146725	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9983934551798532	WITHOUT_CLASSIFICATION	0.001606544820146725	DEFECT
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999812672066096	WITHOUT_CLASSIFICATION	1.8732793390382963E-5	DEFECT
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999524209750115	WITHOUT_CLASSIFICATION	4.757902498848963E-5	DEFECT
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999933588131304	WITHOUT_CLASSIFICATION	6.641186869597583E-5	DEFECT
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9998601194429897	WITHOUT_CLASSIFICATION	1.3988055701021838E-4	DEFECT
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999541977299898	WITHOUT_CLASSIFICATION	4.580227001014529E-5	DEFECT
RubySocket	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999528370099178	WITHOUT_CLASSIFICATION	4.716299008217749E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999373070612164	WITHOUT_CLASSIFICATION	6.269293878359089E-5	DEFECT
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999109261951951	WITHOUT_CLASSIFICATION	8.907380480502512E-5	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999162394106	WITHOUT_CLASSIFICATION	8.376058943001464E-8	DEFECT
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999998988961386	WITHOUT_CLASSIFICATION	1.0110386140303014E-6	DEFECT
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999949517458973	WITHOUT_CLASSIFICATION	5.048254102645211E-6	DEFECT
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9997360019493348	WITHOUT_CLASSIFICATION	2.639980506652159E-4	DEFECT
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999761054883363	WITHOUT_CLASSIFICATION	2.3894511663756176E-5	DEFECT
Call the thread's code	WITHOUT_CLASSIFICATION	0.9999056236211218	WITHOUT_CLASSIFICATION	9.437637887821701E-5	DEFECT
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999979823588647	WITHOUT_CLASSIFICATION	2.017641135158096E-6	DEFECT
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999704221220258	WITHOUT_CLASSIFICATION	2.957787797418989E-4	DEFECT
be dead	WITHOUT_CLASSIFICATION	0.9999756383686531	WITHOUT_CLASSIFICATION	2.4361631346838435E-5	DEFECT
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9988750632666177	WITHOUT_CLASSIFICATION	0.0011249367333823403	DEFECT
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999896819904456	WITHOUT_CLASSIFICATION	1.0318009554439434E-5	DEFECT
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9998457749538722	WITHOUT_CLASSIFICATION	1.5422504612777702E-4	DEFECT
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999607967953377	WITHOUT_CLASSIFICATION	3.920320466233207E-5	DEFECT
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999961782541746	WITHOUT_CLASSIFICATION	3.821745825396902E-5	DEFECT
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999926436333119	WITHOUT_CLASSIFICATION	7.356366688055544E-6	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9995084511262807	WITHOUT_CLASSIFICATION	4.915488737192755E-4	DEFECT
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9877016945400044	WITHOUT_CLASSIFICATION	0.012298305459995636	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999654773714146	WITHOUT_CLASSIFICATION	3.452262858531223E-5	DEFECT
main body	WITHOUT_CLASSIFICATION	0.9999928911852298	WITHOUT_CLASSIFICATION	7.108814770271582E-6	DEFECT
return jump handling	WITHOUT_CLASSIFICATION	0.9999795069968803	WITHOUT_CLASSIFICATION	2.0493003119762395E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.999991560260076	WITHOUT_CLASSIFICATION	8.43973992404901E-6	DEFECT
return result if we're still good	WITHOUT_CLASSIFICATION	0.9997611590734774	WITHOUT_CLASSIFICATION	2.3884092652255468E-4	DEFECT
redo jump handling	WITHOUT_CLASSIFICATION	0.999968336691196	WITHOUT_CLASSIFICATION	3.166330880407975E-5	DEFECT
clear the redo	WITHOUT_CLASSIFICATION	0.9999733712948118	WITHOUT_CLASSIFICATION	2.6628705188232335E-5	DEFECT
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999702679666272	WITHOUT_CLASSIFICATION	2.973203337279415E-5	DEFECT
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9996484290238735	WITHOUT_CLASSIFICATION	3.515709761265261E-4	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999646830881781	WITHOUT_CLASSIFICATION	3.5316911821997585E-5	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995844622304849	WITHOUT_CLASSIFICATION	4.1553776951514193E-4	DEFECT
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9996779275448977	WITHOUT_CLASSIFICATION	3.220724551023547E-4	DEFECT
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9991337024730254	WITHOUT_CLASSIFICATION	8.662975269746343E-4	DEFECT
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9961982375225191	WITHOUT_CLASSIFICATION	0.0038017624774808003	DEFECT
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999923329560925	WITHOUT_CLASSIFICATION	7.66704390757139E-6	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9992541842479656	WITHOUT_CLASSIFICATION	7.458157520343443E-4	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9992541842479656	WITHOUT_CLASSIFICATION	7.458157520343443E-4	DEFECT
normal all-rest method	WITHOUT_CLASSIFICATION	0.9999342905762655	WITHOUT_CLASSIFICATION	6.570942373450983E-5	DEFECT
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999299608700014	WITHOUT_CLASSIFICATION	7.003912999857865E-5	DEFECT
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999692366260243	WITHOUT_CLASSIFICATION	3.07633739757858E-5	DEFECT
return	WITHOUT_CLASSIFICATION	0.9999942173581285	WITHOUT_CLASSIFICATION	5.7826418713726855E-6	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999947315203297	WITHOUT_CLASSIFICATION	5.268479670266199E-6	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999661417648199	WITHOUT_CLASSIFICATION	3.385823518012133E-5	DEFECT
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999974080104704	WITHOUT_CLASSIFICATION	2.5919895296061497E-5	DEFECT
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9988294941296303	WITHOUT_CLASSIFICATION	0.001170505870369663	DEFECT
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9996984466830808	WITHOUT_CLASSIFICATION	3.015533169191785E-4	DEFECT
tc	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
self name	WITHOUT_CLASSIFICATION	0.9999942640426658	WITHOUT_CLASSIFICATION	5.735957334171736E-6	DEFECT
no args	WITHOUT_CLASSIFICATION	0.9999978363804666	WITHOUT_CLASSIFICATION	2.1636195333256994E-6	DEFECT
variable args with block	WITHOUT_CLASSIFICATION	0.9999880033064248	WITHOUT_CLASSIFICATION	1.1996693575176378E-5	DEFECT
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999940033961484	WITHOUT_CLASSIFICATION	5.996603851561057E-6	DEFECT
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999848919128107	WITHOUT_CLASSIFICATION	1.5108087189388749E-5	DEFECT
one arg with block	WITHOUT_CLASSIFICATION	0.9999942093257245	WITHOUT_CLASSIFICATION	5.790674275560975E-6	DEFECT
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999989244052196	WITHOUT_CLASSIFICATION	1.0755947803855724E-5	DEFECT
two args with block	WITHOUT_CLASSIFICATION	0.9999691302727545	WITHOUT_CLASSIFICATION	3.086972724557296E-5	DEFECT
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999353845868548	WITHOUT_CLASSIFICATION	6.461541314522729E-5	DEFECT
three args with block	WITHOUT_CLASSIFICATION	0.9999830507692075	WITHOUT_CLASSIFICATION	1.6949230792486816E-5	DEFECT
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999751589964431	WITHOUT_CLASSIFICATION	2.484100355691742E-5	DEFECT
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999934314228891	WITHOUT_CLASSIFICATION	6.568577110989938E-6	DEFECT
all other arg cases with block	WITHOUT_CLASSIFICATION	0.999996381005735	WITHOUT_CLASSIFICATION	3.6189942650740792E-6	DEFECT
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999942195257916	WITHOUT_CLASSIFICATION	5.780474208413379E-6	DEFECT
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999977916690551	WITHOUT_CLASSIFICATION	2.2083309450056103E-6	DEFECT
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999986733077667	WITHOUT_CLASSIFICATION	1.3266922333100628E-5	DEFECT
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999939826612343	WITHOUT_CLASSIFICATION	6.017338765648134E-6	DEFECT
load target for invocations	WITHOUT_CLASSIFICATION	0.9999829848022624	WITHOUT_CLASSIFICATION	1.7015197737552856E-5	DEFECT
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999967638650297	WITHOUT_CLASSIFICATION	3.236134970301255E-5	DEFECT
static invocation	WITHOUT_CLASSIFICATION	0.9999610907684168	WITHOUT_CLASSIFICATION	3.890923158314582E-5	DEFECT
virtual invocation	WITHOUT_CLASSIFICATION	0.9999445847692113	WITHOUT_CLASSIFICATION	5.541523078862585E-5	DEFECT
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999965160154091	WITHOUT_CLASSIFICATION	3.483984590929807E-6	DEFECT
normal finally and exit	WITHOUT_CLASSIFICATION	0.9999581107650932	WITHOUT_CLASSIFICATION	4.188923490681897E-5	DEFECT
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999782900293143	WITHOUT_CLASSIFICATION	2.1709970685740112E-5	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995844622304849	WITHOUT_CLASSIFICATION	4.1553776951514193E-4	DEFECT
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9997774949481004	WITHOUT_CLASSIFICATION	2.2250505189956818E-4	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999818397115362	WITHOUT_CLASSIFICATION	1.816028846376553E-5	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999818397115362	WITHOUT_CLASSIFICATION	1.816028846376553E-5	DEFECT
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999779510374622	WITHOUT_CLASSIFICATION	2.2048962537708232E-5	DEFECT
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9998645069342825	WITHOUT_CLASSIFICATION	1.3549306571742996E-4	DEFECT
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
never reached	WITHOUT_CLASSIFICATION	0.9999131903441366	WITHOUT_CLASSIFICATION	8.680965586343961E-5	DEFECT
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999854684788537	WITHOUT_CLASSIFICATION	1.453152114618213E-5	DEFECT
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999915601398164	WITHOUT_CLASSIFICATION	8.43986018360508E-6	DEFECT
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999940439591072	WITHOUT_CLASSIFICATION	5.956040892870272E-6	DEFECT
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.99996390297709	WITHOUT_CLASSIFICATION	3.609702290993057E-5	DEFECT
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999919402638066	WITHOUT_CLASSIFICATION	8.059736193508189E-6	DEFECT
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999943122146647	WITHOUT_CLASSIFICATION	5.687785335272664E-6	DEFECT
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999655287127867	WITHOUT_CLASSIFICATION	3.447128721339765E-5	DEFECT
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999861229621683	WITHOUT_CLASSIFICATION	1.3877037831726046E-5	DEFECT
promise to implement N	WITHOUT_CLASSIFICATION	0.9999470333149039	WITHOUT_CLASSIFICATION	5.2966685096197296E-5	DEFECT
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999963983046428	WITHOUT_CLASSIFICATION	3.6016953571176124E-6	DEFECT
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9998619496897267	WITHOUT_CLASSIFICATION	1.3805031027317902E-4	DEFECT
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9998684356183828	WITHOUT_CLASSIFICATION	1.3156438161713218E-4	DEFECT
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999403238661407	WITHOUT_CLASSIFICATION	5.967613385932106E-5	DEFECT
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999653396397432	WITHOUT_CLASSIFICATION	3.466036025673599E-5	DEFECT
promise to implement one to three	WITHOUT_CLASSIFICATION	0.999975539865402	WITHOUT_CLASSIFICATION	2.446013459796338E-5	DEFECT
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998517714396855	WITHOUT_CLASSIFICATION	1.4822856031454886E-4	DEFECT
promise to implement three	WITHOUT_CLASSIFICATION	0.9999494187870694	WITHOUT_CLASSIFICATION	5.058121293047418E-5	DEFECT
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999977444298323	WITHOUT_CLASSIFICATION	2.255570167700568E-5	DEFECT
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999818086541344	WITHOUT_CLASSIFICATION	1.8191345865588935E-5	DEFECT
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999867003124918	WITHOUT_CLASSIFICATION	1.329968750821069E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999577019247631	WITHOUT_CLASSIFICATION	4.229807523694216E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999266419208984	WITHOUT_CLASSIFICATION	7.335807910153855E-5	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999878569873694	WITHOUT_CLASSIFICATION	1.2143012630595473E-5	DEFECT
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999373047305068	WITHOUT_CLASSIFICATION	6.269526949324152E-5	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999401090886948	WITHOUT_CLASSIFICATION	5.98909113050603E-5	DEFECT
start setup method	WITHOUT_CLASSIFICATION	0.9999635292446271	WITHOUT_CLASSIFICATION	3.64707553728577E-5	DEFECT
set RubyClass	WITHOUT_CLASSIFICATION	0.9999755314765936	WITHOUT_CLASSIFICATION	2.4468523406473196E-5	DEFECT
set Ruby	WITHOUT_CLASSIFICATION	0.9999964353913215	WITHOUT_CLASSIFICATION	3.564608678542551E-6	DEFECT
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999708148743676	WITHOUT_CLASSIFICATION	2.9185125632413384E-5	DEFECT
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999978710897317	WITHOUT_CLASSIFICATION	2.128910268289637E-5	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999678433334425	WITHOUT_CLASSIFICATION	3.215666655743732E-5	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999663836234388	WITHOUT_CLASSIFICATION	3.3616376561227754E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999577019247631	WITHOUT_CLASSIFICATION	4.229807523694216E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999266419208984	WITHOUT_CLASSIFICATION	7.335807910153855E-5	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999878569873694	WITHOUT_CLASSIFICATION	1.2143012630595473E-5	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999401090886948	WITHOUT_CLASSIFICATION	5.98909113050603E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998711846913754	WITHOUT_CLASSIFICATION	1.2881530862461868E-4	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998983083498508	WITHOUT_CLASSIFICATION	1.0169165014911429E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999559382104	WITHOUT_CLASSIFICATION	4.406178960003844E-5	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999772361633488	WITHOUT_CLASSIFICATION	2.2763836651245976E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999545992802856	WITHOUT_CLASSIFICATION	4.540071971434777E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999612740981367	WITHOUT_CLASSIFICATION	3.872590186327984E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9998730165236647	WITHOUT_CLASSIFICATION	1.2698347633533554E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9999456235474596	WITHOUT_CLASSIFICATION	5.437645254031572E-5	DEFECT
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999869032287705	WITHOUT_CLASSIFICATION	1.3096771229458532E-5	DEFECT
store the wrapper	WITHOUT_CLASSIFICATION	0.9999816316985763	WITHOUT_CLASSIFICATION	1.8368301423647314E-5	DEFECT
prepare temp locals	WITHOUT_CLASSIFICATION	0.9999406424286122	WITHOUT_CLASSIFICATION	5.935757138775886E-5	DEFECT
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999995259971071	WITHOUT_CLASSIFICATION	4.74002892952645E-7	DEFECT
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999913992261995	WITHOUT_CLASSIFICATION	8.600773800501583E-5	DEFECT
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999929187727971	WITHOUT_CLASSIFICATION	7.081227202908661E-6	DEFECT
store it	WITHOUT_CLASSIFICATION	0.9999955368287777	WITHOUT_CLASSIFICATION	4.463171222262065E-6	DEFECT
end of try block	WITHOUT_CLASSIFICATION	0.9999919539326039	WITHOUT_CLASSIFICATION	8.046067396125468E-6	DEFECT
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999920844494818	WITHOUT_CLASSIFICATION	7.915550518258118E-6	DEFECT
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999213937410036	WITHOUT_CLASSIFICATION	7.860625899640725E-5	DEFECT
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999764852674379	WITHOUT_CLASSIFICATION	2.3514732562111073E-4	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999663836234388	WITHOUT_CLASSIFICATION	3.3616376561227754E-5	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998983083498508	WITHOUT_CLASSIFICATION	1.0169165014911429E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999559382104	WITHOUT_CLASSIFICATION	4.406178960003844E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999545992802856	WITHOUT_CLASSIFICATION	4.540071971434777E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999612740981367	WITHOUT_CLASSIFICATION	3.872590186327984E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9998730165236647	WITHOUT_CLASSIFICATION	1.2698347633533554E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9999456235474596	WITHOUT_CLASSIFICATION	5.437645254031572E-5	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9999442997232284	WITHOUT_CLASSIFICATION	5.570027677148257E-5	DEFECT
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9949395768094821	WITHOUT_CLASSIFICATION	0.005060423190517911	DEFECT
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999575388591605	WITHOUT_CLASSIFICATION	4.246114083948239E-5	DEFECT
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999849280632919	WITHOUT_CLASSIFICATION	1.5071936708086382E-5	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9997784157695344	WITHOUT_CLASSIFICATION	2.2158423046563682E-4	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9997784157695344	WITHOUT_CLASSIFICATION	2.2158423046563682E-4	DEFECT
setup the class	WITHOUT_CLASSIFICATION	0.9998952689759137	WITHOUT_CLASSIFICATION	1.0473102408635872E-4	DEFECT
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.999958338904805	WITHOUT_CLASSIFICATION	4.166109519502813E-5	DEFECT
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999658750918881	WITHOUT_CLASSIFICATION	3.4124908111912904E-5	DEFECT
probably a primitive	WITHOUT_CLASSIFICATION	0.9999572037375372	WITHOUT_CLASSIFICATION	4.279626246287824E-5	DEFECT
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999987965969137	WITHOUT_CLASSIFICATION	1.2034030863090846E-6	DEFECT
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999448102553542	WITHOUT_CLASSIFICATION	5.5189744645891514E-5	DEFECT
set the full name	WITHOUT_CLASSIFICATION	0.9999908268433685	WITHOUT_CLASSIFICATION	9.173156631433687E-6	DEFECT
include all interfaces	WITHOUT_CLASSIFICATION	0.9999477964750012	WITHOUT_CLASSIFICATION	5.2203524998735215E-5	DEFECT
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999665685952749	WITHOUT_CLASSIFICATION	3.343140472501083E-5	DEFECT
add array construction methods	WITHOUT_CLASSIFICATION	0.9999217073540163	WITHOUT_CLASSIFICATION	7.82926459837008E-5	DEFECT
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999282363390151	WITHOUT_CLASSIFICATION	7.176366098484859E-5	DEFECT
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999889501387701	WITHOUT_CLASSIFICATION	1.1049861229960596E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998964285860396	WITHOUT_CLASSIFICATION	1.0357141396050551E-4	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9997409822662344	WITHOUT_CLASSIFICATION	2.5901773376551813E-4	DEFECT
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999748010385646	WITHOUT_CLASSIFICATION	2.5198961435375518E-5	DEFECT
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999650438757887	WITHOUT_CLASSIFICATION	3.495612421142271E-5	DEFECT
add all static variables	WITHOUT_CLASSIFICATION	0.9999785443973563	WITHOUT_CLASSIFICATION	2.1455602643652616E-5	DEFECT
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999753470216775	WITHOUT_CLASSIFICATION	2.4652978322575712E-5	DEFECT
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9998921634900895	WITHOUT_CLASSIFICATION	1.0783650991055166E-4	DEFECT
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999988835111764	WITHOUT_CLASSIFICATION	1.1164888235375502E-6	DEFECT
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9886048310057504	WITHOUT_CLASSIFICATION	0.011395168994249635	DEFECT
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999767910597832	WITHOUT_CLASSIFICATION	2.3208940216713166E-5	DEFECT
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999833124301517	WITHOUT_CLASSIFICATION	1.6687569848242413E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999878412102285	WITHOUT_CLASSIFICATION	1.2158789771501035E-5	DEFECT
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999609697184192	WITHOUT_CLASSIFICATION	3.903028158092167E-5	DEFECT
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9996261146793519	WITHOUT_CLASSIFICATION	3.738853206481206E-4	DEFECT
line 326	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999878412102285	WITHOUT_CLASSIFICATION	1.2158789771501035E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9997409822662344	WITHOUT_CLASSIFICATION	2.5901773376551813E-4	DEFECT
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999477040338917	WITHOUT_CLASSIFICATION	5.229596610838886E-5	DEFECT
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.999891923418182	WITHOUT_CLASSIFICATION	1.0807658181802345E-4	DEFECT
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999826578542197	WITHOUT_CLASSIFICATION	1.73421457803402E-5	DEFECT
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.99945089530106	WITHOUT_CLASSIFICATION	5.49104698939934E-4	DEFECT
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999972429671417	WITHOUT_CLASSIFICATION	2.757032858349633E-6	DEFECT
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999846038815654	WITHOUT_CLASSIFICATION	1.539611843468007E-5	DEFECT
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999138594173819	WITHOUT_CLASSIFICATION	8.614058261823926E-5	DEFECT
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.99999287358334	WITHOUT_CLASSIFICATION	7.126416660102779E-6	DEFECT
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.944085773855878	WITHOUT_CLASSIFICATION	0.05591422614412208	DEFECT
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9990072854922353	WITHOUT_CLASSIFICATION	9.927145077647406E-4	DEFECT
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9994857827255296	WITHOUT_CLASSIFICATION	5.142172744704151E-4	DEFECT
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999749265477537	WITHOUT_CLASSIFICATION	2.507345224633807E-5	DEFECT
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9997572960749395	WITHOUT_CLASSIFICATION	2.4270392506055345E-4	DEFECT
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999792916975178	WITHOUT_CLASSIFICATION	2.0708302482256713E-5	DEFECT
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998923496588005	WITHOUT_CLASSIFICATION	1.0765034119951675E-4	DEFECT
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9998745859718126	WITHOUT_CLASSIFICATION	1.2541402818738468E-4	DEFECT
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999243137794275	WITHOUT_CLASSIFICATION	7.568622057253683E-5	DEFECT
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9989044579379329	WITHOUT_CLASSIFICATION	0.0010955420620671291	DEFECT
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999996454725872	WITHOUT_CLASSIFICATION	3.545274127328608E-7	DEFECT
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999425874013088	WITHOUT_CLASSIFICATION	5.741259869125698E-5	DEFECT
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999958954665181	WITHOUT_CLASSIFICATION	4.104533481948515E-6	DEFECT
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9998075671109966	WITHOUT_CLASSIFICATION	1.924328890034105E-4	DEFECT
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999033431166265	WITHOUT_CLASSIFICATION	9.665688337352203E-5	DEFECT
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9999946829562518	WITHOUT_CLASSIFICATION	5.317043748254516E-6	DEFECT
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999983518858839	WITHOUT_CLASSIFICATION	1.648114116139739E-6	DEFECT
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9997431059419019	WITHOUT_CLASSIFICATION	2.5689405809809515E-4	DEFECT
array creation should use this variant	WITHOUT_CLASSIFICATION	0.99881071173978	WITHOUT_CLASSIFICATION	0.0011892882602200273	DEFECT
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999891980508273	WITHOUT_CLASSIFICATION	1.0801949172689935E-5	DEFECT
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999957209434885	WITHOUT_CLASSIFICATION	4.279056511502423E-5	DEFECT
add reference to interface module	WITHOUT_CLASSIFICATION	0.9999794115435195	WITHOUT_CLASSIFICATION	2.058845648041361E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998964285860396	WITHOUT_CLASSIFICATION	1.0357141396050551E-4	DEFECT
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999654371418523	WITHOUT_CLASSIFICATION	3.4562858147791345E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995900924647744	WITHOUT_CLASSIFICATION	4.0990753522564136E-4	DEFECT
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999413977388696	WITHOUT_CLASSIFICATION	5.860226113038553E-5	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998584812882614	WITHOUT_CLASSIFICATION	1.4151871173854086E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998584812882614	WITHOUT_CLASSIFICATION	1.4151871173854086E-4	DEFECT
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999067088934265	WITHOUT_CLASSIFICATION	9.329110657359653E-5	DEFECT
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999880092292547	WITHOUT_CLASSIFICATION	1.1990770745219499E-5	DEFECT
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999894425827437	WITHOUT_CLASSIFICATION	1.055741725627371E-5	DEFECT
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999691509162945	WITHOUT_CLASSIFICATION	3.084908370554032E-5	DEFECT
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9998894227165686	WITHOUT_CLASSIFICATION	1.1057728343141792E-4	DEFECT
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999527858583416	WITHOUT_CLASSIFICATION	4.721414165842522E-5	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997756865191455	WITHOUT_CLASSIFICATION	2.2431348085442452E-4	DEFECT
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999956989554423	WITHOUT_CLASSIFICATION	4.301044557663677E-6	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998307424074689	WITHOUT_CLASSIFICATION	1.69257592531113E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999583258724426	WITHOUT_CLASSIFICATION	4.167412755749462E-5	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999215120485991	WITHOUT_CLASSIFICATION	7.848795140082558E-5	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999296610194024	WITHOUT_CLASSIFICATION	7.033898059758767E-5	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9999179985751178	WITHOUT_CLASSIFICATION	8.200142488222957E-5	DEFECT
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999787464225999	WITHOUT_CLASSIFICATION	2.1253577400102125E-5	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
something?	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999948979737051	WITHOUT_CLASSIFICATION	5.102026294853065E-6	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999948979737051	WITHOUT_CLASSIFICATION	5.102026294853065E-6	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999110675475298	WITHOUT_CLASSIFICATION	8.89324524701779E-5	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999110675475298	WITHOUT_CLASSIFICATION	8.89324524701779E-5	DEFECT
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999970861110745	WITHOUT_CLASSIFICATION	2.9138889254279195E-6	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9986488137249981	WITHOUT_CLASSIFICATION	0.0013511862750019313	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999489197589883	WITHOUT_CLASSIFICATION	5.108024101181694E-5	DEFECT
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.999997906884605	WITHOUT_CLASSIFICATION	2.093115394926583E-6	DEFECT
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999687080559038	WITHOUT_CLASSIFICATION	3.129194409620955E-4	DEFECT
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999128124383005	WITHOUT_CLASSIFICATION	8.718756169946577E-5	DEFECT
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999887382520265	WITHOUT_CLASSIFICATION	1.126174797357027E-5	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999296610194024	WITHOUT_CLASSIFICATION	7.033898059758767E-5	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9999179985751178	WITHOUT_CLASSIFICATION	8.200142488222957E-5	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9997947181588996	WITHOUT_CLASSIFICATION	2.0528184110037745E-4	DEFECT
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999663405581821	WITHOUT_CLASSIFICATION	3.36594418178447E-5	DEFECT
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9969788603338063	WITHOUT_CLASSIFICATION	0.0030211396661936627	DEFECT
see note above re: return type	WITHOUT_CLASSIFICATION	0.9984351769278	WITHOUT_CLASSIFICATION	0.0015648230722000232	DEFECT
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999787598221026	WITHOUT_CLASSIFICATION	2.1240177897425743E-5	DEFECT
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9967610613688251	WITHOUT_CLASSIFICATION	0.003238938631174857	DEFECT
one-dimensional array	WITHOUT_CLASSIFICATION	0.9998879520471584	WITHOUT_CLASSIFICATION	1.1204795284164806E-4	DEFECT
n-dimensional array	WITHOUT_CLASSIFICATION	0.9999215445535408	WITHOUT_CLASSIFICATION	7.845544645926964E-5	DEFECT
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999645310346105	WITHOUT_CLASSIFICATION	3.546896538947324E-5	DEFECT
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999900416014078	WITHOUT_CLASSIFICATION	9.958398592270792E-6	DEFECT
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.999752655458	WITHOUT_CLASSIFICATION	2.473445420001228E-4	DEFECT
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9992468415038046	WITHOUT_CLASSIFICATION	7.531584961953603E-4	DEFECT
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.999917013783073	WITHOUT_CLASSIFICATION	8.29862169270075E-5	DEFECT
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9990516740231807	WITHOUT_CLASSIFICATION	9.483259768193722E-4	DEFECT
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999846978815478	WITHOUT_CLASSIFICATION	1.530211845215076E-5	DEFECT
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.99998240401287	WITHOUT_CLASSIFICATION	1.7595987129937565E-5	DEFECT
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9996639374056593	WITHOUT_CLASSIFICATION	3.3606259434082594E-4	DEFECT
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999995916091816	WITHOUT_CLASSIFICATION	4.08390818399331E-6	DEFECT
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999978296789487	WITHOUT_CLASSIFICATION	2.170321051301151E-6	DEFECT
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9996615888773929	WITHOUT_CLASSIFICATION	3.3841112260711814E-4	DEFECT
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999898200748221	WITHOUT_CLASSIFICATION	1.0179925177913149E-5	DEFECT
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999082759393993	WITHOUT_CLASSIFICATION	9.172406060073967E-5	DEFECT
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999881435439131	WITHOUT_CLASSIFICATION	1.1856456086829024E-5	DEFECT
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999782056734743	WITHOUT_CLASSIFICATION	2.179432652579409E-5	DEFECT
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999777335136105	WITHOUT_CLASSIFICATION	2.2266486389463648E-5	DEFECT
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999451471225822	WITHOUT_CLASSIFICATION	5.485287741779342E-5	DEFECT
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9996669587233928	WITHOUT_CLASSIFICATION	3.3304127660707976E-4	DEFECT
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999666224038902	WITHOUT_CLASSIFICATION	3.33775961097797E-5	DEFECT
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9851747863352487	WITHOUT_CLASSIFICATION	0.014825213664751338	DEFECT
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9998880569891287	WITHOUT_CLASSIFICATION	1.1194301087125158E-4	DEFECT
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9997439924700358	WITHOUT_CLASSIFICATION	2.5600752996419047E-4	DEFECT
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999409562614904	WITHOUT_CLASSIFICATION	5.904373850961123E-5	DEFECT
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999365511501261	WITHOUT_CLASSIFICATION	6.344884987379312E-5	DEFECT
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9998245085984648	WITHOUT_CLASSIFICATION	1.7549140153512023E-4	DEFECT
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998822752912916	WITHOUT_CLASSIFICATION	1.1772470870836505E-4	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9999036925890409	WITHOUT_CLASSIFICATION	9.630741095910923E-5	DEFECT
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9997448587817067	WITHOUT_CLASSIFICATION	2.551412182932948E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999952288149198	WITHOUT_CLASSIFICATION	4.771185080153681E-6	DEFECT
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999753488710148	WITHOUT_CLASSIFICATION	2.465112898520238E-5	DEFECT
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.999773807709561	WITHOUT_CLASSIFICATION	2.261922904390466E-4	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995900924647744	WITHOUT_CLASSIFICATION	4.0990753522564136E-4	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9999036925890409	WITHOUT_CLASSIFICATION	9.630741095910923E-5	DEFECT
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999928530897297	WITHOUT_CLASSIFICATION	7.146910270299399E-6	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999503405320559	WITHOUT_CLASSIFICATION	4.965946794408985E-5	DEFECT
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9992409463570181	WITHOUT_CLASSIFICATION	7.590536429819221E-4	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9994341268360857	WITHOUT_CLASSIFICATION	5.658731639142773E-4	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9994341268360857	WITHOUT_CLASSIFICATION	5.658731639142773E-4	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999986093311126	WITHOUT_CLASSIFICATION	1.3906688873404469E-6	DEFECT
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999971163854078	WITHOUT_CLASSIFICATION	2.8836145920903032E-6	DEFECT
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9999657725646567	WITHOUT_CLASSIFICATION	3.422743534334928E-5	DEFECT
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999988071976461	WITHOUT_CLASSIFICATION	1.1928023538220624E-6	DEFECT
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998378713998424	WITHOUT_CLASSIFICATION	1.621286001575331E-4	DEFECT
Initialize some components.	WITHOUT_CLASSIFICATION	0.999807638808647	WITHOUT_CLASSIFICATION	1.9236119135303134E-4	DEFECT
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9999873727380694	WITHOUT_CLASSIFICATION	1.2627261930624987E-5	DEFECT
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.998655399027917	WITHOUT_CLASSIFICATION	0.0013446009720829175	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999600243866756	WITHOUT_CLASSIFICATION	3.9975613324286706E-5	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999600243866756	WITHOUT_CLASSIFICATION	3.9975613324286706E-5	DEFECT
no matching ctor found	WITHOUT_CLASSIFICATION	0.9999424019421123	WITHOUT_CLASSIFICATION	5.759805788769263E-5	DEFECT
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999154695012099	WITHOUT_CLASSIFICATION	8.45304987901363E-5	DEFECT
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999956515116526	WITHOUT_CLASSIFICATION	4.348488347319727E-6	DEFECT
must be a public method	WITHOUT_CLASSIFICATION	0.9999183086246634	WITHOUT_CLASSIFICATION	8.169137533660145E-5	DEFECT
must be a public class	WITHOUT_CLASSIFICATION	0.9997840131957987	WITHOUT_CLASSIFICATION	2.159868042013881E-4	DEFECT
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999691642481443	WITHOUT_CLASSIFICATION	3.083575185575347E-5	DEFECT
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9999997908098078	WITHOUT_CLASSIFICATION	2.0919019218654965E-7	DEFECT
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999957023730143	WITHOUT_CLASSIFICATION	4.2976269857512895E-6	DEFECT
no matching method found	WITHOUT_CLASSIFICATION	0.9999449863030186	WITHOUT_CLASSIFICATION	5.5013696981328585E-5	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.990215162630103	WITHOUT_CLASSIFICATION	0.009784837369896923	DEFECT
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9999604796581675	WITHOUT_CLASSIFICATION	3.952034183255896E-5	DEFECT
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999549162548457	WITHOUT_CLASSIFICATION	4.508374515430792E-5	DEFECT
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999626750747648	WITHOUT_CLASSIFICATION	3.732492523522627E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999373070612164	WITHOUT_CLASSIFICATION	6.269293878359089E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999373070612164	WITHOUT_CLASSIFICATION	6.269293878359089E-5	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997427530411117	WITHOUT_CLASSIFICATION	2.572469588883334E-4	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9999456235474596	WITHOUT_CLASSIFICATION	5.437645254031572E-5	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.990215162630103	WITHOUT_CLASSIFICATION	0.009784837369896923	DEFECT
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999921569952909	WITHOUT_CLASSIFICATION	7.843004709055968E-6	DEFECT
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9995040127119279	WITHOUT_CLASSIFICATION	4.959872880720282E-4	DEFECT
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9999708644626831	WITHOUT_CLASSIFICATION	2.9135537316948945E-5	DEFECT
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999203608161108	WITHOUT_CLASSIFICATION	7.963918388918188E-5	DEFECT
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9994473699528786	WITHOUT_CLASSIFICATION	5.526300471214781E-4	DEFECT
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999516111002452	WITHOUT_CLASSIFICATION	4.838889975468129E-5	DEFECT
package scope	WITHOUT_CLASSIFICATION	0.999960398658409	WITHOUT_CLASSIFICATION	3.960134159087676E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995900924647744	WITHOUT_CLASSIFICATION	4.0990753522564136E-4	DEFECT
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9999511672004003	WITHOUT_CLASSIFICATION	4.883279959963499E-5	DEFECT
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9997683766788026	WITHOUT_CLASSIFICATION	2.3162332119741442E-4	DEFECT
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999264663119879	WITHOUT_CLASSIFICATION	7.35336880121905E-5	DEFECT
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999846615142142	WITHOUT_CLASSIFICATION	1.5338485785857996E-5	DEFECT
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999761768542741	WITHOUT_CLASSIFICATION	2.3823145725909325E-5	DEFECT
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999906660253837	WITHOUT_CLASSIFICATION	9.333974616239459E-6	DEFECT
statically initialized below	WITHOUT_CLASSIFICATION	0.9999052866891351	WITHOUT_CLASSIFICATION	9.47133108648391E-5	DEFECT
finish class initializer	WITHOUT_CLASSIFICATION	0.9997928008557795	WITHOUT_CLASSIFICATION	2.0719914422048102E-4	DEFECT
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9994918173055938	WITHOUT_CLASSIFICATION	5.0818269440626E-4	DEFECT
should not happen!	WITHOUT_CLASSIFICATION	0.9994372392673198	WITHOUT_CLASSIFICATION	5.627607326802887E-4	DEFECT
start class	WITHOUT_CLASSIFICATION	0.9998928107709585	WITHOUT_CLASSIFICATION	1.0718922904160147E-4	DEFECT
make getter for handler	WITHOUT_CLASSIFICATION	0.9998155018639394	WITHOUT_CLASSIFICATION	1.8449813606048816E-4	DEFECT
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9996398328621064	WITHOUT_CLASSIFICATION	3.6016713789356733E-4	DEFECT
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6197563193860305	WITHOUT_CLASSIFICATION	0.38024368061396957	DEFECT
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9975663154392557	WITHOUT_CLASSIFICATION	0.0024336845607443444	DEFECT
create static private method field	WITHOUT_CLASSIFICATION	0.9999796854478319	WITHOUT_CLASSIFICATION	2.0314552168082832E-5	DEFECT
load static empty array	WITHOUT_CLASSIFICATION	0.9999872805186385	WITHOUT_CLASSIFICATION	1.271948136164943E-5	DEFECT
box arguments	WITHOUT_CLASSIFICATION	0.9999723130457004	WITHOUT_CLASSIFICATION	2.768695429949218E-5	DEFECT
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9995661545704035	WITHOUT_CLASSIFICATION	4.3384542959650543E-4	DEFECT
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9999330193760076	WITHOUT_CLASSIFICATION	6.698062399233535E-5	DEFECT
do a void return	WITHOUT_CLASSIFICATION	0.9999798933969941	WITHOUT_CLASSIFICATION	2.0106603005890074E-5	DEFECT
utility methods	WITHOUT_CLASSIFICATION	0.9999706553671498	WITHOUT_CLASSIFICATION	2.9344632850264562E-5	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999986093311126	WITHOUT_CLASSIFICATION	1.3906688873404469E-6	DEFECT
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999583850558702	WITHOUT_CLASSIFICATION	4.161494412986963E-5	DEFECT
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999224335131255	WITHOUT_CLASSIFICATION	7.75664868745559E-5	DEFECT
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999852500606689	WITHOUT_CLASSIFICATION	1.4749939331076232E-5	DEFECT
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9976712846248167	WITHOUT_CLASSIFICATION	0.002328715375183179	DEFECT
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9978640111466973	WITHOUT_CLASSIFICATION	0.0021359888533027016	DEFECT
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9986561527181046	WITHOUT_CLASSIFICATION	0.0013438472818954991	DEFECT
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999811954689676	WITHOUT_CLASSIFICATION	1.880453103246227E-5	DEFECT
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9990881319297468	WITHOUT_CLASSIFICATION	9.118680702532204E-4	DEFECT
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999944397058514	WITHOUT_CLASSIFICATION	5.56029414858729E-6	DEFECT
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999567682211015	WITHOUT_CLASSIFICATION	4.323177889846989E-5	DEFECT
NUL	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9996885597366297	WITHOUT_CLASSIFICATION	3.114402633703462E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999452144564842	WITHOUT_CLASSIFICATION	5.478554351585761E-5	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999849862365539	WITHOUT_CLASSIFICATION	1.5013763446094171E-5	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997748308033638	WITHOUT_CLASSIFICATION	2.2516919663623832E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999996197089848	WITHOUT_CLASSIFICATION	3.8029101521614555E-7	DEFECT
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9992346595143891	WITHOUT_CLASSIFICATION	7.653404856109638E-4	DEFECT
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999169675172966	WITHOUT_CLASSIFICATION	8.303248270341942E-5	DEFECT
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9825041172531052	WITHOUT_CLASSIFICATION	0.017495882746894842	DEFECT
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9994951910970559	WITHOUT_CLASSIFICATION	5.048089029441856E-4	DEFECT
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9979932902476971	WITHOUT_CLASSIFICATION	0.002006709752302956	DEFECT
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.998714558363067	WITHOUT_CLASSIFICATION	0.0012854416369330536	DEFECT
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9991704017242432	WITHOUT_CLASSIFICATION	8.295982757568062E-4	DEFECT
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999993678709743	WITHOUT_CLASSIFICATION	6.321290257207753E-7	DEFECT
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999870999214089	WITHOUT_CLASSIFICATION	1.2900078591078092E-5	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9997593568105422	WITHOUT_CLASSIFICATION	2.4064318945795743E-4	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9997593568105422	WITHOUT_CLASSIFICATION	2.4064318945795743E-4	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9997593568105422	WITHOUT_CLASSIFICATION	2.4064318945795743E-4	DEFECT
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9998606448443619	WITHOUT_CLASSIFICATION	1.3935515563811174E-4	DEFECT
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9998969260286192	WITHOUT_CLASSIFICATION	1.0307397138077067E-4	DEFECT
Single node in list	WITHOUT_CLASSIFICATION	0.9999626949213402	WITHOUT_CLASSIFICATION	3.73050786597909E-5	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999159858454509	WITHOUT_CLASSIFICATION	8.401415454904118E-5	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999159858454509	WITHOUT_CLASSIFICATION	8.401415454904118E-5	DEFECT
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9998059797195755	WITHOUT_CLASSIFICATION	1.940202804245001E-4	DEFECT
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9997638425668698	WITHOUT_CLASSIFICATION	2.3615743313025936E-4	DEFECT
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999709604947173	WITHOUT_CLASSIFICATION	2.9039505282599003E-5	DEFECT
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999801735727348	WITHOUT_CLASSIFICATION	1.9826427265226972E-5	DEFECT
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999941287222788	WITHOUT_CLASSIFICATION	5.87127772120634E-5	DEFECT
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999363104983311	WITHOUT_CLASSIFICATION	6.36895016689406E-5	DEFECT
Last full line read.	WITHOUT_CLASSIFICATION	0.9999141000197107	WITHOUT_CLASSIFICATION	8.589998028925598E-5	DEFECT
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999115592816428	WITHOUT_CLASSIFICATION	8.84407183572321E-5	DEFECT
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999939522302688	WITHOUT_CLASSIFICATION	6.047769731237274E-6	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999717155622578	WITHOUT_CLASSIFICATION	2.8284437742074924E-5	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999717155622578	WITHOUT_CLASSIFICATION	2.8284437742074924E-5	DEFECT
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999747787417751	WITHOUT_CLASSIFICATION	2.522125822496224E-5	DEFECT
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9989062909058711	WITHOUT_CLASSIFICATION	0.0010937090941288408	DEFECT
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999532799741969	WITHOUT_CLASSIFICATION	4.672002580310195E-5	DEFECT
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999208170829581	WITHOUT_CLASSIFICATION	7.918291704185156E-5	DEFECT
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999853734405186	WITHOUT_CLASSIFICATION	1.4626559481404984E-4	DEFECT
just ignore	WITHOUT_CLASSIFICATION	0.9999951792546315	WITHOUT_CLASSIFICATION	4.8207453683447124E-6	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9998988648416912	WITHOUT_CLASSIFICATION	1.011351583088114E-4	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.999901637085934	WITHOUT_CLASSIFICATION	9.836291406590464E-5	DEFECT
PUSH(1)	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
POP	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999813677622717	WITHOUT_CLASSIFICATION	1.8632237728292712E-4	DEFECT
LEXPOP	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
SET_P	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999039578861814	WITHOUT_CLASSIFICATION	9.604211381869548E-5	DEFECT
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9990981490784492	WITHOUT_CLASSIFICATION	9.018509215507926E-4	DEFECT
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999962279810099	WITHOUT_CLASSIFICATION	3.77201899009638E-5	DEFECT
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999897664553626	WITHOUT_CLASSIFICATION	1.0233544637359262E-5	DEFECT
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998580443919366	WITHOUT_CLASSIFICATION	1.4195560806331027E-4	DEFECT
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999314185296171	WITHOUT_CLASSIFICATION	6.858147038291247E-5	DEFECT
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999690642919653	WITHOUT_CLASSIFICATION	3.093570803474779E-5	DEFECT
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998510047681373	WITHOUT_CLASSIFICATION	1.489952318627931E-4	DEFECT
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999743453670119	WITHOUT_CLASSIFICATION	2.565463298807437E-5	DEFECT
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998685593024672	WITHOUT_CLASSIFICATION	1.3144069753284E-4	DEFECT
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998567356295489	WITHOUT_CLASSIFICATION	1.4326437045110004E-4	DEFECT
1.9 only	WITHOUT_CLASSIFICATION	0.9999854310913847	WITHOUT_CLASSIFICATION	1.4568908615253163E-5	DEFECT
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999402812815928	WITHOUT_CLASSIFICATION	5.9718718407197636E-5	DEFECT
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999493826922766	WITHOUT_CLASSIFICATION	5.06173077233135E-5	DEFECT
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.999977584651095	WITHOUT_CLASSIFICATION	2.241534890494863E-5	DEFECT
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9999306251703043	WITHOUT_CLASSIFICATION	6.937482969564437E-5	DEFECT
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9999369791245923	WITHOUT_CLASSIFICATION	6.302087540765503E-5	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
end of script.	WITHOUT_CLASSIFICATION	0.9999154064479103	WITHOUT_CLASSIFICATION	8.45935520896605E-5	DEFECT
white spaces	WITHOUT_CLASSIFICATION	0.9999513412408688	WITHOUT_CLASSIFICATION	4.865875913122266E-5	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
it's a comment	WITHOUT_CLASSIFICATION	0.9998179668125456	WITHOUT_CLASSIFICATION	1.8203318745438772E-4	DEFECT
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999868747816674	WITHOUT_CLASSIFICATION	1.3125218332602976E-5	DEFECT
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999732120880204	WITHOUT_CLASSIFICATION	2.6787911979540215E-5	DEFECT
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999214396944975	WITHOUT_CLASSIFICATION	7.856030550251679E-5	DEFECT
documentation nodes	WITHOUT_CLASSIFICATION	0.9998528483275416	WITHOUT_CLASSIFICATION	1.4715167245833908E-4	DEFECT
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999525413200144	WITHOUT_CLASSIFICATION	4.745867998559648E-4	DEFECT
Just a plain bang	WITHOUT_CLASSIFICATION	0.9999001871838149	WITHOUT_CLASSIFICATION	9.981281618506594E-5	DEFECT
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999683130297349	WITHOUT_CLASSIFICATION	3.168697026507648E-5	DEFECT
$~: match-data	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
$: argv	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
$$: pid	WITHOUT_CLASSIFICATION	0.9999909677575034	WITHOUT_CLASSIFICATION	9.03224249673285E-6	DEFECT
$?: last status	WITHOUT_CLASSIFICATION	0.9999602042493884	WITHOUT_CLASSIFICATION	3.979575061169664E-5	DEFECT
$!: error string	WITHOUT_CLASSIFICATION	0.9999819140701958	WITHOUT_CLASSIFICATION	1.8085929804320137E-5	DEFECT
$@: error position	WITHOUT_CLASSIFICATION	0.9999766461568754	WITHOUT_CLASSIFICATION	2.3353843124560556E-5	DEFECT
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999499999479341	WITHOUT_CLASSIFICATION	5.000005206586897E-5	DEFECT
$;: field separator	WITHOUT_CLASSIFICATION	0.9999788324623866	WITHOUT_CLASSIFICATION	2.1167537613429658E-5	DEFECT
$,: output field separator	WITHOUT_CLASSIFICATION	0.999986565620174	WITHOUT_CLASSIFICATION	1.3434379826150858E-5	DEFECT
$.: last read line number	WITHOUT_CLASSIFICATION	0.9999066698519455	WITHOUT_CLASSIFICATION	9.333014805452149E-5	DEFECT
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
$:: load path	WITHOUT_CLASSIFICATION	0.9999678388441001	WITHOUT_CLASSIFICATION	3.216115589986001E-5	DEFECT
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999603886328678	WITHOUT_CLASSIFICATION	3.9611367132144277E-5	DEFECT
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999825568032753	WITHOUT_CLASSIFICATION	1.744319672472376E-5	DEFECT
$&: last match	WITHOUT_CLASSIFICATION	0.999976394478356	WITHOUT_CLASSIFICATION	2.360552164402143E-5	DEFECT
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999837673388522	WITHOUT_CLASSIFICATION	1.623266114781902E-5	DEFECT
$': string after last match	WITHOUT_CLASSIFICATION	0.99998964593847	WITHOUT_CLASSIFICATION	1.0354061530085095E-5	DEFECT
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999690634332945	WITHOUT_CLASSIFICATION	3.093656670547253E-5	DEFECT
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.999883871216203	WITHOUT_CLASSIFICATION	1.1612878379702426E-4	DEFECT
enum lex_state	WITHOUT_CLASSIFICATION	0.9999368557671994	WITHOUT_CLASSIFICATION	6.314423280064986E-5	DEFECT
block (primary)	WITHOUT_CLASSIFICATION	0.9999899638305797	WITHOUT_CLASSIFICATION	1.0036169420382778E-5	DEFECT
block (expr)	WITHOUT_CLASSIFICATION	0.9999899638305797	WITHOUT_CLASSIFICATION	1.0036169420382778E-5	DEFECT
hash	WITHOUT_CLASSIFICATION	0.9999913927297287	WITHOUT_CLASSIFICATION	8.607270271325637E-6	DEFECT
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.999823431022229	WITHOUT_CLASSIFICATION	1.7656897777107843E-4	DEFECT
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9934759469721497	WITHOUT_CLASSIFICATION	0.006524053027850335	DEFECT
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9890471292509586	WITHOUT_CLASSIFICATION	0.010952870749041313	DEFECT
hexadecimal	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
binary	WITHOUT_CLASSIFICATION	0.9999919808937552	WITHOUT_CLASSIFICATION	8.019106244787943E-6	DEFECT
decimal	WITHOUT_CLASSIFICATION	0.9999914768359823	WITHOUT_CLASSIFICATION	8.52316401766845E-6	DEFECT
Octal	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999756547151161	WITHOUT_CLASSIFICATION	2.4345284883926086E-5	DEFECT
backslash	WITHOUT_CLASSIFICATION	0.9999909490422276	WITHOUT_CLASSIFICATION	9.05095777233217E-6	DEFECT
newline	WITHOUT_CLASSIFICATION	0.9999851281354808	WITHOUT_CLASSIFICATION	1.4871864519213689E-5	DEFECT
horizontal tab	WITHOUT_CLASSIFICATION	0.999963222136755	WITHOUT_CLASSIFICATION	3.677786324503109E-5	DEFECT
form feed	WITHOUT_CLASSIFICATION	0.9999933678158863	WITHOUT_CLASSIFICATION	6.632184113725395E-6	DEFECT
vertical tab	WITHOUT_CLASSIFICATION	0.9999776252137363	WITHOUT_CLASSIFICATION	2.237478626368745E-5	DEFECT
alarm(bell)	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
escape	WITHOUT_CLASSIFICATION	0.999992734457301	WITHOUT_CLASSIFICATION	7.26554269898261E-6	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.999901637085934	WITHOUT_CLASSIFICATION	9.836291406590464E-5	DEFECT
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999610173982476	WITHOUT_CLASSIFICATION	3.8982601752324416E-5	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999703920057658	WITHOUT_CLASSIFICATION	2.9607994234288218E-5	DEFECT
space	WITHOUT_CLASSIFICATION	0.9999967848855161	WITHOUT_CLASSIFICATION	3.2151144838918584E-6	DEFECT
Where we started this marker match	WITHOUT_CLASSIFICATION	0.99974182790818	WITHOUT_CLASSIFICATION	2.5817209181994784E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999954210212882	WITHOUT_CLASSIFICATION	4.578978711750841E-6	DEFECT
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999888607740289	WITHOUT_CLASSIFICATION	1.1139225971096337E-4	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999703920057658	WITHOUT_CLASSIFICATION	2.9607994234288218E-5	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9816689901719355	WITHOUT_CLASSIFICATION	0.018331009828064463	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9816689901719355	WITHOUT_CLASSIFICATION	0.018331009828064463	DEFECT
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999771069899052	WITHOUT_CLASSIFICATION	2.289301009483546E-5	DEFECT
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999155771570749	WITHOUT_CLASSIFICATION	8.442284292503034E-5	DEFECT
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999277430274307	WITHOUT_CLASSIFICATION	7.225697256931864E-5	DEFECT
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999684309552798	WITHOUT_CLASSIFICATION	3.156904472027588E-5	DEFECT
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999843269322838	WITHOUT_CLASSIFICATION	1.5673067716201584E-5	DEFECT
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.777789173511527	WITHOUT_CLASSIFICATION	0.22221082648847304	DEFECT
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9996271555914568	WITHOUT_CLASSIFICATION	3.728444085432457E-4	DEFECT
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9888117813269273	WITHOUT_CLASSIFICATION	0.011188218673072686	DEFECT
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999721861925824	WITHOUT_CLASSIFICATION	2.7813807417545054E-5	DEFECT
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9986144448138834	WITHOUT_CLASSIFICATION	0.0013855551861165403	DEFECT
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9995160538691428	WITHOUT_CLASSIFICATION	4.8394613085732245E-4	DEFECT
DigestLibrary	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998178836757936	WITHOUT_CLASSIFICATION	1.821163242063306E-4	DEFECT
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999387373149359	WITHOUT_CLASSIFICATION	6.126268506410683E-5	DEFECT
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999074850646693	WITHOUT_CLASSIFICATION	9.25149353307814E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
line 329	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999258480532116	WITHOUT_CLASSIFICATION	7.415194678845062E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9999214154728348	WITHOUT_CLASSIFICATION	7.858452716524153E-5	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9988630323968234	WITHOUT_CLASSIFICATION	0.0011369676031766202	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999405833783196	WITHOUT_CLASSIFICATION	5.941662168043161E-5	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9999555490242165	WITHOUT_CLASSIFICATION	4.445097578347693E-5	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999386712066592	WITHOUT_CLASSIFICATION	6.132879334077889E-5	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9996433721902304	WITHOUT_CLASSIFICATION	3.5662780976963946E-4	DEFECT
line 271	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 274	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 303	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 311	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 314	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 317	WITHOUT_CLASSIFICATION	0.9999803133207139	WITHOUT_CLASSIFICATION	1.968667928613918E-5	DEFECT
line 332	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 338	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 341	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 344	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 358	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 367	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 378	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 407	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 411	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 414	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 434	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 443	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 446	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 452	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 457	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 464	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 467	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 470	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 479	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 484	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 492	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 498	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 501	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 504	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 507	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 510	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 519	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 525	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 556	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 559	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 563	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 569	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 575	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 578	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 587	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 596	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 604	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 607	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 613	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 616	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 634	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 638	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 643	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 646	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 655	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 660	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 667	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 670	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 701	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 717	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 720	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 726	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 729	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 735	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 738	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 751	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 754	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 757	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 760	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 763	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 769	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 775	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 797	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 803	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 806	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 809	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 815	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 818	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 821	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 824	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 830	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 833	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 836	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 852	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 858	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 861	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 868	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 871	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 876	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 879	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 883	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 903	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 907	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 915	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 920	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 923	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 926	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 936	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 940	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 948	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 956	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 964	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 967	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 978	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 984	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 986	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 996	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1001	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1008	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1014	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1029	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1032	WITHOUT_CLASSIFICATION	0.9999801872230318	WITHOUT_CLASSIFICATION	1.9812776968135107E-5	DEFECT
line 1034	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1045	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1048	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1051	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1058	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1070	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1073	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1076	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1079	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1082	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1089	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1100	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1103	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1107	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999802625846101	WITHOUT_CLASSIFICATION	1.9737415389937326E-5	DEFECT
line 1113	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1115	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1119	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1135	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1137	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1151	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1154	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1164	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1175	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1178	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1187	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1189	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1193	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1214	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1234	WITHOUT_CLASSIFICATION	0.999980262041795	WITHOUT_CLASSIFICATION	1.973795820499757E-5	DEFECT
line 1239	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1243	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1263	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1269	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1280	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1283	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1290	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1296	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1299	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1302	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1309	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1313	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1315	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1328	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1335	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1352	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1358	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1374	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1381	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1415	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1431	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1434	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1440	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1443	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1453	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1465	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1477	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1480	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1485	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1488	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1510	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1516	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1533	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1550	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1553	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1556	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1565	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1568	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1571	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1574	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1577	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1587	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1600	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1609	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1623	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1626	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1638	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1641	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1644	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1649	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1655	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1658	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1661	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1672	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1677	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1687	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1694	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1733	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1745	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1757	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1769	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1775	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1784	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1808	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1814	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999593204002888	WITHOUT_CLASSIFICATION	4.0679599711289914E-5	DEFECT
XXX 0;	WITHOUT_CLASSIFICATION	0.9999745376263858	WITHOUT_CLASSIFICATION	2.5462373614246767E-5	DEFECT
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999932255942829	WITHOUT_CLASSIFICATION	6.774405717146522E-6	DEFECT
}	WITHOUT_CLASSIFICATION	0.999992178569856	WITHOUT_CLASSIFICATION	7.82143014399071E-6	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9963144586906835	WITHOUT_CLASSIFICATION	0.0036855413093164987	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999660593807267	WITHOUT_CLASSIFICATION	3.3940619273334E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9998796847566116	WITHOUT_CLASSIFICATION	1.2031524338842239E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9998796847566116	WITHOUT_CLASSIFICATION	1.2031524338842239E-4	DEFECT
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9999296727190057	WITHOUT_CLASSIFICATION	7.032728099436114E-5	DEFECT
mirko: check	WITHOUT_CLASSIFICATION	0.999964848588902	WITHOUT_CLASSIFICATION	3.5151411097972E-5	DEFECT
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9996072277516138	WITHOUT_CLASSIFICATION	3.927722483862431E-4	DEFECT
line 529	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
XXX	WITHOUT_CLASSIFICATION	0.9999735829618722	WITHOUT_CLASSIFICATION	2.6417038127779655E-5	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9999315292119944	WITHOUT_CLASSIFICATION	6.847078800555238E-5	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.999963184674686	WITHOUT_CLASSIFICATION	3.681532531406237E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999098029635772	WITHOUT_CLASSIFICATION	9.019703642279996E-5	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997702987809045	WITHOUT_CLASSIFICATION	2.2970121909558514E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999727349085555	WITHOUT_CLASSIFICATION	2.7265091444453796E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999258480532116	WITHOUT_CLASSIFICATION	7.415194678845062E-5	DEFECT
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998659289405926	WITHOUT_CLASSIFICATION	1.3407105940744046E-4	DEFECT
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999906039819109	WITHOUT_CLASSIFICATION	9.396018089188106E-6	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999645600192081	WITHOUT_CLASSIFICATION	3.5439980791855125E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999645600192081	WITHOUT_CLASSIFICATION	3.5439980791855125E-5	DEFECT
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998852036745044	WITHOUT_CLASSIFICATION	1.1479632549562404E-4	DEFECT
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9978410784132183	WITHOUT_CLASSIFICATION	0.002158921586781684	DEFECT
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999586908726765	WITHOUT_CLASSIFICATION	4.130912732349906E-4	DEFECT
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9996340849320127	WITHOUT_CLASSIFICATION	3.6591506798729106E-4	DEFECT
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9995190763975673	WITHOUT_CLASSIFICATION	4.8092360243261396E-4	DEFECT
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999663286096756	WITHOUT_CLASSIFICATION	3.36713903244282E-5	DEFECT
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9905402358842397	WITHOUT_CLASSIFICATION	0.009459764115760416	DEFECT
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9996182638714923	WITHOUT_CLASSIFICATION	3.8173612850768516E-4	DEFECT
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9975939823578744	WITHOUT_CLASSIFICATION	0.0024060176421256034	DEFECT
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999441445084988	WITHOUT_CLASSIFICATION	5.585549150113564E-5	DEFECT
Parser states:	WITHOUT_CLASSIFICATION	0.9999382667154061	WITHOUT_CLASSIFICATION	6.17332845938804E-5	DEFECT
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9993859041123123	WITHOUT_CLASSIFICATION	6.140958876876604E-4	DEFECT
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9988761686228771	WITHOUT_CLASSIFICATION	0.0011238313771228838	DEFECT
LOCALVAR	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
CONSTANT	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999863888562808	WITHOUT_CLASSIFICATION	1.361114371928149E-5	DEFECT
MRI: block_append	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9993530229506173	WITHOUT_CLASSIFICATION	6.469770493826365E-4	DEFECT
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999909827192385	WITHOUT_CLASSIFICATION	9.017280761501712E-5	DEFECT
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999534172382034	WITHOUT_CLASSIFICATION	4.658276179658387E-5	DEFECT
Node	WITHOUT_CLASSIFICATION	0.9999908741543612	WITHOUT_CLASSIFICATION	9.125845638858932E-6	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.976019504591313	WITHOUT_CLASSIFICATION	0.023980495408687012	DEFECT
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.999916266712098	WITHOUT_CLASSIFICATION	8.373328790204486E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.976019504591313	WITHOUT_CLASSIFICATION	0.023980495408687012	DEFECT
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9999161069593216	WITHOUT_CLASSIFICATION	8.389304067832044E-5	DEFECT
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9999161069593216	WITHOUT_CLASSIFICATION	8.389304067832044E-5	DEFECT
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9111838721802843	WITHOUT_CLASSIFICATION	0.08881612781971562	DEFECT
MRI: range_op	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999894222698407	WITHOUT_CLASSIFICATION	1.0577730159296112E-4	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9992409269206122	WITHOUT_CLASSIFICATION	7.590730793878617E-4	DEFECT
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999938682940464	WITHOUT_CLASSIFICATION	6.131705953579763E-6	DEFECT
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999308116510823	WITHOUT_CLASSIFICATION	6.918834891773339E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9999214154728348	WITHOUT_CLASSIFICATION	7.858452716524153E-5	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999405833783196	WITHOUT_CLASSIFICATION	5.941662168043161E-5	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9999555490242165	WITHOUT_CLASSIFICATION	4.445097578347693E-5	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999386712066592	WITHOUT_CLASSIFICATION	6.132879334077889E-5	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9996433721902304	WITHOUT_CLASSIFICATION	3.5662780976963946E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 280	WITHOUT_CLASSIFICATION	0.9999801960747137	WITHOUT_CLASSIFICATION	1.9803925286389145E-5	DEFECT
line 283	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 296	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 324	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 327	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 331	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 333	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 336	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 342	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 345	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 348	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 354	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 368	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 377	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 388	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 392	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 397	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 429	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 432	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 436	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 445	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 448	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 454	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 459	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 466	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 469	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 478	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 481	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 488	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 494	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 497	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 503	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 506	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 509	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 512	WITHOUT_CLASSIFICATION	0.9999802555474461	WITHOUT_CLASSIFICATION	1.9744452553950605E-5	DEFECT
line 521	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 526	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 534	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 549	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 552	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 558	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 561	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 571	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 574	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 579	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 586	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 589	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 592	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 595	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 598	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 623	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 627	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 630	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 633	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 639	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 648	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 657	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 661	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 666	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 678	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 682	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 688	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 699	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 706	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 708	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 727	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 737	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 753	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 779	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 801	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 808	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 811	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 817	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 820	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 826	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 829	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 832	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 851	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 857	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 860	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 863	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 866	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 869	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 875	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 884	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 887	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 890	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 902	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 909	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 912	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 916	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 922	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 928	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 941	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 947	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 951	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 955	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 965	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 969	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 977	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 983	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1013	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1023	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1035	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1041	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1043	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1054	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1057	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1060	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1069	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1075	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999802625846101	WITHOUT_CLASSIFICATION	1.9737415389937326E-5	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1078	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1084	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1087	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1090	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1093	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1114	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1116	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1118	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1124	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1126	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1138	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1144	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1149	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1155	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1162	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1173	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1179	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1182	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1190	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1196	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1213	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1217	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1231	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1236	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1244	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1254	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1258	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1264	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1270	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1273	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1276	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1279	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1282	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1289	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1292	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1295	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1298	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1305	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1308	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1311	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1317	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1323	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1326	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1329	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1337	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1342	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1345	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1354	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1359	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1366	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1369	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1373	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1377	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1383	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1399	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1401	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1406	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1417	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1424	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1427	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1430	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1433	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1436	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1442	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1445	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1458	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1464	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1489	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1493	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1507	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1519	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1532	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1538	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1542	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1557	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1573	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1591	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1607	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1610	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1622	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1625	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1636	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1639	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1647	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1651	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1657	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1660	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1663	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1678	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1702	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1711	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1719	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1722	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1731	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1734	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1738	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1746	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1756	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1758	WITHOUT_CLASSIFICATION	0.9999521144404925	WITHOUT_CLASSIFICATION	4.788555950747304E-5	DEFECT
line 1761	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1767	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1776	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1782	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1785	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1788	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1791	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1797	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1800	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1803	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1806	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1809	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1815	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1825	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1828	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1831	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1847	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9998796847566116	WITHOUT_CLASSIFICATION	1.2031524338842239E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9998796847566116	WITHOUT_CLASSIFICATION	1.2031524338842239E-4	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9999315292119944	WITHOUT_CLASSIFICATION	6.847078800555238E-5	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.999963184674686	WITHOUT_CLASSIFICATION	3.681532531406237E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999098029635772	WITHOUT_CLASSIFICATION	9.019703642279996E-5	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
line 1854	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1869	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1872	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1877	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1886	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1898	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1902	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1905	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1911	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1918	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1935	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1938	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1942	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1948	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1960	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1963	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1968	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1972	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1982	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1995	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 2000	WITHOUT_CLASSIFICATION	0.9999610881511044	WITHOUT_CLASSIFICATION	3.891184889559058E-5	DEFECT
line 2006	WITHOUT_CLASSIFICATION	0.9999801816984036	WITHOUT_CLASSIFICATION	1.9818301596362216E-5	DEFECT
line 2010	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999850055626013	WITHOUT_CLASSIFICATION	1.4994437398624955E-5	DEFECT
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999011398598129	WITHOUT_CLASSIFICATION	9.886014018711924E-5	DEFECT
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9997673360158212	WITHOUT_CLASSIFICATION	2.326639841787303E-4	DEFECT
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999685419783465	WITHOUT_CLASSIFICATION	3.145802165351441E-5	DEFECT
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999501099414955	WITHOUT_CLASSIFICATION	4.9890058504554566E-5	DEFECT
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9999102429968174	WITHOUT_CLASSIFICATION	8.975700318255901E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999727349085555	WITHOUT_CLASSIFICATION	2.7265091444453796E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999258480532116	WITHOUT_CLASSIFICATION	7.415194678845062E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999645600192081	WITHOUT_CLASSIFICATION	3.5439980791855125E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999645600192081	WITHOUT_CLASSIFICATION	3.5439980791855125E-5	DEFECT
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9997428473551766	WITHOUT_CLASSIFICATION	2.571526448233736E-4	DEFECT
was $$ = null;	WITHOUT_CLASSIFICATION	0.999973515697569	WITHOUT_CLASSIFICATION	2.6484302430934035E-5	DEFECT
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998053012717938	WITHOUT_CLASSIFICATION	1.946987282062041E-4	DEFECT
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998659289405926	WITHOUT_CLASSIFICATION	1.3407105940744046E-4	DEFECT
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9982376969627265	WITHOUT_CLASSIFICATION	0.0017623030372735475	DEFECT
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9996912803947291	WITHOUT_CLASSIFICATION	3.0871960527090474E-4	DEFECT
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9994752356196456	WITHOUT_CLASSIFICATION	5.247643803544097E-4	DEFECT
Live reference to module	WITHOUT_CLASSIFICATION	0.9999644917735525	WITHOUT_CLASSIFICATION	3.550822644756561E-5	DEFECT
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999682821191358	WITHOUT_CLASSIFICATION	3.171788086414368E-5	DEFECT
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999916383850337	WITHOUT_CLASSIFICATION	8.361614966271825E-6	DEFECT
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9987295803322952	WITHOUT_CLASSIFICATION	0.0012704196677048908	DEFECT
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9997443702061157	WITHOUT_CLASSIFICATION	2.556297938842404E-4	DEFECT
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999509162252573	WITHOUT_CLASSIFICATION	4.9083774742759635E-5	DEFECT
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999676043998161	WITHOUT_CLASSIFICATION	3.239560018384115E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999672280104828	WITHOUT_CLASSIFICATION	3.277198951728229E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999672280104828	WITHOUT_CLASSIFICATION	3.277198951728229E-5	DEFECT
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9999874390675353	WITHOUT_CLASSIFICATION	1.2560932464765716E-5	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9997300399250076	WITHOUT_CLASSIFICATION	2.699600749924126E-4	DEFECT
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9999735247752143	WITHOUT_CLASSIFICATION	2.647522478578507E-5	DEFECT
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998329519631172	WITHOUT_CLASSIFICATION	1.6704803688282697E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999940814663526	WITHOUT_CLASSIFICATION	5.918533647427348E-6	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999679518401915	WITHOUT_CLASSIFICATION	3.204815980853259E-5	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999940814663526	WITHOUT_CLASSIFICATION	5.918533647427348E-6	DEFECT
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.999989825815398	WITHOUT_CLASSIFICATION	1.0174184601905591E-5	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.994269309088571	WITHOUT_CLASSIFICATION	0.005730690911428991	DEFECT
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9961915274894048	WITHOUT_CLASSIFICATION	0.0038084725105953453	DEFECT
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9991732450132672	WITHOUT_CLASSIFICATION	8.26754986732819E-4	DEFECT
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9998499375516275	WITHOUT_CLASSIFICATION	1.5006244837243647E-4	DEFECT
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9998499375516275	WITHOUT_CLASSIFICATION	1.5006244837243647E-4	DEFECT
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999917682194162	WITHOUT_CLASSIFICATION	8.231780583928066E-6	DEFECT
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999623655077223	WITHOUT_CLASSIFICATION	3.763449227761591E-5	DEFECT
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999963809579081	WITHOUT_CLASSIFICATION	3.619042091892611E-5	DEFECT
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.7715537277712925	WITHOUT_CLASSIFICATION	0.22844627222870748	DEFECT
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999923777437653	WITHOUT_CLASSIFICATION	7.62225623476955E-6	DEFECT
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996789038518021	WITHOUT_CLASSIFICATION	3.210961481978974E-4	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999863132239105	WITHOUT_CLASSIFICATION	1.3686776089394826E-5	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999863132239105	WITHOUT_CLASSIFICATION	1.3686776089394826E-5	DEFECT
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999448532767552	WITHOUT_CLASSIFICATION	5.5146723244916346E-5	DEFECT
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999842806557016	WITHOUT_CLASSIFICATION	1.5719344298424592E-5	DEFECT
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999672987066832	WITHOUT_CLASSIFICATION	3.2701293316718506E-5	DEFECT
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9970879818677729	WITHOUT_CLASSIFICATION	0.0029120181322270858	DEFECT
required and optional only	WITHOUT_CLASSIFICATION	0.9995566832916994	WITHOUT_CLASSIFICATION	4.4331670830055647E-4	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999940814663526	WITHOUT_CLASSIFICATION	5.918533647427348E-6	DEFECT
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9998865250253589	WITHOUT_CLASSIFICATION	1.1347497464100284E-4	DEFECT
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999962709420227	WITHOUT_CLASSIFICATION	3.729057977305722E-6	DEFECT
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9992427087246109	WITHOUT_CLASSIFICATION	7.572912753892405E-4	DEFECT
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9998865389605551	WITHOUT_CLASSIFICATION	1.1346103944496278E-4	DEFECT
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999976811753112	WITHOUT_CLASSIFICATION	2.318824688887066E-6	DEFECT
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999994342980167	WITHOUT_CLASSIFICATION	5.657019833215221E-7	DEFECT
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999871434742346	WITHOUT_CLASSIFICATION	1.2856525765537791E-5	DEFECT
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999060584697894	WITHOUT_CLASSIFICATION	9.394153021059898E-5	DEFECT
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9998990994576947	WITHOUT_CLASSIFICATION	1.0090054230531926E-4	DEFECT
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999394502365391	WITHOUT_CLASSIFICATION	6.054976346088576E-5	DEFECT
No argument blocks	WITHOUT_CLASSIFICATION	0.9999735376291011	WITHOUT_CLASSIFICATION	2.646237089887645E-5	DEFECT
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999913280354574	WITHOUT_CLASSIFICATION	8.671964542492884E-6	DEFECT
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9994509594767622	WITHOUT_CLASSIFICATION	5.490405232378634E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999008250871108	WITHOUT_CLASSIFICATION	9.91749128892456E-5	DEFECT
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9981840198206697	WITHOUT_CLASSIFICATION	0.0018159801793303162	DEFECT
Highest reserved id	WITHOUT_CLASSIFICATION	0.9997720710483599	WITHOUT_CLASSIFICATION	2.2792895164006877E-4	DEFECT
binary typed calls	WITHOUT_CLASSIFICATION	0.9995463544420852	WITHOUT_CLASSIFICATION	4.5364555791483984E-4	DEFECT
id must always be even	WITHOUT_CLASSIFICATION	0.9978998478977069	WITHOUT_CLASSIFICATION	0.002100152102293078	DEFECT
with block pass	WITHOUT_CLASSIFICATION	0.9999713359961232	WITHOUT_CLASSIFICATION	2.8664003876802185E-5	DEFECT
no block	WITHOUT_CLASSIFICATION	0.9999995936935888	WITHOUT_CLASSIFICATION	4.063064112097048E-7	DEFECT
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999766652870705	WITHOUT_CLASSIFICATION	2.3334712929502574E-5	DEFECT
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9982676123496343	WITHOUT_CLASSIFICATION	0.0017323876503656202	DEFECT
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999686649257825	WITHOUT_CLASSIFICATION	3.133507421754428E-5	DEFECT
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.99992585054405	WITHOUT_CLASSIFICATION	7.414945594995402E-5	DEFECT
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999933117030165	WITHOUT_CLASSIFICATION	6.688296983498458E-5	DEFECT
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999904056387279	WITHOUT_CLASSIFICATION	9.594361272224276E-6	DEFECT
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999272548599294	WITHOUT_CLASSIFICATION	7.274514007060316E-5	DEFECT
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998229308703563	WITHOUT_CLASSIFICATION	1.7706912964376252E-4	DEFECT
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9994754794812575	WITHOUT_CLASSIFICATION	5.245205187425693E-4	DEFECT
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999170840670667	WITHOUT_CLASSIFICATION	8.291593293326593E-5	DEFECT
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999400309788964	WITHOUT_CLASSIFICATION	5.996902110358056E-5	DEFECT
Lastline	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999896259111479	WITHOUT_CLASSIFICATION	1.037408885203648E-5	DEFECT
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999384890867299	WITHOUT_CLASSIFICATION	6.151091327012147E-5	DEFECT
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999304424119587	WITHOUT_CLASSIFICATION	6.955758804128126E-5	DEFECT
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998718709902956	WITHOUT_CLASSIFICATION	1.2812900970430246E-4	DEFECT
Some helper functions:	WITHOUT_CLASSIFICATION	0.9996792817799028	WITHOUT_CLASSIFICATION	3.207182200971146E-4	DEFECT
silently ignore	WITHOUT_CLASSIFICATION	0.9999734530730837	WITHOUT_CLASSIFICATION	2.6546926916375597E-5	DEFECT
used by compiler	WITHOUT_CLASSIFICATION	0.9999926079694266	WITHOUT_CLASSIFICATION	7.392030573369805E-6	DEFECT
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999895847661293	WITHOUT_CLASSIFICATION	1.041523387061203E-5	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9985195748150838	WITHOUT_CLASSIFICATION	0.0014804251849160985	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.999960994265195	WITHOUT_CLASSIFICATION	3.900573480493319E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9996885597366297	WITHOUT_CLASSIFICATION	3.114402633703462E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999452144564842	WITHOUT_CLASSIFICATION	5.478554351585761E-5	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.994269309088571	WITHOUT_CLASSIFICATION	0.005730690911428991	DEFECT
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9999010740018048	WITHOUT_CLASSIFICATION	9.892599819505848E-5	DEFECT
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999539090830236	WITHOUT_CLASSIFICATION	4.609091697634376E-5	DEFECT
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9974160330178989	WITHOUT_CLASSIFICATION	0.0025839669821009622	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999729937620968	WITHOUT_CLASSIFICATION	2.7006237903194054E-5	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999729937620968	WITHOUT_CLASSIFICATION	2.7006237903194054E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999823975013102	WITHOUT_CLASSIFICATION	1.7602498689711764E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999823975013102	WITHOUT_CLASSIFICATION	1.7602498689711764E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999823975013102	WITHOUT_CLASSIFICATION	1.7602498689711764E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999740187931431	WITHOUT_CLASSIFICATION	2.598120685686944E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999740187931431	WITHOUT_CLASSIFICATION	2.598120685686944E-5	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9999345423713999	WITHOUT_CLASSIFICATION	6.545762860006892E-5	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9999345423713999	WITHOUT_CLASSIFICATION	6.545762860006892E-5	DEFECT
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9996232186216446	WITHOUT_CLASSIFICATION	3.7678137835529986E-4	DEFECT
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9990270500788966	WITHOUT_CLASSIFICATION	9.729499211034174E-4	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.9999969453178481	WITHOUT_CLASSIFICATION	3.054682151918666E-6	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.9999969453178481	WITHOUT_CLASSIFICATION	3.054682151918666E-6	DEFECT
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9993727019254637	WITHOUT_CLASSIFICATION	6.272980745363539E-4	DEFECT
retrieve method module name	WITHOUT_CLASSIFICATION	0.9999675540173788	WITHOUT_CLASSIFICATION	3.244598262118175E-5	DEFECT
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9993014297959977	WITHOUT_CLASSIFICATION	6.985702040023131E-4	DEFECT
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999947510097044	WITHOUT_CLASSIFICATION	5.248990295613487E-5	DEFECT
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9989563895279965	WITHOUT_CLASSIFICATION	0.0010436104720034406	DEFECT
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.999980171295748	WITHOUT_CLASSIFICATION	1.982870425197573E-5	DEFECT
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999951133256826	WITHOUT_CLASSIFICATION	4.886674317392582E-6	DEFECT
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999315065176416	WITHOUT_CLASSIFICATION	6.849348235840757E-5	DEFECT
caller	WITHOUT_CLASSIFICATION	0.9999949508082662	WITHOUT_CLASSIFICATION	5.049191733762193E-6	DEFECT
calltype block	WITHOUT_CLASSIFICATION	0.9999899638305797	WITHOUT_CLASSIFICATION	1.0036169420382778E-5	DEFECT
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9995460272190176	WITHOUT_CLASSIFICATION	4.5397278098224244E-4	DEFECT
load arity for check	WITHOUT_CLASSIFICATION	0.999975080131808	WITHOUT_CLASSIFICATION	2.4919868191985646E-5	DEFECT
throw	WITHOUT_CLASSIFICATION	0.9999765942009181	WITHOUT_CLASSIFICATION	2.3405799081856443E-5	DEFECT
load arity for error	WITHOUT_CLASSIFICATION	0.9999760172355919	WITHOUT_CLASSIFICATION	2.398276440817521E-5	DEFECT
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999534610909143	WITHOUT_CLASSIFICATION	4.653890908566273E-5	DEFECT
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999809389237614	WITHOUT_CLASSIFICATION	1.9061076238586444E-5	DEFECT
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
InvocationCallback	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999746845308068	WITHOUT_CLASSIFICATION	2.5315469193208185E-5	DEFECT
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998857759903753	WITHOUT_CLASSIFICATION	1.1422400962468595E-4	DEFECT
load the encoding	WITHOUT_CLASSIFICATION	0.9999881618818739	WITHOUT_CLASSIFICATION	1.1838118126202646E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999264510918554	WITHOUT_CLASSIFICATION	7.354890814458555E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999264510918554	WITHOUT_CLASSIFICATION	7.354890814458555E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999264510918554	WITHOUT_CLASSIFICATION	7.354890814458555E-5	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998942856966583	WITHOUT_CLASSIFICATION	1.0571430334180564E-4	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998942856966583	WITHOUT_CLASSIFICATION	1.0571430334180564E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998942856966583	WITHOUT_CLASSIFICATION	1.0571430334180564E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998942856966583	WITHOUT_CLASSIFICATION	1.0571430334180564E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998942856966583	WITHOUT_CLASSIFICATION	1.0571430334180564E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999529167407508	WITHOUT_CLASSIFICATION	4.708325924916623E-5	DEFECT
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
ThreadContext	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997850561170037	WITHOUT_CLASSIFICATION	2.1494388299617687E-4	DEFECT
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999989230363608	WITHOUT_CLASSIFICATION	1.076963639193856E-6	DEFECT
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999779684126722	WITHOUT_CLASSIFICATION	2.203158732794777E-5	DEFECT
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9994275923156402	WITHOUT_CLASSIFICATION	5.724076843598434E-4	DEFECT
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999527170316483	WITHOUT_CLASSIFICATION	4.728296835152509E-5	DEFECT
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.998741125388461	WITHOUT_CLASSIFICATION	0.001258874611538922	DEFECT
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999889843097658	WITHOUT_CLASSIFICATION	1.1015690234189246E-5	DEFECT
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999812360156483	WITHOUT_CLASSIFICATION	1.8763984351744172E-5	DEFECT
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.999976168779999	WITHOUT_CLASSIFICATION	2.383122000099288E-5	DEFECT
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999625435037466	WITHOUT_CLASSIFICATION	3.745649625348449E-5	DEFECT
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999795552625939	WITHOUT_CLASSIFICATION	2.044473740612634E-5	DEFECT
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9099284003436885	WITHOUT_CLASSIFICATION	0.09007159965631147	DEFECT
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999288985827437	WITHOUT_CLASSIFICATION	7.110141725629593E-5	DEFECT
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999829936983373	WITHOUT_CLASSIFICATION	1.700630166270056E-4	DEFECT
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999599670044611	WITHOUT_CLASSIFICATION	4.0032995538923E-5	DEFECT
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999193894117074	WITHOUT_CLASSIFICATION	8.061058829255462E-5	DEFECT
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999193884141506	WITHOUT_CLASSIFICATION	8.061158584931755E-5	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999679518401915	WITHOUT_CLASSIFICATION	3.204815980853259E-5	DEFECT
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9979914580291892	WITHOUT_CLASSIFICATION	0.002008541970810785	DEFECT
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9961998567961746	WITHOUT_CLASSIFICATION	0.003800143203825305	DEFECT
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999720536512383	WITHOUT_CLASSIFICATION	2.794634876168653E-5	DEFECT
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999742286179708	WITHOUT_CLASSIFICATION	2.5771382029128615E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.999974736964533	WITHOUT_CLASSIFICATION	2.526303546711432E-5	DEFECT
extension extensions	WITHOUT_CLASSIFICATION	0.9999103774840408	WITHOUT_CLASSIFICATION	8.962251595932251E-5	DEFECT
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999667509126853	WITHOUT_CLASSIFICATION	3.324908731465212E-5	DEFECT
try all extensions	WITHOUT_CLASSIFICATION	0.9999766093033907	WITHOUT_CLASSIFICATION	2.339069660926308E-5	DEFECT
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999955448178228	WITHOUT_CLASSIFICATION	4.455182177208889E-5	DEFECT
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.999977404880006	WITHOUT_CLASSIFICATION	2.2595119993993508E-5	DEFECT
try only literal search	WITHOUT_CLASSIFICATION	0.9999642261905152	WITHOUT_CLASSIFICATION	3.577380948487782E-5	DEFECT
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999423720457725	WITHOUT_CLASSIFICATION	5.7627954227530314E-5	DEFECT
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999532594680753	WITHOUT_CLASSIFICATION	4.674053192452637E-5	DEFECT
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999905627536665	WITHOUT_CLASSIFICATION	9.437246333501153E-6	DEFECT
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9998478138122752	WITHOUT_CLASSIFICATION	1.5218618772478774E-4	DEFECT
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9998844951277412	WITHOUT_CLASSIFICATION	1.1550487225877932E-4	DEFECT
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999581343138575	WITHOUT_CLASSIFICATION	4.186568614245727E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9996444857823356	WITHOUT_CLASSIFICATION	3.5551421766438285E-4	DEFECT
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999538031740944	WITHOUT_CLASSIFICATION	4.6196825905696016E-5	DEFECT
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999995040701326	WITHOUT_CLASSIFICATION	4.95929867331242E-7	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998074734517767	WITHOUT_CLASSIFICATION	1.9252654822344065E-4	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998074734517767	WITHOUT_CLASSIFICATION	1.9252654822344065E-4	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999660603254115	WITHOUT_CLASSIFICATION	3.393967458852015E-5	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999660603254115	WITHOUT_CLASSIFICATION	3.393967458852015E-5	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997203746982967	WITHOUT_CLASSIFICATION	2.796253017033946E-4	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997203746982967	WITHOUT_CLASSIFICATION	2.796253017033946E-4	DEFECT
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999945428348037	WITHOUT_CLASSIFICATION	5.457165196288954E-5	DEFECT
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999802123811247	WITHOUT_CLASSIFICATION	1.978761887533948E-5	DEFECT
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999941062069753	WITHOUT_CLASSIFICATION	5.8937930248170364E-6	DEFECT
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999335803769291	WITHOUT_CLASSIFICATION	6.641962307082546E-5	DEFECT
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999704382172087	WITHOUT_CLASSIFICATION	2.956178279134963E-5	DEFECT
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9995201033196014	WITHOUT_CLASSIFICATION	4.798966803986562E-4	DEFECT
signed short, native	WITHOUT_CLASSIFICATION	0.9999276893880648	WITHOUT_CLASSIFICATION	7.231061193530792E-5	DEFECT
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999850506490651	WITHOUT_CLASSIFICATION	1.4949350935063942E-5	DEFECT
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9998893572869694	WITHOUT_CLASSIFICATION	1.106427130306573E-4	DEFECT
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999158716669244	WITHOUT_CLASSIFICATION	8.41283330755661E-5	DEFECT
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9997213839118733	WITHOUT_CLASSIFICATION	2.786160881267056E-4	DEFECT
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9999729588387466	WITHOUT_CLASSIFICATION	2.7041161253384076E-5	DEFECT
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9997601461786482	WITHOUT_CLASSIFICATION	2.3985382135189562E-4	DEFECT
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999881904944206	WITHOUT_CLASSIFICATION	1.1809505579369777E-5	DEFECT
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999222603286377	WITHOUT_CLASSIFICATION	7.773967136230624E-4	DEFECT
write('S');	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9999585951439436	WITHOUT_CLASSIFICATION	4.140485605644543E-5	DEFECT
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9997571814755649	WITHOUT_CLASSIFICATION	2.4281852443501316E-4	DEFECT
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999841385392366	WITHOUT_CLASSIFICATION	1.586146076339895E-4	DEFECT
w_symbol	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
w_unique	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9987446006075321	WITHOUT_CLASSIFICATION	0.0012553993924678524	DEFECT
Major Minor	WITHOUT_CLASSIFICATION	0.9999369667522335	WITHOUT_CLASSIFICATION	6.30332477665233E-5	DEFECT
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999593409217951	WITHOUT_CLASSIFICATION	4.0659078204891895E-5	DEFECT
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999670981755491	WITHOUT_CLASSIFICATION	3.2901824450951074E-5	DEFECT
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999937763452483	WITHOUT_CLASSIFICATION	6.223654751675541E-6	DEFECT
sic	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999702026824829	WITHOUT_CLASSIFICATION	2.979731751703736E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999702026824829	WITHOUT_CLASSIFICATION	2.979731751703736E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999702026824829	WITHOUT_CLASSIFICATION	2.979731751703736E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999711746732258	WITHOUT_CLASSIFICATION	2.8825326774131953E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999711746732258	WITHOUT_CLASSIFICATION	2.8825326774131953E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999008250871108	WITHOUT_CLASSIFICATION	9.91749128892456E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999008250871108	WITHOUT_CLASSIFICATION	9.91749128892456E-5	DEFECT
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999942118405589	WITHOUT_CLASSIFICATION	5.78815944103064E-6	DEFECT
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9978562766370417	WITHOUT_CLASSIFICATION	0.0021437233629583575	DEFECT
unsigned short, native	WITHOUT_CLASSIFICATION	0.9998945158847637	WITHOUT_CLASSIFICATION	1.0548411523630319E-4	DEFECT
int, native long, native	WITHOUT_CLASSIFICATION	0.9998878711373299	WITHOUT_CLASSIFICATION	1.121288626700264E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999702026824829	WITHOUT_CLASSIFICATION	2.979731751703736E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999702026824829	WITHOUT_CLASSIFICATION	2.979731751703736E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999702026824829	WITHOUT_CLASSIFICATION	2.979731751703736E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999711746732258	WITHOUT_CLASSIFICATION	2.8825326774131953E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999711746732258	WITHOUT_CLASSIFICATION	2.8825326774131953E-5	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999711746732258	WITHOUT_CLASSIFICATION	2.8825326774131953E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999008250871108	WITHOUT_CLASSIFICATION	9.91749128892456E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999008250871108	WITHOUT_CLASSIFICATION	9.91749128892456E-5	DEFECT
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999396959001798	WITHOUT_CLASSIFICATION	6.0304099820174544E-5	DEFECT
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.999986069206173	WITHOUT_CLASSIFICATION	1.3930793827090676E-5	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9985984883211105	WITHOUT_CLASSIFICATION	0.0014015116788895702	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9985984883211105	WITHOUT_CLASSIFICATION	0.0014015116788895702	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9985984883211105	WITHOUT_CLASSIFICATION	0.0014015116788895702	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9985984883211105	WITHOUT_CLASSIFICATION	0.0014015116788895702	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9985984883211105	WITHOUT_CLASSIFICATION	0.0014015116788895702	DEFECT
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999798806439838	WITHOUT_CLASSIFICATION	2.0119356016161462E-5	DEFECT
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9988318160626982	WITHOUT_CLASSIFICATION	0.0011681839373016835	DEFECT
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999860852945232	WITHOUT_CLASSIFICATION	1.3914705476911302E-5	DEFECT
are we at ''	WITHOUT_CLASSIFICATION	0.9999554051452748	WITHOUT_CLASSIFICATION	4.4594854725315556E-5	DEFECT
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999653307107867	WITHOUT_CLASSIFICATION	3.466928921327532E-5	DEFECT
not enough bytes	WITHOUT_CLASSIFICATION	0.9998094418177742	WITHOUT_CLASSIFICATION	1.9055818222578553E-4	DEFECT
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999919916604831	WITHOUT_CLASSIFICATION	8.008339516835919E-6	DEFECT
skip inner braces	WITHOUT_CLASSIFICATION	0.9999793874994009	WITHOUT_CLASSIFICATION	2.0612500599140495E-5	DEFECT
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9999156801819024	WITHOUT_CLASSIFICATION	8.431981809753224E-5	DEFECT
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9998028152770704	WITHOUT_CLASSIFICATION	1.9718472292954773E-4	DEFECT
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999932533995053	WITHOUT_CLASSIFICATION	6.746600494633686E-6	DEFECT
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9999286941502449	WITHOUT_CLASSIFICATION	7.130584975513777E-5	DEFECT
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9999338299808385	WITHOUT_CLASSIFICATION	6.617001916156617E-5	DEFECT
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9982473969730832	WITHOUT_CLASSIFICATION	0.0017526030269169235	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999431295633272	WITHOUT_CLASSIFICATION	5.6870436672827586E-5	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999431295633272	WITHOUT_CLASSIFICATION	5.6870436672827586E-5	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999431295633272	WITHOUT_CLASSIFICATION	5.6870436672827586E-5	DEFECT
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9980816955989608	WITHOUT_CLASSIFICATION	0.001918304401039225	DEFECT
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9980815362399242	WITHOUT_CLASSIFICATION	0.001918463760075716	DEFECT
SimpleSampler	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999805140492191	WITHOUT_CLASSIFICATION	1.9485950780907697E-5	DEFECT
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.999916369039367	WITHOUT_CLASSIFICATION	8.363096063298643E-5	DEFECT
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999228387043534	WITHOUT_CLASSIFICATION	7.716129564667715E-5	DEFECT
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999345996380146	WITHOUT_CLASSIFICATION	6.540036198544664E-5	DEFECT
single precision, native	WITHOUT_CLASSIFICATION	0.9999162145605301	WITHOUT_CLASSIFICATION	8.378543946983072E-5	DEFECT
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9999011498349223	WITHOUT_CLASSIFICATION	9.885016507775797E-5	DEFECT
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999588430448034	WITHOUT_CLASSIFICATION	4.115695519648594E-5	DEFECT
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999651163841524	WITHOUT_CLASSIFICATION	3.488361584768447E-5	DEFECT
double precision, native	WITHOUT_CLASSIFICATION	0.999955309663882	WITHOUT_CLASSIFICATION	4.469033611803183E-5	DEFECT
signed short, little-endian	WITHOUT_CLASSIFICATION	0.999919386729381	WITHOUT_CLASSIFICATION	8.061327061903485E-5	DEFECT
signed char	WITHOUT_CLASSIFICATION	0.9999665853864158	WITHOUT_CLASSIFICATION	3.3414613584161035E-5	DEFECT
unsigned char	WITHOUT_CLASSIFICATION	0.9999658696965232	WITHOUT_CLASSIFICATION	3.413030347675495E-5	DEFECT
long, little-endian	WITHOUT_CLASSIFICATION	0.999937327742421	WITHOUT_CLASSIFICATION	6.267225757903247E-5	DEFECT
long, big-endian	WITHOUT_CLASSIFICATION	0.9999373290522576	WITHOUT_CLASSIFICATION	6.267094774238463E-5	DEFECT
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999274866631483	WITHOUT_CLASSIFICATION	7.251333685158488E-5	DEFECT
int, native	WITHOUT_CLASSIFICATION	0.9999212017664332	WITHOUT_CLASSIFICATION	7.879823356676818E-5	DEFECT
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999892371642972	WITHOUT_CLASSIFICATION	1.0762835702810044E-4	DEFECT
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998415954269523	WITHOUT_CLASSIFICATION	1.5840457304775997E-4	DEFECT
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999041393267144	WITHOUT_CLASSIFICATION	9.586067328560742E-5	DEFECT
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9944729511869023	WITHOUT_CLASSIFICATION	0.005527048813097737	DEFECT
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999116547737447	WITHOUT_CLASSIFICATION	8.834522625537642E-5	DEFECT
obtain a	WITHOUT_CLASSIFICATION	0.9999899032330161	WITHOUT_CLASSIFICATION	1.009676698387905E-5	DEFECT
obtain b	WITHOUT_CLASSIFICATION	0.9999932471312265	WITHOUT_CLASSIFICATION	6.752868773425093E-6	DEFECT
obtain c	WITHOUT_CLASSIFICATION	0.9999944004661413	WITHOUT_CLASSIFICATION	5.59953385866198E-6	DEFECT
obtain d	WITHOUT_CLASSIFICATION	0.9999909341880411	WITHOUT_CLASSIFICATION	9.06581195898055E-6	DEFECT
encode.limit() -	WITHOUT_CLASSIFICATION	0.9998841024978979	WITHOUT_CLASSIFICATION	1.1589750210207772E-4	DEFECT
1	WITHOUT_CLASSIFICATION	0.9999946071555281	WITHOUT_CLASSIFICATION	5.392844471930763E-6	DEFECT
2	WITHOUT_CLASSIFICATION	0.9999265427904565	WITHOUT_CLASSIFICATION	7.345720954359295E-5	DEFECT
3	WITHOUT_CLASSIFICATION	0.9999952951738466	WITHOUT_CLASSIFICATION	4.704826153430654E-6	DEFECT
4	WITHOUT_CLASSIFICATION	0.9999877019129959	WITHOUT_CLASSIFICATION	1.2298087004051717E-5	DEFECT
5	WITHOUT_CLASSIFICATION	0.9999931828128477	WITHOUT_CLASSIFICATION	6.8171871522949256E-6	DEFECT
6	WITHOUT_CLASSIFICATION	0.9999667302242228	WITHOUT_CLASSIFICATION	3.326977577720002E-5	DEFECT
7	WITHOUT_CLASSIFICATION	0.9999914120585018	WITHOUT_CLASSIFICATION	8.587941498246997E-6	DEFECT
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999727680535409	WITHOUT_CLASSIFICATION	2.7231946459134367E-5	DEFECT
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999718620046462	WITHOUT_CLASSIFICATION	2.8137995353852703E-5	DEFECT
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9997757221215395	WITHOUT_CLASSIFICATION	2.2427787846040118E-4	DEFECT
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9975487170741315	WITHOUT_CLASSIFICATION	0.0024512829258684856	DEFECT
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998683823165361	WITHOUT_CLASSIFICATION	1.3161768346399148E-4	DEFECT
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9990986590373196	WITHOUT_CLASSIFICATION	9.013409626804066E-4	DEFECT
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9996871677776162	WITHOUT_CLASSIFICATION	3.1283222238374106E-4	DEFECT
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9995462433995027	WITHOUT_CLASSIFICATION	4.5375660049734216E-4	DEFECT
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999722378005328	WITHOUT_CLASSIFICATION	2.7762199467288545E-5	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9995489447316019	WITHOUT_CLASSIFICATION	4.5105526839808865E-4	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996747409802427	WITHOUT_CLASSIFICATION	3.2525901975733547E-4	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996747409802427	WITHOUT_CLASSIFICATION	3.2525901975733547E-4	DEFECT
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9994452296796609	WITHOUT_CLASSIFICATION	5.547703203390335E-4	DEFECT
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999061925822675	WITHOUT_CLASSIFICATION	9.380741773252021E-5	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9994820383436082	WITHOUT_CLASSIFICATION	5.179616563919025E-4	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984265371603095	WITHOUT_CLASSIFICATION	0.0015734628396905695	DEFECT
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999752179126649	WITHOUT_CLASSIFICATION	2.4782087335101634E-4	DEFECT
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999177854920198	WITHOUT_CLASSIFICATION	8.221450798024814E-5	DEFECT
are we recursing?	WITHOUT_CLASSIFICATION	0.9999592691913445	WITHOUT_CLASSIFICATION	4.07308086555526E-5	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999881593900856	WITHOUT_CLASSIFICATION	1.184060991433766E-5	DEFECT
default PidGetter	WITHOUT_CLASSIFICATION	0.9999840121199219	WITHOUT_CLASSIFICATION	1.5987880078062782E-5	DEFECT
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999497167042523	WITHOUT_CLASSIFICATION	5.028329574782322E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999391526556822	WITHOUT_CLASSIFICATION	6.084734431772701E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999391526556822	WITHOUT_CLASSIFICATION	6.084734431772701E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999391526556822	WITHOUT_CLASSIFICATION	6.084734431772701E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999391526556822	WITHOUT_CLASSIFICATION	6.084734431772701E-5	DEFECT
try both	WITHOUT_CLASSIFICATION	0.9999953506262601	WITHOUT_CLASSIFICATION	4.64937373983081E-6	DEFECT
just unix	WITHOUT_CLASSIFICATION	0.999998422902224	WITHOUT_CLASSIFICATION	1.5770977760507687E-6	DEFECT
just windows	WITHOUT_CLASSIFICATION	0.9999907227030392	WITHOUT_CLASSIFICATION	9.27729696075469E-6	DEFECT
neither	WITHOUT_CLASSIFICATION	0.9999908794360083	WITHOUT_CLASSIFICATION	9.12056399177073E-6	DEFECT
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9993002073415591	WITHOUT_CLASSIFICATION	6.997926584409054E-4	DEFECT
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999303077753666	WITHOUT_CLASSIFICATION	6.969222463343458E-5	DEFECT
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999120762645161	WITHOUT_CLASSIFICATION	8.792373548392366E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999558993851326	WITHOUT_CLASSIFICATION	4.410061486738932E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999558993851326	WITHOUT_CLASSIFICATION	4.410061486738932E-5	DEFECT
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999970830676445	WITHOUT_CLASSIFICATION	2.916932355537727E-6	DEFECT
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999966135322362	WITHOUT_CLASSIFICATION	3.3864677638063134E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998995804699267	WITHOUT_CLASSIFICATION	1.0041953007335492E-4	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9980057848725277	WITHOUT_CLASSIFICATION	0.001994215127472367	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9980057848725277	WITHOUT_CLASSIFICATION	0.001994215127472367	DEFECT
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997169296845623	WITHOUT_CLASSIFICATION	2.8307031543770017E-4	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999825722924187	WITHOUT_CLASSIFICATION	1.7427707581346608E-5	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999825722924187	WITHOUT_CLASSIFICATION	1.7427707581346608E-5	DEFECT
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9991814112890224	WITHOUT_CLASSIFICATION	8.185887109775933E-4	DEFECT
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999993501021298	WITHOUT_CLASSIFICATION	6.498978701211536E-7	DEFECT
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999990070343427	WITHOUT_CLASSIFICATION	9.929656572399874E-7	DEFECT
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9992331665589544	WITHOUT_CLASSIFICATION	7.668334410454946E-4	DEFECT
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9979228664204813	WITHOUT_CLASSIFICATION	0.0020771335795186866	DEFECT
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999886539384852	WITHOUT_CLASSIFICATION	1.1346061514863801E-5	DEFECT
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9885076336536548	WITHOUT_CLASSIFICATION	0.01149236634634528	DEFECT
sequential	WITHOUT_CLASSIFICATION	0.9999909251867581	WITHOUT_CLASSIFICATION	9.074813241886684E-6	DEFECT
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999955854318126	WITHOUT_CLASSIFICATION	4.414568187392264E-6	DEFECT
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999776630360371	WITHOUT_CLASSIFICATION	2.233696396290733E-5	DEFECT
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999851258729039	WITHOUT_CLASSIFICATION	1.4874127096014069E-5	DEFECT
SignalFacade	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9940557440267966	WITHOUT_CLASSIFICATION	0.005944255973203322	DEFECT
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9975985535783414	WITHOUT_CLASSIFICATION	0.002401446421658553	DEFECT
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999945891793336	WITHOUT_CLASSIFICATION	5.410820666371918E-6	DEFECT
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9994488141585913	WITHOUT_CLASSIFICATION	5.511858414085649E-4	DEFECT
Args	WITHOUT_CLASSIFICATION	0.9999908608623912	WITHOUT_CLASSIFICATION	9.139137608751381E-6	DEFECT
static methods only	WITHOUT_CLASSIFICATION	0.9999508156940166	WITHOUT_CLASSIFICATION	4.918430598342281E-5	DEFECT
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999147104429454	WITHOUT_CLASSIFICATION	8.528955705458363E-5	DEFECT
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998950071881966	WITHOUT_CLASSIFICATION	1.0499281180342949E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999223434965054	WITHOUT_CLASSIFICATION	7.765650349459869E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9994078353267791	WITHOUT_CLASSIFICATION	5.921646732207998E-4	DEFECT
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9996169406727178	WITHOUT_CLASSIFICATION	3.83059327282208E-4	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999731248328868	WITHOUT_CLASSIFICATION	2.687516711314321E-5	DEFECT
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9693064192628091	WITHOUT_CLASSIFICATION	0.030693580737190848	DEFECT
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999634122732827	WITHOUT_CLASSIFICATION	3.6587726717251663E-5	DEFECT
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999550738384727	WITHOUT_CLASSIFICATION	4.4926161527282635E-5	DEFECT
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999533642455759	WITHOUT_CLASSIFICATION	4.6635754424229885E-5	DEFECT
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999463590551864	WITHOUT_CLASSIFICATION	5.364094481371736E-5	DEFECT
..	WITHOUT_CLASSIFICATION	0.9999587478418888	WITHOUT_CLASSIFICATION	4.1252158111236185E-5	DEFECT
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999630368111041	WITHOUT_CLASSIFICATION	3.696318889588738E-5	DEFECT
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.6400415649726523	DEFECT	0.35995843502734776	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9997286447893622	WITHOUT_CLASSIFICATION	2.713552106378167E-4	DEFECT
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.999954060509082	WITHOUT_CLASSIFICATION	4.593949091810954E-5	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999000864734936	WITHOUT_CLASSIFICATION	9.99135265064786E-5	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999564588676214	WITHOUT_CLASSIFICATION	4.3541132378538865E-5	DEFECT
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9998532841636126	WITHOUT_CLASSIFICATION	1.4671583638741916E-4	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999000864734936	WITHOUT_CLASSIFICATION	9.99135265064786E-5	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999564588676214	WITHOUT_CLASSIFICATION	4.3541132378538865E-5	DEFECT
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999371775743578	WITHOUT_CLASSIFICATION	6.282242564215621E-5	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9999082324681977	WITHOUT_CLASSIFICATION	9.176753180224542E-5	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9999082324681977	WITHOUT_CLASSIFICATION	9.176753180224542E-5	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998664158087238	WITHOUT_CLASSIFICATION	1.3358419127622905E-4	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9973217965303673	WITHOUT_CLASSIFICATION	0.0026782034696327416	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999896149261968	WITHOUT_CLASSIFICATION	1.0385073803354602E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999981265561299	WITHOUT_CLASSIFICATION	1.8734438701072584E-5	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9973484458955447	WITHOUT_CLASSIFICATION	0.002651554104455302	DEFECT
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9995279518608549	WITHOUT_CLASSIFICATION	4.720481391451491E-4	DEFECT
'.' is printed	WITHOUT_CLASSIFICATION	0.9998920801509367	WITHOUT_CLASSIFICATION	1.0791984906331524E-4	DEFECT
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999469506409017	WITHOUT_CLASSIFICATION	5.3049359098244114E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999374377817549	WITHOUT_CLASSIFICATION	6.256221824502729E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999929836422636	WITHOUT_CLASSIFICATION	7.0163577364323005E-6	DEFECT
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9999435088221073	WITHOUT_CLASSIFICATION	5.649117789278292E-5	DEFECT
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999503122204152	WITHOUT_CLASSIFICATION	4.9687779584784376E-5	DEFECT
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998884759776667	WITHOUT_CLASSIFICATION	1.1152402233325627E-4	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999806071342936	WITHOUT_CLASSIFICATION	1.9392865706452677E-5	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999806071342936	WITHOUT_CLASSIFICATION	1.9392865706452677E-5	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.999859344170572	WITHOUT_CLASSIFICATION	1.4065582942806939E-4	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.999859344170572	WITHOUT_CLASSIFICATION	1.4065582942806939E-4	DEFECT
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999660822556204	WITHOUT_CLASSIFICATION	3.391774437949686E-5	DEFECT
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
(1|intlen)	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9998526660747075	WITHOUT_CLASSIFICATION	1.473339252925368E-4	DEFECT
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999410731309245	WITHOUT_CLASSIFICATION	5.892686907549239E-5	DEFECT
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999896149261968	WITHOUT_CLASSIFICATION	1.0385073803354602E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999981265561299	WITHOUT_CLASSIFICATION	1.8734438701072584E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999374377817549	WITHOUT_CLASSIFICATION	6.256221824502729E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999929836422636	WITHOUT_CLASSIFICATION	7.0163577364323005E-6	DEFECT
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999951745735196	WITHOUT_CLASSIFICATION	4.825426480409313E-5	DEFECT
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999596793428867	WITHOUT_CLASSIFICATION	4.032065711328192E-5	DEFECT
\v	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
dangling '%' char	WITHOUT_CLASSIFICATION	0.9999631300386433	WITHOUT_CLASSIFICATION	3.6869961356708496E-5	DEFECT
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.99989592440667	WITHOUT_CLASSIFICATION	1.0407559332997266E-4	DEFECT
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999787307149564	WITHOUT_CLASSIFICATION	2.126928504366902E-5	DEFECT
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9994361150586013	WITHOUT_CLASSIFICATION	5.638849413987185E-4	DEFECT
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999371469171514	WITHOUT_CLASSIFICATION	6.285308284857264E-5	DEFECT
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999544818383129	WITHOUT_CLASSIFICATION	4.551816168698252E-5	DEFECT
negative values	WITHOUT_CLASSIFICATION	0.9999150436945135	WITHOUT_CLASSIFICATION	8.495630548653478E-5	DEFECT
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9976657987298881	WITHOUT_CLASSIFICATION	0.0023342012701118085	DEFECT
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999953833194213	WITHOUT_CLASSIFICATION	4.6166805786964623E-5	DEFECT
no such luck...	WITHOUT_CLASSIFICATION	0.9999900579314748	WITHOUT_CLASSIFICATION	9.942068525244363E-6	DEFECT
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999444433422189	WITHOUT_CLASSIFICATION	5.5556657781073176E-5	DEFECT
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999935345749803	WITHOUT_CLASSIFICATION	6.465425019737754E-6	DEFECT
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999931798430156	WITHOUT_CLASSIFICATION	6.820156984267322E-6	DEFECT
constant vector a	WITHOUT_CLASSIFICATION	0.999923779485633	WITHOUT_CLASSIFICATION	7.622051436686258E-5	DEFECT
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9997986926824471	WITHOUT_CLASSIFICATION	2.0130731755288353E-4	DEFECT
least significant r bits	WITHOUT_CLASSIFICATION	0.9999032864830562	WITHOUT_CLASSIFICATION	9.671351694383352E-5	DEFECT
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999097752793937	WITHOUT_CLASSIFICATION	9.022472060623661E-5	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999097752793937	WITHOUT_CLASSIFICATION	9.022472060623661E-5	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999097752793937	WITHOUT_CLASSIFICATION	9.022472060623661E-5	DEFECT
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9997536138470178	WITHOUT_CLASSIFICATION	2.463861529822159E-4	DEFECT
Tempering	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999954787950849	WITHOUT_CLASSIFICATION	4.521204915058473E-6	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9998559647753675	WITHOUT_CLASSIFICATION	1.440352246324872E-4	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9998559647753675	WITHOUT_CLASSIFICATION	1.440352246324872E-4	DEFECT
\v	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9998494881850073	WITHOUT_CLASSIFICATION	1.5051181499266923E-4	DEFECT
no number	WITHOUT_CLASSIFICATION	0.9999959716385677	WITHOUT_CLASSIFICATION	4.0283614322468035E-6	DEFECT
trailing garbage	WITHOUT_CLASSIFICATION	0.9999539910573135	WITHOUT_CLASSIFICATION	4.600894268648987E-5	DEFECT
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999711397694443	WITHOUT_CLASSIFICATION	2.8860230555699556E-4	DEFECT
it was not found at all!	WITHOUT_CLASSIFICATION	0.9997870340144523	WITHOUT_CLASSIFICATION	2.1296598554761795E-4	DEFECT
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9993443219355929	WITHOUT_CLASSIFICATION	6.556780644071694E-4	DEFECT
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999085067612835	WITHOUT_CLASSIFICATION	9.149323871639007E-5	DEFECT
goto next bucket	WITHOUT_CLASSIFICATION	0.9996938372674957	WITHOUT_CLASSIFICATION	3.061627325042495E-4	DEFECT
we reached the end	WITHOUT_CLASSIFICATION	0.9997410540740034	WITHOUT_CLASSIFICATION	2.5894592599667437E-4	DEFECT
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9998854397796336	WITHOUT_CLASSIFICATION	1.1456022036638454E-4	DEFECT
states	WITHOUT_CLASSIFICATION	0.9999919949429995	WITHOUT_CLASSIFICATION	8.005057000486046E-6	DEFECT
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9999815280247767	WITHOUT_CLASSIFICATION	1.8471975223231864E-5	DEFECT
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999551815682112	WITHOUT_CLASSIFICATION	4.4818431788927614E-5	DEFECT
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999948813763941	WITHOUT_CLASSIFICATION	5.11862360588114E-6	DEFECT
drop through for sign	WITHOUT_CLASSIFICATION	0.9999660828031413	WITHOUT_CLASSIFICATION	3.391719685875187E-5	DEFECT
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9997921128607345	WITHOUT_CLASSIFICATION	2.0788713926549684E-4	DEFECT
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999628667588221	WITHOUT_CLASSIFICATION	3.7133241177944835E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999867298787523	WITHOUT_CLASSIFICATION	1.3270121247771688E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999672442262221	WITHOUT_CLASSIFICATION	3.2755773777822666E-5	DEFECT
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999947095056684	WITHOUT_CLASSIFICATION	5.290494331590715E-6	DEFECT
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999620735814658	WITHOUT_CLASSIFICATION	3.7926418534251726E-5	DEFECT
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999932406514046	WITHOUT_CLASSIFICATION	6.759348595322645E-6	DEFECT
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999260612118941	WITHOUT_CLASSIFICATION	7.393878810595907E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999283236323958	WITHOUT_CLASSIFICATION	7.167636760411715E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999283236323958	WITHOUT_CLASSIFICATION	7.167636760411715E-5	DEFECT
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9999986369788693	WITHOUT_CLASSIFICATION	1.3630211307372159E-6	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999758330486417	WITHOUT_CLASSIFICATION	2.4166951358315906E-5	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999758330486417	WITHOUT_CLASSIFICATION	2.4166951358315906E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999570259013056	WITHOUT_CLASSIFICATION	4.297409869441506E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999570259013056	WITHOUT_CLASSIFICATION	4.297409869441506E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999936458668678	WITHOUT_CLASSIFICATION	6.3541331322758E-6	DEFECT
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999658509776194	WITHOUT_CLASSIFICATION	3.4149022380696845E-5	DEFECT
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999880666198738	WITHOUT_CLASSIFICATION	1.1933380126208582E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999948287765921	WITHOUT_CLASSIFICATION	5.17122340788328E-6	DEFECT
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998843233611887	WITHOUT_CLASSIFICATION	1.156766388113429E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999867298787523	WITHOUT_CLASSIFICATION	1.3270121247771688E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999867298787523	WITHOUT_CLASSIFICATION	1.3270121247771688E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999867298787523	WITHOUT_CLASSIFICATION	1.3270121247771688E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999672442262221	WITHOUT_CLASSIFICATION	3.2755773777822666E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999283236323958	WITHOUT_CLASSIFICATION	7.167636760411715E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999283236323958	WITHOUT_CLASSIFICATION	7.167636760411715E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999283236323958	WITHOUT_CLASSIFICATION	7.167636760411715E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999936458668678	WITHOUT_CLASSIFICATION	6.3541331322758E-6	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999936458668678	WITHOUT_CLASSIFICATION	6.3541331322758E-6	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999936458668678	WITHOUT_CLASSIFICATION	6.3541331322758E-6	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999948287765921	WITHOUT_CLASSIFICATION	5.17122340788328E-6	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999948287765921	WITHOUT_CLASSIFICATION	5.17122340788328E-6	DEFECT
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.99995895254543	WITHOUT_CLASSIFICATION	4.104745457006301E-5	DEFECT
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999930024242254	WITHOUT_CLASSIFICATION	6.9975757745873506E-6	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999970841461319	WITHOUT_CLASSIFICATION	2.915853868262472E-6	DEFECT
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.6264627099185096	DEFECT	0.37353729008149045	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9999906060063891	WITHOUT_CLASSIFICATION	9.393993610880339E-6	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9999156166266613	WITHOUT_CLASSIFICATION	8.438337333869559E-5	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9999156166266613	WITHOUT_CLASSIFICATION	8.438337333869559E-5	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998966136681274	WITHOUT_CLASSIFICATION	1.0338633187254075E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999818213099771	WITHOUT_CLASSIFICATION	1.8178690022889034E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999818213099771	WITHOUT_CLASSIFICATION	1.8178690022889034E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999818213099771	WITHOUT_CLASSIFICATION	1.8178690022889034E-5	DEFECT
first char must be digit	WITHOUT_CLASSIFICATION	0.9999710555603999	WITHOUT_CLASSIFICATION	2.8944439600107532E-5	DEFECT
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999951860028308	WITHOUT_CLASSIFICATION	4.813997169289589E-6	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999672442262221	WITHOUT_CLASSIFICATION	3.2755773777822666E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999936458668678	WITHOUT_CLASSIFICATION	6.3541331322758E-6	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999936458668678	WITHOUT_CLASSIFICATION	6.3541331322758E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999818213099771	WITHOUT_CLASSIFICATION	1.8178690022889034E-5	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9998966136681274	WITHOUT_CLASSIFICATION	1.0338633187254075E-4	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999785264863198	WITHOUT_CLASSIFICATION	2.1473513680211586E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9998026903107342	WITHOUT_CLASSIFICATION	1.9730968926584018E-4	DEFECT
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999409903602703	WITHOUT_CLASSIFICATION	5.9009639729665174E-5	DEFECT
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999811727774383	WITHOUT_CLASSIFICATION	1.8827222561813906E-5	DEFECT
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999512178735408	WITHOUT_CLASSIFICATION	4.878212645910459E-5	DEFECT
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9993140846901618	WITHOUT_CLASSIFICATION	6.859153098381863E-4	DEFECT
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999957963947909	WITHOUT_CLASSIFICATION	4.203605209065907E-6	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999957457439969	WITHOUT_CLASSIFICATION	4.254256003046069E-6	DEFECT
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999709700822228	WITHOUT_CLASSIFICATION	2.9029917777205744E-5	DEFECT
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9995424603778649	WITHOUT_CLASSIFICATION	4.5753962213509607E-4	DEFECT
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999495038751214	WITHOUT_CLASSIFICATION	5.049612487870088E-5	DEFECT
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999673668064057	WITHOUT_CLASSIFICATION	3.263319359424385E-5	DEFECT
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9999166972002237	WITHOUT_CLASSIFICATION	8.330279977630182E-5	DEFECT
advance to first entry	WITHOUT_CLASSIFICATION	0.9999808285550197	WITHOUT_CLASSIFICATION	1.9171444980234765E-5	DEFECT
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.999993973549688	WITHOUT_CLASSIFICATION	6.026450312029478E-6	DEFECT
package-protected	WITHOUT_CLASSIFICATION	0.9999369260392229	WITHOUT_CLASSIFICATION	6.307396077711871E-5	DEFECT
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999901805710858	WITHOUT_CLASSIFICATION	9.8194289141503E-6	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9994844296642816	WITHOUT_CLASSIFICATION	5.155703357184179E-4	DEFECT
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999214350923789	WITHOUT_CLASSIFICATION	7.856490762106364E-5	DEFECT
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999706503794503	WITHOUT_CLASSIFICATION	2.9349620549623897E-5	DEFECT
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999997118310079	WITHOUT_CLASSIFICATION	2.8816899210257676E-6	DEFECT
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999214700621377	WITHOUT_CLASSIFICATION	7.852993786219414E-5	DEFECT
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999768874214146	WITHOUT_CLASSIFICATION	2.311257858544179E-5	DEFECT
unread back	WITHOUT_CLASSIFICATION	0.9999490199501633	WITHOUT_CLASSIFICATION	5.098004983671411E-5	DEFECT
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999704951382062	WITHOUT_CLASSIFICATION	2.9504861793762502E-5	DEFECT
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999938881634481	WITHOUT_CLASSIFICATION	6.111836551896661E-5	DEFECT
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999784740975155	WITHOUT_CLASSIFICATION	2.1525902484577424E-5	DEFECT
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999990230001051	WITHOUT_CLASSIFICATION	9.76999894871754E-7	DEFECT
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999680625628061	WITHOUT_CLASSIFICATION	3.1937437193906805E-5	DEFECT
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9999463997839164	WITHOUT_CLASSIFICATION	5.3600216083541456E-5	DEFECT
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.999965579047872	WITHOUT_CLASSIFICATION	3.4420952128032645E-5	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999785264863198	WITHOUT_CLASSIFICATION	2.1473513680211586E-5	DEFECT
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999873005723694	WITHOUT_CLASSIFICATION	1.2699427630511629E-5	DEFECT
not closing from finalize	WITHOUT_CLASSIFICATION	0.9995787088340722	WITHOUT_CLASSIFICATION	4.2129116592774053E-4	DEFECT
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9997291954521543	WITHOUT_CLASSIFICATION	2.708045478456045E-4	DEFECT
silence	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
silence	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.9998804018523159	WITHOUT_CLASSIFICATION	1.1959814768413741E-4	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.9998804018523159	WITHOUT_CLASSIFICATION	1.1959814768413741E-4	DEFECT
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999659000893303	WITHOUT_CLASSIFICATION	3.409991066962078E-5	DEFECT
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999940951273711	WITHOUT_CLASSIFICATION	5.904872628877742E-6	DEFECT
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999505405048688	WITHOUT_CLASSIFICATION	4.945949513123439E-5	DEFECT
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999974021227013	WITHOUT_CLASSIFICATION	2.5978772987152698E-5	DEFECT
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999907715380634	WITHOUT_CLASSIFICATION	9.228461936554186E-6	DEFECT
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999536218368212	WITHOUT_CLASSIFICATION	4.6378163178764536E-5	DEFECT
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9991483372940695	WITHOUT_CLASSIFICATION	8.51662705930596E-4	DEFECT
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999922329510674	WITHOUT_CLASSIFICATION	7.767048932542146E-6	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999485564089474	WITHOUT_CLASSIFICATION	5.1443591052560954E-5	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.999356864838729	WITHOUT_CLASSIFICATION	6.431351612709716E-4	DEFECT
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.999642641542791	WITHOUT_CLASSIFICATION	3.573584572088768E-4	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999858852086343	WITHOUT_CLASSIFICATION	1.4114791365706664E-5	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999858852086343	WITHOUT_CLASSIFICATION	1.4114791365706664E-5	DEFECT
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9995844181130855	WITHOUT_CLASSIFICATION	4.1558188691445506E-4	DEFECT
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9999592814601326	WITHOUT_CLASSIFICATION	4.071853986755859E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999819312014261	WITHOUT_CLASSIFICATION	1.8068798573906276E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999819312014261	WITHOUT_CLASSIFICATION	1.8068798573906276E-5	DEFECT
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999933235411452	WITHOUT_CLASSIFICATION	6.676458854697488E-6	DEFECT
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999736975804133	WITHOUT_CLASSIFICATION	2.630241958660832E-5	DEFECT
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9998418595598091	WITHOUT_CLASSIFICATION	1.581404401908115E-4	DEFECT
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999068692099553	WITHOUT_CLASSIFICATION	9.313079004471376E-5	DEFECT
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999636525022652	WITHOUT_CLASSIFICATION	3.634749773488112E-5	DEFECT
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998487532478503	WITHOUT_CLASSIFICATION	1.5124675214964588E-4	DEFECT
save the ungot	WITHOUT_CLASSIFICATION	0.9999637860200341	WITHOUT_CLASSIFICATION	3.6213979965987576E-5	DEFECT
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999948920982337	WITHOUT_CLASSIFICATION	5.107901766295148E-6	DEFECT
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9992712169626472	WITHOUT_CLASSIFICATION	7.287830373528812E-4	DEFECT
flush first	WITHOUT_CLASSIFICATION	0.9999819653180195	WITHOUT_CLASSIFICATION	1.803468198046467E-5	DEFECT
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9998602044870141	WITHOUT_CLASSIFICATION	1.3979551298594069E-4	DEFECT
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9999580390180505	WITHOUT_CLASSIFICATION	4.1960981949578186E-5	DEFECT
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999940414418028	WITHOUT_CLASSIFICATION	5.958558197187178E-6	DEFECT
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9999056681531312	WITHOUT_CLASSIFICATION	9.433184686868793E-5	DEFECT
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999792371011706	WITHOUT_CLASSIFICATION	2.0762898829296875E-5	DEFECT
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9964512651599738	WITHOUT_CLASSIFICATION	0.003548734840026287	DEFECT
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998728983206937	WITHOUT_CLASSIFICATION	1.2710167930628065E-4	DEFECT
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999921459435195	WITHOUT_CLASSIFICATION	7.85405648050726E-5	DEFECT
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9998910525957879	WITHOUT_CLASSIFICATION	1.0894740421198696E-4	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999876138820389	WITHOUT_CLASSIFICATION	1.2386117960973695E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9599781525484998	WITHOUT_CLASSIFICATION	0.040021847451500274	DEFECT
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999481779160524	WITHOUT_CLASSIFICATION	5.1822083947657114E-5	DEFECT
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999606552255892	WITHOUT_CLASSIFICATION	3.9344774410779035E-5	DEFECT
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999914090905438	WITHOUT_CLASSIFICATION	8.590909456077635E-6	DEFECT
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999755975962404	WITHOUT_CLASSIFICATION	2.4402403759483805E-5	DEFECT
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9999210535856453	WITHOUT_CLASSIFICATION	7.894641435475671E-5	DEFECT
else leave it null	WITHOUT_CLASSIFICATION	0.999767902938066	WITHOUT_CLASSIFICATION	2.3209706193390355E-4	DEFECT
TypeMatcher	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9997269934413755	WITHOUT_CLASSIFICATION	2.7300655862452425E-4	DEFECT
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999948481569558	WITHOUT_CLASSIFICATION	5.151843044195533E-5	DEFECT
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999392689674418	WITHOUT_CLASSIFICATION	6.073103255823639E-5	DEFECT
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999786222022501	WITHOUT_CLASSIFICATION	2.137779774991081E-5	DEFECT
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9997617548555575	WITHOUT_CLASSIFICATION	2.3824514444250103E-4	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999151780999718	WITHOUT_CLASSIFICATION	8.48219000282277E-5	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999151780999718	WITHOUT_CLASSIFICATION	8.48219000282277E-5	DEFECT
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999708660663246	WITHOUT_CLASSIFICATION	2.9133933675406385E-5	DEFECT
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999906508151513	WITHOUT_CLASSIFICATION	9.349184848755512E-6	DEFECT
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999896386273367	WITHOUT_CLASSIFICATION	1.0361372663300554E-4	DEFECT
Init	WITHOUT_CLASSIFICATION	0.999991346111542	WITHOUT_CLASSIFICATION	8.653888458141741E-6	DEFECT
Block	WITHOUT_CLASSIFICATION	0.9999911748487005	WITHOUT_CLASSIFICATION	8.825151299592298E-6	DEFECT
Copy constructor	WITHOUT_CLASSIFICATION	0.9999762932700013	WITHOUT_CLASSIFICATION	2.370672999876544E-5	DEFECT
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9945939648019761	WITHOUT_CLASSIFICATION	0.0054060351980237875	DEFECT
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9945939648019761	WITHOUT_CLASSIFICATION	0.0054060351980237875	DEFECT
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998411225065506	WITHOUT_CLASSIFICATION	1.588774934495097E-4	DEFECT
ok	WITHOUT_CLASSIFICATION	0.9999930347014195	WITHOUT_CLASSIFICATION	6.965298580423086E-6	DEFECT
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999002233459398	WITHOUT_CLASSIFICATION	9.977665406016633E-5	DEFECT
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9780238165719416	WITHOUT_CLASSIFICATION	0.021976183428058297	DEFECT
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999957827468142	WITHOUT_CLASSIFICATION	4.217253185794687E-5	DEFECT
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9998851756629481	WITHOUT_CLASSIFICATION	1.148243370518921E-4	DEFECT
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999928312452878	WITHOUT_CLASSIFICATION	7.168754712248256E-6	DEFECT
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999874834368281	WITHOUT_CLASSIFICATION	1.2516563171975891E-5	DEFECT
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.99977668098237	WITHOUT_CLASSIFICATION	2.2331901762989245E-4	DEFECT
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999435402212247	WITHOUT_CLASSIFICATION	5.645977877525345E-5	DEFECT
notify thread to proceed	WITHOUT_CLASSIFICATION	0.999930329065797	WITHOUT_CLASSIFICATION	6.967093420301902E-5	DEFECT
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999604298149337	WITHOUT_CLASSIFICATION	3.957018506632092E-5	DEFECT
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999970748005083	WITHOUT_CLASSIFICATION	2.9251994917099578E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999982229455182	WITHOUT_CLASSIFICATION	1.777054481693422E-6	DEFECT
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9999241003652389	WITHOUT_CLASSIFICATION	7.589963476108073E-5	DEFECT
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997394172347034	WITHOUT_CLASSIFICATION	2.605827652966251E-4	DEFECT
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9994990022647374	WITHOUT_CLASSIFICATION	5.00997735262549E-4	DEFECT
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999480914517969	WITHOUT_CLASSIFICATION	5.190854820314589E-5	DEFECT
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999216469504227	WITHOUT_CLASSIFICATION	7.835304957724487E-5	DEFECT
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
void methods should work	WITHOUT_CLASSIFICATION	0.9977405633808738	WITHOUT_CLASSIFICATION	0.0022594366191262044	DEFECT
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9993835458314546	WITHOUT_CLASSIFICATION	6.1645416854545E-4	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999970891691665	WITHOUT_CLASSIFICATION	2.9108308333941923E-6	DEFECT
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999976496027473	WITHOUT_CLASSIFICATION	2.3503972526472553E-6	DEFECT
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999598152922986	WITHOUT_CLASSIFICATION	4.0184707701483306E-5	DEFECT
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
int n = 10;	WITHOUT_CLASSIFICATION	0.9996650795102	WITHOUT_CLASSIFICATION	3.349204898000567E-4	DEFECT
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999726661658481	WITHOUT_CLASSIFICATION	2.7333834151902263E-5	DEFECT
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998960473700411	WITHOUT_CLASSIFICATION	1.0395262995887055E-4	DEFECT
value equality	WITHOUT_CLASSIFICATION	0.9999583213693709	WITHOUT_CLASSIFICATION	4.167863062910034E-5	DEFECT
identity equality	WITHOUT_CLASSIFICATION	0.9999465881447871	WITHOUT_CLASSIFICATION	5.3411855212970286E-5	DEFECT
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998997484478792	WITHOUT_CLASSIFICATION	1.002515521207848E-4	DEFECT
bench Integer fib	WITHOUT_CLASSIFICATION	0.9999387620236011	WITHOUT_CLASSIFICATION	6.123797639897149E-5	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999517047639177	WITHOUT_CLASSIFICATION	4.8295236082197165E-5	DEFECT
bench Long fib	WITHOUT_CLASSIFICATION	0.9999372886908663	WITHOUT_CLASSIFICATION	6.271130913374351E-5	DEFECT
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999386870511008	WITHOUT_CLASSIFICATION	6.13129488991463E-5	DEFECT
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999296377460825	WITHOUT_CLASSIFICATION	7.036225391753724E-5	DEFECT
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999587857649068	WITHOUT_CLASSIFICATION	4.12142350931538E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997489962762272	WITHOUT_CLASSIFICATION	2.5100372377289694E-4	DEFECT
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9929860371456776	WITHOUT_CLASSIFICATION	0.007013962854322441	DEFECT
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999848956169742	WITHOUT_CLASSIFICATION	1.5104383025827497E-5	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999902700832461	WITHOUT_CLASSIFICATION	9.729916753896274E-6	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.99929573536419	WITHOUT_CLASSIFICATION	7.042646358101053E-4	DEFECT
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9998139062106293	WITHOUT_CLASSIFICATION	1.860937893708231E-4	DEFECT
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9998792901635369	WITHOUT_CLASSIFICATION	1.2070983646304797E-4	DEFECT
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9999027446404529	WITHOUT_CLASSIFICATION	9.725535954710573E-5	DEFECT
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.9993403827112305	WITHOUT_CLASSIFICATION	6.596172887695852E-4	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999503405320559	WITHOUT_CLASSIFICATION	4.965946794408985E-5	DEFECT
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999699793807962	WITHOUT_CLASSIFICATION	3.002061920376578E-5	DEFECT
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.915213865216191	WITHOUT_CLASSIFICATION	0.08478613478380903	DEFECT
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999407698115274	WITHOUT_CLASSIFICATION	5.9230188472597006E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998433784751334	WITHOUT_CLASSIFICATION	1.5662152486655497E-4	DEFECT
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999861714241225	WITHOUT_CLASSIFICATION	1.3828575877551102E-5	DEFECT
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999986851229739	WITHOUT_CLASSIFICATION	1.3148770261623612E-6	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998307424074689	WITHOUT_CLASSIFICATION	1.69257592531113E-4	DEFECT
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999982193730004	WITHOUT_CLASSIFICATION	1.7806269996878513E-6	DEFECT
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999825351128891	WITHOUT_CLASSIFICATION	1.7464887110841597E-5	DEFECT
construct the proxy method	WITHOUT_CLASSIFICATION	0.999964285776162	WITHOUT_CLASSIFICATION	3.571422383802856E-5	DEFECT
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999178066141806	WITHOUT_CLASSIFICATION	8.2193385819336E-5	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999452426474641	WITHOUT_CLASSIFICATION	5.475735253597366E-5	DEFECT
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999178066141806	WITHOUT_CLASSIFICATION	8.2193385819336E-5	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999722468324954	WITHOUT_CLASSIFICATION	2.7753167504632587E-5	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999452426474641	WITHOUT_CLASSIFICATION	5.475735253597366E-5	DEFECT
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.999997799309834	WITHOUT_CLASSIFICATION	2.2006901659730017E-6	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999731248328868	WITHOUT_CLASSIFICATION	2.687516711314321E-5	DEFECT
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9980880726091421	WITHOUT_CLASSIFICATION	0.0019119273908578865	DEFECT
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9796235087589833	WITHOUT_CLASSIFICATION	0.020376491241016804	DEFECT
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999272804330075	WITHOUT_CLASSIFICATION	7.271956699248978E-5	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9985984883211105	WITHOUT_CLASSIFICATION	0.0014015116788895702	DEFECT
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9998782616777285	WITHOUT_CLASSIFICATION	1.2173832227139099E-4	DEFECT
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999871822021429	WITHOUT_CLASSIFICATION	1.2817797857028593E-5	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9973217965303673	WITHOUT_CLASSIFICATION	0.0026782034696327416	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999876138820389	WITHOUT_CLASSIFICATION	1.2386117960973695E-5	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999970841461319	WITHOUT_CLASSIFICATION	2.915853868262472E-6	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9969933754867344	WITHOUT_CLASSIFICATION	0.003006624513265595	DEFECT
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999811574606128	WITHOUT_CLASSIFICATION	1.8842539387231203E-5	DEFECT
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999887953153976	WITHOUT_CLASSIFICATION	1.1204684602347381E-5	DEFECT
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9998026903107342	WITHOUT_CLASSIFICATION	1.9730968926584018E-4	DEFECT
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9998074499592101	WITHOUT_CLASSIFICATION	1.9255004078998529E-4	DEFECT
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999920279750198	WITHOUT_CLASSIFICATION	7.97202498004849E-6	DEFECT
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9980555102262064	WITHOUT_CLASSIFICATION	0.0019444897737935026	DEFECT
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9950631006019011	WITHOUT_CLASSIFICATION	0.0049368993980989555	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999952288149198	WITHOUT_CLASSIFICATION	4.771185080153681E-6	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999992152037426	WITHOUT_CLASSIFICATION	7.847962574703401E-7	DEFECT
constructor	WITHOUT_CLASSIFICATION	0.99997462022597	WITHOUT_CLASSIFICATION	2.537977403003897E-5	DEFECT
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9996983551477571	WITHOUT_CLASSIFICATION	3.0164485224298327E-4	DEFECT
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999971781890693	WITHOUT_CLASSIFICATION	2.8218109307294735E-6	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9984405884273505	WITHOUT_CLASSIFICATION	0.0015594115726495562	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999953902730094	WITHOUT_CLASSIFICATION	4.6097269905973615E-6	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999276312598087	WITHOUT_CLASSIFICATION	7.236874019136208E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999276312598087	WITHOUT_CLASSIFICATION	7.236874019136208E-5	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998646862473801	WITHOUT_CLASSIFICATION	1.3531375262000126E-4	DEFECT
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999912746182137	WITHOUT_CLASSIFICATION	8.725381786427365E-6	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998804528398922	WITHOUT_CLASSIFICATION	1.1954716010772104E-4	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9999793092827571	WITHOUT_CLASSIFICATION	2.069071724293296E-5	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999635801978703	WITHOUT_CLASSIFICATION	3.6419802129643446E-5	DEFECT
"else" body	WITHOUT_CLASSIFICATION	0.999935729661711	WITHOUT_CLASSIFICATION	6.427033828903045E-5	DEFECT
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.9770397068313158	WITHOUT_CLASSIFICATION	0.022960293168684205	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999855322719801	WITHOUT_CLASSIFICATION	1.446772802000008E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9999137176179426	WITHOUT_CLASSIFICATION	8.628238205737334E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9999137176179426	WITHOUT_CLASSIFICATION	8.628238205737334E-5	DEFECT
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9994526274380331	WITHOUT_CLASSIFICATION	5.473725619668326E-4	DEFECT
10!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999732847673076	WITHOUT_CLASSIFICATION	2.6715232692400624E-5	DEFECT
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9244681060116158	WITHOUT_CLASSIFICATION	0.07553189398838424	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999851511637254	WITHOUT_CLASSIFICATION	1.4848836274545146E-5	DEFECT
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998684427829723	WITHOUT_CLASSIFICATION	1.3155721702783958E-4	DEFECT
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.998941069448648	WITHOUT_CLASSIFICATION	0.0010589305513520472	DEFECT
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999317702794409	WITHOUT_CLASSIFICATION	6.822972055911407E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999722468324954	WITHOUT_CLASSIFICATION	2.7753167504632587E-5	DEFECT
line 449	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 495	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
Management/monitoring	WITHOUT_CLASSIFICATION	0.9999097599531149	WITHOUT_CLASSIFICATION	9.024004688509927E-5	DEFECT
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999940006366853	WITHOUT_CLASSIFICATION	5.9993633147253975E-6	DEFECT
14!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999870826850091	WITHOUT_CLASSIFICATION	1.2917314990902106E-5	DEFECT
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999842669943447	WITHOUT_CLASSIFICATION	1.5733005655302673E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999534785958467	WITHOUT_CLASSIFICATION	4.652140415341397E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999534785958467	WITHOUT_CLASSIFICATION	4.652140415341397E-5	DEFECT
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999732847673076	WITHOUT_CLASSIFICATION	2.6715232692400624E-5	DEFECT
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.999984725919141	WITHOUT_CLASSIFICATION	1.5274080858983134E-5	DEFECT
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9722845739044227	WITHOUT_CLASSIFICATION	0.027715426095577412	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999815642628085	WITHOUT_CLASSIFICATION	1.8435737191540338E-5	DEFECT
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999930435079752	WITHOUT_CLASSIFICATION	6.956492024801647E-5	DEFECT
18!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9998021978662752	WITHOUT_CLASSIFICATION	1.9780213372473E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999386549060985	WITHOUT_CLASSIFICATION	6.134509390150498E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999386549060985	WITHOUT_CLASSIFICATION	6.134509390150498E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999386549060985	WITHOUT_CLASSIFICATION	6.134509390150498E-5	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999386549060985	WITHOUT_CLASSIFICATION	6.134509390150498E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999437682257588	WITHOUT_CLASSIFICATION	5.623177424129971E-5	DEFECT
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.997632415268217	WITHOUT_CLASSIFICATION	0.0023675847317830754	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997559813794282	WITHOUT_CLASSIFICATION	2.4401862057164887E-4	DEFECT
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999809890105529	WITHOUT_CLASSIFICATION	1.901098944712455E-5	DEFECT
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999899243548382	WITHOUT_CLASSIFICATION	1.0075645161764039E-5	DEFECT
22!	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.999955716056681	WITHOUT_CLASSIFICATION	4.428394331904957E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999092700940919	WITHOUT_CLASSIFICATION	9.072990590804178E-5	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999561103662066	WITHOUT_CLASSIFICATION	4.38896337934605E-5	DEFECT
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999691019415582	WITHOUT_CLASSIFICATION	3.0898058441775265E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999760230593585	WITHOUT_CLASSIFICATION	2.3976940641554684E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999760230593585	WITHOUT_CLASSIFICATION	2.3976940641554684E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9953444054254998	WITHOUT_CLASSIFICATION	0.0046555945745001765	DEFECT
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999851963444218	WITHOUT_CLASSIFICATION	1.48036555780926E-5	DEFECT
BASE64	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999968491161185	WITHOUT_CLASSIFICATION	3.1508838815451407E-6	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999784297304697	WITHOUT_CLASSIFICATION	2.157026953025958E-5	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9996871738369433	WITHOUT_CLASSIFICATION	3.12826163056723E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9996871738369433	WITHOUT_CLASSIFICATION	3.12826163056723E-4	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999765970705146	WITHOUT_CLASSIFICATION	2.340292948547907E-5	DEFECT
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999251077861	WITHOUT_CLASSIFICATION	7.489221392089192E-8	DEFECT
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999130838912476	WITHOUT_CLASSIFICATION	8.691610875247184E-5	DEFECT
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999255413442857	WITHOUT_CLASSIFICATION	7.445865571425226E-5	DEFECT
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999861229621683	WITHOUT_CLASSIFICATION	1.3877037831726046E-5	DEFECT
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999844914021747	WITHOUT_CLASSIFICATION	1.5508597825290067E-5	DEFECT
carriage return	WITHOUT_CLASSIFICATION	0.9999603279211816	WITHOUT_CLASSIFICATION	3.967207881839466E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9988630323968234	WITHOUT_CLASSIFICATION	0.0011369676031766202	DEFECT
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999927825937204	WITHOUT_CLASSIFICATION	7.217406279557858E-6	DEFECT
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999484440046332	WITHOUT_CLASSIFICATION	5.155599536672877E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999713560792827	WITHOUT_CLASSIFICATION	2.864392071740273E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9989130621644513	WITHOUT_CLASSIFICATION	0.0010869378355486759	DEFECT
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999865198064217	WITHOUT_CLASSIFICATION	1.3480193578220425E-5	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999162394106	WITHOUT_CLASSIFICATION	8.376058943001464E-8	DEFECT
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999829733926056	WITHOUT_CLASSIFICATION	1.7026607394424727E-5	DEFECT
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999815005291771	WITHOUT_CLASSIFICATION	1.8499470822888235E-5	DEFECT
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999888618036129	WITHOUT_CLASSIFICATION	1.1138196387176155E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999797864455483	WITHOUT_CLASSIFICATION	2.0213554451685816E-4	DEFECT
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999077558419686	WITHOUT_CLASSIFICATION	9.224415803144598E-5	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999643885077714	WITHOUT_CLASSIFICATION	3.561149222873808E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998711846913754	WITHOUT_CLASSIFICATION	1.2881530862461868E-4	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999703938764937	WITHOUT_CLASSIFICATION	2.9606123506345597E-5	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999489197589883	WITHOUT_CLASSIFICATION	5.108024101181694E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999723350655153	WITHOUT_CLASSIFICATION	2.766493448466766E-5	DEFECT
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9992783833274157	WITHOUT_CLASSIFICATION	7.21616672584338E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9993029796045261	WITHOUT_CLASSIFICATION	6.970203954738353E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997489962762272	WITHOUT_CLASSIFICATION	2.5100372377289694E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997489962762272	WITHOUT_CLASSIFICATION	2.5100372377289694E-4	DEFECT
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998755431259373	WITHOUT_CLASSIFICATION	1.24456874062774E-4	DEFECT
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999817079741046	WITHOUT_CLASSIFICATION	1.8292025895430264E-5	DEFECT
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999634262513567	WITHOUT_CLASSIFICATION	3.6573748643334313E-5	DEFECT
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9998470146152181	WITHOUT_CLASSIFICATION	1.5298538478188532E-4	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999678433334425	WITHOUT_CLASSIFICATION	3.215666655743732E-5	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9998988648416912	WITHOUT_CLASSIFICATION	1.011351583088114E-4	DEFECT
read	WITHOUT_CLASSIFICATION	0.9999955138431715	WITHOUT_CLASSIFICATION	4.486156828499825E-6	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9902456139206931	WITHOUT_CLASSIFICATION	0.009754386079306914	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999527515255708	WITHOUT_CLASSIFICATION	4.724847442905048E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996931235014065	WITHOUT_CLASSIFICATION	3.0687649859345616E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9987109021061676	WITHOUT_CLASSIFICATION	0.0012890978938323641	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999639168588571	WITHOUT_CLASSIFICATION	3.608314114291684E-5	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999714788581565	WITHOUT_CLASSIFICATION	2.852114184343092E-5	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999760481088302	WITHOUT_CLASSIFICATION	2.3951891169793787E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999908224296084	WITHOUT_CLASSIFICATION	9.177570391737564E-6	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999564106994538	WITHOUT_CLASSIFICATION	4.358930054613859E-5	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999874735682442	WITHOUT_CLASSIFICATION	1.2526431755709957E-5	DEFECT
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999919335427029	WITHOUT_CLASSIFICATION	8.066457297091499E-5	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9995084511262807	WITHOUT_CLASSIFICATION	4.915488737192755E-4	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9995084511262807	WITHOUT_CLASSIFICATION	4.915488737192755E-4	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999772361633488	WITHOUT_CLASSIFICATION	2.2763836651245976E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995900924647744	WITHOUT_CLASSIFICATION	4.0990753522564136E-4	DEFECT
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9998273347565857	WITHOUT_CLASSIFICATION	1.7266524341432194E-4	DEFECT
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997816977171253	WITHOUT_CLASSIFICATION	2.1830228287471904E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999959960998909	WITHOUT_CLASSIFICATION	4.003900109148468E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999959960998909	WITHOUT_CLASSIFICATION	4.003900109148468E-6	DEFECT
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9991460166057498	WITHOUT_CLASSIFICATION	8.53983394250352E-4	DEFECT
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9998117584934456	WITHOUT_CLASSIFICATION	1.8824150655442833E-4	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999548755942361	WITHOUT_CLASSIFICATION	4.512440576393776E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999908735495661	WITHOUT_CLASSIFICATION	9.126450433949507E-6	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999978162085506	WITHOUT_CLASSIFICATION	2.1837914493895785E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999573769890917	WITHOUT_CLASSIFICATION	4.262301090836589E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999573769890917	WITHOUT_CLASSIFICATION	4.262301090836589E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.999964848588902	WITHOUT_CLASSIFICATION	3.5151411097972E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.999964848588902	WITHOUT_CLASSIFICATION	3.5151411097972E-5	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9999442997232284	WITHOUT_CLASSIFICATION	5.570027677148257E-5	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998584812882614	WITHOUT_CLASSIFICATION	1.4151871173854086E-4	DEFECT
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999467429690562	WITHOUT_CLASSIFICATION	5.325703094387471E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999413376600578	WITHOUT_CLASSIFICATION	5.8662339942222045E-5	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999880075165678	WITHOUT_CLASSIFICATION	1.1992483432261615E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999985379348433	WITHOUT_CLASSIFICATION	1.4620651567630754E-6	DEFECT
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999495541742575	WITHOUT_CLASSIFICATION	5.044582574247371E-5	DEFECT
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999061182372713	WITHOUT_CLASSIFICATION	9.388176272866513E-5	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.990225716457923	WITHOUT_CLASSIFICATION	0.009774283542077097	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999654773714146	WITHOUT_CLASSIFICATION	3.452262858531223E-5	DEFECT
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999691572864972	WITHOUT_CLASSIFICATION	3.0842713502923574E-5	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997756865191455	WITHOUT_CLASSIFICATION	2.2431348085442452E-4	DEFECT
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999995518945616	WITHOUT_CLASSIFICATION	4.4810543842268726E-7	DEFECT
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9998819731407809	WITHOUT_CLASSIFICATION	1.1802685921917728E-4	DEFECT
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998962545192176	WITHOUT_CLASSIFICATION	1.0374548078235137E-4	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998567248175501	WITHOUT_CLASSIFICATION	1.4327518244998857E-4	DEFECT
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999745977596908	WITHOUT_CLASSIFICATION	2.540224030923104E-5	DEFECT
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999477721513848	WITHOUT_CLASSIFICATION	5.2227848615193856E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9969933754867344	WITHOUT_CLASSIFICATION	0.003006624513265595	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999911487673331	WITHOUT_CLASSIFICATION	8.851232666874908E-6	DEFECT
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999954845495583	WITHOUT_CLASSIFICATION	4.515450441647187E-6	DEFECT
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999597763335016	WITHOUT_CLASSIFICATION	4.022366649825567E-5	DEFECT
coerce arguments	WITHOUT_CLASSIFICATION	0.9999544072592602	WITHOUT_CLASSIFICATION	4.559274073986246E-5	DEFECT
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9998888175490169	WITHOUT_CLASSIFICATION	1.1118245098305086E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999952288149198	WITHOUT_CLASSIFICATION	4.771185080153681E-6	DEFECT
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999668538993887	WITHOUT_CLASSIFICATION	3.314610061139189E-5	DEFECT
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9999251280561297	WITHOUT_CLASSIFICATION	7.487194387024541E-5	DEFECT
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9995856626884001	WITHOUT_CLASSIFICATION	4.143373115998514E-4	DEFECT
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999858201244679	WITHOUT_CLASSIFICATION	1.4179875532080395E-5	DEFECT
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9996792224902958	WITHOUT_CLASSIFICATION	3.2077750970420035E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9997861934997333	WITHOUT_CLASSIFICATION	2.1380650026673554E-4	DEFECT
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9994468098164956	WITHOUT_CLASSIFICATION	5.531901835044294E-4	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999116580859616	WITHOUT_CLASSIFICATION	8.834191403836618E-5	DEFECT
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9994902490647084	WITHOUT_CLASSIFICATION	5.097509352916434E-4	DEFECT
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999991161164639	WITHOUT_CLASSIFICATION	8.838835360997773E-6	DEFECT
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999167743577566	WITHOUT_CLASSIFICATION	8.322564224335084E-5	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999832760967129	WITHOUT_CLASSIFICATION	1.6723903287150175E-5	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9876746646655059	WITHOUT_CLASSIFICATION	0.012325335334494097	DEFECT
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999866484327011	WITHOUT_CLASSIFICATION	1.33515672989509E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.999991560260076	WITHOUT_CLASSIFICATION	8.43973992404901E-6	DEFECT
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9996234938476588	WITHOUT_CLASSIFICATION	3.765061523411887E-4	DEFECT
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999722787650525	WITHOUT_CLASSIFICATION	2.7721234947480475E-5	DEFECT
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9962829832740663	WITHOUT_CLASSIFICATION	0.0037170167259337862	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997748308033638	WITHOUT_CLASSIFICATION	2.2516919663623832E-4	DEFECT
specific arity	WITHOUT_CLASSIFICATION	0.9999456324759919	WITHOUT_CLASSIFICATION	5.4367524008155704E-5	DEFECT
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999863766493568	WITHOUT_CLASSIFICATION	1.3623350643200794E-4	DEFECT
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999727350940961	WITHOUT_CLASSIFICATION	2.7264905903893728E-5	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999737011397513	WITHOUT_CLASSIFICATION	2.6298860248710768E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999977923720483	WITHOUT_CLASSIFICATION	2.2076279516992993E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999977923720483	WITHOUT_CLASSIFICATION	2.2076279516992993E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999897961190675	WITHOUT_CLASSIFICATION	1.0203880932529652E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999897961190675	WITHOUT_CLASSIFICATION	1.0203880932529652E-5	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.99977412398732	WITHOUT_CLASSIFICATION	2.25876012680114E-4	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.99977412398732	WITHOUT_CLASSIFICATION	2.25876012680114E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9998859520191771	WITHOUT_CLASSIFICATION	1.1404798082288977E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9998859520191771	WITHOUT_CLASSIFICATION	1.1404798082288977E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9997703478594216	WITHOUT_CLASSIFICATION	2.296521405783787E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9997703478594216	WITHOUT_CLASSIFICATION	2.296521405783787E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9997703478594216	WITHOUT_CLASSIFICATION	2.296521405783787E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999583258724426	WITHOUT_CLASSIFICATION	4.167412755749462E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999187027577222	WITHOUT_CLASSIFICATION	8.129724227780371E-5	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998823192945215	WITHOUT_CLASSIFICATION	1.1768070547849596E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998823192945215	WITHOUT_CLASSIFICATION	1.1768070547849596E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998823192945215	WITHOUT_CLASSIFICATION	1.1768070547849596E-4	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999118931495918	WITHOUT_CLASSIFICATION	8.810685040818578E-5	DEFECT
backspace	WITHOUT_CLASSIFICATION	0.9999908340238829	WITHOUT_CLASSIFICATION	9.165976117153944E-6	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
package-private	WITHOUT_CLASSIFICATION	0.9999382714800934	WITHOUT_CLASSIFICATION	6.172851990669753E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999723350655153	WITHOUT_CLASSIFICATION	2.766493448466766E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999723350655153	WITHOUT_CLASSIFICATION	2.766493448466766E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9996150760779856	WITHOUT_CLASSIFICATION	3.849239220144539E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999889727034338	WITHOUT_CLASSIFICATION	1.102729656612122E-5	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999889727034338	WITHOUT_CLASSIFICATION	1.102729656612122E-5	DEFECT
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.6377045691038653	DEFECT	0.3622954308961348	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9985195748150838	WITHOUT_CLASSIFICATION	0.0014804251849160985	DEFECT
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999365241582706	WITHOUT_CLASSIFICATION	6.347584172941207E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9986688634357715	WITHOUT_CLASSIFICATION	0.001331136564228439	DEFECT
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999878301183915	WITHOUT_CLASSIFICATION	1.2169881608563116E-5	DEFECT
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999991379125768	WITHOUT_CLASSIFICATION	8.620874232434345E-7	DEFECT
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9999762650346192	WITHOUT_CLASSIFICATION	2.3734965380841165E-5	DEFECT
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9995908636508518	WITHOUT_CLASSIFICATION	4.09136349148194E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749672362708	WITHOUT_CLASSIFICATION	2.5032763729167046E-5	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999822754310498	WITHOUT_CLASSIFICATION	1.7724568950125346E-5	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999646830881781	WITHOUT_CLASSIFICATION	3.5316911821997585E-5	DEFECT
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9990306324749603	WITHOUT_CLASSIFICATION	9.693675250398337E-4	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999215120485991	WITHOUT_CLASSIFICATION	7.848795140082558E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.99992437750832	WITHOUT_CLASSIFICATION	7.562249168006442E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9995733930994002	WITHOUT_CLASSIFICATION	4.266069005997853E-4	DEFECT
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.883865872248291	DEFECT	0.11613412775170893	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9830669476236844	WITHOUT_CLASSIFICATION	0.016933052376315615	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999890395594414	WITHOUT_CLASSIFICATION	1.0960440558514691E-5	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999960747825952	WITHOUT_CLASSIFICATION	3.925217404780687E-6	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998565992921806	WITHOUT_CLASSIFICATION	1.4340070781930357E-4	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998433784751334	WITHOUT_CLASSIFICATION	1.5662152486655497E-4	DEFECT
only public methods	WITHOUT_CLASSIFICATION	0.9999581138056718	WITHOUT_CLASSIFICATION	4.188619432814933E-5	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999716174569921	WITHOUT_CLASSIFICATION	2.8382543007855152E-5	DEFECT
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9980738249885139	WITHOUT_CLASSIFICATION	0.0019261750114860775	DEFECT
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9573552959731937	WITHOUT_CLASSIFICATION	0.04264470402680643	DEFECT
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9996998655118736	WITHOUT_CLASSIFICATION	3.0013448812638927E-4	DEFECT
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999994201675287	WITHOUT_CLASSIFICATION	5.798324712592817E-7	DEFECT
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999537007030401	WITHOUT_CLASSIFICATION	4.6299296959904765E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999779005362405	WITHOUT_CLASSIFICATION	2.2099463759629917E-5	DEFECT
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9996810371761837	WITHOUT_CLASSIFICATION	3.189628238161938E-4	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9999392425124465	WITHOUT_CLASSIFICATION	6.0757487553590614E-5	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999902700832461	WITHOUT_CLASSIFICATION	9.729916753896274E-6	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998844004726977	WITHOUT_CLASSIFICATION	1.1559952730235586E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998844004726977	WITHOUT_CLASSIFICATION	1.1559952730235586E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998844004726977	WITHOUT_CLASSIFICATION	1.1559952730235586E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998844004726977	WITHOUT_CLASSIFICATION	1.1559952730235586E-4	DEFECT
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999942869066701	WITHOUT_CLASSIFICATION	5.7130933298613E-6	DEFECT
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998906531430511	WITHOUT_CLASSIFICATION	1.0934685694882195E-4	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999619806060976	WITHOUT_CLASSIFICATION	3.801939390223632E-5	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999619806060976	WITHOUT_CLASSIFICATION	3.801939390223632E-5	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9999484273892489	WITHOUT_CLASSIFICATION	5.1572610751011296E-5	DEFECT
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.99992072748874	WITHOUT_CLASSIFICATION	7.927251126007176E-5	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999093728764654	WITHOUT_CLASSIFICATION	9.06271235345675E-5	DEFECT
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999996340332708	WITHOUT_CLASSIFICATION	3.6596672920235876E-6	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9986488137249981	WITHOUT_CLASSIFICATION	0.0013511862750019313	DEFECT
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9991959017888067	WITHOUT_CLASSIFICATION	8.040982111933134E-4	DEFECT
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999504132050638	WITHOUT_CLASSIFICATION	4.958679493605414E-5	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999980221846148	WITHOUT_CLASSIFICATION	1.977815385248743E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999980221846148	WITHOUT_CLASSIFICATION	1.977815385248743E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999980221846148	WITHOUT_CLASSIFICATION	1.977815385248743E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999980221846148	WITHOUT_CLASSIFICATION	1.977815385248743E-6	DEFECT
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999931276612997	WITHOUT_CLASSIFICATION	6.872338700392484E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985127194827799	WITHOUT_CLASSIFICATION	0.0014872805172201173	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985127194827799	WITHOUT_CLASSIFICATION	0.0014872805172201173	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985127194827799	WITHOUT_CLASSIFICATION	0.0014872805172201173	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998441493911949	WITHOUT_CLASSIFICATION	1.5585060880502004E-4	DEFECT
finally with no exception	WITHOUT_CLASSIFICATION	0.9999263833157509	WITHOUT_CLASSIFICATION	7.361668424915253E-5	DEFECT
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999933593797498	WITHOUT_CLASSIFICATION	6.640620250198402E-6	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9946616040177699	WITHOUT_CLASSIFICATION	0.005338395982230107	DEFECT
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.996538845811021	WITHOUT_CLASSIFICATION	0.0034611541889790066	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9991630021820355	WITHOUT_CLASSIFICATION	8.369978179645702E-4	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9991630021820355	WITHOUT_CLASSIFICATION	8.369978179645702E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999908582887625	WITHOUT_CLASSIFICATION	9.141711237509657E-5	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999908582887625	WITHOUT_CLASSIFICATION	9.141711237509657E-5	DEFECT
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999992224805964	WITHOUT_CLASSIFICATION	7.775194037236918E-7	DEFECT
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999997444767126	WITHOUT_CLASSIFICATION	2.5552328735894854E-7	DEFECT
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998935348046815	WITHOUT_CLASSIFICATION	1.0646519531853449E-4	DEFECT
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9858772411998261	WITHOUT_CLASSIFICATION	0.014122758800173798	DEFECT
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.999963811457548	WITHOUT_CLASSIFICATION	3.618854245205845E-5	DEFECT
create the default thread group	WITHOUT_CLASSIFICATION	0.9999975987949017	WITHOUT_CLASSIFICATION	2.4012050983148253E-6	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999009200759845	WITHOUT_CLASSIFICATION	9.907992401552912E-5	DEFECT
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9998794284038289	WITHOUT_CLASSIFICATION	1.205715961711142E-4	DEFECT
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9995102680242647	WITHOUT_CLASSIFICATION	4.897319757352366E-4	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999948786345723	WITHOUT_CLASSIFICATION	5.121365427734251E-6	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999948786345723	WITHOUT_CLASSIFICATION	5.121365427734251E-6	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999691833997529	WITHOUT_CLASSIFICATION	3.081660024699361E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999691833997529	WITHOUT_CLASSIFICATION	3.081660024699361E-5	DEFECT
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9989886189752462	WITHOUT_CLASSIFICATION	0.0010113810247537487	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998541811698196	WITHOUT_CLASSIFICATION	1.4581883018047016E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999258480532116	WITHOUT_CLASSIFICATION	7.415194678845062E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999258480532116	WITHOUT_CLASSIFICATION	7.415194678845062E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999258480532116	WITHOUT_CLASSIFICATION	7.415194678845062E-5	DEFECT
line 286	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 476	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 513	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 530	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 533	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 551	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
end loop	WITHOUT_CLASSIFICATION	0.9999901763440198	WITHOUT_CLASSIFICATION	9.823655980301094E-6	DEFECT
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998075854951465	WITHOUT_CLASSIFICATION	1.9241450485343712E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9991727957880024	WITHOUT_CLASSIFICATION	8.272042119974359E-4	DEFECT
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.999851770146872	WITHOUT_CLASSIFICATION	1.4822985312805628E-4	DEFECT
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9984518700530175	WITHOUT_CLASSIFICATION	0.0015481299469824912	DEFECT
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999882111714739	WITHOUT_CLASSIFICATION	1.1788828526118706E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9437246207708789	WITHOUT_CLASSIFICATION	0.056275379229121084	DEFECT
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9997841603480025	WITHOUT_CLASSIFICATION	2.158396519974615E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9998506155903977	WITHOUT_CLASSIFICATION	1.493844096023465E-4	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999276312598087	WITHOUT_CLASSIFICATION	7.236874019136208E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.999990794781362	WITHOUT_CLASSIFICATION	9.205218637900701E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999937927368897	WITHOUT_CLASSIFICATION	6.207263110288245E-6	DEFECT
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9999652677383721	WITHOUT_CLASSIFICATION	3.473226162788086E-5	DEFECT
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9996773922670944	WITHOUT_CLASSIFICATION	3.226077329056071E-4	DEFECT
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9692060722680903	WITHOUT_CLASSIFICATION	0.030793927731909677	DEFECT
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9995777280201826	WITHOUT_CLASSIFICATION	4.222719798173165E-4	DEFECT
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9997660738608741	WITHOUT_CLASSIFICATION	2.3392613912581219E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999954210212882	WITHOUT_CLASSIFICATION	4.578978711750841E-6	DEFECT
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999895321178608	WITHOUT_CLASSIFICATION	1.046788213921883E-5	DEFECT
line 572	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 625	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 649	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 723	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 745	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 766	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 800	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 812	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 827	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 864	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 886	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 911	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 929	WITHOUT_CLASSIFICATION	0.9999804533926816	WITHOUT_CLASSIFICATION	1.954660731838546E-5	DEFECT
line 952	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 970	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 991	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1011	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1026	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1067	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1085	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1145	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1169	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1201	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1229	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1287	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1293	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1307	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1325	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1363	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1398	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1473	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1492	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1523	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1562	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1582	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1620	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1635	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1652	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1681	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1755	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1789	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999368147592727	WITHOUT_CLASSIFICATION	6.318524072733723E-5	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999593204002888	WITHOUT_CLASSIFICATION	4.0679599711289914E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9963144586906835	WITHOUT_CLASSIFICATION	0.0036855413093164987	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999660593807267	WITHOUT_CLASSIFICATION	3.3940619273334E-5	DEFECT
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999786303089543	WITHOUT_CLASSIFICATION	2.1369691045741018E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999727349085555	WITHOUT_CLASSIFICATION	2.7265091444453796E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999727349085555	WITHOUT_CLASSIFICATION	2.7265091444453796E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999727349085555	WITHOUT_CLASSIFICATION	2.7265091444453796E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999727349085555	WITHOUT_CLASSIFICATION	2.7265091444453796E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.976019504591313	WITHOUT_CLASSIFICATION	0.023980495408687012	DEFECT
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.5241346714252876	WITHOUT_CLASSIFICATION	0.47586532857471237	DEFECT
line 313	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 339	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 361	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 413	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 451	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 472	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 500	WITHOUT_CLASSIFICATION	0.9999357485233202	WITHOUT_CLASSIFICATION	6.425147667971713E-5	DEFECT
line 515	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 555	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 582	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 619	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 636	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 669	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 703	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 776	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 814	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 823	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 854	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 872	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 905	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 925	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 958	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 992	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1047	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1072	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1081	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1108	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1136	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1168	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1192	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1241	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1267	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1286	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1301	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1314	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1333	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1362	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1395	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1420	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1439	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1476	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1535	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1588	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1618	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1643	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1669	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1728	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1753	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1779	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1794	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1812	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1837	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1895	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1925	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1950	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 1992	WITHOUT_CLASSIFICATION	0.9999801372830305	WITHOUT_CLASSIFICATION	1.9862716969430583E-5	DEFECT
line 2014	WITHOUT_CLASSIFICATION	0.9999802695603834	WITHOUT_CLASSIFICATION	1.9730439616640155E-5	DEFECT
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999446868946941	WITHOUT_CLASSIFICATION	5.531310530600053E-5	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9997300399250076	WITHOUT_CLASSIFICATION	2.699600749924126E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999068221767551	WITHOUT_CLASSIFICATION	9.317782324490291E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.994269309088571	WITHOUT_CLASSIFICATION	0.005730690911428991	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.994269309088571	WITHOUT_CLASSIFICATION	0.005730690911428991	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.994269309088571	WITHOUT_CLASSIFICATION	0.005730690911428991	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.994269309088571	WITHOUT_CLASSIFICATION	0.005730690911428991	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996789038518021	WITHOUT_CLASSIFICATION	3.210961481978974E-4	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996789038518021	WITHOUT_CLASSIFICATION	3.210961481978974E-4	DEFECT
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9597205382876344	WITHOUT_CLASSIFICATION	0.040279461712365634	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999729937620968	WITHOUT_CLASSIFICATION	2.7006237903194054E-5	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999729937620968	WITHOUT_CLASSIFICATION	2.7006237903194054E-5	DEFECT
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9998296218693398	WITHOUT_CLASSIFICATION	1.703781306601642E-4	DEFECT
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999750130095785	WITHOUT_CLASSIFICATION	2.4986990421495933E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999105875344708	WITHOUT_CLASSIFICATION	8.94124655291879E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.999974736964533	WITHOUT_CLASSIFICATION	2.526303546711432E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.999974736964533	WITHOUT_CLASSIFICATION	2.526303546711432E-5	DEFECT
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999954042375211	WITHOUT_CLASSIFICATION	4.595762478908735E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9996444857823356	WITHOUT_CLASSIFICATION	3.5551421766438285E-4	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9996444857823356	WITHOUT_CLASSIFICATION	3.5551421766438285E-4	DEFECT
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9994094094661717	WITHOUT_CLASSIFICATION	5.905905338282182E-4	DEFECT
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.6990332584859876	WITHOUT_CLASSIFICATION	0.3009667415140123	DEFECT
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9996532156754071	WITHOUT_CLASSIFICATION	3.4678432459289444E-4	DEFECT
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999944771629332	WITHOUT_CLASSIFICATION	5.522837066722969E-6	DEFECT
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999472739155323	WITHOUT_CLASSIFICATION	5.272608446766529E-5	DEFECT
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999892371642972	WITHOUT_CLASSIFICATION	1.0762835702810044E-4	DEFECT
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999857291680669	WITHOUT_CLASSIFICATION	1.4270831933002314E-5	DEFECT
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999806337090171	WITHOUT_CLASSIFICATION	1.9366290982922332E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998995804699267	WITHOUT_CLASSIFICATION	1.0041953007335492E-4	DEFECT
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998149416090552	WITHOUT_CLASSIFICATION	1.8505839094480153E-4	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984265371603095	WITHOUT_CLASSIFICATION	0.0015734628396905695	DEFECT
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999048509239479	WITHOUT_CLASSIFICATION	9.514907605208788E-5	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999881593900856	WITHOUT_CLASSIFICATION	1.184060991433766E-5	DEFECT
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9997883181414694	WITHOUT_CLASSIFICATION	2.1168185853055987E-4	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998664158087238	WITHOUT_CLASSIFICATION	1.3358419127622905E-4	DEFECT
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999764903375081	WITHOUT_CLASSIFICATION	2.350966249185666E-5	DEFECT
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9998797741666308	WITHOUT_CLASSIFICATION	1.2022583336931252E-4	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9973484458955447	WITHOUT_CLASSIFICATION	0.002651554104455302	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999374377817549	WITHOUT_CLASSIFICATION	6.256221824502729E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999374377817549	WITHOUT_CLASSIFICATION	6.256221824502729E-5	DEFECT
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998639276895331	WITHOUT_CLASSIFICATION	1.3607231046679525E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999283236323958	WITHOUT_CLASSIFICATION	7.167636760411715E-5	DEFECT
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9995790954839869	WITHOUT_CLASSIFICATION	4.209045160131488E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.999992049792988	WITHOUT_CLASSIFICATION	7.950207012007322E-6	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999512178735408	WITHOUT_CLASSIFICATION	4.878212645910459E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999512178735408	WITHOUT_CLASSIFICATION	4.878212645910459E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999512178735408	WITHOUT_CLASSIFICATION	4.878212645910459E-5	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999957457439969	WITHOUT_CLASSIFICATION	4.254256003046069E-6	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9994844296642816	WITHOUT_CLASSIFICATION	5.155703357184179E-4	DEFECT
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999825883003841	WITHOUT_CLASSIFICATION	1.7411699615829313E-5	DEFECT
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999923749779283	WITHOUT_CLASSIFICATION	7.6250220718091705E-6	DEFECT
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999913147298543	WITHOUT_CLASSIFICATION	8.685270145720473E-6	DEFECT
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999349137526972	WITHOUT_CLASSIFICATION	6.50862473028233E-5	DEFECT
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9999243025299595	WITHOUT_CLASSIFICATION	7.569747004060491E-5	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.999356864838729	WITHOUT_CLASSIFICATION	6.431351612709716E-4	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999485564089474	WITHOUT_CLASSIFICATION	5.1443591052560954E-5	DEFECT
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999895529841968	WITHOUT_CLASSIFICATION	1.0447015803224067E-5	DEFECT
reset buffer	WITHOUT_CLASSIFICATION	0.9999208674569848	WITHOUT_CLASSIFICATION	7.913254301520759E-5	DEFECT
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9999796914402795	WITHOUT_CLASSIFICATION	2.0308559720518218E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9599781525484998	WITHOUT_CLASSIFICATION	0.040021847451500274	DEFECT
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999434462205843	WITHOUT_CLASSIFICATION	5.655377941565308E-5	DEFECT
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999934094783923	WITHOUT_CLASSIFICATION	6.590521607676598E-6	DEFECT
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999272583943905	WITHOUT_CLASSIFICATION	7.274160560957238E-5	DEFECT
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999655529709653	WITHOUT_CLASSIFICATION	3.4447029034569634E-5	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999970891691665	WITHOUT_CLASSIFICATION	2.9108308333941923E-6	DEFECT
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999537917678863	WITHOUT_CLASSIFICATION	4.620823211361116E-5	DEFECT
FIXME: This is a system error based on errno	DEFECT	0.9349794919277777	WITHOUT_CLASSIFICATION	0.0650205080722222	DEFECT
TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].	DEFECT	0.9985911798151843	DEFECT	0.001408820184815746	WITHOUT_CLASSIFICATION
TODO: make sure it's really safe to not to copy it	DEFECT	0.8840798399636385	WITHOUT_CLASSIFICATION	0.11592016003636156	DEFECT
TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.	DEFECT	0.9991706679246284	DEFECT	8.293320753716275E-4	WITHOUT_CLASSIFICATION
FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe	DEFECT	0.9939778682468637	DEFECT	0.00602213175313627	WITHOUT_CLASSIFICATION
dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812	DEFECT	0.9974114037381279	WITHOUT_CLASSIFICATION	0.00258859626187216	DEFECT
FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.	DEFECT	0.9320349018049714	WITHOUT_CLASSIFICATION	0.06796509819502866	DEFECT
TODO: need to isolate the "current" thread from class creation	DEFECT	0.9123576122108134	WITHOUT_CLASSIFICATION	0.08764238778918665	DEFECT
FIXME: not correct exception	DEFECT	0.55240465891079	DEFECT	0.44759534108921006	WITHOUT_CLASSIFICATION
XXX actually only on windows...	DEFECT	0.9984977594165682	WITHOUT_CLASSIFICATION	0.0015022405834318835	DEFECT
Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?	DEFECT	0.9962919930788194	WITHOUT_CLASSIFICATION	0.0037080069211805	DEFECT
FIXME can't use static; would interfere with other runtimes in the same JVM	DEFECT	0.7569656342240569	DEFECT	0.24303436577594306	WITHOUT_CLASSIFICATION
TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close	DEFECT	0.9638506942804289	WITHOUT_CLASSIFICATION	0.036149305719571	DEFECT
TODO: This is an freopen in MRI, this is close, but not quite the same	DEFECT	0.9588879651018128	DEFECT	0.04111203489818722	WITHOUT_CLASSIFICATION
TODO: sys fail	DEFECT	0.841507569931848	WITHOUT_CLASSIFICATION	0.15849243006815186	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9745031145881363	WITHOUT_CLASSIFICATION	0.02549688541186365	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9745031145881363	WITHOUT_CLASSIFICATION	0.02549688541186365	DEFECT
FIXME: check how ruby 1.9 handles this	DEFECT	0.8804957632461867	WITHOUT_CLASSIFICATION	0.11950423675381325	DEFECT
FIXME: MRI has special case for constants here	DEFECT	0.9979783031845558	WITHOUT_CLASSIFICATION	0.0020216968154441496	DEFECT
FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.	DEFECT	0.9615627063883496	WITHOUT_CLASSIFICATION	0.03843729361165028	DEFECT
ENEBO: Very wrong	DEFECT	0.9997991759318199	WITHOUT_CLASSIFICATION	2.0082406818020218E-4	DEFECT
ENEBO: Very wrong	DEFECT	0.9997991759318199	WITHOUT_CLASSIFICATION	2.0082406818020218E-4	DEFECT
synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code	DEFECT	0.6140216885453674	WITHOUT_CLASSIFICATION	0.3859783114546326	DEFECT
FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...	DEFECT	0.8484467644848439	WITHOUT_CLASSIFICATION	0.15155323551515612	DEFECT
FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.	DEFECT	0.9327761541364987	WITHOUT_CLASSIFICATION	0.06722384586350127	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.7308797654854264	WITHOUT_CLASSIFICATION	0.2691202345145736	DEFECT
TODO: take BigDecimal.mode into account.	DEFECT	0.6166843950254289	WITHOUT_CLASSIFICATION	0.3833156049745711	DEFECT
TODO: full-precision divmod is 1000x slower than MRI!	DEFECT	0.5522275487512474	WITHOUT_CLASSIFICATION	0.44777245124875276	DEFECT
TODO: proper sign	DEFECT	0.8767334311178687	WITHOUT_CLASSIFICATION	0.1232665688821312	DEFECT
FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.	DEFECT	0.724920702396081	DEFECT	0.27507929760391897	WITHOUT_CLASSIFICATION
FIXME: -x flag not supported case 'x' : break;	DEFECT	0.856826966718456	WITHOUT_CLASSIFICATION	0.143173033281544	DEFECT
FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.	DEFECT	0.7465156672051277	DEFECT	0.2534843327948722	WITHOUT_CLASSIFICATION
FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);	DEFECT	0.9033017735351465	WITHOUT_CLASSIFICATION	0.09669822646485339	DEFECT
FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);	DEFECT	0.6066487967637932	WITHOUT_CLASSIFICATION	0.3933512032362068	DEFECT
TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";	DEFECT	0.6241677320381233	DEFECT	0.3758322679618767	WITHOUT_CLASSIFICATION
TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet	DEFECT	0.7834804500740775	WITHOUT_CLASSIFICATION	0.21651954992592254	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
FIXME: this should reset to what it was before	DEFECT	0.9208966909567736	WITHOUT_CLASSIFICATION	0.07910330904322636	DEFECT
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.8995159212886591	WITHOUT_CLASSIFICATION	0.10048407871134094	DEFECT
SSS FIXME: Incorect!	DEFECT	0.990225716457923	WITHOUT_CLASSIFICATION	0.009774283542077097	DEFECT
SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.	DEFECT	0.8836725091783358	WITHOUT_CLASSIFICATION	0.11632749082166419	DEFECT
SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later	DEFECT	0.9934959664708817	WITHOUT_CLASSIFICATION	0.006504033529118356	DEFECT
IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!	DEFECT	0.9998863939310617	WITHOUT_CLASSIFICATION	1.1360606893834766E-4	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.9951131103787462	WITHOUT_CLASSIFICATION	0.004886889621253812	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.9951131103787462	WITHOUT_CLASSIFICATION	0.004886889621253812	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9855823786422864	WITHOUT_CLASSIFICATION	0.014417621357713723	DEFECT
SSS FIXME: Verify semantics of this instruction	DEFECT	0.967307471081829	WITHOUT_CLASSIFICATION	0.03269252891817102	DEFECT
The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?	DEFECT	0.8758467000136689	DEFECT	0.12415329998633107	WITHOUT_CLASSIFICATION
SSS FIXME: For constant arrays, we should never get here!	DEFECT	0.9950433152745948	WITHOUT_CLASSIFICATION	0.00495668472540519	DEFECT
FIXME: This is wrong	DEFECT	0.7839282881915883	WITHOUT_CLASSIFICATION	0.21607171180841162	DEFECT
FIXME: may need to broaden for IPV6 IP address strings	DEFECT	0.9812155856385064	WITHOUT_CLASSIFICATION	0.018784414361493557	DEFECT
XXX Wrong, but will have to do for now	DEFECT	0.9999276488874193	WITHOUT_CLASSIFICATION	7.235111258078927E-5	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.5769891093139643	WITHOUT_CLASSIFICATION	0.4230108906860357	DEFECT
FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();	DEFECT	0.9971864968613902	WITHOUT_CLASSIFICATION	0.002813503138609809	DEFECT
If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).	DEFECT	0.9989071534090033	WITHOUT_CLASSIFICATION	0.0010928465909967539	DEFECT
FIXME: Broken but behaving	DEFECT	0.9857070632236359	DEFECT	0.014292936776364267	WITHOUT_CLASSIFICATION
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7234130746529069	WITHOUT_CLASSIFICATION	0.276586925347093	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7234130746529069	WITHOUT_CLASSIFICATION	0.276586925347093	DEFECT
FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";	DEFECT	0.5326921407997545	DEFECT	0.4673078592002455	WITHOUT_CLASSIFICATION
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!	DEFECT	0.9257408840570589	WITHOUT_CLASSIFICATION	0.07425911594294114	DEFECT
MRI 1.8 behavior: this combination of flags is not allowed	DEFECT	0.9987713695710301	WITHOUT_CLASSIFICATION	0.0012286304289698409	DEFECT
FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?	DEFECT	0.9117143533664974	DEFECT	0.08828564663350262	WITHOUT_CLASSIFICATION
TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.	DEFECT	0.9428828967418369	DEFECT	0.05711710325816305	WITHOUT_CLASSIFICATION
This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"	DEFECT	0.9859884417924805	WITHOUT_CLASSIFICATION	0.01401155820751954	DEFECT
We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff	DEFECT	0.6253262824601503	WITHOUT_CLASSIFICATION	0.37467371753984974	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9855823786422864	WITHOUT_CLASSIFICATION	0.014417621357713723	DEFECT
This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.	DEFECT	0.9985540003940271	WITHOUT_CLASSIFICATION	0.0014459996059729102	DEFECT
FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.	DEFECT	0.7797381270876268	WITHOUT_CLASSIFICATION	0.22026187291237317	DEFECT
SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!	DEFECT	0.7627910973404215	WITHOUT_CLASSIFICATION	0.23720890265957842	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.7308797654854264	WITHOUT_CLASSIFICATION	0.2691202345145736	DEFECT
TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";	DEFECT	0.9217754046153234	DEFECT	0.07822459538467665	WITHOUT_CLASSIFICATION
FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not	DEFECT	0.8201151415262722	DEFECT	0.17988485847372787	WITHOUT_CLASSIFICATION
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.8995159212886591	WITHOUT_CLASSIFICATION	0.10048407871134094	DEFECT
zero args with block FIXME: omit args index; subtract one from normal block index	DEFECT	0.9993817533959204	WITHOUT_CLASSIFICATION	6.182466040796277E-4	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
FIXME: Broken but behaving	DEFECT	0.9857070632236359	DEFECT	0.014292936776364267	WITHOUT_CLASSIFICATION
TODO: we loose encoding information here, fix it	DEFECT	0.7726768024691234	DEFECT	0.22732319753087654	WITHOUT_CLASSIFICATION
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
TODO: don't require pop	DEFECT	0.8795703834451113	WITHOUT_CLASSIFICATION	0.12042961655488876	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.5769891093139643	WITHOUT_CLASSIFICATION	0.4230108906860357	DEFECT
vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue	DEFECT	0.9870977859382507	WITHOUT_CLASSIFICATION	0.012902214061749191	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7234130746529069	WITHOUT_CLASSIFICATION	0.276586925347093	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7234130746529069	WITHOUT_CLASSIFICATION	0.276586925347093	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999621459122268	WITHOUT_CLASSIFICATION	3.785408777328843E-5	DEFECT
TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).	DEFECT	0.7776776533190012	WITHOUT_CLASSIFICATION	0.22232234668099884	DEFECT
