set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999850165870404	WITHOUT_CLASSIFICATION	1.4983412959542595E-5	DEFECT
line 335	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9994728058826301	WITHOUT_CLASSIFICATION	5.271941173698223E-4	DEFECT
line 362	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
line 391	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
^D	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
^Z	WITHOUT_CLASSIFICATION	0.9999628296615084	WITHOUT_CLASSIFICATION	3.717033849169033E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999933807799454	WITHOUT_CLASSIFICATION	6.619220054599709E-6	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999933807799454	WITHOUT_CLASSIFICATION	6.619220054599709E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
return result	WITHOUT_CLASSIFICATION	0.9999838550960781	WITHOUT_CLASSIFICATION	1.6144903921846726E-5	DEFECT
name	WITHOUT_CLASSIFICATION	0.9999618575310718	WITHOUT_CLASSIFICATION	3.814246892814348E-5	DEFECT
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9997183467440828	WITHOUT_CLASSIFICATION	2.8165325591716006E-4	DEFECT
Accessor methods.	WITHOUT_CLASSIFICATION	0.999859383305149	WITHOUT_CLASSIFICATION	1.4061669485109348E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9997933293415583	WITHOUT_CLASSIFICATION	2.066706584417919E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9997933293415583	WITHOUT_CLASSIFICATION	2.066706584417919E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9997933293415583	WITHOUT_CLASSIFICATION	2.066706584417919E-4	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9997933293415583	WITHOUT_CLASSIFICATION	2.066706584417919E-4	DEFECT
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9984642820607234	WITHOUT_CLASSIFICATION	0.00153571793927664	DEFECT
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9995418935606846	WITHOUT_CLASSIFICATION	4.581064393153575E-4	DEFECT
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999498932406112	WITHOUT_CLASSIFICATION	5.0106759388795706E-5	DEFECT
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9995021304565772	WITHOUT_CLASSIFICATION	4.978695434227305E-4	DEFECT
Version information:	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999303799381385	WITHOUT_CLASSIFICATION	6.962006186158968E-5	DEFECT
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999017790706956	WITHOUT_CLASSIFICATION	9.822092930443799E-5	DEFECT
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998990214332574	WITHOUT_CLASSIFICATION	1.0097856674261426E-4	DEFECT
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999660230669711	WITHOUT_CLASSIFICATION	3.397693302882342E-5	DEFECT
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9935173756709683	WITHOUT_CLASSIFICATION	0.0064826243290316546	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998093920813464	WITHOUT_CLASSIFICATION	1.9060791865345867E-4	DEFECT
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999697148987772	WITHOUT_CLASSIFICATION	3.0285101222738262E-5	DEFECT
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9994117827895386	WITHOUT_CLASSIFICATION	5.882172104613822E-4	DEFECT
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999476122925957	WITHOUT_CLASSIFICATION	5.238770740434305E-5	DEFECT
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997864971148219	WITHOUT_CLASSIFICATION	2.1350288517805077E-4	DEFECT
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9982466324130234	WITHOUT_CLASSIFICATION	0.0017533675869766607	DEFECT
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999922897146236	WITHOUT_CLASSIFICATION	7.710285376465122E-6	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9997933293415583	WITHOUT_CLASSIFICATION	2.066706584417919E-4	DEFECT
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998442590182228	WITHOUT_CLASSIFICATION	1.5574098177713455E-4	DEFECT
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999910150707546	WITHOUT_CLASSIFICATION	8.98492924531472E-6	DEFECT
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997870340415639	WITHOUT_CLASSIFICATION	2.1296595843598543E-4	DEFECT
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999567871735624	WITHOUT_CLASSIFICATION	4.3212826437594344E-4	DEFECT
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998435421563212	WITHOUT_CLASSIFICATION	1.564578436787315E-4	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9998648255486988	WITHOUT_CLASSIFICATION	1.351744513013112E-4	DEFECT
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9998431326144269	WITHOUT_CLASSIFICATION	1.568673855730238E-4	DEFECT
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999974741338626	WITHOUT_CLASSIFICATION	2.5258661374120513E-5	DEFECT
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9998316464256979	WITHOUT_CLASSIFICATION	1.6835357430208375E-4	DEFECT
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999040463173132	WITHOUT_CLASSIFICATION	9.595368268674594E-5	DEFECT
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9923436663058748	WITHOUT_CLASSIFICATION	0.007656333694125318	DEFECT
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998636194988957	WITHOUT_CLASSIFICATION	1.3638050110440053E-4	DEFECT
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
IOT is also 6	WITHOUT_CLASSIFICATION	0.9999068241115567	WITHOUT_CLASSIFICATION	9.317588844325804E-5	DEFECT
CLD is also 20	WITHOUT_CLASSIFICATION	0.999881604774065	WITHOUT_CLASSIFICATION	1.1839522593513144E-4	DEFECT
RubySignal	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9996094860415672	WITHOUT_CLASSIFICATION	3.9051395843283125E-4	DEFECT
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9995659722598702	WITHOUT_CLASSIFICATION	4.34027740129764E-4	DEFECT
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9996448339636165	WITHOUT_CLASSIFICATION	3.551660363835571E-4	DEFECT
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9988099907281403	WITHOUT_CLASSIFICATION	0.001190009271859699	DEFECT
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998540803420657	WITHOUT_CLASSIFICATION	1.4591965793432372E-4	DEFECT
io.finish();	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9994898401750516	WITHOUT_CLASSIFICATION	5.101598249484192E-4	DEFECT
hmm...	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999720344610233	WITHOUT_CLASSIFICATION	2.796553897670076E-5	DEFECT
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999628061815309	WITHOUT_CLASSIFICATION	3.719381846917923E-5	DEFECT
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998839747193715	WITHOUT_CLASSIFICATION	1.1602528062838914E-4	DEFECT
float number of seconds	WITHOUT_CLASSIFICATION	0.999838710262871	WITHOUT_CLASSIFICATION	1.6128973712902476E-4	DEFECT
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9994554911034719	WITHOUT_CLASSIFICATION	5.445088965281454E-4	DEFECT
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9990530185989137	WITHOUT_CLASSIFICATION	9.469814010863162E-4	DEFECT
Time class methods	WITHOUT_CLASSIFICATION	0.9997673484288687	WITHOUT_CLASSIFICATION	2.3265157113134787E-4	DEFECT
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999100703160725	WITHOUT_CLASSIFICATION	8.992968392750986E-4	DEFECT
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9997113277917073	WITHOUT_CLASSIFICATION	2.8867220829267365E-4	DEFECT
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999234485950906	WITHOUT_CLASSIFICATION	7.655140490945612E-5	DEFECT
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9993388435748652	WITHOUT_CLASSIFICATION	6.611564251347036E-4	DEFECT
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9997959972990033	WITHOUT_CLASSIFICATION	2.0400270099665547E-4	DEFECT
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9993397538164529	WITHOUT_CLASSIFICATION	6.602461835471153E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997686082778668	WITHOUT_CLASSIFICATION	2.3139172213325674E-4	DEFECT
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999452942899927	WITHOUT_CLASSIFICATION	5.470571000728806E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9997456115068638	WITHOUT_CLASSIFICATION	2.5438849313622584E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9996805256377111	WITHOUT_CLASSIFICATION	3.194743622888334E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9996805256377111	WITHOUT_CLASSIFICATION	3.194743622888334E-4	DEFECT
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999618344144117	WITHOUT_CLASSIFICATION	3.816558558826578E-5	DEFECT
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9996478440502129	WITHOUT_CLASSIFICATION	3.5215594978704664E-4	DEFECT
Pad with a 0	WITHOUT_CLASSIFICATION	0.9998437089271952	WITHOUT_CLASSIFICATION	1.5629107280478564E-4	DEFECT
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999399987400412	WITHOUT_CLASSIFICATION	6.000125995879792E-4	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9898222374557992	WITHOUT_CLASSIFICATION	0.010177762544200854	DEFECT
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9906502351208565	WITHOUT_CLASSIFICATION	0.009349764879143563	DEFECT
???	WITHOUT_CLASSIFICATION	0.9999656047910109	WITHOUT_CLASSIFICATION	3.439520898907136E-5	DEFECT
PID	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999152263994625	WITHOUT_CLASSIFICATION	8.477360053756474E-5	DEFECT
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999165345076853	WITHOUT_CLASSIFICATION	8.346549231473711E-5	DEFECT
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.999992321943987	WITHOUT_CLASSIFICATION	7.678056012982348E-6	DEFECT
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999361551480039	WITHOUT_CLASSIFICATION	6.384485199603086E-5	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9996941105141315	WITHOUT_CLASSIFICATION	3.0588948586856586E-4	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9996941105141315	WITHOUT_CLASSIFICATION	3.0588948586856586E-4	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9996941105141315	WITHOUT_CLASSIFICATION	3.0588948586856586E-4	DEFECT
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9998063017329357	WITHOUT_CLASSIFICATION	1.9369826706425357E-4	DEFECT
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9998209920707044	WITHOUT_CLASSIFICATION	1.7900792929553518E-4	DEFECT
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999643131258587	WITHOUT_CLASSIFICATION	3.568687414122826E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9847991016026393	WITHOUT_CLASSIFICATION	0.015200898397360645	DEFECT
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9988723040700929	WITHOUT_CLASSIFICATION	0.0011276959299071625	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999847590077607	WITHOUT_CLASSIFICATION	1.5240992239246086E-5	DEFECT
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9969049641573211	WITHOUT_CLASSIFICATION	0.0030950358426788476	DEFECT
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999406835908669	WITHOUT_CLASSIFICATION	5.931640913309614E-4	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998463786244989	WITHOUT_CLASSIFICATION	1.5362137550112775E-4	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998872545491779	WITHOUT_CLASSIFICATION	1.1274545082200144E-4	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998945877270234	WITHOUT_CLASSIFICATION	1.0541227297647472E-4	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998945877270234	WITHOUT_CLASSIFICATION	1.0541227297647472E-4	DEFECT
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998515584795198	WITHOUT_CLASSIFICATION	1.4844152048029436E-4	DEFECT
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9994782007609297	WITHOUT_CLASSIFICATION	5.217992390703436E-4	DEFECT
root fiber	WITHOUT_CLASSIFICATION	0.9999585234802185	WITHOUT_CLASSIFICATION	4.147651978151971E-5	DEFECT
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9996807839865729	WITHOUT_CLASSIFICATION	3.192160134271834E-4	DEFECT
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.999823640207489	WITHOUT_CLASSIFICATION	1.7635979251097824E-4	DEFECT
extras flag	WITHOUT_CLASSIFICATION	0.9998942957533098	WITHOUT_CLASSIFICATION	1.0570424669013704E-4	DEFECT
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
...nothing	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
utility method	WITHOUT_CLASSIFICATION	0.9999735373672232	WITHOUT_CLASSIFICATION	2.6462632776851555E-5	DEFECT
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9998814461973147	WITHOUT_CLASSIFICATION	1.1855380268539255E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999694174962215	WITHOUT_CLASSIFICATION	3.0582503778509055E-5	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998046196449091	WITHOUT_CLASSIFICATION	1.9538035509090494E-4	DEFECT
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9946542768921336	WITHOUT_CLASSIFICATION	0.00534572310786647	DEFECT
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999537789149969	WITHOUT_CLASSIFICATION	4.622108500321975E-5	DEFECT
MRI does it!	WITHOUT_CLASSIFICATION	0.9992721164749636	WITHOUT_CLASSIFICATION	7.278835250364714E-4	DEFECT
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997409534205605	WITHOUT_CLASSIFICATION	2.5904657943958656E-4	DEFECT
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9997750737777809	WITHOUT_CLASSIFICATION	2.2492622221910883E-4	DEFECT
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.991976854890882	WITHOUT_CLASSIFICATION	0.008023145109117997	DEFECT
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9997961867641608	WITHOUT_CLASSIFICATION	2.0381323583920145E-4	DEFECT
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999401606492894	WITHOUT_CLASSIFICATION	5.983935071061648E-5	DEFECT
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9997861472160987	WITHOUT_CLASSIFICATION	2.1385278390133642E-4	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998491186092366	WITHOUT_CLASSIFICATION	1.5088139076335316E-4	DEFECT
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9996656515569375	WITHOUT_CLASSIFICATION	3.343484430624636E-4	DEFECT
recheck condition	WITHOUT_CLASSIFICATION	0.996988134520433	WITHOUT_CLASSIFICATION	0.003011865479567017	DEFECT
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998803700585959	WITHOUT_CLASSIFICATION	1.1962994140406889E-4	DEFECT
Construct key services	WITHOUT_CLASSIFICATION	0.9998893203899781	WITHOUT_CLASSIFICATION	1.1067961002186819E-4	DEFECT
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.998311943331967	WITHOUT_CLASSIFICATION	0.0016880566680329318	DEFECT
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998884751300655	WITHOUT_CLASSIFICATION	1.1152486993447908E-4	DEFECT
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999661904675069	WITHOUT_CLASSIFICATION	3.3809532493092156E-5	DEFECT
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999422553193212	WITHOUT_CLASSIFICATION	5.7744680678768065E-5	DEFECT
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9993912513658293	WITHOUT_CLASSIFICATION	6.087486341707125E-4	DEFECT
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9997591961180887	WITHOUT_CLASSIFICATION	2.4080388191119492E-4	DEFECT
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999757829133242	WITHOUT_CLASSIFICATION	2.4217086675764817E-5	DEFECT
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9992681537220739	WITHOUT_CLASSIFICATION	7.318462779259918E-4	DEFECT
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9992286767542875	WITHOUT_CLASSIFICATION	7.713232457124834E-4	DEFECT
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9998880036676373	WITHOUT_CLASSIFICATION	1.1199633236272048E-4	DEFECT
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9986094704757765	WITHOUT_CLASSIFICATION	0.001390529524223471	DEFECT
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999456564771017	WITHOUT_CLASSIFICATION	5.4343522898344454E-5	DEFECT
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9996534581713344	WITHOUT_CLASSIFICATION	3.465418286654556E-4	DEFECT
determine spacing	WITHOUT_CLASSIFICATION	0.9999282718917961	WITHOUT_CLASSIFICATION	7.17281082038187E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9998712903933397	WITHOUT_CLASSIFICATION	1.2870960666034136E-4	DEFECT
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999398297297175	WITHOUT_CLASSIFICATION	6.017027028245764E-5	DEFECT
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9969510687633146	WITHOUT_CLASSIFICATION	0.0030489312366853327	DEFECT
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9994500645633293	WITHOUT_CLASSIFICATION	5.49935436670789E-4	DEFECT
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999496566805957	WITHOUT_CLASSIFICATION	5.034331940436778E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9848976211133531	WITHOUT_CLASSIFICATION	0.01510237888664687	DEFECT
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999117063484272	WITHOUT_CLASSIFICATION	8.829365157282864E-5	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9997637821751465	WITHOUT_CLASSIFICATION	2.3621782485346872E-4	DEFECT
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999803047501815	WITHOUT_CLASSIFICATION	1.9695249818482636E-5	DEFECT
Default objects	WITHOUT_CLASSIFICATION	0.9997830914478362	WITHOUT_CLASSIFICATION	2.1690855216394502E-4	DEFECT
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9990945059797535	WITHOUT_CLASSIFICATION	9.054940202464738E-4	DEFECT
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999292694447042	WITHOUT_CLASSIFICATION	7.073055529581905E-5	DEFECT
Java support	WITHOUT_CLASSIFICATION	0.9996190121676063	WITHOUT_CLASSIFICATION	3.8098783239368567E-4	DEFECT
Parser stats	WITHOUT_CLASSIFICATION	0.999862862986094	WITHOUT_CLASSIFICATION	1.3713701390608718E-4	DEFECT
Compilation	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9987348637568458	WITHOUT_CLASSIFICATION	0.001265136243154114	DEFECT
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9981992525345401	WITHOUT_CLASSIFICATION	0.001800747465459877	DEFECT
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998306000478095	WITHOUT_CLASSIFICATION	1.6939995219047752E-4	DEFECT
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998014944982385	WITHOUT_CLASSIFICATION	1.9850550176153848E-4	DEFECT
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9985334941864775	WITHOUT_CLASSIFICATION	0.0014665058135223917	DEFECT
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9996259948305379	WITHOUT_CLASSIFICATION	3.7400516946204786E-4	DEFECT
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998281547709439	WITHOUT_CLASSIFICATION	1.7184522905613328E-4	DEFECT
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.996778383676652	WITHOUT_CLASSIFICATION	0.0032216163233479383	DEFECT
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9994757650324249	WITHOUT_CLASSIFICATION	5.242349675750624E-4	DEFECT
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9972539827548026	WITHOUT_CLASSIFICATION	0.0027460172451973758	DEFECT
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9997331719680268	WITHOUT_CLASSIFICATION	2.6682803197316293E-4	DEFECT
quoted-printable	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
default options	WITHOUT_CLASSIFICATION	0.9999790528600546	WITHOUT_CLASSIFICATION	2.0947139945441873E-5	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.9999638187661934	WITHOUT_CLASSIFICATION	3.6181233806645944E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.9999638187661934	WITHOUT_CLASSIFICATION	3.6181233806645944E-5	DEFECT
long name option	WITHOUT_CLASSIFICATION	0.9998690635194329	WITHOUT_CLASSIFICATION	1.3093648056703398E-4	DEFECT
conversion	WITHOUT_CLASSIFICATION	0.9999629946454531	WITHOUT_CLASSIFICATION	3.700535454696621E-5	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9997843252899825	WITHOUT_CLASSIFICATION	2.1567471001757678E-4	DEFECT
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9994984358489117	WITHOUT_CLASSIFICATION	5.015641510882463E-4	DEFECT
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999498698778299	WITHOUT_CLASSIFICATION	5.0130122170103606E-5	DEFECT
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9992084896691084	WITHOUT_CLASSIFICATION	7.915103308915965E-4	DEFECT
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998858944193152	WITHOUT_CLASSIFICATION	1.1410558068482602E-4	DEFECT
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999752907851989	WITHOUT_CLASSIFICATION	2.470921480103891E-5	DEFECT
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998441155052463	WITHOUT_CLASSIFICATION	1.5588449475361466E-4	DEFECT
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999945914136343	WITHOUT_CLASSIFICATION	5.408586365684164E-6	DEFECT
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999099973334891	WITHOUT_CLASSIFICATION	9.000266651090285E-5	DEFECT
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9941953069206882	WITHOUT_CLASSIFICATION	0.00580469307931169	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9646663286897099	WITHOUT_CLASSIFICATION	0.03533367131029012	DEFECT
must not reallocate	WITHOUT_CLASSIFICATION	0.9995411226586525	WITHOUT_CLASSIFICATION	4.5887734134750555E-4	DEFECT
Illegal combination	WITHOUT_CLASSIFICATION	0.9998596013237605	WITHOUT_CLASSIFICATION	1.4039867623942955E-4	DEFECT
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9997355235820631	WITHOUT_CLASSIFICATION	2.644764179368343E-4	DEFECT
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999473352492959	WITHOUT_CLASSIFICATION	5.2664750704006244E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999616751061857	WITHOUT_CLASSIFICATION	3.8324893814261646E-5	DEFECT
len + margin	WITHOUT_CLASSIFICATION	0.9997728890462734	WITHOUT_CLASSIFICATION	2.2711095372670618E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.999985456296351	WITHOUT_CLASSIFICATION	1.4543703649032488E-5	DEFECT
block given	WITHOUT_CLASSIFICATION	0.999985456296351	WITHOUT_CLASSIFICATION	1.4543703649032488E-5	DEFECT
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999187931630243	WITHOUT_CLASSIFICATION	8.12068369756745E-5	DEFECT
string given	WITHOUT_CLASSIFICATION	0.9999823653905117	WITHOUT_CLASSIFICATION	1.763460948837324E-5	DEFECT
hash given	WITHOUT_CLASSIFICATION	0.9999859435319615	WITHOUT_CLASSIFICATION	1.4056468038483921E-5	DEFECT
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.997524422235196	WITHOUT_CLASSIFICATION	0.002475577764804074	DEFECT
substring longer than string	WITHOUT_CLASSIFICATION	0.9997696945941081	WITHOUT_CLASSIFICATION	2.303054058918758E-4	DEFECT
rb_str_substr	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999761638384415	WITHOUT_CLASSIFICATION	2.3836161558463232E-5	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999761638384415	WITHOUT_CLASSIFICATION	2.3836161558463232E-5	DEFECT
rb_str_splice	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9521015196886523	WITHOUT_CLASSIFICATION	0.04789848031134772	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999743947437965	WITHOUT_CLASSIFICATION	2.5605256203543962E-5	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999743947437965	WITHOUT_CLASSIFICATION	2.5605256203543962E-5	DEFECT
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9994457609970578	WITHOUT_CLASSIFICATION	5.542390029421391E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9994496464574116	WITHOUT_CLASSIFICATION	5.503535425883778E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9994496464574116	WITHOUT_CLASSIFICATION	5.503535425883778E-4	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999777028033145	WITHOUT_CLASSIFICATION	2.2297196685495216E-5	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999777028033145	WITHOUT_CLASSIFICATION	2.2297196685495216E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
QTRUE	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999089957853712	WITHOUT_CLASSIFICATION	9.100421462880351E-5	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999901748251833	WITHOUT_CLASSIFICATION	9.825174816666294E-6	DEFECT
long size bits in byte	WITHOUT_CLASSIFICATION	0.9997094252230653	WITHOUT_CLASSIFICATION	2.905747769347688E-4	DEFECT
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9997345040235804	WITHOUT_CLASSIFICATION	2.6549597641954844E-4	DEFECT
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999479161912326	WITHOUT_CLASSIFICATION	5.20838087673987E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998999113474096	WITHOUT_CLASSIFICATION	1.0008865259041753E-4	DEFECT
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9997640334260622	WITHOUT_CLASSIFICATION	2.359665739378024E-4	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998999113474096	WITHOUT_CLASSIFICATION	1.0008865259041753E-4	DEFECT
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9966979187748538	WITHOUT_CLASSIFICATION	0.0033020812251461887	DEFECT
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9998771750769462	WITHOUT_CLASSIFICATION	1.2282492305378862E-4	DEFECT
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998643664951049	WITHOUT_CLASSIFICATION	1.3563350489510795E-4	DEFECT
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9997864882658286	WITHOUT_CLASSIFICATION	2.135117341714314E-4	DEFECT
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999414826676812	WITHOUT_CLASSIFICATION	5.851733231872881E-5	DEFECT
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9966971794607338	WITHOUT_CLASSIFICATION	0.003302820539266306	DEFECT
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998403692946302	WITHOUT_CLASSIFICATION	1.5963070536981064E-4	DEFECT
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999260861269878	WITHOUT_CLASSIFICATION	7.391387301221079E-4	DEFECT
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995551811267326	WITHOUT_CLASSIFICATION	4.4481887326741247E-4	DEFECT
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9996850235101369	WITHOUT_CLASSIFICATION	3.1497648986312485E-4	DEFECT
file not given	WITHOUT_CLASSIFICATION	0.999690555657479	WITHOUT_CLASSIFICATION	3.094443425210488E-4	DEFECT
string to eval	WITHOUT_CLASSIFICATION	0.9999085701000703	WITHOUT_CLASSIFICATION	9.142989992967664E-5	DEFECT
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9996455703492336	WITHOUT_CLASSIFICATION	3.544296507663197E-4	DEFECT
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999078348184581	WITHOUT_CLASSIFICATION	9.216518154190036E-5	DEFECT
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.998422012433642	WITHOUT_CLASSIFICATION	0.0015779875663579491	DEFECT
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9992287540769238	WITHOUT_CLASSIFICATION	7.712459230761248E-4	DEFECT
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999294403195628	WITHOUT_CLASSIFICATION	7.055968043720048E-4	DEFECT
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9987967718284891	WITHOUT_CLASSIFICATION	0.0012032281715108023	DEFECT
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9626177775572723	WITHOUT_CLASSIFICATION	0.037382222442727646	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9990849796549008	WITHOUT_CLASSIFICATION	9.15020345099126E-4	DEFECT
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999769270139569	WITHOUT_CLASSIFICATION	2.3072986043055877E-5	DEFECT
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999876114106252	WITHOUT_CLASSIFICATION	1.238858937490913E-5	DEFECT
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998541437321903	WITHOUT_CLASSIFICATION	1.4585626780979266E-4	DEFECT
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999440689952819	WITHOUT_CLASSIFICATION	5.593100471799953E-5	DEFECT
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998880719568924	WITHOUT_CLASSIFICATION	1.1192804310753737E-4	DEFECT
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999694646423708	WITHOUT_CLASSIFICATION	3.053535762922809E-5	DEFECT
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999702893052556	WITHOUT_CLASSIFICATION	2.971069474442093E-5	DEFECT
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999286686346098	WITHOUT_CLASSIFICATION	7.133136539012954E-5	DEFECT
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9998923848691016	WITHOUT_CLASSIFICATION	1.0761513089843873E-4	DEFECT
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999481435550843	WITHOUT_CLASSIFICATION	5.185644491571793E-5	DEFECT
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999575296615576	WITHOUT_CLASSIFICATION	4.247033844240211E-5	DEFECT
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9997985241692549	WITHOUT_CLASSIFICATION	2.0147583074526124E-4	DEFECT
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9998818980888187	WITHOUT_CLASSIFICATION	1.1810191118133987E-4	DEFECT
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999007360313098	WITHOUT_CLASSIFICATION	9.926396869020073E-5	DEFECT
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998289830870917	WITHOUT_CLASSIFICATION	1.7101691290829322E-4	DEFECT
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9998967338875108	WITHOUT_CLASSIFICATION	1.0326611248921876E-4	DEFECT
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999532737211926	WITHOUT_CLASSIFICATION	4.672627880735493E-5	DEFECT
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998289830870917	WITHOUT_CLASSIFICATION	1.7101691290829322E-4	DEFECT
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999442018617157	WITHOUT_CLASSIFICATION	5.579813828428537E-5	DEFECT
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9998782694200197	WITHOUT_CLASSIFICATION	1.2173057998034469E-4	DEFECT
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9998976860970868	WITHOUT_CLASSIFICATION	1.023139029132007E-4	DEFECT
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9998964564966947	WITHOUT_CLASSIFICATION	1.0354350330527896E-4	DEFECT
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999627723340382	WITHOUT_CLASSIFICATION	3.722766596170534E-5	DEFECT
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9998455609063247	WITHOUT_CLASSIFICATION	1.5443909367534263E-4	DEFECT
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9998820352665798	WITHOUT_CLASSIFICATION	1.1796473342007058E-4	DEFECT
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999651604108319	WITHOUT_CLASSIFICATION	3.4839589168079324E-5	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998227361285397	WITHOUT_CLASSIFICATION	1.772638714602571E-4	DEFECT
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9997430593090008	WITHOUT_CLASSIFICATION	2.569406909991865E-4	DEFECT
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9998591353353776	WITHOUT_CLASSIFICATION	1.4086466462234065E-4	DEFECT
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999870169030419	WITHOUT_CLASSIFICATION	1.2983096958156496E-5	DEFECT
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9987540541066114	WITHOUT_CLASSIFICATION	0.0012459458933886287	DEFECT
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999629547145701	WITHOUT_CLASSIFICATION	3.704528543000714E-5	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.9999933031700227	WITHOUT_CLASSIFICATION	6.696829977383659E-6	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.9999933031700227	WITHOUT_CLASSIFICATION	6.696829977383659E-6	DEFECT
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9994334948734537	WITHOUT_CLASSIFICATION	5.665051265463718E-4	DEFECT
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997297292657445	WITHOUT_CLASSIFICATION	2.702707342554914E-4	DEFECT
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9797858128527269	WITHOUT_CLASSIFICATION	0.020214187147273018	DEFECT
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999416349282262	WITHOUT_CLASSIFICATION	5.836507177373402E-5	DEFECT
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9998177916197206	WITHOUT_CLASSIFICATION	1.8220838027926066E-4	DEFECT
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999444327056393	WITHOUT_CLASSIFICATION	5.556729436072575E-5	DEFECT
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9696933702945526	WITHOUT_CLASSIFICATION	0.030306629705447292	DEFECT
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999517031607124	WITHOUT_CLASSIFICATION	4.829683928772075E-5	DEFECT
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9994883803612084	WITHOUT_CLASSIFICATION	5.116196387917024E-4	DEFECT
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999572530259053	WITHOUT_CLASSIFICATION	4.2746974094687724E-5	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999954845712595	WITHOUT_CLASSIFICATION	4.515428740491742E-6	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999954845712595	WITHOUT_CLASSIFICATION	4.515428740491742E-6	DEFECT
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9995161199432753	WITHOUT_CLASSIFICATION	4.838800567247809E-4	DEFECT
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9991269146934899	WITHOUT_CLASSIFICATION	8.730853065101071E-4	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9984208218808059	WITHOUT_CLASSIFICATION	0.001579178119193991	DEFECT
Create Constants class	WITHOUT_CLASSIFICATION	0.9997008128091481	WITHOUT_CLASSIFICATION	2.991871908518748E-4	DEFECT
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999657279773928	WITHOUT_CLASSIFICATION	3.427202260725425E-5	DEFECT
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999834819142559	WITHOUT_CLASSIFICATION	1.6518085744124732E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.999944815576564	WITHOUT_CLASSIFICATION	5.5184423436033285E-5	DEFECT
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9994056073208497	WITHOUT_CLASSIFICATION	5.943926791502064E-4	DEFECT
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999976579922983	WITHOUT_CLASSIFICATION	2.3420077016264855E-6	DEFECT
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997631797672362	WITHOUT_CLASSIFICATION	2.3682023276380525E-4	DEFECT
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9998022249657559	WITHOUT_CLASSIFICATION	1.9777503424406887E-4	DEFECT
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.998898430424093	WITHOUT_CLASSIFICATION	0.001101569575907018	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9999216408741333	WITHOUT_CLASSIFICATION	7.83591258667064E-5	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9999216408741333	WITHOUT_CLASSIFICATION	7.83591258667064E-5	DEFECT
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.997799193120939	WITHOUT_CLASSIFICATION	0.002200806879061107	DEFECT
Should we do anything?	WITHOUT_CLASSIFICATION	0.9999924040949472	WITHOUT_CLASSIFICATION	7.595905052837933E-6	DEFECT
File class methods	WITHOUT_CLASSIFICATION	0.999770261070121	WITHOUT_CLASSIFICATION	2.2973892987906578E-4	DEFECT
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9990493892831718	WITHOUT_CLASSIFICATION	9.506107168281643E-4	DEFECT
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9997729331926447	WITHOUT_CLASSIFICATION	2.2706680735523946E-4	DEFECT
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998071238352227	WITHOUT_CLASSIFICATION	1.928761647772791E-4	DEFECT
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9990274617676794	WITHOUT_CLASSIFICATION	9.725382323205284E-4	DEFECT
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998830478913914	WITHOUT_CLASSIFICATION	1.1695210860864123E-4	DEFECT
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9945355455424265	WITHOUT_CLASSIFICATION	0.005464454457573504	DEFECT
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9998889086980789	WITHOUT_CLASSIFICATION	1.1109130192109853E-4	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9984208218808059	WITHOUT_CLASSIFICATION	0.001579178119193991	DEFECT
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9991585296809454	WITHOUT_CLASSIFICATION	8.41470319054559E-4	DEFECT
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9942110991258366	WITHOUT_CLASSIFICATION	0.005788900874163491	DEFECT
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999892187329734	WITHOUT_CLASSIFICATION	1.0781267026541846E-5	DEFECT
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9998417899331724	WITHOUT_CLASSIFICATION	1.582100668275429E-4	DEFECT
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998836537392899	WITHOUT_CLASSIFICATION	1.1634626071015948E-4	DEFECT
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9998582177675231	WITHOUT_CLASSIFICATION	1.4178223247686807E-4	DEFECT
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999814420381791	WITHOUT_CLASSIFICATION	1.855796182093154E-5	DEFECT
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.99988610071006	WITHOUT_CLASSIFICATION	1.1389928993999384E-4	DEFECT
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9995294649137931	WITHOUT_CLASSIFICATION	4.705350862069234E-4	DEFECT
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999422387144091	WITHOUT_CLASSIFICATION	5.7761285590846786E-5	DEFECT
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999422387144091	WITHOUT_CLASSIFICATION	5.7761285590846786E-5	DEFECT
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999713878325052	WITHOUT_CLASSIFICATION	2.8612167494885295E-5	DEFECT
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999798669426363	WITHOUT_CLASSIFICATION	2.0133057363710223E-5	DEFECT
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9996459051849382	WITHOUT_CLASSIFICATION	3.540948150617298E-4	DEFECT
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999766190427256	WITHOUT_CLASSIFICATION	2.3380957274407143E-4	DEFECT
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9997954320906153	WITHOUT_CLASSIFICATION	2.045679093846337E-4	DEFECT
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9963545500997295	WITHOUT_CLASSIFICATION	0.0036454499002704873	DEFECT
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb: readable	WITHOUT_CLASSIFICATION	0.9998585041302079	WITHOUT_CLASSIFICATION	1.4149586979208338E-4	DEFECT
rename is successful	WITHOUT_CLASSIFICATION	0.9996890156918553	WITHOUT_CLASSIFICATION	3.1098430814470505E-4	DEFECT
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9988814225987563	WITHOUT_CLASSIFICATION	0.001118577401243644	DEFECT
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999884285599709	WITHOUT_CLASSIFICATION	1.1571440029076317E-5	DEFECT
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999927584291337	WITHOUT_CLASSIFICATION	7.241570866306496E-5	DEFECT
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9968302503277043	WITHOUT_CLASSIFICATION	0.0031697496722957693	DEFECT
RubyContinuation	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9993920153457994	WITHOUT_CLASSIFICATION	6.079846542006463E-4	DEFECT
16 ?	WITHOUT_CLASSIFICATION	0.9999688580848228	WITHOUT_CLASSIFICATION	3.1141915177065484E-5	DEFECT
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9996001979695711	WITHOUT_CLASSIFICATION	3.9980203042884525E-4	DEFECT
size + 1;	WITHOUT_CLASSIFICATION	0.9999384388046424	WITHOUT_CLASSIFICATION	6.156119535757853E-5	DEFECT
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9802963881007976	WITHOUT_CLASSIFICATION	0.019703611899202434	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
put implementation	WITHOUT_CLASSIFICATION	0.9997635494426046	WITHOUT_CLASSIFICATION	2.3645055739546304E-4	DEFECT
get implementation	WITHOUT_CLASSIFICATION	0.9997686940339638	WITHOUT_CLASSIFICATION	2.313059660361323E-4	DEFECT
specialized for value	WITHOUT_CLASSIFICATION	0.9998232057109679	WITHOUT_CLASSIFICATION	1.767942890319421E-4	DEFECT
delete implementation	WITHOUT_CLASSIFICATION	0.9998170553357686	WITHOUT_CLASSIFICATION	1.8294466423132575E-4	DEFECT
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999657529159832	WITHOUT_CLASSIFICATION	3.424708401666919E-5	DEFECT
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9998813542141515	WITHOUT_CLASSIFICATION	1.1864578584853131E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
update the hash value	WITHOUT_CLASSIFICATION	0.9999354132578689	WITHOUT_CLASSIFICATION	6.458674213101339E-5	DEFECT
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9971669946465097	WITHOUT_CLASSIFICATION	0.002833005353490277	DEFECT
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9998313058554379	WITHOUT_CLASSIFICATION	1.6869414456207002E-4	DEFECT
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998515584795198	WITHOUT_CLASSIFICATION	1.4844152048029436E-4	DEFECT
remain where we are	WITHOUT_CLASSIFICATION	0.9999713954191758	WITHOUT_CLASSIFICATION	2.8604580824198575E-5	DEFECT
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9992348551399892	WITHOUT_CLASSIFICATION	7.651448600107406E-4	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9997637821751465	WITHOUT_CLASSIFICATION	2.3621782485346872E-4	DEFECT
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9996809484861969	WITHOUT_CLASSIFICATION	3.190515138031396E-4	DEFECT
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9997446075228106	WITHOUT_CLASSIFICATION	2.553924771893935E-4	DEFECT
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998743877381103	WITHOUT_CLASSIFICATION	1.256122618896326E-4	DEFECT
first try as directory	WITHOUT_CLASSIFICATION	0.9999991316171732	WITHOUT_CLASSIFICATION	8.683828268063401E-7	DEFECT
next as regular file	WITHOUT_CLASSIFICATION	0.9998682885138216	WITHOUT_CLASSIFICATION	1.3171148617833916E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9982602066509038	WITHOUT_CLASSIFICATION	0.0017397933490961959	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Stream-based	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9995951566884382	WITHOUT_CLASSIFICATION	4.0484331156172813E-4	DEFECT
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.998581024757086	WITHOUT_CLASSIFICATION	0.001418975242914024	DEFECT
Constants for seek	WITHOUT_CLASSIFICATION	0.9998097603416339	WITHOUT_CLASSIFICATION	1.902396583660764E-4	DEFECT
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9987358845112061	WITHOUT_CLASSIFICATION	0.0012641154887939184	DEFECT
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998185880178694	WITHOUT_CLASSIFICATION	1.8141198213060243E-4	DEFECT
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9997249600546068	WITHOUT_CLASSIFICATION	2.7503994539325606E-4	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999929603173244	WITHOUT_CLASSIFICATION	7.039682675468433E-6	DEFECT
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999035061789374	WITHOUT_CLASSIFICATION	9.649382106257336E-5	DEFECT
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.999783802458452	WITHOUT_CLASSIFICATION	2.161975415480623E-4	DEFECT
re-register	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9992393307733035	WITHOUT_CLASSIFICATION	7.606692266963991E-4	DEFECT
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.999982291475461	WITHOUT_CLASSIFICATION	1.770852453887682E-5	DEFECT
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999187361618499	WITHOUT_CLASSIFICATION	8.126383815010277E-5	DEFECT
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999369776451509	WITHOUT_CLASSIFICATION	6.302235484913885E-5	DEFECT
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.99906735808921	WITHOUT_CLASSIFICATION	9.326419107901034E-4	DEFECT
IO class methods.	WITHOUT_CLASSIFICATION	0.9994928769745234	WITHOUT_CLASSIFICATION	5.071230254766389E-4	DEFECT
use original modes	WITHOUT_CLASSIFICATION	0.9996613322174053	WITHOUT_CLASSIFICATION	3.38667782594819E-4	DEFECT
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999982465412941	WITHOUT_CLASSIFICATION	1.7534587058522433E-6	DEFECT
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999877489868239	WITHOUT_CLASSIFICATION	1.225101317619571E-5	DEFECT
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9997827874405244	WITHOUT_CLASSIFICATION	2.172125594755629E-4	DEFECT
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999074690042842	WITHOUT_CLASSIFICATION	9.253099571583022E-5	DEFECT
isRetained=true	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.8339300800387172	WITHOUT_CLASSIFICATION	0.16606991996128287	DEFECT
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9949503986819329	WITHOUT_CLASSIFICATION	0.005049601318067068	DEFECT
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9842937712128216	WITHOUT_CLASSIFICATION	0.01570622878717849	DEFECT
Everything written	WITHOUT_CLASSIFICATION	0.9998816246058748	WITHOUT_CLASSIFICATION	1.183753941251603E-4	DEFECT
return len - n;	WITHOUT_CLASSIFICATION	0.999880194486536	WITHOUT_CLASSIFICATION	1.1980551346396375E-4	DEFECT
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9993899645553002	WITHOUT_CLASSIFICATION	6.100354446999367E-4	DEFECT
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9984311518109026	WITHOUT_CLASSIFICATION	0.001568848189097326	DEFECT
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9985984711185633	WITHOUT_CLASSIFICATION	0.0014015288814368183	DEFECT
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999489282690741	WITHOUT_CLASSIFICATION	5.1071730925886676E-5	DEFECT
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998883825498289	WITHOUT_CLASSIFICATION	1.1161745017112958E-4	DEFECT
hmmmm	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9989923619564628	WITHOUT_CLASSIFICATION	0.001007638043537256	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9985169037611922	WITHOUT_CLASSIFICATION	0.0014830962388077793	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9997364933552021	WITHOUT_CLASSIFICATION	2.635066447978536E-4	DEFECT
Length to read	WITHOUT_CLASSIFICATION	0.9998757849532609	WITHOUT_CLASSIFICATION	1.242150467390566E-4	DEFECT
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9997107996447206	WITHOUT_CLASSIFICATION	2.8920035527941405E-4	DEFECT
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998662147251954	WITHOUT_CLASSIFICATION	1.3378527480462546E-4	DEFECT
select until read is ready	WITHOUT_CLASSIFICATION	0.9992839853194171	WITHOUT_CLASSIFICATION	7.160146805828872E-4	DEFECT
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998264550982217	WITHOUT_CLASSIFICATION	1.7354490177831416E-4	DEFECT
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998224127534899	WITHOUT_CLASSIFICATION	1.775872465101308E-4	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999858117156528	WITHOUT_CLASSIFICATION	1.4188284347199976E-4	DEFECT
rb: writable	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999858117156528	WITHOUT_CLASSIFICATION	1.4188284347199976E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9969569334741883	WITHOUT_CLASSIFICATION	0.0030430665258117636	DEFECT
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9552319999069936	WITHOUT_CLASSIFICATION	0.04476800009300634	DEFECT
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999121991142778	WITHOUT_CLASSIFICATION	8.780088572221972E-5	DEFECT
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9583684294699201	WITHOUT_CLASSIFICATION	0.04163157053007986	DEFECT
class methods for IO	WITHOUT_CLASSIFICATION	0.9996778561646456	WITHOUT_CLASSIFICATION	3.2214383535445547E-4	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999613384406161	WITHOUT_CLASSIFICATION	3.866155938395043E-5	DEFECT
write	WITHOUT_CLASSIFICATION	0.9999700314487147	WITHOUT_CLASSIFICATION	2.9968551285446382E-5	DEFECT
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9955764827277851	WITHOUT_CLASSIFICATION	0.004423517272214941	DEFECT
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999994003057351	WITHOUT_CLASSIFICATION	5.996942649790353E-7	DEFECT
FIXME: process options	WITHOUT_CLASSIFICATION	0.997926070926013	WITHOUT_CLASSIFICATION	0.002073929073987056	DEFECT
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9987893453754486	WITHOUT_CLASSIFICATION	0.0012106546245513451	DEFECT
NIO based pipe	WITHOUT_CLASSIFICATION	0.9999342612869736	WITHOUT_CLASSIFICATION	6.573871302634234E-5	DEFECT
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.998291906999829	WITHOUT_CLASSIFICATION	0.0017080930001710775	DEFECT
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999578649760165	WITHOUT_CLASSIFICATION	4.213502398359446E-5	DEFECT
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.999940153656381	WITHOUT_CLASSIFICATION	5.984634361914023E-5	DEFECT
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9613779475345795	WITHOUT_CLASSIFICATION	0.03862205246542054	DEFECT
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9990529799076534	WITHOUT_CLASSIFICATION	9.470200923466563E-4	DEFECT
The class of this object	WITHOUT_CLASSIFICATION	0.9989444968557555	WITHOUT_CLASSIFICATION	0.0010555031442445353	DEFECT
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998565062269656	WITHOUT_CLASSIFICATION	1.4349377303433207E-4	DEFECT
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9266236805954065	WITHOUT_CLASSIFICATION	0.0733763194045936	DEFECT
rb_class_boot	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
for interface impls	WITHOUT_CLASSIFICATION	0.9998992575970711	WITHOUT_CLASSIFICATION	1.0074240292885115E-4	DEFECT
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998301584083115	WITHOUT_CLASSIFICATION	1.6984159168847648E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.999495429911432	WITHOUT_CLASSIFICATION	5.045700885679974E-4	DEFECT
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9984582726448642	WITHOUT_CLASSIFICATION	0.0015417273551358215	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998093920813464	WITHOUT_CLASSIFICATION	1.9060791865345867E-4	DEFECT
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9997936335131202	WITHOUT_CLASSIFICATION	2.0636648687975592E-4	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998838366433656	WITHOUT_CLASSIFICATION	1.1616335663441667E-4	DEFECT
Struct methods	WITHOUT_CLASSIFICATION	0.9999352637680234	WITHOUT_CLASSIFICATION	6.473623197651047E-5	DEFECT
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9991083819032119	WITHOUT_CLASSIFICATION	8.916180967880547E-4	DEFECT
define access methods.	WITHOUT_CLASSIFICATION	0.9999459463696004	WITHOUT_CLASSIFICATION	5.405363039949758E-5	DEFECT
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999349179504596	WITHOUT_CLASSIFICATION	6.508204954044115E-5	DEFECT
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999595790447774	WITHOUT_CLASSIFICATION	4.042095522260177E-5	DEFECT
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999821116728399	WITHOUT_CLASSIFICATION	1.7888327160029403E-5	DEFECT
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9989871967644476	WITHOUT_CLASSIFICATION	0.0010128032355524866	DEFECT
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9998820415043204	WITHOUT_CLASSIFICATION	1.1795849567965396E-4	DEFECT
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.999859766534911	WITHOUT_CLASSIFICATION	1.402334650890021E-4	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.9999657888775784	WITHOUT_CLASSIFICATION	3.421112242160674E-5	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.9999657888775784	WITHOUT_CLASSIFICATION	3.421112242160674E-5	DEFECT
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999768044075773	WITHOUT_CLASSIFICATION	2.3195592422687193E-4	DEFECT
superClass may be null.	WITHOUT_CLASSIFICATION	0.9995703672506258	WITHOUT_CLASSIFICATION	4.296327493742314E-4	DEFECT
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9961616904938584	WITHOUT_CLASSIFICATION	0.0038383095061416224	DEFECT
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999662675013834	WITHOUT_CLASSIFICATION	3.3732498616607314E-5	DEFECT
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9998638798935714	WITHOUT_CLASSIFICATION	1.3612010642866443E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999529640231385	WITHOUT_CLASSIFICATION	4.703597686145606E-5	DEFECT
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9996279689305195	WITHOUT_CLASSIFICATION	3.7203106948048516E-4	DEFECT
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999372442695433	WITHOUT_CLASSIFICATION	6.275573045669387E-5	DEFECT
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999425812150915	WITHOUT_CLASSIFICATION	5.7418784908440054E-5	DEFECT
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999935552727077	WITHOUT_CLASSIFICATION	6.444727292213647E-6	DEFECT
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999441216148188	WITHOUT_CLASSIFICATION	5.587838518114406E-5	DEFECT
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999875638435902	WITHOUT_CLASSIFICATION	1.2436156409874792E-5	DEFECT
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999375197053239	WITHOUT_CLASSIFICATION	6.248029467615912E-5	DEFECT
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9997271089629368	WITHOUT_CLASSIFICATION	2.728910370631728E-4	DEFECT
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999929864837221	WITHOUT_CLASSIFICATION	7.013516277771826E-6	DEFECT
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998932540416712	WITHOUT_CLASSIFICATION	1.0674595832877163E-4	DEFECT
superClazz = null;	WITHOUT_CLASSIFICATION	0.9998525139528183	WITHOUT_CLASSIFICATION	1.474860471817374E-4	DEFECT
reopen a java class	WITHOUT_CLASSIFICATION	0.9990906237790973	WITHOUT_CLASSIFICATION	9.093762209027572E-4	DEFECT
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9993191782876845	WITHOUT_CLASSIFICATION	6.808217123154978E-4	DEFECT
reopen a java module	WITHOUT_CLASSIFICATION	0.9997837607530093	WITHOUT_CLASSIFICATION	2.162392469906187E-4	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.9974917724568818	WITHOUT_CLASSIFICATION	0.0025082275431181065	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.9974917724568818	WITHOUT_CLASSIFICATION	0.0025082275431181065	DEFECT
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999519358258454	WITHOUT_CLASSIFICATION	4.8064174154530104E-5	DEFECT
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9998950174802713	WITHOUT_CLASSIFICATION	1.0498251972870078E-4	DEFECT
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9992937155171641	WITHOUT_CLASSIFICATION	7.062844828359769E-4	DEFECT
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999693963511133	WITHOUT_CLASSIFICATION	3.060364888681053E-5	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980450137366845	WITHOUT_CLASSIFICATION	0.0019549862633154885	DEFECT
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9993839188720303	WITHOUT_CLASSIFICATION	6.160811279697263E-4	DEFECT
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9991151762644721	WITHOUT_CLASSIFICATION	8.848237355278288E-4	DEFECT
Module class methods	WITHOUT_CLASSIFICATION	0.999766487692662	WITHOUT_CLASSIFICATION	2.33512307337992E-4	DEFECT
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999976056648935	WITHOUT_CLASSIFICATION	2.3943351065507143E-6	DEFECT
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9997215447090855	WITHOUT_CLASSIFICATION	2.784552909144487E-4	DEFECT
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999728066446678	WITHOUT_CLASSIFICATION	2.7193355332192522E-5	DEFECT
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999634422558554	WITHOUT_CLASSIFICATION	3.6557744144466366E-5	DEFECT
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999011055908928	WITHOUT_CLASSIFICATION	9.889440910719833E-5	DEFECT
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9996357612067599	WITHOUT_CLASSIFICATION	3.642387932401588E-4	DEFECT
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998703153303674	WITHOUT_CLASSIFICATION	1.296846696326937E-4	DEFECT
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999106501110112	WITHOUT_CLASSIFICATION	8.934988898880177E-4	DEFECT
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998851919601935	WITHOUT_CLASSIFICATION	1.148080398064527E-4	DEFECT
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998719669544623	WITHOUT_CLASSIFICATION	1.28033045537709E-4	DEFECT
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.998283065495246	WITHOUT_CLASSIFICATION	0.0017169345047539969	DEFECT
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9864909955164849	WITHOUT_CLASSIFICATION	0.013509004483515233	DEFECT
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998093059937162	WITHOUT_CLASSIFICATION	1.9069400628392207E-4	DEFECT
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.999473891551382	WITHOUT_CLASSIFICATION	5.261084486180895E-4	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9990980821531518	WITHOUT_CLASSIFICATION	9.019178468482326E-4	DEFECT
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9992572622700407	WITHOUT_CLASSIFICATION	7.427377299592824E-4	DEFECT
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9987411437340047	WITHOUT_CLASSIFICATION	0.0012588562659953677	DEFECT
reopen	WITHOUT_CLASSIFICATION	0.9999625509322665	WITHOUT_CLASSIFICATION	3.744906773341996E-5	DEFECT
ARGF methods	WITHOUT_CLASSIFICATION	0.9999352637680234	WITHOUT_CLASSIFICATION	6.473623197651047E-5	DEFECT
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
one optional, one required args	WITHOUT_CLASSIFICATION	0.9998368167091987	WITHOUT_CLASSIFICATION	1.6318329080129677E-4	DEFECT
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999345703644048	WITHOUT_CLASSIFICATION	6.542963559512537E-5	DEFECT
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999415911280318	WITHOUT_CLASSIFICATION	5.840887196825076E-5	DEFECT
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9997969788911535	WITHOUT_CLASSIFICATION	2.030211088465567E-4	DEFECT
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9993434680555332	WITHOUT_CLASSIFICATION	6.565319444667202E-4	DEFECT
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999292650303762	WITHOUT_CLASSIFICATION	7.073496962387524E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999709805744366	WITHOUT_CLASSIFICATION	2.901942556340384E-4	DEFECT
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9981952299738637	WITHOUT_CLASSIFICATION	0.0018047700261363158	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9974505246237574	WITHOUT_CLASSIFICATION	0.0025494753762425213	DEFECT
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999372854714264	WITHOUT_CLASSIFICATION	6.271452857356321E-5	DEFECT
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999113929750999	WITHOUT_CLASSIFICATION	8.860702490012603E-5	DEFECT
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999437258227897	WITHOUT_CLASSIFICATION	5.627417721030229E-4	DEFECT
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999482230645948	WITHOUT_CLASSIFICATION	5.177693540519905E-4	DEFECT
ignore error	WITHOUT_CLASSIFICATION	0.9998828581339388	WITHOUT_CLASSIFICATION	1.1714186606117286E-4	DEFECT
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9998631740860917	WITHOUT_CLASSIFICATION	1.368259139082726E-4	DEFECT
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998056545349052	WITHOUT_CLASSIFICATION	1.9434546509488013E-4	DEFECT
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9994518260268532	WITHOUT_CLASSIFICATION	5.481739731468059E-4	DEFECT
odd	WITHOUT_CLASSIFICATION	0.999963163878961	WITHOUT_CLASSIFICATION	3.683612103908282E-5	DEFECT
JRubyClient	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9967926064759428	WITHOUT_CLASSIFICATION	0.003207393524057274	DEFECT
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998287736714111	WITHOUT_CLASSIFICATION	1.7122632858881308E-4	DEFECT
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999761114848763	WITHOUT_CLASSIFICATION	2.388851512370186E-4	DEFECT
r = x 2 y	WITHOUT_CLASSIFICATION	0.9987254622404733	WITHOUT_CLASSIFICATION	0.0012745377595266558	DEFECT
0!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
1!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
2!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
3!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
4!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
5!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
6!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
7!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
8!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
9!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
11!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
12!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
13!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
15!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
16!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
17!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
19!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
20!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
21!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Static constants	WITHOUT_CLASSIFICATION	0.9999355875347539	WITHOUT_CLASSIFICATION	6.441246524614328E-5	DEFECT
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999447669768438	WITHOUT_CLASSIFICATION	5.523302315618632E-5	DEFECT
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999209226910425	WITHOUT_CLASSIFICATION	7.907730895754911E-5	DEFECT
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998557138999875	WITHOUT_CLASSIFICATION	1.4428610001243316E-4	DEFECT
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9982320330679023	WITHOUT_CLASSIFICATION	0.0017679669320977455	DEFECT
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999305069640692	WITHOUT_CLASSIFICATION	6.949303593080692E-5	DEFECT
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999750259555783	WITHOUT_CLASSIFICATION	2.4974044421735433E-5	DEFECT
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9904057409766744	WITHOUT_CLASSIFICATION	0.009594259023325499	DEFECT
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9995415643963006	WITHOUT_CLASSIFICATION	4.58435603699318E-4	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997699699404159	WITHOUT_CLASSIFICATION	2.300300595840899E-4	DEFECT
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9008158823530497	WITHOUT_CLASSIFICATION	0.09918411764695038	DEFECT
integer division	WITHOUT_CLASSIFICATION	0.9998579729499582	WITHOUT_CLASSIFICATION	1.4202705004175075E-4	DEFECT
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999261028627682	WITHOUT_CLASSIFICATION	7.389713723188821E-5	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9999305069640692	WITHOUT_CLASSIFICATION	6.949303593080692E-5	DEFECT
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9978699526357689	WITHOUT_CLASSIFICATION	0.0021300473642311478	DEFECT
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999190403221075	WITHOUT_CLASSIFICATION	8.095967789249902E-5	DEFECT
...round to that digit	WITHOUT_CLASSIFICATION	0.9998243888825131	WITHOUT_CLASSIFICATION	1.7561111748681823E-4	DEFECT
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999628319911154	WITHOUT_CLASSIFICATION	3.716800888454878E-5	DEFECT
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999140645460751	WITHOUT_CLASSIFICATION	8.593545392484877E-5	DEFECT
sign	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9997842539119944	WITHOUT_CLASSIFICATION	2.157460880054584E-4	DEFECT
normalize the value	WITHOUT_CLASSIFICATION	0.9998994486711368	WITHOUT_CLASSIFICATION	1.0055132886319164E-4	DEFECT
base	WITHOUT_CLASSIFICATION	0.9999691014682007	WITHOUT_CLASSIFICATION	3.089853179935785E-5	DEFECT
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9997027648109372	WITHOUT_CLASSIFICATION	2.972351890627675E-4	DEFECT
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9997646328709484	WITHOUT_CLASSIFICATION	2.3536712905166104E-4	DEFECT
eh?!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9992088785046579	WITHOUT_CLASSIFICATION	7.911214953421551E-4	DEFECT
General number and precision checking	WITHOUT_CLASSIFICATION	0.9993994635319956	WITHOUT_CLASSIFICATION	6.005364680043752E-4	DEFECT
the requested precision	WITHOUT_CLASSIFICATION	0.9999100610335471	WITHOUT_CLASSIFICATION	8.993896645289448E-5	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9998648255486988	WITHOUT_CLASSIFICATION	1.351744513013112E-4	DEFECT
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999079237027829	WITHOUT_CLASSIFICATION	9.207629721704415E-5	DEFECT
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9997471075057743	WITHOUT_CLASSIFICATION	2.52892494225602E-4	DEFECT
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999250057099014	WITHOUT_CLASSIFICATION	7.499429009859656E-5	DEFECT
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999249619778886	WITHOUT_CLASSIFICATION	7.503802211138222E-5	DEFECT
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9994744003737863	WITHOUT_CLASSIFICATION	5.255996262137155E-4	DEFECT
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998584529874723	WITHOUT_CLASSIFICATION	1.4154701252766638E-4	DEFECT
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997335083170014	WITHOUT_CLASSIFICATION	2.664916829986846E-4	DEFECT
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9995948479098502	WITHOUT_CLASSIFICATION	4.051520901497848E-4	DEFECT
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998004754605838	WITHOUT_CLASSIFICATION	1.9952453941623458E-4	DEFECT
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999095242958614	WITHOUT_CLASSIFICATION	9.047570413854325E-5	DEFECT
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999081492000028	WITHOUT_CLASSIFICATION	9.185079999719636E-5	DEFECT
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9976794547939499	WITHOUT_CLASSIFICATION	0.002320545206050102	DEFECT
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9993886342577034	WITHOUT_CLASSIFICATION	6.113657422965908E-4	DEFECT
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9997969016843765	WITHOUT_CLASSIFICATION	2.030983156233639E-4	DEFECT
root x is ready!	WITHOUT_CLASSIFICATION	0.9993637038087536	WITHOUT_CLASSIFICATION	6.362961912464289E-4	DEFECT
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9997974518214795	WITHOUT_CLASSIFICATION	2.0254817852047673E-4	DEFECT
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9998834974933756	WITHOUT_CLASSIFICATION	1.1650250662433979E-4	DEFECT
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
c: bind_eval	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9997842662461766	WITHOUT_CLASSIFICATION	2.1573375382353806E-4	DEFECT
from CommandlineParser	WITHOUT_CLASSIFICATION	0.999858117156528	WITHOUT_CLASSIFICATION	1.4188284347199976E-4	DEFECT
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9998727884607365	WITHOUT_CLASSIFICATION	1.2721153926355635E-4	DEFECT
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999930355803307	WITHOUT_CLASSIFICATION	6.964419669365756E-6	DEFECT
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9959237530122198	WITHOUT_CLASSIFICATION	0.0040762469877802425	DEFECT
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9996697874208526	WITHOUT_CLASSIFICATION	3.3021257914744525E-4	DEFECT
try the normal property first	WITHOUT_CLASSIFICATION	0.9999828175520645	WITHOUT_CLASSIFICATION	1.7182447935553937E-5	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998986105228181	WITHOUT_CLASSIFICATION	1.013894771818239E-4	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998986105228181	WITHOUT_CLASSIFICATION	1.013894771818239E-4	DEFECT
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9992044865945872	WITHOUT_CLASSIFICATION	7.955134054129373E-4	DEFECT
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9997519668361153	WITHOUT_CLASSIFICATION	2.480331638846898E-4	DEFECT
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9995593601235065	WITHOUT_CLASSIFICATION	4.4063987649354825E-4	DEFECT
consume the file name	WITHOUT_CLASSIFICATION	0.9999284724582737	WITHOUT_CLASSIFICATION	7.152754172639654E-5	DEFECT
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999689390508267	WITHOUT_CLASSIFICATION	3.106094917330831E-4	DEFECT
try cwd first	WITHOUT_CLASSIFICATION	0.9999904064099157	WITHOUT_CLASSIFICATION	9.593590084262585E-6	DEFECT
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998430606764732	WITHOUT_CLASSIFICATION	1.5693932352679103E-4	DEFECT
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9915783459081503	WITHOUT_CLASSIFICATION	0.008421654091849681	DEFECT
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997668004399718	WITHOUT_CLASSIFICATION	2.3319956002807623E-4	DEFECT
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998606107575002	WITHOUT_CLASSIFICATION	1.393892424998201E-4	DEFECT
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997668004399718	WITHOUT_CLASSIFICATION	2.3319956002807623E-4	DEFECT
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999368318840012	WITHOUT_CLASSIFICATION	6.316811599882229E-5	DEFECT
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9848976211133531	WITHOUT_CLASSIFICATION	0.01510237888664687	DEFECT
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9995338094178584	WITHOUT_CLASSIFICATION	4.6619058214165563E-4	DEFECT
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9613779475345795	WITHOUT_CLASSIFICATION	0.03862205246542054	DEFECT
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9995622951506349	WITHOUT_CLASSIFICATION	4.3770484936511033E-4	DEFECT
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999257904041615	WITHOUT_CLASSIFICATION	7.420959583845114E-5	DEFECT
must be power of 2!	WITHOUT_CLASSIFICATION	0.9998475457156621	WITHOUT_CLASSIFICATION	1.5245428433789234E-4	DEFECT
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999551260005176	WITHOUT_CLASSIFICATION	4.4873999482401894E-5	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9848976211133531	WITHOUT_CLASSIFICATION	0.01510237888664687	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999879425418755	WITHOUT_CLASSIFICATION	1.2057458124610635E-5	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999879425418755	WITHOUT_CLASSIFICATION	1.2057458124610635E-5	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999810933452074	WITHOUT_CLASSIFICATION	1.8906654792747833E-5	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9998731164266494	WITHOUT_CLASSIFICATION	1.2688357335045262E-4	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995239498652082	WITHOUT_CLASSIFICATION	4.760501347917608E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998454477882803	WITHOUT_CLASSIFICATION	1.545522117196011E-4	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999901748251833	WITHOUT_CLASSIFICATION	9.825174816666294E-6	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999299036471923	WITHOUT_CLASSIFICATION	7.009635280773149E-5	DEFECT
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9989737242648314	WITHOUT_CLASSIFICATION	0.0010262757351685245	DEFECT
Profile	WITHOUT_CLASSIFICATION	0.9999627965826088	WITHOUT_CLASSIFICATION	3.720341739113165E-5	DEFECT
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9998837817380941	WITHOUT_CLASSIFICATION	1.1621826190585898E-4	DEFECT
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999489929878056	WITHOUT_CLASSIFICATION	5.100701219443852E-5	DEFECT
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999993816435177	WITHOUT_CLASSIFICATION	6.183564823024854E-6	DEFECT
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9998932718608529	WITHOUT_CLASSIFICATION	1.0672813914722568E-4	DEFECT
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999368140130295	WITHOUT_CLASSIFICATION	6.318598697050688E-5	DEFECT
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9986509533340537	WITHOUT_CLASSIFICATION	0.0013490466659463163	DEFECT
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.999990999228339	WITHOUT_CLASSIFICATION	9.00077166107536E-6	DEFECT
reset the state	WITHOUT_CLASSIFICATION	0.9999713552578952	WITHOUT_CLASSIFICATION	2.864474210480546E-5	DEFECT
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998500957208085	WITHOUT_CLASSIFICATION	1.4990427919152008E-4	DEFECT
rb_match_busy	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
str is frozen	WITHOUT_CLASSIFICATION	0.9996907984677885	WITHOUT_CLASSIFICATION	3.092015322114546E-4	DEFECT
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9995044149919871	WITHOUT_CLASSIFICATION	4.955850080128765E-4	DEFECT
JRubyServer	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9984236629235097	WITHOUT_CLASSIFICATION	0.0015763370764903058	DEFECT
boot the Object class	WITHOUT_CLASSIFICATION	0.9995439129422277	WITHOUT_CLASSIFICATION	4.560870577723771E-4	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.999495429911432	WITHOUT_CLASSIFICATION	5.045700885679974E-4	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999529640231385	WITHOUT_CLASSIFICATION	4.703597686145606E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999978971927317	WITHOUT_CLASSIFICATION	2.102807268403539E-6	DEFECT
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9966504004043935	WITHOUT_CLASSIFICATION	0.003349599595606616	DEFECT
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999395484163486	WITHOUT_CLASSIFICATION	6.0451583651439795E-5	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.981459665315562	WITHOUT_CLASSIFICATION	0.018540334684438147	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9996822142804241	WITHOUT_CLASSIFICATION	3.1778571957583756E-4	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9996822142804241	WITHOUT_CLASSIFICATION	3.1778571957583756E-4	DEFECT
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9993556150914894	WITHOUT_CLASSIFICATION	6.443849085106604E-4	DEFECT
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998341127516871	WITHOUT_CLASSIFICATION	1.658872483129491E-4	DEFECT
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999274681587007	WITHOUT_CLASSIFICATION	7.253184129932746E-5	DEFECT
update all subclasses	WITHOUT_CLASSIFICATION	0.9999442016564648	WITHOUT_CLASSIFICATION	5.579834353529311E-5	DEFECT
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9995548365283838	WITHOUT_CLASSIFICATION	4.451634716161151E-4	DEFECT
static initializing method	WITHOUT_CLASSIFICATION	0.9999726954925788	WITHOUT_CLASSIFICATION	2.7304507421185583E-5	DEFECT
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998605082964589	WITHOUT_CLASSIFICATION	1.3949170354109983E-4	DEFECT
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999609524337919	WITHOUT_CLASSIFICATION	3.904756620802991E-5	DEFECT
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999246584738565	WITHOUT_CLASSIFICATION	7.534152614349052E-5	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9998142043183971	WITHOUT_CLASSIFICATION	1.8579568160303475E-4	DEFECT
self method name	WITHOUT_CLASSIFICATION	0.9999594809473413	WITHOUT_CLASSIFICATION	4.051905265860394E-5	DEFECT
the default allocator	WITHOUT_CLASSIFICATION	0.9999850048618355	WITHOUT_CLASSIFICATION	1.4995138164545717E-5	DEFECT
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999044010395015	WITHOUT_CLASSIFICATION	9.559896049855506E-5	DEFECT
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999669833895368	WITHOUT_CLASSIFICATION	3.301661046317934E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999000371026922	WITHOUT_CLASSIFICATION	9.996289730793826E-5	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9997843252899825	WITHOUT_CLASSIFICATION	2.1567471001757678E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9991123977254831	WITHOUT_CLASSIFICATION	8.876022745168142E-4	DEFECT
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999924966575048	WITHOUT_CLASSIFICATION	7.503342495244588E-6	DEFECT
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999346166558545	WITHOUT_CLASSIFICATION	6.538334414553785E-5	DEFECT
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9979113580855958	WITHOUT_CLASSIFICATION	0.0020886419144041054	DEFECT
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999876807283225	WITHOUT_CLASSIFICATION	1.2319271677498832E-4	DEFECT
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997167305732134	WITHOUT_CLASSIFICATION	2.8326942678655954E-4	DEFECT
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
a gotcha	WITHOUT_CLASSIFICATION	0.9999607704293388	WITHOUT_CLASSIFICATION	3.922957066110865E-5	DEFECT
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9996461702015682	WITHOUT_CLASSIFICATION	3.538297984318562E-4	DEFECT
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9996982517609143	WITHOUT_CLASSIFICATION	3.0174823908564756E-4	DEFECT
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999117063484272	WITHOUT_CLASSIFICATION	8.829365157282864E-5	DEFECT
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9999565451678191	WITHOUT_CLASSIFICATION	4.3454832180931425E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999000371026922	WITHOUT_CLASSIFICATION	9.996289730793826E-5	DEFECT
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998362681295331	WITHOUT_CLASSIFICATION	1.6373187046695012E-4	DEFECT
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9989167109005379	WITHOUT_CLASSIFICATION	0.0010832890994620069	DEFECT
MRI behavior:	WITHOUT_CLASSIFICATION	0.9998584753281573	WITHOUT_CLASSIFICATION	1.4152467184265534E-4	DEFECT
Numeric.equal	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
provider is not available	WITHOUT_CLASSIFICATION	0.9974546297035891	WITHOUT_CLASSIFICATION	0.002545370296410907	DEFECT
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9849090052746245	WITHOUT_CLASSIFICATION	0.015090994725375489	DEFECT
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9997782161645622	WITHOUT_CLASSIFICATION	2.2178383543775617E-4	DEFECT
RubyDigest	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9995963794367849	WITHOUT_CLASSIFICATION	4.03620563215133E-4	DEFECT
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9997282573054244	WITHOUT_CLASSIFICATION	2.7174269457561854E-4	DEFECT
we only add live threads	WITHOUT_CLASSIFICATION	0.999524816473503	WITHOUT_CLASSIFICATION	4.7518352649697797E-4	DEFECT
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998976784058288	WITHOUT_CLASSIFICATION	1.0232159417125217E-4	DEFECT
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999887801997155	WITHOUT_CLASSIFICATION	1.1219800284487923E-5	DEFECT
JRubyService	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
while	WITHOUT_CLASSIFICATION	0.9999309259859437	WITHOUT_CLASSIFICATION	6.907401405629071E-5	DEFECT
\OOO	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9997793652186114	WITHOUT_CLASSIFICATION	2.2063478138855522E-4	DEFECT
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999484024583597	WITHOUT_CLASSIFICATION	5.159754164025781E-5	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999483445736965	WITHOUT_CLASSIFICATION	5.165542630344977E-5	DEFECT
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999016529302328	WITHOUT_CLASSIFICATION	9.834706976718404E-5	DEFECT
silent ?	WITHOUT_CLASSIFICATION	0.9999657888775784	WITHOUT_CLASSIFICATION	3.421112242160674E-5	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9998972721998447	WITHOUT_CLASSIFICATION	1.0272780015534047E-4	DEFECT
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9988113768190913	WITHOUT_CLASSIFICATION	0.001188623180908782	DEFECT
Surrogates	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9994659981364832	WITHOUT_CLASSIFICATION	5.340018635167871E-4	DEFECT
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
\\uHHHH	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
inner switch	WITHOUT_CLASSIFICATION	0.9998539001791473	WITHOUT_CLASSIFICATION	1.4609982085262262E-4	DEFECT
newInstance here	WITHOUT_CLASSIFICATION	0.9998602964661079	WITHOUT_CLASSIFICATION	1.397035338921949E-4	DEFECT
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9983750585999984	WITHOUT_CLASSIFICATION	0.001624941400001569	DEFECT
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
option_to_str	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9983279034518232	WITHOUT_CLASSIFICATION	0.0016720965481767857	DEFECT
args should be before block	WITHOUT_CLASSIFICATION	0.9998136931649497	WITHOUT_CLASSIFICATION	1.8630683505028263E-4	DEFECT
args should be at end	WITHOUT_CLASSIFICATION	0.9975158288753097	WITHOUT_CLASSIFICATION	0.0024841711246903755	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999845817369366	WITHOUT_CLASSIFICATION	1.5418263063404032E-4	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999845817369366	WITHOUT_CLASSIFICATION	1.5418263063404032E-4	DEFECT
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9978448250531239	WITHOUT_CLASSIFICATION	0.0021551749468761744	DEFECT
start a new populator	WITHOUT_CLASSIFICATION	0.9999348294204791	WITHOUT_CLASSIFICATION	6.517057952094237E-5	DEFECT
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999623990969727	WITHOUT_CLASSIFICATION	3.7600903027320244E-5	DEFECT
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9987136323912762	WITHOUT_CLASSIFICATION	0.00128636760872378	DEFECT
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999808428138437	WITHOUT_CLASSIFICATION	1.9157186156274884E-5	DEFECT
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999794574649441	WITHOUT_CLASSIFICATION	2.05425350558674E-5	DEFECT
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9996617447785282	WITHOUT_CLASSIFICATION	3.382552214717504E-4	DEFECT
multimethod, new logic	WITHOUT_CLASSIFICATION	0.999930188082729	WITHOUT_CLASSIFICATION	6.981191727095061E-5	DEFECT
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9994028051363903	WITHOUT_CLASSIFICATION	5.971948636096229E-4	DEFECT
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998417420013764	WITHOUT_CLASSIFICATION	1.5825799862349805E-4	DEFECT
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997668004399718	WITHOUT_CLASSIFICATION	2.3319956002807623E-4	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999698651173868	WITHOUT_CLASSIFICATION	3.013488261315879E-5	DEFECT
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999635291284573	WITHOUT_CLASSIFICATION	3.6470871542704204E-4	DEFECT
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9616230613294809	WITHOUT_CLASSIFICATION	0.038376938670518994	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9989434166556899	WITHOUT_CLASSIFICATION	0.001056583344310125	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9998687825275258	WITHOUT_CLASSIFICATION	1.3121747247424887E-4	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999420783081121	WITHOUT_CLASSIFICATION	5.792169188798605E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
colon3	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Colon3	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9973592025153449	WITHOUT_CLASSIFICATION	0.002640797484655003	DEFECT
For b.foo	WITHOUT_CLASSIFICATION	0.9999844139740232	WITHOUT_CLASSIFICATION	1.5586025976804424E-5	DEFECT
instance config for the script run	WITHOUT_CLASSIFICATION	0.9999281651371938	WITHOUT_CLASSIFICATION	7.183486280616395E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999800074781441	WITHOUT_CLASSIFICATION	1.9992521855909443E-4	DEFECT
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999409026360225	WITHOUT_CLASSIFICATION	5.90973639775696E-5	DEFECT
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9995639014604579	WITHOUT_CLASSIFICATION	4.3609853954217607E-4	DEFECT
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9997411530663113	WITHOUT_CLASSIFICATION	2.588469336886897E-4	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999946533252679	WITHOUT_CLASSIFICATION	5.346674732097493E-5	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999946533252679	WITHOUT_CLASSIFICATION	5.346674732097493E-5	DEFECT
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999610173792859	WITHOUT_CLASSIFICATION	3.8982620714081073E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999475616364794	WITHOUT_CLASSIFICATION	5.243836352060833E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995853558149926	WITHOUT_CLASSIFICATION	4.146441850073326E-4	DEFECT
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9958934017015975	WITHOUT_CLASSIFICATION	0.004106598298402598	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999502680470844	WITHOUT_CLASSIFICATION	4.973195291571718E-5	DEFECT
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9976566989289085	WITHOUT_CLASSIFICATION	0.0023433010710914807	DEFECT
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999230664658106	WITHOUT_CLASSIFICATION	7.693353418930248E-5	DEFECT
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9947383744997539	WITHOUT_CLASSIFICATION	0.0052616255002460935	DEFECT
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999985591866732	WITHOUT_CLASSIFICATION	1.4408133268003885E-5	DEFECT
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999502408113314	WITHOUT_CLASSIFICATION	4.975918866864284E-5	DEFECT
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999092041450403	WITHOUT_CLASSIFICATION	9.079585495966903E-5	DEFECT
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999209682025763	WITHOUT_CLASSIFICATION	7.903179742376253E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9998687825275258	WITHOUT_CLASSIFICATION	1.3121747247424887E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999502680470844	WITHOUT_CLASSIFICATION	4.973195291571718E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9844515683135291	WITHOUT_CLASSIFICATION	0.015548431686470897	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9844515683135291	WITHOUT_CLASSIFICATION	0.015548431686470897	DEFECT
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9295356561990329	WITHOUT_CLASSIFICATION	0.07046434380096717	DEFECT
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999798362155197	WITHOUT_CLASSIFICATION	2.01637844803385E-5	DEFECT
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9998819528145522	WITHOUT_CLASSIFICATION	1.1804718544781694E-4	DEFECT
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999300046091282	WITHOUT_CLASSIFICATION	6.999539087175301E-5	DEFECT
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999355615819384	WITHOUT_CLASSIFICATION	6.443841806149804E-5	DEFECT
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999244435121845	WITHOUT_CLASSIFICATION	7.555648781563975E-5	DEFECT
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9989977858733269	WITHOUT_CLASSIFICATION	0.0010022141266732025	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9989012271351794	WITHOUT_CLASSIFICATION	0.001098772864820621	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999452671370562	WITHOUT_CLASSIFICATION	5.4732862943618815E-5	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999962684452632	WITHOUT_CLASSIFICATION	3.731554736734878E-6	DEFECT
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9969935642155731	WITHOUT_CLASSIFICATION	0.003006435784426822	DEFECT
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999818025206775	WITHOUT_CLASSIFICATION	1.819747932258822E-5	DEFECT
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999172135603839	WITHOUT_CLASSIFICATION	8.278643961614124E-5	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999420783081121	WITHOUT_CLASSIFICATION	5.792169188798605E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999475616364794	WITHOUT_CLASSIFICATION	5.243836352060833E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995853558149926	WITHOUT_CLASSIFICATION	4.146441850073326E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995853558149926	WITHOUT_CLASSIFICATION	4.146441850073326E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999502680470844	WITHOUT_CLASSIFICATION	4.973195291571718E-5	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.9999502680470844	WITHOUT_CLASSIFICATION	4.973195291571718E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9844515683135291	WITHOUT_CLASSIFICATION	0.015548431686470897	DEFECT
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999879898419782	WITHOUT_CLASSIFICATION	1.2010158021781807E-5	DEFECT
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9995254744937601	WITHOUT_CLASSIFICATION	4.745255062398927E-4	DEFECT
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999955890583369	WITHOUT_CLASSIFICATION	4.4109416631468014E-6	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994661232046305	WITHOUT_CLASSIFICATION	5.338767953695009E-4	DEFECT
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997134067196851	WITHOUT_CLASSIFICATION	2.8659328031489545E-4	DEFECT
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9842046611790709	WITHOUT_CLASSIFICATION	0.015795338820929147	DEFECT
add in reverse order	WITHOUT_CLASSIFICATION	0.9998037005884264	WITHOUT_CLASSIFICATION	1.9629941157364765E-4	DEFECT
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9996853219838584	WITHOUT_CLASSIFICATION	3.146780161416711E-4	DEFECT
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999193022280461	WITHOUT_CLASSIFICATION	8.069777195382335E-5	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999475616364794	WITHOUT_CLASSIFICATION	5.243836352060833E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995853558149926	WITHOUT_CLASSIFICATION	4.146441850073326E-4	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995853558149926	WITHOUT_CLASSIFICATION	4.146441850073326E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9989012271351794	WITHOUT_CLASSIFICATION	0.001098772864820621	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999962684452632	WITHOUT_CLASSIFICATION	3.731554736734878E-6	DEFECT
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999277680192596	WITHOUT_CLASSIFICATION	7.223198074031672E-5	DEFECT
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999832085434823	WITHOUT_CLASSIFICATION	1.6791456517606553E-5	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999853218508589	WITHOUT_CLASSIFICATION	1.4678149141110581E-5	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999853218508589	WITHOUT_CLASSIFICATION	1.4678149141110581E-5	DEFECT
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999003753434509	WITHOUT_CLASSIFICATION	9.962465654908227E-5	DEFECT
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9995703749203314	WITHOUT_CLASSIFICATION	4.296250796686806E-4	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999504117144593	WITHOUT_CLASSIFICATION	4.958828554077228E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999653541457877	WITHOUT_CLASSIFICATION	3.464585421233785E-5	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999653541457877	WITHOUT_CLASSIFICATION	3.464585421233785E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999645014240821	WITHOUT_CLASSIFICATION	3.5498575917857056E-5	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999645014240821	WITHOUT_CLASSIFICATION	3.5498575917857056E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999276354522965	WITHOUT_CLASSIFICATION	7.236454770350737E-5	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999276354522965	WITHOUT_CLASSIFICATION	7.236454770350737E-5	DEFECT
Execute rescue block	WITHOUT_CLASSIFICATION	0.9999647235263381	WITHOUT_CLASSIFICATION	3.527647366188758E-5	DEFECT
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9997906731139438	WITHOUT_CLASSIFICATION	2.093268860563117E-4	DEFECT
index of variable for this arg	WITHOUT_CLASSIFICATION	0.999578764460363	WITHOUT_CLASSIFICATION	4.212355396370408E-4	DEFECT
only a marker interface	WITHOUT_CLASSIFICATION	0.9998695936490689	WITHOUT_CLASSIFICATION	1.3040635093105671E-4	DEFECT
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9998997756713471	WITHOUT_CLASSIFICATION	1.0022432865278447E-4	DEFECT
pragmas	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999644946496056	WITHOUT_CLASSIFICATION	3.55053503944651E-5	DEFECT
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999644902834923	WITHOUT_CLASSIFICATION	3.550971650762164E-5	DEFECT
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995877864810027	WITHOUT_CLASSIFICATION	4.1221351899727455E-4	DEFECT
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9995461531611507	WITHOUT_CLASSIFICATION	4.538468388493056E-4	DEFECT
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.99986107187488	WITHOUT_CLASSIFICATION	1.3892812512001252E-4	DEFECT
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999990549391846	WITHOUT_CLASSIFICATION	9.450608153989596E-6	DEFECT
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9979953919571378	WITHOUT_CLASSIFICATION	0.0020046080428621693	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997912728336749	WITHOUT_CLASSIFICATION	2.0872716632507795E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997912728336749	WITHOUT_CLASSIFICATION	2.0872716632507795E-4	DEFECT
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9985384366722356	WITHOUT_CLASSIFICATION	0.0014615633277643438	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999299036471923	WITHOUT_CLASSIFICATION	7.009635280773149E-5	DEFECT
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9962161398711152	WITHOUT_CLASSIFICATION	0.0037838601288848173	DEFECT
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999880959115925	WITHOUT_CLASSIFICATION	1.1904088407496083E-4	DEFECT
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999726386621866	WITHOUT_CLASSIFICATION	2.736133781353252E-5	DEFECT
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9996077393997358	WITHOUT_CLASSIFICATION	3.9226060026424284E-4	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9989734837227408	WITHOUT_CLASSIFICATION	0.0010265162772592916	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999741046410427	WITHOUT_CLASSIFICATION	2.589535895729763E-4	DEFECT
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999788262273868	WITHOUT_CLASSIFICATION	2.1173772613237038E-5	DEFECT
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9997017371722731	WITHOUT_CLASSIFICATION	2.9826282772696914E-4	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999155129905374	WITHOUT_CLASSIFICATION	8.448700946253162E-5	DEFECT
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9994206965717659	WITHOUT_CLASSIFICATION	5.793034282341126E-4	DEFECT
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9997864260053709	WITHOUT_CLASSIFICATION	2.135739946291376E-4	DEFECT
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998540333992776	WITHOUT_CLASSIFICATION	1.4596660072247204E-4	DEFECT
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9872896961023007	WITHOUT_CLASSIFICATION	0.01271030389769927	DEFECT
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999781031024441	WITHOUT_CLASSIFICATION	2.189689755588828E-5	DEFECT
can't do it	WITHOUT_CLASSIFICATION	0.9996934324091793	WITHOUT_CLASSIFICATION	3.065675908207149E-4	DEFECT
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9996959278810763	WITHOUT_CLASSIFICATION	3.0407211892366867E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9997777352901587	WITHOUT_CLASSIFICATION	2.222647098412118E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9997777352901587	WITHOUT_CLASSIFICATION	2.222647098412118E-4	DEFECT
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999667201037076	WITHOUT_CLASSIFICATION	3.327989629238446E-5	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[]	WITHOUT_CLASSIFICATION	0.99996125404318	WITHOUT_CLASSIFICATION	3.8745956820075356E-5	DEFECT
[]	WITHOUT_CLASSIFICATION	0.99996125404318	WITHOUT_CLASSIFICATION	3.8745956820075356E-5	DEFECT
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9997730090251382	WITHOUT_CLASSIFICATION	2.269909748617244E-4	DEFECT
[RubyClass]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9997730090251382	WITHOUT_CLASSIFICATION	2.269909748617244E-4	DEFECT
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999663358295975	WITHOUT_CLASSIFICATION	3.3664170402514956E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999107645909792	WITHOUT_CLASSIFICATION	8.923540902080207E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999107645909792	WITHOUT_CLASSIFICATION	8.923540902080207E-5	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999920971124403	WITHOUT_CLASSIFICATION	7.902887559807473E-6	DEFECT
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.99996784447263	WITHOUT_CLASSIFICATION	3.215552737010244E-5	DEFECT
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9997371354702975	WITHOUT_CLASSIFICATION	2.6286452970245765E-4	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9998530968781392	WITHOUT_CLASSIFICATION	1.469031218607764E-4	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9991542053306762	WITHOUT_CLASSIFICATION	8.457946693237298E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9990474338078812	WITHOUT_CLASSIFICATION	9.525661921187665E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9990474338078812	WITHOUT_CLASSIFICATION	9.525661921187665E-4	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9990474338078812	WITHOUT_CLASSIFICATION	9.525661921187665E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9991542053306762	WITHOUT_CLASSIFICATION	8.457946693237298E-4	DEFECT
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999620036059215	WITHOUT_CLASSIFICATION	3.799639407860403E-5	DEFECT
always false or nil	WITHOUT_CLASSIFICATION	0.9999410020430725	WITHOUT_CLASSIFICATION	5.899795692746978E-5	DEFECT
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998625650582539	WITHOUT_CLASSIFICATION	1.3743494174600098E-4	DEFECT
normal	WITHOUT_CLASSIFICATION	0.9999703831101965	WITHOUT_CLASSIFICATION	2.9616889803470894E-5	DEFECT
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9997433138258852	WITHOUT_CLASSIFICATION	2.566861741148249E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993314501481084	WITHOUT_CLASSIFICATION	6.685498518915539E-4	DEFECT
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999600273435035	WITHOUT_CLASSIFICATION	3.9972656496453834E-5	DEFECT
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9996345198103094	WITHOUT_CLASSIFICATION	3.654801896906565E-4	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999155129905374	WITHOUT_CLASSIFICATION	8.448700946253162E-5	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9985080203512593	WITHOUT_CLASSIFICATION	0.0014919796487407695	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9998794204954781	WITHOUT_CLASSIFICATION	1.205795045219664E-4	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999602096661284	WITHOUT_CLASSIFICATION	3.979033387161531E-5	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9987802340755323	WITHOUT_CLASSIFICATION	0.0012197659244677086	DEFECT
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9998577366494735	WITHOUT_CLASSIFICATION	1.4226335052638207E-4	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9983817113846502	WITHOUT_CLASSIFICATION	0.0016182886153498078	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999341873750737	WITHOUT_CLASSIFICATION	6.58126249263643E-5	DEFECT
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9995272263903529	WITHOUT_CLASSIFICATION	4.727736096471676E-4	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9990701788899151	WITHOUT_CLASSIFICATION	9.298211100848559E-4	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9998682029699578	WITHOUT_CLASSIFICATION	1.3179703004213025E-4	DEFECT
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997668004399718	WITHOUT_CLASSIFICATION	2.3319956002807623E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9997782783438166	WITHOUT_CLASSIFICATION	2.2172165618336188E-4	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999459835971921	WITHOUT_CLASSIFICATION	5.40164028078554E-5	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999164309721852	WITHOUT_CLASSIFICATION	8.356902781486669E-5	DEFECT
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999838141377972	WITHOUT_CLASSIFICATION	1.6185862202835808E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
compile into array	WITHOUT_CLASSIFICATION	0.9994740551802254	WITHOUT_CLASSIFICATION	5.259448197745698E-4	DEFECT
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999224729903241	WITHOUT_CLASSIFICATION	7.75270096759288E-5	DEFECT
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999306618888643	WITHOUT_CLASSIFICATION	6.933811113576149E-5	DEFECT
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9926301424374503	WITHOUT_CLASSIFICATION	0.007369857562549777	DEFECT
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999149225786484	WITHOUT_CLASSIFICATION	8.507742135150897E-5	DEFECT
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999643481257984	WITHOUT_CLASSIFICATION	3.565187420164571E-5	DEFECT
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9998928011462426	WITHOUT_CLASSIFICATION	1.0719885375735286E-4	DEFECT
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998967966664298	WITHOUT_CLASSIFICATION	1.0320333357013987E-4	DEFECT
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999504599005063	WITHOUT_CLASSIFICATION	4.954009949373032E-5	DEFECT
leave as a normal array	WITHOUT_CLASSIFICATION	0.9999068832472906	WITHOUT_CLASSIFICATION	9.311675270934412E-5	DEFECT
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999469402444756	WITHOUT_CLASSIFICATION	5.3059755524376854E-5	DEFECT
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9996319376705834	WITHOUT_CLASSIFICATION	3.680623294164612E-4	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999920971124403	WITHOUT_CLASSIFICATION	7.902887559807473E-6	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996627019862777	WITHOUT_CLASSIFICATION	3.3729801372227986E-4	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9991542053306762	WITHOUT_CLASSIFICATION	8.457946693237298E-4	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993314501481084	WITHOUT_CLASSIFICATION	6.685498518915539E-4	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9998794204954781	WITHOUT_CLASSIFICATION	1.205795045219664E-4	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9987802340755323	WITHOUT_CLASSIFICATION	0.0012197659244677086	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9983817113846502	WITHOUT_CLASSIFICATION	0.0016182886153498078	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999602096661284	WITHOUT_CLASSIFICATION	3.979033387161531E-5	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999341873750737	WITHOUT_CLASSIFICATION	6.58126249263643E-5	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9998682029699578	WITHOUT_CLASSIFICATION	1.3179703004213025E-4	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9990701788899151	WITHOUT_CLASSIFICATION	9.298211100848559E-4	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9997782783438166	WITHOUT_CLASSIFICATION	2.2172165618336188E-4	DEFECT
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999930164160464	WITHOUT_CLASSIFICATION	6.983583953575733E-6	DEFECT
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9883806146367612	WITHOUT_CLASSIFICATION	0.011619385363238753	DEFECT
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999113419097647	WITHOUT_CLASSIFICATION	8.865809023525753E-5	DEFECT
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999234744564864	WITHOUT_CLASSIFICATION	7.652554351351476E-5	DEFECT
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999321279014823	WITHOUT_CLASSIFICATION	6.787209851757957E-5	DEFECT
Time the compilation	WITHOUT_CLASSIFICATION	0.9998959810886102	WITHOUT_CLASSIFICATION	1.0401891138981708E-4	DEFECT
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999464586654588	WITHOUT_CLASSIFICATION	5.3541334541076917E-5	DEFECT
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9997455321898602	WITHOUT_CLASSIFICATION	2.5446781013989124E-4	DEFECT
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9990570663940935	WITHOUT_CLASSIFICATION	9.429336059065297E-4	DEFECT
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9988635818549401	WITHOUT_CLASSIFICATION	0.0011364181450600043	DEFECT
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998911218711211	WITHOUT_CLASSIFICATION	1.0887812887893791E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998695662492773	WITHOUT_CLASSIFICATION	1.3043375072261995E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9993009100913061	WITHOUT_CLASSIFICATION	6.990899086939033E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999330175667149	WITHOUT_CLASSIFICATION	6.69824332851213E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.999920984026111	WITHOUT_CLASSIFICATION	7.901597388903668E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999940578028415	WITHOUT_CLASSIFICATION	5.942197158501371E-5	DEFECT
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999398565121457	WITHOUT_CLASSIFICATION	6.014348785439493E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998940113868598	WITHOUT_CLASSIFICATION	1.0598861314018877E-4	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999782394891668	WITHOUT_CLASSIFICATION	2.176051083329813E-5	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999888178600774	WITHOUT_CLASSIFICATION	1.1182139922614493E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9989770336832895	WITHOUT_CLASSIFICATION	0.0010229663167104729	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9989770336832895	WITHOUT_CLASSIFICATION	0.0010229663167104729	DEFECT
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997125576383865	WITHOUT_CLASSIFICATION	2.87442361613466E-4	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9995442305258648	WITHOUT_CLASSIFICATION	4.557694741352079E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg2	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999655245192639	WITHOUT_CLASSIFICATION	3.44754807361608E-5	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9995442305258648	WITHOUT_CLASSIFICATION	4.557694741352079E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9985477099557717	WITHOUT_CLASSIFICATION	0.0014522900442282462	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999655245192639	WITHOUT_CLASSIFICATION	3.44754807361608E-5	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9987117767923533	WITHOUT_CLASSIFICATION	0.0012882232076465812	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.9987117767923533	WITHOUT_CLASSIFICATION	0.0012882232076465812	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998670439570069	WITHOUT_CLASSIFICATION	1.3295604299312286E-4	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998670439570069	WITHOUT_CLASSIFICATION	1.3295604299312286E-4	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999642234581675	WITHOUT_CLASSIFICATION	3.5776541832526266E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999642234581675	WITHOUT_CLASSIFICATION	3.5776541832526266E-5	DEFECT
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999880129407207	WITHOUT_CLASSIFICATION	1.198705927930247E-5	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9984289843941162	WITHOUT_CLASSIFICATION	0.0015710156058836922	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9984289843941162	WITHOUT_CLASSIFICATION	0.0015710156058836922	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998886383198875	WITHOUT_CLASSIFICATION	1.1136168011249626E-4	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998886383198875	WITHOUT_CLASSIFICATION	1.1136168011249626E-4	DEFECT
eval value for assignment	WITHOUT_CLASSIFICATION	0.999696337160487	WITHOUT_CLASSIFICATION	3.0366283951301093E-4	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9998186172802455	WITHOUT_CLASSIFICATION	1.8138271975452134E-4	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9998186172802455	WITHOUT_CLASSIFICATION	1.8138271975452134E-4	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997944767179999	WITHOUT_CLASSIFICATION	2.0552328200011417E-4	DEFECT
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9995652189354524	WITHOUT_CLASSIFICATION	4.347810645476702E-4	DEFECT
eval value and save it	WITHOUT_CLASSIFICATION	0.9998440692237256	WITHOUT_CLASSIFICATION	1.559307762743442E-4	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997944767179999	WITHOUT_CLASSIFICATION	2.0552328200011417E-4	DEFECT
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9997558562866323	WITHOUT_CLASSIFICATION	2.441437133676376E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999961755981941	WITHOUT_CLASSIFICATION	3.824401805899514E-6	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999655245192639	WITHOUT_CLASSIFICATION	3.44754807361608E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999847890100207	WITHOUT_CLASSIFICATION	1.5210989979331933E-5	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999784126026251	WITHOUT_CLASSIFICATION	2.1587397374890675E-5	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999784126026251	WITHOUT_CLASSIFICATION	2.1587397374890675E-5	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999538991802923	WITHOUT_CLASSIFICATION	4.610081970772426E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9997794392797141	WITHOUT_CLASSIFICATION	2.205607202859616E-4	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9997794392797141	WITHOUT_CLASSIFICATION	2.205607202859616E-4	DEFECT
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998129582153759	WITHOUT_CLASSIFICATION	1.8704178462411203E-4	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999669159210159	WITHOUT_CLASSIFICATION	3.308407898398214E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999669159210159	WITHOUT_CLASSIFICATION	3.308407898398214E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999655245192639	WITHOUT_CLASSIFICATION	3.44754807361608E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999847890100207	WITHOUT_CLASSIFICATION	1.5210989979331933E-5	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999784126026251	WITHOUT_CLASSIFICATION	2.1587397374890675E-5	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999784126026251	WITHOUT_CLASSIFICATION	2.1587397374890675E-5	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999538991802923	WITHOUT_CLASSIFICATION	4.610081970772426E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999669159210159	WITHOUT_CLASSIFICATION	3.308407898398214E-5	DEFECT
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.999724726363348	WITHOUT_CLASSIFICATION	2.7527363665199466E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9998486084718237	WITHOUT_CLASSIFICATION	1.513915281763169E-4	DEFECT
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9986286833490211	WITHOUT_CLASSIFICATION	0.0013713166509788824	DEFECT
add name to call site list	WITHOUT_CLASSIFICATION	0.9992975108235287	WITHOUT_CLASSIFICATION	7.024891764714472E-4	DEFECT
module is on top of stack	WITHOUT_CLASSIFICATION	0.9997101746589133	WITHOUT_CLASSIFICATION	2.8982534108665025E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999739718834966	WITHOUT_CLASSIFICATION	2.6028116503397267E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999669103178711	WITHOUT_CLASSIFICATION	3.308968212893611E-5	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999669103178711	WITHOUT_CLASSIFICATION	3.308968212893611E-5	DEFECT
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9969109000518249	WITHOUT_CLASSIFICATION	0.003089099948175111	DEFECT
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9993604689933349	WITHOUT_CLASSIFICATION	6.395310066651421E-4	DEFECT
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9993604689933349	WITHOUT_CLASSIFICATION	6.395310066651421E-4	DEFECT
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9997005875259073	WITHOUT_CLASSIFICATION	2.994124740926743E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993622240553535	WITHOUT_CLASSIFICATION	6.377759446463957E-4	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993622240553535	WITHOUT_CLASSIFICATION	6.377759446463957E-4	DEFECT
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9995495432532028	WITHOUT_CLASSIFICATION	4.5045674679715576E-4	DEFECT
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9995495432532028	WITHOUT_CLASSIFICATION	4.5045674679715576E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999840711741922	WITHOUT_CLASSIFICATION	1.592882580780607E-4	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999840711741922	WITHOUT_CLASSIFICATION	1.592882580780607E-4	DEFECT
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9993604689933349	WITHOUT_CLASSIFICATION	6.395310066651421E-4	DEFECT
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999443551217672	WITHOUT_CLASSIFICATION	5.5644878232862604E-5	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9996822142804241	WITHOUT_CLASSIFICATION	3.1778571957583756E-4	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999968155998864	WITHOUT_CLASSIFICATION	3.18440011359431E-5	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9992116636963077	WITHOUT_CLASSIFICATION	7.883363036924346E-4	DEFECT
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9997242387793522	WITHOUT_CLASSIFICATION	2.757612206476943E-4	DEFECT
load Object under value	WITHOUT_CLASSIFICATION	0.9998690762093754	WITHOUT_CLASSIFICATION	1.3092379062467236E-4	DEFECT
put under object array already present	WITHOUT_CLASSIFICATION	0.9999342228702188	WITHOUT_CLASSIFICATION	6.577712978119049E-5	DEFECT
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9988212952888486	WITHOUT_CLASSIFICATION	0.0011787047111514741	DEFECT
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999350491286372	WITHOUT_CLASSIFICATION	6.495087136279887E-5	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.998394969687876	WITHOUT_CLASSIFICATION	0.0016050303121239945	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.998394969687876	WITHOUT_CLASSIFICATION	0.0016050303121239945	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997624288762913	WITHOUT_CLASSIFICATION	2.3757112370855117E-4	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997624288762913	WITHOUT_CLASSIFICATION	2.3757112370855117E-4	DEFECT
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9992931669857867	WITHOUT_CLASSIFICATION	7.068330142132452E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997467090917086	WITHOUT_CLASSIFICATION	2.532909082914447E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997467090917086	WITHOUT_CLASSIFICATION	2.532909082914447E-4	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997467090917086	WITHOUT_CLASSIFICATION	2.532909082914447E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999795570799224	WITHOUT_CLASSIFICATION	2.0442920077645313E-5	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999795570799224	WITHOUT_CLASSIFICATION	2.0442920077645313E-5	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999956210860099	WITHOUT_CLASSIFICATION	4.378913990105712E-5	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9995516422151581	WITHOUT_CLASSIFICATION	4.483577848417695E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999196114043464	WITHOUT_CLASSIFICATION	8.038859565356838E-5	DEFECT
skip catch block	WITHOUT_CLASSIFICATION	0.9999811724328063	WITHOUT_CLASSIFICATION	1.882756719380705E-5	DEFECT
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9996941778075386	WITHOUT_CLASSIFICATION	3.058221924614033E-4	DEFECT
next jump	WITHOUT_CLASSIFICATION	0.9998832041839556	WITHOUT_CLASSIFICATION	1.1679581604432971E-4	DEFECT
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9949873630064953	WITHOUT_CLASSIFICATION	0.005012636993504744	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999956210860099	WITHOUT_CLASSIFICATION	4.378913990105712E-5	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999843686248165	WITHOUT_CLASSIFICATION	1.563137518341802E-5	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9995516422151581	WITHOUT_CLASSIFICATION	4.483577848417695E-4	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999196114043464	WITHOUT_CLASSIFICATION	8.038859565356838E-5	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998912062400163	WITHOUT_CLASSIFICATION	1.0879375998371278E-4	DEFECT
break jump	WITHOUT_CLASSIFICATION	0.9999732258921581	WITHOUT_CLASSIFICATION	2.6774107841942222E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998288070755198	WITHOUT_CLASSIFICATION	1.7119292448016337E-4	DEFECT
[reg]	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998246392866077	WITHOUT_CLASSIFICATION	1.7536071339226247E-4	DEFECT
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999397401869052	WITHOUT_CLASSIFICATION	6.025981309469256E-5	DEFECT
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9996466650844764	WITHOUT_CLASSIFICATION	3.533349155235422E-4	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998912062400163	WITHOUT_CLASSIFICATION	1.0879375998371278E-4	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998955053510022	WITHOUT_CLASSIFICATION	1.0449464899771472E-4	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998955053510022	WITHOUT_CLASSIFICATION	1.0449464899771472E-4	DEFECT
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9987821884468205	WITHOUT_CLASSIFICATION	0.00121781155317953	DEFECT
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999535973401981	WITHOUT_CLASSIFICATION	4.640265980191887E-5	DEFECT
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999793297263554	WITHOUT_CLASSIFICATION	2.067027364460687E-4	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9990368598004706	WITHOUT_CLASSIFICATION	9.63140199529258E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9992677359915451	WITHOUT_CLASSIFICATION	7.322640084548971E-4	DEFECT
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999875234439765	WITHOUT_CLASSIFICATION	1.2476556023484808E-5	DEFECT
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9997344842615935	WITHOUT_CLASSIFICATION	2.655157384064672E-4	DEFECT
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998779299842981	WITHOUT_CLASSIFICATION	1.2207001570188255E-4	DEFECT
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999840990423596	WITHOUT_CLASSIFICATION	1.5900957640408938E-4	DEFECT
false zero	WITHOUT_CLASSIFICATION	0.9999812804322133	WITHOUT_CLASSIFICATION	1.8719567786680304E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999379250490749	WITHOUT_CLASSIFICATION	6.207495092520738E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9990368598004706	WITHOUT_CLASSIFICATION	9.63140199529258E-4	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9992677359915451	WITHOUT_CLASSIFICATION	7.322640084548971E-4	DEFECT
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998202672507682	WITHOUT_CLASSIFICATION	1.7973274923181368E-4	DEFECT
push false	WITHOUT_CLASSIFICATION	0.9999818143222381	WITHOUT_CLASSIFICATION	1.8185677761936492E-5	DEFECT
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9998919391155736	WITHOUT_CLASSIFICATION	1.0806088442634143E-4	DEFECT
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[C]	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
push true	WITHOUT_CLASSIFICATION	0.9999847788107624	WITHOUT_CLASSIFICATION	1.5221189237621945E-5	DEFECT
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999211038553387	WITHOUT_CLASSIFICATION	7.889614466128211E-5	DEFECT
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
[boolean]	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9995522451917322	WITHOUT_CLASSIFICATION	4.477548082676776E-4	DEFECT
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998834695801151	WITHOUT_CLASSIFICATION	1.1653041988487199E-4	DEFECT
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9998023852364731	WITHOUT_CLASSIFICATION	1.976147635268307E-4	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9997635975347401	WITHOUT_CLASSIFICATION	2.364024652600187E-4	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999629657005332	WITHOUT_CLASSIFICATION	3.703429946684358E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9998968421271114	WITHOUT_CLASSIFICATION	1.031578728886206E-4	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9990535509587862	WITHOUT_CLASSIFICATION	9.464490412136594E-4	DEFECT
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999690785404174	WITHOUT_CLASSIFICATION	3.092145958259214E-5	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999629657005332	WITHOUT_CLASSIFICATION	3.703429946684358E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9998968421271114	WITHOUT_CLASSIFICATION	1.031578728886206E-4	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9990535509587862	WITHOUT_CLASSIFICATION	9.464490412136594E-4	DEFECT
finally with exception	WITHOUT_CLASSIFICATION	0.9997265471836957	WITHOUT_CLASSIFICATION	2.734528163042867E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9988446383001278	WITHOUT_CLASSIFICATION	0.0011553616998722241	DEFECT
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9997587173063087	WITHOUT_CLASSIFICATION	2.4128269369126963E-4	DEFECT
original exception is on stack	WITHOUT_CLASSIFICATION	0.9983045658951991	WITHOUT_CLASSIFICATION	0.0016954341048009496	DEFECT
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9996598555243614	WITHOUT_CLASSIFICATION	3.401444756385117E-4	DEFECT
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9997654264814384	WITHOUT_CLASSIFICATION	2.3457351856158058E-4	DEFECT
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999479571321108	WITHOUT_CLASSIFICATION	5.204286788925007E-5	DEFECT
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999928747221655	WITHOUT_CLASSIFICATION	7.125277834496587E-5	DEFECT
script object	WITHOUT_CLASSIFICATION	0.9999085855322991	WITHOUT_CLASSIFICATION	9.141446770082437E-5	DEFECT
arities	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9943738267952795	WITHOUT_CLASSIFICATION	0.0056261732047204515	DEFECT
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9994679775173795	WITHOUT_CLASSIFICATION	5.320224826205805E-4	DEFECT
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9994916895330386	WITHOUT_CLASSIFICATION	5.083104669613945E-4	DEFECT
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999405172151277	WITHOUT_CLASSIFICATION	5.948278487243838E-5	DEFECT
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9991401851415378	WITHOUT_CLASSIFICATION	8.59814858462232E-4	DEFECT
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998790739776129	WITHOUT_CLASSIFICATION	1.2092602238717461E-4	DEFECT
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9981858837815807	WITHOUT_CLASSIFICATION	0.0018141162184192605	DEFECT
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998513781681513	WITHOUT_CLASSIFICATION	1.4862183184876593E-4	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999690563376652	WITHOUT_CLASSIFICATION	3.094366233483114E-5	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999599668367647	WITHOUT_CLASSIFICATION	4.003316323524778E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9998372306639542	WITHOUT_CLASSIFICATION	1.6276933604574315E-4	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9998888423358753	WITHOUT_CLASSIFICATION	1.1115766412480866E-4	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9998888423358753	WITHOUT_CLASSIFICATION	1.1115766412480866E-4	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.99959796311076	WITHOUT_CLASSIFICATION	4.0203688924002107E-4	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.99959796311076	WITHOUT_CLASSIFICATION	4.0203688924002107E-4	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999552336749012	WITHOUT_CLASSIFICATION	4.476632509866929E-5	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999552336749012	WITHOUT_CLASSIFICATION	4.476632509866929E-5	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999605021687649	WITHOUT_CLASSIFICATION	3.9497831235079356E-5	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999918187617527	WITHOUT_CLASSIFICATION	8.181238247275071E-6	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999017515404313	WITHOUT_CLASSIFICATION	9.824845956875713E-5	DEFECT
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999538639691401	WITHOUT_CLASSIFICATION	4.613603085986283E-5	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999928806669415	WITHOUT_CLASSIFICATION	7.119333058470714E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999786995199308	WITHOUT_CLASSIFICATION	2.1300480069174127E-5	DEFECT
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999287698963496	WITHOUT_CLASSIFICATION	7.123010365037825E-5	DEFECT
then optional args	WITHOUT_CLASSIFICATION	0.9999669777398464	WITHOUT_CLASSIFICATION	3.3022260153526146E-5	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999605021687649	WITHOUT_CLASSIFICATION	3.9497831235079356E-5	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999918187617527	WITHOUT_CLASSIFICATION	8.181238247275071E-6	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999017515404313	WITHOUT_CLASSIFICATION	9.824845956875713E-5	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999928806669415	WITHOUT_CLASSIFICATION	7.119333058470714E-6	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999786995199308	WITHOUT_CLASSIFICATION	2.1300480069174127E-5	DEFECT
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998571923950437	WITHOUT_CLASSIFICATION	1.428076049563307E-4	DEFECT
finally, post args	WITHOUT_CLASSIFICATION	0.9998709627404185	WITHOUT_CLASSIFICATION	1.290372595815187E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9994605449236318	WITHOUT_CLASSIFICATION	5.394550763682483E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9994605449236318	WITHOUT_CLASSIFICATION	5.394550763682483E-4	DEFECT
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997135645872147	WITHOUT_CLASSIFICATION	2.8643541278529643E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998223456178201	WITHOUT_CLASSIFICATION	1.7765438217999294E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.998484100831061	WITHOUT_CLASSIFICATION	0.001515899168938996	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999148205928065	WITHOUT_CLASSIFICATION	8.517940719347411E-5	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999148205928065	WITHOUT_CLASSIFICATION	8.517940719347411E-5	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999700974783525	WITHOUT_CLASSIFICATION	2.9902521647490887E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999881034898528	WITHOUT_CLASSIFICATION	1.1896510147333744E-5	DEFECT
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9997854505508399	WITHOUT_CLASSIFICATION	2.1454944916000657E-4	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999175384838963	WITHOUT_CLASSIFICATION	8.24615161036355E-5	DEFECT
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9995961275511072	WITHOUT_CLASSIFICATION	4.0387244889285426E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9993009100913061	WITHOUT_CLASSIFICATION	6.990899086939033E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999330175667149	WITHOUT_CLASSIFICATION	6.69824332851213E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.999920984026111	WITHOUT_CLASSIFICATION	7.901597388903668E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999940578028415	WITHOUT_CLASSIFICATION	5.942197158501371E-5	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999782394891668	WITHOUT_CLASSIFICATION	2.176051083329813E-5	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999888178600774	WITHOUT_CLASSIFICATION	1.1182139922614493E-5	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999700974783525	WITHOUT_CLASSIFICATION	2.9902521647490887E-4	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999881034898528	WITHOUT_CLASSIFICATION	1.1896510147333744E-5	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999175384838963	WITHOUT_CLASSIFICATION	8.24615161036355E-5	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999131344621148	WITHOUT_CLASSIFICATION	8.686553788513649E-5	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.998484100831061	WITHOUT_CLASSIFICATION	0.001515899168938996	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.998484100831061	WITHOUT_CLASSIFICATION	0.001515899168938996	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999379250490749	WITHOUT_CLASSIFICATION	6.207495092520738E-5	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999379250490749	WITHOUT_CLASSIFICATION	6.207495092520738E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9988036037367036	WITHOUT_CLASSIFICATION	0.0011963962632964235	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9988036037367036	WITHOUT_CLASSIFICATION	0.0011963962632964235	DEFECT
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999110756010947	WITHOUT_CLASSIFICATION	8.892439890523342E-5	DEFECT
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9992305126064558	WITHOUT_CLASSIFICATION	7.694873935441372E-4	DEFECT
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9996725085622602	WITHOUT_CLASSIFICATION	3.274914377398897E-4	DEFECT
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999504417534477	WITHOUT_CLASSIFICATION	4.955824655216332E-5	DEFECT
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9995273348339301	WITHOUT_CLASSIFICATION	4.726651660699152E-4	DEFECT
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998819857701738	WITHOUT_CLASSIFICATION	1.1801422982612331E-4	DEFECT
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9970907029256961	WITHOUT_CLASSIFICATION	0.0029092970743039076	DEFECT
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999743679608177	WITHOUT_CLASSIFICATION	2.5632039182258703E-5	DEFECT
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9993225262630895	WITHOUT_CLASSIFICATION	6.774737369103771E-4	DEFECT
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9998695662492773	WITHOUT_CLASSIFICATION	1.3043375072261995E-4	DEFECT
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999545305370281	WITHOUT_CLASSIFICATION	4.546946297188161E-5	DEFECT
verify the class	WITHOUT_CLASSIFICATION	0.9997674117493605	WITHOUT_CLASSIFICATION	2.3258825063960032E-4	DEFECT
create dir if necessary	WITHOUT_CLASSIFICATION	0.9998683637582119	WITHOUT_CLASSIFICATION	1.3163624178816251E-4	DEFECT
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999858697656002	WITHOUT_CLASSIFICATION	1.4130234399797694E-4	DEFECT
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999487461096657	WITHOUT_CLASSIFICATION	5.1253890334395584E-5	DEFECT
thread context	WITHOUT_CLASSIFICATION	0.999767238806871	WITHOUT_CLASSIFICATION	2.327611931290095E-4	DEFECT
line number	WITHOUT_CLASSIFICATION	0.9992198251313545	WITHOUT_CLASSIFICATION	7.801748686454922E-4	DEFECT
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.99993275895799	WITHOUT_CLASSIFICATION	6.724104200997235E-5	DEFECT
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999650445172581	WITHOUT_CLASSIFICATION	3.495548274192222E-5	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999330175667149	WITHOUT_CLASSIFICATION	6.69824332851213E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999940578028415	WITHOUT_CLASSIFICATION	5.942197158501371E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9989770336832895	WITHOUT_CLASSIFICATION	0.0010229663167104729	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999131344621148	WITHOUT_CLASSIFICATION	8.686553788513649E-5	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.998484100831061	WITHOUT_CLASSIFICATION	0.001515899168938996	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999379250490749	WITHOUT_CLASSIFICATION	6.207495092520738E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9988036037367036	WITHOUT_CLASSIFICATION	0.0011963962632964235	DEFECT
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9995610433914458	WITHOUT_CLASSIFICATION	4.3895660855410403E-4	DEFECT
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9994224430123184	WITHOUT_CLASSIFICATION	5.775569876816837E-4	DEFECT
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999562098850961	WITHOUT_CLASSIFICATION	4.37901149038747E-5	DEFECT
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9997595400678745	WITHOUT_CLASSIFICATION	2.4045993212552482E-4	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988517541959508	WITHOUT_CLASSIFICATION	0.0011482458040491706	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988517541959508	WITHOUT_CLASSIFICATION	0.0011482458040491706	DEFECT
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9992509138229313	WITHOUT_CLASSIFICATION	7.490861770688089E-4	DEFECT
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999364109121526	WITHOUT_CLASSIFICATION	6.35890878473518E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999062937943997	WITHOUT_CLASSIFICATION	9.370620560035323E-5	DEFECT
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999364109121526	WITHOUT_CLASSIFICATION	6.35890878473518E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999915862585973	WITHOUT_CLASSIFICATION	8.41374140270954E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999915862585973	WITHOUT_CLASSIFICATION	8.41374140270954E-5	DEFECT
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9995680356924699	WITHOUT_CLASSIFICATION	4.3196430753024445E-4	DEFECT
normal closure	WITHOUT_CLASSIFICATION	0.9998961792622714	WITHOUT_CLASSIFICATION	1.0382073772869234E-4	DEFECT
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999799617397685	WITHOUT_CLASSIFICATION	2.003826023150771E-4	DEFECT
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9993468100895042	WITHOUT_CLASSIFICATION	6.531899104957764E-4	DEFECT
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999863506854271	WITHOUT_CLASSIFICATION	1.3649314572910243E-5	DEFECT
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998746588296269	WITHOUT_CLASSIFICATION	1.2534117037314076E-4	DEFECT
Ruby name	WITHOUT_CLASSIFICATION	0.9999618575310718	WITHOUT_CLASSIFICATION	3.814246892814348E-5	DEFECT
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9994460086629953	WITHOUT_CLASSIFICATION	5.539913370047406E-4	DEFECT
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9942964701350189	WITHOUT_CLASSIFICATION	0.005703529864981113	DEFECT
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9988285834219327	WITHOUT_CLASSIFICATION	0.0011714165780672655	DEFECT
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9997864608180331	WITHOUT_CLASSIFICATION	2.1353918196696583E-4	DEFECT
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9998275985349347	WITHOUT_CLASSIFICATION	1.7240146506520337E-4	DEFECT
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999967332618821	WITHOUT_CLASSIFICATION	3.266738117793726E-6	DEFECT
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998115646450776	WITHOUT_CLASSIFICATION	1.88435354922315E-4	DEFECT
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9988778565551173	WITHOUT_CLASSIFICATION	0.0011221434448827436	DEFECT
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9988862234021497	WITHOUT_CLASSIFICATION	0.0011137765978502957	DEFECT
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9998058142921	WITHOUT_CLASSIFICATION	1.9418570789999387E-4	DEFECT
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998797099509341	WITHOUT_CLASSIFICATION	1.2029004906580464E-4	DEFECT
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9994665409360906	WITHOUT_CLASSIFICATION	5.334590639094986E-4	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999718653452025	WITHOUT_CLASSIFICATION	2.813465479752793E-5	DEFECT
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9987187754759684	WITHOUT_CLASSIFICATION	0.0012812245240315418	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9998512991019302	WITHOUT_CLASSIFICATION	1.4870089806981858E-4	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9998512991019302	WITHOUT_CLASSIFICATION	1.4870089806981858E-4	DEFECT
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9997131693703493	WITHOUT_CLASSIFICATION	2.868306296507576E-4	DEFECT
Build the class body!	WITHOUT_CLASSIFICATION	0.9996626038869928	WITHOUT_CLASSIFICATION	3.373961130072509E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999741046410427	WITHOUT_CLASSIFICATION	2.589535895729763E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999741046410427	WITHOUT_CLASSIFICATION	2.589535895729763E-4	DEFECT
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9346807538573443	WITHOUT_CLASSIFICATION	0.06531924614265572	DEFECT
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9989797102758432	WITHOUT_CLASSIFICATION	0.0010202897241568668	DEFECT
done done done done	WITHOUT_CLASSIFICATION	0.9998655312877636	WITHOUT_CLASSIFICATION	1.344687122364855E-4	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996639669848685	WITHOUT_CLASSIFICATION	3.360330151314732E-4	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996639669848685	WITHOUT_CLASSIFICATION	3.360330151314732E-4	DEFECT
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9996967350709357	WITHOUT_CLASSIFICATION	3.0326492906429975E-4	DEFECT
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999777283461603	WITHOUT_CLASSIFICATION	2.227165383972613E-5	DEFECT
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999773171072055	WITHOUT_CLASSIFICATION	2.2682892794433137E-5	DEFECT
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999828715712534	WITHOUT_CLASSIFICATION	1.7128428746589815E-5	DEFECT
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9877999477542708	WITHOUT_CLASSIFICATION	0.012200052245729185	DEFECT
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999741151331266	WITHOUT_CLASSIFICATION	2.588486687336146E-5	DEFECT
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999185652362713	WITHOUT_CLASSIFICATION	8.143476372873075E-5	DEFECT
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9998290794194382	WITHOUT_CLASSIFICATION	1.7092058056174326E-4	DEFECT
build each "when"	WITHOUT_CLASSIFICATION	0.9999238920188986	WITHOUT_CLASSIFICATION	7.610798110143095E-5	DEFECT
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9997489171818856	WITHOUT_CLASSIFICATION	2.5108281811431465E-4	DEFECT
build "else" if it exists	WITHOUT_CLASSIFICATION	0.999920186532736	WITHOUT_CLASSIFICATION	7.981346726394848E-5	DEFECT
now emit bodies	WITHOUT_CLASSIFICATION	0.9999668669425889	WITHOUT_CLASSIFICATION	3.313305741116131E-5	DEFECT
close it out	WITHOUT_CLASSIFICATION	0.9999811450959101	WITHOUT_CLASSIFICATION	1.8854904089872695E-5	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9944709578960529	WITHOUT_CLASSIFICATION	0.005529042103947012	DEFECT
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9998777385536687	WITHOUT_CLASSIFICATION	1.222614463313301E-4	DEFECT
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9995892819634749	WITHOUT_CLASSIFICATION	4.1071803652513103E-4	DEFECT
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999856725830333	WITHOUT_CLASSIFICATION	1.4327416966654121E-5	DEFECT
Build IR for args	WITHOUT_CLASSIFICATION	0.9998260425608607	WITHOUT_CLASSIFICATION	1.739574391393454E-4	DEFECT
Build IR for body	WITHOUT_CLASSIFICATION	0.9998580766975755	WITHOUT_CLASSIFICATION	1.419233024245114E-4	DEFECT
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999717692984209	WITHOUT_CLASSIFICATION	2.8230701579101284E-5	DEFECT
Instance method	WITHOUT_CLASSIFICATION	0.9999710247499431	WITHOUT_CLASSIFICATION	2.8975250056868417E-5	DEFECT
Class method	WITHOUT_CLASSIFICATION	0.9999602764132738	WITHOUT_CLASSIFICATION	3.9723586726151814E-5	DEFECT
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998699466990516	WITHOUT_CLASSIFICATION	1.3005330094835877E-4	DEFECT
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9996904564757934	WITHOUT_CLASSIFICATION	3.095435242066856E-4	DEFECT
Now for the rest	WITHOUT_CLASSIFICATION	0.9999134377547599	WITHOUT_CLASSIFICATION	8.656224524010004E-5	DEFECT
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9961807434531346	WITHOUT_CLASSIFICATION	0.003819256546865366	DEFECT
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.986010816482279	WITHOUT_CLASSIFICATION	0.013989183517721186	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998571414687191	WITHOUT_CLASSIFICATION	1.4285853128083646E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999667436981317	WITHOUT_CLASSIFICATION	3.3256301868389993E-5	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999918087779502	WITHOUT_CLASSIFICATION	8.191222049792604E-6	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999871956212948	WITHOUT_CLASSIFICATION	1.2804378705133475E-5	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9944709578960529	WITHOUT_CLASSIFICATION	0.005529042103947012	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998571414687191	WITHOUT_CLASSIFICATION	1.4285853128083646E-4	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999667436981317	WITHOUT_CLASSIFICATION	3.3256301868389993E-5	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999871956212948	WITHOUT_CLASSIFICATION	1.2804378705133475E-5	DEFECT
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998380425733179	WITHOUT_CLASSIFICATION	1.6195742668213145E-4	DEFECT
Build the new module	WITHOUT_CLASSIFICATION	0.9999522418467967	WITHOUT_CLASSIFICATION	4.775815320336841E-5	DEFECT
Build the module body	WITHOUT_CLASSIFICATION	0.9999398057993322	WITHOUT_CLASSIFICATION	6.019420066791177E-5	DEFECT
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9998804186980028	WITHOUT_CLASSIFICATION	1.1958130199720713E-4	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999775991589188	WITHOUT_CLASSIFICATION	2.2400841081207413E-5	DEFECT
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997081631464635	WITHOUT_CLASSIFICATION	2.9183685353646445E-4	DEFECT
get attr	WITHOUT_CLASSIFICATION	0.9999718653452025	WITHOUT_CLASSIFICATION	2.813465479752793E-5	DEFECT
call operator	WITHOUT_CLASSIFICATION	0.9994127274791763	WITHOUT_CLASSIFICATION	5.87272520823599E-4	DEFECT
set attr	WITHOUT_CLASSIFICATION	0.9999773146838448	WITHOUT_CLASSIFICATION	2.268531615523112E-5	DEFECT
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9936565066732389	WITHOUT_CLASSIFICATION	0.0063434933267611515	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.997586226946466	WITHOUT_CLASSIFICATION	0.0024137730535338884	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.997586226946466	WITHOUT_CLASSIFICATION	0.0024137730535338884	DEFECT
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9999246459565908	WITHOUT_CLASSIFICATION	7.535404340910774E-5	DEFECT
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999810146830206	WITHOUT_CLASSIFICATION	1.898531697945076E-5	DEFECT
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999349855545657	WITHOUT_CLASSIFICATION	6.501444543428121E-5	DEFECT
Top-level script!	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9987672121960809	WITHOUT_CLASSIFICATION	0.0012327878039191328	DEFECT
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9998787000394899	WITHOUT_CLASSIFICATION	1.2129996051017486E-4	DEFECT
What handles warnings	WITHOUT_CLASSIFICATION	0.9998152057276891	WITHOUT_CLASSIFICATION	1.84794272310779E-4	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9027337605860118	WITHOUT_CLASSIFICATION	0.09726623941398821	DEFECT
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999610812831957	WITHOUT_CLASSIFICATION	3.891871680421196E-5	DEFECT
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999095306057699	WITHOUT_CLASSIFICATION	9.046939423006281E-5	DEFECT
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9997745708703059	WITHOUT_CLASSIFICATION	2.2542912969398675E-4	DEFECT
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998743523025496	WITHOUT_CLASSIFICATION	1.2564769745048435E-4	DEFECT
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9997574623383724	WITHOUT_CLASSIFICATION	2.4253766162776822E-4	DEFECT
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.999868611495615	WITHOUT_CLASSIFICATION	1.3138850438493009E-4	DEFECT
alu operations	WITHOUT_CLASSIFICATION	0.9998623348479846	WITHOUT_CLASSIFICATION	1.3766515201543E-4	DEFECT
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9999243275755064	WITHOUT_CLASSIFICATION	7.567242449363205E-5	DEFECT
closure instructions	WITHOUT_CLASSIFICATION	0.99987721550598	WITHOUT_CLASSIFICATION	1.2278449401998285E-4	DEFECT
eval instructions	WITHOUT_CLASSIFICATION	0.9997474700431312	WITHOUT_CLASSIFICATION	2.5252995686881257E-4	DEFECT
def instructions	WITHOUT_CLASSIFICATION	0.9998673069735128	WITHOUT_CLASSIFICATION	1.3269302648722856E-4	DEFECT
exception instructions	WITHOUT_CLASSIFICATION	0.9998082985232379	WITHOUT_CLASSIFICATION	1.9170147676202156E-4	DEFECT
Loads	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Stores	WITHOUT_CLASSIFICATION	0.9999626741226799	WITHOUT_CLASSIFICATION	3.7325877320087264E-5	DEFECT
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999247188646422	WITHOUT_CLASSIFICATION	7.528113535784398E-5	DEFECT
others	WITHOUT_CLASSIFICATION	0.9999646045683896	WITHOUT_CLASSIFICATION	3.539543161034683E-5	DEFECT
a case/when branch	WITHOUT_CLASSIFICATION	0.9998601650079023	WITHOUT_CLASSIFICATION	1.3983499209758475E-4	DEFECT
optimization guards	WITHOUT_CLASSIFICATION	0.9998614586478103	WITHOUT_CLASSIFICATION	1.3854135218963772E-4	DEFECT
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7075666640222329	DEFECT	0.29243333597776705	WITHOUT_CLASSIFICATION
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9997269025408502	WITHOUT_CLASSIFICATION	2.730974591497787E-4	DEFECT
scripts	WITHOUT_CLASSIFICATION	0.9999625654260246	WITHOUT_CLASSIFICATION	3.743457397538193E-5	DEFECT
scripts and modules	WITHOUT_CLASSIFICATION	0.999918068173079	WITHOUT_CLASSIFICATION	8.19318269208834E-5	DEFECT
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999285738854247	WITHOUT_CLASSIFICATION	7.1426114575332E-5	DEFECT
methods and closures	WITHOUT_CLASSIFICATION	0.999936146966064	WITHOUT_CLASSIFICATION	6.385303393596919E-5	DEFECT
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999768698548014	WITHOUT_CLASSIFICATION	2.3130145198600837E-5	DEFECT
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999623483259779	WITHOUT_CLASSIFICATION	3.765167402215292E-5	DEFECT
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999495974704439	WITHOUT_CLASSIFICATION	5.0402529556116286E-5	DEFECT
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9990475400350317	WITHOUT_CLASSIFICATION	9.52459964968262E-4	DEFECT
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9997591874309415	WITHOUT_CLASSIFICATION	2.4081256905840795E-4	DEFECT
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9986149426356242	WITHOUT_CLASSIFICATION	0.0013850573643757666	DEFECT
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999659441940564	WITHOUT_CLASSIFICATION	3.405580594365613E-5	DEFECT
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999048379730343	WITHOUT_CLASSIFICATION	9.516202696564475E-5	DEFECT
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9954277252758502	WITHOUT_CLASSIFICATION	0.004572274724149733	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998491162651165	WITHOUT_CLASSIFICATION	1.5088373488352384E-4	DEFECT
Readline	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999054780959266	WITHOUT_CLASSIFICATION	9.452190407344035E-5	DEFECT
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9984063459992509	WITHOUT_CLASSIFICATION	0.0015936540007491342	DEFECT
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9717199111664062	WITHOUT_CLASSIFICATION	0.028280088833593717	DEFECT
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9997330522046647	WITHOUT_CLASSIFICATION	2.6694779533536686E-4	DEFECT
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9988082961561926	WITHOUT_CLASSIFICATION	0.0011917038438075142	DEFECT
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999363882044665	WITHOUT_CLASSIFICATION	6.361179553349993E-4	DEFECT
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9999123577563622	WITHOUT_CLASSIFICATION	8.76422436378082E-5	DEFECT
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9999510128776654	WITHOUT_CLASSIFICATION	4.898712233453911E-5	DEFECT
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999131733724079	WITHOUT_CLASSIFICATION	8.682662759211509E-5	DEFECT
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9840322137256023	WITHOUT_CLASSIFICATION	0.015967786274397638	DEFECT
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9996031151389306	WITHOUT_CLASSIFICATION	3.968848610693394E-4	DEFECT
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9945398321524113	WITHOUT_CLASSIFICATION	0.005460167847588734	DEFECT
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9995313238465803	WITHOUT_CLASSIFICATION	4.686761534197569E-4	DEFECT
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999392350197274	WITHOUT_CLASSIFICATION	6.076498027276515E-5	DEFECT
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9996905752491496	WITHOUT_CLASSIFICATION	3.094247508503689E-4	DEFECT
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9979616239143037	WITHOUT_CLASSIFICATION	0.00203837608569631	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9981350963426855	WITHOUT_CLASSIFICATION	0.0018649036573145004	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9981350963426855	WITHOUT_CLASSIFICATION	0.0018649036573145004	DEFECT
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9995295247826994	WITHOUT_CLASSIFICATION	4.7047521730055194E-4	DEFECT
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998584711425742	WITHOUT_CLASSIFICATION	1.415288574257975E-4	DEFECT
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9995370785742779	WITHOUT_CLASSIFICATION	4.6292142572203947E-4	DEFECT
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997119243582614	WITHOUT_CLASSIFICATION	2.880756417386537E-4	DEFECT
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9997994645499859	WITHOUT_CLASSIFICATION	2.0053545001409216E-4	DEFECT
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9991956745425025	WITHOUT_CLASSIFICATION	8.043254574976146E-4	DEFECT
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9992994865764364	WITHOUT_CLASSIFICATION	7.005134235636017E-4	DEFECT
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999773696084647	WITHOUT_CLASSIFICATION	2.263039153525994E-5	DEFECT
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999891362118598	WITHOUT_CLASSIFICATION	1.0863788140079796E-5	DEFECT
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9998026339717868	WITHOUT_CLASSIFICATION	1.9736602821314423E-4	DEFECT
class or module	WITHOUT_CLASSIFICATION	0.9996560691428342	WITHOUT_CLASSIFICATION	3.4393085716582643E-4	DEFECT
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998606107575002	WITHOUT_CLASSIFICATION	1.393892424998201E-4	DEFECT
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998000650982223	WITHOUT_CLASSIFICATION	1.9993490177767218E-4	DEFECT
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9997912252767062	WITHOUT_CLASSIFICATION	2.0877472329381853E-4	DEFECT
IN is the same!	WITHOUT_CLASSIFICATION	0.9997586689788805	WITHOUT_CLASSIFICATION	2.41331021119423E-4	DEFECT
IN changed!	WITHOUT_CLASSIFICATION	0.9998601029433366	WITHOUT_CLASSIFICATION	1.3989705666331056E-4	DEFECT
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999291099355259	WITHOUT_CLASSIFICATION	7.089006447418835E-5	DEFECT
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9949396224130572	WITHOUT_CLASSIFICATION	0.005060377586942825	DEFECT
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9981370317063804	WITHOUT_CLASSIFICATION	0.0018629682936196865	DEFECT
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999389417845486	WITHOUT_CLASSIFICATION	6.105821545142596E-5	DEFECT
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9998023048977995	WITHOUT_CLASSIFICATION	1.9769510220057223E-4	DEFECT
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999795321219619	WITHOUT_CLASSIFICATION	2.0467878038107803E-4	DEFECT
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9998983184638881	WITHOUT_CLASSIFICATION	1.0168153611188101E-4	DEFECT
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9999001404714604	WITHOUT_CLASSIFICATION	9.985952853971038E-5	DEFECT
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9994976262339791	WITHOUT_CLASSIFICATION	5.023737660208958E-4	DEFECT
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999148979385741	WITHOUT_CLASSIFICATION	8.510206142578954E-5	DEFECT
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9978870325784829	WITHOUT_CLASSIFICATION	0.0021129674215170893	DEFECT
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999024782906369	WITHOUT_CLASSIFICATION	9.752170936308213E-5	DEFECT
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999164608723597	WITHOUT_CLASSIFICATION	8.353912764023154E-5	DEFECT
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9989235567907329	WITHOUT_CLASSIFICATION	0.0010764432092671599	DEFECT
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9997630836859421	WITHOUT_CLASSIFICATION	2.369163140579272E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999642302176709	WITHOUT_CLASSIFICATION	3.576978232904257E-5	DEFECT
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998584592256788	WITHOUT_CLASSIFICATION	1.4154077432105276E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999642302176709	WITHOUT_CLASSIFICATION	3.576978232904257E-5	DEFECT
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9997761330173514	WITHOUT_CLASSIFICATION	2.2386698264864139E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9986937671234649	WITHOUT_CLASSIFICATION	0.001306232876535081	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9986937671234649	WITHOUT_CLASSIFICATION	0.001306232876535081	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9986937671234649	WITHOUT_CLASSIFICATION	0.001306232876535081	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999785396617006	WITHOUT_CLASSIFICATION	2.1460338299344628E-5	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999785396617006	WITHOUT_CLASSIFICATION	2.1460338299344628E-5	DEFECT
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9992626080828695	WITHOUT_CLASSIFICATION	7.373919171305213E-4	DEFECT
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999858565336878	WITHOUT_CLASSIFICATION	1.4143466312191086E-4	DEFECT
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999570951144452	WITHOUT_CLASSIFICATION	4.290488555479759E-4	DEFECT
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9998426695658795	WITHOUT_CLASSIFICATION	1.5733043412042135E-4	DEFECT
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999905027236625	WITHOUT_CLASSIFICATION	9.497276337478925E-6	DEFECT
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.999958616430633	WITHOUT_CLASSIFICATION	4.138356936691932E-5	DEFECT
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9996277142255736	WITHOUT_CLASSIFICATION	3.7228577442635066E-4	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999768784718944	WITHOUT_CLASSIFICATION	2.312152810564043E-5	DEFECT
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999371028784847	WITHOUT_CLASSIFICATION	6.289712151532962E-5	DEFECT
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999516734462669	WITHOUT_CLASSIFICATION	4.832655373317344E-5	DEFECT
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999530672597847	WITHOUT_CLASSIFICATION	4.693274021526459E-5	DEFECT
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9985533699122114	WITHOUT_CLASSIFICATION	0.0014466300877885613	DEFECT
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999696362560788	WITHOUT_CLASSIFICATION	3.036374392107213E-5	DEFECT
root-level logic	WITHOUT_CLASSIFICATION	0.9998625761781327	WITHOUT_CLASSIFICATION	1.374238218672857E-4	DEFECT
root-level methods	WITHOUT_CLASSIFICATION	0.9999352637680234	WITHOUT_CLASSIFICATION	6.473623197651047E-5	DEFECT
root-level classes	WITHOUT_CLASSIFICATION	0.9999460518756534	WITHOUT_CLASSIFICATION	5.394812434649962E-5	DEFECT
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999048508564858	WITHOUT_CLASSIFICATION	9.514914351408589E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9998910779316837	WITHOUT_CLASSIFICATION	1.089220683161428E-4	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9998910779316837	WITHOUT_CLASSIFICATION	1.089220683161428E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999043994914553	WITHOUT_CLASSIFICATION	9.560050854472157E-5	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999043994914553	WITHOUT_CLASSIFICATION	9.560050854472157E-5	DEFECT
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999414826676812	WITHOUT_CLASSIFICATION	5.851733231872881E-5	DEFECT
Object[] args	WITHOUT_CLASSIFICATION	0.9998702106410606	WITHOUT_CLASSIFICATION	1.297893589393858E-4	DEFECT
load handle	WITHOUT_CLASSIFICATION	0.9999634798075715	WITHOUT_CLASSIFICATION	3.6520192428466346E-5	DEFECT
args array	WITHOUT_CLASSIFICATION	0.9999523947183038	WITHOUT_CLASSIFICATION	4.760528169624494E-5	DEFECT
i'th argument	WITHOUT_CLASSIFICATION	0.9999315738516641	WITHOUT_CLASSIFICATION	6.842614833596532E-5	DEFECT
invoke specific arity version	WITHOUT_CLASSIFICATION	0.99974722100462	WITHOUT_CLASSIFICATION	2.5277899538003783E-4	DEFECT
Object arg0	WITHOUT_CLASSIFICATION	0.9998147274269731	WITHOUT_CLASSIFICATION	1.8527257302687446E-4	DEFECT
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999228998281359	WITHOUT_CLASSIFICATION	7.710017186405054E-5	DEFECT
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999635853942199	WITHOUT_CLASSIFICATION	3.6414605780109635E-5	DEFECT
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999386418334636	WITHOUT_CLASSIFICATION	6.135816653643273E-5	DEFECT
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999385535623394	WITHOUT_CLASSIFICATION	6.14464376605948E-5	DEFECT
at end	WITHOUT_CLASSIFICATION	0.99990710259893	WITHOUT_CLASSIFICATION	9.289740107005321E-5	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999978971927317	WITHOUT_CLASSIFICATION	2.102807268403539E-6	DEFECT
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999688132178077	WITHOUT_CLASSIFICATION	3.118678219215919E-5	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999768784718944	WITHOUT_CLASSIFICATION	2.312152810564043E-5	DEFECT
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9998952701151967	WITHOUT_CLASSIFICATION	1.047298848031458E-4	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999831274579699	WITHOUT_CLASSIFICATION	1.6872542030058356E-5	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999831274579699	WITHOUT_CLASSIFICATION	1.6872542030058356E-5	DEFECT
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9994060486221914	WITHOUT_CLASSIFICATION	5.939513778086004E-4	DEFECT
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9990154898758725	WITHOUT_CLASSIFICATION	9.845101241274985E-4	DEFECT
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9997831841900497	WITHOUT_CLASSIFICATION	2.168158099503596E-4	DEFECT
restore position	WITHOUT_CLASSIFICATION	0.9996071431230865	WITHOUT_CLASSIFICATION	3.928568769134531E-4	DEFECT
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999503566942581	WITHOUT_CLASSIFICATION	4.964330574191253E-5	DEFECT
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9998142531585873	WITHOUT_CLASSIFICATION	1.8574684141275743E-4	DEFECT
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9998747100316294	WITHOUT_CLASSIFICATION	1.2528996837066566E-4	DEFECT
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9837032369649856	WITHOUT_CLASSIFICATION	0.016296763035014334	DEFECT
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9995200069118493	WITHOUT_CLASSIFICATION	4.799930881507406E-4	DEFECT
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9988419457258347	WITHOUT_CLASSIFICATION	0.0011580542741652664	DEFECT
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9995271136520621	WITHOUT_CLASSIFICATION	4.728863479377587E-4	DEFECT
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9971317952263374	WITHOUT_CLASSIFICATION	0.0028682047736626145	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9966580683554087	WITHOUT_CLASSIFICATION	0.003341931644591332	DEFECT
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999399576559708	WITHOUT_CLASSIFICATION	6.004234402923619E-5	DEFECT
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999960080783749	WITHOUT_CLASSIFICATION	3.991921625095812E-5	DEFECT
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9997870271844173	WITHOUT_CLASSIFICATION	2.1297281558281368E-4	DEFECT
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999487431626399	WITHOUT_CLASSIFICATION	5.125683736014333E-5	DEFECT
Toplevel defines	WITHOUT_CLASSIFICATION	0.9998591105902329	WITHOUT_CLASSIFICATION	1.408894097671414E-4	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999808066403194	WITHOUT_CLASSIFICATION	1.9193359680601096E-5	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999077199991593	WITHOUT_CLASSIFICATION	9.228000084068359E-5	DEFECT
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997381125590916	WITHOUT_CLASSIFICATION	2.6188744090843165E-4	DEFECT
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9997929970032196	WITHOUT_CLASSIFICATION	2.0700299678049546E-4	DEFECT
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9998786183903876	WITHOUT_CLASSIFICATION	1.2138160961246357E-4	DEFECT
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9999806857945857	WITHOUT_CLASSIFICATION	1.9314205414269445E-5	DEFECT
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9988658071513753	WITHOUT_CLASSIFICATION	0.001134192848624681	DEFECT
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9997736644230394	WITHOUT_CLASSIFICATION	2.2633557696056595E-4	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9944241348201416	WITHOUT_CLASSIFICATION	0.0055758651798584425	DEFECT
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999445514970173	WITHOUT_CLASSIFICATION	5.544850298274588E-5	DEFECT
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9997251688255282	WITHOUT_CLASSIFICATION	2.748311744717825E-4	DEFECT
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9993402339046703	WITHOUT_CLASSIFICATION	6.597660953296906E-4	DEFECT
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999800007639183	WITHOUT_CLASSIFICATION	1.9999236081700748E-4	DEFECT
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9994187284062078	WITHOUT_CLASSIFICATION	5.81271593792148E-4	DEFECT
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9649253067900985	WITHOUT_CLASSIFICATION	0.03507469320990163	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9997214007374493	WITHOUT_CLASSIFICATION	2.785992625506339E-4	DEFECT
$blah	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9944241348201416	WITHOUT_CLASSIFICATION	0.0055758651798584425	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9991248132386469	WITHOUT_CLASSIFICATION	8.751867613531855E-4	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9997214007374493	WITHOUT_CLASSIFICATION	2.785992625506339E-4	DEFECT
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9963060922857989	WITHOUT_CLASSIFICATION	0.0036939077142011515	DEFECT
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999832905834788	WITHOUT_CLASSIFICATION	1.6709416521159217E-5	DEFECT
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998824239260615	WITHOUT_CLASSIFICATION	1.1757607393846977E-4	DEFECT
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9997238194902325	WITHOUT_CLASSIFICATION	2.761805097675415E-4	DEFECT
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999414826676812	WITHOUT_CLASSIFICATION	5.851733231872881E-5	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9995084223047629	WITHOUT_CLASSIFICATION	4.915776952371381E-4	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9995084223047629	WITHOUT_CLASSIFICATION	4.915776952371381E-4	DEFECT
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999532791660339	WITHOUT_CLASSIFICATION	4.672083396605495E-5	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9995987936456545	WITHOUT_CLASSIFICATION	4.012063543454953E-4	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999188725367836	WITHOUT_CLASSIFICATION	8.112746321635142E-5	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999188725367836	WITHOUT_CLASSIFICATION	8.112746321635142E-5	DEFECT
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999652467193044	WITHOUT_CLASSIFICATION	3.4753280695538574E-5	DEFECT
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.999359048250312	WITHOUT_CLASSIFICATION	6.409517496880105E-4	DEFECT
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9987954643502388	WITHOUT_CLASSIFICATION	0.0012045356497612427	DEFECT
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9979645331832323	WITHOUT_CLASSIFICATION	0.0020354668167676675	DEFECT
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998281057396027	WITHOUT_CLASSIFICATION	1.718942603972879E-4	DEFECT
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999103214859073	WITHOUT_CLASSIFICATION	8.967851409268462E-4	DEFECT
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998215842447604	WITHOUT_CLASSIFICATION	1.7841575523964086E-4	DEFECT
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999012790495739	WITHOUT_CLASSIFICATION	9.872095042609957E-5	DEFECT
host and port given	WITHOUT_CLASSIFICATION	0.9999610184850324	WITHOUT_CLASSIFICATION	3.8981514967629796E-5	DEFECT
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999786778228353	WITHOUT_CLASSIFICATION	2.132217716462553E-5	DEFECT
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998162593012817	WITHOUT_CLASSIFICATION	1.837406987182898E-4	DEFECT
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998459167139325	WITHOUT_CLASSIFICATION	1.5408328606743453E-4	DEFECT
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9995998799898231	WITHOUT_CLASSIFICATION	4.001200101769155E-4	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999599520902701	WITHOUT_CLASSIFICATION	4.00479097299083E-4	DEFECT
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9998216816836815	WITHOUT_CLASSIFICATION	1.7831831631852124E-4	DEFECT
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9996238566171652	WITHOUT_CLASSIFICATION	3.761433828346861E-4	DEFECT
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998206049580768	WITHOUT_CLASSIFICATION	1.7939504192324298E-4	DEFECT
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999619603016652	WITHOUT_CLASSIFICATION	3.8039698334855335E-5	DEFECT
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9973098748210608	WITHOUT_CLASSIFICATION	0.0026901251789392504	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
255.255.255.255	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
0.0.0.0	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9997857685035386	WITHOUT_CLASSIFICATION	2.1423149646138096E-4	DEFECT
line 323	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9974505246237574	WITHOUT_CLASSIFICATION	0.0025494753762425213	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9974505246237574	WITHOUT_CLASSIFICATION	0.0025494753762425213	DEFECT
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9998662152807272	WITHOUT_CLASSIFICATION	1.3378471927278965E-4	DEFECT
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999036852811543	WITHOUT_CLASSIFICATION	9.631471884582716E-5	DEFECT
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998606107575002	WITHOUT_CLASSIFICATION	1.393892424998201E-4	DEFECT
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9998100149845182	WITHOUT_CLASSIFICATION	1.899850154818135E-4	DEFECT
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9997195083587662	WITHOUT_CLASSIFICATION	2.8049164123381177E-4	DEFECT
RubySocket	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9997934376856414	WITHOUT_CLASSIFICATION	2.0656231435846103E-4	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998593004889569	WITHOUT_CLASSIFICATION	1.4069951104304777E-4	DEFECT
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9988740774246518	WITHOUT_CLASSIFICATION	0.0011259225753482676	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999995912024615	WITHOUT_CLASSIFICATION	4.087975384132814E-7	DEFECT
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999962550573935	WITHOUT_CLASSIFICATION	3.7449426065545822E-6	DEFECT
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999891466339932	WITHOUT_CLASSIFICATION	1.0853366006818253E-5	DEFECT
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9975995044653515	WITHOUT_CLASSIFICATION	0.0024004955346484153	DEFECT
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999585529509128	WITHOUT_CLASSIFICATION	4.144704908716513E-5	DEFECT
Call the thread's code	WITHOUT_CLASSIFICATION	0.999924090815963	WITHOUT_CLASSIFICATION	7.590918403696305E-5	DEFECT
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999921063482643	WITHOUT_CLASSIFICATION	7.893651735710234E-6	DEFECT
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9995373837252813	WITHOUT_CLASSIFICATION	4.626162747187079E-4	DEFECT
be dead	WITHOUT_CLASSIFICATION	0.9998685111160224	WITHOUT_CLASSIFICATION	1.3148888397764518E-4	DEFECT
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9972926478770144	WITHOUT_CLASSIFICATION	0.0027073521229855433	DEFECT
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999229064744892	WITHOUT_CLASSIFICATION	7.70935255107443E-5	DEFECT
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9993946823150525	WITHOUT_CLASSIFICATION	6.05317684947582E-4	DEFECT
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9997785990491956	WITHOUT_CLASSIFICATION	2.2140095080435383E-4	DEFECT
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999463155380204	WITHOUT_CLASSIFICATION	5.368446197975536E-5	DEFECT
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999865023622365	WITHOUT_CLASSIFICATION	1.349763776358506E-5	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9983548147029201	WITHOUT_CLASSIFICATION	0.0016451852970799958	DEFECT
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.990317703726639	WITHOUT_CLASSIFICATION	0.00968229627336097	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999984086723333	WITHOUT_CLASSIFICATION	1.5913276667002535E-5	DEFECT
main body	WITHOUT_CLASSIFICATION	0.9999714026421738	WITHOUT_CLASSIFICATION	2.859735782613423E-5	DEFECT
return jump handling	WITHOUT_CLASSIFICATION	0.9999718049943493	WITHOUT_CLASSIFICATION	2.8195005650566153E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.9999647911734164	WITHOUT_CLASSIFICATION	3.520882658362603E-5	DEFECT
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999611063952843	WITHOUT_CLASSIFICATION	3.8893604715583016E-5	DEFECT
redo jump handling	WITHOUT_CLASSIFICATION	0.9999220976327325	WITHOUT_CLASSIFICATION	7.790236726749376E-5	DEFECT
clear the redo	WITHOUT_CLASSIFICATION	0.9999223133742082	WITHOUT_CLASSIFICATION	7.768662579178071E-5	DEFECT
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9997738741281741	WITHOUT_CLASSIFICATION	2.261258718259498E-4	DEFECT
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9985465677700119	WITHOUT_CLASSIFICATION	0.0014534322299881246	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999777857258622	WITHOUT_CLASSIFICATION	2.2214274137810036E-4	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999864284909047	WITHOUT_CLASSIFICATION	1.3571509095300547E-4	DEFECT
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999632864353888	WITHOUT_CLASSIFICATION	3.671356461113555E-5	DEFECT
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9992811952889015	WITHOUT_CLASSIFICATION	7.188047110984846E-4	DEFECT
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9947290810802433	WITHOUT_CLASSIFICATION	0.0052709189197566834	DEFECT
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999685564317536	WITHOUT_CLASSIFICATION	3.144356824635082E-5	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9967977063325872	WITHOUT_CLASSIFICATION	0.003202293667412814	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9967977063325872	WITHOUT_CLASSIFICATION	0.003202293667412814	DEFECT
normal all-rest method	WITHOUT_CLASSIFICATION	0.99997085136421	WITHOUT_CLASSIFICATION	2.9148635789828858E-5	DEFECT
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999019580237037	WITHOUT_CLASSIFICATION	9.804197629623573E-5	DEFECT
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999064469838894	WITHOUT_CLASSIFICATION	9.355301611064148E-5	DEFECT
return	WITHOUT_CLASSIFICATION	0.9999864383756656	WITHOUT_CLASSIFICATION	1.3561624334532469E-5	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999690563376652	WITHOUT_CLASSIFICATION	3.094366233483114E-5	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999599668367647	WITHOUT_CLASSIFICATION	4.003316323524778E-5	DEFECT
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999241569230914	WITHOUT_CLASSIFICATION	7.584307690856354E-5	DEFECT
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9963943385453797	WITHOUT_CLASSIFICATION	0.0036056614546204103	DEFECT
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.993830140603012	WITHOUT_CLASSIFICATION	0.006169859396988057	DEFECT
tc	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
self name	WITHOUT_CLASSIFICATION	0.9999619762521641	WITHOUT_CLASSIFICATION	3.802374783593026E-5	DEFECT
no args	WITHOUT_CLASSIFICATION	0.9999850901609353	WITHOUT_CLASSIFICATION	1.4909839064777167E-5	DEFECT
variable args with block	WITHOUT_CLASSIFICATION	0.9999699282053909	WITHOUT_CLASSIFICATION	3.007179460914254E-5	DEFECT
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999822119726052	WITHOUT_CLASSIFICATION	1.7788027394829785E-5	DEFECT
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999323929367544	WITHOUT_CLASSIFICATION	6.760706324560631E-5	DEFECT
one arg with block	WITHOUT_CLASSIFICATION	0.9999774635706589	WITHOUT_CLASSIFICATION	2.2536429341121485E-5	DEFECT
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999629063128769	WITHOUT_CLASSIFICATION	3.709368712316779E-5	DEFECT
two args with block	WITHOUT_CLASSIFICATION	0.999891295718198	WITHOUT_CLASSIFICATION	1.0870428180197761E-4	DEFECT
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998294615283919	WITHOUT_CLASSIFICATION	1.705384716080926E-4	DEFECT
three args with block	WITHOUT_CLASSIFICATION	0.9999562466902118	WITHOUT_CLASSIFICATION	4.375330978816302E-5	DEFECT
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999256763427059	WITHOUT_CLASSIFICATION	7.432365729404933E-5	DEFECT
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999763881496174	WITHOUT_CLASSIFICATION	2.3611850382568915E-5	DEFECT
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999903625140399	WITHOUT_CLASSIFICATION	9.637485960143406E-6	DEFECT
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999799681484264	WITHOUT_CLASSIFICATION	2.003185157361488E-5	DEFECT
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999921052851451	WITHOUT_CLASSIFICATION	7.89471485476011E-6	DEFECT
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999637001830978	WITHOUT_CLASSIFICATION	3.629981690227287E-5	DEFECT
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999735326270274	WITHOUT_CLASSIFICATION	2.646737297265978E-5	DEFECT
load target for invocations	WITHOUT_CLASSIFICATION	0.9999621247252676	WITHOUT_CLASSIFICATION	3.7875274732380474E-5	DEFECT
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999262185992152	WITHOUT_CLASSIFICATION	7.378140078483931E-5	DEFECT
static invocation	WITHOUT_CLASSIFICATION	0.9998964364107056	WITHOUT_CLASSIFICATION	1.0356358929447826E-4	DEFECT
virtual invocation	WITHOUT_CLASSIFICATION	0.9998677109052543	WITHOUT_CLASSIFICATION	1.3228909474573443E-4	DEFECT
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999825759768564	WITHOUT_CLASSIFICATION	1.7424023143646645E-5	DEFECT
normal finally and exit	WITHOUT_CLASSIFICATION	0.9999095246176408	WITHOUT_CLASSIFICATION	9.047538235913398E-5	DEFECT
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999490147910897	WITHOUT_CLASSIFICATION	5.098520891042731E-5	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999864284909047	WITHOUT_CLASSIFICATION	1.3571509095300547E-4	DEFECT
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9990411875759085	WITHOUT_CLASSIFICATION	9.58812424091396E-4	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999528995951723	WITHOUT_CLASSIFICATION	4.710040482764634E-5	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999528995951723	WITHOUT_CLASSIFICATION	4.710040482764634E-5	DEFECT
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999512899964582	WITHOUT_CLASSIFICATION	4.8710003541880425E-5	DEFECT
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9986336641965577	WITHOUT_CLASSIFICATION	0.0013663358034422218	DEFECT
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
never reached	WITHOUT_CLASSIFICATION	0.9990464643944774	WITHOUT_CLASSIFICATION	9.535356055225869E-4	DEFECT
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999405987002709	WITHOUT_CLASSIFICATION	5.940129972908763E-5	DEFECT
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999446361068194	WITHOUT_CLASSIFICATION	5.5363893180531725E-5	DEFECT
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999698279037482	WITHOUT_CLASSIFICATION	3.0172096251772596E-5	DEFECT
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.999860342258907	WITHOUT_CLASSIFICATION	1.396577410929172E-4	DEFECT
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999432726013174	WITHOUT_CLASSIFICATION	5.672739868254752E-5	DEFECT
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999690848042505	WITHOUT_CLASSIFICATION	3.09151957495282E-5	DEFECT
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998569030562127	WITHOUT_CLASSIFICATION	1.4309694378739917E-4	DEFECT
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999391357673144	WITHOUT_CLASSIFICATION	6.086423268551209E-5	DEFECT
promise to implement N	WITHOUT_CLASSIFICATION	0.9998996249188034	WITHOUT_CLASSIFICATION	1.003750811966423E-4	DEFECT
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999732709974106	WITHOUT_CLASSIFICATION	2.67290025893646E-5	DEFECT
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9998036503579384	WITHOUT_CLASSIFICATION	1.963496420616632E-4	DEFECT
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9997640223172147	WITHOUT_CLASSIFICATION	2.359776827851744E-4	DEFECT
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9998279317166274	WITHOUT_CLASSIFICATION	1.7206828337247224E-4	DEFECT
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.999839625680589	WITHOUT_CLASSIFICATION	1.603743194110264E-4	DEFECT
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999125953693515	WITHOUT_CLASSIFICATION	8.740463064855457E-5	DEFECT
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9995955137312582	WITHOUT_CLASSIFICATION	4.044862687417494E-4	DEFECT
promise to implement three	WITHOUT_CLASSIFICATION	0.9998971529889005	WITHOUT_CLASSIFICATION	1.0284701109960801E-4	DEFECT
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9998919127159894	WITHOUT_CLASSIFICATION	1.0808728401060351E-4	DEFECT
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999475920700457	WITHOUT_CLASSIFICATION	5.2407929954320684E-5	DEFECT
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999437489624977	WITHOUT_CLASSIFICATION	5.6251037502273795E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999182143767361	WITHOUT_CLASSIFICATION	8.178562326397342E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996617937968983	WITHOUT_CLASSIFICATION	3.382062031016798E-4	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999598291115496	WITHOUT_CLASSIFICATION	4.017088845047675E-5	DEFECT
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9997934963641724	WITHOUT_CLASSIFICATION	2.0650363582775812E-4	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999278246140516	WITHOUT_CLASSIFICATION	7.217538594829122E-5	DEFECT
start setup method	WITHOUT_CLASSIFICATION	0.9999660923148216	WITHOUT_CLASSIFICATION	3.390768517833873E-5	DEFECT
set RubyClass	WITHOUT_CLASSIFICATION	0.9999139860399519	WITHOUT_CLASSIFICATION	8.601396004817729E-5	DEFECT
set Ruby	WITHOUT_CLASSIFICATION	0.9999773146838448	WITHOUT_CLASSIFICATION	2.268531615523112E-5	DEFECT
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999003482178839	WITHOUT_CLASSIFICATION	9.965178211609605E-5	DEFECT
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999335186876086	WITHOUT_CLASSIFICATION	6.64813123914051E-5	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999096442254056	WITHOUT_CLASSIFICATION	9.035577459432703E-5	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999364387228014	WITHOUT_CLASSIFICATION	6.356127719869234E-5	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999182143767361	WITHOUT_CLASSIFICATION	8.178562326397342E-5	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996617937968983	WITHOUT_CLASSIFICATION	3.382062031016798E-4	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999598291115496	WITHOUT_CLASSIFICATION	4.017088845047675E-5	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999278246140516	WITHOUT_CLASSIFICATION	7.217538594829122E-5	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9997825156915786	WITHOUT_CLASSIFICATION	2.1748430842149325E-4	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9994559079498544	WITHOUT_CLASSIFICATION	5.440920501456861E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998698399169332	WITHOUT_CLASSIFICATION	1.3016008306683324E-4	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999577581527076	WITHOUT_CLASSIFICATION	4.224184729250441E-5	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999618756204018	WITHOUT_CLASSIFICATION	3.8124379598222446E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999006871490741	WITHOUT_CLASSIFICATION	9.93128509259205E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9999485369451407	WITHOUT_CLASSIFICATION	5.1463054859222456E-5	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9998230538886976	WITHOUT_CLASSIFICATION	1.7694611130238572E-4	DEFECT
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9998805346300697	WITHOUT_CLASSIFICATION	1.194653699303888E-4	DEFECT
store the wrapper	WITHOUT_CLASSIFICATION	0.9999482426025398	WITHOUT_CLASSIFICATION	5.175739746014811E-5	DEFECT
prepare temp locals	WITHOUT_CLASSIFICATION	0.999871593079233	WITHOUT_CLASSIFICATION	1.2840692076708293E-4	DEFECT
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999585654901787	WITHOUT_CLASSIFICATION	4.143450982138489E-5	DEFECT
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9993882928987465	WITHOUT_CLASSIFICATION	6.117071012535743E-4	DEFECT
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999573699013934	WITHOUT_CLASSIFICATION	4.2630098606531737E-5	DEFECT
store it	WITHOUT_CLASSIFICATION	0.9999705045752084	WITHOUT_CLASSIFICATION	2.9495424791616333E-5	DEFECT
end of try block	WITHOUT_CLASSIFICATION	0.9999891760304833	WITHOUT_CLASSIFICATION	1.0823969516705643E-5	DEFECT
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999476644973475	WITHOUT_CLASSIFICATION	5.233550265253277E-5	DEFECT
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9996304970181691	WITHOUT_CLASSIFICATION	3.6950298183090836E-4	DEFECT
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9987854228121358	WITHOUT_CLASSIFICATION	0.0012145771878642518	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999364387228014	WITHOUT_CLASSIFICATION	6.356127719869234E-5	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9994559079498544	WITHOUT_CLASSIFICATION	5.440920501456861E-4	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998698399169332	WITHOUT_CLASSIFICATION	1.3016008306683324E-4	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9999618756204018	WITHOUT_CLASSIFICATION	3.8124379598222446E-5	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999006871490741	WITHOUT_CLASSIFICATION	9.93128509259205E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9999485369451407	WITHOUT_CLASSIFICATION	5.1463054859222456E-5	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9998230538886976	WITHOUT_CLASSIFICATION	1.7694611130238572E-4	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9997240670774028	WITHOUT_CLASSIFICATION	2.759329225971409E-4	DEFECT
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9970090065517153	WITHOUT_CLASSIFICATION	0.0029909934482845735	DEFECT
perform the dispatch	WITHOUT_CLASSIFICATION	0.999895868151422	WITHOUT_CLASSIFICATION	1.0413184857800047E-4	DEFECT
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999324157989532	WITHOUT_CLASSIFICATION	6.758420104682338E-5	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9991602416215106	WITHOUT_CLASSIFICATION	8.397583784893452E-4	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9991602416215106	WITHOUT_CLASSIFICATION	8.397583784893452E-4	DEFECT
setup the class	WITHOUT_CLASSIFICATION	0.9996271632550339	WITHOUT_CLASSIFICATION	3.7283674496606717E-4	DEFECT
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999547092964294	WITHOUT_CLASSIFICATION	4.52907035706124E-5	DEFECT
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999701284462851	WITHOUT_CLASSIFICATION	2.987155371489296E-5	DEFECT
probably a primitive	WITHOUT_CLASSIFICATION	0.9998449021572782	WITHOUT_CLASSIFICATION	1.5509784272189594E-4	DEFECT
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999978360569368	WITHOUT_CLASSIFICATION	2.163943063201488E-6	DEFECT
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9998004149953723	WITHOUT_CLASSIFICATION	1.995850046277178E-4	DEFECT
set the full name	WITHOUT_CLASSIFICATION	0.9999498210481642	WITHOUT_CLASSIFICATION	5.0178951835721365E-5	DEFECT
include all interfaces	WITHOUT_CLASSIFICATION	0.9999369407537155	WITHOUT_CLASSIFICATION	6.305924628445163E-5	DEFECT
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9996950040962571	WITHOUT_CLASSIFICATION	3.0499590374290263E-4	DEFECT
add array construction methods	WITHOUT_CLASSIFICATION	0.9998592846022264	WITHOUT_CLASSIFICATION	1.4071539777353598E-4	DEFECT
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9996212146796387	WITHOUT_CLASSIFICATION	3.787853203613046E-4	DEFECT
add all instance and static methods	WITHOUT_CLASSIFICATION	0.999966450672305	WITHOUT_CLASSIFICATION	3.354932769496416E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999286911967977	WITHOUT_CLASSIFICATION	7.13088032023034E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9996878818576475	WITHOUT_CLASSIFICATION	3.121181423525364E-4	DEFECT
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998889859195293	WITHOUT_CLASSIFICATION	1.1101408047064946E-4	DEFECT
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999009022993569	WITHOUT_CLASSIFICATION	9.909770064301262E-5	DEFECT
add all static variables	WITHOUT_CLASSIFICATION	0.9999280051568189	WITHOUT_CLASSIFICATION	7.199484318111114E-5	DEFECT
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999316164764344	WITHOUT_CLASSIFICATION	6.838352356556684E-5	DEFECT
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999185758424824	WITHOUT_CLASSIFICATION	8.142415751750872E-5	DEFECT
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999920930452012	WITHOUT_CLASSIFICATION	7.906954798773834E-6	DEFECT
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9706367327397879	WITHOUT_CLASSIFICATION	0.02936326726021212	DEFECT
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9990488351654716	WITHOUT_CLASSIFICATION	9.511648345284597E-4	DEFECT
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9996672458443259	WITHOUT_CLASSIFICATION	3.327541556741658E-4	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999879866899883	WITHOUT_CLASSIFICATION	1.2013310011593799E-5	DEFECT
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999607304962576	WITHOUT_CLASSIFICATION	3.926950374242685E-5	DEFECT
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997393577326904	WITHOUT_CLASSIFICATION	2.606422673095894E-4	DEFECT
line 326	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999879866899883	WITHOUT_CLASSIFICATION	1.2013310011593799E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9996878818576475	WITHOUT_CLASSIFICATION	3.121181423525364E-4	DEFECT
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998934193808238	WITHOUT_CLASSIFICATION	1.0658061917625458E-4	DEFECT
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9998233006117935	WITHOUT_CLASSIFICATION	1.7669938820650668E-4	DEFECT
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9997971182384524	WITHOUT_CLASSIFICATION	2.028817615475172E-4	DEFECT
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.996746607570486	WITHOUT_CLASSIFICATION	0.0032533924295138064	DEFECT
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999941794874753	WITHOUT_CLASSIFICATION	5.820512524693675E-5	DEFECT
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999741630744412	WITHOUT_CLASSIFICATION	2.583692555872559E-5	DEFECT
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998121717116668	WITHOUT_CLASSIFICATION	1.8782828833318593E-4	DEFECT
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999974626749334	WITHOUT_CLASSIFICATION	2.5373250666025445E-5	DEFECT
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.8820389533915972	WITHOUT_CLASSIFICATION	0.11796104660840281	DEFECT
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9989100550073191	WITHOUT_CLASSIFICATION	0.0010899449926809323	DEFECT
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9979835793609924	WITHOUT_CLASSIFICATION	0.0020164206390076798	DEFECT
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.999943511098541	WITHOUT_CLASSIFICATION	5.648890145913779E-5	DEFECT
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9985173230462934	WITHOUT_CLASSIFICATION	0.0014826769537065801	DEFECT
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999935219524381	WITHOUT_CLASSIFICATION	6.478047561975826E-6	DEFECT
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998786618945744	WITHOUT_CLASSIFICATION	1.2133810542561798E-4	DEFECT
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9995593168551099	WITHOUT_CLASSIFICATION	4.4068314489007377E-4	DEFECT
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9996130197185061	WITHOUT_CLASSIFICATION	3.869802814938083E-4	DEFECT
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9961898877248647	WITHOUT_CLASSIFICATION	0.0038101122751352736	DEFECT
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999270312168	WITHOUT_CLASSIFICATION	7.296878328053345E-8	DEFECT
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9998916864160995	WITHOUT_CLASSIFICATION	1.0831358390047657E-4	DEFECT
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999604049160553	WITHOUT_CLASSIFICATION	3.959508394468476E-5	DEFECT
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9994020788645245	WITHOUT_CLASSIFICATION	5.979211354754824E-4	DEFECT
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9995567993614155	WITHOUT_CLASSIFICATION	4.4320063858439813E-4	DEFECT
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9997419732689751	WITHOUT_CLASSIFICATION	2.580267310249318E-4	DEFECT
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999984100310398	WITHOUT_CLASSIFICATION	1.5899689601946715E-5	DEFECT
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9990625188516454	WITHOUT_CLASSIFICATION	9.374811483545621E-4	DEFECT
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9935713931190345	WITHOUT_CLASSIFICATION	0.006428606880965353	DEFECT
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998497745077075	WITHOUT_CLASSIFICATION	1.5022549229245998E-4	DEFECT
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998738212507139	WITHOUT_CLASSIFICATION	1.261787492860322E-4	DEFECT
add reference to interface module	WITHOUT_CLASSIFICATION	0.9998850876231227	WITHOUT_CLASSIFICATION	1.1491237687740725E-4	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999286911967977	WITHOUT_CLASSIFICATION	7.13088032023034E-5	DEFECT
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999632572192779	WITHOUT_CLASSIFICATION	3.674278072201141E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9965735070776977	WITHOUT_CLASSIFICATION	0.003426492922302433	DEFECT
weakly reserved names	WITHOUT_CLASSIFICATION	0.9998942630729605	WITHOUT_CLASSIFICATION	1.0573692703961869E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999881804378286	WITHOUT_CLASSIFICATION	1.181956217140847E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999881804378286	WITHOUT_CLASSIFICATION	1.181956217140847E-4	DEFECT
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998355106333927	WITHOUT_CLASSIFICATION	1.6448936660736212E-4	DEFECT
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999562248698771	WITHOUT_CLASSIFICATION	4.377513012288274E-5	DEFECT
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999687845664016	WITHOUT_CLASSIFICATION	3.1215433598391795E-5	DEFECT
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999144698249929	WITHOUT_CLASSIFICATION	8.553017500711423E-5	DEFECT
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9989646508439506	WITHOUT_CLASSIFICATION	0.0010353491560493597	DEFECT
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9993377550203304	WITHOUT_CLASSIFICATION	6.622449796696635E-4	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9988742249714687	WITHOUT_CLASSIFICATION	0.0011257750285312874	DEFECT
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999982207391646	WITHOUT_CLASSIFICATION	1.7792608354002084E-5	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999830211365628	WITHOUT_CLASSIFICATION	1.6978863437188855E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999269279035009	WITHOUT_CLASSIFICATION	7.307209649912757E-5	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998245459824618	WITHOUT_CLASSIFICATION	1.7545401753821843E-4	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998863984479572	WITHOUT_CLASSIFICATION	1.1360155204274783E-4	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.999809940198201	WITHOUT_CLASSIFICATION	1.9005980179889954E-4	DEFECT
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9998783701021339	WITHOUT_CLASSIFICATION	1.2162989786615356E-4	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
something?	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999798426727833	WITHOUT_CLASSIFICATION	2.0157327216711382E-5	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999798426727833	WITHOUT_CLASSIFICATION	2.0157327216711382E-5	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9997602972460755	WITHOUT_CLASSIFICATION	2.3970275392439443E-4	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9997602972460755	WITHOUT_CLASSIFICATION	2.3970275392439443E-4	DEFECT
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999959105938955	WITHOUT_CLASSIFICATION	4.089406104506549E-5	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9954789528641802	WITHOUT_CLASSIFICATION	0.004521047135819848	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999063283896288	WITHOUT_CLASSIFICATION	9.367161037120618E-5	DEFECT
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999966952670206	WITHOUT_CLASSIFICATION	3.3047329792778765E-6	DEFECT
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999509569232726	WITHOUT_CLASSIFICATION	4.904307672739192E-4	DEFECT
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.999606811076957	WITHOUT_CLASSIFICATION	3.9318892304295814E-4	DEFECT
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999885330595187	WITHOUT_CLASSIFICATION	1.1466940481283289E-5	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998863984479572	WITHOUT_CLASSIFICATION	1.1360155204274783E-4	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.999809940198201	WITHOUT_CLASSIFICATION	1.9005980179889954E-4	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9991225590536927	WITHOUT_CLASSIFICATION	8.774409463073115E-4	DEFECT
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999019682015321	WITHOUT_CLASSIFICATION	9.803179846794818E-5	DEFECT
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9992577848564813	WITHOUT_CLASSIFICATION	7.422151435186994E-4	DEFECT
see note above re: return type	WITHOUT_CLASSIFICATION	0.9999489665285622	WITHOUT_CLASSIFICATION	5.10334714378735E-5	DEFECT
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999627423374714	WITHOUT_CLASSIFICATION	3.725766252861571E-5	DEFECT
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9922317025889118	WITHOUT_CLASSIFICATION	0.007768297411088206	DEFECT
one-dimensional array	WITHOUT_CLASSIFICATION	0.9998188183450976	WITHOUT_CLASSIFICATION	1.8118165490246875E-4	DEFECT
n-dimensional array	WITHOUT_CLASSIFICATION	0.9998038291039841	WITHOUT_CLASSIFICATION	1.9617089601586032E-4	DEFECT
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9997947156332019	WITHOUT_CLASSIFICATION	2.0528436679820682E-4	DEFECT
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999912668418585	WITHOUT_CLASSIFICATION	8.733158141532571E-6	DEFECT
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9996839589782736	WITHOUT_CLASSIFICATION	3.160410217264466E-4	DEFECT
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9987663395279611	WITHOUT_CLASSIFICATION	0.0012336604720388205	DEFECT
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.999809940198201	WITHOUT_CLASSIFICATION	1.9005980179889954E-4	DEFECT
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9976073789036761	WITHOUT_CLASSIFICATION	0.002392621096323791	DEFECT
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9992909073450287	WITHOUT_CLASSIFICATION	7.090926549712456E-4	DEFECT
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999678909044473	WITHOUT_CLASSIFICATION	3.210909555272299E-5	DEFECT
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9996405581020797	WITHOUT_CLASSIFICATION	3.5944189792021903E-4	DEFECT
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999917538837916	WITHOUT_CLASSIFICATION	8.246116208410726E-6	DEFECT
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999081901800391	WITHOUT_CLASSIFICATION	9.180981996094311E-5	DEFECT
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998366789337301	WITHOUT_CLASSIFICATION	1.6332106626983266E-4	DEFECT
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999491354025032	WITHOUT_CLASSIFICATION	5.086459749680134E-5	DEFECT
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998823561269727	WITHOUT_CLASSIFICATION	1.1764387302718732E-4	DEFECT
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999836268198427	WITHOUT_CLASSIFICATION	1.637318015733925E-5	DEFECT
The template for interface modules	WITHOUT_CLASSIFICATION	0.9998988266733304	WITHOUT_CLASSIFICATION	1.0117332666953295E-4	DEFECT
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999271522510115	WITHOUT_CLASSIFICATION	7.28477489884767E-5	DEFECT
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998468757444262	WITHOUT_CLASSIFICATION	1.5312425557378998E-4	DEFECT
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9996319699949379	WITHOUT_CLASSIFICATION	3.6803000506217885E-4	DEFECT
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.999934081471268	WITHOUT_CLASSIFICATION	6.591852873191605E-5	DEFECT
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.8984119891762957	WITHOUT_CLASSIFICATION	0.10158801082370435	DEFECT
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9998138351834381	WITHOUT_CLASSIFICATION	1.8616481656195372E-4	DEFECT
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999603455328832	WITHOUT_CLASSIFICATION	3.9654467116797816E-4	DEFECT
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999767708382783	WITHOUT_CLASSIFICATION	2.3229161721673194E-5	DEFECT
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9996768447827928	WITHOUT_CLASSIFICATION	3.2315521720719504E-4	DEFECT
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9996928120293403	WITHOUT_CLASSIFICATION	3.0718797065969346E-4	DEFECT
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.998802761586355	WITHOUT_CLASSIFICATION	0.0011972384136451086	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9995379249209675	WITHOUT_CLASSIFICATION	4.6207507903254017E-4	DEFECT
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9989014915001456	WITHOUT_CLASSIFICATION	0.0010985084998544445	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999719433626483	WITHOUT_CLASSIFICATION	2.80566373517734E-5	DEFECT
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999499387069898	WITHOUT_CLASSIFICATION	5.0061293010196524E-5	DEFECT
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998136204897582	WITHOUT_CLASSIFICATION	1.8637951024184278E-4	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9965735070776977	WITHOUT_CLASSIFICATION	0.003426492922302433	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9995379249209675	WITHOUT_CLASSIFICATION	4.6207507903254017E-4	DEFECT
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999781643307762	WITHOUT_CLASSIFICATION	2.1835669223764102E-5	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9998885833690742	WITHOUT_CLASSIFICATION	1.114166309258645E-4	DEFECT
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.997252341569226	WITHOUT_CLASSIFICATION	0.0027476584307738975	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9980755319921499	WITHOUT_CLASSIFICATION	0.0019244680078501354	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9980755319921499	WITHOUT_CLASSIFICATION	0.0019244680078501354	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999912912194574	WITHOUT_CLASSIFICATION	8.708780542503345E-6	DEFECT
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999838314316901	WITHOUT_CLASSIFICATION	1.6168568309957794E-5	DEFECT
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9998389440705112	WITHOUT_CLASSIFICATION	1.6105592948873913E-4	DEFECT
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999580840623653	WITHOUT_CLASSIFICATION	4.191593763473504E-5	DEFECT
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9996392683495954	WITHOUT_CLASSIFICATION	3.6073165040467254E-4	DEFECT
Initialize some components.	WITHOUT_CLASSIFICATION	0.9997989068307075	WITHOUT_CLASSIFICATION	2.0109316929258522E-4	DEFECT
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9993513804283386	WITHOUT_CLASSIFICATION	6.486195716613691E-4	DEFECT
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9979866636310488	WITHOUT_CLASSIFICATION	0.0020133363689511566	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999398103451642	WITHOUT_CLASSIFICATION	6.018965483582144E-5	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999398103451642	WITHOUT_CLASSIFICATION	6.018965483582144E-5	DEFECT
no matching ctor found	WITHOUT_CLASSIFICATION	0.9998968324830237	WITHOUT_CLASSIFICATION	1.0316751697619963E-4	DEFECT
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9993866104893184	WITHOUT_CLASSIFICATION	6.133895106815573E-4	DEFECT
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999992733274877	WITHOUT_CLASSIFICATION	7.266725123040827E-6	DEFECT
must be a public method	WITHOUT_CLASSIFICATION	0.9999708507949783	WITHOUT_CLASSIFICATION	2.9149205021815417E-5	DEFECT
must be a public class	WITHOUT_CLASSIFICATION	0.9996259249708773	WITHOUT_CLASSIFICATION	3.740750291227179E-4	DEFECT
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999619333328504	WITHOUT_CLASSIFICATION	3.8066667149459244E-5	DEFECT
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9999991634153934	WITHOUT_CLASSIFICATION	8.365846066004505E-7	DEFECT
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999863980669899	WITHOUT_CLASSIFICATION	1.3601933010150658E-5	DEFECT
no matching method found	WITHOUT_CLASSIFICATION	0.9999708016681298	WITHOUT_CLASSIFICATION	2.9198331870236476E-5	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9723120362490408	WITHOUT_CLASSIFICATION	0.0276879637509591	DEFECT
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9998987875380904	WITHOUT_CLASSIFICATION	1.0121246190969121E-4	DEFECT
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999009884381233	WITHOUT_CLASSIFICATION	9.901156187664573E-5	DEFECT
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999157173380887	WITHOUT_CLASSIFICATION	8.428266191131702E-5	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998593004889569	WITHOUT_CLASSIFICATION	1.4069951104304777E-4	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998593004889569	WITHOUT_CLASSIFICATION	1.4069951104304777E-4	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999003753434509	WITHOUT_CLASSIFICATION	9.962465654908227E-5	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9998230538886976	WITHOUT_CLASSIFICATION	1.7694611130238572E-4	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9723120362490408	WITHOUT_CLASSIFICATION	0.0276879637509591	DEFECT
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999923306570775	WITHOUT_CLASSIFICATION	7.66934292247081E-6	DEFECT
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9967881251174304	WITHOUT_CLASSIFICATION	0.003211874882569498	DEFECT
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9998594811260708	WITHOUT_CLASSIFICATION	1.4051887392917725E-4	DEFECT
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9998692777854798	WITHOUT_CLASSIFICATION	1.3072221452017409E-4	DEFECT
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9998987505948688	WITHOUT_CLASSIFICATION	1.0124940513128096E-4	DEFECT
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9998193179870836	WITHOUT_CLASSIFICATION	1.8068201291637854E-4	DEFECT
package scope	WITHOUT_CLASSIFICATION	0.9999044526327361	WITHOUT_CLASSIFICATION	9.55473672638643E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9965735070776977	WITHOUT_CLASSIFICATION	0.003426492922302433	DEFECT
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9999352637680234	WITHOUT_CLASSIFICATION	6.473623197651047E-5	DEFECT
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9997256373552867	WITHOUT_CLASSIFICATION	2.743626447132193E-4	DEFECT
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998397903707719	WITHOUT_CLASSIFICATION	1.6020962922802886E-4	DEFECT
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998688067783685	WITHOUT_CLASSIFICATION	1.3119322163144753E-4	DEFECT
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999190502145072	WITHOUT_CLASSIFICATION	8.094978549278944E-5	DEFECT
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999821712601461	WITHOUT_CLASSIFICATION	1.78287398539567E-5	DEFECT
statically initialized below	WITHOUT_CLASSIFICATION	0.9997861967570302	WITHOUT_CLASSIFICATION	2.1380324296975858E-4	DEFECT
finish class initializer	WITHOUT_CLASSIFICATION	0.9995845909512497	WITHOUT_CLASSIFICATION	4.1540904875030603E-4	DEFECT
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9985558956243367	WITHOUT_CLASSIFICATION	0.0014441043756632467	DEFECT
should not happen!	WITHOUT_CLASSIFICATION	0.9976109161594572	WITHOUT_CLASSIFICATION	0.002389083840542751	DEFECT
start class	WITHOUT_CLASSIFICATION	0.9995580506857998	WITHOUT_CLASSIFICATION	4.4194931420020217E-4	DEFECT
make getter for handler	WITHOUT_CLASSIFICATION	0.9994477108690629	WITHOUT_CLASSIFICATION	5.522891309369967E-4	DEFECT
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9984282171121287	WITHOUT_CLASSIFICATION	0.0015717828878712718	DEFECT
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9333657797143871	WITHOUT_CLASSIFICATION	0.06663422028561304	DEFECT
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9982227185319835	WITHOUT_CLASSIFICATION	0.0017772814680165213	DEFECT
create static private method field	WITHOUT_CLASSIFICATION	0.9999545159121507	WITHOUT_CLASSIFICATION	4.548408784930184E-5	DEFECT
load static empty array	WITHOUT_CLASSIFICATION	0.9999646355865902	WITHOUT_CLASSIFICATION	3.5364413409709605E-5	DEFECT
box arguments	WITHOUT_CLASSIFICATION	0.9999171550742715	WITHOUT_CLASSIFICATION	8.28449257284739E-5	DEFECT
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9985276337457881	WITHOUT_CLASSIFICATION	0.0014723662542119626	DEFECT
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9999579343473596	WITHOUT_CLASSIFICATION	4.206565264030896E-5	DEFECT
do a void return	WITHOUT_CLASSIFICATION	0.9999786202353484	WITHOUT_CLASSIFICATION	2.1379764651484895E-5	DEFECT
utility methods	WITHOUT_CLASSIFICATION	0.9999570979208259	WITHOUT_CLASSIFICATION	4.2902079174130546E-5	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999912912194574	WITHOUT_CLASSIFICATION	8.708780542503345E-6	DEFECT
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9996397535693758	WITHOUT_CLASSIFICATION	3.60246430624158E-4	DEFECT
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999698678847128	WITHOUT_CLASSIFICATION	3.0132115287197095E-4	DEFECT
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999595547982938	WITHOUT_CLASSIFICATION	4.044520170616926E-5	DEFECT
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9979044124528506	WITHOUT_CLASSIFICATION	0.0020955875471495747	DEFECT
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9991539519836202	WITHOUT_CLASSIFICATION	8.460480163796717E-4	DEFECT
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.998899906339655	WITHOUT_CLASSIFICATION	0.0011000936603450036	DEFECT
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999777933969894	WITHOUT_CLASSIFICATION	2.2206603010610707E-5	DEFECT
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9990999130472931	WITHOUT_CLASSIFICATION	9.000869527068606E-4	DEFECT
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999864747774567	WITHOUT_CLASSIFICATION	1.3525222543271539E-5	DEFECT
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999601899402583	WITHOUT_CLASSIFICATION	3.981005974183168E-5	DEFECT
NUL	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995239498652082	WITHOUT_CLASSIFICATION	4.760501347917608E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998454477882803	WITHOUT_CLASSIFICATION	1.545522117196011E-4	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999452671370562	WITHOUT_CLASSIFICATION	5.4732862943618815E-5	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994661232046305	WITHOUT_CLASSIFICATION	5.338767953695009E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999957621237744	WITHOUT_CLASSIFICATION	4.237876225655446E-6	DEFECT
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9972956335792361	WITHOUT_CLASSIFICATION	0.0027043664207639317	DEFECT
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9997012265376299	WITHOUT_CLASSIFICATION	2.987734623700458E-4	DEFECT
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9953943712272861	WITHOUT_CLASSIFICATION	0.004605628772713796	DEFECT
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9996192038569465	WITHOUT_CLASSIFICATION	3.8079614305355113E-4	DEFECT
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9985747931270199	WITHOUT_CLASSIFICATION	0.001425206872980124	DEFECT
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9986960764761772	WITHOUT_CLASSIFICATION	0.0013039235238228293	DEFECT
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.996350009195201	WITHOUT_CLASSIFICATION	0.0036499908047989285	DEFECT
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999877058513478	WITHOUT_CLASSIFICATION	1.2294148652202634E-5	DEFECT
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999489010986353	WITHOUT_CLASSIFICATION	5.1098901364706904E-5	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9999447664591137	WITHOUT_CLASSIFICATION	5.523354088642133E-5	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9999447664591137	WITHOUT_CLASSIFICATION	5.523354088642133E-5	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9999447664591137	WITHOUT_CLASSIFICATION	5.523354088642133E-5	DEFECT
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9921726048406322	WITHOUT_CLASSIFICATION	0.007827395159367695	DEFECT
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999837548626568	WITHOUT_CLASSIFICATION	1.6245137343246484E-5	DEFECT
Single node in list	WITHOUT_CLASSIFICATION	0.999900897321359	WITHOUT_CLASSIFICATION	9.910267864107023E-5	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9993443235893454	WITHOUT_CLASSIFICATION	6.55676410654568E-4	DEFECT
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9995285493121966	WITHOUT_CLASSIFICATION	4.7145068780339865E-4	DEFECT
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999620777799488	WITHOUT_CLASSIFICATION	3.792222005122699E-5	DEFECT
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999192208099628	WITHOUT_CLASSIFICATION	8.077919003730763E-5	DEFECT
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9998605929675165	WITHOUT_CLASSIFICATION	1.394070324834549E-4	DEFECT
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9985215689162029	WITHOUT_CLASSIFICATION	0.001478431083797137	DEFECT
Last full line read.	WITHOUT_CLASSIFICATION	0.9997520864491064	WITHOUT_CLASSIFICATION	2.4791355089355847E-4	DEFECT
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999473985905344	WITHOUT_CLASSIFICATION	5.260140946559921E-4	DEFECT
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999900819894224	WITHOUT_CLASSIFICATION	9.91801057751825E-6	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999060384970869	WITHOUT_CLASSIFICATION	9.396150291308538E-5	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999060384970869	WITHOUT_CLASSIFICATION	9.396150291308538E-5	DEFECT
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999668778848146	WITHOUT_CLASSIFICATION	3.3122115185463095E-5	DEFECT
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9995900783702608	WITHOUT_CLASSIFICATION	4.0992162973918446E-4	DEFECT
Single-quote fast path	WITHOUT_CLASSIFICATION	0.999918546563243	WITHOUT_CLASSIFICATION	8.145343675708552E-5	DEFECT
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999858088230338	WITHOUT_CLASSIFICATION	1.4191176966212414E-4	DEFECT
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9996705604673461	WITHOUT_CLASSIFICATION	3.294395326537899E-4	DEFECT
just ignore	WITHOUT_CLASSIFICATION	0.9999786220551065	WITHOUT_CLASSIFICATION	2.1377944893599994E-5	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9997974329600254	WITHOUT_CLASSIFICATION	2.0256703997464256E-4	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9997974329600254	WITHOUT_CLASSIFICATION	2.0256703997464256E-4	DEFECT
PUSH(1)	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
POP	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9987085225301194	WITHOUT_CLASSIFICATION	0.0012914774698806692	DEFECT
LEXPOP	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
SET_P	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9997984897172167	WITHOUT_CLASSIFICATION	2.0151028278320174E-4	DEFECT
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9983959373762715	WITHOUT_CLASSIFICATION	0.0016040626237284975	DEFECT
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998274732660013	WITHOUT_CLASSIFICATION	1.725267339987327E-4	DEFECT
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999271194166491	WITHOUT_CLASSIFICATION	7.288058335097052E-5	DEFECT
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9991026472779622	WITHOUT_CLASSIFICATION	8.973527220378008E-4	DEFECT
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9997103662146753	WITHOUT_CLASSIFICATION	2.896337853246181E-4	DEFECT
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998194655939248	WITHOUT_CLASSIFICATION	1.8053440607522744E-4	DEFECT
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9967445018161849	WITHOUT_CLASSIFICATION	0.003255498183815026	DEFECT
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999794420535452	WITHOUT_CLASSIFICATION	2.055794645479532E-5	DEFECT
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998056421904284	WITHOUT_CLASSIFICATION	1.9435780957150286E-4	DEFECT
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9996143225735301	WITHOUT_CLASSIFICATION	3.8567742646992135E-4	DEFECT
1.9 only	WITHOUT_CLASSIFICATION	0.999929959280282	WITHOUT_CLASSIFICATION	7.004071971792786E-5	DEFECT
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998228761751033	WITHOUT_CLASSIFICATION	1.7712382489672233E-4	DEFECT
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999894131023548	WITHOUT_CLASSIFICATION	1.0586897645196418E-4	DEFECT
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9999493619618808	WITHOUT_CLASSIFICATION	5.0638038119277326E-5	DEFECT
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9998718504898011	WITHOUT_CLASSIFICATION	1.2814951019892175E-4	DEFECT
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
end of script.	WITHOUT_CLASSIFICATION	0.9998757228966162	WITHOUT_CLASSIFICATION	1.2427710338384373E-4	DEFECT
white spaces	WITHOUT_CLASSIFICATION	0.9998732699852239	WITHOUT_CLASSIFICATION	1.2673001477621007E-4	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
it's a comment	WITHOUT_CLASSIFICATION	0.9996032494248226	WITHOUT_CLASSIFICATION	3.967505751774268E-4	DEFECT
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999726087517254	WITHOUT_CLASSIFICATION	2.739124827461025E-5	DEFECT
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999208848826002	WITHOUT_CLASSIFICATION	7.911511739969242E-5	DEFECT
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998807673838231	WITHOUT_CLASSIFICATION	1.1923261617688729E-4	DEFECT
documentation nodes	WITHOUT_CLASSIFICATION	0.9996065112661459	WITHOUT_CLASSIFICATION	3.934887338541177E-4	DEFECT
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999572482380141	WITHOUT_CLASSIFICATION	4.2751761985912625E-4	DEFECT
Just a plain bang	WITHOUT_CLASSIFICATION	0.9998657828868198	WITHOUT_CLASSIFICATION	1.3421711318016287E-4	DEFECT
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999271535222403	WITHOUT_CLASSIFICATION	7.284647775967327E-5	DEFECT
$~: match-data	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
$: argv	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
$$: pid	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
$?: last status	WITHOUT_CLASSIFICATION	0.9998869824994561	WITHOUT_CLASSIFICATION	1.1301750054386413E-4	DEFECT
$!: error string	WITHOUT_CLASSIFICATION	0.9999426294777588	WITHOUT_CLASSIFICATION	5.737052224121485E-5	DEFECT
$@: error position	WITHOUT_CLASSIFICATION	0.999882878298203	WITHOUT_CLASSIFICATION	1.1712170179697316E-4	DEFECT
$/: input record separator	WITHOUT_CLASSIFICATION	0.999899399783048	WITHOUT_CLASSIFICATION	1.0060021695208201E-4	DEFECT
$;: field separator	WITHOUT_CLASSIFICATION	0.9999137110698025	WITHOUT_CLASSIFICATION	8.628893019746025E-5	DEFECT
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999334177627819	WITHOUT_CLASSIFICATION	6.658223721809295E-5	DEFECT
$.: last read line number	WITHOUT_CLASSIFICATION	0.9995488903549675	WITHOUT_CLASSIFICATION	4.5110964503242075E-4	DEFECT
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
$:: load path	WITHOUT_CLASSIFICATION	0.9999212035298315	WITHOUT_CLASSIFICATION	7.879647016851282E-5	DEFECT
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999028215317319	WITHOUT_CLASSIFICATION	9.717846826798812E-5	DEFECT
$": already loaded files	WITHOUT_CLASSIFICATION	0.999979588482502	WITHOUT_CLASSIFICATION	2.041151749799155E-5	DEFECT
$&: last match	WITHOUT_CLASSIFICATION	0.9999186862318984	WITHOUT_CLASSIFICATION	8.131376810168277E-5	DEFECT
$`: string before last match	WITHOUT_CLASSIFICATION	0.999983106033794	WITHOUT_CLASSIFICATION	1.6893966206017266E-5	DEFECT
$': string after last match	WITHOUT_CLASSIFICATION	0.9999805541933544	WITHOUT_CLASSIFICATION	1.9445806645633828E-5	DEFECT
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999485139034086	WITHOUT_CLASSIFICATION	5.148609659138633E-5	DEFECT
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9997596275840971	WITHOUT_CLASSIFICATION	2.4037241590289452E-4	DEFECT
enum lex_state	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
block (primary)	WITHOUT_CLASSIFICATION	0.9999645903739902	WITHOUT_CLASSIFICATION	3.5409626009756666E-5	DEFECT
block (expr)	WITHOUT_CLASSIFICATION	0.9999645903739902	WITHOUT_CLASSIFICATION	3.5409626009756666E-5	DEFECT
hash	WITHOUT_CLASSIFICATION	0.9999657766249771	WITHOUT_CLASSIFICATION	3.422337502284356E-5	DEFECT
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9996836160441404	WITHOUT_CLASSIFICATION	3.163839558595628E-4	DEFECT
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9967629484082934	WITHOUT_CLASSIFICATION	0.0032370515917065083	DEFECT
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9967853447930065	WITHOUT_CLASSIFICATION	0.0032146552069935923	DEFECT
hexadecimal	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
binary	WITHOUT_CLASSIFICATION	0.9999649298847938	WITHOUT_CLASSIFICATION	3.5070115206124596E-5	DEFECT
decimal	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Octal	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999506358906828	WITHOUT_CLASSIFICATION	4.93641093170787E-5	DEFECT
backslash	WITHOUT_CLASSIFICATION	0.9999627976042549	WITHOUT_CLASSIFICATION	3.720239574519814E-5	DEFECT
newline	WITHOUT_CLASSIFICATION	0.9999081649636928	WITHOUT_CLASSIFICATION	9.183503630721342E-5	DEFECT
horizontal tab	WITHOUT_CLASSIFICATION	0.9999016006838651	WITHOUT_CLASSIFICATION	9.839931613489393E-5	DEFECT
form feed	WITHOUT_CLASSIFICATION	0.9999630429130184	WITHOUT_CLASSIFICATION	3.6957086981629085E-5	DEFECT
vertical tab	WITHOUT_CLASSIFICATION	0.9999006272107502	WITHOUT_CLASSIFICATION	9.93727892497907E-5	DEFECT
alarm(bell)	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
escape	WITHOUT_CLASSIFICATION	0.9999707160051033	WITHOUT_CLASSIFICATION	2.9283994896607783E-5	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9997974329600254	WITHOUT_CLASSIFICATION	2.0256703997464256E-4	DEFECT
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998811258126403	WITHOUT_CLASSIFICATION	1.18874187359732E-4	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999323931171361	WITHOUT_CLASSIFICATION	6.760688286390456E-5	DEFECT
space	WITHOUT_CLASSIFICATION	0.9999836835868832	WITHOUT_CLASSIFICATION	1.6316413116810256E-5	DEFECT
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9993508589246285	WITHOUT_CLASSIFICATION	6.491410753714555E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999772261982949	WITHOUT_CLASSIFICATION	2.2773801705151186E-5	DEFECT
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9986565996239928	WITHOUT_CLASSIFICATION	0.0013434003760071818	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999323931171361	WITHOUT_CLASSIFICATION	6.760688286390456E-5	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9948410375754415	WITHOUT_CLASSIFICATION	0.005158962424558443	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9948410375754415	WITHOUT_CLASSIFICATION	0.005158962424558443	DEFECT
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999467851511897	WITHOUT_CLASSIFICATION	5.321484881029111E-5	DEFECT
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998852026168797	WITHOUT_CLASSIFICATION	1.1479738312022594E-4	DEFECT
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998754855967252	WITHOUT_CLASSIFICATION	1.245144032747212E-4	DEFECT
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999434853647262	WITHOUT_CLASSIFICATION	5.6514635273696225E-5	DEFECT
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999947363565488	WITHOUT_CLASSIFICATION	5.263643451205142E-5	DEFECT
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.7871498967483755	WITHOUT_CLASSIFICATION	0.2128501032516245	DEFECT
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9991829492357234	WITHOUT_CLASSIFICATION	8.170507642766508E-4	DEFECT
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.998191526199989	WITHOUT_CLASSIFICATION	0.0018084738000111078	DEFECT
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999510410166316	WITHOUT_CLASSIFICATION	4.895898336851682E-5	DEFECT
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9974218200017939	WITHOUT_CLASSIFICATION	0.00257817999820607	DEFECT
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9978578215962692	WITHOUT_CLASSIFICATION	0.0021421784037307817	DEFECT
DigestLibrary	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9965936941325721	WITHOUT_CLASSIFICATION	0.003406305867427813	DEFECT
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9978749093154728	WITHOUT_CLASSIFICATION	0.0021250906845271434	DEFECT
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998713265286862	WITHOUT_CLASSIFICATION	1.286734713139018E-4	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
line 329	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998792480318721	WITHOUT_CLASSIFICATION	1.2075196812797823E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9997746039725656	WITHOUT_CLASSIFICATION	2.2539602743439313E-4	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9945900720007381	WITHOUT_CLASSIFICATION	0.005409927999261858	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998445097538359	WITHOUT_CLASSIFICATION	1.5549024616420183E-4	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9998477014498743	WITHOUT_CLASSIFICATION	1.5229855012578294E-4	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998713404067946	WITHOUT_CLASSIFICATION	1.2865959320536419E-4	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9994399654765798	WITHOUT_CLASSIFICATION	5.600345234201928E-4	DEFECT
line 271	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 274	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 303	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 311	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 314	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 317	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 332	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 338	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 341	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 344	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 358	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 367	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 378	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 407	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 411	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 414	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 434	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 443	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 446	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 452	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 457	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 464	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 467	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 470	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 479	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 484	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 492	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 498	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 501	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 504	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 507	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 510	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 519	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 525	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 556	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 559	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 563	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 569	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 575	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 578	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 587	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 596	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 604	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 607	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 613	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 616	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 634	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 638	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 643	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 646	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 655	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 660	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 667	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 670	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 701	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 717	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 720	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 726	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 729	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 735	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 738	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 751	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 754	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 757	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 760	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 763	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 769	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 775	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 797	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 803	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 806	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 809	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 815	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 818	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 821	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 824	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 830	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 833	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 836	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 852	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 858	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 861	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 868	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 871	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 876	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 879	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 883	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 903	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 907	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 915	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 920	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 923	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 926	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 936	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 940	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 948	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 956	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 964	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 967	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 978	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 984	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 986	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 996	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1001	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1008	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1014	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1029	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1032	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1034	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1045	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1048	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1051	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1058	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1070	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1073	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1076	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1079	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1082	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1089	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1100	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1103	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1107	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1113	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1115	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1119	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1135	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1137	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1151	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1154	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1164	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1175	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1178	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1187	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1189	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1193	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1214	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1234	WITHOUT_CLASSIFICATION	0.9998926964103186	WITHOUT_CLASSIFICATION	1.0730358968145853E-4	DEFECT
line 1239	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1243	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1263	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1269	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1280	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1283	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1290	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1296	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1299	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1302	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1309	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1313	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1315	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1328	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1335	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1352	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1358	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1374	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1381	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1415	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1431	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1434	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1440	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1443	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1453	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1465	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1477	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1480	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1485	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1488	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1510	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1516	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1533	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1550	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1553	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1556	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1565	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1568	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1571	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1574	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1577	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1587	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1600	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1609	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1623	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1626	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1638	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1641	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1644	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1649	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1655	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1658	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1661	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1672	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1677	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1687	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1694	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1733	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1745	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1757	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1769	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1775	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1784	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1808	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1814	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9998487149689872	WITHOUT_CLASSIFICATION	1.5128503101282528E-4	DEFECT
XXX 0;	WITHOUT_CLASSIFICATION	0.9998847825147391	WITHOUT_CLASSIFICATION	1.1521748526093246E-4	DEFECT
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999601940710552	WITHOUT_CLASSIFICATION	3.980592894482517E-5	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999698651173868	WITHOUT_CLASSIFICATION	3.013488261315879E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9944127888063443	WITHOUT_CLASSIFICATION	0.005587211193655712	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9998829816389622	WITHOUT_CLASSIFICATION	1.1701836103784706E-4	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9991247696487818	WITHOUT_CLASSIFICATION	8.752303512181989E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9991247696487818	WITHOUT_CLASSIFICATION	8.752303512181989E-4	DEFECT
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9998338400721001	WITHOUT_CLASSIFICATION	1.6615992789989947E-4	DEFECT
mirko: check	WITHOUT_CLASSIFICATION	0.9999717223779723	WITHOUT_CLASSIFICATION	2.8277622027722652E-5	DEFECT
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9994996882317492	WITHOUT_CLASSIFICATION	5.003117682508147E-4	DEFECT
line 529	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
XXX	WITHOUT_CLASSIFICATION	0.9998800534303535	WITHOUT_CLASSIFICATION	1.1994656964652032E-4	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9998585249496149	WITHOUT_CLASSIFICATION	1.414750503849987E-4	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999184660454672	WITHOUT_CLASSIFICATION	8.153395453279972E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.999869040693391	WITHOUT_CLASSIFICATION	1.3095930660900895E-4	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9993558812482565	WITHOUT_CLASSIFICATION	6.441187517435365E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999494033108737	WITHOUT_CLASSIFICATION	5.0596689126282874E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998792480318721	WITHOUT_CLASSIFICATION	1.2075196812797823E-4	DEFECT
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9995830803992176	WITHOUT_CLASSIFICATION	4.1691960078230875E-4	DEFECT
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999878451885666	WITHOUT_CLASSIFICATION	1.2154811433291245E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999470704961602	WITHOUT_CLASSIFICATION	5.2929503839923193E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999470704961602	WITHOUT_CLASSIFICATION	5.2929503839923193E-5	DEFECT
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9956229794861092	WITHOUT_CLASSIFICATION	0.004377020513890748	DEFECT
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9800069685097539	WITHOUT_CLASSIFICATION	0.019993031490246057	DEFECT
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9989859600891088	WITHOUT_CLASSIFICATION	0.0010140399108912723	DEFECT
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9991880759742782	WITHOUT_CLASSIFICATION	8.11924025721821E-4	DEFECT
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9993517674776407	WITHOUT_CLASSIFICATION	6.482325223594015E-4	DEFECT
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998078927633122	WITHOUT_CLASSIFICATION	1.9210723668786834E-4	DEFECT
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9949978435976254	WITHOUT_CLASSIFICATION	0.005002156402374615	DEFECT
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9992922990208835	WITHOUT_CLASSIFICATION	7.0770097911648E-4	DEFECT
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9997256878310232	WITHOUT_CLASSIFICATION	2.743121689768092E-4	DEFECT
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9998928088844202	WITHOUT_CLASSIFICATION	1.0719111557978969E-4	DEFECT
Parser states:	WITHOUT_CLASSIFICATION	0.9998594107826293	WITHOUT_CLASSIFICATION	1.4058921737062467E-4	DEFECT
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9996228095616604	WITHOUT_CLASSIFICATION	3.7719043833965614E-4	DEFECT
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9998957639065296	WITHOUT_CLASSIFICATION	1.0423609347047456E-4	DEFECT
LOCALVAR	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
CONSTANT	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999065348528942	WITHOUT_CLASSIFICATION	9.346514710581034E-5	DEFECT
MRI: block_append	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.997223763280702	WITHOUT_CLASSIFICATION	0.0027762367192979555	DEFECT
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9989549818155349	WITHOUT_CLASSIFICATION	0.0010450181844650296	DEFECT
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999562953522637	WITHOUT_CLASSIFICATION	4.370464773619547E-5	DEFECT
Node	WITHOUT_CLASSIFICATION	0.9999631550192047	WITHOUT_CLASSIFICATION	3.684498079536423E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9868965985755889	WITHOUT_CLASSIFICATION	0.013103401424411187	DEFECT
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9999097784927198	WITHOUT_CLASSIFICATION	9.022150728023005E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9868965985755889	WITHOUT_CLASSIFICATION	0.013103401424411187	DEFECT
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9999097784927198	WITHOUT_CLASSIFICATION	9.022150728023005E-5	DEFECT
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9999097784927198	WITHOUT_CLASSIFICATION	9.022150728023005E-5	DEFECT
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9941250769321314	WITHOUT_CLASSIFICATION	0.005874923067868536	DEFECT
MRI: range_op	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9992047612930394	WITHOUT_CLASSIFICATION	7.952387069607343E-4	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.99796895819356	WITHOUT_CLASSIFICATION	0.002031041806439959	DEFECT
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999485627688007	WITHOUT_CLASSIFICATION	5.143723119920388E-5	DEFECT
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999896997307468	WITHOUT_CLASSIFICATION	1.0300269253211966E-4	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9997746039725656	WITHOUT_CLASSIFICATION	2.2539602743439313E-4	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998445097538359	WITHOUT_CLASSIFICATION	1.5549024616420183E-4	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9998477014498743	WITHOUT_CLASSIFICATION	1.5229855012578294E-4	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998713404067946	WITHOUT_CLASSIFICATION	1.2865959320536419E-4	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9994399654765798	WITHOUT_CLASSIFICATION	5.600345234201928E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 280	WITHOUT_CLASSIFICATION	0.9998906228437313	WITHOUT_CLASSIFICATION	1.0937715626868349E-4	DEFECT
line 283	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 296	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 324	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 327	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 331	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 333	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 336	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 342	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 345	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 348	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 354	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 368	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 377	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 388	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 392	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 397	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 429	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 432	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 436	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 445	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 448	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 454	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 459	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 466	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 469	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 478	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 481	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 488	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 494	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 497	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 503	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 506	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 509	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 512	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 521	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 526	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 534	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 549	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 552	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 558	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 561	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 571	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 574	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 579	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 586	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 589	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 592	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 595	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 598	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 623	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 627	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 630	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 633	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 639	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 648	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 657	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 661	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 666	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 678	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 682	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 688	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 699	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 706	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 708	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 727	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 737	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 753	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 779	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 801	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 808	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 811	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 817	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 820	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 826	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 829	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 832	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 851	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 857	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 860	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 863	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 866	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 869	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 875	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 884	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 887	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 890	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 902	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 909	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 912	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 916	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 922	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 928	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 941	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 947	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 951	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 955	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 965	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 969	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 977	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 983	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1013	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1023	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1035	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1041	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1043	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1054	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1057	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1060	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1069	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1075	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1078	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1084	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1087	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1090	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1093	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1114	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1116	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1118	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1124	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1126	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1138	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1144	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1149	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1155	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1162	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1173	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1179	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1182	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1190	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1196	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1213	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1217	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1231	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1236	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1244	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1254	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1258	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1264	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1270	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1273	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1276	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1279	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1282	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1289	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1292	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1295	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1298	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1305	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1308	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1311	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1317	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1323	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1326	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1329	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1337	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1342	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1345	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1354	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1359	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1366	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1369	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1373	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1377	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1383	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1399	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1401	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1406	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1417	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1424	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1427	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1430	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1433	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1436	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1442	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1445	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1458	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1464	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1489	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1493	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1507	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1519	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1532	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1538	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1542	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1557	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1573	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1591	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1607	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1610	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1622	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1625	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1636	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1639	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1647	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1651	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1657	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1660	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1663	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1678	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1702	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1711	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1719	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1722	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1731	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1734	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1738	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1746	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1756	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1758	WITHOUT_CLASSIFICATION	0.9997470871323697	WITHOUT_CLASSIFICATION	2.529128676303065E-4	DEFECT
line 1761	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1767	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1776	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1782	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1785	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1788	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1791	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1797	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1800	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1803	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1806	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1809	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1815	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1825	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1828	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1831	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1847	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9991247696487818	WITHOUT_CLASSIFICATION	8.752303512181989E-4	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9991247696487818	WITHOUT_CLASSIFICATION	8.752303512181989E-4	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.9998585249496149	WITHOUT_CLASSIFICATION	1.414750503849987E-4	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999184660454672	WITHOUT_CLASSIFICATION	8.153395453279972E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.999869040693391	WITHOUT_CLASSIFICATION	1.3095930660900895E-4	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
line 1854	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1869	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1872	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1877	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1886	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1898	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1902	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1905	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1911	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1918	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1935	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1938	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1942	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1948	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1960	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1963	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1968	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1972	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1982	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1995	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 2000	WITHOUT_CLASSIFICATION	0.999765393802722	WITHOUT_CLASSIFICATION	2.3460619727790538E-4	DEFECT
line 2006	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 2010	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999559475712932	WITHOUT_CLASSIFICATION	4.405242870673606E-5	DEFECT
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999838081751478	WITHOUT_CLASSIFICATION	1.619182485215386E-5	DEFECT
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9999350154692966	WITHOUT_CLASSIFICATION	6.498453070336342E-5	DEFECT
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999627928723052	WITHOUT_CLASSIFICATION	3.720712769477191E-5	DEFECT
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9998730053964494	WITHOUT_CLASSIFICATION	1.2699460355053595E-4	DEFECT
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9998042334612233	WITHOUT_CLASSIFICATION	1.957665387767001E-4	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999494033108737	WITHOUT_CLASSIFICATION	5.0596689126282874E-5	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998792480318721	WITHOUT_CLASSIFICATION	1.2075196812797823E-4	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999470704961602	WITHOUT_CLASSIFICATION	5.2929503839923193E-5	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999470704961602	WITHOUT_CLASSIFICATION	5.2929503839923193E-5	DEFECT
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9988109919548498	WITHOUT_CLASSIFICATION	0.0011890080451501567	DEFECT
was $$ = null;	WITHOUT_CLASSIFICATION	0.9998924284446904	WITHOUT_CLASSIFICATION	1.0757155530963191E-4	DEFECT
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996149303533041	WITHOUT_CLASSIFICATION	3.8506964669595073E-4	DEFECT
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9995830803992176	WITHOUT_CLASSIFICATION	4.1691960078230875E-4	DEFECT
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9978883457657379	WITHOUT_CLASSIFICATION	0.0021116542342621268	DEFECT
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999733002789379	WITHOUT_CLASSIFICATION	2.669972106209133E-4	DEFECT
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9977651672446043	WITHOUT_CLASSIFICATION	0.0022348327553957876	DEFECT
Live reference to module	WITHOUT_CLASSIFICATION	0.9999300626878358	WITHOUT_CLASSIFICATION	6.993731216426302E-5	DEFECT
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999339888495584	WITHOUT_CLASSIFICATION	6.60111504415466E-5	DEFECT
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999986619492319	WITHOUT_CLASSIFICATION	1.3380507680917664E-5	DEFECT
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9986969575295269	WITHOUT_CLASSIFICATION	0.001303042470473057	DEFECT
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9992538627802109	WITHOUT_CLASSIFICATION	7.461372197891104E-4	DEFECT
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999251600765349	WITHOUT_CLASSIFICATION	7.483992346520374E-5	DEFECT
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999572325097573	WITHOUT_CLASSIFICATION	4.2767490242620715E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999430283286052	WITHOUT_CLASSIFICATION	5.6971671394832254E-5	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999430283286052	WITHOUT_CLASSIFICATION	5.6971671394832254E-5	DEFECT
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9998906051781901	WITHOUT_CLASSIFICATION	1.093948218099437E-4	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9990363890427995	WITHOUT_CLASSIFICATION	9.636109572006657E-4	DEFECT
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.999878012246462	WITHOUT_CLASSIFICATION	1.2198775353793024E-4	DEFECT
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9992939159759858	WITHOUT_CLASSIFICATION	7.060840240141487E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999765980654488	WITHOUT_CLASSIFICATION	2.340193455126162E-5	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999419107077461	WITHOUT_CLASSIFICATION	5.808929225393389E-5	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999765980654488	WITHOUT_CLASSIFICATION	2.340193455126162E-5	DEFECT
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9996582308337929	WITHOUT_CLASSIFICATION	3.417691662070311E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9947708707497002	WITHOUT_CLASSIFICATION	0.005229129250299877	DEFECT
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9973754617081932	WITHOUT_CLASSIFICATION	0.002624538291806718	DEFECT
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9988655796793914	WITHOUT_CLASSIFICATION	0.0011344203206085936	DEFECT
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996294813126485	WITHOUT_CLASSIFICATION	3.705186873514397E-4	DEFECT
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996294813126485	WITHOUT_CLASSIFICATION	3.705186873514397E-4	DEFECT
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999476312982143	WITHOUT_CLASSIFICATION	5.2368701785801344E-5	DEFECT
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999220497897492	WITHOUT_CLASSIFICATION	7.795021025076268E-5	DEFECT
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999240466314168	WITHOUT_CLASSIFICATION	7.595336858332774E-5	DEFECT
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.6737836919944985	DEFECT	0.3262163080055014	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9996803956281028	WITHOUT_CLASSIFICATION	3.196043718971566E-4	DEFECT
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9977287348294921	WITHOUT_CLASSIFICATION	0.00227126517050803	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999439098889646	WITHOUT_CLASSIFICATION	5.609011103537824E-5	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999439098889646	WITHOUT_CLASSIFICATION	5.609011103537824E-5	DEFECT
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999278160651195	WITHOUT_CLASSIFICATION	7.218393488046864E-5	DEFECT
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999720987843498	WITHOUT_CLASSIFICATION	2.7901215650188456E-4	DEFECT
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999489022391935	WITHOUT_CLASSIFICATION	5.109776080638437E-5	DEFECT
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9998762951813813	WITHOUT_CLASSIFICATION	1.237048186187877E-4	DEFECT
required and optional only	WITHOUT_CLASSIFICATION	0.9996384141859248	WITHOUT_CLASSIFICATION	3.6158581407523093E-4	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999765980654488	WITHOUT_CLASSIFICATION	2.340193455126162E-5	DEFECT
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9995779376024336	WITHOUT_CLASSIFICATION	4.220623975664346E-4	DEFECT
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999917781659715	WITHOUT_CLASSIFICATION	8.221834028454996E-6	DEFECT
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9974783271301201	WITHOUT_CLASSIFICATION	0.0025216728698799	DEFECT
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9995779376024336	WITHOUT_CLASSIFICATION	4.220623975664346E-4	DEFECT
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999851417778396	WITHOUT_CLASSIFICATION	1.4858222160448047E-5	DEFECT
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999969253414135	WITHOUT_CLASSIFICATION	3.0746585864507226E-6	DEFECT
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999232459559992	WITHOUT_CLASSIFICATION	7.675404400075926E-5	DEFECT
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999695568507353	WITHOUT_CLASSIFICATION	3.044314926470745E-4	DEFECT
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9841598503755405	WITHOUT_CLASSIFICATION	0.01584014962445943	DEFECT
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9997277413887004	WITHOUT_CLASSIFICATION	2.72258611299736E-4	DEFECT
No argument blocks	WITHOUT_CLASSIFICATION	0.9999603754641405	WITHOUT_CLASSIFICATION	3.962453585941138E-5	DEFECT
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999746110901747	WITHOUT_CLASSIFICATION	2.538890982539068E-5	DEFECT
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9985498328496983	WITHOUT_CLASSIFICATION	0.001450167150301714	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998682986148211	WITHOUT_CLASSIFICATION	1.3170138517884001E-4	DEFECT
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9911200239547493	WITHOUT_CLASSIFICATION	0.008879976045250666	DEFECT
Highest reserved id	WITHOUT_CLASSIFICATION	0.999834573084746	WITHOUT_CLASSIFICATION	1.6542691525402926E-4	DEFECT
binary typed calls	WITHOUT_CLASSIFICATION	0.9989226078273986	WITHOUT_CLASSIFICATION	0.001077392172601338	DEFECT
id must always be even	WITHOUT_CLASSIFICATION	0.9995426314825205	WITHOUT_CLASSIFICATION	4.5736851747951333E-4	DEFECT
with block pass	WITHOUT_CLASSIFICATION	0.9998395758030085	WITHOUT_CLASSIFICATION	1.604241969914464E-4	DEFECT
no block	WITHOUT_CLASSIFICATION	0.9999959613382579	WITHOUT_CLASSIFICATION	4.038661742133804E-6	DEFECT
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999476647938713	WITHOUT_CLASSIFICATION	5.2335206128767897E-5	DEFECT
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9981250744840594	WITHOUT_CLASSIFICATION	0.0018749255159406072	DEFECT
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998301211710046	WITHOUT_CLASSIFICATION	1.698788289954335E-4	DEFECT
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998762659129322	WITHOUT_CLASSIFICATION	1.2373408706783316E-4	DEFECT
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999205402756743	WITHOUT_CLASSIFICATION	7.945972432567561E-5	DEFECT
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999542019216787	WITHOUT_CLASSIFICATION	4.5798078321325416E-5	DEFECT
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999939783449467	WITHOUT_CLASSIFICATION	6.021655053313092E-5	DEFECT
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9995061428306878	WITHOUT_CLASSIFICATION	4.938571693121554E-4	DEFECT
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9972590981184516	WITHOUT_CLASSIFICATION	0.002740901881548405	DEFECT
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9998714859766589	WITHOUT_CLASSIFICATION	1.2851402334113497E-4	DEFECT
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9998553966457285	WITHOUT_CLASSIFICATION	1.4460335427134304E-4	DEFECT
Lastline	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999727195143329	WITHOUT_CLASSIFICATION	2.728048566718311E-5	DEFECT
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999672859455973	WITHOUT_CLASSIFICATION	3.2714054402709346E-5	DEFECT
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998626623343215	WITHOUT_CLASSIFICATION	1.3733766567840296E-4	DEFECT
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999270392955827	WITHOUT_CLASSIFICATION	7.2960704417212E-5	DEFECT
Some helper functions:	WITHOUT_CLASSIFICATION	0.9998904132209309	WITHOUT_CLASSIFICATION	1.0958677906922099E-4	DEFECT
silently ignore	WITHOUT_CLASSIFICATION	0.9999144406092162	WITHOUT_CLASSIFICATION	8.555939078386693E-5	DEFECT
used by compiler	WITHOUT_CLASSIFICATION	0.999944472147746	WITHOUT_CLASSIFICATION	5.5527852254060956E-5	DEFECT
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999497297278274	WITHOUT_CLASSIFICATION	5.027027217252223E-5	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9992403661564001	WITHOUT_CLASSIFICATION	7.596338435998329E-4	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9998731164266494	WITHOUT_CLASSIFICATION	1.2688357335045262E-4	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995239498652082	WITHOUT_CLASSIFICATION	4.760501347917608E-4	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998454477882803	WITHOUT_CLASSIFICATION	1.545522117196011E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9947708707497002	WITHOUT_CLASSIFICATION	0.005229129250299877	DEFECT
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9994847115234731	WITHOUT_CLASSIFICATION	5.152884765268846E-4	DEFECT
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9979750331505073	WITHOUT_CLASSIFICATION	0.0020249668494926806	DEFECT
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9964955484193018	WITHOUT_CLASSIFICATION	0.0035044515806982686	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998541790873156	WITHOUT_CLASSIFICATION	1.4582091268448933E-4	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998541790873156	WITHOUT_CLASSIFICATION	1.4582091268448933E-4	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999327433004962	WITHOUT_CLASSIFICATION	6.725669950386342E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999327433004962	WITHOUT_CLASSIFICATION	6.725669950386342E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999327433004962	WITHOUT_CLASSIFICATION	6.725669950386342E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9998889241872042	WITHOUT_CLASSIFICATION	1.1107581279582804E-4	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9998889241872042	WITHOUT_CLASSIFICATION	1.1107581279582804E-4	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9997219520433979	WITHOUT_CLASSIFICATION	2.780479566021098E-4	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9997219520433979	WITHOUT_CLASSIFICATION	2.780479566021098E-4	DEFECT
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9988972645712698	WITHOUT_CLASSIFICATION	0.0011027354287301769	DEFECT
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9964583228320766	WITHOUT_CLASSIFICATION	0.0035416771679233116	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.9999657888775784	WITHOUT_CLASSIFICATION	3.421112242160674E-5	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.9999657888775784	WITHOUT_CLASSIFICATION	3.421112242160674E-5	DEFECT
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9984814803141949	WITHOUT_CLASSIFICATION	0.0015185196858050933	DEFECT
retrieve method module name	WITHOUT_CLASSIFICATION	0.9999721572133712	WITHOUT_CLASSIFICATION	2.7842786628813244E-5	DEFECT
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9987622571571964	WITHOUT_CLASSIFICATION	0.0012377428428036767	DEFECT
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997692209111704	WITHOUT_CLASSIFICATION	2.307790888296644E-4	DEFECT
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9966831460913675	WITHOUT_CLASSIFICATION	0.0033168539086324976	DEFECT
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9999721001252863	WITHOUT_CLASSIFICATION	2.789987471369756E-5	DEFECT
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999384259810892	WITHOUT_CLASSIFICATION	6.157401891085272E-5	DEFECT
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998747192825391	WITHOUT_CLASSIFICATION	1.252807174609108E-4	DEFECT
caller	WITHOUT_CLASSIFICATION	0.9999639109714978	WITHOUT_CLASSIFICATION	3.6089028502109425E-5	DEFECT
calltype block	WITHOUT_CLASSIFICATION	0.9999645903739902	WITHOUT_CLASSIFICATION	3.5409626009756666E-5	DEFECT
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9998520279510205	WITHOUT_CLASSIFICATION	1.4797204897948048E-4	DEFECT
load arity for check	WITHOUT_CLASSIFICATION	0.9999699942691096	WITHOUT_CLASSIFICATION	3.0005730890336797E-5	DEFECT
throw	WITHOUT_CLASSIFICATION	0.9998807699769212	WITHOUT_CLASSIFICATION	1.1923002307866369E-4	DEFECT
load arity for error	WITHOUT_CLASSIFICATION	0.999798567898649	WITHOUT_CLASSIFICATION	2.0143210135094633E-4	DEFECT
arity ok, continue	WITHOUT_CLASSIFICATION	0.9998917086289493	WITHOUT_CLASSIFICATION	1.0829137105073339E-4	DEFECT
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999849849822029	WITHOUT_CLASSIFICATION	1.5015017796984995E-5	DEFECT
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
InvocationCallback	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9997053462892633	WITHOUT_CLASSIFICATION	2.946537107366711E-4	DEFECT
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9994730655241679	WITHOUT_CLASSIFICATION	5.269344758320607E-4	DEFECT
load the encoding	WITHOUT_CLASSIFICATION	0.9999576638412654	WITHOUT_CLASSIFICATION	4.233615873469709E-5	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998803278130818	WITHOUT_CLASSIFICATION	1.1967218691819361E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998803278130818	WITHOUT_CLASSIFICATION	1.1967218691819361E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998803278130818	WITHOUT_CLASSIFICATION	1.1967218691819361E-4	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997812795607578	WITHOUT_CLASSIFICATION	2.1872043924214338E-4	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997812795607578	WITHOUT_CLASSIFICATION	2.1872043924214338E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997812795607578	WITHOUT_CLASSIFICATION	2.1872043924214338E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997812795607578	WITHOUT_CLASSIFICATION	2.1872043924214338E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997812795607578	WITHOUT_CLASSIFICATION	2.1872043924214338E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997924186046185	WITHOUT_CLASSIFICATION	2.075813953814485E-4	DEFECT
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
ThreadContext	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9994892945846197	WITHOUT_CLASSIFICATION	5.107054153804698E-4	DEFECT
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999898378692771	WITHOUT_CLASSIFICATION	1.016213072299813E-5	DEFECT
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9998047760096065	WITHOUT_CLASSIFICATION	1.9522399039361782E-4	DEFECT
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.997935439742791	WITHOUT_CLASSIFICATION	0.00206456025720915	DEFECT
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9997601012391805	WITHOUT_CLASSIFICATION	2.3989876081961534E-4	DEFECT
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9979576510074469	WITHOUT_CLASSIFICATION	0.0020423489925530496	DEFECT
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9998633637108856	WITHOUT_CLASSIFICATION	1.366362891144687E-4	DEFECT
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999537044863014	WITHOUT_CLASSIFICATION	4.629551369859995E-5	DEFECT
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.99998267123969	WITHOUT_CLASSIFICATION	1.7328760310009525E-5	DEFECT
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999972356383381	WITHOUT_CLASSIFICATION	2.7643616619025272E-5	DEFECT
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998597773367784	WITHOUT_CLASSIFICATION	1.4022266322149044E-4	DEFECT
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.8539522143242357	WITHOUT_CLASSIFICATION	0.14604778567576432	DEFECT
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9998954379083264	WITHOUT_CLASSIFICATION	1.0456209167371187E-4	DEFECT
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999742505897476	WITHOUT_CLASSIFICATION	2.5749410252391805E-4	DEFECT
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999698788539199	WITHOUT_CLASSIFICATION	3.0121146080203823E-5	DEFECT
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998340676417616	WITHOUT_CLASSIFICATION	1.6593235823829895E-4	DEFECT
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9998729711002048	WITHOUT_CLASSIFICATION	1.270288997952345E-4	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999419107077461	WITHOUT_CLASSIFICATION	5.808929225393389E-5	DEFECT
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9983121617179809	WITHOUT_CLASSIFICATION	0.001687838282019194	DEFECT
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9676121586554881	WITHOUT_CLASSIFICATION	0.032387841344511926	DEFECT
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9997116780719956	WITHOUT_CLASSIFICATION	2.883219280045005E-4	DEFECT
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999669799539613	WITHOUT_CLASSIFICATION	3.3020046038635624E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999479676939422	WITHOUT_CLASSIFICATION	5.203230605779957E-5	DEFECT
extension extensions	WITHOUT_CLASSIFICATION	0.9998073553470148	WITHOUT_CLASSIFICATION	1.9264465298520037E-4	DEFECT
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9997028516491682	WITHOUT_CLASSIFICATION	2.971483508319198E-4	DEFECT
try all extensions	WITHOUT_CLASSIFICATION	0.9999681263569303	WITHOUT_CLASSIFICATION	3.187364306964146E-5	DEFECT
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999320344069932	WITHOUT_CLASSIFICATION	6.796559300678962E-5	DEFECT
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9997859698711322	WITHOUT_CLASSIFICATION	2.140301288677098E-4	DEFECT
try only literal search	WITHOUT_CLASSIFICATION	0.9999430215756894	WITHOUT_CLASSIFICATION	5.6978424310597585E-5	DEFECT
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999000327795712	WITHOUT_CLASSIFICATION	9.996722042883483E-5	DEFECT
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999962671449244	WITHOUT_CLASSIFICATION	3.732855075595713E-5	DEFECT
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998750926226371	WITHOUT_CLASSIFICATION	1.249073773628659E-4	DEFECT
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9993965407337132	WITHOUT_CLASSIFICATION	6.034592662867574E-4	DEFECT
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999734970331791	WITHOUT_CLASSIFICATION	2.6502966820881653E-5	DEFECT
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999388113653584	WITHOUT_CLASSIFICATION	6.118863464161297E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9995379521300457	WITHOUT_CLASSIFICATION	4.620478699543649E-4	DEFECT
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9993629867577206	WITHOUT_CLASSIFICATION	6.37013242279445E-4	DEFECT
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999960829053074	WITHOUT_CLASSIFICATION	3.917094692605984E-6	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9992010228788744	WITHOUT_CLASSIFICATION	7.989771211256419E-4	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9992010228788744	WITHOUT_CLASSIFICATION	7.989771211256419E-4	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9996761359290928	WITHOUT_CLASSIFICATION	3.23864070907229E-4	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9996761359290928	WITHOUT_CLASSIFICATION	3.23864070907229E-4	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9993944013977397	WITHOUT_CLASSIFICATION	6.055986022602173E-4	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9993944013977397	WITHOUT_CLASSIFICATION	6.055986022602173E-4	DEFECT
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998717260865818	WITHOUT_CLASSIFICATION	1.2827391341814262E-4	DEFECT
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999981937770702	WITHOUT_CLASSIFICATION	1.8062229298098555E-5	DEFECT
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999318769321738	WITHOUT_CLASSIFICATION	6.812306782620776E-5	DEFECT
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9964546275213008	WITHOUT_CLASSIFICATION	0.003545372478699298	DEFECT
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999552066936371	WITHOUT_CLASSIFICATION	4.479330636284026E-5	DEFECT
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9986795642441377	WITHOUT_CLASSIFICATION	0.0013204357558622378	DEFECT
signed short, native	WITHOUT_CLASSIFICATION	0.9998840219767339	WITHOUT_CLASSIFICATION	1.1597802326611928E-4	DEFECT
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999876532075852	WITHOUT_CLASSIFICATION	1.2346792414847583E-5	DEFECT
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9993287647866381	WITHOUT_CLASSIFICATION	6.71235213361968E-4	DEFECT
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9993099947359864	WITHOUT_CLASSIFICATION	6.900052640136405E-4	DEFECT
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9986419201380712	WITHOUT_CLASSIFICATION	0.0013580798619288144	DEFECT
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9998723016163192	WITHOUT_CLASSIFICATION	1.276983836807972E-4	DEFECT
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9988103102364861	WITHOUT_CLASSIFICATION	0.0011896897635138247	DEFECT
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9998004662050595	WITHOUT_CLASSIFICATION	1.9953379494041685E-4	DEFECT
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9992129149420343	WITHOUT_CLASSIFICATION	7.870850579656218E-4	DEFECT
write('S');	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9998521139954752	WITHOUT_CLASSIFICATION	1.478860045248554E-4	DEFECT
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9990688016378364	WITHOUT_CLASSIFICATION	9.311983621635332E-4	DEFECT
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9997604626999582	WITHOUT_CLASSIFICATION	2.395373000417651E-4	DEFECT
w_symbol	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
w_unique	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9971658886419151	WITHOUT_CLASSIFICATION	0.0028341113580848923	DEFECT
Major Minor	WITHOUT_CLASSIFICATION	0.9998585561867968	WITHOUT_CLASSIFICATION	1.414438132032782E-4	DEFECT
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999931021628086	WITHOUT_CLASSIFICATION	6.897837191402069E-5	DEFECT
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999615428416466	WITHOUT_CLASSIFICATION	3.845715835335273E-5	DEFECT
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999818640767251	WITHOUT_CLASSIFICATION	1.8135923274872224E-5	DEFECT
sic	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998085332614348	WITHOUT_CLASSIFICATION	1.914667385651745E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998085332614348	WITHOUT_CLASSIFICATION	1.914667385651745E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998085332614348	WITHOUT_CLASSIFICATION	1.914667385651745E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995074920388687	WITHOUT_CLASSIFICATION	4.925079611312704E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995074920388687	WITHOUT_CLASSIFICATION	4.925079611312704E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998682986148211	WITHOUT_CLASSIFICATION	1.3170138517884001E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998682986148211	WITHOUT_CLASSIFICATION	1.3170138517884001E-4	DEFECT
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999867274185632	WITHOUT_CLASSIFICATION	1.3272581436773454E-5	DEFECT
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9981686343761373	WITHOUT_CLASSIFICATION	0.0018313656238626306	DEFECT
unsigned short, native	WITHOUT_CLASSIFICATION	0.9998929478735843	WITHOUT_CLASSIFICATION	1.0705212641569348E-4	DEFECT
int, native long, native	WITHOUT_CLASSIFICATION	0.9998936962784071	WITHOUT_CLASSIFICATION	1.0630372159290444E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998085332614348	WITHOUT_CLASSIFICATION	1.914667385651745E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998085332614348	WITHOUT_CLASSIFICATION	1.914667385651745E-4	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998085332614348	WITHOUT_CLASSIFICATION	1.914667385651745E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995074920388687	WITHOUT_CLASSIFICATION	4.925079611312704E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995074920388687	WITHOUT_CLASSIFICATION	4.925079611312704E-4	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995074920388687	WITHOUT_CLASSIFICATION	4.925079611312704E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998682986148211	WITHOUT_CLASSIFICATION	1.3170138517884001E-4	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998682986148211	WITHOUT_CLASSIFICATION	1.3170138517884001E-4	DEFECT
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9997847507708638	WITHOUT_CLASSIFICATION	2.1524922913622859E-4	DEFECT
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999652469531722	WITHOUT_CLASSIFICATION	3.4753046827802884E-5	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9933404739132136	WITHOUT_CLASSIFICATION	0.006659526086786512	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9933404739132136	WITHOUT_CLASSIFICATION	0.006659526086786512	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9933404739132136	WITHOUT_CLASSIFICATION	0.006659526086786512	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9933404739132136	WITHOUT_CLASSIFICATION	0.006659526086786512	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9933404739132136	WITHOUT_CLASSIFICATION	0.006659526086786512	DEFECT
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999548029867857	WITHOUT_CLASSIFICATION	4.519701321431268E-5	DEFECT
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9990668232857147	WITHOUT_CLASSIFICATION	9.331767142852929E-4	DEFECT
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999678624141877	WITHOUT_CLASSIFICATION	3.213758581239336E-5	DEFECT
are we at ''	WITHOUT_CLASSIFICATION	0.999865451593149	WITHOUT_CLASSIFICATION	1.3454840685093514E-4	DEFECT
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999918707036209	WITHOUT_CLASSIFICATION	8.129296379105537E-5	DEFECT
not enough bytes	WITHOUT_CLASSIFICATION	0.9993206429431423	WITHOUT_CLASSIFICATION	6.793570568578373E-4	DEFECT
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999642491845596	WITHOUT_CLASSIFICATION	3.575081544037924E-5	DEFECT
skip inner braces	WITHOUT_CLASSIFICATION	0.999934972473746	WITHOUT_CLASSIFICATION	6.502752625404693E-5	DEFECT
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.999792199206773	WITHOUT_CLASSIFICATION	2.0780079322702802E-4	DEFECT
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.999887692040344	WITHOUT_CLASSIFICATION	1.1230795965597286E-4	DEFECT
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999667809314662	WITHOUT_CLASSIFICATION	3.3219068533756735E-5	DEFECT
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9997057424450545	WITHOUT_CLASSIFICATION	2.942575549454695E-4	DEFECT
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9998193749408644	WITHOUT_CLASSIFICATION	1.806250591356395E-4	DEFECT
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9962409311420336	WITHOUT_CLASSIFICATION	0.003759068857966394	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998697719972254	WITHOUT_CLASSIFICATION	1.3022800277472975E-4	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998697719972254	WITHOUT_CLASSIFICATION	1.3022800277472975E-4	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998697719972254	WITHOUT_CLASSIFICATION	1.3022800277472975E-4	DEFECT
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.994856172650636	WITHOUT_CLASSIFICATION	0.005143827349363943	DEFECT
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.994856172650636	WITHOUT_CLASSIFICATION	0.005143827349363943	DEFECT
SimpleSampler	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999297621939843	WITHOUT_CLASSIFICATION	7.023780601567393E-5	DEFECT
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9997010978922742	WITHOUT_CLASSIFICATION	2.989021077257538E-4	DEFECT
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998014168829932	WITHOUT_CLASSIFICATION	1.9858311700674734E-4	DEFECT
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998813094701019	WITHOUT_CLASSIFICATION	1.1869052989802722E-4	DEFECT
single precision, native	WITHOUT_CLASSIFICATION	0.9998999157701809	WITHOUT_CLASSIFICATION	1.0008422981915463E-4	DEFECT
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9998325536789082	WITHOUT_CLASSIFICATION	1.6744632109171303E-4	DEFECT
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998641848858809	WITHOUT_CLASSIFICATION	1.3581511411908876E-4	DEFECT
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999188271341106	WITHOUT_CLASSIFICATION	8.117286588938846E-5	DEFECT
double precision, native	WITHOUT_CLASSIFICATION	0.9999315524500124	WITHOUT_CLASSIFICATION	6.84475499875837E-5	DEFECT
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998729647422511	WITHOUT_CLASSIFICATION	1.270352577489007E-4	DEFECT
signed char	WITHOUT_CLASSIFICATION	0.9998788865483741	WITHOUT_CLASSIFICATION	1.2111345162591839E-4	DEFECT
unsigned char	WITHOUT_CLASSIFICATION	0.9998789583051721	WITHOUT_CLASSIFICATION	1.2104169482785767E-4	DEFECT
long, little-endian	WITHOUT_CLASSIFICATION	0.9998590071881344	WITHOUT_CLASSIFICATION	1.4099281186559482E-4	DEFECT
long, big-endian	WITHOUT_CLASSIFICATION	0.9998590142445476	WITHOUT_CLASSIFICATION	1.4098575545253188E-4	DEFECT
unsigned int, native	WITHOUT_CLASSIFICATION	0.9998850151908908	WITHOUT_CLASSIFICATION	1.1498480910915992E-4	DEFECT
int, native	WITHOUT_CLASSIFICATION	0.9998849010098058	WITHOUT_CLASSIFICATION	1.1509899019428734E-4	DEFECT
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998515078465486	WITHOUT_CLASSIFICATION	1.48492153451306E-4	DEFECT
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9997637603672976	WITHOUT_CLASSIFICATION	2.3623963270223477E-4	DEFECT
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9996481509638739	WITHOUT_CLASSIFICATION	3.5184903612611897E-4	DEFECT
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9810997643678631	WITHOUT_CLASSIFICATION	0.018900235632137028	DEFECT
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998806220889521	WITHOUT_CLASSIFICATION	1.193779110479366E-4	DEFECT
obtain a	WITHOUT_CLASSIFICATION	0.9999613151642479	WITHOUT_CLASSIFICATION	3.8684835752133E-5	DEFECT
obtain b	WITHOUT_CLASSIFICATION	0.9999733641636853	WITHOUT_CLASSIFICATION	2.663583631466493E-5	DEFECT
obtain c	WITHOUT_CLASSIFICATION	0.9999783995411713	WITHOUT_CLASSIFICATION	2.160045882875262E-5	DEFECT
obtain d	WITHOUT_CLASSIFICATION	0.9999631783434434	WITHOUT_CLASSIFICATION	3.682165655671291E-5	DEFECT
encode.limit() -	WITHOUT_CLASSIFICATION	0.9996631558096767	WITHOUT_CLASSIFICATION	3.368441903232615E-4	DEFECT
1	WITHOUT_CLASSIFICATION	0.9999786179915464	WITHOUT_CLASSIFICATION	2.1382008453567632E-5	DEFECT
2	WITHOUT_CLASSIFICATION	0.9995689240254039	WITHOUT_CLASSIFICATION	4.31075974596172E-4	DEFECT
3	WITHOUT_CLASSIFICATION	0.9999832559780325	WITHOUT_CLASSIFICATION	1.6744021967477124E-5	DEFECT
4	WITHOUT_CLASSIFICATION	0.9999269313377027	WITHOUT_CLASSIFICATION	7.306866229728708E-5	DEFECT
5	WITHOUT_CLASSIFICATION	0.9999731981522785	WITHOUT_CLASSIFICATION	2.680184772153575E-5	DEFECT
6	WITHOUT_CLASSIFICATION	0.9999709855017629	WITHOUT_CLASSIFICATION	2.9014498237036484E-5	DEFECT
7	WITHOUT_CLASSIFICATION	0.9999625626977552	WITHOUT_CLASSIFICATION	3.7437302244742445E-5	DEFECT
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999632494820913	WITHOUT_CLASSIFICATION	3.675051790869289E-5	DEFECT
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999610324109605	WITHOUT_CLASSIFICATION	3.896758903952124E-5	DEFECT
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.99965368747608	WITHOUT_CLASSIFICATION	3.463125239200024E-4	DEFECT
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9818781460159742	WITHOUT_CLASSIFICATION	0.01812185398402569	DEFECT
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9995981518407773	WITHOUT_CLASSIFICATION	4.018481592227669E-4	DEFECT
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9964039160738467	WITHOUT_CLASSIFICATION	0.0035960839261533085	DEFECT
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9997853030712518	WITHOUT_CLASSIFICATION	2.1469692874818397E-4	DEFECT
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9993720376028676	WITHOUT_CLASSIFICATION	6.279623971322423E-4	DEFECT
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999666567396152	WITHOUT_CLASSIFICATION	3.3343260384851006E-5	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9975167210517387	WITHOUT_CLASSIFICATION	0.0024832789482612957	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9984002887024597	WITHOUT_CLASSIFICATION	0.0015997112975403441	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9984002887024597	WITHOUT_CLASSIFICATION	0.0015997112975403441	DEFECT
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9992065928166733	WITHOUT_CLASSIFICATION	7.934071833267345E-4	DEFECT
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998669142234139	WITHOUT_CLASSIFICATION	1.3308577658611789E-4	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9974062220440242	WITHOUT_CLASSIFICATION	0.002593777955975743	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9986393149350677	WITHOUT_CLASSIFICATION	0.0013606850649322203	DEFECT
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9995909856965146	WITHOUT_CLASSIFICATION	4.0901430348549224E-4	DEFECT
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998599349209387	WITHOUT_CLASSIFICATION	1.4006507906122201E-4	DEFECT
are we recursing?	WITHOUT_CLASSIFICATION	0.9999289532135208	WITHOUT_CLASSIFICATION	7.104678647915322E-5	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998326294281333	WITHOUT_CLASSIFICATION	1.6737057186665057E-4	DEFECT
default PidGetter	WITHOUT_CLASSIFICATION	0.9999780300614026	WITHOUT_CLASSIFICATION	2.1969938597364824E-5	DEFECT
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999423428964194	WITHOUT_CLASSIFICATION	5.765710358067744E-5	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998280642035451	WITHOUT_CLASSIFICATION	1.719357964549509E-4	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998280642035451	WITHOUT_CLASSIFICATION	1.719357964549509E-4	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998280642035451	WITHOUT_CLASSIFICATION	1.719357964549509E-4	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998280642035451	WITHOUT_CLASSIFICATION	1.719357964549509E-4	DEFECT
try both	WITHOUT_CLASSIFICATION	0.9999864912015374	WITHOUT_CLASSIFICATION	1.3508798462578258E-5	DEFECT
just unix	WITHOUT_CLASSIFICATION	0.9999908628502924	WITHOUT_CLASSIFICATION	9.137149707647067E-6	DEFECT
just windows	WITHOUT_CLASSIFICATION	0.9999705293489941	WITHOUT_CLASSIFICATION	2.9470651005775455E-5	DEFECT
neither	WITHOUT_CLASSIFICATION	0.9999625724645691	WITHOUT_CLASSIFICATION	3.742753543088243E-5	DEFECT
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9994564420508761	WITHOUT_CLASSIFICATION	5.435579491237787E-4	DEFECT
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9996099870391798	WITHOUT_CLASSIFICATION	3.900129608202465E-4	DEFECT
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9996444180454812	WITHOUT_CLASSIFICATION	3.555819545188594E-4	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999797027062426	WITHOUT_CLASSIFICATION	2.029729375736783E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999797027062426	WITHOUT_CLASSIFICATION	2.029729375736783E-5	DEFECT
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999339719399687	WITHOUT_CLASSIFICATION	6.602806003130747E-5	DEFECT
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999130719934691	WITHOUT_CLASSIFICATION	8.692800653089027E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999416570775007	WITHOUT_CLASSIFICATION	5.83429224991505E-5	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9963597551331115	WITHOUT_CLASSIFICATION	0.0036402448668884342	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9963597551331115	WITHOUT_CLASSIFICATION	0.0036402448668884342	DEFECT
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9985777242941242	WITHOUT_CLASSIFICATION	0.0014222757058758287	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997758238298315	WITHOUT_CLASSIFICATION	2.2417617016838584E-4	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997758238298315	WITHOUT_CLASSIFICATION	2.2417617016838584E-4	DEFECT
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9921707054280247	WITHOUT_CLASSIFICATION	0.007829294571975403	DEFECT
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999827434846678	WITHOUT_CLASSIFICATION	1.725651533223786E-5	DEFECT
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999974268658498	WITHOUT_CLASSIFICATION	2.5731341502005275E-5	DEFECT
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9988773245226119	WITHOUT_CLASSIFICATION	0.0011226754773881614	DEFECT
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9779668245878056	WITHOUT_CLASSIFICATION	0.022033175412194368	DEFECT
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999666291632284	WITHOUT_CLASSIFICATION	3.337083677170307E-5	DEFECT
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9879729713594846	WITHOUT_CLASSIFICATION	0.012027028640515422	DEFECT
sequential	WITHOUT_CLASSIFICATION	0.9999636013890911	WITHOUT_CLASSIFICATION	3.639861090883904E-5	DEFECT
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999947007317283	WITHOUT_CLASSIFICATION	5.2992682716942845E-5	DEFECT
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999037790634835	WITHOUT_CLASSIFICATION	9.622093651644717E-5	DEFECT
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999100039333135	WITHOUT_CLASSIFICATION	8.999606668653307E-5	DEFECT
SignalFacade	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9773086562759895	WITHOUT_CLASSIFICATION	0.022691343724010448	DEFECT
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9902218420853731	WITHOUT_CLASSIFICATION	0.009778157914626814	DEFECT
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999657333562357	WITHOUT_CLASSIFICATION	3.426664376435648E-5	DEFECT
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9945038855352543	WITHOUT_CLASSIFICATION	0.005496114464745805	DEFECT
Args	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
static methods only	WITHOUT_CLASSIFICATION	0.999909495537409	WITHOUT_CLASSIFICATION	9.050446259090212E-5	DEFECT
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998451114372073	WITHOUT_CLASSIFICATION	1.5488856279272106E-4	DEFECT
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9995535792828822	WITHOUT_CLASSIFICATION	4.4642071711771845E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9990353409829437	WITHOUT_CLASSIFICATION	9.646590170563153E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9986695659714151	WITHOUT_CLASSIFICATION	0.0013304340285849212	DEFECT
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9922299724306085	WITHOUT_CLASSIFICATION	0.0077700275693915076	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9997376927238976	WITHOUT_CLASSIFICATION	2.6230727610251074E-4	DEFECT
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9263736744158014	WITHOUT_CLASSIFICATION	0.0736263255841986	DEFECT
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999920952000834	WITHOUT_CLASSIFICATION	7.904799916608287E-5	DEFECT
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998703563073419	WITHOUT_CLASSIFICATION	1.29643692658108E-4	DEFECT
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9998114898491898	WITHOUT_CLASSIFICATION	1.8851015081025398E-4	DEFECT
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998226933568343	WITHOUT_CLASSIFICATION	1.7730664316576344E-4	DEFECT
..	WITHOUT_CLASSIFICATION	0.9998591698131736	WITHOUT_CLASSIFICATION	1.4083018682644875E-4	DEFECT
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9997836503285255	WITHOUT_CLASSIFICATION	2.1634967147445347E-4	DEFECT
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8452739027381234	WITHOUT_CLASSIFICATION	0.15472609726187656	DEFECT
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9995834875688702	WITHOUT_CLASSIFICATION	4.1651243112976894E-4	DEFECT
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9999170896166022	WITHOUT_CLASSIFICATION	8.291038339778218E-5	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9996170554725031	WITHOUT_CLASSIFICATION	3.829445274968832E-4	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998501626501217	WITHOUT_CLASSIFICATION	1.4983734987827416E-4	DEFECT
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996539762534914	WITHOUT_CLASSIFICATION	3.460237465085528E-4	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9996170554725031	WITHOUT_CLASSIFICATION	3.829445274968832E-4	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998501626501217	WITHOUT_CLASSIFICATION	1.4983734987827416E-4	DEFECT
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9997211493527451	WITHOUT_CLASSIFICATION	2.788506472548315E-4	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9998244288263277	WITHOUT_CLASSIFICATION	1.7557117367228284E-4	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9998244288263277	WITHOUT_CLASSIFICATION	1.7557117367228284E-4	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998905115188552	WITHOUT_CLASSIFICATION	1.0948848114473013E-4	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9986220742542544	WITHOUT_CLASSIFICATION	0.0013779257457455204	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999321353826296	WITHOUT_CLASSIFICATION	6.786461737041914E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998149968847784	WITHOUT_CLASSIFICATION	1.850031152215687E-4	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9971497172977986	WITHOUT_CLASSIFICATION	0.0028502827022014684	DEFECT
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9988458502915346	WITHOUT_CLASSIFICATION	0.001154149708465406	DEFECT
'.' is printed	WITHOUT_CLASSIFICATION	0.9996718004754505	WITHOUT_CLASSIFICATION	3.2819952454954415E-4	DEFECT
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999132983198397	WITHOUT_CLASSIFICATION	8.67016801603766E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999384838961585	WITHOUT_CLASSIFICATION	6.151610384154892E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999627129908945	WITHOUT_CLASSIFICATION	3.7287009105604804E-5	DEFECT
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9998009711690198	WITHOUT_CLASSIFICATION	1.990288309803234E-4	DEFECT
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998507936427409	WITHOUT_CLASSIFICATION	1.4920635725908962E-4	DEFECT
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9994530535740046	WITHOUT_CLASSIFICATION	5.469464259954108E-4	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999813316073393	WITHOUT_CLASSIFICATION	1.8668392660651306E-5	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999813316073393	WITHOUT_CLASSIFICATION	1.8668392660651306E-5	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.999847538628181	WITHOUT_CLASSIFICATION	1.5246137181904783E-4	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.999847538628181	WITHOUT_CLASSIFICATION	1.5246137181904783E-4	DEFECT
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999354146000541	WITHOUT_CLASSIFICATION	6.458539994591373E-5	DEFECT
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
(1|intlen)	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9996714810753846	WITHOUT_CLASSIFICATION	3.285189246154121E-4	DEFECT
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999085260403644	WITHOUT_CLASSIFICATION	9.147395963559669E-5	DEFECT
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999321353826296	WITHOUT_CLASSIFICATION	6.786461737041914E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998149968847784	WITHOUT_CLASSIFICATION	1.850031152215687E-4	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999384838961585	WITHOUT_CLASSIFICATION	6.151610384154892E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999627129908945	WITHOUT_CLASSIFICATION	3.7287009105604804E-5	DEFECT
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999534946867835	WITHOUT_CLASSIFICATION	4.650531321648534E-5	DEFECT
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998578979622024	WITHOUT_CLASSIFICATION	1.4210203779757008E-4	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
dangling '%' char	WITHOUT_CLASSIFICATION	0.9998796938304938	WITHOUT_CLASSIFICATION	1.2030616950631612E-4	DEFECT
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998051528290111	WITHOUT_CLASSIFICATION	1.9484717098902754E-4	DEFECT
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999398195504704	WITHOUT_CLASSIFICATION	6.018044952969223E-5	DEFECT
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9992221967782643	WITHOUT_CLASSIFICATION	7.778032217356934E-4	DEFECT
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9998613222657126	WITHOUT_CLASSIFICATION	1.3867773428745563E-4	DEFECT
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998740463331846	WITHOUT_CLASSIFICATION	1.2595366681541283E-4	DEFECT
negative values	WITHOUT_CLASSIFICATION	0.999750149694018	WITHOUT_CLASSIFICATION	2.49850305981924E-4	DEFECT
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9823847286387496	WITHOUT_CLASSIFICATION	0.017615271361250344	DEFECT
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9996761879658362	WITHOUT_CLASSIFICATION	3.238120341637661E-4	DEFECT
no such luck...	WITHOUT_CLASSIFICATION	0.9999607405440183	WITHOUT_CLASSIFICATION	3.925945598171882E-5	DEFECT
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999114780091278	WITHOUT_CLASSIFICATION	8.852199087218751E-5	DEFECT
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999763810177568	WITHOUT_CLASSIFICATION	2.3618982243192124E-5	DEFECT
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998121247185858	WITHOUT_CLASSIFICATION	1.8787528141413987E-4	DEFECT
constant vector a	WITHOUT_CLASSIFICATION	0.9998667397301526	WITHOUT_CLASSIFICATION	1.3326026984734164E-4	DEFECT
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9998742746989849	WITHOUT_CLASSIFICATION	1.2572530101497286E-4	DEFECT
least significant r bits	WITHOUT_CLASSIFICATION	0.9998733651039553	WITHOUT_CLASSIFICATION	1.2663489604469025E-4	DEFECT
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9992565751987927	WITHOUT_CLASSIFICATION	7.434248012072993E-4	DEFECT
Tempering	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999479191894437	WITHOUT_CLASSIFICATION	5.208081055627342E-5	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996645894598369	WITHOUT_CLASSIFICATION	3.3541054016309065E-4	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996645894598369	WITHOUT_CLASSIFICATION	3.3541054016309065E-4	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996422204886996	WITHOUT_CLASSIFICATION	3.577795113004727E-4	DEFECT
no number	WITHOUT_CLASSIFICATION	0.9999696641542273	WITHOUT_CLASSIFICATION	3.033584577272034E-5	DEFECT
trailing garbage	WITHOUT_CLASSIFICATION	0.9999130351088942	WITHOUT_CLASSIFICATION	8.696489110579978E-5	DEFECT
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9994291993178384	WITHOUT_CLASSIFICATION	5.708006821616549E-4	DEFECT
it was not found at all!	WITHOUT_CLASSIFICATION	0.9991247522278542	WITHOUT_CLASSIFICATION	8.752477721457844E-4	DEFECT
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9991338160121076	WITHOUT_CLASSIFICATION	8.661839878923871E-4	DEFECT
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998880726149876	WITHOUT_CLASSIFICATION	1.1192738501244447E-4	DEFECT
goto next bucket	WITHOUT_CLASSIFICATION	0.999309595233702	WITHOUT_CLASSIFICATION	6.904047662979743E-4	DEFECT
we reached the end	WITHOUT_CLASSIFICATION	0.999686609876985	WITHOUT_CLASSIFICATION	3.133901230150665E-4	DEFECT
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9997024954165442	WITHOUT_CLASSIFICATION	2.975045834558004E-4	DEFECT
states	WITHOUT_CLASSIFICATION	0.9999663924957409	WITHOUT_CLASSIFICATION	3.3607504259024583E-5	DEFECT
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9996246605131126	WITHOUT_CLASSIFICATION	3.753394868873888E-4	DEFECT
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9994298079264089	WITHOUT_CLASSIFICATION	5.701920735910731E-4	DEFECT
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999873111346963	WITHOUT_CLASSIFICATION	1.2688865303691948E-4	DEFECT
drop through for sign	WITHOUT_CLASSIFICATION	0.9999113056092475	WITHOUT_CLASSIFICATION	8.869439075264839E-5	DEFECT
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9962918107202625	WITHOUT_CLASSIFICATION	0.003708189279737523	DEFECT
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9998518923869578	WITHOUT_CLASSIFICATION	1.481076130421293E-4	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999421785373146	WITHOUT_CLASSIFICATION	5.7821462685452805E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999018273038086	WITHOUT_CLASSIFICATION	9.817269619139633E-5	DEFECT
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999787941167873	WITHOUT_CLASSIFICATION	2.120588321272761E-5	DEFECT
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999232996429801	WITHOUT_CLASSIFICATION	7.670035701995914E-5	DEFECT
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9998682028478424	WITHOUT_CLASSIFICATION	1.31797152157624E-4	DEFECT
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9997713210261916	WITHOUT_CLASSIFICATION	2.2867897380843987E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997051705055977	WITHOUT_CLASSIFICATION	2.948294944022723E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997051705055977	WITHOUT_CLASSIFICATION	2.948294944022723E-4	DEFECT
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9999908143594278	WITHOUT_CLASSIFICATION	9.185640572129709E-6	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9998877898583561	WITHOUT_CLASSIFICATION	1.1221014164388665E-4	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9998877898583561	WITHOUT_CLASSIFICATION	1.1221014164388665E-4	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999074509683538	WITHOUT_CLASSIFICATION	9.254903164625751E-5	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999074509683538	WITHOUT_CLASSIFICATION	9.254903164625751E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999338286293281	WITHOUT_CLASSIFICATION	6.617137067185476E-5	DEFECT
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998915654335601	WITHOUT_CLASSIFICATION	1.0843456643988146E-4	DEFECT
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999602508738611	WITHOUT_CLASSIFICATION	3.974912613883841E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999521069883178	WITHOUT_CLASSIFICATION	4.7893011682065E-5	DEFECT
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9997295251798771	WITHOUT_CLASSIFICATION	2.704748201229296E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999421785373146	WITHOUT_CLASSIFICATION	5.7821462685452805E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999421785373146	WITHOUT_CLASSIFICATION	5.7821462685452805E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999421785373146	WITHOUT_CLASSIFICATION	5.7821462685452805E-5	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999018273038086	WITHOUT_CLASSIFICATION	9.817269619139633E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997051705055977	WITHOUT_CLASSIFICATION	2.948294944022723E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997051705055977	WITHOUT_CLASSIFICATION	2.948294944022723E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997051705055977	WITHOUT_CLASSIFICATION	2.948294944022723E-4	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999338286293281	WITHOUT_CLASSIFICATION	6.617137067185476E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999338286293281	WITHOUT_CLASSIFICATION	6.617137067185476E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999338286293281	WITHOUT_CLASSIFICATION	6.617137067185476E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999521069883178	WITHOUT_CLASSIFICATION	4.7893011682065E-5	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999521069883178	WITHOUT_CLASSIFICATION	4.7893011682065E-5	DEFECT
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999005079604143	WITHOUT_CLASSIFICATION	9.949203958563435E-5	DEFECT
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999589023799946	WITHOUT_CLASSIFICATION	4.1097620005435904E-5	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999259520366984	WITHOUT_CLASSIFICATION	7.404796330155332E-5	DEFECT
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.8139467645371142	WITHOUT_CLASSIFICATION	0.18605323546288585	DEFECT
no digits, error	WITHOUT_CLASSIFICATION	0.99991846361369	WITHOUT_CLASSIFICATION	8.153638630996779E-5	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9998076956605207	WITHOUT_CLASSIFICATION	1.9230433947925424E-4	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9998076956605207	WITHOUT_CLASSIFICATION	1.9230433947925424E-4	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999544255311974	WITHOUT_CLASSIFICATION	4.557446880260283E-4	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997684353001245	WITHOUT_CLASSIFICATION	2.3156469987547089E-4	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997684353001245	WITHOUT_CLASSIFICATION	2.3156469987547089E-4	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997684353001245	WITHOUT_CLASSIFICATION	2.3156469987547089E-4	DEFECT
first char must be digit	WITHOUT_CLASSIFICATION	0.9999351891858779	WITHOUT_CLASSIFICATION	6.481081412217827E-5	DEFECT
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999859890723703	WITHOUT_CLASSIFICATION	1.4010927629705362E-4	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999018273038086	WITHOUT_CLASSIFICATION	9.817269619139633E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999338286293281	WITHOUT_CLASSIFICATION	6.617137067185476E-5	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999338286293281	WITHOUT_CLASSIFICATION	6.617137067185476E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997684353001245	WITHOUT_CLASSIFICATION	2.3156469987547089E-4	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999544255311974	WITHOUT_CLASSIFICATION	4.557446880260283E-4	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999540770196634	WITHOUT_CLASSIFICATION	4.592298033655349E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9996648390738823	WITHOUT_CLASSIFICATION	3.3516092611772416E-4	DEFECT
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999407115486474	WITHOUT_CLASSIFICATION	5.928845135257177E-5	DEFECT
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999095527658907	WITHOUT_CLASSIFICATION	9.04472341092825E-5	DEFECT
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9998767382859973	WITHOUT_CLASSIFICATION	1.2326171400255087E-4	DEFECT
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9979753263292218	WITHOUT_CLASSIFICATION	0.0020246736707781594	DEFECT
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999866518602278	WITHOUT_CLASSIFICATION	1.3348139772277897E-5	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998720338908962	WITHOUT_CLASSIFICATION	1.2796610910387792E-4	DEFECT
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998927769608631	WITHOUT_CLASSIFICATION	1.0722303913686176E-4	DEFECT
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9996213417723052	WITHOUT_CLASSIFICATION	3.78658227694747E-4	DEFECT
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9997626283219786	WITHOUT_CLASSIFICATION	2.3737167802141264E-4	DEFECT
Creates the new entry.	WITHOUT_CLASSIFICATION	0.999946662857528	WITHOUT_CLASSIFICATION	5.333714247207084E-5	DEFECT
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9998750457899745	WITHOUT_CLASSIFICATION	1.249542100253756E-4	DEFECT
advance to first entry	WITHOUT_CLASSIFICATION	0.9999429963750537	WITHOUT_CLASSIFICATION	5.700362494629024E-5	DEFECT
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999399037204554	WITHOUT_CLASSIFICATION	6.009627954469051E-5	DEFECT
package-protected	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999830437114662	WITHOUT_CLASSIFICATION	1.6956288533768125E-5	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996677730113412	WITHOUT_CLASSIFICATION	3.3222698865883663E-4	DEFECT
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9991682772034994	WITHOUT_CLASSIFICATION	8.317227965005087E-4	DEFECT
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998626178617639	WITHOUT_CLASSIFICATION	1.3738213823620508E-4	DEFECT
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999857023130082	WITHOUT_CLASSIFICATION	1.4297686991798995E-5	DEFECT
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999082092839067	WITHOUT_CLASSIFICATION	9.179071609335176E-5	DEFECT
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9998489089097417	WITHOUT_CLASSIFICATION	1.5109109025844824E-4	DEFECT
unread back	WITHOUT_CLASSIFICATION	0.9998563272607375	WITHOUT_CLASSIFICATION	1.436727392625639E-4	DEFECT
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999480682311621	WITHOUT_CLASSIFICATION	5.1931768837880284E-5	DEFECT
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999157120750229	WITHOUT_CLASSIFICATION	8.428792497701724E-5	DEFECT
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999948485671651	WITHOUT_CLASSIFICATION	5.1514328349002876E-5	DEFECT
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999981474436213	WITHOUT_CLASSIFICATION	1.852556378817992E-6	DEFECT
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.999850501988812	WITHOUT_CLASSIFICATION	1.4949801118799264E-4	DEFECT
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9996704065729831	WITHOUT_CLASSIFICATION	3.2959342701691406E-4	DEFECT
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999054379702629	WITHOUT_CLASSIFICATION	9.456202973718906E-5	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999540770196634	WITHOUT_CLASSIFICATION	4.592298033655349E-5	DEFECT
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999653060421028	WITHOUT_CLASSIFICATION	3.469395789719776E-5	DEFECT
not closing from finalize	WITHOUT_CLASSIFICATION	0.9990633252620252	WITHOUT_CLASSIFICATION	9.366747379747934E-4	DEFECT
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.996996110822475	WITHOUT_CLASSIFICATION	0.003003889177524918	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.999594915192947	WITHOUT_CLASSIFICATION	4.0508480705305264E-4	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.999594915192947	WITHOUT_CLASSIFICATION	4.0508480705305264E-4	DEFECT
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9998511997296612	WITHOUT_CLASSIFICATION	1.488002703388902E-4	DEFECT
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999592104903794	WITHOUT_CLASSIFICATION	4.078950962063036E-5	DEFECT
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997175468541989	WITHOUT_CLASSIFICATION	2.824531458010923E-4	DEFECT
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999649107187082	WITHOUT_CLASSIFICATION	3.5089281291806354E-4	DEFECT
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999733744445796	WITHOUT_CLASSIFICATION	2.6625555420395193E-5	DEFECT
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9996634974985231	WITHOUT_CLASSIFICATION	3.3650250147695065E-4	DEFECT
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9956124959122841	WITHOUT_CLASSIFICATION	0.004387504087715909	DEFECT
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999289716749433	WITHOUT_CLASSIFICATION	7.102832505662114E-5	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9997560507887329	WITHOUT_CLASSIFICATION	2.4394921126698197E-4	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9975558454495346	WITHOUT_CLASSIFICATION	0.0024441545504654246	DEFECT
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9996236248945545	WITHOUT_CLASSIFICATION	3.7637510544551145E-4	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999476165954855	WITHOUT_CLASSIFICATION	5.238340451443848E-5	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999476165954855	WITHOUT_CLASSIFICATION	5.238340451443848E-5	DEFECT
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9991400830688595	WITHOUT_CLASSIFICATION	8.599169311404644E-4	DEFECT
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9999575103502748	WITHOUT_CLASSIFICATION	4.2489649725213924E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999554797040955	WITHOUT_CLASSIFICATION	4.452029590457774E-5	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999554797040955	WITHOUT_CLASSIFICATION	4.452029590457774E-5	DEFECT
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999527152112441	WITHOUT_CLASSIFICATION	4.72847887559721E-5	DEFECT
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999104660139561	WITHOUT_CLASSIFICATION	8.953398604394879E-5	DEFECT
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999028368653124	WITHOUT_CLASSIFICATION	9.716313468756574E-5	DEFECT
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9995536315143151	WITHOUT_CLASSIFICATION	4.4636848568491784E-4	DEFECT
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999018450874655	WITHOUT_CLASSIFICATION	9.815491253461997E-5	DEFECT
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9994953117565267	WITHOUT_CLASSIFICATION	5.046882434733092E-4	DEFECT
save the ungot	WITHOUT_CLASSIFICATION	0.9999275818677423	WITHOUT_CLASSIFICATION	7.241813225759947E-5	DEFECT
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999727506452145	WITHOUT_CLASSIFICATION	2.7249354785437648E-5	DEFECT
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9992556881480464	WITHOUT_CLASSIFICATION	7.443118519535569E-4	DEFECT
flush first	WITHOUT_CLASSIFICATION	0.9999660184971845	WITHOUT_CLASSIFICATION	3.39815028154809E-5	DEFECT
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9996840387044831	WITHOUT_CLASSIFICATION	3.159612955169474E-4	DEFECT
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.999909976729716	WITHOUT_CLASSIFICATION	9.002327028388895E-5	DEFECT
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999492469739776	WITHOUT_CLASSIFICATION	5.075302602237002E-5	DEFECT
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9997207802830773	WITHOUT_CLASSIFICATION	2.792197169226405E-4	DEFECT
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999852581138301	WITHOUT_CLASSIFICATION	1.4741886169819024E-5	DEFECT
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9634433591762386	WITHOUT_CLASSIFICATION	0.03655664082376136	DEFECT
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998197014882825	WITHOUT_CLASSIFICATION	1.802985117176453E-4	DEFECT
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9997951906663491	WITHOUT_CLASSIFICATION	2.0480933365072862E-4	DEFECT
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999294536204398	WITHOUT_CLASSIFICATION	7.054637956017136E-5	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999174550083636	WITHOUT_CLASSIFICATION	8.254499163639018E-5	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9208629176244781	WITHOUT_CLASSIFICATION	0.07913708237552186	DEFECT
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9997886498486138	WITHOUT_CLASSIFICATION	2.113501513862076E-4	DEFECT
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9997851094768954	WITHOUT_CLASSIFICATION	2.1489052310453245E-4	DEFECT
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999889331017878	WITHOUT_CLASSIFICATION	1.1066898212107445E-5	DEFECT
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999884055651711	WITHOUT_CLASSIFICATION	1.1594434828827592E-5	DEFECT
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9991903578782014	WITHOUT_CLASSIFICATION	8.096421217985847E-4	DEFECT
else leave it null	WITHOUT_CLASSIFICATION	0.9994423120567009	WITHOUT_CLASSIFICATION	5.576879432992024E-4	DEFECT
TypeMatcher	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9999485832147254	WITHOUT_CLASSIFICATION	5.141678527461516E-5	DEFECT
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998827472323035	WITHOUT_CLASSIFICATION	1.1725276769657198E-4	DEFECT
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9998520872713615	WITHOUT_CLASSIFICATION	1.4791272863857156E-4	DEFECT
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9998140467119737	WITHOUT_CLASSIFICATION	1.8595328802633332E-4	DEFECT
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9990618861967236	WITHOUT_CLASSIFICATION	9.381138032762598E-4	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9998377318032592	WITHOUT_CLASSIFICATION	1.622681967408385E-4	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9998377318032592	WITHOUT_CLASSIFICATION	1.622681967408385E-4	DEFECT
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999662576870798	WITHOUT_CLASSIFICATION	3.374231292013234E-5	DEFECT
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999296890881264	WITHOUT_CLASSIFICATION	7.031091187351651E-5	DEFECT
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9997885085322006	WITHOUT_CLASSIFICATION	2.1149146779931882E-4	DEFECT
Init	WITHOUT_CLASSIFICATION	0.9999625789086241	WITHOUT_CLASSIFICATION	3.7421091375982694E-5	DEFECT
Block	WITHOUT_CLASSIFICATION	0.9999627685533391	WITHOUT_CLASSIFICATION	3.7231446660836196E-5	DEFECT
Copy constructor	WITHOUT_CLASSIFICATION	0.9999467857110924	WITHOUT_CLASSIFICATION	5.32142889074854E-5	DEFECT
presumably this require should fail	WITHOUT_CLASSIFICATION	0.994895098092836	WITHOUT_CLASSIFICATION	0.005104901907163976	DEFECT
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.994895098092836	WITHOUT_CLASSIFICATION	0.005104901907163976	DEFECT
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9992402286371596	WITHOUT_CLASSIFICATION	7.597713628405216E-4	DEFECT
ok	WITHOUT_CLASSIFICATION	0.9999725971353385	WITHOUT_CLASSIFICATION	2.7402864661507734E-5	DEFECT
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.99960747618738	WITHOUT_CLASSIFICATION	3.925238126200287E-4	DEFECT
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9720673068357059	WITHOUT_CLASSIFICATION	0.027932693164294118	DEFECT
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999449358834355	WITHOUT_CLASSIFICATION	5.506411656459226E-5	DEFECT
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999393926910029	WITHOUT_CLASSIFICATION	6.060730899709954E-4	DEFECT
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999729056378348	WITHOUT_CLASSIFICATION	2.7094362165078284E-5	DEFECT
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999534714648087	WITHOUT_CLASSIFICATION	4.652853519132167E-5	DEFECT
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9989186289213337	WITHOUT_CLASSIFICATION	0.0010813710786663335	DEFECT
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999778807801748	WITHOUT_CLASSIFICATION	2.2119219825215497E-4	DEFECT
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9997589621105306	WITHOUT_CLASSIFICATION	2.4103788946931034E-4	DEFECT
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997622138069487	WITHOUT_CLASSIFICATION	2.3778619305134973E-4	DEFECT
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999193631460233	WITHOUT_CLASSIFICATION	8.063685397678702E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999616751061857	WITHOUT_CLASSIFICATION	3.8324893814261646E-5	DEFECT
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.999651318843507	WITHOUT_CLASSIFICATION	3.486811564930229E-4	DEFECT
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9996178465726727	WITHOUT_CLASSIFICATION	3.821534273273383E-4	DEFECT
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9973465887081592	WITHOUT_CLASSIFICATION	0.0026534112918407938	DEFECT
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999882370732455	WITHOUT_CLASSIFICATION	1.1762926754493129E-4	DEFECT
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997668004399718	WITHOUT_CLASSIFICATION	2.3319956002807623E-4	DEFECT
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
void methods should work	WITHOUT_CLASSIFICATION	0.9981801891818148	WITHOUT_CLASSIFICATION	0.0018198108181851876	DEFECT
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9983741848034576	WITHOUT_CLASSIFICATION	0.0016258151965423816	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999503952565933	WITHOUT_CLASSIFICATION	4.960474340669813E-5	DEFECT
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999603503837585	WITHOUT_CLASSIFICATION	3.9649616241555295E-5	DEFECT
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998741395838577	WITHOUT_CLASSIFICATION	1.2586041614223037E-4	DEFECT
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
int n = 10;	WITHOUT_CLASSIFICATION	0.9998780276091278	WITHOUT_CLASSIFICATION	1.2197239087223566E-4	DEFECT
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999196479154505	WITHOUT_CLASSIFICATION	8.03520845495261E-5	DEFECT
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999212903281378	WITHOUT_CLASSIFICATION	7.870967186223289E-5	DEFECT
value equality	WITHOUT_CLASSIFICATION	0.9998691141389334	WITHOUT_CLASSIFICATION	1.3088586106654252E-4	DEFECT
identity equality	WITHOUT_CLASSIFICATION	0.999890426399859	WITHOUT_CLASSIFICATION	1.0957360014097262E-4	DEFECT
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9997805428240663	WITHOUT_CLASSIFICATION	2.1945717593383615E-4	DEFECT
bench Integer fib	WITHOUT_CLASSIFICATION	0.9998584546411915	WITHOUT_CLASSIFICATION	1.4154535880852591E-4	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9997700857677093	WITHOUT_CLASSIFICATION	2.299142322905606E-4	DEFECT
bench Long fib	WITHOUT_CLASSIFICATION	0.9998591024191478	WITHOUT_CLASSIFICATION	1.4089758085215318E-4	DEFECT
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9996842484002143	WITHOUT_CLASSIFICATION	3.1575159978563573E-4	DEFECT
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9998625006938788	WITHOUT_CLASSIFICATION	1.3749930612117107E-4	DEFECT
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999485610592517	WITHOUT_CLASSIFICATION	5.143894074829871E-5	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9989770336832895	WITHOUT_CLASSIFICATION	0.0010229663167104729	DEFECT
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9991280241791193	WITHOUT_CLASSIFICATION	8.719758208808307E-4	DEFECT
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9998820992133566	WITHOUT_CLASSIFICATION	1.1790078664336223E-4	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999790631184986	WITHOUT_CLASSIFICATION	2.0936881501413266E-5	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9985477099557717	WITHOUT_CLASSIFICATION	0.0014522900442282462	DEFECT
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9990543124089034	WITHOUT_CLASSIFICATION	9.45687591096547E-4	DEFECT
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9995139560381644	WITHOUT_CLASSIFICATION	4.8604396183559643E-4	DEFECT
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.999647679280475	WITHOUT_CLASSIFICATION	3.5232071952491436E-4	DEFECT
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.994611075263812	WITHOUT_CLASSIFICATION	0.005388924736188087	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9998885833690742	WITHOUT_CLASSIFICATION	1.114166309258645E-4	DEFECT
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9998814422656374	WITHOUT_CLASSIFICATION	1.1855773436264986E-4	DEFECT
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9637570976081535	WITHOUT_CLASSIFICATION	0.0362429023918465	DEFECT
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999563033099007	WITHOUT_CLASSIFICATION	4.369669009926081E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998072044758469	WITHOUT_CLASSIFICATION	1.927955241531304E-4	DEFECT
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999966945836126	WITHOUT_CLASSIFICATION	3.305416387389794E-6	DEFECT
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999723390223794	WITHOUT_CLASSIFICATION	2.7660977620630763E-5	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999830211365628	WITHOUT_CLASSIFICATION	1.6978863437188855E-4	DEFECT
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999891996719258	WITHOUT_CLASSIFICATION	1.0800328074137049E-5	DEFECT
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999392576128825	WITHOUT_CLASSIFICATION	6.074238711762665E-5	DEFECT
construct the proxy method	WITHOUT_CLASSIFICATION	0.9999825794648773	WITHOUT_CLASSIFICATION	1.7420535122631725E-5	DEFECT
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998197444004362	WITHOUT_CLASSIFICATION	1.8025559956372691E-4	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9998609092725839	WITHOUT_CLASSIFICATION	1.3909072741608727E-4	DEFECT
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998197444004362	WITHOUT_CLASSIFICATION	1.8025559956372691E-4	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999341632344377	WITHOUT_CLASSIFICATION	6.583676556234477E-5	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9998609092725839	WITHOUT_CLASSIFICATION	1.3909072741608727E-4	DEFECT
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999842089976297	WITHOUT_CLASSIFICATION	1.5791002370256462E-5	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9997376927238976	WITHOUT_CLASSIFICATION	2.6230727610251074E-4	DEFECT
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9689157066227057	WITHOUT_CLASSIFICATION	0.031084293377294334	DEFECT
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9472933044759685	WITHOUT_CLASSIFICATION	0.05270669552403148	DEFECT
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999900634118187	WITHOUT_CLASSIFICATION	9.936588181310009E-6	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9933404739132136	WITHOUT_CLASSIFICATION	0.006659526086786512	DEFECT
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9998223252995957	WITHOUT_CLASSIFICATION	1.7767470040424644E-4	DEFECT
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.99996814109678	WITHOUT_CLASSIFICATION	3.185890321990067E-5	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9986220742542544	WITHOUT_CLASSIFICATION	0.0013779257457455204	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999174550083636	WITHOUT_CLASSIFICATION	8.254499163639018E-5	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999259520366984	WITHOUT_CLASSIFICATION	7.404796330155332E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9844515683135291	WITHOUT_CLASSIFICATION	0.015548431686470897	DEFECT
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999350960031816	WITHOUT_CLASSIFICATION	6.49039968183357E-5	DEFECT
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999807859015424	WITHOUT_CLASSIFICATION	1.92140984576266E-5	DEFECT
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9996648390738823	WITHOUT_CLASSIFICATION	3.3516092611772416E-4	DEFECT
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9937945441087327	WITHOUT_CLASSIFICATION	0.006205455891267225	DEFECT
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.999755615546373	WITHOUT_CLASSIFICATION	2.443844536270069E-4	DEFECT
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9947092646587331	WITHOUT_CLASSIFICATION	0.005290735341266796	DEFECT
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9986325755729224	WITHOUT_CLASSIFICATION	0.0013674244270776045	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999719433626483	WITHOUT_CLASSIFICATION	2.80566373517734E-5	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999933807799454	WITHOUT_CLASSIFICATION	6.619220054599709E-6	DEFECT
constructor	WITHOUT_CLASSIFICATION	0.9999448644178697	WITHOUT_CLASSIFICATION	5.513558213033933E-5	DEFECT
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9984328361562868	WITHOUT_CLASSIFICATION	0.0015671638437131992	DEFECT
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999943346494106	WITHOUT_CLASSIFICATION	5.665350589405761E-6	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9930004773520558	WITHOUT_CLASSIFICATION	0.006999522647944242	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999929603173244	WITHOUT_CLASSIFICATION	7.039682675468433E-6	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999709805744366	WITHOUT_CLASSIFICATION	2.901942556340384E-4	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999709805744366	WITHOUT_CLASSIFICATION	2.901942556340384E-4	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9997777352901587	WITHOUT_CLASSIFICATION	2.222647098412118E-4	DEFECT
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9998445721175944	WITHOUT_CLASSIFICATION	1.5542788240573385E-4	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9995987936456545	WITHOUT_CLASSIFICATION	4.012063543454953E-4	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9997489760883651	WITHOUT_CLASSIFICATION	2.510239116349627E-4	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999164309721852	WITHOUT_CLASSIFICATION	8.356902781486669E-5	DEFECT
"else" body	WITHOUT_CLASSIFICATION	0.9998933582196933	WITHOUT_CLASSIFICATION	1.0664178030664463E-4	DEFECT
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.995832455440719	WITHOUT_CLASSIFICATION	0.004167544559281071	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999834912124165	WITHOUT_CLASSIFICATION	1.6508787583485037E-5	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9998712903933397	WITHOUT_CLASSIFICATION	1.2870960666034136E-4	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.9998712903933397	WITHOUT_CLASSIFICATION	1.2870960666034136E-4	DEFECT
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999119660908805	WITHOUT_CLASSIFICATION	8.803390911955529E-5	DEFECT
10!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999691437202655	WITHOUT_CLASSIFICATION	3.0856279734571726E-5	DEFECT
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9513815214365279	WITHOUT_CLASSIFICATION	0.04861847856347205	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999459835971921	WITHOUT_CLASSIFICATION	5.40164028078554E-5	DEFECT
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998842846104826	WITHOUT_CLASSIFICATION	1.1571538951739906E-4	DEFECT
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9996975492953782	WITHOUT_CLASSIFICATION	3.024507046218252E-4	DEFECT
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998031119987224	WITHOUT_CLASSIFICATION	1.9688800127768522E-4	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999341632344377	WITHOUT_CLASSIFICATION	6.583676556234477E-5	DEFECT
line 449	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 495	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
Management/monitoring	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999979709337429	WITHOUT_CLASSIFICATION	2.029066257094276E-5	DEFECT
14!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.999942370943319	WITHOUT_CLASSIFICATION	5.76290566809853E-5	DEFECT
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999470222155715	WITHOUT_CLASSIFICATION	5.2977784428556193E-5	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9998372306639542	WITHOUT_CLASSIFICATION	1.6276933604574315E-4	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9998372306639542	WITHOUT_CLASSIFICATION	1.6276933604574315E-4	DEFECT
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999691437202655	WITHOUT_CLASSIFICATION	3.0856279734571726E-5	DEFECT
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999794715756725	WITHOUT_CLASSIFICATION	2.0528424327522264E-5	DEFECT
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9948952243385946	WITHOUT_CLASSIFICATION	0.005104775661405408	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9998888423358753	WITHOUT_CLASSIFICATION	1.1115766412480866E-4	DEFECT
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999163138016635	WITHOUT_CLASSIFICATION	8.3686198336441E-5	DEFECT
18!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9989434166556899	WITHOUT_CLASSIFICATION	0.001056583344310125	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998695662492773	WITHOUT_CLASSIFICATION	1.3043375072261995E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998695662492773	WITHOUT_CLASSIFICATION	1.3043375072261995E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998695662492773	WITHOUT_CLASSIFICATION	1.3043375072261995E-4	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998695662492773	WITHOUT_CLASSIFICATION	1.3043375072261995E-4	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9996639669848685	WITHOUT_CLASSIFICATION	3.360330151314732E-4	DEFECT
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9981735761090876	WITHOUT_CLASSIFICATION	0.0018264238909123942	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999599520902701	WITHOUT_CLASSIFICATION	4.00479097299083E-4	DEFECT
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9997136984297487	WITHOUT_CLASSIFICATION	2.8630157025134276E-4	DEFECT
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999827253283672	WITHOUT_CLASSIFICATION	1.7274671632785724E-5	DEFECT
22!	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9998687825275258	WITHOUT_CLASSIFICATION	1.3121747247424887E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998157786950124	WITHOUT_CLASSIFICATION	1.842213049877074E-4	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998223456178201	WITHOUT_CLASSIFICATION	1.7765438217999294E-4	DEFECT
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9995600395829823	WITHOUT_CLASSIFICATION	4.3996041701757643E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999642302176709	WITHOUT_CLASSIFICATION	3.576978232904257E-5	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999642302176709	WITHOUT_CLASSIFICATION	3.576978232904257E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9993444241509439	WITHOUT_CLASSIFICATION	6.555758490561308E-4	DEFECT
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999776225213356	WITHOUT_CLASSIFICATION	2.2377478664398563E-5	DEFECT
BASE64	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999918103088221	WITHOUT_CLASSIFICATION	8.189691177932597E-6	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999420783081121	WITHOUT_CLASSIFICATION	5.792169188798605E-5	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9993009100913061	WITHOUT_CLASSIFICATION	6.990899086939033E-4	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9993009100913061	WITHOUT_CLASSIFICATION	6.990899086939033E-4	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999148205928065	WITHOUT_CLASSIFICATION	8.517940719347411E-5	DEFECT
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999976700484429	WITHOUT_CLASSIFICATION	2.329951557216028E-6	DEFECT
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9830415872285214	WITHOUT_CLASSIFICATION	0.016958412771478606	DEFECT
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997697190441268	WITHOUT_CLASSIFICATION	2.3028095587320955E-4	DEFECT
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999391357673144	WITHOUT_CLASSIFICATION	6.086423268551209E-5	DEFECT
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999234592001384	WITHOUT_CLASSIFICATION	7.654079986162016E-5	DEFECT
carriage return	WITHOUT_CLASSIFICATION	0.9999486651493287	WITHOUT_CLASSIFICATION	5.133485067134326E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9945900720007381	WITHOUT_CLASSIFICATION	0.005409927999261858	DEFECT
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999752907851989	WITHOUT_CLASSIFICATION	2.470921480103891E-5	DEFECT
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.999866863302521	WITHOUT_CLASSIFICATION	1.3313669747899986E-4	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999330175667149	WITHOUT_CLASSIFICATION	6.69824332851213E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9988036037367036	WITHOUT_CLASSIFICATION	0.0011963962632964235	DEFECT
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999565221336238	WITHOUT_CLASSIFICATION	4.347786637620867E-5	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999995912024615	WITHOUT_CLASSIFICATION	4.087975384132814E-7	DEFECT
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999718065093215	WITHOUT_CLASSIFICATION	2.8193490678513838E-5	DEFECT
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999635138081487	WITHOUT_CLASSIFICATION	3.648619185122699E-5	DEFECT
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999478983381687	WITHOUT_CLASSIFICATION	5.2101661831243436E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998940113868598	WITHOUT_CLASSIFICATION	1.0598861314018877E-4	DEFECT
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9997058438705402	WITHOUT_CLASSIFICATION	2.9415612945987203E-4	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999918087779502	WITHOUT_CLASSIFICATION	8.191222049792604E-6	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9997825156915786	WITHOUT_CLASSIFICATION	2.1748430842149325E-4	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999067959029095	WITHOUT_CLASSIFICATION	9.320409709046666E-5	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999063283896288	WITHOUT_CLASSIFICATION	9.367161037120618E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999255402687268	WITHOUT_CLASSIFICATION	7.44597312732522E-5	DEFECT
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9993732231577196	WITHOUT_CLASSIFICATION	6.267768422803306E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9969569334741883	WITHOUT_CLASSIFICATION	0.0030430665258117636	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9989770336832895	WITHOUT_CLASSIFICATION	0.0010229663167104729	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9989770336832895	WITHOUT_CLASSIFICATION	0.0010229663167104729	DEFECT
store argument count information into scope	WITHOUT_CLASSIFICATION	0.999235733926878	WITHOUT_CLASSIFICATION	7.642660731219487E-4	DEFECT
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999878567089979	WITHOUT_CLASSIFICATION	1.2143291002023309E-5	DEFECT
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9996372246282323	WITHOUT_CLASSIFICATION	3.627753717675465E-4	DEFECT
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9995949895147492	WITHOUT_CLASSIFICATION	4.050104852506956E-4	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999096442254056	WITHOUT_CLASSIFICATION	9.035577459432703E-5	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9997974329600254	WITHOUT_CLASSIFICATION	2.0256703997464256E-4	DEFECT
read	WITHOUT_CLASSIFICATION	0.9999707439430731	WITHOUT_CLASSIFICATION	2.9256056926888675E-5	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9646663286897099	WITHOUT_CLASSIFICATION	0.03533367131029012	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997699699404159	WITHOUT_CLASSIFICATION	2.300300595840899E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9996950226382889	WITHOUT_CLASSIFICATION	3.049773617110948E-4	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9988517541959508	WITHOUT_CLASSIFICATION	0.0011482458040491706	DEFECT
at end	WITHOUT_CLASSIFICATION	0.99990710259893	WITHOUT_CLASSIFICATION	9.289740107005321E-5	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999473352492959	WITHOUT_CLASSIFICATION	5.2664750704006244E-5	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999613384406161	WITHOUT_CLASSIFICATION	3.866155938395043E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999626481746373	WITHOUT_CLASSIFICATION	3.7351825362758636E-5	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999062937943997	WITHOUT_CLASSIFICATION	9.370620560035323E-5	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999775991589188	WITHOUT_CLASSIFICATION	2.2400841081207413E-5	DEFECT
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9997048541863428	WITHOUT_CLASSIFICATION	2.9514581365723417E-4	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9983548147029201	WITHOUT_CLASSIFICATION	0.0016451852970799958	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9983548147029201	WITHOUT_CLASSIFICATION	0.0016451852970799958	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999577581527076	WITHOUT_CLASSIFICATION	4.224184729250441E-5	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9965735070776977	WITHOUT_CLASSIFICATION	0.003426492922302433	DEFECT
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9956562270210643	WITHOUT_CLASSIFICATION	0.004343772978935766	DEFECT
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998023386050617	WITHOUT_CLASSIFICATION	1.976613949381805E-4	DEFECT
block given	WITHOUT_CLASSIFICATION	0.999985456296351	WITHOUT_CLASSIFICATION	1.4543703649032488E-5	DEFECT
block given	WITHOUT_CLASSIFICATION	0.999985456296351	WITHOUT_CLASSIFICATION	1.4543703649032488E-5	DEFECT
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9998784604192139	WITHOUT_CLASSIFICATION	1.215395807862127E-4	DEFECT
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9986742453078549	WITHOUT_CLASSIFICATION	0.0013257546921450843	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999475616364794	WITHOUT_CLASSIFICATION	5.243836352060833E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999626451064809	WITHOUT_CLASSIFICATION	3.735489351904099E-5	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.999915862585973	WITHOUT_CLASSIFICATION	8.41374140270954E-5	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9998952701151967	WITHOUT_CLASSIFICATION	1.047298848031458E-4	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9998952701151967	WITHOUT_CLASSIFICATION	1.047298848031458E-4	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999717223779723	WITHOUT_CLASSIFICATION	2.8277622027722652E-5	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999717223779723	WITHOUT_CLASSIFICATION	2.8277622027722652E-5	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9997240670774028	WITHOUT_CLASSIFICATION	2.759329225971409E-4	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999881804378286	WITHOUT_CLASSIFICATION	1.181956217140847E-4	DEFECT
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999060742137865	WITHOUT_CLASSIFICATION	9.392578621342445E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9996987617178907	WITHOUT_CLASSIFICATION	3.0123828210927014E-4	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999684641520795	WITHOUT_CLASSIFICATION	3.153584792045977E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999906614155359	WITHOUT_CLASSIFICATION	9.338584464056045E-6	DEFECT
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999523607269665	WITHOUT_CLASSIFICATION	4.763927303351161E-5	DEFECT
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.998790479333353	WITHOUT_CLASSIFICATION	0.0012095206666470648	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9966580683554087	WITHOUT_CLASSIFICATION	0.003341931644591332	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.999984086723333	WITHOUT_CLASSIFICATION	1.5913276667002535E-5	DEFECT
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998261712186884	WITHOUT_CLASSIFICATION	1.7382878131144797E-4	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9988742249714687	WITHOUT_CLASSIFICATION	0.0011257750285312874	DEFECT
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999867728657389	WITHOUT_CLASSIFICATION	1.3227134261186593E-5	DEFECT
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9998273911684876	WITHOUT_CLASSIFICATION	1.7260883151244143E-4	DEFECT
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9994334859332162	WITHOUT_CLASSIFICATION	5.665140667836819E-4	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999260861269878	WITHOUT_CLASSIFICATION	7.391387301221079E-4	DEFECT
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9997333486281597	WITHOUT_CLASSIFICATION	2.666513718403709E-4	DEFECT
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999241213482724	WITHOUT_CLASSIFICATION	7.587865172760815E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9844515683135291	WITHOUT_CLASSIFICATION	0.015548431686470897	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999669159210159	WITHOUT_CLASSIFICATION	3.308407898398214E-5	DEFECT
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999787245584945	WITHOUT_CLASSIFICATION	2.1275441505597488E-5	DEFECT
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999420276642204	WITHOUT_CLASSIFICATION	5.797233577977606E-5	DEFECT
coerce arguments	WITHOUT_CLASSIFICATION	0.9998757019786297	WITHOUT_CLASSIFICATION	1.2429802137036138E-4	DEFECT
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9997539225130193	WITHOUT_CLASSIFICATION	2.460774869807664E-4	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999719433626483	WITHOUT_CLASSIFICATION	2.80566373517734E-5	DEFECT
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999296115973103	WITHOUT_CLASSIFICATION	7.038840268960369E-5	DEFECT
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9998203892972187	WITHOUT_CLASSIFICATION	1.796107027811802E-4	DEFECT
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9980893062022497	WITHOUT_CLASSIFICATION	0.0019106937977502977	DEFECT
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9997819392308819	WITHOUT_CLASSIFICATION	2.180607691180125E-4	DEFECT
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9995961741828149	WITHOUT_CLASSIFICATION	4.038258171852137E-4	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9998486084718237	WITHOUT_CLASSIFICATION	1.513915281763169E-4	DEFECT
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9996422074823358	WITHOUT_CLASSIFICATION	3.577925176642504E-4	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9990849796549008	WITHOUT_CLASSIFICATION	9.15020345099126E-4	DEFECT
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9963337019669012	WITHOUT_CLASSIFICATION	0.0036662980330987196	DEFECT
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999462418941927	WITHOUT_CLASSIFICATION	5.3758105807244594E-5	DEFECT
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9996318965029886	WITHOUT_CLASSIFICATION	3.681034970115053E-4	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999739718834966	WITHOUT_CLASSIFICATION	2.6028116503397267E-5	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9027337605860118	WITHOUT_CLASSIFICATION	0.09726623941398821	DEFECT
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9996575088134461	WITHOUT_CLASSIFICATION	3.4249118655392373E-4	DEFECT
finally	WITHOUT_CLASSIFICATION	0.9999647911734164	WITHOUT_CLASSIFICATION	3.520882658362603E-5	DEFECT
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999498803193989	WITHOUT_CLASSIFICATION	5.011968060111884E-5	DEFECT
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9998541016014503	WITHOUT_CLASSIFICATION	1.4589839854973718E-4	DEFECT
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9551413616201478	WITHOUT_CLASSIFICATION	0.044858638379852024	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9994661232046305	WITHOUT_CLASSIFICATION	5.338767953695009E-4	DEFECT
specific arity	WITHOUT_CLASSIFICATION	0.999882770081725	WITHOUT_CLASSIFICATION	1.1722991827510298E-4	DEFECT
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9997764394057713	WITHOUT_CLASSIFICATION	2.2356059422855604E-4	DEFECT
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9998350110514069	WITHOUT_CLASSIFICATION	1.6498894859296156E-4	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999805662482543	WITHOUT_CLASSIFICATION	1.943375174573368E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999504117144593	WITHOUT_CLASSIFICATION	4.958828554077228E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999504117144593	WITHOUT_CLASSIFICATION	4.958828554077228E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999968155998864	WITHOUT_CLASSIFICATION	3.18440011359431E-5	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999968155998864	WITHOUT_CLASSIFICATION	3.18440011359431E-5	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998491162651165	WITHOUT_CLASSIFICATION	1.5088373488352384E-4	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998491162651165	WITHOUT_CLASSIFICATION	1.5088373488352384E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997686082778668	WITHOUT_CLASSIFICATION	2.3139172213325674E-4	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997686082778668	WITHOUT_CLASSIFICATION	2.3139172213325674E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9992116636963077	WITHOUT_CLASSIFICATION	7.883363036924346E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9992116636963077	WITHOUT_CLASSIFICATION	7.883363036924346E-4	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9992116636963077	WITHOUT_CLASSIFICATION	7.883363036924346E-4	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999269279035009	WITHOUT_CLASSIFICATION	7.307209649912757E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9998434473293719	WITHOUT_CLASSIFICATION	1.565526706280115E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998227361285397	WITHOUT_CLASSIFICATION	1.772638714602571E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998227361285397	WITHOUT_CLASSIFICATION	1.772638714602571E-4	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998227361285397	WITHOUT_CLASSIFICATION	1.772638714602571E-4	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998687844169449	WITHOUT_CLASSIFICATION	1.3121558305508426E-4	DEFECT
backspace	WITHOUT_CLASSIFICATION	0.9999629174533261	WITHOUT_CLASSIFICATION	3.708254667397827E-5	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
package-private	WITHOUT_CLASSIFICATION	0.9998668133405894	WITHOUT_CLASSIFICATION	1.331866594106228E-4	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999255402687268	WITHOUT_CLASSIFICATION	7.44597312732522E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999255402687268	WITHOUT_CLASSIFICATION	7.44597312732522E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9997456115068638	WITHOUT_CLASSIFICATION	2.5438849313622584E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998978569008635	WITHOUT_CLASSIFICATION	1.0214309913637102E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998978569008635	WITHOUT_CLASSIFICATION	1.0214309913637102E-4	DEFECT
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.6519115889745694	WITHOUT_CLASSIFICATION	0.3480884110254307	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9992403661564001	WITHOUT_CLASSIFICATION	7.596338435998329E-4	DEFECT
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9997453816280937	WITHOUT_CLASSIFICATION	2.5461837190637605E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9898222374557992	WITHOUT_CLASSIFICATION	0.010177762544200854	DEFECT
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999333551614207	WITHOUT_CLASSIFICATION	6.664483857932586E-5	DEFECT
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999874965204976	WITHOUT_CLASSIFICATION	1.2503479502336024E-5	DEFECT
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9999877050214716	WITHOUT_CLASSIFICATION	1.229497852844138E-5	DEFECT
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9988525770920454	WITHOUT_CLASSIFICATION	0.0011474229079545754	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999882998481312	WITHOUT_CLASSIFICATION	1.1700151868799524E-4	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999808066403194	WITHOUT_CLASSIFICATION	1.9193359680601096E-5	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999777857258622	WITHOUT_CLASSIFICATION	2.2214274137810036E-4	DEFECT
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9901494943172299	WITHOUT_CLASSIFICATION	0.009850505682770178	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998245459824618	WITHOUT_CLASSIFICATION	1.7545401753821843E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9998166612311116	WITHOUT_CLASSIFICATION	1.8333876888845555E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9982066125521772	WITHOUT_CLASSIFICATION	0.0017933874478227754	DEFECT
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7853132886486844	WITHOUT_CLASSIFICATION	0.2146867113513156	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.981459665315562	WITHOUT_CLASSIFICATION	0.018540334684438147	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999843686248165	WITHOUT_CLASSIFICATION	1.563137518341802E-5	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999718653452025	WITHOUT_CLASSIFICATION	2.813465479752793E-5	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999077199991593	WITHOUT_CLASSIFICATION	9.228000084068359E-5	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9998072044758469	WITHOUT_CLASSIFICATION	1.927955241531304E-4	DEFECT
only public methods	WITHOUT_CLASSIFICATION	0.9999427160366756	WITHOUT_CLASSIFICATION	5.7283963324318366E-5	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998872545491779	WITHOUT_CLASSIFICATION	1.1274545082200144E-4	DEFECT
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9979257884800868	WITHOUT_CLASSIFICATION	0.0020742115199132182	DEFECT
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9938490367973759	WITHOUT_CLASSIFICATION	0.006150963202624074	DEFECT
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9996754145400765	WITHOUT_CLASSIFICATION	3.245854599235112E-4	DEFECT
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999921503154015	WITHOUT_CLASSIFICATION	7.849684598595634E-6	DEFECT
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999104597155921	WITHOUT_CLASSIFICATION	8.954028440790882E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.999944815576564	WITHOUT_CLASSIFICATION	5.5184423436033285E-5	DEFECT
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9998017473241723	WITHOUT_CLASSIFICATION	1.9825267582776574E-4	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9998142043183971	WITHOUT_CLASSIFICATION	1.8579568160303475E-4	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999790631184986	WITHOUT_CLASSIFICATION	2.0936881501413266E-5	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998288070755198	WITHOUT_CLASSIFICATION	1.7119292448016337E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998288070755198	WITHOUT_CLASSIFICATION	1.7119292448016337E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998288070755198	WITHOUT_CLASSIFICATION	1.7119292448016337E-4	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998288070755198	WITHOUT_CLASSIFICATION	1.7119292448016337E-4	DEFECT
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999958557586297	WITHOUT_CLASSIFICATION	4.144241370304008E-6	DEFECT
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9816165358488097	WITHOUT_CLASSIFICATION	0.018383464151190312	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9996888718728945	WITHOUT_CLASSIFICATION	3.1112812710563427E-4	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9996888718728945	WITHOUT_CLASSIFICATION	3.1112812710563427E-4	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9997635975347401	WITHOUT_CLASSIFICATION	2.364024652600187E-4	DEFECT
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999006489965924	WITHOUT_CLASSIFICATION	9.935100340765513E-5	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9991248132386469	WITHOUT_CLASSIFICATION	8.751867613531855E-4	DEFECT
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999759245752363	WITHOUT_CLASSIFICATION	2.4075424763606452E-5	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9954789528641802	WITHOUT_CLASSIFICATION	0.004521047135819848	DEFECT
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9818350576197543	WITHOUT_CLASSIFICATION	0.018164942380245706	DEFECT
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9996130802795186	WITHOUT_CLASSIFICATION	3.8691972048151245E-4	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.99998973734561	WITHOUT_CLASSIFICATION	1.026265438998295E-5	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.99998973734561	WITHOUT_CLASSIFICATION	1.026265438998295E-5	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.99998973734561	WITHOUT_CLASSIFICATION	1.026265438998295E-5	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.99998973734561	WITHOUT_CLASSIFICATION	1.026265438998295E-5	DEFECT
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999943772302048	WITHOUT_CLASSIFICATION	5.6227697951632525E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980450137366845	WITHOUT_CLASSIFICATION	0.0019549862633154885	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980450137366845	WITHOUT_CLASSIFICATION	0.0019549862633154885	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9980450137366845	WITHOUT_CLASSIFICATION	0.0019549862633154885	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9989734837227408	WITHOUT_CLASSIFICATION	0.0010265162772592916	DEFECT
finally with no exception	WITHOUT_CLASSIFICATION	0.9998817220107564	WITHOUT_CLASSIFICATION	1.182779892436323E-4	DEFECT
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999827092763224	WITHOUT_CLASSIFICATION	1.7290723677642583E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9946552216189289	WITHOUT_CLASSIFICATION	0.005344778381071	DEFECT
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999433865366488	WITHOUT_CLASSIFICATION	5.661346335129237E-5	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9961989118267426	WITHOUT_CLASSIFICATION	0.0038010881732574945	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9961989118267426	WITHOUT_CLASSIFICATION	0.0038010881732574945	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9991123977254831	WITHOUT_CLASSIFICATION	8.876022745168142E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9991123977254831	WITHOUT_CLASSIFICATION	8.876022745168142E-4	DEFECT
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999901554612602	WITHOUT_CLASSIFICATION	9.844538739715981E-6	DEFECT
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999963111502254	WITHOUT_CLASSIFICATION	3.6888497746352756E-6	DEFECT
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9997804738440441	WITHOUT_CLASSIFICATION	2.1952615595595242E-4	DEFECT
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9901907041613199	WITHOUT_CLASSIFICATION	0.009809295838680033	DEFECT
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9998742257191208	WITHOUT_CLASSIFICATION	1.257742808791897E-4	DEFECT
create the default thread group	WITHOUT_CLASSIFICATION	0.9999911010064072	WITHOUT_CLASSIFICATION	8.898993592826211E-6	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998046196449091	WITHOUT_CLASSIFICATION	1.9538035509090494E-4	DEFECT
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9993350731141825	WITHOUT_CLASSIFICATION	6.649268858176013E-4	DEFECT
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.997383889339343	WITHOUT_CLASSIFICATION	0.0026161106606569303	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999483445736965	WITHOUT_CLASSIFICATION	5.165542630344977E-5	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999483445736965	WITHOUT_CLASSIFICATION	5.165542630344977E-5	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998491186092366	WITHOUT_CLASSIFICATION	1.5088139076335316E-4	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998491186092366	WITHOUT_CLASSIFICATION	1.5088139076335316E-4	DEFECT
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.996991042794721	WITHOUT_CLASSIFICATION	0.0030089572052791136	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9990980821531518	WITHOUT_CLASSIFICATION	9.019178468482326E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998792480318721	WITHOUT_CLASSIFICATION	1.2075196812797823E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998792480318721	WITHOUT_CLASSIFICATION	1.2075196812797823E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998792480318721	WITHOUT_CLASSIFICATION	1.2075196812797823E-4	DEFECT
line 286	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 476	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 513	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 530	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 533	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 551	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
end loop	WITHOUT_CLASSIFICATION	0.9999715990560227	WITHOUT_CLASSIFICATION	2.8400943977371445E-5	DEFECT
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9995792682532638	WITHOUT_CLASSIFICATION	4.207317467362088E-4	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9988446383001278	WITHOUT_CLASSIFICATION	0.0011553616998722241	DEFECT
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9995103193139948	WITHOUT_CLASSIFICATION	4.896806860051592E-4	DEFECT
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.978621637711557	WITHOUT_CLASSIFICATION	0.021378362288443038	DEFECT
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999674420336769	WITHOUT_CLASSIFICATION	3.25579663229641E-5	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9583153184148753	WITHOUT_CLASSIFICATION	0.04168468158512466	DEFECT
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9996939266918736	WITHOUT_CLASSIFICATION	3.0607330812635144E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9982602066509038	WITHOUT_CLASSIFICATION	0.0017397933490961959	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999709805744366	WITHOUT_CLASSIFICATION	2.901942556340384E-4	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999625284736662	WITHOUT_CLASSIFICATION	3.747152633369263E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.9999633869543358	WITHOUT_CLASSIFICATION	3.661304566404483E-5	DEFECT
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9999562845910476	WITHOUT_CLASSIFICATION	4.3715408952372655E-5	DEFECT
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9993503521784186	WITHOUT_CLASSIFICATION	6.496478215814839E-4	DEFECT
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9511796326594314	WITHOUT_CLASSIFICATION	0.04882036734056872	DEFECT
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9994823254654452	WITHOUT_CLASSIFICATION	5.176745345547697E-4	DEFECT
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9993361178161061	WITHOUT_CLASSIFICATION	6.638821838939388E-4	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999772261982949	WITHOUT_CLASSIFICATION	2.2773801705151186E-5	DEFECT
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999419696297287	WITHOUT_CLASSIFICATION	5.803037027144626E-5	DEFECT
line 572	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 625	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 649	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 723	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 745	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 766	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 800	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 812	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 827	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 864	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 886	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 911	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 929	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 952	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 970	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 991	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1011	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1026	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1067	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1085	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1145	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1169	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1201	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1229	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1287	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1293	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1307	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1325	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1363	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1398	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1473	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1492	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1523	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1562	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1582	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1620	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1635	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1652	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1681	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1755	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1789	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998579283044003	WITHOUT_CLASSIFICATION	1.4207169559959828E-4	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9998487149689872	WITHOUT_CLASSIFICATION	1.5128503101282528E-4	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9944127888063443	WITHOUT_CLASSIFICATION	0.005587211193655712	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9998829816389622	WITHOUT_CLASSIFICATION	1.1701836103784706E-4	DEFECT
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999441280833018	WITHOUT_CLASSIFICATION	5.587191669823272E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999494033108737	WITHOUT_CLASSIFICATION	5.0596689126282874E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999494033108737	WITHOUT_CLASSIFICATION	5.0596689126282874E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999494033108737	WITHOUT_CLASSIFICATION	5.0596689126282874E-5	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999494033108737	WITHOUT_CLASSIFICATION	5.0596689126282874E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9868965985755889	WITHOUT_CLASSIFICATION	0.013103401424411187	DEFECT
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.6053598870596026	WITHOUT_CLASSIFICATION	0.39464011294039725	DEFECT
line 313	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 339	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 361	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 413	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 451	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 472	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 500	WITHOUT_CLASSIFICATION	0.999703813928522	WITHOUT_CLASSIFICATION	2.96186071477976E-4	DEFECT
line 515	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 555	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 582	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 619	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 636	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 669	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 703	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 776	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 814	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 823	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 854	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 872	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 905	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 925	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 958	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 992	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1047	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1072	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1081	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1108	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1136	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1168	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1192	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1241	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1267	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1286	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1301	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1314	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1333	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1362	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1395	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1420	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1439	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1476	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1535	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1588	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1618	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1643	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1669	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1728	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1753	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1779	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1794	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1812	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1837	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1895	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1925	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1950	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 1992	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
line 2014	WITHOUT_CLASSIFICATION	0.9998900148536893	WITHOUT_CLASSIFICATION	1.099851463106367E-4	DEFECT
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999516878960561	WITHOUT_CLASSIFICATION	4.8312103943908545E-4	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9990363890427995	WITHOUT_CLASSIFICATION	9.636109572006657E-4	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984021685514676	WITHOUT_CLASSIFICATION	0.00159783144853251	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9947708707497002	WITHOUT_CLASSIFICATION	0.005229129250299877	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9947708707497002	WITHOUT_CLASSIFICATION	0.005229129250299877	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9947708707497002	WITHOUT_CLASSIFICATION	0.005229129250299877	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9947708707497002	WITHOUT_CLASSIFICATION	0.005229129250299877	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9977287348294921	WITHOUT_CLASSIFICATION	0.00227126517050803	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9977287348294921	WITHOUT_CLASSIFICATION	0.00227126517050803	DEFECT
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.8494627480228509	DEFECT	0.15053725197714907	WITHOUT_CLASSIFICATION
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998541790873156	WITHOUT_CLASSIFICATION	1.4582091268448933E-4	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998541790873156	WITHOUT_CLASSIFICATION	1.4582091268448933E-4	DEFECT
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9999413504776207	WITHOUT_CLASSIFICATION	5.8649522379390585E-5	DEFECT
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998758252541028	WITHOUT_CLASSIFICATION	1.2417474589715888E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999798764493777	WITHOUT_CLASSIFICATION	2.012355062230381E-4	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999479676939422	WITHOUT_CLASSIFICATION	5.203230605779957E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999479676939422	WITHOUT_CLASSIFICATION	5.203230605779957E-5	DEFECT
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999686948569249	WITHOUT_CLASSIFICATION	3.130514307518719E-5	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9995379521300457	WITHOUT_CLASSIFICATION	4.620478699543649E-4	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9995379521300457	WITHOUT_CLASSIFICATION	4.620478699543649E-4	DEFECT
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9876778340207658	WITHOUT_CLASSIFICATION	0.012322165979234245	DEFECT
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9762257127034257	WITHOUT_CLASSIFICATION	0.023774287296574215	DEFECT
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9994050055854676	WITHOUT_CLASSIFICATION	5.949944145323682E-4	DEFECT
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999340348813972	WITHOUT_CLASSIFICATION	6.596511860276128E-5	DEFECT
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9998854811139479	WITHOUT_CLASSIFICATION	1.1451888605205329E-4	DEFECT
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998515078465486	WITHOUT_CLASSIFICATION	1.48492153451306E-4	DEFECT
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999125421994487	WITHOUT_CLASSIFICATION	8.74578005513055E-5	DEFECT
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999435273491091	WITHOUT_CLASSIFICATION	5.647265089088972E-5	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999416570775007	WITHOUT_CLASSIFICATION	5.83429224991505E-5	DEFECT
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9985303265288911	WITHOUT_CLASSIFICATION	0.0014696734711089265	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9986393149350677	WITHOUT_CLASSIFICATION	0.0013606850649322203	DEFECT
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9968099514894815	WITHOUT_CLASSIFICATION	0.00319004851051845	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9998326294281333	WITHOUT_CLASSIFICATION	1.6737057186665057E-4	DEFECT
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9325820621736355	WITHOUT_CLASSIFICATION	0.06741793782636453	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9998905115188552	WITHOUT_CLASSIFICATION	1.0948848114473013E-4	DEFECT
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998842247236227	WITHOUT_CLASSIFICATION	1.1577527637731578E-4	DEFECT
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9988958720867682	WITHOUT_CLASSIFICATION	0.001104127913231808	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9971497172977986	WITHOUT_CLASSIFICATION	0.0028502827022014684	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999384838961585	WITHOUT_CLASSIFICATION	6.151610384154892E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999384838961585	WITHOUT_CLASSIFICATION	6.151610384154892E-5	DEFECT
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9996135932537743	WITHOUT_CLASSIFICATION	3.8640674622573767E-4	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9997051705055977	WITHOUT_CLASSIFICATION	2.948294944022723E-4	DEFECT
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.998810334074499	WITHOUT_CLASSIFICATION	0.001189665925500955	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999520377568388	WITHOUT_CLASSIFICATION	4.796224316128877E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9998767382859973	WITHOUT_CLASSIFICATION	1.2326171400255087E-4	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9998767382859973	WITHOUT_CLASSIFICATION	1.2326171400255087E-4	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9998767382859973	WITHOUT_CLASSIFICATION	1.2326171400255087E-4	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998720338908962	WITHOUT_CLASSIFICATION	1.2796610910387792E-4	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996677730113412	WITHOUT_CLASSIFICATION	3.3222698865883663E-4	DEFECT
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9997830656691916	WITHOUT_CLASSIFICATION	2.1693433080845252E-4	DEFECT
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999391103204498	WITHOUT_CLASSIFICATION	6.088967955026929E-5	DEFECT
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999615331857374	WITHOUT_CLASSIFICATION	3.8466814262533384E-5	DEFECT
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999342155045452	WITHOUT_CLASSIFICATION	6.578449545480035E-5	DEFECT
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9992312241151676	WITHOUT_CLASSIFICATION	7.687758848323018E-4	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9975558454495346	WITHOUT_CLASSIFICATION	0.0024441545504654246	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9997560507887329	WITHOUT_CLASSIFICATION	2.4394921126698197E-4	DEFECT
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999850753840999	WITHOUT_CLASSIFICATION	1.4924615900059177E-5	DEFECT
reset buffer	WITHOUT_CLASSIFICATION	0.9998972153035791	WITHOUT_CLASSIFICATION	1.0278469642081507E-4	DEFECT
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9998410089384681	WITHOUT_CLASSIFICATION	1.5899106153189472E-4	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9208629176244781	WITHOUT_CLASSIFICATION	0.07913708237552186	DEFECT
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9997512832457321	WITHOUT_CLASSIFICATION	2.4871675426784876E-4	DEFECT
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999084398954465	WITHOUT_CLASSIFICATION	9.156010455343375E-5	DEFECT
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999331273279395	WITHOUT_CLASSIFICATION	6.687267206054856E-5	DEFECT
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998360381437649	WITHOUT_CLASSIFICATION	1.6396185623506927E-4	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999503952565933	WITHOUT_CLASSIFICATION	4.960474340669813E-5	DEFECT
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9996228202624489	WITHOUT_CLASSIFICATION	3.771797375511812E-4	DEFECT
FIXME: This is a system error based on errno	DEFECT	0.9430334116338865	WITHOUT_CLASSIFICATION	0.056966588366113506	DEFECT
TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].	DEFECT	0.8946736590402182	DEFECT	0.10532634095978186	WITHOUT_CLASSIFICATION
TODO: make sure it's really safe to not to copy it	DEFECT	0.7237629450456567	WITHOUT_CLASSIFICATION	0.27623705495434325	DEFECT
TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.	DEFECT	0.9992932383493451	DEFECT	7.067616506548024E-4	WITHOUT_CLASSIFICATION
FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe	DEFECT	0.930268905054169	DEFECT	0.06973109494583095	WITHOUT_CLASSIFICATION
dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812	DEFECT	0.9802279146486891	WITHOUT_CLASSIFICATION	0.019772085351311027	DEFECT
FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.	DEFECT	0.965549461466053	WITHOUT_CLASSIFICATION	0.03445053853394696	DEFECT
TODO: need to isolate the "current" thread from class creation	DEFECT	0.7793421311588788	WITHOUT_CLASSIFICATION	0.22065786884112115	DEFECT
FIXME: not correct exception	DEFECT	0.9372096128776496	WITHOUT_CLASSIFICATION	0.06279038712235041	DEFECT
XXX actually only on windows...	DEFECT	0.9969874987891394	WITHOUT_CLASSIFICATION	0.0030125012108605867	DEFECT
Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?	DEFECT	0.9981530575767841	WITHOUT_CLASSIFICATION	0.0018469424232159864	DEFECT
FIXME can't use static; would interfere with other runtimes in the same JVM	DEFECT	0.7617912476541344	WITHOUT_CLASSIFICATION	0.2382087523458655	DEFECT
TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close	DEFECT	0.9575691587090472	WITHOUT_CLASSIFICATION	0.04243084129095264	DEFECT
TODO: This is an freopen in MRI, this is close, but not quite the same	DEFECT	0.9160520394036168	DEFECT	0.08394796059638315	WITHOUT_CLASSIFICATION
TODO: sys fail	DEFECT	0.9407124765762489	WITHOUT_CLASSIFICATION	0.059287523423751175	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9858834164891384	WITHOUT_CLASSIFICATION	0.014116583510861577	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9858834164891384	WITHOUT_CLASSIFICATION	0.014116583510861577	DEFECT
FIXME: check how ruby 1.9 handles this	DEFECT	0.9937025587847854	WITHOUT_CLASSIFICATION	0.0062974412152145415	DEFECT
FIXME: MRI has special case for constants here	DEFECT	0.9984640781273324	WITHOUT_CLASSIFICATION	0.0015359218726675545	DEFECT
FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.	DEFECT	0.9624491766194406	WITHOUT_CLASSIFICATION	0.037550823380559366	DEFECT
ENEBO: Very wrong	DEFECT	0.9994121995791823	WITHOUT_CLASSIFICATION	5.878004208178708E-4	DEFECT
ENEBO: Very wrong	DEFECT	0.9994121995791823	WITHOUT_CLASSIFICATION	5.878004208178708E-4	DEFECT
synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code	DEFECT	0.9801304072123119	WITHOUT_CLASSIFICATION	0.01986959278768808	DEFECT
FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...	DEFECT	0.9917408131350646	WITHOUT_CLASSIFICATION	0.00825918686493531	DEFECT
FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.	DEFECT	0.9682626507043832	WITHOUT_CLASSIFICATION	0.0317373492956168	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.8333835658820966	WITHOUT_CLASSIFICATION	0.16661643411790344	DEFECT
TODO: take BigDecimal.mode into account.	DEFECT	0.8676106017247327	WITHOUT_CLASSIFICATION	0.13238939827526724	DEFECT
TODO: full-precision divmod is 1000x slower than MRI!	DEFECT	0.7120932891319142	WITHOUT_CLASSIFICATION	0.28790671086808595	DEFECT
TODO: proper sign	DEFECT	0.9303137351549284	WITHOUT_CLASSIFICATION	0.06968626484507154	DEFECT
FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.	DEFECT	0.7991977818821833	DEFECT	0.20080221811781673	WITHOUT_CLASSIFICATION
FIXME: -x flag not supported case 'x' : break;	DEFECT	0.9461947630599918	WITHOUT_CLASSIFICATION	0.05380523694000811	DEFECT
FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.	DEFECT	0.6116422256270747	WITHOUT_CLASSIFICATION	0.38835777437292524	DEFECT
FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);	DEFECT	0.8736811830803696	WITHOUT_CLASSIFICATION	0.12631881691963043	DEFECT
FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);	DEFECT	0.7334429626973702	WITHOUT_CLASSIFICATION	0.26655703730262986	DEFECT
TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";	DEFECT	0.5711113357818934	DEFECT	0.4288886642181066	WITHOUT_CLASSIFICATION
TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet	DEFECT	0.9528978235315712	WITHOUT_CLASSIFICATION	0.04710217646842882	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
FIXME: this should reset to what it was before	DEFECT	0.9531686909573237	WITHOUT_CLASSIFICATION	0.04683130904267634	DEFECT
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.9312396200972182	WITHOUT_CLASSIFICATION	0.06876037990278186	DEFECT
SSS FIXME: Incorect!	DEFECT	0.9966580683554087	WITHOUT_CLASSIFICATION	0.003341931644591332	DEFECT
SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.	DEFECT	0.994255664956808	WITHOUT_CLASSIFICATION	0.005744335043192116	DEFECT
SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later	DEFECT	0.9755130713793883	WITHOUT_CLASSIFICATION	0.024486928620611838	DEFECT
IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!	DEFECT	0.9999331438824066	WITHOUT_CLASSIFICATION	6.685611759332719E-5	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.989135265588411	WITHOUT_CLASSIFICATION	0.010864734411588918	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.989135265588411	WITHOUT_CLASSIFICATION	0.010864734411588918	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9871922520289508	WITHOUT_CLASSIFICATION	0.012807747971049341	DEFECT
SSS FIXME: Verify semantics of this instruction	DEFECT	0.9896612269420051	WITHOUT_CLASSIFICATION	0.010338773057994804	DEFECT
The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?	DEFECT	0.8324285914118141	WITHOUT_CLASSIFICATION	0.16757140858818587	DEFECT
SSS FIXME: For constant arrays, we should never get here!	DEFECT	0.9867493966834785	WITHOUT_CLASSIFICATION	0.013250603316521647	DEFECT
FIXME: This is wrong	DEFECT	0.8825199080367941	WITHOUT_CLASSIFICATION	0.11748009196320591	DEFECT
FIXME: may need to broaden for IPV6 IP address strings	DEFECT	0.9820779955628989	WITHOUT_CLASSIFICATION	0.017922004437101163	DEFECT
XXX Wrong, but will have to do for now	DEFECT	0.9998925866403856	WITHOUT_CLASSIFICATION	1.0741335961433614E-4	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.5503207281791723	DEFECT	0.4496792718208277	WITHOUT_CLASSIFICATION
FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();	DEFECT	0.9982662846988198	WITHOUT_CLASSIFICATION	0.0017337153011801835	DEFECT
If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).	DEFECT	0.9995874475864509	WITHOUT_CLASSIFICATION	4.1255241354909964E-4	DEFECT
FIXME: Broken but behaving	DEFECT	0.7155804428970546	DEFECT	0.2844195571029455	WITHOUT_CLASSIFICATION
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7993861984074088	WITHOUT_CLASSIFICATION	0.20061380159259123	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7993861984074088	WITHOUT_CLASSIFICATION	0.20061380159259123	DEFECT
FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";	DEFECT	0.9332101085279431	WITHOUT_CLASSIFICATION	0.06678989147205698	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!	DEFECT	0.9954220305007596	WITHOUT_CLASSIFICATION	0.004577969499240449	DEFECT
MRI 1.8 behavior: this combination of flags is not allowed	DEFECT	0.9937729157421177	WITHOUT_CLASSIFICATION	0.0062270842578823005	DEFECT
FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?	DEFECT	0.6015889614975569	DEFECT	0.39841103850244314	WITHOUT_CLASSIFICATION
TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.	DEFECT	0.9430618674270363	DEFECT	0.05693813257296366	WITHOUT_CLASSIFICATION
This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"	DEFECT	0.998207643392172	WITHOUT_CLASSIFICATION	0.0017923566078279247	DEFECT
We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff	DEFECT	0.8892177475042949	WITHOUT_CLASSIFICATION	0.11078225249570517	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.9871922520289508	WITHOUT_CLASSIFICATION	0.012807747971049341	DEFECT
This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.	DEFECT	0.9901391108013707	WITHOUT_CLASSIFICATION	0.009860889198629215	DEFECT
FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.	DEFECT	0.9663411842407643	WITHOUT_CLASSIFICATION	0.03365881575923567	DEFECT
SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!	DEFECT	0.5215085593968857	DEFECT	0.4784914406031144	WITHOUT_CLASSIFICATION
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.8333835658820966	WITHOUT_CLASSIFICATION	0.16661643411790344	DEFECT
TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";	DEFECT	0.9567945109936358	DEFECT	0.043205489006364284	WITHOUT_CLASSIFICATION
FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not	DEFECT	0.8446279770651918	DEFECT	0.1553720229348083	WITHOUT_CLASSIFICATION
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.9312396200972182	WITHOUT_CLASSIFICATION	0.06876037990278186	DEFECT
zero args with block FIXME: omit args index; subtract one from normal block index	DEFECT	0.9992029066243652	WITHOUT_CLASSIFICATION	7.970933756348612E-4	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
FIXME: Broken but behaving	DEFECT	0.7155804428970546	DEFECT	0.2844195571029455	WITHOUT_CLASSIFICATION
TODO: we loose encoding information here, fix it	DEFECT	0.5369084524783274	DEFECT	0.4630915475216725	WITHOUT_CLASSIFICATION
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
TODO: don't require pop	DEFECT	0.9258195629314915	WITHOUT_CLASSIFICATION	0.07418043706850856	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.5503207281791723	DEFECT	0.4496792718208277	WITHOUT_CLASSIFICATION
vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue	DEFECT	0.9779483095961945	WITHOUT_CLASSIFICATION	0.02205169040380545	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7993861984074088	WITHOUT_CLASSIFICATION	0.20061380159259123	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.7993861984074088	WITHOUT_CLASSIFICATION	0.20061380159259123	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.9999305993384553	WITHOUT_CLASSIFICATION	6.940066154473243E-5	DEFECT
TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).	DEFECT	0.8356543679732643	WITHOUT_CLASSIFICATION	0.16434563202673566	DEFECT
